<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1142" onload="init(evt)" viewBox="0 0 1200 1142" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1142" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1125.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1125.00"> </text><svg id="frames" x="10" width="1180" total_samples="244901"><g><title>[[heap]] (46 samples, 0.02%)</title><rect x="0.0163%" y="1061" width="0.0188%" height="15" fill="rgb(227,0,7)" fg:x="40" fg:w="46"/><text x="0.2663%" y="1071.50"></text></g><g><title>__memcpy_avx_unaligned_erms (435 samples, 0.18%)</title><rect x="0.0412%" y="1045" width="0.1776%" height="15" fill="rgb(217,0,24)" fg:x="101" fg:w="435"/><text x="0.2912%" y="1055.50"></text></g><g><title>[anon] (873 samples, 0.36%)</title><rect x="0.0408%" y="1061" width="0.3565%" height="15" fill="rgb(221,193,54)" fg:x="100" fg:w="873"/><text x="0.2908%" y="1071.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (434 samples, 0.18%)</title><rect x="0.2201%" y="1045" width="0.1772%" height="15" fill="rgb(248,212,6)" fg:x="539" fg:w="434"/><text x="0.4701%" y="1055.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (1,998 samples, 0.82%)</title><rect x="0.3998%" y="1045" width="0.8158%" height="15" fill="rgb(208,68,35)" fg:x="979" fg:w="1998"/><text x="0.6498%" y="1055.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (99 samples, 0.04%)</title><rect x="1.2156%" y="1045" width="0.0404%" height="15" fill="rgb(232,128,0)" fg:x="2977" fg:w="99"/><text x="1.4656%" y="1055.50"></text></g><g><title>__memcpy_avx_unaligned_erms (119 samples, 0.05%)</title><rect x="1.2707%" y="1045" width="0.0486%" height="15" fill="rgb(207,160,47)" fg:x="3112" fg:w="119"/><text x="1.5207%" y="1055.50"></text></g><g><title>_int_free (50 samples, 0.02%)</title><rect x="1.3205%" y="1045" width="0.0204%" height="15" fill="rgb(228,23,34)" fg:x="3234" fg:w="50"/><text x="1.5705%" y="1055.50"></text></g><g><title>_int_malloc (49 samples, 0.02%)</title><rect x="1.3410%" y="1045" width="0.0200%" height="15" fill="rgb(218,30,26)" fg:x="3284" fg:w="49"/><text x="1.5910%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::GcRecord&gt; (239 samples, 0.10%)</title><rect x="1.3618%" y="1045" width="0.0976%" height="15" fill="rgb(220,122,19)" fg:x="3335" fg:w="239"/><text x="1.6118%" y="1055.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_instance_dump (37 samples, 0.02%)</title><rect x="2.1331%" y="1013" width="0.0151%" height="15" fill="rgb(250,228,42)" fg:x="5224" fg:w="37"/><text x="2.3831%" y="1023.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (37 samples, 0.02%)</title><rect x="2.1331%" y="997" width="0.0151%" height="15" fill="rgb(240,193,28)" fg:x="5224" fg:w="37"/><text x="2.3831%" y="1007.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (37 samples, 0.02%)</title><rect x="2.1331%" y="981" width="0.0151%" height="15" fill="rgb(216,20,37)" fg:x="5224" fg:w="37"/><text x="2.3831%" y="991.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (37 samples, 0.02%)</title><rect x="2.1331%" y="965" width="0.0151%" height="15" fill="rgb(206,188,39)" fg:x="5224" fg:w="37"/><text x="2.3831%" y="975.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (42 samples, 0.02%)</title><rect x="2.1331%" y="1029" width="0.0171%" height="15" fill="rgb(217,207,13)" fg:x="5224" fg:w="42"/><text x="2.3831%" y="1039.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (1,693 samples, 0.69%)</title><rect x="1.4594%" y="1045" width="0.6913%" height="15" fill="rgb(231,73,38)" fg:x="3574" fg:w="1693"/><text x="1.7094%" y="1055.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (1,066 samples, 0.44%)</title><rect x="2.1507%" y="1045" width="0.4353%" height="15" fill="rgb(225,20,46)" fg:x="5267" fg:w="1066"/><text x="2.4007%" y="1055.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (1,066 samples, 0.44%)</title><rect x="2.1507%" y="1029" width="0.4353%" height="15" fill="rgb(210,31,41)" fg:x="5267" fg:w="1066"/><text x="2.4007%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (240 samples, 0.10%)</title><rect x="2.4879%" y="1013" width="0.0980%" height="15" fill="rgb(221,200,47)" fg:x="6093" fg:w="240"/><text x="2.7379%" y="1023.50"></text></g><g><title>core::ptr::write (240 samples, 0.10%)</title><rect x="2.4879%" y="997" width="0.0980%" height="15" fill="rgb(226,26,5)" fg:x="6093" fg:w="240"/><text x="2.7379%" y="1007.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (1,035 samples, 0.42%)</title><rect x="2.5859%" y="1045" width="0.4226%" height="15" fill="rgb(249,33,26)" fg:x="6333" fg:w="1035"/><text x="2.8359%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,035 samples, 0.42%)</title><rect x="2.5859%" y="1029" width="0.4226%" height="15" fill="rgb(235,183,28)" fg:x="6333" fg:w="1035"/><text x="2.8359%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,035 samples, 0.42%)</title><rect x="2.5859%" y="1013" width="0.4226%" height="15" fill="rgb(221,5,38)" fg:x="6333" fg:w="1035"/><text x="2.8359%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,035 samples, 0.42%)</title><rect x="2.5859%" y="997" width="0.4226%" height="15" fill="rgb(247,18,42)" fg:x="6333" fg:w="1035"/><text x="2.8359%" y="1007.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (530 samples, 0.22%)</title><rect x="2.7921%" y="981" width="0.2164%" height="15" fill="rgb(241,131,45)" fg:x="6838" fg:w="530"/><text x="3.0421%" y="991.50"></text></g><g><title>[unknown] (6,404 samples, 2.61%)</title><rect x="0.3998%" y="1061" width="2.6149%" height="15" fill="rgb(249,31,29)" fg:x="979" fg:w="6404"/><text x="0.6498%" y="1071.50">[u..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.01%)</title><rect x="3.0229%" y="741" width="0.0102%" height="15" fill="rgb(225,111,53)" fg:x="7403" fg:w="25"/><text x="3.2729%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (25 samples, 0.01%)</title><rect x="3.0229%" y="725" width="0.0102%" height="15" fill="rgb(238,160,17)" fg:x="7403" fg:w="25"/><text x="3.2729%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder::start_recorder::{{closure}}&gt; (26 samples, 0.01%)</title><rect x="3.0229%" y="837" width="0.0106%" height="15" fill="rgb(214,148,48)" fg:x="7403" fg:w="26"/><text x="3.2729%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder&gt; (26 samples, 0.01%)</title><rect x="3.0229%" y="821" width="0.0106%" height="15" fill="rgb(232,36,49)" fg:x="7403" fg:w="26"/><text x="3.2729%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;ahash::hash_map::AHashMap&lt;u64,alloc::string::String&gt;&gt; (26 samples, 0.01%)</title><rect x="3.0229%" y="805" width="0.0106%" height="15" fill="rgb(209,103,24)" fg:x="7403" fg:w="26"/><text x="3.2729%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (26 samples, 0.01%)</title><rect x="3.0229%" y="789" width="0.0106%" height="15" fill="rgb(229,88,8)" fg:x="7403" fg:w="26"/><text x="3.2729%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (26 samples, 0.01%)</title><rect x="3.0229%" y="773" width="0.0106%" height="15" fill="rgb(213,181,19)" fg:x="7403" fg:w="26"/><text x="3.2729%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (26 samples, 0.01%)</title><rect x="3.0229%" y="757" width="0.0106%" height="15" fill="rgb(254,191,54)" fg:x="7403" fg:w="26"/><text x="3.2729%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,075 samples, 0.44%)</title><rect x="3.0367%" y="789" width="0.4390%" height="15" fill="rgb(241,83,37)" fg:x="7437" fg:w="1075"/><text x="3.2867%" y="799.50"></text></g><g><title>core::ptr::read (1,069 samples, 0.44%)</title><rect x="3.0392%" y="773" width="0.4365%" height="15" fill="rgb(233,36,39)" fg:x="7443" fg:w="1069"/><text x="3.2892%" y="783.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12,678 samples, 5.18%)</title><rect x="3.7056%" y="773" width="5.1768%" height="15" fill="rgb(226,3,54)" fg:x="9075" fg:w="12678"/><text x="3.9556%" y="783.50">__memc..</text></g><g><title>__GI___munmap (31 samples, 0.01%)</title><rect x="11.1939%" y="741" width="0.0127%" height="15" fill="rgb(245,192,40)" fg:x="27414" fg:w="31"/><text x="11.4439%" y="751.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (31 samples, 0.01%)</title><rect x="11.1939%" y="725" width="0.0127%" height="15" fill="rgb(238,167,29)" fg:x="27414" fg:w="31"/><text x="11.4439%" y="735.50"></text></g><g><title>do_syscall_64 (31 samples, 0.01%)</title><rect x="11.1939%" y="709" width="0.0127%" height="15" fill="rgb(232,182,51)" fg:x="27414" fg:w="31"/><text x="11.4439%" y="719.50"></text></g><g><title>__x64_sys_munmap (31 samples, 0.01%)</title><rect x="11.1939%" y="693" width="0.0127%" height="15" fill="rgb(231,60,39)" fg:x="27414" fg:w="31"/><text x="11.4439%" y="703.50"></text></g><g><title>__vm_munmap (31 samples, 0.01%)</title><rect x="11.1939%" y="677" width="0.0127%" height="15" fill="rgb(208,69,12)" fg:x="27414" fg:w="31"/><text x="11.4439%" y="687.50"></text></g><g><title>__do_munmap (31 samples, 0.01%)</title><rect x="11.1939%" y="661" width="0.0127%" height="15" fill="rgb(235,93,37)" fg:x="27414" fg:w="31"/><text x="11.4439%" y="671.50"></text></g><g><title>unmap_region (31 samples, 0.01%)</title><rect x="11.1939%" y="645" width="0.0127%" height="15" fill="rgb(213,116,39)" fg:x="27414" fg:w="31"/><text x="11.4439%" y="655.50"></text></g><g><title>unmap_vmas (30 samples, 0.01%)</title><rect x="11.1943%" y="629" width="0.0122%" height="15" fill="rgb(222,207,29)" fg:x="27415" fg:w="30"/><text x="11.4443%" y="639.50"></text></g><g><title>unmap_single_vma (30 samples, 0.01%)</title><rect x="11.1943%" y="613" width="0.0122%" height="15" fill="rgb(206,96,30)" fg:x="27415" fg:w="30"/><text x="11.4443%" y="623.50"></text></g><g><title>unmap_page_range (30 samples, 0.01%)</title><rect x="11.1943%" y="597" width="0.0122%" height="15" fill="rgb(218,138,4)" fg:x="27415" fg:w="30"/><text x="11.4443%" y="607.50"></text></g><g><title>zap_pmd_range.isra.0 (30 samples, 0.01%)</title><rect x="11.1943%" y="581" width="0.0122%" height="15" fill="rgb(250,191,14)" fg:x="27415" fg:w="30"/><text x="11.4443%" y="591.50"></text></g><g><title>zap_pte_range (30 samples, 0.01%)</title><rect x="11.1943%" y="565" width="0.0122%" height="15" fill="rgb(239,60,40)" fg:x="27415" fg:w="30"/><text x="11.4443%" y="575.50"></text></g><g><title>__free (1,106 samples, 0.45%)</title><rect x="11.1449%" y="757" width="0.4516%" height="15" fill="rgb(206,27,48)" fg:x="27294" fg:w="1106"/><text x="11.3949%" y="767.50"></text></g><g><title>_int_free (955 samples, 0.39%)</title><rect x="11.2066%" y="741" width="0.3900%" height="15" fill="rgb(225,35,8)" fg:x="27445" fg:w="955"/><text x="11.4566%" y="751.50"></text></g><g><title>malloc_consolidate (197 samples, 0.08%)</title><rect x="11.5161%" y="725" width="0.0804%" height="15" fill="rgb(250,213,24)" fg:x="28203" fg:w="197"/><text x="11.7661%" y="735.50"></text></g><g><title>unlink_chunk.constprop.0 (51 samples, 0.02%)</title><rect x="11.5757%" y="709" width="0.0208%" height="15" fill="rgb(247,123,22)" fg:x="28349" fg:w="51"/><text x="11.8257%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::GcRecord&gt; (367 samples, 0.15%)</title><rect x="11.6141%" y="757" width="0.1499%" height="15" fill="rgb(231,138,38)" fg:x="28443" fg:w="367"/><text x="11.8641%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::ArrayValue&gt; (40 samples, 0.02%)</title><rect x="11.7476%" y="741" width="0.0163%" height="15" fill="rgb(231,145,46)" fg:x="28770" fg:w="40"/><text x="11.9976%" y="751.50"></text></g><g><title>hprof_slurp::result_recorder::ArrayCounter::add_elements_from_array (62 samples, 0.03%)</title><rect x="11.7643%" y="757" width="0.0253%" height="15" fill="rgb(251,118,11)" fg:x="28811" fg:w="62"/><text x="12.0143%" y="767.50"></text></g><g><title>hprof_slurp::result_recorder::ClassInstanceCounter::add_instance (2,599 samples, 1.06%)</title><rect x="11.7897%" y="757" width="1.0612%" height="15" fill="rgb(217,147,25)" fg:x="28873" fg:w="2599"/><text x="12.0397%" y="767.50"></text></g><g><title>ahash::operations::folded_multiply (749 samples, 0.31%)</title><rect x="12.8513%" y="693" width="0.3058%" height="15" fill="rgb(247,81,37)" fg:x="31473" fg:w="749"/><text x="13.1013%" y="703.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (604 samples, 0.25%)</title><rect x="12.9105%" y="677" width="0.2466%" height="15" fill="rgb(209,12,38)" fg:x="31618" fg:w="604"/><text x="13.1605%" y="687.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1,241 samples, 0.51%)</title><rect x="12.8513%" y="709" width="0.5067%" height="15" fill="rgb(227,1,9)" fg:x="31473" fg:w="1241"/><text x="13.1013%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (492 samples, 0.20%)</title><rect x="13.1572%" y="693" width="0.2009%" height="15" fill="rgb(248,47,43)" fg:x="32222" fg:w="492"/><text x="13.4072%" y="703.50"></text></g><g><title>&lt;hprof_slurp::gc_record::FieldType as core::hash::Hash&gt;::hash (54 samples, 0.02%)</title><rect x="13.3581%" y="709" width="0.0220%" height="15" fill="rgb(221,10,30)" fg:x="32714" fg:w="54"/><text x="13.6081%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (54 samples, 0.02%)</title><rect x="13.3581%" y="693" width="0.0220%" height="15" fill="rgb(210,229,1)" fg:x="32714" fg:w="54"/><text x="13.6081%" y="703.50"></text></g><g><title>core::hash::Hasher::write_isize (54 samples, 0.02%)</title><rect x="13.3581%" y="677" width="0.0220%" height="15" fill="rgb(222,148,37)" fg:x="32714" fg:w="54"/><text x="13.6081%" y="687.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (54 samples, 0.02%)</title><rect x="13.3581%" y="661" width="0.0220%" height="15" fill="rgb(234,67,33)" fg:x="32714" fg:w="54"/><text x="13.6081%" y="671.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (54 samples, 0.02%)</title><rect x="13.3581%" y="645" width="0.0220%" height="15" fill="rgb(247,98,35)" fg:x="32714" fg:w="54"/><text x="13.6081%" y="655.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (54 samples, 0.02%)</title><rect x="13.3581%" y="629" width="0.0220%" height="15" fill="rgb(247,138,52)" fg:x="32714" fg:w="54"/><text x="13.6081%" y="639.50"></text></g><g><title>ahash::operations::folded_multiply (53 samples, 0.02%)</title><rect x="13.3585%" y="613" width="0.0216%" height="15" fill="rgb(213,79,30)" fg:x="32715" fg:w="53"/><text x="13.6085%" y="623.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (53 samples, 0.02%)</title><rect x="13.3585%" y="597" width="0.0216%" height="15" fill="rgb(246,177,23)" fg:x="32715" fg:w="53"/><text x="13.6085%" y="607.50"></text></g><g><title>hashbrown::map::make_insert_hash (2,223 samples, 0.91%)</title><rect x="12.8513%" y="725" width="0.9077%" height="15" fill="rgb(230,62,27)" fg:x="31473" fg:w="2223"/><text x="13.1013%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (928 samples, 0.38%)</title><rect x="13.3801%" y="709" width="0.3789%" height="15" fill="rgb(216,154,8)" fg:x="32768" fg:w="928"/><text x="13.6301%" y="719.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (928 samples, 0.38%)</title><rect x="13.3801%" y="693" width="0.3789%" height="15" fill="rgb(244,35,45)" fg:x="32768" fg:w="928"/><text x="13.6301%" y="703.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (928 samples, 0.38%)</title><rect x="13.3801%" y="677" width="0.3789%" height="15" fill="rgb(251,115,12)" fg:x="32768" fg:w="928"/><text x="13.6301%" y="687.50"></text></g><g><title>ahash::operations::folded_multiply (915 samples, 0.37%)</title><rect x="13.3854%" y="661" width="0.3736%" height="15" fill="rgb(240,54,50)" fg:x="32781" fg:w="915"/><text x="13.6354%" y="671.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (496 samples, 0.20%)</title><rect x="13.5565%" y="645" width="0.2025%" height="15" fill="rgb(233,84,52)" fg:x="33200" fg:w="496"/><text x="13.8065%" y="655.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (967 samples, 0.39%)</title><rect x="16.1755%" y="661" width="0.3949%" height="15" fill="rgb(207,117,47)" fg:x="39614" fg:w="967"/><text x="16.4255%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,355 samples, 0.55%)</title><rect x="16.0322%" y="677" width="0.5533%" height="15" fill="rgb(249,43,39)" fg:x="39263" fg:w="1355"/><text x="16.2822%" y="687.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (37 samples, 0.02%)</title><rect x="16.5704%" y="661" width="0.0151%" height="15" fill="rgb(209,38,44)" fg:x="40581" fg:w="37"/><text x="16.8204%" y="671.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (38 samples, 0.02%)</title><rect x="16.5855%" y="677" width="0.0155%" height="15" fill="rgb(236,212,23)" fg:x="40618" fg:w="38"/><text x="16.8355%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,010 samples, 0.82%)</title><rect x="15.9579%" y="709" width="0.8207%" height="15" fill="rgb(242,79,21)" fg:x="39081" fg:w="2010"/><text x="16.2079%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,010 samples, 0.82%)</title><rect x="15.9579%" y="693" width="0.8207%" height="15" fill="rgb(211,96,35)" fg:x="39081" fg:w="2010"/><text x="16.2079%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (419 samples, 0.17%)</title><rect x="16.6075%" y="677" width="0.1711%" height="15" fill="rgb(253,215,40)" fg:x="40672" fg:w="419"/><text x="16.8575%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (419 samples, 0.17%)</title><rect x="16.6075%" y="661" width="0.1711%" height="15" fill="rgb(211,81,21)" fg:x="40672" fg:w="419"/><text x="16.8575%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (419 samples, 0.17%)</title><rect x="16.6075%" y="645" width="0.1711%" height="15" fill="rgb(208,190,38)" fg:x="40672" fg:w="419"/><text x="16.8575%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (38 samples, 0.02%)</title><rect x="16.9693%" y="661" width="0.0155%" height="15" fill="rgb(235,213,38)" fg:x="41558" fg:w="38"/><text x="17.2193%" y="671.50"></text></g><g><title>hashbrown::raw::h2 (83 samples, 0.03%)</title><rect x="16.9848%" y="661" width="0.0339%" height="15" fill="rgb(237,122,38)" fg:x="41596" fg:w="83"/><text x="17.2348%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (861 samples, 0.35%)</title><rect x="17.0187%" y="661" width="0.3516%" height="15" fill="rgb(244,218,35)" fg:x="41679" fg:w="861"/><text x="17.2687%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (861 samples, 0.35%)</title><rect x="17.0187%" y="645" width="0.3516%" height="15" fill="rgb(240,68,47)" fg:x="41679" fg:w="861"/><text x="17.2687%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (861 samples, 0.35%)</title><rect x="17.0187%" y="629" width="0.3516%" height="15" fill="rgb(210,16,53)" fg:x="41679" fg:w="861"/><text x="17.2687%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1,949 samples, 0.80%)</title><rect x="16.7798%" y="709" width="0.7958%" height="15" fill="rgb(235,124,12)" fg:x="41094" fg:w="1949"/><text x="17.0298%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1,949 samples, 0.80%)</title><rect x="16.7798%" y="693" width="0.7958%" height="15" fill="rgb(224,169,11)" fg:x="41094" fg:w="1949"/><text x="17.0298%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1,949 samples, 0.80%)</title><rect x="16.7798%" y="677" width="0.7958%" height="15" fill="rgb(250,166,2)" fg:x="41094" fg:w="1949"/><text x="17.0298%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (503 samples, 0.21%)</title><rect x="17.3703%" y="661" width="0.2054%" height="15" fill="rgb(242,216,29)" fg:x="42540" fg:w="503"/><text x="17.6203%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (503 samples, 0.21%)</title><rect x="17.3703%" y="645" width="0.2054%" height="15" fill="rgb(230,116,27)" fg:x="42540" fg:w="503"/><text x="17.6203%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (503 samples, 0.21%)</title><rect x="17.3703%" y="629" width="0.2054%" height="15" fill="rgb(228,99,48)" fg:x="42540" fg:w="503"/><text x="17.6203%" y="639.50"></text></g><g><title>core::core_arch::simd::i8x16::new (503 samples, 0.21%)</title><rect x="17.3703%" y="613" width="0.2054%" height="15" fill="rgb(253,11,6)" fg:x="42540" fg:w="503"/><text x="17.6203%" y="623.50"></text></g><g><title>&lt;hprof_slurp::gc_record::FieldType as core::cmp::PartialEq&gt;::eq (78 samples, 0.03%)</title><rect x="17.5757%" y="693" width="0.0318%" height="15" fill="rgb(247,143,39)" fg:x="43043" fg:w="78"/><text x="17.8257%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (11,766 samples, 4.80%)</title><rect x="12.8509%" y="757" width="4.8044%" height="15" fill="rgb(236,97,10)" fg:x="31472" fg:w="11766"/><text x="13.1009%" y="767.50">std::c..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (11,766 samples, 4.80%)</title><rect x="12.8509%" y="741" width="4.8044%" height="15" fill="rgb(233,208,19)" fg:x="31472" fg:w="11766"/><text x="13.1009%" y="751.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9,542 samples, 3.90%)</title><rect x="13.7590%" y="725" width="3.8963%" height="15" fill="rgb(216,164,2)" fg:x="33696" fg:w="9542"/><text x="14.0090%" y="735.50">hash..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (195 samples, 0.08%)</title><rect x="17.5757%" y="709" width="0.0796%" height="15" fill="rgb(220,129,5)" fg:x="43043" fg:w="195"/><text x="17.8257%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (117 samples, 0.05%)</title><rect x="17.6075%" y="693" width="0.0478%" height="15" fill="rgb(242,17,10)" fg:x="43121" fg:w="117"/><text x="17.8575%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (34,724 samples, 14.18%)</title><rect x="3.4769%" y="789" width="14.1788%" height="15" fill="rgb(242,107,0)" fg:x="8515" fg:w="34724"/><text x="3.7269%" y="799.50">core::iter::traits::it..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (21,486 samples, 8.77%)</title><rect x="8.8824%" y="773" width="8.7733%" height="15" fill="rgb(251,28,31)" fg:x="21753" fg:w="21486"/><text x="9.1324%" y="783.50">hprof_slurp:..</text></g><g><title>free_pgtables (27 samples, 0.01%)</title><rect x="17.6582%" y="533" width="0.0110%" height="15" fill="rgb(233,223,10)" fg:x="43245" fg:w="27"/><text x="17.9082%" y="543.50"></text></g><g><title>free_unref_page_list (134 samples, 0.05%)</title><rect x="17.7047%" y="485" width="0.0547%" height="15" fill="rgb(215,21,27)" fg:x="43359" fg:w="134"/><text x="17.9547%" y="495.50"></text></g><g><title>free_unref_page_commit (121 samples, 0.05%)</title><rect x="17.7100%" y="469" width="0.0494%" height="15" fill="rgb(232,23,21)" fg:x="43372" fg:w="121"/><text x="17.9600%" y="479.50"></text></g><g><title>free_pcppages_bulk (110 samples, 0.04%)</title><rect x="17.7145%" y="453" width="0.0449%" height="15" fill="rgb(244,5,23)" fg:x="43383" fg:w="110"/><text x="17.9645%" y="463.50"></text></g><g><title>__free_one_page (81 samples, 0.03%)</title><rect x="17.7263%" y="437" width="0.0331%" height="15" fill="rgb(226,81,46)" fg:x="43412" fg:w="81"/><text x="17.9763%" y="447.50"></text></g><g><title>tlb_finish_mmu (239 samples, 0.10%)</title><rect x="17.6696%" y="533" width="0.0976%" height="15" fill="rgb(247,70,30)" fg:x="43273" fg:w="239"/><text x="17.9196%" y="543.50"></text></g><g><title>free_pages_and_swap_cache (230 samples, 0.09%)</title><rect x="17.6733%" y="517" width="0.0939%" height="15" fill="rgb(212,68,19)" fg:x="43282" fg:w="230"/><text x="17.9233%" y="527.50"></text></g><g><title>release_pages (206 samples, 0.08%)</title><rect x="17.6831%" y="501" width="0.0841%" height="15" fill="rgb(240,187,13)" fg:x="43306" fg:w="206"/><text x="17.9331%" y="511.50"></text></g><g><title>page_remove_rmap (30 samples, 0.01%)</title><rect x="17.7815%" y="469" width="0.0122%" height="15" fill="rgb(223,113,26)" fg:x="43547" fg:w="30"/><text x="18.0315%" y="479.50"></text></g><g><title>vm_normal_page (34 samples, 0.01%)</title><rect x="17.7937%" y="469" width="0.0139%" height="15" fill="rgb(206,192,2)" fg:x="43577" fg:w="34"/><text x="18.0437%" y="479.50"></text></g><g><title>__mod_lruvec_page_state (31 samples, 0.01%)</title><rect x="19.0444%" y="453" width="0.0127%" height="15" fill="rgb(241,108,4)" fg:x="46640" fg:w="31"/><text x="19.2944%" y="463.50"></text></g><g><title>__tlb_remove_page_size (57 samples, 0.02%)</title><rect x="19.0571%" y="453" width="0.0233%" height="15" fill="rgb(247,173,49)" fg:x="46671" fg:w="57"/><text x="19.3071%" y="463.50"></text></g><g><title>lock_page_memcg (34 samples, 0.01%)</title><rect x="19.0861%" y="453" width="0.0139%" height="15" fill="rgb(224,114,35)" fg:x="46742" fg:w="34"/><text x="19.3361%" y="463.50"></text></g><g><title>__mod_memcg_state.part.0 (76 samples, 0.03%)</title><rect x="19.5418%" y="389" width="0.0310%" height="15" fill="rgb(245,159,27)" fg:x="47858" fg:w="76"/><text x="19.7918%" y="399.50"></text></g><g><title>cgroup_rstat_updated (51 samples, 0.02%)</title><rect x="19.5520%" y="373" width="0.0208%" height="15" fill="rgb(245,172,44)" fg:x="47883" fg:w="51"/><text x="19.8020%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (417 samples, 0.17%)</title><rect x="19.4189%" y="405" width="0.1703%" height="15" fill="rgb(236,23,11)" fg:x="47557" fg:w="417"/><text x="19.6689%" y="415.50"></text></g><g><title>cgroup_rstat_updated (40 samples, 0.02%)</title><rect x="19.5728%" y="389" width="0.0163%" height="15" fill="rgb(205,117,38)" fg:x="47934" fg:w="40"/><text x="19.8228%" y="399.50"></text></g><g><title>__mod_memcg_state.part.0 (65 samples, 0.03%)</title><rect x="19.5891%" y="405" width="0.0265%" height="15" fill="rgb(237,72,25)" fg:x="47974" fg:w="65"/><text x="19.8391%" y="415.50"></text></g><g><title>__mod_node_page_state (64 samples, 0.03%)</title><rect x="19.6157%" y="405" width="0.0261%" height="15" fill="rgb(244,70,9)" fg:x="48039" fg:w="64"/><text x="19.8657%" y="415.50"></text></g><g><title>__mod_lruvec_state (630 samples, 0.26%)</title><rect x="19.3850%" y="421" width="0.2572%" height="15" fill="rgb(217,125,39)" fg:x="47474" fg:w="630"/><text x="19.6350%" y="431.50"></text></g><g><title>__mod_node_page_state (49 samples, 0.02%)</title><rect x="19.6504%" y="421" width="0.0200%" height="15" fill="rgb(235,36,10)" fg:x="48124" fg:w="49"/><text x="19.9004%" y="431.50"></text></g><g><title>__mod_lruvec_page_state (838 samples, 0.34%)</title><rect x="19.3356%" y="437" width="0.3422%" height="15" fill="rgb(251,123,47)" fg:x="47353" fg:w="838"/><text x="19.5856%" y="447.50"></text></g><g><title>lock_page_memcg (119 samples, 0.05%)</title><rect x="19.6863%" y="437" width="0.0486%" height="15" fill="rgb(221,13,13)" fg:x="48212" fg:w="119"/><text x="19.9363%" y="447.50"></text></g><g><title>rcu_read_unlock_strict (44 samples, 0.02%)</title><rect x="19.7349%" y="437" width="0.0180%" height="15" fill="rgb(238,131,9)" fg:x="48331" fg:w="44"/><text x="19.9849%" y="447.50"></text></g><g><title>page_remove_rmap (1,653 samples, 0.67%)</title><rect x="19.1000%" y="453" width="0.6750%" height="15" fill="rgb(211,50,8)" fg:x="46776" fg:w="1653"/><text x="19.3500%" y="463.50"></text></g><g><title>unlock_page_memcg (54 samples, 0.02%)</title><rect x="19.7529%" y="437" width="0.0220%" height="15" fill="rgb(245,182,24)" fg:x="48375" fg:w="54"/><text x="20.0029%" y="447.50"></text></g><g><title>__mod_lruvec_state (35 samples, 0.01%)</title><rect x="20.0893%" y="421" width="0.0143%" height="15" fill="rgb(242,14,37)" fg:x="49199" fg:w="35"/><text x="20.3393%" y="431.50"></text></g><g><title>__mod_zone_page_state (45 samples, 0.02%)</title><rect x="20.1036%" y="421" width="0.0184%" height="15" fill="rgb(246,228,12)" fg:x="49234" fg:w="45"/><text x="20.3536%" y="431.50"></text></g><g><title>__mod_memcg_state.part.0 (47 samples, 0.02%)</title><rect x="20.6565%" y="373" width="0.0192%" height="15" fill="rgb(213,55,15)" fg:x="50588" fg:w="47"/><text x="20.9065%" y="383.50"></text></g><g><title>cgroup_rstat_updated (33 samples, 0.01%)</title><rect x="20.6622%" y="357" width="0.0135%" height="15" fill="rgb(209,9,3)" fg:x="50602" fg:w="33"/><text x="20.9122%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (310 samples, 0.13%)</title><rect x="20.5561%" y="389" width="0.1266%" height="15" fill="rgb(230,59,30)" fg:x="50342" fg:w="310"/><text x="20.8061%" y="399.50"></text></g><g><title>__mod_memcg_state.part.0 (55 samples, 0.02%)</title><rect x="20.6826%" y="389" width="0.0225%" height="15" fill="rgb(209,121,21)" fg:x="50652" fg:w="55"/><text x="20.9326%" y="399.50"></text></g><g><title>__mod_lruvec_state (504 samples, 0.21%)</title><rect x="20.5303%" y="405" width="0.2058%" height="15" fill="rgb(220,109,13)" fg:x="50279" fg:w="504"/><text x="20.7803%" y="415.50"></text></g><g><title>__mod_node_page_state (76 samples, 0.03%)</title><rect x="20.7051%" y="389" width="0.0310%" height="15" fill="rgb(232,18,1)" fg:x="50707" fg:w="76"/><text x="20.9551%" y="399.50"></text></g><g><title>__mod_node_page_state (66 samples, 0.03%)</title><rect x="20.7459%" y="405" width="0.0269%" height="15" fill="rgb(215,41,42)" fg:x="50807" fg:w="66"/><text x="20.9959%" y="415.50"></text></g><g><title>__mod_zone_page_state (69 samples, 0.03%)</title><rect x="20.7729%" y="405" width="0.0282%" height="15" fill="rgb(224,123,36)" fg:x="50873" fg:w="69"/><text x="21.0229%" y="415.50"></text></g><g><title>free_pcp_prepare (30 samples, 0.01%)</title><rect x="20.8011%" y="405" width="0.0122%" height="15" fill="rgb(240,125,3)" fg:x="50942" fg:w="30"/><text x="21.0511%" y="415.50"></text></g><g><title>free_unref_page_commit (32 samples, 0.01%)</title><rect x="20.8133%" y="405" width="0.0131%" height="15" fill="rgb(205,98,50)" fg:x="50972" fg:w="32"/><text x="21.0633%" y="415.50"></text></g><g><title>free_pcp_prepare (121 samples, 0.05%)</title><rect x="20.9525%" y="389" width="0.0494%" height="15" fill="rgb(205,185,37)" fg:x="51313" fg:w="121"/><text x="21.2025%" y="399.50"></text></g><g><title>__free_one_page (2,010 samples, 0.82%)</title><rect x="21.3858%" y="357" width="0.8207%" height="15" fill="rgb(238,207,15)" fg:x="52374" fg:w="2010"/><text x="21.6358%" y="367.50"></text></g><g><title>__mod_zone_page_state (61 samples, 0.02%)</title><rect x="22.1816%" y="341" width="0.0249%" height="15" fill="rgb(213,199,42)" fg:x="54323" fg:w="61"/><text x="22.4316%" y="351.50"></text></g><g><title>__mod_zone_page_state (51 samples, 0.02%)</title><rect x="22.2065%" y="357" width="0.0208%" height="15" fill="rgb(235,201,11)" fg:x="54384" fg:w="51"/><text x="22.4565%" y="367.50"></text></g><g><title>free_unref_page_list (3,517 samples, 1.44%)</title><rect x="20.8264%" y="405" width="1.4361%" height="15" fill="rgb(207,46,11)" fg:x="51004" fg:w="3517"/><text x="21.0764%" y="415.50"></text></g><g><title>free_unref_page_commit (3,086 samples, 1.26%)</title><rect x="21.0024%" y="389" width="1.2601%" height="15" fill="rgb(241,35,35)" fg:x="51435" fg:w="3086"/><text x="21.2524%" y="399.50"></text></g><g><title>free_pcppages_bulk (2,834 samples, 1.16%)</title><rect x="21.1053%" y="373" width="1.1572%" height="15" fill="rgb(243,32,47)" fg:x="51687" fg:w="2834"/><text x="21.3553%" y="383.50"></text></g><g><title>_raw_spin_lock (86 samples, 0.04%)</title><rect x="22.2273%" y="357" width="0.0351%" height="15" fill="rgb(247,202,23)" fg:x="54435" fg:w="86"/><text x="22.4773%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath (86 samples, 0.04%)</title><rect x="22.2273%" y="341" width="0.0351%" height="15" fill="rgb(219,102,11)" fg:x="54435" fg:w="86"/><text x="22.4773%" y="351.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (86 samples, 0.04%)</title><rect x="22.2273%" y="325" width="0.0351%" height="15" fill="rgb(243,110,44)" fg:x="54435" fg:w="86"/><text x="22.4773%" y="335.50"></text></g><g><title>_raw_spin_lock_irqsave (163 samples, 0.07%)</title><rect x="22.2645%" y="389" width="0.0666%" height="15" fill="rgb(222,74,54)" fg:x="54526" fg:w="163"/><text x="22.5145%" y="399.50"></text></g><g><title>native_queued_spin_lock_slowpath (138 samples, 0.06%)</title><rect x="22.2747%" y="373" width="0.0563%" height="15" fill="rgb(216,99,12)" fg:x="54551" fg:w="138"/><text x="22.5247%" y="383.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (138 samples, 0.06%)</title><rect x="22.2747%" y="357" width="0.0563%" height="15" fill="rgb(226,22,26)" fg:x="54551" fg:w="138"/><text x="22.5247%" y="367.50"></text></g><g><title>lock_page_lruvec_irqsave (169 samples, 0.07%)</title><rect x="22.2625%" y="405" width="0.0690%" height="15" fill="rgb(217,163,10)" fg:x="54521" fg:w="169"/><text x="22.5125%" y="415.50"></text></g><g><title>mem_cgroup_uncharge_list (309 samples, 0.13%)</title><rect x="22.3315%" y="405" width="0.1262%" height="15" fill="rgb(213,25,53)" fg:x="54690" fg:w="309"/><text x="22.5815%" y="415.50"></text></g><g><title>uncharge_page (230 samples, 0.09%)</title><rect x="22.3637%" y="389" width="0.0939%" height="15" fill="rgb(252,105,26)" fg:x="54769" fg:w="230"/><text x="22.6137%" y="399.50"></text></g><g><title>mem_cgroup_update_lru_size (85 samples, 0.03%)</title><rect x="22.4576%" y="405" width="0.0347%" height="15" fill="rgb(220,39,43)" fg:x="54999" fg:w="85"/><text x="22.7076%" y="415.50"></text></g><g><title>free_pages_and_swap_cache (6,665 samples, 2.72%)</title><rect x="19.7762%" y="437" width="2.7215%" height="15" fill="rgb(229,68,48)" fg:x="48432" fg:w="6665"/><text x="20.0262%" y="447.50">fr..</text></g><g><title>release_pages (5,794 samples, 2.37%)</title><rect x="20.1318%" y="421" width="2.3659%" height="15" fill="rgb(252,8,32)" fg:x="49303" fg:w="5794"/><text x="20.3818%" y="431.50">re..</text></g><g><title>tlb_flush_mmu (6,669 samples, 2.72%)</title><rect x="19.7749%" y="453" width="2.7231%" height="15" fill="rgb(223,20,43)" fg:x="48429" fg:w="6669"/><text x="20.0249%" y="463.50">tl..</text></g><g><title>unlock_page_memcg (51 samples, 0.02%)</title><rect x="22.4981%" y="453" width="0.0208%" height="15" fill="rgb(229,81,49)" fg:x="55098" fg:w="51"/><text x="22.7481%" y="463.50"></text></g><g><title>unmap_region (11,997 samples, 4.90%)</title><rect x="17.6577%" y="549" width="4.8987%" height="15" fill="rgb(236,28,36)" fg:x="43244" fg:w="11997"/><text x="17.9077%" y="559.50">unmap_..</text></g><g><title>unmap_vmas (11,729 samples, 4.79%)</title><rect x="17.7672%" y="533" width="4.7893%" height="15" fill="rgb(249,185,26)" fg:x="43512" fg:w="11729"/><text x="18.0172%" y="543.50">unmap_..</text></g><g><title>unmap_single_vma (11,729 samples, 4.79%)</title><rect x="17.7672%" y="517" width="4.7893%" height="15" fill="rgb(249,174,33)" fg:x="43512" fg:w="11729"/><text x="18.0172%" y="527.50">unmap_..</text></g><g><title>unmap_page_range (11,729 samples, 4.79%)</title><rect x="17.7672%" y="501" width="4.7893%" height="15" fill="rgb(233,201,37)" fg:x="43512" fg:w="11729"/><text x="18.0172%" y="511.50">unmap_..</text></g><g><title>zap_pmd_range.isra.0 (11,728 samples, 4.79%)</title><rect x="17.7676%" y="485" width="4.7889%" height="15" fill="rgb(221,78,26)" fg:x="43513" fg:w="11728"/><text x="18.0176%" y="495.50">zap_pm..</text></g><g><title>zap_pte_range (11,630 samples, 4.75%)</title><rect x="17.8076%" y="469" width="4.7489%" height="15" fill="rgb(250,127,30)" fg:x="43611" fg:w="11630"/><text x="18.0576%" y="479.50">zap_pt..</text></g><g><title>vm_normal_page (92 samples, 0.04%)</title><rect x="22.5189%" y="453" width="0.0376%" height="15" fill="rgb(230,49,44)" fg:x="55149" fg:w="92"/><text x="22.7689%" y="463.50"></text></g><g><title>__do_munmap (12,002 samples, 4.90%)</title><rect x="17.6561%" y="565" width="4.9008%" height="15" fill="rgb(229,67,23)" fg:x="43240" fg:w="12002"/><text x="17.9061%" y="575.50">__do_m..</text></g><g><title>__GI___munmap (12,004 samples, 4.90%)</title><rect x="17.6557%" y="645" width="4.9016%" height="15" fill="rgb(249,83,47)" fg:x="43239" fg:w="12004"/><text x="17.9057%" y="655.50">__GI__..</text></g><g><title>entry_SYSCALL_64_after_hwframe (12,003 samples, 4.90%)</title><rect x="17.6561%" y="629" width="4.9012%" height="15" fill="rgb(215,43,3)" fg:x="43240" fg:w="12003"/><text x="17.9061%" y="639.50">entry_..</text></g><g><title>do_syscall_64 (12,003 samples, 4.90%)</title><rect x="17.6561%" y="613" width="4.9012%" height="15" fill="rgb(238,154,13)" fg:x="43240" fg:w="12003"/><text x="17.9061%" y="623.50">do_sys..</text></g><g><title>__x64_sys_munmap (12,003 samples, 4.90%)</title><rect x="17.6561%" y="597" width="4.9012%" height="15" fill="rgb(219,56,2)" fg:x="43240" fg:w="12003"/><text x="17.9061%" y="607.50">__x64_..</text></g><g><title>__vm_munmap (12,003 samples, 4.90%)</title><rect x="17.6561%" y="581" width="4.9012%" height="15" fill="rgb(233,0,4)" fg:x="43240" fg:w="12003"/><text x="17.9061%" y="591.50">__vm_m..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (47,814 samples, 19.52%)</title><rect x="3.0339%" y="837" width="19.5238%" height="15" fill="rgb(235,30,7)" fg:x="7430" fg:w="47814"/><text x="3.2839%" y="847.50">hprof_slurp::result_recorder::R..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (47,814 samples, 19.52%)</title><rect x="3.0339%" y="821" width="19.5238%" height="15" fill="rgb(250,79,13)" fg:x="7430" fg:w="47814"/><text x="3.2839%" y="831.50">core::iter::traits::iterator::I..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (47,814 samples, 19.52%)</title><rect x="3.0339%" y="805" width="19.5238%" height="15" fill="rgb(211,146,34)" fg:x="7430" fg:w="47814"/><text x="3.2839%" y="815.50">core::iter::traits::iterator::I..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;hprof_slurp::record::Record&gt;&gt; (12,005 samples, 4.90%)</title><rect x="17.6557%" y="789" width="4.9020%" height="15" fill="rgb(228,22,38)" fg:x="43239" fg:w="12005"/><text x="17.9057%" y="799.50">core::..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,005 samples, 4.90%)</title><rect x="17.6557%" y="773" width="4.9020%" height="15" fill="rgb(235,168,5)" fg:x="43239" fg:w="12005"/><text x="17.9057%" y="783.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;hprof_slurp::record::Record,alloc::alloc::Global&gt;&gt; (12,005 samples, 4.90%)</title><rect x="17.6557%" y="757" width="4.9020%" height="15" fill="rgb(221,155,16)" fg:x="43239" fg:w="12005"/><text x="17.9057%" y="767.50">core::..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,005 samples, 4.90%)</title><rect x="17.6557%" y="741" width="4.9020%" height="15" fill="rgb(215,215,53)" fg:x="43239" fg:w="12005"/><text x="17.9057%" y="751.50">&lt;&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;hprof_slurp::record::Record&gt;&gt; (12,005 samples, 4.90%)</title><rect x="17.6557%" y="725" width="4.9020%" height="15" fill="rgb(223,4,10)" fg:x="43239" fg:w="12005"/><text x="17.9057%" y="735.50">core::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,005 samples, 4.90%)</title><rect x="17.6557%" y="709" width="4.9020%" height="15" fill="rgb(234,103,6)" fg:x="43239" fg:w="12005"/><text x="17.9057%" y="719.50">&lt;alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12,005 samples, 4.90%)</title><rect x="17.6557%" y="693" width="4.9020%" height="15" fill="rgb(227,97,0)" fg:x="43239" fg:w="12005"/><text x="17.9057%" y="703.50">&lt;alloc..</text></g><g><title>alloc::alloc::dealloc (12,005 samples, 4.90%)</title><rect x="17.6557%" y="677" width="4.9020%" height="15" fill="rgb(234,150,53)" fg:x="43239" fg:w="12005"/><text x="17.9057%" y="687.50">alloc:..</text></g><g><title>__free (12,005 samples, 4.90%)</title><rect x="17.6557%" y="661" width="4.9020%" height="15" fill="rgb(228,201,54)" fg:x="43239" fg:w="12005"/><text x="17.9057%" y="671.50">__free</text></g><g><title>entry_SYSCALL_64_after_hwframe (27 samples, 0.01%)</title><rect x="22.5610%" y="725" width="0.0110%" height="15" fill="rgb(222,22,37)" fg:x="55252" fg:w="27"/><text x="22.8110%" y="735.50"></text></g><g><title>do_syscall_64 (27 samples, 0.01%)</title><rect x="22.5610%" y="709" width="0.0110%" height="15" fill="rgb(237,53,32)" fg:x="55252" fg:w="27"/><text x="22.8110%" y="719.50"></text></g><g><title>__x64_sys_futex (27 samples, 0.01%)</title><rect x="22.5610%" y="693" width="0.0110%" height="15" fill="rgb(233,25,53)" fg:x="55252" fg:w="27"/><text x="22.8110%" y="703.50"></text></g><g><title>do_futex (27 samples, 0.01%)</title><rect x="22.5610%" y="677" width="0.0110%" height="15" fill="rgb(210,40,34)" fg:x="55252" fg:w="27"/><text x="22.8110%" y="687.50"></text></g><g><title>futex_wait (26 samples, 0.01%)</title><rect x="22.5614%" y="661" width="0.0106%" height="15" fill="rgb(241,220,44)" fg:x="55253" fg:w="26"/><text x="22.8114%" y="671.50"></text></g><g><title>futex_wait_queue_me (25 samples, 0.01%)</title><rect x="22.5618%" y="645" width="0.0102%" height="15" fill="rgb(235,28,35)" fg:x="55254" fg:w="25"/><text x="22.8118%" y="655.50"></text></g><g><title>schedule (25 samples, 0.01%)</title><rect x="22.5618%" y="629" width="0.0102%" height="15" fill="rgb(210,56,17)" fg:x="55254" fg:w="25"/><text x="22.8118%" y="639.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (31 samples, 0.01%)</title><rect x="22.5597%" y="805" width="0.0127%" height="15" fill="rgb(224,130,29)" fg:x="55249" fg:w="31"/><text x="22.8097%" y="815.50"></text></g><g><title>std::thread::park (31 samples, 0.01%)</title><rect x="22.5597%" y="789" width="0.0127%" height="15" fill="rgb(235,212,8)" fg:x="55249" fg:w="31"/><text x="22.8097%" y="799.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (31 samples, 0.01%)</title><rect x="22.5597%" y="773" width="0.0127%" height="15" fill="rgb(223,33,50)" fg:x="55249" fg:w="31"/><text x="22.8097%" y="783.50"></text></g><g><title>std::sys::unix::futex::futex_wait (30 samples, 0.01%)</title><rect x="22.5601%" y="757" width="0.0122%" height="15" fill="rgb(219,149,13)" fg:x="55250" fg:w="30"/><text x="22.8101%" y="767.50"></text></g><g><title>syscall (30 samples, 0.01%)</title><rect x="22.5601%" y="741" width="0.0122%" height="15" fill="rgb(250,156,29)" fg:x="55250" fg:w="30"/><text x="22.8101%" y="751.50"></text></g><g><title>__GI___clone (47,900 samples, 19.56%)</title><rect x="3.0147%" y="1061" width="19.5589%" height="15" fill="rgb(216,193,19)" fg:x="7383" fg:w="47900"/><text x="3.2647%" y="1071.50">__GI___clone</text></g><g><title>start_thread (47,895 samples, 19.56%)</title><rect x="3.0167%" y="1045" width="19.5569%" height="15" fill="rgb(216,135,14)" fg:x="7388" fg:w="47895"/><text x="3.2667%" y="1055.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (47,880 samples, 19.55%)</title><rect x="3.0229%" y="1029" width="19.5508%" height="15" fill="rgb(241,47,5)" fg:x="7403" fg:w="47880"/><text x="3.2729%" y="1039.50">std::sys::unix::thread::Thread:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (47,880 samples, 19.55%)</title><rect x="3.0229%" y="1013" width="19.5508%" height="15" fill="rgb(233,42,35)" fg:x="7403" fg:w="47880"/><text x="3.2729%" y="1023.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (47,880 samples, 19.55%)</title><rect x="3.0229%" y="997" width="19.5508%" height="15" fill="rgb(231,13,6)" fg:x="7403" fg:w="47880"/><text x="3.2729%" y="1007.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (47,880 samples, 19.55%)</title><rect x="3.0229%" y="981" width="19.5508%" height="15" fill="rgb(207,181,40)" fg:x="7403" fg:w="47880"/><text x="3.2729%" y="991.50">core::ops::function::FnOnce::ca..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (47,880 samples, 19.55%)</title><rect x="3.0229%" y="965" width="19.5508%" height="15" fill="rgb(254,173,49)" fg:x="7403" fg:w="47880"/><text x="3.2729%" y="975.50">std::thread::Builder::spawn_unc..</text></g><g><title>std::panic::catch_unwind (47,880 samples, 19.55%)</title><rect x="3.0229%" y="949" width="19.5508%" height="15" fill="rgb(221,1,38)" fg:x="7403" fg:w="47880"/><text x="3.2729%" y="959.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (47,880 samples, 19.55%)</title><rect x="3.0229%" y="933" width="19.5508%" height="15" fill="rgb(206,124,46)" fg:x="7403" fg:w="47880"/><text x="3.2729%" y="943.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (47,880 samples, 19.55%)</title><rect x="3.0229%" y="917" width="19.5508%" height="15" fill="rgb(249,21,11)" fg:x="7403" fg:w="47880"/><text x="3.2729%" y="927.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (47,880 samples, 19.55%)</title><rect x="3.0229%" y="901" width="19.5508%" height="15" fill="rgb(222,201,40)" fg:x="7403" fg:w="47880"/><text x="3.2729%" y="911.50">&lt;core::panic::unwind_safe::Asse..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (47,880 samples, 19.55%)</title><rect x="3.0229%" y="885" width="19.5508%" height="15" fill="rgb(235,61,29)" fg:x="7403" fg:w="47880"/><text x="3.2729%" y="895.50">std::thread::Builder::spawn_unc..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (47,880 samples, 19.55%)</title><rect x="3.0229%" y="869" width="19.5508%" height="15" fill="rgb(219,207,3)" fg:x="7403" fg:w="47880"/><text x="3.2729%" y="879.50">std::sys_common::backtrace::__r..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start_recorder::{{closure}} (47,880 samples, 19.55%)</title><rect x="3.0229%" y="853" width="19.5508%" height="15" fill="rgb(222,56,46)" fg:x="7403" fg:w="47880"/><text x="3.2729%" y="863.50">hprof_slurp::result_recorder::R..</text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (36 samples, 0.01%)</title><rect x="22.5589%" y="837" width="0.0147%" height="15" fill="rgb(239,76,54)" fg:x="55247" fg:w="36"/><text x="22.8089%" y="847.50"></text></g><g><title>std::sync::mpsc::stream::Packet&lt;T&gt;::recv (34 samples, 0.01%)</title><rect x="22.5597%" y="821" width="0.0139%" height="15" fill="rgb(231,124,27)" fg:x="55249" fg:w="34"/><text x="22.8097%" y="831.50"></text></g><g><title>__irqentry_text_end (52 samples, 0.02%)</title><rect x="22.5810%" y="1061" width="0.0212%" height="15" fill="rgb(249,195,6)" fg:x="55301" fg:w="52"/><text x="22.8310%" y="1071.50"></text></g><g><title>asm_exc_page_fault (6,983 samples, 2.85%)</title><rect x="22.7757%" y="453" width="2.8514%" height="15" fill="rgb(237,174,47)" fg:x="55778" fg:w="6983"/><text x="23.0257%" y="463.50">as..</text></g><g><title>copy_page_to_iter (262 samples, 0.11%)</title><rect x="25.6279%" y="453" width="0.1070%" height="15" fill="rgb(206,201,31)" fg:x="62763" fg:w="262"/><text x="25.8779%" y="463.50"></text></g><g><title>__read_end_io (84 samples, 0.03%)</title><rect x="28.8688%" y="213" width="0.0343%" height="15" fill="rgb(231,57,52)" fg:x="70700" fg:w="84"/><text x="29.1188%" y="223.50"></text></g><g><title>bio_endio (117 samples, 0.05%)</title><rect x="28.8672%" y="245" width="0.0478%" height="15" fill="rgb(248,177,22)" fg:x="70696" fg:w="117"/><text x="29.1172%" y="255.50"></text></g><g><title>mpage_end_io (113 samples, 0.05%)</title><rect x="28.8688%" y="229" width="0.0461%" height="15" fill="rgb(215,211,37)" fg:x="70700" fg:w="113"/><text x="29.1188%" y="239.50"></text></g><g><title>unlock_page (29 samples, 0.01%)</title><rect x="28.9031%" y="213" width="0.0118%" height="15" fill="rgb(241,128,51)" fg:x="70784" fg:w="29"/><text x="29.1531%" y="223.50"></text></g><g><title>blk_update_request (123 samples, 0.05%)</title><rect x="28.8651%" y="261" width="0.0502%" height="15" fill="rgb(227,165,31)" fg:x="70691" fg:w="123"/><text x="29.1151%" y="271.50"></text></g><g><title>nvme_complete_rq (133 samples, 0.05%)</title><rect x="28.8615%" y="293" width="0.0543%" height="15" fill="rgb(228,167,24)" fg:x="70682" fg:w="133"/><text x="29.1115%" y="303.50"></text></g><g><title>blk_mq_end_request (133 samples, 0.05%)</title><rect x="28.8615%" y="277" width="0.0543%" height="15" fill="rgb(228,143,12)" fg:x="70682" fg:w="133"/><text x="29.1115%" y="287.50"></text></g><g><title>nvme_pci_complete_rq (160 samples, 0.07%)</title><rect x="28.8602%" y="309" width="0.0653%" height="15" fill="rgb(249,149,8)" fg:x="70679" fg:w="160"/><text x="29.1102%" y="319.50"></text></g><g><title>__handle_irq_event_percpu (180 samples, 0.07%)</title><rect x="28.8525%" y="357" width="0.0735%" height="15" fill="rgb(243,35,44)" fg:x="70660" fg:w="180"/><text x="29.1025%" y="367.50"></text></g><g><title>nvme_irq (177 samples, 0.07%)</title><rect x="28.8537%" y="341" width="0.0723%" height="15" fill="rgb(246,89,9)" fg:x="70663" fg:w="177"/><text x="29.1037%" y="351.50"></text></g><g><title>nvme_process_cq (177 samples, 0.07%)</title><rect x="28.8537%" y="325" width="0.0723%" height="15" fill="rgb(233,213,13)" fg:x="70663" fg:w="177"/><text x="29.1037%" y="335.50"></text></g><g><title>handle_irq_event (181 samples, 0.07%)</title><rect x="28.8525%" y="373" width="0.0739%" height="15" fill="rgb(233,141,41)" fg:x="70660" fg:w="181"/><text x="29.1025%" y="383.50"></text></g><g><title>__common_interrupt (192 samples, 0.08%)</title><rect x="28.8484%" y="405" width="0.0784%" height="15" fill="rgb(239,167,4)" fg:x="70650" fg:w="192"/><text x="29.0984%" y="415.50"></text></g><g><title>handle_edge_irq (189 samples, 0.08%)</title><rect x="28.8496%" y="389" width="0.0772%" height="15" fill="rgb(209,217,16)" fg:x="70653" fg:w="189"/><text x="29.0996%" y="399.50"></text></g><g><title>asm_common_interrupt (194 samples, 0.08%)</title><rect x="28.8480%" y="437" width="0.0792%" height="15" fill="rgb(219,88,35)" fg:x="70649" fg:w="194"/><text x="29.0980%" y="447.50"></text></g><g><title>common_interrupt (194 samples, 0.08%)</title><rect x="28.8480%" y="421" width="0.0792%" height="15" fill="rgb(220,193,23)" fg:x="70649" fg:w="194"/><text x="29.0980%" y="431.50"></text></g><g><title>__read_end_io (43 samples, 0.02%)</title><rect x="29.0889%" y="165" width="0.0176%" height="15" fill="rgb(230,90,52)" fg:x="71239" fg:w="43"/><text x="29.3389%" y="175.50"></text></g><g><title>nvme_complete_rq (78 samples, 0.03%)</title><rect x="29.0840%" y="245" width="0.0318%" height="15" fill="rgb(252,106,19)" fg:x="71227" fg:w="78"/><text x="29.3340%" y="255.50"></text></g><g><title>blk_mq_end_request (78 samples, 0.03%)</title><rect x="29.0840%" y="229" width="0.0318%" height="15" fill="rgb(206,74,20)" fg:x="71227" fg:w="78"/><text x="29.3340%" y="239.50"></text></g><g><title>blk_update_request (76 samples, 0.03%)</title><rect x="29.0848%" y="213" width="0.0310%" height="15" fill="rgb(230,138,44)" fg:x="71229" fg:w="76"/><text x="29.3348%" y="223.50"></text></g><g><title>bio_endio (71 samples, 0.03%)</title><rect x="29.0869%" y="197" width="0.0290%" height="15" fill="rgb(235,182,43)" fg:x="71234" fg:w="71"/><text x="29.3369%" y="207.50"></text></g><g><title>mpage_end_io (66 samples, 0.03%)</title><rect x="29.0889%" y="181" width="0.0269%" height="15" fill="rgb(242,16,51)" fg:x="71239" fg:w="66"/><text x="29.3389%" y="191.50"></text></g><g><title>handle_irq_event (107 samples, 0.04%)</title><rect x="29.0787%" y="325" width="0.0437%" height="15" fill="rgb(248,9,4)" fg:x="71214" fg:w="107"/><text x="29.3287%" y="335.50"></text></g><g><title>__handle_irq_event_percpu (107 samples, 0.04%)</title><rect x="29.0787%" y="309" width="0.0437%" height="15" fill="rgb(210,31,22)" fg:x="71214" fg:w="107"/><text x="29.3287%" y="319.50"></text></g><g><title>nvme_irq (105 samples, 0.04%)</title><rect x="29.0795%" y="293" width="0.0429%" height="15" fill="rgb(239,54,39)" fg:x="71216" fg:w="105"/><text x="29.3295%" y="303.50"></text></g><g><title>nvme_process_cq (105 samples, 0.04%)</title><rect x="29.0795%" y="277" width="0.0429%" height="15" fill="rgb(230,99,41)" fg:x="71216" fg:w="105"/><text x="29.3295%" y="287.50"></text></g><g><title>nvme_pci_complete_rq (94 samples, 0.04%)</title><rect x="29.0840%" y="261" width="0.0384%" height="15" fill="rgb(253,106,12)" fg:x="71227" fg:w="94"/><text x="29.3340%" y="271.50"></text></g><g><title>handle_edge_irq (112 samples, 0.05%)</title><rect x="29.0783%" y="341" width="0.0457%" height="15" fill="rgb(213,46,41)" fg:x="71213" fg:w="112"/><text x="29.3283%" y="351.50"></text></g><g><title>asm_common_interrupt (113 samples, 0.05%)</title><rect x="29.0783%" y="389" width="0.0461%" height="15" fill="rgb(215,133,35)" fg:x="71213" fg:w="113"/><text x="29.3283%" y="399.50"></text></g><g><title>common_interrupt (113 samples, 0.05%)</title><rect x="29.0783%" y="373" width="0.0461%" height="15" fill="rgb(213,28,5)" fg:x="71213" fg:w="113"/><text x="29.3283%" y="383.50"></text></g><g><title>__common_interrupt (113 samples, 0.05%)</title><rect x="29.0783%" y="357" width="0.0461%" height="15" fill="rgb(215,77,49)" fg:x="71213" fg:w="113"/><text x="29.3283%" y="367.50"></text></g><g><title>down_read_trylock (158 samples, 0.06%)</title><rect x="29.1293%" y="389" width="0.0645%" height="15" fill="rgb(248,100,22)" fg:x="71338" fg:w="158"/><text x="29.3793%" y="399.50"></text></g><g><title>find_vma (95 samples, 0.04%)</title><rect x="29.1938%" y="389" width="0.0388%" height="15" fill="rgb(208,67,9)" fg:x="71496" fg:w="95"/><text x="29.4438%" y="399.50"></text></g><g><title>vmacache_find (63 samples, 0.03%)</title><rect x="29.2069%" y="373" width="0.0257%" height="15" fill="rgb(219,133,21)" fg:x="71528" fg:w="63"/><text x="29.4569%" y="383.50"></text></g><g><title>__count_memcg_events (62 samples, 0.03%)</title><rect x="29.3098%" y="373" width="0.0253%" height="15" fill="rgb(246,46,29)" fg:x="71780" fg:w="62"/><text x="29.5598%" y="383.50"></text></g><g><title>cgroup_rstat_updated (28 samples, 0.01%)</title><rect x="29.3237%" y="357" width="0.0114%" height="15" fill="rgb(246,185,52)" fg:x="71814" fg:w="28"/><text x="29.5737%" y="367.50"></text></g><g><title>_raw_spin_lock (122 samples, 0.05%)</title><rect x="29.5785%" y="341" width="0.0498%" height="15" fill="rgb(252,136,11)" fg:x="72438" fg:w="122"/><text x="29.8285%" y="351.50"></text></g><g><title>__pte_alloc (28 samples, 0.01%)</title><rect x="29.7602%" y="325" width="0.0114%" height="15" fill="rgb(219,138,53)" fg:x="72883" fg:w="28"/><text x="30.0102%" y="335.50"></text></g><g><title>pte_alloc_one (25 samples, 0.01%)</title><rect x="29.7614%" y="309" width="0.0102%" height="15" fill="rgb(211,51,23)" fg:x="72886" fg:w="25"/><text x="30.0114%" y="319.50"></text></g><g><title>clear_page_erms (26 samples, 0.01%)</title><rect x="29.9394%" y="261" width="0.0106%" height="15" fill="rgb(247,221,28)" fg:x="73322" fg:w="26"/><text x="30.1894%" y="271.50"></text></g><g><title>get_page_from_freelist (39 samples, 0.02%)</title><rect x="29.9386%" y="277" width="0.0159%" height="15" fill="rgb(251,222,45)" fg:x="73320" fg:w="39"/><text x="30.1886%" y="287.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (48 samples, 0.02%)</title><rect x="29.9382%" y="293" width="0.0196%" height="15" fill="rgb(217,162,53)" fg:x="73319" fg:w="48"/><text x="30.1882%" y="303.50"></text></g><g><title>__next_zones_zonelist (112 samples, 0.05%)</title><rect x="29.9644%" y="293" width="0.0457%" height="15" fill="rgb(229,93,14)" fg:x="73383" fg:w="112"/><text x="30.2144%" y="303.50"></text></g><g><title>__inc_numa_state (46 samples, 0.02%)</title><rect x="30.1134%" y="277" width="0.0188%" height="15" fill="rgb(209,67,49)" fg:x="73748" fg:w="46"/><text x="30.3634%" y="287.50"></text></g><g><title>__read_end_io (25 samples, 0.01%)</title><rect x="31.3261%" y="37" width="0.0102%" height="15" fill="rgb(213,87,29)" fg:x="76718" fg:w="25"/><text x="31.5761%" y="47.50"></text></g><g><title>blk_update_request (37 samples, 0.02%)</title><rect x="31.3233%" y="85" width="0.0151%" height="15" fill="rgb(205,151,52)" fg:x="76711" fg:w="37"/><text x="31.5733%" y="95.50"></text></g><g><title>bio_endio (33 samples, 0.01%)</title><rect x="31.3249%" y="69" width="0.0135%" height="15" fill="rgb(253,215,39)" fg:x="76715" fg:w="33"/><text x="31.5749%" y="79.50"></text></g><g><title>mpage_end_io (30 samples, 0.01%)</title><rect x="31.3261%" y="53" width="0.0122%" height="15" fill="rgb(221,220,41)" fg:x="76718" fg:w="30"/><text x="31.5761%" y="63.50"></text></g><g><title>nvme_complete_rq (42 samples, 0.02%)</title><rect x="31.3216%" y="117" width="0.0171%" height="15" fill="rgb(218,133,21)" fg:x="76707" fg:w="42"/><text x="31.5716%" y="127.50"></text></g><g><title>blk_mq_end_request (42 samples, 0.02%)</title><rect x="31.3216%" y="101" width="0.0171%" height="15" fill="rgb(221,193,43)" fg:x="76707" fg:w="42"/><text x="31.5716%" y="111.50"></text></g><g><title>__handle_irq_event_percpu (50 samples, 0.02%)</title><rect x="31.3200%" y="181" width="0.0204%" height="15" fill="rgb(240,128,52)" fg:x="76703" fg:w="50"/><text x="31.5700%" y="191.50"></text></g><g><title>nvme_irq (47 samples, 0.02%)</title><rect x="31.3212%" y="165" width="0.0192%" height="15" fill="rgb(253,114,12)" fg:x="76706" fg:w="47"/><text x="31.5712%" y="175.50"></text></g><g><title>nvme_process_cq (47 samples, 0.02%)</title><rect x="31.3212%" y="149" width="0.0192%" height="15" fill="rgb(215,223,47)" fg:x="76706" fg:w="47"/><text x="31.5712%" y="159.50"></text></g><g><title>nvme_pci_complete_rq (46 samples, 0.02%)</title><rect x="31.3216%" y="133" width="0.0188%" height="15" fill="rgb(248,225,23)" fg:x="76707" fg:w="46"/><text x="31.5716%" y="143.50"></text></g><g><title>asm_common_interrupt (54 samples, 0.02%)</title><rect x="31.3188%" y="261" width="0.0220%" height="15" fill="rgb(250,108,0)" fg:x="76700" fg:w="54"/><text x="31.5688%" y="271.50"></text></g><g><title>common_interrupt (54 samples, 0.02%)</title><rect x="31.3188%" y="245" width="0.0220%" height="15" fill="rgb(228,208,7)" fg:x="76700" fg:w="54"/><text x="31.5688%" y="255.50"></text></g><g><title>__common_interrupt (54 samples, 0.02%)</title><rect x="31.3188%" y="229" width="0.0220%" height="15" fill="rgb(244,45,10)" fg:x="76700" fg:w="54"/><text x="31.5688%" y="239.50"></text></g><g><title>handle_edge_irq (53 samples, 0.02%)</title><rect x="31.3192%" y="213" width="0.0216%" height="15" fill="rgb(207,125,25)" fg:x="76701" fg:w="53"/><text x="31.5692%" y="223.50"></text></g><g><title>handle_irq_event (51 samples, 0.02%)</title><rect x="31.3200%" y="197" width="0.0208%" height="15" fill="rgb(210,195,18)" fg:x="76703" fg:w="51"/><text x="31.5700%" y="207.50"></text></g><g><title>clear_page_erms (2,941 samples, 1.20%)</title><rect x="30.1424%" y="277" width="1.2009%" height="15" fill="rgb(249,80,12)" fg:x="73819" fg:w="2941"/><text x="30.3924%" y="287.50"></text></g><g><title>kernel_init_free_pages (36 samples, 0.01%)</title><rect x="31.3433%" y="277" width="0.0147%" height="15" fill="rgb(221,65,9)" fg:x="76760" fg:w="36"/><text x="31.5933%" y="287.50"></text></g><g><title>asm_common_interrupt (26 samples, 0.01%)</title><rect x="31.4899%" y="261" width="0.0106%" height="15" fill="rgb(235,49,36)" fg:x="77119" fg:w="26"/><text x="31.7399%" y="271.50"></text></g><g><title>common_interrupt (26 samples, 0.01%)</title><rect x="31.4899%" y="245" width="0.0106%" height="15" fill="rgb(225,32,20)" fg:x="77119" fg:w="26"/><text x="31.7399%" y="255.50"></text></g><g><title>__common_interrupt (26 samples, 0.01%)</title><rect x="31.4899%" y="229" width="0.0106%" height="15" fill="rgb(215,141,46)" fg:x="77119" fg:w="26"/><text x="31.7399%" y="239.50"></text></g><g><title>handle_edge_irq (25 samples, 0.01%)</title><rect x="31.4903%" y="213" width="0.0102%" height="15" fill="rgb(250,160,47)" fg:x="77120" fg:w="25"/><text x="31.7403%" y="223.50"></text></g><g><title>_raw_spin_lock (30 samples, 0.01%)</title><rect x="31.9006%" y="245" width="0.0122%" height="15" fill="rgb(216,222,40)" fg:x="78125" fg:w="30"/><text x="32.1506%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath (30 samples, 0.01%)</title><rect x="31.9006%" y="229" width="0.0122%" height="15" fill="rgb(234,217,39)" fg:x="78125" fg:w="30"/><text x="32.1506%" y="239.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (30 samples, 0.01%)</title><rect x="31.9006%" y="213" width="0.0122%" height="15" fill="rgb(207,178,40)" fg:x="78125" fg:w="30"/><text x="32.1506%" y="223.50"></text></g><g><title>rmqueue (1,366 samples, 0.56%)</title><rect x="31.3580%" y="277" width="0.5578%" height="15" fill="rgb(221,136,13)" fg:x="76796" fg:w="1366"/><text x="31.6080%" y="287.50"></text></g><g><title>rmqueue_bulk.constprop.0 (1,013 samples, 0.41%)</title><rect x="31.5021%" y="261" width="0.4136%" height="15" fill="rgb(249,199,10)" fg:x="77149" fg:w="1013"/><text x="31.7521%" y="271.50"></text></g><g><title>get_page_from_freelist (4,663 samples, 1.90%)</title><rect x="30.0125%" y="293" width="1.9040%" height="15" fill="rgb(249,222,13)" fg:x="73501" fg:w="4663"/><text x="30.2625%" y="303.50">g..</text></g><g><title>__alloc_pages (5,091 samples, 2.08%)</title><rect x="29.8561%" y="309" width="2.0788%" height="15" fill="rgb(244,185,38)" fg:x="73118" fg:w="5091"/><text x="30.1061%" y="319.50">_..</text></g><g><title>__next_zones_zonelist (37 samples, 0.02%)</title><rect x="31.9407%" y="309" width="0.0151%" height="15" fill="rgb(236,202,9)" fg:x="78223" fg:w="37"/><text x="32.1907%" y="319.50"></text></g><g><title>policy_nodemask (26 samples, 0.01%)</title><rect x="31.9652%" y="309" width="0.0106%" height="15" fill="rgb(250,229,37)" fg:x="78283" fg:w="26"/><text x="32.2152%" y="319.50"></text></g><g><title>alloc_pages_vma (5,413 samples, 2.21%)</title><rect x="29.7724%" y="325" width="2.2103%" height="15" fill="rgb(206,174,23)" fg:x="72913" fg:w="5413"/><text x="30.0224%" y="335.50">a..</text></g><g><title>cgroup_throttle_swaprate (152 samples, 0.06%)</title><rect x="31.9835%" y="325" width="0.0621%" height="15" fill="rgb(211,33,43)" fg:x="78328" fg:w="152"/><text x="32.2335%" y="335.50"></text></g><g><title>get_mem_cgroup_from_mm (40 samples, 0.02%)</title><rect x="32.0456%" y="325" width="0.0163%" height="15" fill="rgb(245,58,50)" fg:x="78480" fg:w="40"/><text x="32.2956%" y="335.50"></text></g><g><title>__lock_text_start (27 samples, 0.01%)</title><rect x="32.1746%" y="277" width="0.0110%" height="15" fill="rgb(244,68,36)" fg:x="78796" fg:w="27"/><text x="32.4246%" y="287.50"></text></g><g><title>__mod_zone_page_state (30 samples, 0.01%)</title><rect x="32.1906%" y="277" width="0.0122%" height="15" fill="rgb(232,229,15)" fg:x="78835" fg:w="30"/><text x="32.4406%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (133 samples, 0.05%)</title><rect x="32.4466%" y="245" width="0.0543%" height="15" fill="rgb(254,30,23)" fg:x="79462" fg:w="133"/><text x="32.6966%" y="255.50"></text></g><g><title>__mod_lruvec_state (203 samples, 0.08%)</title><rect x="32.4327%" y="261" width="0.0829%" height="15" fill="rgb(235,160,14)" fg:x="79428" fg:w="203"/><text x="32.6827%" y="271.50"></text></g><g><title>__mod_zone_page_state (28 samples, 0.01%)</title><rect x="32.5238%" y="261" width="0.0114%" height="15" fill="rgb(212,155,44)" fg:x="79651" fg:w="28"/><text x="32.7738%" y="271.50"></text></g><g><title>mem_cgroup_update_lru_size (33 samples, 0.01%)</title><rect x="32.5352%" y="261" width="0.0135%" height="15" fill="rgb(226,2,50)" fg:x="79679" fg:w="33"/><text x="32.7852%" y="271.50"></text></g><g><title>__pagevec_lru_add_fn (942 samples, 0.38%)</title><rect x="32.2028%" y="277" width="0.3846%" height="15" fill="rgb(234,177,6)" fg:x="78865" fg:w="942"/><text x="32.4528%" y="287.50"></text></g><g><title>page_mapping (95 samples, 0.04%)</title><rect x="32.5487%" y="261" width="0.0388%" height="15" fill="rgb(217,24,9)" fg:x="79712" fg:w="95"/><text x="32.7987%" y="271.50"></text></g><g><title>lock_page_lruvec_irqsave (94 samples, 0.04%)</title><rect x="32.5883%" y="277" width="0.0384%" height="15" fill="rgb(220,13,46)" fg:x="79809" fg:w="94"/><text x="32.8383%" y="287.50"></text></g><g><title>_raw_spin_lock_irqsave (81 samples, 0.03%)</title><rect x="32.5936%" y="261" width="0.0331%" height="15" fill="rgb(239,221,27)" fg:x="79822" fg:w="81"/><text x="32.8436%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (60 samples, 0.02%)</title><rect x="32.6022%" y="245" width="0.0245%" height="15" fill="rgb(222,198,25)" fg:x="79843" fg:w="60"/><text x="32.8522%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (60 samples, 0.02%)</title><rect x="32.6022%" y="229" width="0.0245%" height="15" fill="rgb(211,99,13)" fg:x="79843" fg:w="60"/><text x="32.8522%" y="239.50"></text></g><g><title>__pagevec_lru_add (1,370 samples, 0.56%)</title><rect x="32.1493%" y="293" width="0.5594%" height="15" fill="rgb(232,111,31)" fg:x="78734" fg:w="1370"/><text x="32.3993%" y="303.50"></text></g><g><title>release_pages (177 samples, 0.07%)</title><rect x="32.6365%" y="277" width="0.0723%" height="15" fill="rgb(245,82,37)" fg:x="79927" fg:w="177"/><text x="32.8865%" y="287.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1,574 samples, 0.64%)</title><rect x="32.0705%" y="325" width="0.6427%" height="15" fill="rgb(227,149,46)" fg:x="78541" fg:w="1574"/><text x="32.3205%" y="335.50"></text></g><g><title>lru_cache_add (1,562 samples, 0.64%)</title><rect x="32.0754%" y="309" width="0.6378%" height="15" fill="rgb(218,36,50)" fg:x="78553" fg:w="1562"/><text x="32.3254%" y="319.50"></text></g><g><title>asm_common_interrupt (29 samples, 0.01%)</title><rect x="32.8504%" y="293" width="0.0118%" height="15" fill="rgb(226,80,48)" fg:x="80451" fg:w="29"/><text x="33.1004%" y="303.50"></text></g><g><title>common_interrupt (29 samples, 0.01%)</title><rect x="32.8504%" y="277" width="0.0118%" height="15" fill="rgb(238,224,15)" fg:x="80451" fg:w="29"/><text x="33.1004%" y="287.50"></text></g><g><title>__common_interrupt (29 samples, 0.01%)</title><rect x="32.8504%" y="261" width="0.0118%" height="15" fill="rgb(241,136,10)" fg:x="80451" fg:w="29"/><text x="33.1004%" y="271.50"></text></g><g><title>handle_edge_irq (28 samples, 0.01%)</title><rect x="32.8508%" y="245" width="0.0114%" height="15" fill="rgb(208,32,45)" fg:x="80452" fg:w="28"/><text x="33.1008%" y="255.50"></text></g><g><title>handle_irq_event (27 samples, 0.01%)</title><rect x="32.8512%" y="229" width="0.0110%" height="15" fill="rgb(207,135,9)" fg:x="80453" fg:w="27"/><text x="33.1012%" y="239.50"></text></g><g><title>__handle_irq_event_percpu (27 samples, 0.01%)</title><rect x="32.8512%" y="213" width="0.0110%" height="15" fill="rgb(206,86,44)" fg:x="80453" fg:w="27"/><text x="33.1012%" y="223.50"></text></g><g><title>nvme_irq (27 samples, 0.01%)</title><rect x="32.8512%" y="197" width="0.0110%" height="15" fill="rgb(245,177,15)" fg:x="80453" fg:w="27"/><text x="33.1012%" y="207.50"></text></g><g><title>nvme_process_cq (27 samples, 0.01%)</title><rect x="32.8512%" y="181" width="0.0110%" height="15" fill="rgb(206,64,50)" fg:x="80453" fg:w="27"/><text x="33.1012%" y="191.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (767 samples, 0.31%)</title><rect x="32.8696%" y="293" width="0.3132%" height="15" fill="rgb(234,36,40)" fg:x="80498" fg:w="767"/><text x="33.1196%" y="303.50"></text></g><g><title>cgroup_rstat_updated (72 samples, 0.03%)</title><rect x="33.1534%" y="277" width="0.0294%" height="15" fill="rgb(213,64,8)" fg:x="81193" fg:w="72"/><text x="33.4034%" y="287.50"></text></g><g><title>arch_local_irq_enable (31 samples, 0.01%)</title><rect x="33.3657%" y="277" width="0.0127%" height="15" fill="rgb(210,75,36)" fg:x="81713" fg:w="31"/><text x="33.6157%" y="287.50"></text></g><g><title>page_counter_try_charge (76 samples, 0.03%)</title><rect x="33.3812%" y="277" width="0.0310%" height="15" fill="rgb(229,88,21)" fg:x="81751" fg:w="76"/><text x="33.6312%" y="287.50"></text></g><g><title>__mem_cgroup_charge (1,611 samples, 0.66%)</title><rect x="32.7581%" y="309" width="0.6578%" height="15" fill="rgb(252,204,47)" fg:x="80225" fg:w="1611"/><text x="33.0081%" y="319.50"></text></g><g><title>try_charge (552 samples, 0.23%)</title><rect x="33.1906%" y="293" width="0.2254%" height="15" fill="rgb(208,77,27)" fg:x="81284" fg:w="552"/><text x="33.4406%" y="303.50"></text></g><g><title>get_mem_cgroup_from_mm (268 samples, 0.11%)</title><rect x="33.4160%" y="309" width="0.1094%" height="15" fill="rgb(221,76,26)" fg:x="81836" fg:w="268"/><text x="33.6660%" y="319.50"></text></g><g><title>memcg_check_events (63 samples, 0.03%)</title><rect x="33.5282%" y="309" width="0.0257%" height="15" fill="rgb(225,139,18)" fg:x="82111" fg:w="63"/><text x="33.7782%" y="319.50"></text></g><g><title>rcu_read_unlock_strict (47 samples, 0.02%)</title><rect x="33.5540%" y="309" width="0.0192%" height="15" fill="rgb(230,137,11)" fg:x="82174" fg:w="47"/><text x="33.8040%" y="319.50"></text></g><g><title>mem_cgroup_charge (2,125 samples, 0.87%)</title><rect x="32.7132%" y="325" width="0.8677%" height="15" fill="rgb(212,28,1)" fg:x="80115" fg:w="2125"/><text x="32.9632%" y="335.50"></text></g><g><title>__mod_memcg_state.part.0 (29 samples, 0.01%)</title><rect x="33.6850%" y="261" width="0.0118%" height="15" fill="rgb(248,164,17)" fg:x="82495" fg:w="29"/><text x="33.9350%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (139 samples, 0.06%)</title><rect x="33.6450%" y="277" width="0.0568%" height="15" fill="rgb(222,171,42)" fg:x="82397" fg:w="139"/><text x="33.8950%" y="287.50"></text></g><g><title>__mod_node_page_state (93 samples, 0.04%)</title><rect x="33.7104%" y="277" width="0.0380%" height="15" fill="rgb(243,84,45)" fg:x="82557" fg:w="93"/><text x="33.9604%" y="287.50"></text></g><g><title>__mod_lruvec_state (276 samples, 0.11%)</title><rect x="33.6360%" y="293" width="0.1127%" height="15" fill="rgb(252,49,23)" fg:x="82375" fg:w="276"/><text x="33.8860%" y="303.50"></text></g><g><title>__mod_node_page_state (43 samples, 0.02%)</title><rect x="33.7512%" y="293" width="0.0176%" height="15" fill="rgb(215,19,7)" fg:x="82657" fg:w="43"/><text x="34.0012%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (414 samples, 0.17%)</title><rect x="33.6046%" y="309" width="0.1690%" height="15" fill="rgb(238,81,41)" fg:x="82298" fg:w="414"/><text x="33.8546%" y="319.50"></text></g><g><title>__page_set_anon_rmap (28 samples, 0.01%)</title><rect x="33.7761%" y="309" width="0.0114%" height="15" fill="rgb(210,199,37)" fg:x="82718" fg:w="28"/><text x="34.0261%" y="319.50"></text></g><g><title>page_add_new_anon_rmap (501 samples, 0.20%)</title><rect x="33.5858%" y="325" width="0.2046%" height="15" fill="rgb(244,192,49)" fg:x="82252" fg:w="501"/><text x="33.8358%" y="335.50"></text></g><g><title>pmd_page_vaddr (39 samples, 0.02%)</title><rect x="33.7953%" y="325" width="0.0159%" height="15" fill="rgb(226,211,11)" fg:x="82765" fg:w="39"/><text x="34.0453%" y="335.50"></text></g><g><title>pmd_pfn (31 samples, 0.01%)</title><rect x="33.8112%" y="325" width="0.0127%" height="15" fill="rgb(236,162,54)" fg:x="82804" fg:w="31"/><text x="34.0612%" y="335.50"></text></g><g><title>do_anonymous_page (10,320 samples, 4.21%)</title><rect x="29.6405%" y="341" width="4.2139%" height="15" fill="rgb(220,229,9)" fg:x="72590" fg:w="10320"/><text x="29.8905%" y="351.50">do_an..</text></g><g><title>pmd_page_vaddr (48 samples, 0.02%)</title><rect x="33.8725%" y="341" width="0.0196%" height="15" fill="rgb(250,87,22)" fg:x="82954" fg:w="48"/><text x="34.1225%" y="351.50"></text></g><g><title>pmd_val (31 samples, 0.01%)</title><rect x="33.8990%" y="341" width="0.0127%" height="15" fill="rgb(239,43,17)" fg:x="83019" fg:w="31"/><text x="34.1490%" y="351.50"></text></g><g><title>handle_pte_fault (10,773 samples, 4.40%)</title><rect x="29.5160%" y="357" width="4.3989%" height="15" fill="rgb(231,177,25)" fg:x="72285" fg:w="10773"/><text x="29.7660%" y="367.50">handl..</text></g><g><title>pmd_val (30 samples, 0.01%)</title><rect x="33.9162%" y="357" width="0.0122%" height="15" fill="rgb(219,179,1)" fg:x="83061" fg:w="30"/><text x="34.1662%" y="367.50"></text></g><g><title>__handle_mm_fault (11,287 samples, 4.61%)</title><rect x="29.3351%" y="373" width="4.6088%" height="15" fill="rgb(238,219,53)" fg:x="71842" fg:w="11287"/><text x="29.5851%" y="383.50">__han..</text></g><g><title>pud_val (38 samples, 0.02%)</title><rect x="33.9284%" y="357" width="0.0155%" height="15" fill="rgb(232,167,36)" fg:x="83091" fg:w="38"/><text x="34.1784%" y="367.50"></text></g><g><title>pud_val (32 samples, 0.01%)</title><rect x="33.9725%" y="373" width="0.0131%" height="15" fill="rgb(244,19,51)" fg:x="83199" fg:w="32"/><text x="34.2225%" y="383.50"></text></g><g><title>handle_mm_fault (11,658 samples, 4.76%)</title><rect x="29.2326%" y="389" width="4.7603%" height="15" fill="rgb(224,6,22)" fg:x="71591" fg:w="11658"/><text x="29.4826%" y="399.50">handle..</text></g><g><title>mem_cgroup_from_task (29 samples, 0.01%)</title><rect x="33.9929%" y="389" width="0.0118%" height="15" fill="rgb(224,145,5)" fg:x="83249" fg:w="29"/><text x="34.2429%" y="399.50"></text></g><g><title>up_read (167 samples, 0.07%)</title><rect x="34.0137%" y="389" width="0.0682%" height="15" fill="rgb(234,130,49)" fg:x="83300" fg:w="167"/><text x="34.2637%" y="399.50"></text></g><g><title>do_user_addr_fault (12,497 samples, 5.10%)</title><rect x="28.9827%" y="405" width="5.1029%" height="15" fill="rgb(254,6,2)" fg:x="70979" fg:w="12497"/><text x="29.2327%" y="415.50">do_use..</text></g><g><title>exc_page_fault (12,683 samples, 5.18%)</title><rect x="28.9313%" y="421" width="5.1788%" height="15" fill="rgb(208,96,46)" fg:x="70853" fg:w="12683"/><text x="29.1813%" y="431.50">exc_pa..</text></g><g><title>asm_exc_page_fault (12,707 samples, 5.19%)</title><rect x="28.9272%" y="437" width="5.1886%" height="15" fill="rgb(239,3,39)" fg:x="70843" fg:w="12707"/><text x="29.1772%" y="447.50">asm_ex..</text></g><g><title>copy_user_enhanced_fast_string (20,550 samples, 8.39%)</title><rect x="25.7349%" y="453" width="8.3911%" height="15" fill="rgb(233,210,1)" fg:x="63025" fg:w="20550"/><text x="25.9849%" y="463.50">copy_user_en..</text></g><g><title>error_entry (222 samples, 0.09%)</title><rect x="34.1264%" y="453" width="0.0906%" height="15" fill="rgb(244,137,37)" fg:x="83576" fg:w="222"/><text x="34.3764%" y="463.50"></text></g><g><title>xas_load (48 samples, 0.02%)</title><rect x="34.5499%" y="421" width="0.0196%" height="15" fill="rgb(240,136,2)" fg:x="84613" fg:w="48"/><text x="34.7999%" y="431.50"></text></g><g><title>filemap_get_read_batch (810 samples, 0.33%)</title><rect x="34.2416%" y="437" width="0.3307%" height="15" fill="rgb(239,18,37)" fg:x="83858" fg:w="810"/><text x="34.4916%" y="447.50"></text></g><g><title>clear_page_erms (35 samples, 0.01%)</title><rect x="34.8092%" y="309" width="0.0143%" height="15" fill="rgb(218,185,22)" fg:x="85248" fg:w="35"/><text x="35.0592%" y="319.50"></text></g><g><title>get_page_from_freelist (44 samples, 0.02%)</title><rect x="34.8084%" y="325" width="0.0180%" height="15" fill="rgb(225,218,4)" fg:x="85246" fg:w="44"/><text x="35.0584%" y="335.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (48 samples, 0.02%)</title><rect x="34.8075%" y="341" width="0.0196%" height="15" fill="rgb(230,182,32)" fg:x="85244" fg:w="48"/><text x="35.0575%" y="351.50"></text></g><g><title>__next_zones_zonelist (41 samples, 0.02%)</title><rect x="34.8324%" y="341" width="0.0167%" height="15" fill="rgb(242,56,43)" fg:x="85305" fg:w="41"/><text x="35.0824%" y="351.50"></text></g><g><title>__inc_numa_state (46 samples, 0.02%)</title><rect x="34.9415%" y="325" width="0.0188%" height="15" fill="rgb(233,99,24)" fg:x="85572" fg:w="46"/><text x="35.1915%" y="335.50"></text></g><g><title>nvme_complete_rq (26 samples, 0.01%)</title><rect x="36.0121%" y="165" width="0.0106%" height="15" fill="rgb(234,209,42)" fg:x="88194" fg:w="26"/><text x="36.2621%" y="175.50"></text></g><g><title>blk_mq_end_request (26 samples, 0.01%)</title><rect x="36.0121%" y="149" width="0.0106%" height="15" fill="rgb(227,7,12)" fg:x="88194" fg:w="26"/><text x="36.2621%" y="159.50"></text></g><g><title>blk_update_request (25 samples, 0.01%)</title><rect x="36.0125%" y="133" width="0.0102%" height="15" fill="rgb(245,203,43)" fg:x="88195" fg:w="25"/><text x="36.2625%" y="143.50"></text></g><g><title>bio_endio (25 samples, 0.01%)</title><rect x="36.0125%" y="117" width="0.0102%" height="15" fill="rgb(238,205,33)" fg:x="88195" fg:w="25"/><text x="36.2625%" y="127.50"></text></g><g><title>mpage_end_io (25 samples, 0.01%)</title><rect x="36.0125%" y="101" width="0.0102%" height="15" fill="rgb(231,56,7)" fg:x="88195" fg:w="25"/><text x="36.2625%" y="111.50"></text></g><g><title>asm_common_interrupt (31 samples, 0.01%)</title><rect x="36.0105%" y="309" width="0.0127%" height="15" fill="rgb(244,186,29)" fg:x="88190" fg:w="31"/><text x="36.2605%" y="319.50"></text></g><g><title>common_interrupt (31 samples, 0.01%)</title><rect x="36.0105%" y="293" width="0.0127%" height="15" fill="rgb(234,111,31)" fg:x="88190" fg:w="31"/><text x="36.2605%" y="303.50"></text></g><g><title>__common_interrupt (31 samples, 0.01%)</title><rect x="36.0105%" y="277" width="0.0127%" height="15" fill="rgb(241,149,10)" fg:x="88190" fg:w="31"/><text x="36.2605%" y="287.50"></text></g><g><title>handle_edge_irq (31 samples, 0.01%)</title><rect x="36.0105%" y="261" width="0.0127%" height="15" fill="rgb(249,206,44)" fg:x="88190" fg:w="31"/><text x="36.2605%" y="271.50"></text></g><g><title>handle_irq_event (30 samples, 0.01%)</title><rect x="36.0109%" y="245" width="0.0122%" height="15" fill="rgb(251,153,30)" fg:x="88191" fg:w="30"/><text x="36.2609%" y="255.50"></text></g><g><title>__handle_irq_event_percpu (30 samples, 0.01%)</title><rect x="36.0109%" y="229" width="0.0122%" height="15" fill="rgb(239,152,38)" fg:x="88191" fg:w="30"/><text x="36.2609%" y="239.50"></text></g><g><title>nvme_irq (29 samples, 0.01%)</title><rect x="36.0113%" y="213" width="0.0118%" height="15" fill="rgb(249,139,47)" fg:x="88192" fg:w="29"/><text x="36.2613%" y="223.50"></text></g><g><title>nvme_process_cq (29 samples, 0.01%)</title><rect x="36.0113%" y="197" width="0.0118%" height="15" fill="rgb(244,64,35)" fg:x="88192" fg:w="29"/><text x="36.2613%" y="207.50"></text></g><g><title>nvme_pci_complete_rq (27 samples, 0.01%)</title><rect x="36.0121%" y="181" width="0.0110%" height="15" fill="rgb(216,46,15)" fg:x="88194" fg:w="27"/><text x="36.2621%" y="191.50"></text></g><g><title>clear_page_erms (2,601 samples, 1.06%)</title><rect x="34.9643%" y="325" width="1.0621%" height="15" fill="rgb(250,74,19)" fg:x="85628" fg:w="2601"/><text x="35.2143%" y="335.50"></text></g><g><title>kernel_init_free_pages (32 samples, 0.01%)</title><rect x="36.0268%" y="325" width="0.0131%" height="15" fill="rgb(249,42,33)" fg:x="88230" fg:w="32"/><text x="36.2768%" y="335.50"></text></g><g><title>rmqueue (1,200 samples, 0.49%)</title><rect x="36.0399%" y="325" width="0.4900%" height="15" fill="rgb(242,149,17)" fg:x="88262" fg:w="1200"/><text x="36.2899%" y="335.50"></text></g><g><title>rmqueue_bulk.constprop.0 (930 samples, 0.38%)</title><rect x="36.1501%" y="309" width="0.3797%" height="15" fill="rgb(244,29,21)" fg:x="88532" fg:w="930"/><text x="36.4001%" y="319.50"></text></g><g><title>get_page_from_freelist (4,109 samples, 1.68%)</title><rect x="34.8525%" y="341" width="1.6778%" height="15" fill="rgb(220,130,37)" fg:x="85354" fg:w="4109"/><text x="35.1025%" y="351.50"></text></g><g><title>__alloc_pages (4,453 samples, 1.82%)</title><rect x="34.7251%" y="357" width="1.8183%" height="15" fill="rgb(211,67,2)" fg:x="85042" fg:w="4453"/><text x="34.9751%" y="367.50">_..</text></g><g><title>policy_nodemask (35 samples, 0.01%)</title><rect x="36.5658%" y="357" width="0.0143%" height="15" fill="rgb(235,68,52)" fg:x="89550" fg:w="35"/><text x="36.8158%" y="367.50"></text></g><g><title>alloc_pages (4,624 samples, 1.89%)</title><rect x="34.6969%" y="373" width="1.8881%" height="15" fill="rgb(246,142,3)" fg:x="84973" fg:w="4624"/><text x="34.9469%" y="383.50">a..</text></g><g><title>__page_cache_alloc (4,677 samples, 1.91%)</title><rect x="34.6846%" y="389" width="1.9098%" height="15" fill="rgb(241,25,7)" fg:x="84943" fg:w="4677"/><text x="34.9346%" y="399.50">_..</text></g><g><title>PageHuge (37 samples, 0.02%)</title><rect x="36.6397%" y="373" width="0.0151%" height="15" fill="rgb(242,119,39)" fg:x="89731" fg:w="37"/><text x="36.8897%" y="383.50"></text></g><g><title>__mod_memcg_state.part.0 (27 samples, 0.01%)</title><rect x="37.5748%" y="309" width="0.0110%" height="15" fill="rgb(241,98,45)" fg:x="92021" fg:w="27"/><text x="37.8248%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (144 samples, 0.06%)</title><rect x="37.5315%" y="325" width="0.0588%" height="15" fill="rgb(254,28,30)" fg:x="91915" fg:w="144"/><text x="37.7815%" y="335.50"></text></g><g><title>__mod_lruvec_state (267 samples, 0.11%)</title><rect x="37.5225%" y="341" width="0.1090%" height="15" fill="rgb(241,142,54)" fg:x="91893" fg:w="267"/><text x="37.7725%" y="351.50"></text></g><g><title>__mod_node_page_state (86 samples, 0.04%)</title><rect x="37.5964%" y="325" width="0.0351%" height="15" fill="rgb(222,85,15)" fg:x="92074" fg:w="86"/><text x="37.8464%" y="335.50"></text></g><g><title>__mod_node_page_state (44 samples, 0.02%)</title><rect x="37.6319%" y="341" width="0.0180%" height="15" fill="rgb(210,85,47)" fg:x="92161" fg:w="44"/><text x="37.8819%" y="351.50"></text></g><g><title>__mod_lruvec_page_state (404 samples, 0.16%)</title><rect x="37.4878%" y="357" width="0.1650%" height="15" fill="rgb(224,206,25)" fg:x="91808" fg:w="404"/><text x="37.7378%" y="367.50"></text></g><g><title>_raw_spin_lock_irq (318 samples, 0.13%)</title><rect x="37.6573%" y="357" width="0.1298%" height="15" fill="rgb(243,201,19)" fg:x="92223" fg:w="318"/><text x="37.9073%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath (149 samples, 0.06%)</title><rect x="37.7263%" y="341" width="0.0608%" height="15" fill="rgb(236,59,4)" fg:x="92392" fg:w="149"/><text x="37.9763%" y="351.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (149 samples, 0.06%)</title><rect x="37.7263%" y="325" width="0.0608%" height="15" fill="rgb(254,179,45)" fg:x="92392" fg:w="149"/><text x="37.9763%" y="335.50"></text></g><g><title>__read_end_io (26 samples, 0.01%)</title><rect x="37.7900%" y="133" width="0.0106%" height="15" fill="rgb(226,14,10)" fg:x="92548" fg:w="26"/><text x="38.0400%" y="143.50"></text></g><g><title>blk_update_request (40 samples, 0.02%)</title><rect x="37.7891%" y="181" width="0.0163%" height="15" fill="rgb(244,27,41)" fg:x="92546" fg:w="40"/><text x="38.0391%" y="191.50"></text></g><g><title>bio_endio (40 samples, 0.02%)</title><rect x="37.7891%" y="165" width="0.0163%" height="15" fill="rgb(235,35,32)" fg:x="92546" fg:w="40"/><text x="38.0391%" y="175.50"></text></g><g><title>mpage_end_io (38 samples, 0.02%)</title><rect x="37.7900%" y="149" width="0.0155%" height="15" fill="rgb(218,68,31)" fg:x="92548" fg:w="38"/><text x="38.0400%" y="159.50"></text></g><g><title>nvme_complete_rq (41 samples, 0.02%)</title><rect x="37.7891%" y="213" width="0.0167%" height="15" fill="rgb(207,120,37)" fg:x="92546" fg:w="41"/><text x="38.0391%" y="223.50"></text></g><g><title>blk_mq_end_request (41 samples, 0.02%)</title><rect x="37.7891%" y="197" width="0.0167%" height="15" fill="rgb(227,98,0)" fg:x="92546" fg:w="41"/><text x="38.0391%" y="207.50"></text></g><g><title>handle_irq_event (47 samples, 0.02%)</title><rect x="37.7875%" y="293" width="0.0192%" height="15" fill="rgb(207,7,3)" fg:x="92542" fg:w="47"/><text x="38.0375%" y="303.50"></text></g><g><title>__handle_irq_event_percpu (47 samples, 0.02%)</title><rect x="37.7875%" y="277" width="0.0192%" height="15" fill="rgb(206,98,19)" fg:x="92542" fg:w="47"/><text x="38.0375%" y="287.50"></text></g><g><title>nvme_irq (47 samples, 0.02%)</title><rect x="37.7875%" y="261" width="0.0192%" height="15" fill="rgb(217,5,26)" fg:x="92542" fg:w="47"/><text x="38.0375%" y="271.50"></text></g><g><title>nvme_process_cq (47 samples, 0.02%)</title><rect x="37.7875%" y="245" width="0.0192%" height="15" fill="rgb(235,190,38)" fg:x="92542" fg:w="47"/><text x="38.0375%" y="255.50"></text></g><g><title>nvme_pci_complete_rq (43 samples, 0.02%)</title><rect x="37.7891%" y="229" width="0.0176%" height="15" fill="rgb(247,86,24)" fg:x="92546" fg:w="43"/><text x="38.0391%" y="239.50"></text></g><g><title>handle_edge_irq (49 samples, 0.02%)</title><rect x="37.7871%" y="309" width="0.0200%" height="15" fill="rgb(205,101,16)" fg:x="92541" fg:w="49"/><text x="38.0371%" y="319.50"></text></g><g><title>asm_common_interrupt (50 samples, 0.02%)</title><rect x="37.7871%" y="357" width="0.0204%" height="15" fill="rgb(246,168,33)" fg:x="92541" fg:w="50"/><text x="38.0371%" y="367.50"></text></g><g><title>common_interrupt (50 samples, 0.02%)</title><rect x="37.7871%" y="341" width="0.0204%" height="15" fill="rgb(231,114,1)" fg:x="92541" fg:w="50"/><text x="38.0371%" y="351.50"></text></g><g><title>__common_interrupt (50 samples, 0.02%)</title><rect x="37.7871%" y="325" width="0.0204%" height="15" fill="rgb(207,184,53)" fg:x="92541" fg:w="50"/><text x="38.0371%" y="335.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (71 samples, 0.03%)</title><rect x="37.8896%" y="325" width="0.0290%" height="15" fill="rgb(224,95,51)" fg:x="92792" fg:w="71"/><text x="38.1396%" y="335.50"></text></g><g><title>cgroup_rstat_updated (27 samples, 0.01%)</title><rect x="37.9076%" y="309" width="0.0110%" height="15" fill="rgb(212,188,45)" fg:x="92836" fg:w="27"/><text x="38.1576%" y="319.50"></text></g><g><title>arch_local_irq_enable (27 samples, 0.01%)</title><rect x="37.9802%" y="309" width="0.0110%" height="15" fill="rgb(223,154,38)" fg:x="93014" fg:w="27"/><text x="38.2302%" y="319.50"></text></g><g><title>page_counter_try_charge (35 samples, 0.01%)</title><rect x="37.9913%" y="309" width="0.0143%" height="15" fill="rgb(251,22,52)" fg:x="93041" fg:w="35"/><text x="38.2413%" y="319.50"></text></g><g><title>__mem_cgroup_charge (404 samples, 0.16%)</title><rect x="37.8422%" y="341" width="0.1650%" height="15" fill="rgb(229,209,22)" fg:x="92676" fg:w="404"/><text x="38.0922%" y="351.50"></text></g><g><title>try_charge (210 samples, 0.09%)</title><rect x="37.9214%" y="325" width="0.0857%" height="15" fill="rgb(234,138,34)" fg:x="92870" fg:w="210"/><text x="38.1714%" y="335.50"></text></g><g><title>get_mem_cgroup_from_mm (54 samples, 0.02%)</title><rect x="38.0076%" y="341" width="0.0220%" height="15" fill="rgb(212,95,11)" fg:x="93081" fg:w="54"/><text x="38.2576%" y="351.50"></text></g><g><title>rcu_read_unlock_strict (32 samples, 0.01%)</title><rect x="38.0390%" y="341" width="0.0131%" height="15" fill="rgb(240,179,47)" fg:x="93158" fg:w="32"/><text x="38.2890%" y="351.50"></text></g><g><title>mem_cgroup_charge (586 samples, 0.24%)</title><rect x="37.8153%" y="357" width="0.2393%" height="15" fill="rgb(240,163,11)" fg:x="92610" fg:w="586"/><text x="38.0653%" y="367.50"></text></g><g><title>rcu_read_unlock_strict (29 samples, 0.01%)</title><rect x="38.0546%" y="357" width="0.0118%" height="15" fill="rgb(236,37,12)" fg:x="93196" fg:w="29"/><text x="38.3046%" y="367.50"></text></g><g><title>xas_load (674 samples, 0.28%)</title><rect x="38.1309%" y="341" width="0.2752%" height="15" fill="rgb(232,164,16)" fg:x="93383" fg:w="674"/><text x="38.3809%" y="351.50"></text></g><g><title>xa_get_order (906 samples, 0.37%)</title><rect x="38.0738%" y="357" width="0.3699%" height="15" fill="rgb(244,205,15)" fg:x="93243" fg:w="906"/><text x="38.3238%" y="367.50"></text></g><g><title>xas_start (92 samples, 0.04%)</title><rect x="38.4061%" y="341" width="0.0376%" height="15" fill="rgb(223,117,47)" fg:x="94057" fg:w="92"/><text x="38.6561%" y="351.50"></text></g><g><title>xas_find_conflict (238 samples, 0.10%)</title><rect x="38.4441%" y="357" width="0.0972%" height="15" fill="rgb(244,107,35)" fg:x="94150" fg:w="238"/><text x="38.6941%" y="367.50"></text></g><g><title>xas_start (56 samples, 0.02%)</title><rect x="38.5560%" y="357" width="0.0229%" height="15" fill="rgb(205,140,8)" fg:x="94424" fg:w="56"/><text x="38.8060%" y="367.50"></text></g><g><title>list_lru_del (34 samples, 0.01%)</title><rect x="38.6511%" y="325" width="0.0139%" height="15" fill="rgb(228,84,46)" fg:x="94657" fg:w="34"/><text x="38.9011%" y="335.50"></text></g><g><title>workingset_update_node (68 samples, 0.03%)</title><rect x="38.6377%" y="341" width="0.0278%" height="15" fill="rgb(254,188,9)" fg:x="94624" fg:w="68"/><text x="38.8877%" y="351.50"></text></g><g><title>__add_to_page_cache_locked (4,976 samples, 2.03%)</title><rect x="36.6548%" y="373" width="2.0318%" height="15" fill="rgb(206,112,54)" fg:x="89768" fg:w="4976"/><text x="36.9048%" y="383.50">_..</text></g><g><title>xas_store (264 samples, 0.11%)</title><rect x="38.5789%" y="357" width="0.1078%" height="15" fill="rgb(216,84,49)" fg:x="94480" fg:w="264"/><text x="38.8289%" y="367.50"></text></g><g><title>xas_create (52 samples, 0.02%)</title><rect x="38.6654%" y="341" width="0.0212%" height="15" fill="rgb(214,194,35)" fg:x="94692" fg:w="52"/><text x="38.9154%" y="351.50"></text></g><g><title>__lock_text_start (28 samples, 0.01%)</title><rect x="38.7953%" y="341" width="0.0114%" height="15" fill="rgb(249,28,3)" fg:x="95010" fg:w="28"/><text x="39.0453%" y="351.50"></text></g><g><title>__mod_zone_page_state (25 samples, 0.01%)</title><rect x="38.8087%" y="341" width="0.0102%" height="15" fill="rgb(222,56,52)" fg:x="95043" fg:w="25"/><text x="39.0587%" y="351.50"></text></g><g><title>__mod_memcg_state.part.0 (30 samples, 0.01%)</title><rect x="39.0856%" y="293" width="0.0122%" height="15" fill="rgb(245,217,50)" fg:x="95721" fg:w="30"/><text x="39.3356%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (118 samples, 0.05%)</title><rect x="39.0558%" y="309" width="0.0482%" height="15" fill="rgb(213,201,24)" fg:x="95648" fg:w="118"/><text x="39.3058%" y="319.50"></text></g><g><title>__mod_lruvec_state (194 samples, 0.08%)</title><rect x="39.0415%" y="325" width="0.0792%" height="15" fill="rgb(248,116,28)" fg:x="95613" fg:w="194"/><text x="39.2915%" y="335.50"></text></g><g><title>__mod_node_page_state (26 samples, 0.01%)</title><rect x="39.1101%" y="309" width="0.0106%" height="15" fill="rgb(219,72,43)" fg:x="95781" fg:w="26"/><text x="39.3601%" y="319.50"></text></g><g><title>mem_cgroup_update_lru_size (30 samples, 0.01%)</title><rect x="39.1366%" y="325" width="0.0122%" height="15" fill="rgb(209,138,14)" fg:x="95846" fg:w="30"/><text x="39.3866%" y="335.50"></text></g><g><title>page_mapping (121 samples, 0.05%)</title><rect x="39.1489%" y="325" width="0.0494%" height="15" fill="rgb(222,18,33)" fg:x="95876" fg:w="121"/><text x="39.3989%" y="335.50"></text></g><g><title>__pagevec_lru_add_fn (935 samples, 0.38%)</title><rect x="38.8190%" y="341" width="0.3818%" height="15" fill="rgb(213,199,7)" fg:x="95068" fg:w="935"/><text x="39.0690%" y="351.50"></text></g><g><title>_raw_spin_lock_irqsave (105 samples, 0.04%)</title><rect x="39.2028%" y="325" width="0.0429%" height="15" fill="rgb(250,110,10)" fg:x="96008" fg:w="105"/><text x="39.4528%" y="335.50"></text></g><g><title>native_queued_spin_lock_slowpath (85 samples, 0.03%)</title><rect x="39.2109%" y="309" width="0.0347%" height="15" fill="rgb(248,123,6)" fg:x="96028" fg:w="85"/><text x="39.4609%" y="319.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (85 samples, 0.03%)</title><rect x="39.2109%" y="293" width="0.0347%" height="15" fill="rgb(206,91,31)" fg:x="96028" fg:w="85"/><text x="39.4609%" y="303.50"></text></g><g><title>lock_page_lruvec_irqsave (110 samples, 0.04%)</title><rect x="39.2011%" y="341" width="0.0449%" height="15" fill="rgb(211,154,13)" fg:x="96004" fg:w="110"/><text x="39.4511%" y="351.50"></text></g><g><title>__pagevec_lru_add (1,344 samples, 0.55%)</title><rect x="38.7720%" y="357" width="0.5488%" height="15" fill="rgb(225,148,7)" fg:x="94953" fg:w="1344"/><text x="39.0220%" y="367.50"></text></g><g><title>release_pages (152 samples, 0.06%)</title><rect x="39.2587%" y="341" width="0.0621%" height="15" fill="rgb(220,160,43)" fg:x="96145" fg:w="152"/><text x="39.5087%" y="351.50"></text></g><g><title>lru_cache_add (1,531 samples, 0.63%)</title><rect x="38.6977%" y="373" width="0.6252%" height="15" fill="rgb(213,52,39)" fg:x="94771" fg:w="1531"/><text x="38.9477%" y="383.50"></text></g><g><title>idr_find (141 samples, 0.06%)</title><rect x="39.4682%" y="341" width="0.0576%" height="15" fill="rgb(243,137,7)" fg:x="96658" fg:w="141"/><text x="39.7182%" y="351.50"></text></g><g><title>radix_tree_lookup (121 samples, 0.05%)</title><rect x="39.4764%" y="325" width="0.0494%" height="15" fill="rgb(230,79,13)" fg:x="96678" fg:w="121"/><text x="39.7264%" y="335.50"></text></g><g><title>__radix_tree_lookup (121 samples, 0.05%)</title><rect x="39.4764%" y="309" width="0.0494%" height="15" fill="rgb(247,105,23)" fg:x="96678" fg:w="121"/><text x="39.7264%" y="319.50"></text></g><g><title>mem_cgroup_from_id (163 samples, 0.07%)</title><rect x="39.4645%" y="357" width="0.0666%" height="15" fill="rgb(223,179,41)" fg:x="96649" fg:w="163"/><text x="39.7145%" y="367.50"></text></g><g><title>mem_cgroup_get_nr_swap_pages (70 samples, 0.03%)</title><rect x="39.5311%" y="357" width="0.0286%" height="15" fill="rgb(218,9,34)" fg:x="96812" fg:w="70"/><text x="39.7811%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (141 samples, 0.06%)</title><rect x="39.5993%" y="325" width="0.0576%" height="15" fill="rgb(222,106,8)" fg:x="96979" fg:w="141"/><text x="39.8493%" y="335.50"></text></g><g><title>__mod_lruvec_state (218 samples, 0.09%)</title><rect x="39.5854%" y="341" width="0.0890%" height="15" fill="rgb(211,220,0)" fg:x="96945" fg:w="218"/><text x="39.8354%" y="351.50"></text></g><g><title>__mod_node_page_state (29 samples, 0.01%)</title><rect x="39.6626%" y="325" width="0.0118%" height="15" fill="rgb(229,52,16)" fg:x="97134" fg:w="29"/><text x="39.9126%" y="335.50"></text></g><g><title>mod_lruvec_state.constprop.0 (313 samples, 0.13%)</title><rect x="39.5597%" y="357" width="0.1278%" height="15" fill="rgb(212,155,18)" fg:x="96882" fg:w="313"/><text x="39.8097%" y="367.50"></text></g><g><title>workingset_refault (836 samples, 0.34%)</title><rect x="39.3477%" y="373" width="0.3414%" height="15" fill="rgb(242,21,14)" fg:x="96363" fg:w="836"/><text x="39.5977%" y="383.50"></text></g><g><title>xa_get_order (30 samples, 0.01%)</title><rect x="39.6891%" y="373" width="0.0122%" height="15" fill="rgb(222,19,48)" fg:x="97199" fg:w="30"/><text x="39.9391%" y="383.50"></text></g><g><title>xas_find_conflict (35 samples, 0.01%)</title><rect x="39.7013%" y="373" width="0.0143%" height="15" fill="rgb(232,45,27)" fg:x="97229" fg:w="35"/><text x="39.9513%" y="383.50"></text></g><g><title>add_to_page_cache_lru (7,664 samples, 3.13%)</title><rect x="36.5944%" y="389" width="3.1294%" height="15" fill="rgb(249,103,42)" fg:x="89620" fg:w="7664"/><text x="36.8444%" y="399.50">add..</text></g><g><title>__blk_bios_map_sg (36 samples, 0.01%)</title><rect x="39.7463%" y="229" width="0.0147%" height="15" fill="rgb(246,81,33)" fg:x="97339" fg:w="36"/><text x="39.9963%" y="239.50"></text></g><g><title>__blk_rq_map_sg (42 samples, 0.02%)</title><rect x="39.7463%" y="245" width="0.0171%" height="15" fill="rgb(252,33,42)" fg:x="97339" fg:w="42"/><text x="39.9963%" y="255.50"></text></g><g><title>nvme_pci_setup_prps (32 samples, 0.01%)</title><rect x="39.7765%" y="245" width="0.0131%" height="15" fill="rgb(209,212,41)" fg:x="97413" fg:w="32"/><text x="40.0265%" y="255.50"></text></g><g><title>nvme_map_data (110 samples, 0.04%)</title><rect x="39.7463%" y="261" width="0.0449%" height="15" fill="rgb(207,154,6)" fg:x="97339" fg:w="110"/><text x="39.9963%" y="271.50"></text></g><g><title>nvme_queue_rq (120 samples, 0.05%)</title><rect x="39.7438%" y="277" width="0.0490%" height="15" fill="rgb(223,64,47)" fg:x="97333" fg:w="120"/><text x="39.9938%" y="287.50"></text></g><g><title>__blk_mq_try_issue_directly (122 samples, 0.05%)</title><rect x="39.7434%" y="293" width="0.0498%" height="15" fill="rgb(211,161,38)" fg:x="97332" fg:w="122"/><text x="39.9934%" y="303.50"></text></g><g><title>blk_mq_try_issue_list_directly (123 samples, 0.05%)</title><rect x="39.7434%" y="309" width="0.0502%" height="15" fill="rgb(219,138,40)" fg:x="97332" fg:w="123"/><text x="39.9934%" y="319.50"></text></g><g><title>blk_flush_plug_list (124 samples, 0.05%)</title><rect x="39.7434%" y="357" width="0.0506%" height="15" fill="rgb(241,228,46)" fg:x="97332" fg:w="124"/><text x="39.9934%" y="367.50"></text></g><g><title>blk_mq_flush_plug_list (124 samples, 0.05%)</title><rect x="39.7434%" y="341" width="0.0506%" height="15" fill="rgb(223,209,38)" fg:x="97332" fg:w="124"/><text x="39.9934%" y="351.50"></text></g><g><title>blk_mq_sched_insert_requests (124 samples, 0.05%)</title><rect x="39.7434%" y="325" width="0.0506%" height="15" fill="rgb(236,164,45)" fg:x="97332" fg:w="124"/><text x="39.9934%" y="335.50"></text></g><g><title>blk_finish_plug (125 samples, 0.05%)</title><rect x="39.7434%" y="373" width="0.0510%" height="15" fill="rgb(231,15,5)" fg:x="97332" fg:w="125"/><text x="39.9934%" y="383.50"></text></g><g><title>bio_add_page (164 samples, 0.07%)</title><rect x="40.0713%" y="341" width="0.0670%" height="15" fill="rgb(252,35,15)" fg:x="98135" fg:w="164"/><text x="40.3213%" y="351.50"></text></g><g><title>__bio_try_merge_page (85 samples, 0.03%)</title><rect x="40.1036%" y="325" width="0.0347%" height="15" fill="rgb(248,181,18)" fg:x="98214" fg:w="85"/><text x="40.3536%" y="335.50"></text></g><g><title>bio_alloc_bioset (29 samples, 0.01%)</title><rect x="40.1383%" y="341" width="0.0118%" height="15" fill="rgb(233,39,42)" fg:x="98299" fg:w="29"/><text x="40.3883%" y="351.50"></text></g><g><title>ext4_es_lookup_extent (38 samples, 0.02%)</title><rect x="40.1632%" y="325" width="0.0155%" height="15" fill="rgb(238,110,33)" fg:x="98360" fg:w="38"/><text x="40.4132%" y="335.50"></text></g><g><title>ext4_map_blocks (61 samples, 0.02%)</title><rect x="40.1550%" y="341" width="0.0249%" height="15" fill="rgb(233,195,10)" fg:x="98340" fg:w="61"/><text x="40.4050%" y="351.50"></text></g><g><title>fscrypt_mergeable_bio (40 samples, 0.02%)</title><rect x="40.1799%" y="341" width="0.0163%" height="15" fill="rgb(254,105,3)" fg:x="98401" fg:w="40"/><text x="40.4299%" y="351.50"></text></g><g><title>blk_bio_segment_split (140 samples, 0.06%)</title><rect x="40.2175%" y="277" width="0.0572%" height="15" fill="rgb(221,225,9)" fg:x="98493" fg:w="140"/><text x="40.4675%" y="287.50"></text></g><g><title>__blk_queue_split (154 samples, 0.06%)</title><rect x="40.2146%" y="293" width="0.0629%" height="15" fill="rgb(224,227,45)" fg:x="98486" fg:w="154"/><text x="40.4646%" y="303.50"></text></g><g><title>__blk_bios_map_sg (77 samples, 0.03%)</title><rect x="40.3028%" y="165" width="0.0314%" height="15" fill="rgb(229,198,43)" fg:x="98702" fg:w="77"/><text x="40.5528%" y="175.50"></text></g><g><title>__blk_rq_map_sg (89 samples, 0.04%)</title><rect x="40.3028%" y="181" width="0.0363%" height="15" fill="rgb(206,209,35)" fg:x="98702" fg:w="89"/><text x="40.5528%" y="191.50"></text></g><g><title>dma_direct_map_sg (56 samples, 0.02%)</title><rect x="40.3392%" y="165" width="0.0229%" height="15" fill="rgb(245,195,53)" fg:x="98791" fg:w="56"/><text x="40.5892%" y="175.50"></text></g><g><title>dma_map_sg_attrs (67 samples, 0.03%)</title><rect x="40.3392%" y="181" width="0.0274%" height="15" fill="rgb(240,92,26)" fg:x="98791" fg:w="67"/><text x="40.5892%" y="191.50"></text></g><g><title>mempool_alloc (29 samples, 0.01%)</title><rect x="40.3665%" y="181" width="0.0118%" height="15" fill="rgb(207,40,23)" fg:x="98858" fg:w="29"/><text x="40.6165%" y="191.50"></text></g><g><title>mempool_kmalloc (26 samples, 0.01%)</title><rect x="40.3677%" y="165" width="0.0106%" height="15" fill="rgb(223,111,35)" fg:x="98861" fg:w="26"/><text x="40.6177%" y="175.50"></text></g><g><title>nvme_pci_setup_prps (38 samples, 0.02%)</title><rect x="40.3833%" y="181" width="0.0155%" height="15" fill="rgb(229,147,28)" fg:x="98899" fg:w="38"/><text x="40.6333%" y="191.50"></text></g><g><title>nvme_map_data (258 samples, 0.11%)</title><rect x="40.3004%" y="197" width="0.1053%" height="15" fill="rgb(211,29,28)" fg:x="98696" fg:w="258"/><text x="40.5504%" y="207.50"></text></g><g><title>__blk_mq_try_issue_directly (293 samples, 0.12%)</title><rect x="40.2910%" y="229" width="0.1196%" height="15" fill="rgb(228,72,33)" fg:x="98673" fg:w="293"/><text x="40.5410%" y="239.50"></text></g><g><title>nvme_queue_rq (289 samples, 0.12%)</title><rect x="40.2926%" y="213" width="0.1180%" height="15" fill="rgb(205,214,31)" fg:x="98677" fg:w="289"/><text x="40.5426%" y="223.50"></text></g><g><title>blk_flush_plug_list (299 samples, 0.12%)</title><rect x="40.2889%" y="293" width="0.1221%" height="15" fill="rgb(224,111,15)" fg:x="98668" fg:w="299"/><text x="40.5389%" y="303.50"></text></g><g><title>blk_mq_flush_plug_list (298 samples, 0.12%)</title><rect x="40.2893%" y="277" width="0.1217%" height="15" fill="rgb(253,21,26)" fg:x="98669" fg:w="298"/><text x="40.5393%" y="287.50"></text></g><g><title>blk_mq_sched_insert_requests (295 samples, 0.12%)</title><rect x="40.2906%" y="261" width="0.1205%" height="15" fill="rgb(245,139,43)" fg:x="98672" fg:w="295"/><text x="40.5406%" y="271.50"></text></g><g><title>blk_mq_try_issue_list_directly (295 samples, 0.12%)</title><rect x="40.2906%" y="245" width="0.1205%" height="15" fill="rgb(252,170,7)" fg:x="98672" fg:w="295"/><text x="40.5406%" y="255.50"></text></g><g><title>blk_mq_submit_bio (511 samples, 0.21%)</title><rect x="40.2032%" y="309" width="0.2087%" height="15" fill="rgb(231,118,14)" fg:x="98458" fg:w="511"/><text x="40.4532%" y="319.50"></text></g><g><title>submit_bio (546 samples, 0.22%)</title><rect x="40.1987%" y="341" width="0.2229%" height="15" fill="rgb(238,83,0)" fg:x="98447" fg:w="546"/><text x="40.4487%" y="351.50"></text></g><g><title>submit_bio_noacct (544 samples, 0.22%)</title><rect x="40.1995%" y="325" width="0.2221%" height="15" fill="rgb(221,39,39)" fg:x="98449" fg:w="544"/><text x="40.4495%" y="335.50"></text></g><g><title>xas_load (218 samples, 0.09%)</title><rect x="40.4359%" y="325" width="0.0890%" height="15" fill="rgb(222,119,46)" fg:x="99028" fg:w="218"/><text x="40.6859%" y="335.50"></text></g><g><title>xa_load (288 samples, 0.12%)</title><rect x="40.4216%" y="341" width="0.1176%" height="15" fill="rgb(222,165,49)" fg:x="98993" fg:w="288"/><text x="40.6716%" y="351.50"></text></g><g><title>xas_start (35 samples, 0.01%)</title><rect x="40.5249%" y="325" width="0.0143%" height="15" fill="rgb(219,113,52)" fg:x="99246" fg:w="35"/><text x="40.7749%" y="335.50"></text></g><g><title>ext4_mpage_readpages (1,822 samples, 0.74%)</title><rect x="39.7977%" y="357" width="0.7440%" height="15" fill="rgb(214,7,15)" fg:x="97465" fg:w="1822"/><text x="40.0477%" y="367.50"></text></g><g><title>read_pages (1,985 samples, 0.81%)</title><rect x="39.7426%" y="389" width="0.8105%" height="15" fill="rgb(235,32,4)" fg:x="97330" fg:w="1985"/><text x="39.9926%" y="399.50"></text></g><g><title>ext4_readahead (1,858 samples, 0.76%)</title><rect x="39.7944%" y="373" width="0.7587%" height="15" fill="rgb(238,90,54)" fg:x="97457" fg:w="1858"/><text x="40.0444%" y="383.50"></text></g><g><title>xas_load (339 samples, 0.14%)</title><rect x="40.5744%" y="373" width="0.1384%" height="15" fill="rgb(213,208,19)" fg:x="99367" fg:w="339"/><text x="40.8244%" y="383.50"></text></g><g><title>xa_load (437 samples, 0.18%)</title><rect x="40.5556%" y="389" width="0.1784%" height="15" fill="rgb(233,156,4)" fg:x="99321" fg:w="437"/><text x="40.8056%" y="399.50"></text></g><g><title>xas_start (52 samples, 0.02%)</title><rect x="40.7128%" y="373" width="0.0212%" height="15" fill="rgb(207,194,5)" fg:x="99706" fg:w="52"/><text x="40.9628%" y="383.50"></text></g><g><title>page_cache_ra_unbounded (15,039 samples, 6.14%)</title><rect x="34.5993%" y="405" width="6.1408%" height="15" fill="rgb(206,111,30)" fg:x="84734" fg:w="15039"/><text x="34.8493%" y="415.50">page_cac..</text></g><g><title>page_cache_async_ra (15,089 samples, 6.16%)</title><rect x="34.5793%" y="437" width="6.1613%" height="15" fill="rgb(243,70,54)" fg:x="84685" fg:w="15089"/><text x="34.8293%" y="447.50">page_cac..</text></g><g><title>ondemand_readahead (15,079 samples, 6.16%)</title><rect x="34.5834%" y="421" width="6.1572%" height="15" fill="rgb(242,28,8)" fg:x="84695" fg:w="15079"/><text x="34.8334%" y="431.50">ondemand..</text></g><g><title>__page_cache_alloc (26 samples, 0.01%)</title><rect x="40.7418%" y="389" width="0.0106%" height="15" fill="rgb(219,106,18)" fg:x="99777" fg:w="26"/><text x="40.9918%" y="399.50"></text></g><g><title>alloc_pages (26 samples, 0.01%)</title><rect x="40.7418%" y="373" width="0.0106%" height="15" fill="rgb(244,222,10)" fg:x="99777" fg:w="26"/><text x="40.9918%" y="383.50"></text></g><g><title>__alloc_pages (26 samples, 0.01%)</title><rect x="40.7418%" y="357" width="0.0106%" height="15" fill="rgb(236,179,52)" fg:x="99777" fg:w="26"/><text x="40.9918%" y="367.50"></text></g><g><title>read_pages (58 samples, 0.02%)</title><rect x="40.7606%" y="389" width="0.0237%" height="15" fill="rgb(213,23,39)" fg:x="99823" fg:w="58"/><text x="41.0106%" y="399.50"></text></g><g><title>ext4_readahead (41 samples, 0.02%)</title><rect x="40.7675%" y="373" width="0.0167%" height="15" fill="rgb(238,48,10)" fg:x="99840" fg:w="41"/><text x="41.0175%" y="383.50"></text></g><g><title>ext4_mpage_readpages (41 samples, 0.02%)</title><rect x="40.7675%" y="357" width="0.0167%" height="15" fill="rgb(251,196,23)" fg:x="99840" fg:w="41"/><text x="41.0175%" y="367.50"></text></g><g><title>page_cache_sync_ra (114 samples, 0.05%)</title><rect x="40.7405%" y="437" width="0.0465%" height="15" fill="rgb(250,152,24)" fg:x="99774" fg:w="114"/><text x="40.9905%" y="447.50"></text></g><g><title>ondemand_readahead (114 samples, 0.05%)</title><rect x="40.7405%" y="421" width="0.0465%" height="15" fill="rgb(209,150,17)" fg:x="99774" fg:w="114"/><text x="40.9905%" y="431.50"></text></g><g><title>page_cache_ra_unbounded (114 samples, 0.05%)</title><rect x="40.7405%" y="405" width="0.0465%" height="15" fill="rgb(234,202,34)" fg:x="99774" fg:w="114"/><text x="40.9905%" y="415.50"></text></g><g><title>filemap_get_pages (16,064 samples, 6.56%)</title><rect x="34.2289%" y="453" width="6.5594%" height="15" fill="rgb(253,148,53)" fg:x="83827" fg:w="16064"/><text x="34.4789%" y="463.50">filemap_g..</text></g><g><title>mark_page_accessed (249 samples, 0.10%)</title><rect x="40.7887%" y="453" width="0.1017%" height="15" fill="rgb(218,129,16)" fg:x="99892" fg:w="249"/><text x="41.0387%" y="463.50"></text></g><g><title>restore_regs_and_return_to_kernel (34 samples, 0.01%)</title><rect x="40.8924%" y="453" width="0.0139%" height="15" fill="rgb(216,85,19)" fg:x="100146" fg:w="34"/><text x="41.1424%" y="463.50"></text></g><g><title>filemap_read (44,814 samples, 18.30%)</title><rect x="22.6083%" y="469" width="18.2988%" height="15" fill="rgb(235,228,7)" fg:x="55368" fg:w="44814"/><text x="22.8583%" y="479.50">filemap_read</text></g><g><title>__x64_sys_read (44,834 samples, 18.31%)</title><rect x="22.6026%" y="565" width="18.3070%" height="15" fill="rgb(245,175,0)" fg:x="55354" fg:w="44834"/><text x="22.8526%" y="575.50">__x64_sys_read</text></g><g><title>ksys_read (44,834 samples, 18.31%)</title><rect x="22.6026%" y="549" width="18.3070%" height="15" fill="rgb(208,168,36)" fg:x="55354" fg:w="44834"/><text x="22.8526%" y="559.50">ksys_read</text></g><g><title>vfs_read (44,834 samples, 18.31%)</title><rect x="22.6026%" y="533" width="18.3070%" height="15" fill="rgb(246,171,24)" fg:x="55354" fg:w="44834"/><text x="22.8526%" y="543.50">vfs_read</text></g><g><title>new_sync_read (44,834 samples, 18.31%)</title><rect x="22.6026%" y="517" width="18.3070%" height="15" fill="rgb(215,142,24)" fg:x="55354" fg:w="44834"/><text x="22.8526%" y="527.50">new_sync_read</text></g><g><title>ext4_file_read_iter (44,834 samples, 18.31%)</title><rect x="22.6026%" y="501" width="18.3070%" height="15" fill="rgb(250,187,7)" fg:x="55354" fg:w="44834"/><text x="22.8526%" y="511.50">ext4_file_read_iter</text></g><g><title>generic_file_read_iter (44,833 samples, 18.31%)</title><rect x="22.6030%" y="485" width="18.3066%" height="15" fill="rgb(228,66,33)" fg:x="55355" fg:w="44833"/><text x="22.8530%" y="495.50">generic_file_read_iter</text></g><g><title>entry_SYSCALL_64_after_hwframe (44,836 samples, 18.31%)</title><rect x="22.6026%" y="597" width="18.3078%" height="15" fill="rgb(234,215,21)" fg:x="55354" fg:w="44836"/><text x="22.8526%" y="607.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (44,836 samples, 18.31%)</title><rect x="22.6026%" y="581" width="18.3078%" height="15" fill="rgb(222,191,20)" fg:x="55354" fg:w="44836"/><text x="22.8526%" y="591.50">do_syscall_64</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (44,848 samples, 18.31%)</title><rect x="22.6022%" y="709" width="18.3127%" height="15" fill="rgb(245,79,54)" fg:x="55353" fg:w="44848"/><text x="22.8522%" y="719.50">&lt;std::io::buffered::bufreader..</text></g><g><title>std::io::default_read_exact (44,848 samples, 18.31%)</title><rect x="22.6022%" y="693" width="18.3127%" height="15" fill="rgb(240,10,37)" fg:x="55353" fg:w="44848"/><text x="22.8522%" y="703.50">std::io::default_read_exact</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (44,848 samples, 18.31%)</title><rect x="22.6022%" y="677" width="18.3127%" height="15" fill="rgb(214,192,32)" fg:x="55353" fg:w="44848"/><text x="22.8522%" y="687.50">&lt;std::io::buffered::bufreader..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (44,848 samples, 18.31%)</title><rect x="22.6022%" y="661" width="18.3127%" height="15" fill="rgb(209,36,54)" fg:x="55353" fg:w="44848"/><text x="22.8522%" y="671.50">&lt;std::fs::File as std::io::Re..</text></g><g><title>std::sys::unix::fs::File::read (44,848 samples, 18.31%)</title><rect x="22.6022%" y="645" width="18.3127%" height="15" fill="rgb(220,10,11)" fg:x="55353" fg:w="44848"/><text x="22.8522%" y="655.50">std::sys::unix::fs::File::read</text></g><g><title>std::sys::unix::fd::FileDesc::read (44,848 samples, 18.31%)</title><rect x="22.6022%" y="629" width="18.3127%" height="15" fill="rgb(221,106,17)" fg:x="55353" fg:w="44848"/><text x="22.8522%" y="639.50">std::sys::unix::fd::FileDesc:..</text></g><g><title>__libc_read (44,848 samples, 18.31%)</title><rect x="22.6022%" y="613" width="18.3127%" height="15" fill="rgb(251,142,44)" fg:x="55353" fg:w="44848"/><text x="22.8522%" y="623.50">__libc_read</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6,169 samples, 2.52%)</title><rect x="40.9149%" y="709" width="2.5190%" height="15" fill="rgb(238,13,15)" fg:x="100201" fg:w="6169"/><text x="41.1649%" y="719.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6,169 samples, 2.52%)</title><rect x="40.9149%" y="693" width="2.5190%" height="15" fill="rgb(208,107,27)" fg:x="100201" fg:w="6169"/><text x="41.1649%" y="703.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6,169 samples, 2.52%)</title><rect x="40.9149%" y="677" width="2.5190%" height="15" fill="rgb(205,136,37)" fg:x="100201" fg:w="6169"/><text x="41.1649%" y="687.50">al..</text></g><g><title>core::intrinsics::copy_nonoverlapping (6,168 samples, 2.52%)</title><rect x="40.9153%" y="661" width="2.5186%" height="15" fill="rgb(250,205,27)" fg:x="100202" fg:w="6168"/><text x="41.1653%" y="671.50">co..</text></g><g><title>__memcpy_avx_unaligned_erms (6,168 samples, 2.52%)</title><rect x="40.9153%" y="645" width="2.5186%" height="15" fill="rgb(210,80,43)" fg:x="100202" fg:w="6168"/><text x="41.1653%" y="655.50">__..</text></g><g><title>__mod_memcg_lruvec_state (33 samples, 0.01%)</title><rect x="43.5449%" y="437" width="0.0135%" height="15" fill="rgb(247,160,36)" fg:x="106642" fg:w="33"/><text x="43.7949%" y="447.50"></text></g><g><title>__mod_lruvec_state (49 samples, 0.02%)</title><rect x="43.5413%" y="453" width="0.0200%" height="15" fill="rgb(234,13,49)" fg:x="106633" fg:w="49"/><text x="43.7913%" y="463.50"></text></g><g><title>__free_one_page (246 samples, 0.10%)</title><rect x="43.6560%" y="405" width="0.1004%" height="15" fill="rgb(234,122,0)" fg:x="106914" fg:w="246"/><text x="43.9060%" y="415.50"></text></g><g><title>free_unref_page_list (450 samples, 0.18%)</title><rect x="43.5768%" y="453" width="0.1837%" height="15" fill="rgb(207,146,38)" fg:x="106720" fg:w="450"/><text x="43.8268%" y="463.50"></text></g><g><title>free_unref_page_commit (393 samples, 0.16%)</title><rect x="43.6001%" y="437" width="0.1605%" height="15" fill="rgb(207,177,25)" fg:x="106777" fg:w="393"/><text x="43.8501%" y="447.50"></text></g><g><title>free_pcppages_bulk (348 samples, 0.14%)</title><rect x="43.6184%" y="421" width="0.1421%" height="15" fill="rgb(211,178,42)" fg:x="106822" fg:w="348"/><text x="43.8684%" y="431.50"></text></g><g><title>mem_cgroup_uncharge_list (53 samples, 0.02%)</title><rect x="43.7622%" y="453" width="0.0216%" height="15" fill="rgb(230,69,54)" fg:x="107174" fg:w="53"/><text x="44.0122%" y="463.50"></text></g><g><title>uncharge_page (43 samples, 0.02%)</title><rect x="43.7663%" y="437" width="0.0176%" height="15" fill="rgb(214,135,41)" fg:x="107184" fg:w="43"/><text x="44.0163%" y="447.50"></text></g><g><title>tlb_finish_mmu (844 samples, 0.34%)</title><rect x="43.4449%" y="501" width="0.3446%" height="15" fill="rgb(237,67,25)" fg:x="106397" fg:w="844"/><text x="43.6949%" y="511.50"></text></g><g><title>free_pages_and_swap_cache (842 samples, 0.34%)</title><rect x="43.4457%" y="485" width="0.3438%" height="15" fill="rgb(222,189,50)" fg:x="106399" fg:w="842"/><text x="43.6957%" y="495.50"></text></g><g><title>release_pages (745 samples, 0.30%)</title><rect x="43.4853%" y="469" width="0.3042%" height="15" fill="rgb(245,148,34)" fg:x="106496" fg:w="745"/><text x="43.7353%" y="479.50"></text></g><g><title>__mod_memcg_lruvec_state (121 samples, 0.05%)</title><rect x="44.3747%" y="373" width="0.0494%" height="15" fill="rgb(222,29,6)" fg:x="108674" fg:w="121"/><text x="44.6247%" y="383.50"></text></g><g><title>__mod_lruvec_state (186 samples, 0.08%)</title><rect x="44.3632%" y="389" width="0.0759%" height="15" fill="rgb(221,189,43)" fg:x="108646" fg:w="186"/><text x="44.6132%" y="399.50"></text></g><g><title>__mod_lruvec_page_state (256 samples, 0.10%)</title><rect x="44.3481%" y="405" width="0.1045%" height="15" fill="rgb(207,36,27)" fg:x="108609" fg:w="256"/><text x="44.5981%" y="415.50"></text></g><g><title>lock_page_memcg (28 samples, 0.01%)</title><rect x="44.4551%" y="405" width="0.0114%" height="15" fill="rgb(217,90,24)" fg:x="108871" fg:w="28"/><text x="44.7051%" y="415.50"></text></g><g><title>page_remove_rmap (525 samples, 0.21%)</title><rect x="44.2628%" y="421" width="0.2144%" height="15" fill="rgb(224,66,35)" fg:x="108400" fg:w="525"/><text x="44.5128%" y="431.50"></text></g><g><title>__mod_memcg_lruvec_state (69 samples, 0.03%)</title><rect x="44.6184%" y="357" width="0.0282%" height="15" fill="rgb(221,13,50)" fg:x="109271" fg:w="69"/><text x="44.8684%" y="367.50"></text></g><g><title>__mod_lruvec_state (98 samples, 0.04%)</title><rect x="44.6148%" y="373" width="0.0400%" height="15" fill="rgb(236,68,49)" fg:x="109262" fg:w="98"/><text x="44.8648%" y="383.50"></text></g><g><title>free_pcp_prepare (27 samples, 0.01%)</title><rect x="44.7001%" y="357" width="0.0110%" height="15" fill="rgb(229,146,28)" fg:x="109471" fg:w="27"/><text x="44.9501%" y="367.50"></text></g><g><title>__free_one_page (322 samples, 0.13%)</title><rect x="44.7961%" y="325" width="0.1315%" height="15" fill="rgb(225,31,38)" fg:x="109706" fg:w="322"/><text x="45.0461%" y="335.50"></text></g><g><title>free_unref_page_list (639 samples, 0.26%)</title><rect x="44.6719%" y="373" width="0.2609%" height="15" fill="rgb(250,208,3)" fg:x="109402" fg:w="639"/><text x="44.9219%" y="383.50"></text></g><g><title>free_unref_page_commit (543 samples, 0.22%)</title><rect x="44.7111%" y="357" width="0.2217%" height="15" fill="rgb(246,54,23)" fg:x="109498" fg:w="543"/><text x="44.9611%" y="367.50"></text></g><g><title>free_pcppages_bulk (480 samples, 0.20%)</title><rect x="44.7369%" y="341" width="0.1960%" height="15" fill="rgb(243,76,11)" fg:x="109561" fg:w="480"/><text x="44.9869%" y="351.50"></text></g><g><title>mem_cgroup_uncharge_list (71 samples, 0.03%)</title><rect x="44.9386%" y="373" width="0.0290%" height="15" fill="rgb(245,21,50)" fg:x="110055" fg:w="71"/><text x="45.1886%" y="383.50"></text></g><g><title>uncharge_page (54 samples, 0.02%)</title><rect x="44.9455%" y="357" width="0.0220%" height="15" fill="rgb(228,9,43)" fg:x="110072" fg:w="54"/><text x="45.1955%" y="367.50"></text></g><g><title>tlb_flush_mmu (1,222 samples, 0.50%)</title><rect x="44.4776%" y="421" width="0.4990%" height="15" fill="rgb(208,100,47)" fg:x="108926" fg:w="1222"/><text x="44.7276%" y="431.50"></text></g><g><title>free_pages_and_swap_cache (1,221 samples, 0.50%)</title><rect x="44.4780%" y="405" width="0.4986%" height="15" fill="rgb(232,26,8)" fg:x="108927" fg:w="1221"/><text x="44.7280%" y="415.50"></text></g><g><title>release_pages (1,086 samples, 0.44%)</title><rect x="44.5331%" y="389" width="0.4434%" height="15" fill="rgb(216,166,38)" fg:x="109062" fg:w="1086"/><text x="44.7831%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,815 samples, 1.56%)</title><rect x="43.4400%" y="709" width="1.5578%" height="15" fill="rgb(251,202,51)" fg:x="106385" fg:w="3815"/><text x="43.6900%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,815 samples, 1.56%)</title><rect x="43.4400%" y="693" width="1.5578%" height="15" fill="rgb(254,216,34)" fg:x="106385" fg:w="3815"/><text x="43.6900%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,815 samples, 1.56%)</title><rect x="43.4400%" y="677" width="1.5578%" height="15" fill="rgb(251,32,27)" fg:x="106385" fg:w="3815"/><text x="43.6900%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,815 samples, 1.56%)</title><rect x="43.4400%" y="661" width="1.5578%" height="15" fill="rgb(208,127,28)" fg:x="106385" fg:w="3815"/><text x="43.6900%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (3,815 samples, 1.56%)</title><rect x="43.4400%" y="645" width="1.5578%" height="15" fill="rgb(224,137,22)" fg:x="106385" fg:w="3815"/><text x="43.6900%" y="655.50"></text></g><g><title>__free (3,815 samples, 1.56%)</title><rect x="43.4400%" y="629" width="1.5578%" height="15" fill="rgb(254,70,32)" fg:x="106385" fg:w="3815"/><text x="43.6900%" y="639.50"></text></g><g><title>__GI___munmap (3,815 samples, 1.56%)</title><rect x="43.4400%" y="613" width="1.5578%" height="15" fill="rgb(229,75,37)" fg:x="106385" fg:w="3815"/><text x="43.6900%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,815 samples, 1.56%)</title><rect x="43.4400%" y="597" width="1.5578%" height="15" fill="rgb(252,64,23)" fg:x="106385" fg:w="3815"/><text x="43.6900%" y="607.50"></text></g><g><title>do_syscall_64 (3,815 samples, 1.56%)</title><rect x="43.4400%" y="581" width="1.5578%" height="15" fill="rgb(232,162,48)" fg:x="106385" fg:w="3815"/><text x="43.6900%" y="591.50"></text></g><g><title>__x64_sys_munmap (3,815 samples, 1.56%)</title><rect x="43.4400%" y="565" width="1.5578%" height="15" fill="rgb(246,160,12)" fg:x="106385" fg:w="3815"/><text x="43.6900%" y="575.50"></text></g><g><title>__vm_munmap (3,815 samples, 1.56%)</title><rect x="43.4400%" y="549" width="1.5578%" height="15" fill="rgb(247,166,0)" fg:x="106385" fg:w="3815"/><text x="43.6900%" y="559.50"></text></g><g><title>__do_munmap (3,815 samples, 1.56%)</title><rect x="43.4400%" y="533" width="1.5578%" height="15" fill="rgb(249,219,21)" fg:x="106385" fg:w="3815"/><text x="43.6900%" y="543.50"></text></g><g><title>unmap_region (3,806 samples, 1.55%)</title><rect x="43.4437%" y="517" width="1.5541%" height="15" fill="rgb(205,209,3)" fg:x="106394" fg:w="3806"/><text x="43.6937%" y="527.50"></text></g><g><title>unmap_vmas (2,959 samples, 1.21%)</title><rect x="43.7895%" y="501" width="1.2082%" height="15" fill="rgb(243,44,1)" fg:x="107241" fg:w="2959"/><text x="44.0395%" y="511.50"></text></g><g><title>unmap_single_vma (2,958 samples, 1.21%)</title><rect x="43.7899%" y="485" width="1.2078%" height="15" fill="rgb(206,159,16)" fg:x="107242" fg:w="2958"/><text x="44.0399%" y="495.50"></text></g><g><title>unmap_page_range (2,958 samples, 1.21%)</title><rect x="43.7899%" y="469" width="1.2078%" height="15" fill="rgb(244,77,30)" fg:x="107242" fg:w="2958"/><text x="44.0399%" y="479.50"></text></g><g><title>zap_pmd_range.isra.0 (2,958 samples, 1.21%)</title><rect x="43.7899%" y="453" width="1.2078%" height="15" fill="rgb(218,69,12)" fg:x="107242" fg:w="2958"/><text x="44.0399%" y="463.50"></text></g><g><title>zap_pte_range (2,930 samples, 1.20%)</title><rect x="43.8014%" y="437" width="1.1964%" height="15" fill="rgb(212,87,7)" fg:x="107270" fg:w="2930"/><text x="44.0514%" y="447.50"></text></g><g><title>vm_normal_page (37 samples, 0.02%)</title><rect x="44.9827%" y="421" width="0.0151%" height="15" fill="rgb(245,114,25)" fg:x="110163" fg:w="37"/><text x="45.2327%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (31 samples, 0.01%)</title><rect x="44.9978%" y="709" width="0.0127%" height="15" fill="rgb(210,61,42)" fg:x="110200" fg:w="31"/><text x="45.2478%" y="719.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (31 samples, 0.01%)</title><rect x="44.9978%" y="693" width="0.0127%" height="15" fill="rgb(211,52,33)" fg:x="110200" fg:w="31"/><text x="45.2478%" y="703.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (31 samples, 0.01%)</title><rect x="44.9978%" y="677" width="0.0127%" height="15" fill="rgb(234,58,33)" fg:x="110200" fg:w="31"/><text x="45.2478%" y="687.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (31 samples, 0.01%)</title><rect x="44.9978%" y="661" width="0.0127%" height="15" fill="rgb(220,115,36)" fg:x="110200" fg:w="31"/><text x="45.2478%" y="671.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (31 samples, 0.01%)</title><rect x="44.9978%" y="645" width="0.0127%" height="15" fill="rgb(243,153,54)" fg:x="110200" fg:w="31"/><text x="45.2478%" y="655.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (31 samples, 0.01%)</title><rect x="44.9978%" y="629" width="0.0127%" height="15" fill="rgb(251,47,18)" fg:x="110200" fg:w="31"/><text x="45.2478%" y="639.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (31 samples, 0.01%)</title><rect x="44.9978%" y="613" width="0.0127%" height="15" fill="rgb(242,102,42)" fg:x="110200" fg:w="31"/><text x="45.2478%" y="623.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (31 samples, 0.01%)</title><rect x="44.9978%" y="597" width="0.0127%" height="15" fill="rgb(234,31,38)" fg:x="110200" fg:w="31"/><text x="45.2478%" y="607.50"></text></g><g><title>nom::combinator::map::{{closure}} (31 samples, 0.01%)</title><rect x="44.9978%" y="581" width="0.0127%" height="15" fill="rgb(221,117,51)" fg:x="110200" fg:w="31"/><text x="45.2478%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (31 samples, 0.01%)</title><rect x="44.9978%" y="565" width="0.0127%" height="15" fill="rgb(212,20,18)" fg:x="110200" fg:w="31"/><text x="45.2478%" y="575.50"></text></g><g><title>nom::multi::count::{{closure}} (31 samples, 0.01%)</title><rect x="44.9978%" y="549" width="0.0127%" height="15" fill="rgb(245,133,36)" fg:x="110200" fg:w="31"/><text x="45.2478%" y="559.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (37 samples, 0.02%)</title><rect x="45.0108%" y="693" width="0.0151%" height="15" fill="rgb(212,6,19)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="703.50"></text></g><g><title>std::io::default_read_exact (37 samples, 0.02%)</title><rect x="45.0108%" y="677" width="0.0151%" height="15" fill="rgb(218,1,36)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="687.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (37 samples, 0.02%)</title><rect x="45.0108%" y="661" width="0.0151%" height="15" fill="rgb(246,84,54)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="671.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (37 samples, 0.02%)</title><rect x="45.0108%" y="645" width="0.0151%" height="15" fill="rgb(242,110,6)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="655.50"></text></g><g><title>std::sys::unix::fs::File::read (37 samples, 0.02%)</title><rect x="45.0108%" y="629" width="0.0151%" height="15" fill="rgb(214,47,5)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="639.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (37 samples, 0.02%)</title><rect x="45.0108%" y="613" width="0.0151%" height="15" fill="rgb(218,159,25)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="623.50"></text></g><g><title>__libc_read (37 samples, 0.02%)</title><rect x="45.0108%" y="597" width="0.0151%" height="15" fill="rgb(215,211,28)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (37 samples, 0.02%)</title><rect x="45.0108%" y="581" width="0.0151%" height="15" fill="rgb(238,59,32)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="591.50"></text></g><g><title>do_syscall_64 (37 samples, 0.02%)</title><rect x="45.0108%" y="565" width="0.0151%" height="15" fill="rgb(226,82,3)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="575.50"></text></g><g><title>__x64_sys_read (37 samples, 0.02%)</title><rect x="45.0108%" y="549" width="0.0151%" height="15" fill="rgb(240,164,32)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="559.50"></text></g><g><title>ksys_read (37 samples, 0.02%)</title><rect x="45.0108%" y="533" width="0.0151%" height="15" fill="rgb(232,46,7)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="543.50"></text></g><g><title>vfs_read (37 samples, 0.02%)</title><rect x="45.0108%" y="517" width="0.0151%" height="15" fill="rgb(229,129,53)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="527.50"></text></g><g><title>new_sync_read (37 samples, 0.02%)</title><rect x="45.0108%" y="501" width="0.0151%" height="15" fill="rgb(234,188,29)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="511.50"></text></g><g><title>ext4_file_read_iter (37 samples, 0.02%)</title><rect x="45.0108%" y="485" width="0.0151%" height="15" fill="rgb(246,141,4)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="495.50"></text></g><g><title>generic_file_read_iter (37 samples, 0.02%)</title><rect x="45.0108%" y="469" width="0.0151%" height="15" fill="rgb(229,23,39)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="479.50"></text></g><g><title>filemap_read (37 samples, 0.02%)</title><rect x="45.0108%" y="453" width="0.0151%" height="15" fill="rgb(206,12,3)" fg:x="110232" fg:w="37"/><text x="45.2608%" y="463.50"></text></g><g><title>core::intrinsics::copy (5,831 samples, 2.38%)</title><rect x="45.0345%" y="661" width="2.3810%" height="15" fill="rgb(252,226,20)" fg:x="110290" fg:w="5831"/><text x="45.2845%" y="671.50">co..</text></g><g><title>__memcpy_avx_unaligned_erms (5,831 samples, 2.38%)</title><rect x="45.0345%" y="645" width="2.3810%" height="15" fill="rgb(216,123,35)" fg:x="110290" fg:w="5831"/><text x="45.2845%" y="655.50">__..</text></g><g><title>core::slice::&lt;impl [T]&gt;::rotate_left (5,851 samples, 2.39%)</title><rect x="45.0345%" y="693" width="2.3891%" height="15" fill="rgb(212,68,40)" fg:x="110290" fg:w="5851"/><text x="45.2845%" y="703.50">co..</text></g><g><title>core::slice::rotate::ptr_rotate (5,851 samples, 2.39%)</title><rect x="45.0345%" y="677" width="2.3891%" height="15" fill="rgb(254,125,32)" fg:x="110290" fg:w="5851"/><text x="45.2845%" y="687.50">co..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,626 samples, 0.66%)</title><rect x="50.9945%" y="629" width="0.6639%" height="15" fill="rgb(253,97,22)" fg:x="124886" fg:w="1626"/><text x="51.2445%" y="639.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u8 (971 samples, 0.40%)</title><rect x="52.5208%" y="613" width="0.3965%" height="15" fill="rgb(241,101,14)" fg:x="128624" fg:w="971"/><text x="52.7708%" y="623.50"></text></g><g><title>nom::number::streaming::be_u8 (971 samples, 0.40%)</title><rect x="52.5208%" y="597" width="0.3965%" height="15" fill="rgb(238,103,29)" fg:x="128624" fg:w="971"/><text x="52.7708%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (962 samples, 0.39%)</title><rect x="52.5245%" y="581" width="0.3928%" height="15" fill="rgb(233,195,47)" fg:x="128633" fg:w="962"/><text x="52.7745%" y="591.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (962 samples, 0.39%)</title><rect x="52.5245%" y="565" width="0.3928%" height="15" fill="rgb(246,218,30)" fg:x="128633" fg:w="962"/><text x="52.7745%" y="575.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,036 samples, 0.42%)</title><rect x="52.9193%" y="565" width="0.4230%" height="15" fill="rgb(219,145,47)" fg:x="129600" fg:w="1036"/><text x="53.1693%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (503 samples, 0.21%)</title><rect x="53.1370%" y="549" width="0.2054%" height="15" fill="rgb(243,12,26)" fg:x="130133" fg:w="503"/><text x="53.3870%" y="559.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (503 samples, 0.21%)</title><rect x="53.1370%" y="533" width="0.2054%" height="15" fill="rgb(214,87,16)" fg:x="130133" fg:w="503"/><text x="53.3870%" y="543.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (503 samples, 0.21%)</title><rect x="53.1370%" y="517" width="0.2054%" height="15" fill="rgb(208,99,42)" fg:x="130133" fg:w="503"/><text x="53.3870%" y="527.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u32 (1,770 samples, 0.72%)</title><rect x="54.8332%" y="501" width="0.7227%" height="15" fill="rgb(253,99,2)" fg:x="134287" fg:w="1770"/><text x="55.0832%" y="511.50"></text></g><g><title>nom::number::streaming::be_u32 (1,770 samples, 0.72%)</title><rect x="54.8332%" y="485" width="0.7227%" height="15" fill="rgb(220,168,23)" fg:x="134287" fg:w="1770"/><text x="55.0832%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,297 samples, 1.35%)</title><rect x="54.8332%" y="533" width="1.3463%" height="15" fill="rgb(242,38,24)" fg:x="134287" fg:w="3297"/><text x="55.0832%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,297 samples, 1.35%)</title><rect x="54.8332%" y="517" width="1.3463%" height="15" fill="rgb(225,182,9)" fg:x="134287" fg:w="3297"/><text x="55.0832%" y="527.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (1,527 samples, 0.62%)</title><rect x="55.5559%" y="501" width="0.6235%" height="15" fill="rgb(243,178,37)" fg:x="136057" fg:w="1527"/><text x="55.8059%" y="511.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (1,527 samples, 0.62%)</title><rect x="55.5559%" y="485" width="0.6235%" height="15" fill="rgb(232,139,19)" fg:x="136057" fg:w="1527"/><text x="55.8059%" y="495.50"></text></g><g><title>nom::number::streaming::be_u64 (1,527 samples, 0.62%)</title><rect x="55.5559%" y="469" width="0.6235%" height="15" fill="rgb(225,201,24)" fg:x="136057" fg:w="1527"/><text x="55.8059%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7,991 samples, 3.26%)</title><rect x="52.9193%" y="581" width="3.2630%" height="15" fill="rgb(221,47,46)" fg:x="129600" fg:w="7991"/><text x="53.1693%" y="591.50">&lt;F ..</text></g><g><title>nom::sequence::tuple::{{closure}} (6,955 samples, 2.84%)</title><rect x="53.3424%" y="565" width="2.8399%" height="15" fill="rgb(249,23,13)" fg:x="130636" fg:w="6955"/><text x="53.5924%" y="575.50">no..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (6,955 samples, 2.84%)</title><rect x="53.3424%" y="549" width="2.8399%" height="15" fill="rgb(219,9,5)" fg:x="130636" fg:w="6955"/><text x="53.5924%" y="559.50">&lt;(..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (997 samples, 0.41%)</title><rect x="56.1823%" y="581" width="0.4071%" height="15" fill="rgb(254,171,16)" fg:x="137591" fg:w="997"/><text x="56.4323%" y="591.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_instance_dump (8,992 samples, 3.67%)</title><rect x="52.9181%" y="613" width="3.6717%" height="15" fill="rgb(230,171,20)" fg:x="129597" fg:w="8992"/><text x="53.1681%" y="623.50">hpro..</text></g><g><title>nom::combinator::flat_map::{{closure}} (8,992 samples, 3.67%)</title><rect x="52.9181%" y="597" width="3.6717%" height="15" fill="rgb(210,71,41)" fg:x="129597" fg:w="8992"/><text x="53.1681%" y="607.50">nom:..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (249 samples, 0.10%)</title><rect x="56.6715%" y="517" width="0.1017%" height="15" fill="rgb(206,173,20)" fg:x="138789" fg:w="249"/><text x="56.9215%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (249 samples, 0.10%)</title><rect x="56.6715%" y="501" width="0.1017%" height="15" fill="rgb(233,88,34)" fg:x="138789" fg:w="249"/><text x="56.9215%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (249 samples, 0.10%)</title><rect x="56.6715%" y="485" width="0.1017%" height="15" fill="rgb(223,209,46)" fg:x="138789" fg:w="249"/><text x="56.9215%" y="495.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (249 samples, 0.10%)</title><rect x="56.6715%" y="469" width="0.1017%" height="15" fill="rgb(250,43,18)" fg:x="138789" fg:w="249"/><text x="56.9215%" y="479.50"></text></g><g><title>nom::number::streaming::be_u64 (249 samples, 0.10%)</title><rect x="56.6715%" y="453" width="0.1017%" height="15" fill="rgb(208,13,10)" fg:x="138789" fg:w="249"/><text x="56.9215%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (174 samples, 0.07%)</title><rect x="56.7021%" y="437" width="0.0710%" height="15" fill="rgb(212,200,36)" fg:x="138864" fg:w="174"/><text x="56.9521%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (174 samples, 0.07%)</title><rect x="56.7021%" y="421" width="0.0710%" height="15" fill="rgb(225,90,30)" fg:x="138864" fg:w="174"/><text x="56.9521%" y="431.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (174 samples, 0.07%)</title><rect x="56.7021%" y="405" width="0.0710%" height="15" fill="rgb(236,182,39)" fg:x="138864" fg:w="174"/><text x="56.9521%" y="415.50"></text></g><g><title>handle_mm_fault (28 samples, 0.01%)</title><rect x="56.8070%" y="437" width="0.0114%" height="15" fill="rgb(212,144,35)" fg:x="139121" fg:w="28"/><text x="57.0570%" y="447.50"></text></g><g><title>__handle_mm_fault (28 samples, 0.01%)</title><rect x="56.8070%" y="421" width="0.0114%" height="15" fill="rgb(228,63,44)" fg:x="139121" fg:w="28"/><text x="57.0570%" y="431.50"></text></g><g><title>do_user_addr_fault (30 samples, 0.01%)</title><rect x="56.8066%" y="453" width="0.0122%" height="15" fill="rgb(228,109,6)" fg:x="139120" fg:w="30"/><text x="57.0566%" y="463.50"></text></g><g><title>asm_exc_page_fault (31 samples, 0.01%)</title><rect x="56.8066%" y="485" width="0.0127%" height="15" fill="rgb(238,117,24)" fg:x="139120" fg:w="31"/><text x="57.0566%" y="495.50"></text></g><g><title>exc_page_fault (31 samples, 0.01%)</title><rect x="56.8066%" y="469" width="0.0127%" height="15" fill="rgb(242,26,26)" fg:x="139120" fg:w="31"/><text x="57.0566%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (118 samples, 0.05%)</title><rect x="56.7731%" y="517" width="0.0482%" height="15" fill="rgb(221,92,48)" fg:x="139038" fg:w="118"/><text x="57.0231%" y="527.50"></text></g><g><title>core::ptr::write (68 samples, 0.03%)</title><rect x="56.7936%" y="501" width="0.0278%" height="15" fill="rgb(209,209,32)" fg:x="139088" fg:w="68"/><text x="57.0436%" y="511.50"></text></g><g><title>__GI___libc_malloc (493 samples, 0.20%)</title><rect x="56.8246%" y="405" width="0.2013%" height="15" fill="rgb(221,70,22)" fg:x="139164" fg:w="493"/><text x="57.0746%" y="415.50"></text></g><g><title>_int_malloc (206 samples, 0.08%)</title><rect x="56.9418%" y="389" width="0.0841%" height="15" fill="rgb(248,145,5)" fg:x="139451" fg:w="206"/><text x="57.1918%" y="399.50"></text></g><g><title>unlink_chunk.constprop.0 (40 samples, 0.02%)</title><rect x="57.0096%" y="373" width="0.0163%" height="15" fill="rgb(226,116,26)" fg:x="139617" fg:w="40"/><text x="57.2596%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (509 samples, 0.21%)</title><rect x="56.8230%" y="453" width="0.2078%" height="15" fill="rgb(244,5,17)" fg:x="139160" fg:w="509"/><text x="57.0730%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (509 samples, 0.21%)</title><rect x="56.8230%" y="437" width="0.2078%" height="15" fill="rgb(252,159,33)" fg:x="139160" fg:w="509"/><text x="57.0730%" y="447.50"></text></g><g><title>alloc::alloc::alloc (509 samples, 0.21%)</title><rect x="56.8230%" y="421" width="0.2078%" height="15" fill="rgb(206,71,0)" fg:x="139160" fg:w="509"/><text x="57.0730%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (519 samples, 0.21%)</title><rect x="56.8213%" y="517" width="0.2119%" height="15" fill="rgb(233,118,54)" fg:x="139156" fg:w="519"/><text x="57.0713%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (519 samples, 0.21%)</title><rect x="56.8213%" y="501" width="0.2119%" height="15" fill="rgb(234,83,48)" fg:x="139156" fg:w="519"/><text x="57.0713%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (517 samples, 0.21%)</title><rect x="56.8221%" y="485" width="0.2111%" height="15" fill="rgb(228,3,54)" fg:x="139158" fg:w="517"/><text x="57.0721%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (517 samples, 0.21%)</title><rect x="56.8221%" y="469" width="0.2111%" height="15" fill="rgb(226,155,13)" fg:x="139158" fg:w="517"/><text x="57.0721%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,092 samples, 0.45%)</title><rect x="56.5918%" y="549" width="0.4459%" height="15" fill="rgb(241,28,37)" fg:x="138594" fg:w="1092"/><text x="56.8418%" y="559.50"></text></g><g><title>nom::multi::count::{{closure}} (1,089 samples, 0.44%)</title><rect x="56.5931%" y="533" width="0.4447%" height="15" fill="rgb(233,93,10)" fg:x="138597" fg:w="1089"/><text x="56.8431%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (30 samples, 0.01%)</title><rect x="57.0377%" y="549" width="0.0122%" height="15" fill="rgb(225,113,19)" fg:x="139686" fg:w="30"/><text x="57.2877%" y="559.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,133 samples, 0.46%)</title><rect x="56.5898%" y="565" width="0.4626%" height="15" fill="rgb(241,2,18)" fg:x="138589" fg:w="1133"/><text x="56.8398%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,165 samples, 0.48%)</title><rect x="56.5898%" y="581" width="0.4757%" height="15" fill="rgb(228,207,21)" fg:x="138589" fg:w="1165"/><text x="56.8398%" y="591.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (32 samples, 0.01%)</title><rect x="57.0524%" y="565" width="0.0131%" height="15" fill="rgb(213,211,35)" fg:x="139722" fg:w="32"/><text x="57.3024%" y="575.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (32 samples, 0.01%)</title><rect x="57.0524%" y="549" width="0.0131%" height="15" fill="rgb(209,83,10)" fg:x="139722" fg:w="32"/><text x="57.3024%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (1,178 samples, 0.48%)</title><rect x="56.5898%" y="613" width="0.4810%" height="15" fill="rgb(209,164,1)" fg:x="138589" fg:w="1178"/><text x="56.8398%" y="623.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (1,178 samples, 0.48%)</title><rect x="56.5898%" y="597" width="0.4810%" height="15" fill="rgb(213,184,43)" fg:x="138589" fg:w="1178"/><text x="56.8398%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (250 samples, 0.10%)</title><rect x="57.1476%" y="549" width="0.1021%" height="15" fill="rgb(231,61,34)" fg:x="139955" fg:w="250"/><text x="57.3976%" y="559.50"></text></g><g><title>core::ops::function::FnMut::call_mut (250 samples, 0.10%)</title><rect x="57.1476%" y="533" width="0.1021%" height="15" fill="rgb(235,75,3)" fg:x="139955" fg:w="250"/><text x="57.3976%" y="543.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i8 (224 samples, 0.09%)</title><rect x="57.1582%" y="517" width="0.0915%" height="15" fill="rgb(220,106,47)" fg:x="139981" fg:w="224"/><text x="57.4082%" y="527.50"></text></g><g><title>nom::number::streaming::be_i8 (224 samples, 0.09%)</title><rect x="57.1582%" y="501" width="0.0915%" height="15" fill="rgb(210,196,33)" fg:x="139981" fg:w="224"/><text x="57.4082%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (224 samples, 0.09%)</title><rect x="57.1582%" y="485" width="0.0915%" height="15" fill="rgb(229,154,42)" fg:x="139981" fg:w="224"/><text x="57.4082%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (224 samples, 0.09%)</title><rect x="57.1582%" y="469" width="0.0915%" height="15" fill="rgb(228,114,26)" fg:x="139981" fg:w="224"/><text x="57.4082%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (224 samples, 0.09%)</title><rect x="57.1582%" y="453" width="0.0915%" height="15" fill="rgb(208,144,1)" fg:x="139981" fg:w="224"/><text x="57.4082%" y="463.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (224 samples, 0.09%)</title><rect x="57.1582%" y="437" width="0.0915%" height="15" fill="rgb(239,112,37)" fg:x="139981" fg:w="224"/><text x="57.4082%" y="447.50"></text></g><g><title>nom::number::streaming::be_u8 (224 samples, 0.09%)</title><rect x="57.1582%" y="421" width="0.0915%" height="15" fill="rgb(210,96,50)" fg:x="139981" fg:w="224"/><text x="57.4082%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.03%)</title><rect x="57.2239%" y="405" width="0.0257%" height="15" fill="rgb(222,178,2)" fg:x="140142" fg:w="63"/><text x="57.4739%" y="415.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (63 samples, 0.03%)</title><rect x="57.2239%" y="389" width="0.0257%" height="15" fill="rgb(226,74,18)" fg:x="140142" fg:w="63"/><text x="57.4739%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (135 samples, 0.06%)</title><rect x="57.4836%" y="533" width="0.0551%" height="15" fill="rgb(225,67,54)" fg:x="140778" fg:w="135"/><text x="57.7336%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,055 samples, 0.43%)</title><rect x="57.2497%" y="549" width="0.4308%" height="15" fill="rgb(251,92,32)" fg:x="140205" fg:w="1055"/><text x="57.4997%" y="559.50"></text></g><g><title>core::ptr::write (347 samples, 0.14%)</title><rect x="57.5388%" y="533" width="0.1417%" height="15" fill="rgb(228,149,22)" fg:x="140913" fg:w="347"/><text x="57.7888%" y="543.50"></text></g><g><title>__GI___libc_malloc (1,197 samples, 0.49%)</title><rect x="57.6919%" y="437" width="0.4888%" height="15" fill="rgb(243,54,13)" fg:x="141288" fg:w="1197"/><text x="57.9419%" y="447.50"></text></g><g><title>_int_malloc (438 samples, 0.18%)</title><rect x="58.0018%" y="421" width="0.1788%" height="15" fill="rgb(243,180,28)" fg:x="142047" fg:w="438"/><text x="58.2518%" y="431.50"></text></g><g><title>__rdl_alloc (32 samples, 0.01%)</title><rect x="58.1807%" y="437" width="0.0131%" height="15" fill="rgb(208,167,24)" fg:x="142485" fg:w="32"/><text x="58.4307%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (32 samples, 0.01%)</title><rect x="58.1807%" y="421" width="0.0131%" height="15" fill="rgb(245,73,45)" fg:x="142485" fg:w="32"/><text x="58.4307%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,239 samples, 0.51%)</title><rect x="57.6911%" y="485" width="0.5059%" height="15" fill="rgb(237,203,48)" fg:x="141286" fg:w="1239"/><text x="57.9411%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,239 samples, 0.51%)</title><rect x="57.6911%" y="469" width="0.5059%" height="15" fill="rgb(211,197,16)" fg:x="141286" fg:w="1239"/><text x="57.9411%" y="479.50"></text></g><g><title>alloc::alloc::alloc (1,239 samples, 0.51%)</title><rect x="57.6911%" y="453" width="0.5059%" height="15" fill="rgb(243,99,51)" fg:x="141286" fg:w="1239"/><text x="57.9411%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,269 samples, 0.52%)</title><rect x="57.6805%" y="549" width="0.5182%" height="15" fill="rgb(215,123,29)" fg:x="141260" fg:w="1269"/><text x="57.9305%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,269 samples, 0.52%)</title><rect x="57.6805%" y="533" width="0.5182%" height="15" fill="rgb(239,186,37)" fg:x="141260" fg:w="1269"/><text x="57.9305%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,256 samples, 0.51%)</title><rect x="57.6858%" y="517" width="0.5129%" height="15" fill="rgb(252,136,39)" fg:x="141273" fg:w="1256"/><text x="57.9358%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,256 samples, 0.51%)</title><rect x="57.6858%" y="501" width="0.5129%" height="15" fill="rgb(223,213,32)" fg:x="141273" fg:w="1256"/><text x="57.9358%" y="511.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (48 samples, 0.02%)</title><rect x="58.2027%" y="517" width="0.0196%" height="15" fill="rgb(233,115,5)" fg:x="142539" fg:w="48"/><text x="58.4527%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (48 samples, 0.02%)</title><rect x="58.2027%" y="501" width="0.0196%" height="15" fill="rgb(207,226,44)" fg:x="142539" fg:w="48"/><text x="58.4527%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,840 samples, 1.16%)</title><rect x="57.1186%" y="581" width="1.1597%" height="15" fill="rgb(208,126,0)" fg:x="139884" fg:w="2840"/><text x="57.3686%" y="591.50"></text></g><g><title>nom::multi::count::{{closure}} (2,827 samples, 1.15%)</title><rect x="57.1239%" y="565" width="1.1543%" height="15" fill="rgb(244,66,21)" fg:x="139897" fg:w="2827"/><text x="57.3739%" y="575.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (195 samples, 0.08%)</title><rect x="58.1986%" y="549" width="0.0796%" height="15" fill="rgb(222,97,12)" fg:x="142529" fg:w="195"/><text x="58.4486%" y="559.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (195 samples, 0.08%)</title><rect x="58.1986%" y="533" width="0.0796%" height="15" fill="rgb(219,213,19)" fg:x="142529" fg:w="195"/><text x="58.4486%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (137 samples, 0.06%)</title><rect x="58.2223%" y="517" width="0.0559%" height="15" fill="rgb(252,169,30)" fg:x="142587" fg:w="137"/><text x="58.4723%" y="527.50"></text></g><g><title>nom::combinator::map::{{closure}} (2,882 samples, 1.18%)</title><rect x="57.1186%" y="597" width="1.1768%" height="15" fill="rgb(206,32,51)" fg:x="139884" fg:w="2882"/><text x="57.3686%" y="607.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (42 samples, 0.02%)</title><rect x="58.2782%" y="581" width="0.0171%" height="15" fill="rgb(250,172,42)" fg:x="142724" fg:w="42"/><text x="58.5282%" y="591.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u32 (34 samples, 0.01%)</title><rect x="58.2954%" y="533" width="0.0139%" height="15" fill="rgb(209,34,43)" fg:x="142766" fg:w="34"/><text x="58.5454%" y="543.50"></text></g><g><title>nom::number::streaming::be_u32 (34 samples, 0.01%)</title><rect x="58.2954%" y="517" width="0.0139%" height="15" fill="rgb(223,11,35)" fg:x="142766" fg:w="34"/><text x="58.5454%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (35 samples, 0.01%)</title><rect x="58.3093%" y="501" width="0.0143%" height="15" fill="rgb(251,219,26)" fg:x="142800" fg:w="35"/><text x="58.5593%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (35 samples, 0.01%)</title><rect x="58.3093%" y="485" width="0.0143%" height="15" fill="rgb(231,119,3)" fg:x="142800" fg:w="35"/><text x="58.5593%" y="495.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i8 (35 samples, 0.01%)</title><rect x="58.3093%" y="469" width="0.0143%" height="15" fill="rgb(216,97,11)" fg:x="142800" fg:w="35"/><text x="58.5593%" y="479.50"></text></g><g><title>nom::number::streaming::be_i8 (35 samples, 0.01%)</title><rect x="58.3093%" y="453" width="0.0143%" height="15" fill="rgb(223,59,9)" fg:x="142800" fg:w="35"/><text x="58.5593%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (35 samples, 0.01%)</title><rect x="58.3093%" y="437" width="0.0143%" height="15" fill="rgb(233,93,31)" fg:x="142800" fg:w="35"/><text x="58.5593%" y="447.50"></text></g><g><title>nom::combinator::map::{{closure}} (35 samples, 0.01%)</title><rect x="58.3093%" y="421" width="0.0143%" height="15" fill="rgb(239,81,33)" fg:x="142800" fg:w="35"/><text x="58.5593%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (35 samples, 0.01%)</title><rect x="58.3093%" y="405" width="0.0143%" height="15" fill="rgb(213,120,34)" fg:x="142800" fg:w="35"/><text x="58.5593%" y="415.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (35 samples, 0.01%)</title><rect x="58.3093%" y="389" width="0.0143%" height="15" fill="rgb(243,49,53)" fg:x="142800" fg:w="35"/><text x="58.5593%" y="399.50"></text></g><g><title>nom::number::streaming::be_u8 (35 samples, 0.01%)</title><rect x="58.3093%" y="373" width="0.0143%" height="15" fill="rgb(247,216,33)" fg:x="142800" fg:w="35"/><text x="58.5593%" y="383.50"></text></g><g><title>hprof_slurp::record_parser::parse_field_type (36 samples, 0.01%)</title><rect x="58.3093%" y="533" width="0.0147%" height="15" fill="rgb(226,26,14)" fg:x="142800" fg:w="36"/><text x="58.5593%" y="543.50"></text></g><g><title>nom::combinator::map::{{closure}} (36 samples, 0.01%)</title><rect x="58.3093%" y="517" width="0.0147%" height="15" fill="rgb(215,49,53)" fg:x="142800" fg:w="36"/><text x="58.5593%" y="527.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (16,328 samples, 6.67%)</title><rect x="51.6621%" y="629" width="6.6672%" height="15" fill="rgb(245,162,40)" fg:x="126521" fg:w="16328"/><text x="51.9121%" y="639.50">hprof_slu..</text></g><g><title>hprof_slurp::record_parser::parse_gc_primitive_array_dump (3,082 samples, 1.26%)</title><rect x="57.0708%" y="613" width="1.2585%" height="15" fill="rgb(229,68,17)" fg:x="139767" fg:w="3082"/><text x="57.3208%" y="623.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (83 samples, 0.03%)</title><rect x="58.2954%" y="597" width="0.0339%" height="15" fill="rgb(213,182,10)" fg:x="142766" fg:w="83"/><text x="58.5454%" y="607.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (83 samples, 0.03%)</title><rect x="58.2954%" y="581" width="0.0339%" height="15" fill="rgb(245,125,30)" fg:x="142766" fg:w="83"/><text x="58.5454%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (83 samples, 0.03%)</title><rect x="58.2954%" y="565" width="0.0339%" height="15" fill="rgb(232,202,2)" fg:x="142766" fg:w="83"/><text x="58.5454%" y="575.50"></text></g><g><title>core::ops::function::FnMut::call_mut (83 samples, 0.03%)</title><rect x="58.2954%" y="549" width="0.0339%" height="15" fill="rgb(237,140,51)" fg:x="142766" fg:w="83"/><text x="58.5454%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (25,426 samples, 10.38%)</title><rect x="47.9541%" y="661" width="10.3822%" height="15" fill="rgb(236,157,25)" fg:x="117440" fg:w="25426"/><text x="48.2041%" y="671.50">&lt;F as nom::inte..</text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (24,885 samples, 10.16%)</title><rect x="48.1750%" y="645" width="10.1612%" height="15" fill="rgb(219,209,0)" fg:x="117981" fg:w="24885"/><text x="48.4250%" y="655.50">hprof_slurp::re..</text></g><g><title>__sysvec_apic_timer_interrupt (28 samples, 0.01%)</title><rect x="66.5179%" y="613" width="0.0114%" height="15" fill="rgb(240,116,54)" fg:x="162903" fg:w="28"/><text x="66.7679%" y="623.50"></text></g><g><title>hrtimer_interrupt (26 samples, 0.01%)</title><rect x="66.5187%" y="597" width="0.0106%" height="15" fill="rgb(216,10,36)" fg:x="162905" fg:w="26"/><text x="66.7687%" y="607.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (35 samples, 0.01%)</title><rect x="66.5171%" y="645" width="0.0143%" height="15" fill="rgb(222,72,44)" fg:x="162901" fg:w="35"/><text x="66.7671%" y="655.50"></text></g><g><title>sysvec_apic_timer_interrupt (34 samples, 0.01%)</title><rect x="66.5175%" y="629" width="0.0139%" height="15" fill="rgb(232,159,9)" fg:x="162902" fg:w="34"/><text x="66.7675%" y="639.50"></text></g><g><title>__memcpy_avx_unaligned_erms (20,071 samples, 8.20%)</title><rect x="58.3362%" y="661" width="8.1956%" height="15" fill="rgb(210,39,32)" fg:x="142866" fg:w="20071"/><text x="58.5862%" y="671.50">__memcpy_av..</text></g><g><title>tlb_finish_mmu (32 samples, 0.01%)</title><rect x="67.1700%" y="357" width="0.0131%" height="15" fill="rgb(216,194,45)" fg:x="164500" fg:w="32"/><text x="67.4200%" y="367.50"></text></g><g><title>unmap_page_range (66 samples, 0.03%)</title><rect x="67.1839%" y="325" width="0.0269%" height="15" fill="rgb(218,18,35)" fg:x="164534" fg:w="66"/><text x="67.4339%" y="335.50"></text></g><g><title>zap_pmd_range.isra.0 (66 samples, 0.03%)</title><rect x="67.1839%" y="309" width="0.0269%" height="15" fill="rgb(207,83,51)" fg:x="164534" fg:w="66"/><text x="67.4339%" y="319.50"></text></g><g><title>zap_pte_range (62 samples, 0.03%)</title><rect x="67.1855%" y="293" width="0.0253%" height="15" fill="rgb(225,63,43)" fg:x="164538" fg:w="62"/><text x="67.4355%" y="303.50"></text></g><g><title>unmap_region (123 samples, 0.05%)</title><rect x="67.1610%" y="373" width="0.0502%" height="15" fill="rgb(207,57,36)" fg:x="164478" fg:w="123"/><text x="67.4110%" y="383.50"></text></g><g><title>unmap_vmas (69 samples, 0.03%)</title><rect x="67.1831%" y="357" width="0.0282%" height="15" fill="rgb(216,99,33)" fg:x="164532" fg:w="69"/><text x="67.4331%" y="367.50"></text></g><g><title>unmap_single_vma (68 samples, 0.03%)</title><rect x="67.1835%" y="341" width="0.0278%" height="15" fill="rgb(225,42,16)" fg:x="164533" fg:w="68"/><text x="67.4335%" y="351.50"></text></g><g><title>do_munmap (129 samples, 0.05%)</title><rect x="67.1590%" y="405" width="0.0527%" height="15" fill="rgb(220,201,45)" fg:x="164473" fg:w="129"/><text x="67.4090%" y="415.50"></text></g><g><title>__do_munmap (129 samples, 0.05%)</title><rect x="67.1590%" y="389" width="0.0527%" height="15" fill="rgb(225,33,4)" fg:x="164473" fg:w="129"/><text x="67.4090%" y="399.50"></text></g><g><title>clear_page_erms (44 samples, 0.02%)</title><rect x="67.2223%" y="309" width="0.0180%" height="15" fill="rgb(224,33,50)" fg:x="164628" fg:w="44"/><text x="67.4723%" y="319.50"></text></g><g><title>alloc_pages (77 samples, 0.03%)</title><rect x="67.2149%" y="357" width="0.0314%" height="15" fill="rgb(246,198,51)" fg:x="164610" fg:w="77"/><text x="67.4649%" y="367.50"></text></g><g><title>__alloc_pages (76 samples, 0.03%)</title><rect x="67.2153%" y="341" width="0.0310%" height="15" fill="rgb(205,22,4)" fg:x="164611" fg:w="76"/><text x="67.4653%" y="351.50"></text></g><g><title>get_page_from_freelist (63 samples, 0.03%)</title><rect x="67.2206%" y="325" width="0.0257%" height="15" fill="rgb(206,3,8)" fg:x="164624" fg:w="63"/><text x="67.4706%" y="335.50"></text></g><g><title>__pte_alloc (88 samples, 0.04%)</title><rect x="67.2141%" y="389" width="0.0359%" height="15" fill="rgb(251,23,15)" fg:x="164608" fg:w="88"/><text x="67.4641%" y="399.50"></text></g><g><title>pte_alloc_one (86 samples, 0.04%)</title><rect x="67.2149%" y="373" width="0.0351%" height="15" fill="rgb(252,88,28)" fg:x="164610" fg:w="86"/><text x="67.4649%" y="383.50"></text></g><g><title>_raw_spin_lock (26 samples, 0.01%)</title><rect x="67.2500%" y="389" width="0.0106%" height="15" fill="rgb(212,127,14)" fg:x="164696" fg:w="26"/><text x="67.5000%" y="399.50"></text></g><g><title>move_ptes.constprop.0 (617 samples, 0.25%)</title><rect x="67.2635%" y="389" width="0.2519%" height="15" fill="rgb(247,145,37)" fg:x="164729" fg:w="617"/><text x="67.5135%" y="399.50"></text></g><g><title>flush_tlb_mm_range (31 samples, 0.01%)</title><rect x="67.5028%" y="373" width="0.0127%" height="15" fill="rgb(209,117,53)" fg:x="165315" fg:w="31"/><text x="67.7528%" y="383.50"></text></g><g><title>native_set_pte (26 samples, 0.01%)</title><rect x="67.5154%" y="389" width="0.0106%" height="15" fill="rgb(212,90,42)" fg:x="165346" fg:w="26"/><text x="67.7654%" y="399.50"></text></g><g><title>__mremap (922 samples, 0.38%)</title><rect x="67.1500%" y="501" width="0.3765%" height="15" fill="rgb(218,164,37)" fg:x="164451" fg:w="922"/><text x="67.4000%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (921 samples, 0.38%)</title><rect x="67.1504%" y="485" width="0.3761%" height="15" fill="rgb(246,65,34)" fg:x="164452" fg:w="921"/><text x="67.4004%" y="495.50"></text></g><g><title>do_syscall_64 (920 samples, 0.38%)</title><rect x="67.1508%" y="469" width="0.3757%" height="15" fill="rgb(231,100,33)" fg:x="164453" fg:w="920"/><text x="67.4008%" y="479.50"></text></g><g><title>__x64_sys_mremap (919 samples, 0.38%)</title><rect x="67.1512%" y="453" width="0.3753%" height="15" fill="rgb(228,126,14)" fg:x="164454" fg:w="919"/><text x="67.4012%" y="463.50"></text></g><g><title>__do_sys_mremap (919 samples, 0.38%)</title><rect x="67.1512%" y="437" width="0.3753%" height="15" fill="rgb(215,173,21)" fg:x="164454" fg:w="919"/><text x="67.4012%" y="447.50"></text></g><g><title>move_vma (909 samples, 0.37%)</title><rect x="67.1553%" y="421" width="0.3712%" height="15" fill="rgb(210,6,40)" fg:x="164464" fg:w="909"/><text x="67.4053%" y="431.50"></text></g><g><title>move_page_tables (770 samples, 0.31%)</title><rect x="67.2121%" y="405" width="0.3144%" height="15" fill="rgb(212,48,18)" fg:x="164603" fg:w="770"/><text x="67.4621%" y="415.50"></text></g><g><title>clear_page_erms (191 samples, 0.08%)</title><rect x="68.0516%" y="309" width="0.0780%" height="15" fill="rgb(230,214,11)" fg:x="166659" fg:w="191"/><text x="68.3016%" y="319.50"></text></g><g><title>get_page_from_freelist (309 samples, 0.13%)</title><rect x="68.0434%" y="325" width="0.1262%" height="15" fill="rgb(254,105,39)" fg:x="166639" fg:w="309"/><text x="68.2934%" y="335.50"></text></g><g><title>rmqueue (95 samples, 0.04%)</title><rect x="68.1308%" y="309" width="0.0388%" height="15" fill="rgb(245,158,5)" fg:x="166853" fg:w="95"/><text x="68.3808%" y="319.50"></text></g><g><title>rmqueue_bulk.constprop.0 (75 samples, 0.03%)</title><rect x="68.1390%" y="293" width="0.0306%" height="15" fill="rgb(249,208,11)" fg:x="166873" fg:w="75"/><text x="68.3890%" y="303.50"></text></g><g><title>__alloc_pages (339 samples, 0.14%)</title><rect x="68.0324%" y="341" width="0.1384%" height="15" fill="rgb(210,39,28)" fg:x="166612" fg:w="339"/><text x="68.2824%" y="351.50"></text></g><g><title>alloc_pages_vma (361 samples, 0.15%)</title><rect x="68.0263%" y="357" width="0.1474%" height="15" fill="rgb(211,56,53)" fg:x="166597" fg:w="361"/><text x="68.2763%" y="367.50"></text></g><g><title>__pagevec_lru_add_fn (55 samples, 0.02%)</title><rect x="68.1888%" y="309" width="0.0225%" height="15" fill="rgb(226,201,30)" fg:x="166995" fg:w="55"/><text x="68.4388%" y="319.50"></text></g><g><title>__pagevec_lru_add (70 samples, 0.03%)</title><rect x="68.1867%" y="325" width="0.0286%" height="15" fill="rgb(239,101,34)" fg:x="166990" fg:w="70"/><text x="68.4367%" y="335.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (83 samples, 0.03%)</title><rect x="68.1818%" y="357" width="0.0339%" height="15" fill="rgb(226,209,5)" fg:x="166978" fg:w="83"/><text x="68.4318%" y="367.50"></text></g><g><title>lru_cache_add (80 samples, 0.03%)</title><rect x="68.1831%" y="341" width="0.0327%" height="15" fill="rgb(250,105,47)" fg:x="166981" fg:w="80"/><text x="68.4331%" y="351.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (55 samples, 0.02%)</title><rect x="68.2198%" y="325" width="0.0225%" height="15" fill="rgb(230,72,3)" fg:x="167071" fg:w="55"/><text x="68.4698%" y="335.50"></text></g><g><title>__mem_cgroup_charge (85 samples, 0.03%)</title><rect x="68.2170%" y="341" width="0.0347%" height="15" fill="rgb(232,218,39)" fg:x="167064" fg:w="85"/><text x="68.4670%" y="351.50"></text></g><g><title>mem_cgroup_charge (102 samples, 0.04%)</title><rect x="68.2157%" y="357" width="0.0416%" height="15" fill="rgb(248,166,6)" fg:x="167061" fg:w="102"/><text x="68.4657%" y="367.50"></text></g><g><title>__mod_lruvec_page_state (26 samples, 0.01%)</title><rect x="68.2574%" y="341" width="0.0106%" height="15" fill="rgb(247,89,20)" fg:x="167163" fg:w="26"/><text x="68.5074%" y="351.50"></text></g><g><title>page_add_new_anon_rmap (31 samples, 0.01%)</title><rect x="68.2574%" y="357" width="0.0127%" height="15" fill="rgb(248,130,54)" fg:x="167163" fg:w="31"/><text x="68.5074%" y="367.50"></text></g><g><title>do_anonymous_page (635 samples, 0.26%)</title><rect x="68.0132%" y="373" width="0.2593%" height="15" fill="rgb(234,196,4)" fg:x="166565" fg:w="635"/><text x="68.2632%" y="383.50"></text></g><g><title>handle_pte_fault (663 samples, 0.27%)</title><rect x="68.0050%" y="389" width="0.2707%" height="15" fill="rgb(250,143,31)" fg:x="166545" fg:w="663"/><text x="68.2550%" y="399.50"></text></g><g><title>__handle_mm_fault (698 samples, 0.29%)</title><rect x="67.9928%" y="405" width="0.2850%" height="15" fill="rgb(211,110,34)" fg:x="166515" fg:w="698"/><text x="68.2428%" y="415.50"></text></g><g><title>handle_mm_fault (723 samples, 0.30%)</title><rect x="67.9846%" y="421" width="0.2952%" height="15" fill="rgb(215,124,48)" fg:x="166495" fg:w="723"/><text x="68.2346%" y="431.50"></text></g><g><title>do_user_addr_fault (779 samples, 0.32%)</title><rect x="67.9707%" y="437" width="0.3181%" height="15" fill="rgb(216,46,13)" fg:x="166461" fg:w="779"/><text x="68.2207%" y="447.50"></text></g><g><title>asm_exc_page_fault (820 samples, 0.33%)</title><rect x="67.9617%" y="469" width="0.3348%" height="15" fill="rgb(205,184,25)" fg:x="166439" fg:w="820"/><text x="68.2117%" y="479.50"></text></g><g><title>exc_page_fault (808 samples, 0.33%)</title><rect x="67.9666%" y="453" width="0.3299%" height="15" fill="rgb(228,1,10)" fg:x="166451" fg:w="808"/><text x="68.2166%" y="463.50"></text></g><g><title>__memcpy_avx_unaligned_erms (2,016 samples, 0.82%)</title><rect x="67.5269%" y="485" width="0.8232%" height="15" fill="rgb(213,116,27)" fg:x="165374" fg:w="2016"/><text x="67.7769%" y="495.50"></text></g><g><title>sync_regs (106 samples, 0.04%)</title><rect x="68.3068%" y="469" width="0.0433%" height="15" fill="rgb(241,95,50)" fg:x="167284" fg:w="106"/><text x="68.5568%" y="479.50"></text></g><g><title>malloc_consolidate (516 samples, 0.21%)</title><rect x="68.3566%" y="469" width="0.2107%" height="15" fill="rgb(238,48,32)" fg:x="167406" fg:w="516"/><text x="68.6066%" y="479.50"></text></g><g><title>unlink_chunk.constprop.0 (131 samples, 0.05%)</title><rect x="68.5138%" y="453" width="0.0535%" height="15" fill="rgb(235,113,49)" fg:x="167791" fg:w="131"/><text x="68.7638%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,501 samples, 1.43%)</title><rect x="67.1471%" y="645" width="1.4296%" height="15" fill="rgb(205,127,43)" fg:x="164444" fg:w="3501"/><text x="67.3971%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,501 samples, 1.43%)</title><rect x="67.1471%" y="629" width="1.4296%" height="15" fill="rgb(250,162,2)" fg:x="164444" fg:w="3501"/><text x="67.3971%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3,499 samples, 1.43%)</title><rect x="67.1479%" y="613" width="1.4287%" height="15" fill="rgb(220,13,41)" fg:x="164446" fg:w="3499"/><text x="67.3979%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3,499 samples, 1.43%)</title><rect x="67.1479%" y="597" width="1.4287%" height="15" fill="rgb(249,221,25)" fg:x="164446" fg:w="3499"/><text x="67.3979%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,497 samples, 1.43%)</title><rect x="67.1488%" y="581" width="1.4279%" height="15" fill="rgb(215,208,19)" fg:x="164448" fg:w="3497"/><text x="67.3988%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,497 samples, 1.43%)</title><rect x="67.1488%" y="565" width="1.4279%" height="15" fill="rgb(236,175,2)" fg:x="164448" fg:w="3497"/><text x="67.3988%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3,497 samples, 1.43%)</title><rect x="67.1488%" y="549" width="1.4279%" height="15" fill="rgb(241,52,2)" fg:x="164448" fg:w="3497"/><text x="67.3988%" y="559.50"></text></g><g><title>alloc::alloc::realloc (3,497 samples, 1.43%)</title><rect x="67.1488%" y="533" width="1.4279%" height="15" fill="rgb(248,140,14)" fg:x="164448" fg:w="3497"/><text x="67.3988%" y="543.50"></text></g><g><title>__realloc (3,497 samples, 1.43%)</title><rect x="67.1488%" y="517" width="1.4279%" height="15" fill="rgb(253,22,42)" fg:x="164448" fg:w="3497"/><text x="67.3988%" y="527.50"></text></g><g><title>_int_realloc (2,572 samples, 1.05%)</title><rect x="67.5265%" y="501" width="1.0502%" height="15" fill="rgb(234,61,47)" fg:x="165373" fg:w="2572"/><text x="67.7765%" y="511.50"></text></g><g><title>_int_malloc (547 samples, 0.22%)</title><rect x="68.3533%" y="485" width="0.2234%" height="15" fill="rgb(208,226,15)" fg:x="167398" fg:w="547"/><text x="68.6033%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (479 samples, 0.20%)</title><rect x="68.5783%" y="645" width="0.1956%" height="15" fill="rgb(217,221,4)" fg:x="167949" fg:w="479"/><text x="68.8283%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (479 samples, 0.20%)</title><rect x="68.5783%" y="629" width="0.1956%" height="15" fill="rgb(212,174,34)" fg:x="167949" fg:w="479"/><text x="68.8283%" y="639.50"></text></g><g><title>__irqentry_text_end (312 samples, 0.13%)</title><rect x="78.1083%" y="613" width="0.1274%" height="15" fill="rgb(253,83,4)" fg:x="191288" fg:w="312"/><text x="78.3583%" y="623.50"></text></g><g><title>__cond_resched (33 samples, 0.01%)</title><rect x="78.6273%" y="581" width="0.0135%" height="15" fill="rgb(250,195,49)" fg:x="192559" fg:w="33"/><text x="78.8773%" y="591.50"></text></g><g><title>__cond_resched (37 samples, 0.02%)</title><rect x="78.9005%" y="565" width="0.0151%" height="15" fill="rgb(241,192,25)" fg:x="193228" fg:w="37"/><text x="79.1505%" y="575.50"></text></g><g><title>__count_memcg_events (46 samples, 0.02%)</title><rect x="78.9156%" y="565" width="0.0188%" height="15" fill="rgb(208,124,10)" fg:x="193265" fg:w="46"/><text x="79.1656%" y="575.50"></text></g><g><title>down_read_trylock (370 samples, 0.15%)</title><rect x="78.9503%" y="565" width="0.1511%" height="15" fill="rgb(222,33,0)" fg:x="193350" fg:w="370"/><text x="79.2003%" y="575.50"></text></g><g><title>find_vma (255 samples, 0.10%)</title><rect x="79.1014%" y="565" width="0.1041%" height="15" fill="rgb(234,209,28)" fg:x="193720" fg:w="255"/><text x="79.3514%" y="575.50"></text></g><g><title>vmacache_find (191 samples, 0.08%)</title><rect x="79.1275%" y="549" width="0.0780%" height="15" fill="rgb(224,11,23)" fg:x="193784" fg:w="191"/><text x="79.3775%" y="559.50"></text></g><g><title>__count_memcg_events (195 samples, 0.08%)</title><rect x="79.4472%" y="549" width="0.0796%" height="15" fill="rgb(232,99,1)" fg:x="194567" fg:w="195"/><text x="79.6972%" y="559.50"></text></g><g><title>cgroup_rstat_updated (95 samples, 0.04%)</title><rect x="79.4880%" y="533" width="0.0388%" height="15" fill="rgb(237,95,45)" fg:x="194667" fg:w="95"/><text x="79.7380%" y="543.50"></text></g><g><title>_raw_spin_lock (389 samples, 0.16%)</title><rect x="80.2761%" y="517" width="0.1588%" height="15" fill="rgb(208,109,11)" fg:x="196597" fg:w="389"/><text x="80.5261%" y="527.50"></text></g><g><title>add_mm_counter_fast (43 samples, 0.02%)</title><rect x="80.4350%" y="517" width="0.0176%" height="15" fill="rgb(216,190,48)" fg:x="196986" fg:w="43"/><text x="80.6850%" y="527.50"></text></g><g><title>alloc_pages_vma (38 samples, 0.02%)</title><rect x="80.4525%" y="517" width="0.0155%" height="15" fill="rgb(251,171,36)" fg:x="197029" fg:w="38"/><text x="80.7025%" y="527.50"></text></g><g><title>__get_vma_policy (54 samples, 0.02%)</title><rect x="80.7379%" y="501" width="0.0220%" height="15" fill="rgb(230,62,22)" fg:x="197728" fg:w="54"/><text x="80.9879%" y="511.50"></text></g><g><title>__mem_cgroup_charge (27 samples, 0.01%)</title><rect x="80.7600%" y="501" width="0.0110%" height="15" fill="rgb(225,114,35)" fg:x="197782" fg:w="27"/><text x="81.0100%" y="511.50"></text></g><g><title>__mod_lruvec_page_state (30 samples, 0.01%)</title><rect x="80.7710%" y="501" width="0.0122%" height="15" fill="rgb(215,118,42)" fg:x="197809" fg:w="30"/><text x="81.0210%" y="511.50"></text></g><g><title>__page_set_anon_rmap (49 samples, 0.02%)</title><rect x="80.7833%" y="501" width="0.0200%" height="15" fill="rgb(243,119,21)" fg:x="197839" fg:w="49"/><text x="81.0333%" y="511.50"></text></g><g><title>alloc_pages (54 samples, 0.02%)</title><rect x="80.8033%" y="469" width="0.0220%" height="15" fill="rgb(252,177,53)" fg:x="197888" fg:w="54"/><text x="81.0533%" y="479.50"></text></g><g><title>__alloc_pages (54 samples, 0.02%)</title><rect x="80.8033%" y="453" width="0.0220%" height="15" fill="rgb(237,209,29)" fg:x="197888" fg:w="54"/><text x="81.0533%" y="463.50"></text></g><g><title>get_page_from_freelist (36 samples, 0.01%)</title><rect x="80.8106%" y="437" width="0.0147%" height="15" fill="rgb(212,65,23)" fg:x="197906" fg:w="36"/><text x="81.0606%" y="447.50"></text></g><g><title>pte_alloc_one (62 samples, 0.03%)</title><rect x="80.8033%" y="485" width="0.0253%" height="15" fill="rgb(230,222,46)" fg:x="197888" fg:w="62"/><text x="81.0533%" y="495.50"></text></g><g><title>__pte_alloc (63 samples, 0.03%)</title><rect x="80.8033%" y="501" width="0.0257%" height="15" fill="rgb(215,135,32)" fg:x="197888" fg:w="63"/><text x="81.0533%" y="511.50"></text></g><g><title>__cond_resched (70 samples, 0.03%)</title><rect x="81.2430%" y="469" width="0.0286%" height="15" fill="rgb(246,101,22)" fg:x="198965" fg:w="70"/><text x="81.4930%" y="479.50"></text></g><g><title>__next_zones_zonelist (315 samples, 0.13%)</title><rect x="81.2716%" y="469" width="0.1286%" height="15" fill="rgb(206,107,13)" fg:x="199035" fg:w="315"/><text x="81.5216%" y="479.50"></text></g><g><title>__inc_numa_state (145 samples, 0.06%)</title><rect x="81.7396%" y="453" width="0.0592%" height="15" fill="rgb(250,100,44)" fg:x="200181" fg:w="145"/><text x="81.9896%" y="463.50"></text></g><g><title>clear_page_erms (7,753 samples, 3.17%)</title><rect x="81.8053%" y="453" width="3.1658%" height="15" fill="rgb(231,147,38)" fg:x="200342" fg:w="7753"/><text x="82.0553%" y="463.50">cle..</text></g><g><title>kernel_init_free_pages (135 samples, 0.06%)</title><rect x="84.9711%" y="453" width="0.0551%" height="15" fill="rgb(229,8,40)" fg:x="208095" fg:w="135"/><text x="85.2211%" y="463.50"></text></g><g><title>_raw_spin_lock (31 samples, 0.01%)</title><rect x="85.4206%" y="437" width="0.0127%" height="15" fill="rgb(221,135,30)" fg:x="209196" fg:w="31"/><text x="85.6706%" y="447.50"></text></g><g><title>rmqueue (3,480 samples, 1.42%)</title><rect x="85.0262%" y="453" width="1.4210%" height="15" fill="rgb(249,193,18)" fg:x="208230" fg:w="3480"/><text x="85.2762%" y="463.50"></text></g><g><title>rmqueue_bulk.constprop.0 (2,479 samples, 1.01%)</title><rect x="85.4349%" y="437" width="1.0122%" height="15" fill="rgb(209,133,39)" fg:x="209231" fg:w="2479"/><text x="85.6849%" y="447.50"></text></g><g><title>get_page_from_freelist (12,360 samples, 5.05%)</title><rect x="81.4015%" y="469" width="5.0469%" height="15" fill="rgb(232,100,14)" fg:x="199353" fg:w="12360"/><text x="81.6515%" y="479.50">get_pa..</text></g><g><title>kernel_init_free_pages (66 samples, 0.03%)</title><rect x="86.4484%" y="469" width="0.0269%" height="15" fill="rgb(224,185,1)" fg:x="211713" fg:w="66"/><text x="86.6984%" y="479.50"></text></g><g><title>rcu_all_qs (39 samples, 0.02%)</title><rect x="86.4754%" y="469" width="0.0159%" height="15" fill="rgb(223,139,8)" fg:x="211779" fg:w="39"/><text x="86.7254%" y="479.50"></text></g><g><title>__alloc_pages (13,475 samples, 5.50%)</title><rect x="80.9993%" y="485" width="5.5022%" height="15" fill="rgb(232,213,38)" fg:x="198368" fg:w="13475"/><text x="81.2493%" y="495.50">__alloc..</text></g><g><title>__cond_resched (37 samples, 0.02%)</title><rect x="86.5015%" y="485" width="0.0151%" height="15" fill="rgb(207,94,22)" fg:x="211843" fg:w="37"/><text x="86.7515%" y="495.50"></text></g><g><title>__next_zones_zonelist (74 samples, 0.03%)</title><rect x="86.5166%" y="485" width="0.0302%" height="15" fill="rgb(219,183,54)" fg:x="211880" fg:w="74"/><text x="86.7666%" y="495.50"></text></g><g><title>get_page_from_freelist (35 samples, 0.01%)</title><rect x="86.5472%" y="485" width="0.0143%" height="15" fill="rgb(216,185,54)" fg:x="211955" fg:w="35"/><text x="86.7972%" y="495.50"></text></g><g><title>policy_nodemask (64 samples, 0.03%)</title><rect x="86.5705%" y="485" width="0.0261%" height="15" fill="rgb(254,217,39)" fg:x="212012" fg:w="64"/><text x="86.8205%" y="495.50"></text></g><g><title>alloc_pages_vma (14,157 samples, 5.78%)</title><rect x="80.8298%" y="501" width="5.7807%" height="15" fill="rgb(240,178,23)" fg:x="197953" fg:w="14157"/><text x="81.0798%" y="511.50">alloc_p..</text></g><g><title>should_fail_alloc_page (34 samples, 0.01%)</title><rect x="86.5966%" y="485" width="0.0139%" height="15" fill="rgb(218,11,47)" fg:x="212076" fg:w="34"/><text x="86.8466%" y="495.50"></text></g><g><title>cgroup_throttle_swaprate (580 samples, 0.24%)</title><rect x="86.6109%" y="501" width="0.2368%" height="15" fill="rgb(218,51,51)" fg:x="212111" fg:w="580"/><text x="86.8609%" y="511.50"></text></g><g><title>get_mem_cgroup_from_mm (79 samples, 0.03%)</title><rect x="86.8477%" y="501" width="0.0323%" height="15" fill="rgb(238,126,27)" fg:x="212691" fg:w="79"/><text x="87.0977%" y="511.50"></text></g><g><title>kthread_blkcg (28 samples, 0.01%)</title><rect x="86.8800%" y="501" width="0.0114%" height="15" fill="rgb(249,202,22)" fg:x="212770" fg:w="28"/><text x="87.1300%" y="511.50"></text></g><g><title>lru_cache_add (27 samples, 0.01%)</title><rect x="86.8914%" y="501" width="0.0110%" height="15" fill="rgb(254,195,49)" fg:x="212798" fg:w="27"/><text x="87.1414%" y="511.50"></text></g><g><title>__mod_lruvec_state (32 samples, 0.01%)</title><rect x="87.1814%" y="453" width="0.0131%" height="15" fill="rgb(208,123,14)" fg:x="213508" fg:w="32"/><text x="87.4314%" y="463.50"></text></g><g><title>__mod_zone_page_state (41 samples, 0.02%)</title><rect x="87.1944%" y="453" width="0.0167%" height="15" fill="rgb(224,200,8)" fg:x="213540" fg:w="41"/><text x="87.4444%" y="463.50"></text></g><g><title>__mod_memcg_state.part.0 (89 samples, 0.04%)</title><rect x="87.9286%" y="405" width="0.0363%" height="15" fill="rgb(217,61,36)" fg:x="215338" fg:w="89"/><text x="88.1786%" y="415.50"></text></g><g><title>cgroup_rstat_updated (68 samples, 0.03%)</title><rect x="87.9372%" y="389" width="0.0278%" height="15" fill="rgb(206,35,45)" fg:x="215359" fg:w="68"/><text x="88.1872%" y="399.50"></text></g><g><title>__mod_memcg_lruvec_state (319 samples, 0.13%)</title><rect x="87.8473%" y="421" width="0.1303%" height="15" fill="rgb(217,65,33)" fg:x="215139" fg:w="319"/><text x="88.0973%" y="431.50"></text></g><g><title>cgroup_rstat_updated (31 samples, 0.01%)</title><rect x="87.9649%" y="405" width="0.0127%" height="15" fill="rgb(222,158,48)" fg:x="215427" fg:w="31"/><text x="88.2149%" y="415.50"></text></g><g><title>__mod_memcg_state.part.0 (49 samples, 0.02%)</title><rect x="87.9776%" y="421" width="0.0200%" height="15" fill="rgb(254,2,54)" fg:x="215458" fg:w="49"/><text x="88.2276%" y="431.50"></text></g><g><title>__mod_lruvec_state (517 samples, 0.21%)</title><rect x="87.8183%" y="437" width="0.2111%" height="15" fill="rgb(250,143,38)" fg:x="215068" fg:w="517"/><text x="88.0683%" y="447.50"></text></g><g><title>__mod_node_page_state (78 samples, 0.03%)</title><rect x="87.9976%" y="421" width="0.0318%" height="15" fill="rgb(248,25,0)" fg:x="215507" fg:w="78"/><text x="88.2476%" y="431.50"></text></g><g><title>__mod_node_page_state (79 samples, 0.03%)</title><rect x="88.0364%" y="437" width="0.0323%" height="15" fill="rgb(206,152,27)" fg:x="215602" fg:w="79"/><text x="88.2864%" y="447.50"></text></g><g><title>__mod_zone_page_state (58 samples, 0.02%)</title><rect x="88.0686%" y="437" width="0.0237%" height="15" fill="rgb(240,77,30)" fg:x="215681" fg:w="58"/><text x="88.3186%" y="447.50"></text></g><g><title>mem_cgroup_update_lru_size (73 samples, 0.03%)</title><rect x="88.0923%" y="437" width="0.0298%" height="15" fill="rgb(231,5,3)" fg:x="215739" fg:w="73"/><text x="88.3423%" y="447.50"></text></g><g><title>__pagevec_lru_add_fn (2,536 samples, 1.04%)</title><rect x="87.2112%" y="453" width="1.0355%" height="15" fill="rgb(207,226,32)" fg:x="213581" fg:w="2536"/><text x="87.4612%" y="463.50"></text></g><g><title>page_mapping (305 samples, 0.12%)</title><rect x="88.1221%" y="437" width="0.1245%" height="15" fill="rgb(222,207,47)" fg:x="215812" fg:w="305"/><text x="88.3721%" y="447.50"></text></g><g><title>_raw_spin_lock_irqsave (60 samples, 0.02%)</title><rect x="88.2646%" y="437" width="0.0245%" height="15" fill="rgb(229,115,45)" fg:x="216161" fg:w="60"/><text x="88.5146%" y="447.50"></text></g><g><title>lock_page_lruvec_irqsave (101 samples, 0.04%)</title><rect x="88.2483%" y="453" width="0.0412%" height="15" fill="rgb(224,191,6)" fg:x="216121" fg:w="101"/><text x="88.4983%" y="463.50"></text></g><g><title>mem_cgroup_update_lru_size (30 samples, 0.01%)</title><rect x="88.2900%" y="453" width="0.0122%" height="15" fill="rgb(230,227,24)" fg:x="216223" fg:w="30"/><text x="88.5400%" y="463.50"></text></g><g><title>page_mapping (40 samples, 0.02%)</title><rect x="88.3022%" y="453" width="0.0163%" height="15" fill="rgb(228,80,19)" fg:x="216253" fg:w="40"/><text x="88.5522%" y="463.50"></text></g><g><title>__pagevec_lru_add (3,407 samples, 1.39%)</title><rect x="87.1144%" y="469" width="1.3912%" height="15" fill="rgb(247,229,0)" fg:x="213344" fg:w="3407"/><text x="87.3644%" y="479.50"></text></g><g><title>release_pages (447 samples, 0.18%)</title><rect x="88.3230%" y="453" width="0.1825%" height="15" fill="rgb(237,194,15)" fg:x="216304" fg:w="447"/><text x="88.5730%" y="463.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (3,953 samples, 1.61%)</title><rect x="86.9025%" y="501" width="1.6141%" height="15" fill="rgb(219,203,20)" fg:x="212825" fg:w="3953"/><text x="87.1525%" y="511.50"></text></g><g><title>lru_cache_add (3,892 samples, 1.59%)</title><rect x="86.9274%" y="485" width="1.5892%" height="15" fill="rgb(234,128,8)" fg:x="212886" fg:w="3892"/><text x="87.1774%" y="495.50"></text></g><g><title>arch_local_irq_enable (55 samples, 0.02%)</title><rect x="88.7636%" y="469" width="0.0225%" height="15" fill="rgb(248,202,8)" fg:x="217383" fg:w="55"/><text x="89.0136%" y="479.50"></text></g><g><title>cgroup_rstat_updated (44 samples, 0.02%)</title><rect x="88.7877%" y="469" width="0.0180%" height="15" fill="rgb(206,104,37)" fg:x="217442" fg:w="44"/><text x="89.0377%" y="479.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (2,440 samples, 1.00%)</title><rect x="88.8057%" y="469" width="0.9963%" height="15" fill="rgb(223,8,27)" fg:x="217486" fg:w="2440"/><text x="89.0557%" y="479.50"></text></g><g><title>cgroup_rstat_updated (247 samples, 0.10%)</title><rect x="89.7011%" y="453" width="0.1009%" height="15" fill="rgb(216,217,28)" fg:x="219679" fg:w="247"/><text x="89.9511%" y="463.50"></text></g><g><title>arch_local_irq_enable (74 samples, 0.03%)</title><rect x="90.3120%" y="453" width="0.0302%" height="15" fill="rgb(249,199,1)" fg:x="221175" fg:w="74"/><text x="90.5620%" y="463.50"></text></g><g><title>page_counter_try_charge (138 samples, 0.06%)</title><rect x="90.3434%" y="453" width="0.0563%" height="15" fill="rgb(240,85,17)" fg:x="221252" fg:w="138"/><text x="90.5934%" y="463.50"></text></g><g><title>__mem_cgroup_charge (4,449 samples, 1.82%)</title><rect x="88.5860%" y="485" width="1.8167%" height="15" fill="rgb(206,108,45)" fg:x="216948" fg:w="4449"/><text x="88.8360%" y="495.50">_..</text></g><g><title>try_charge (1,444 samples, 0.59%)</title><rect x="89.8130%" y="469" width="0.5896%" height="15" fill="rgb(245,210,41)" fg:x="219953" fg:w="1444"/><text x="90.0630%" y="479.50"></text></g><g><title>get_mem_cgroup_from_mm (668 samples, 0.27%)</title><rect x="90.4031%" y="485" width="0.2728%" height="15" fill="rgb(206,13,37)" fg:x="221398" fg:w="668"/><text x="90.6531%" y="495.50"></text></g><g><title>memcg_check_events (110 samples, 0.04%)</title><rect x="90.6856%" y="485" width="0.0449%" height="15" fill="rgb(250,61,18)" fg:x="222090" fg:w="110"/><text x="90.9356%" y="495.50"></text></g><g><title>rcu_read_unlock_strict (102 samples, 0.04%)</title><rect x="90.7305%" y="485" width="0.0416%" height="15" fill="rgb(235,172,48)" fg:x="222200" fg:w="102"/><text x="90.9805%" y="495.50"></text></g><g><title>mem_cgroup_charge (5,568 samples, 2.27%)</title><rect x="88.5166%" y="501" width="2.2736%" height="15" fill="rgb(249,201,17)" fg:x="216778" fg:w="5568"/><text x="88.7666%" y="511.50">m..</text></g><g><title>try_charge (44 samples, 0.02%)</title><rect x="90.7722%" y="485" width="0.0180%" height="15" fill="rgb(219,208,6)" fg:x="222302" fg:w="44"/><text x="91.0222%" y="495.50"></text></g><g><title>__mod_memcg_state.part.0 (64 samples, 0.03%)</title><rect x="91.0658%" y="437" width="0.0261%" height="15" fill="rgb(248,31,23)" fg:x="223021" fg:w="64"/><text x="91.3158%" y="447.50"></text></g><g><title>cgroup_rstat_updated (47 samples, 0.02%)</title><rect x="91.0727%" y="421" width="0.0192%" height="15" fill="rgb(245,15,42)" fg:x="223038" fg:w="47"/><text x="91.3227%" y="431.50"></text></g><g><title>__mod_memcg_lruvec_state (362 samples, 0.15%)</title><rect x="90.9600%" y="453" width="0.1478%" height="15" fill="rgb(222,217,39)" fg:x="222762" fg:w="362"/><text x="91.2100%" y="463.50"></text></g><g><title>cgroup_rstat_updated (36 samples, 0.01%)</title><rect x="91.0931%" y="437" width="0.0147%" height="15" fill="rgb(210,219,27)" fg:x="223088" fg:w="36"/><text x="91.3431%" y="447.50"></text></g><g><title>__mod_memcg_state.part.0 (41 samples, 0.02%)</title><rect x="91.1078%" y="453" width="0.0167%" height="15" fill="rgb(252,166,36)" fg:x="223124" fg:w="41"/><text x="91.3578%" y="463.50"></text></g><g><title>__mod_lruvec_state (710 samples, 0.29%)</title><rect x="90.9208%" y="469" width="0.2899%" height="15" fill="rgb(245,132,34)" fg:x="222666" fg:w="710"/><text x="91.1708%" y="479.50"></text></g><g><title>__mod_node_page_state (211 samples, 0.09%)</title><rect x="91.1246%" y="453" width="0.0862%" height="15" fill="rgb(236,54,3)" fg:x="223165" fg:w="211"/><text x="91.3746%" y="463.50"></text></g><g><title>__mod_node_page_state (67 samples, 0.03%)</title><rect x="91.2193%" y="469" width="0.0274%" height="15" fill="rgb(241,173,43)" fg:x="223397" fg:w="67"/><text x="91.4693%" y="479.50"></text></g><g><title>__mod_lruvec_page_state (974 samples, 0.40%)</title><rect x="90.8555%" y="485" width="0.3977%" height="15" fill="rgb(215,190,9)" fg:x="222506" fg:w="974"/><text x="91.1055%" y="495.50"></text></g><g><title>__page_set_anon_rmap (97 samples, 0.04%)</title><rect x="91.2601%" y="485" width="0.0396%" height="15" fill="rgb(242,101,16)" fg:x="223497" fg:w="97"/><text x="91.5101%" y="495.50"></text></g><g><title>page_add_new_anon_rmap (1,254 samples, 0.51%)</title><rect x="90.7971%" y="501" width="0.5120%" height="15" fill="rgb(223,190,21)" fg:x="222363" fg:w="1254"/><text x="91.0471%" y="511.50"></text></g><g><title>pfn_pte (40 samples, 0.02%)</title><rect x="91.3091%" y="501" width="0.0163%" height="15" fill="rgb(215,228,25)" fg:x="223617" fg:w="40"/><text x="91.5591%" y="511.50"></text></g><g><title>pmd_page_vaddr (91 samples, 0.04%)</title><rect x="91.3255%" y="501" width="0.0372%" height="15" fill="rgb(225,36,22)" fg:x="223657" fg:w="91"/><text x="91.5755%" y="511.50"></text></g><g><title>pmd_pfn (95 samples, 0.04%)</title><rect x="91.3626%" y="501" width="0.0388%" height="15" fill="rgb(251,106,46)" fg:x="223748" fg:w="95"/><text x="91.6126%" y="511.50"></text></g><g><title>pmd_val (52 samples, 0.02%)</title><rect x="91.4014%" y="501" width="0.0212%" height="15" fill="rgb(208,90,1)" fg:x="223843" fg:w="52"/><text x="91.6514%" y="511.50"></text></g><g><title>policy_node (39 samples, 0.02%)</title><rect x="91.4227%" y="501" width="0.0159%" height="15" fill="rgb(243,10,4)" fg:x="223895" fg:w="39"/><text x="91.6727%" y="511.50"></text></g><g><title>rcu_read_unlock_strict (39 samples, 0.02%)</title><rect x="91.4529%" y="501" width="0.0159%" height="15" fill="rgb(212,137,27)" fg:x="223969" fg:w="39"/><text x="91.7029%" y="511.50"></text></g><g><title>do_anonymous_page (26,934 samples, 11.00%)</title><rect x="80.4754%" y="517" width="10.9979%" height="15" fill="rgb(231,220,49)" fg:x="197085" fg:w="26934"/><text x="80.7254%" y="527.50">do_anonymous_page</text></g><g><title>lru_cache_add_inactive_or_unevictable (27 samples, 0.01%)</title><rect x="91.4733%" y="517" width="0.0110%" height="15" fill="rgb(237,96,20)" fg:x="224019" fg:w="27"/><text x="91.7233%" y="527.50"></text></g><g><title>pfn_pte (54 samples, 0.02%)</title><rect x="91.5011%" y="517" width="0.0220%" height="15" fill="rgb(239,229,30)" fg:x="224087" fg:w="54"/><text x="91.7511%" y="527.50"></text></g><g><title>pmd_page_vaddr (143 samples, 0.06%)</title><rect x="91.5231%" y="517" width="0.0584%" height="15" fill="rgb(219,65,33)" fg:x="224141" fg:w="143"/><text x="91.7731%" y="527.50"></text></g><g><title>pmd_pfn (39 samples, 0.02%)</title><rect x="91.5815%" y="517" width="0.0159%" height="15" fill="rgb(243,134,7)" fg:x="224284" fg:w="39"/><text x="91.8315%" y="527.50"></text></g><g><title>pmd_val (100 samples, 0.04%)</title><rect x="91.5974%" y="517" width="0.0408%" height="15" fill="rgb(216,177,54)" fg:x="224323" fg:w="100"/><text x="91.8474%" y="527.50"></text></g><g><title>queued_spin_unlock (28 samples, 0.01%)</title><rect x="91.6383%" y="517" width="0.0114%" height="15" fill="rgb(211,160,20)" fg:x="224423" fg:w="28"/><text x="91.8883%" y="527.50"></text></g><g><title>handle_pte_fault (28,293 samples, 11.55%)</title><rect x="80.0977%" y="533" width="11.5528%" height="15" fill="rgb(239,85,39)" fg:x="196160" fg:w="28293"/><text x="80.3477%" y="543.50">handle_pte_fault</text></g><g><title>pmd_val (90 samples, 0.04%)</title><rect x="91.6554%" y="533" width="0.0367%" height="15" fill="rgb(232,125,22)" fg:x="224465" fg:w="90"/><text x="91.9054%" y="543.50"></text></g><g><title>__handle_mm_fault (29,889 samples, 12.20%)</title><rect x="79.5268%" y="549" width="12.2045%" height="15" fill="rgb(244,57,34)" fg:x="194762" fg:w="29889"/><text x="79.7768%" y="559.50">__handle_mm_fault</text></g><g><title>pud_val (96 samples, 0.04%)</title><rect x="91.6922%" y="533" width="0.0392%" height="15" fill="rgb(214,203,32)" fg:x="224555" fg:w="96"/><text x="91.9422%" y="543.50"></text></g><g><title>handle_pte_fault (39 samples, 0.02%)</title><rect x="91.7416%" y="549" width="0.0159%" height="15" fill="rgb(207,58,43)" fg:x="224676" fg:w="39"/><text x="91.9916%" y="559.50"></text></g><g><title>p4d_offset (39 samples, 0.02%)</title><rect x="91.7665%" y="549" width="0.0159%" height="15" fill="rgb(215,193,15)" fg:x="224737" fg:w="39"/><text x="92.0165%" y="559.50"></text></g><g><title>pmd_val (37 samples, 0.02%)</title><rect x="91.7897%" y="549" width="0.0151%" height="15" fill="rgb(232,15,44)" fg:x="224794" fg:w="37"/><text x="92.0397%" y="559.50"></text></g><g><title>pud_val (80 samples, 0.03%)</title><rect x="91.8049%" y="549" width="0.0327%" height="15" fill="rgb(212,3,48)" fg:x="224831" fg:w="80"/><text x="92.0549%" y="559.50"></text></g><g><title>handle_mm_fault (30,972 samples, 12.65%)</title><rect x="79.2055%" y="565" width="12.6467%" height="15" fill="rgb(218,128,7)" fg:x="193975" fg:w="30972"/><text x="79.4555%" y="575.50">handle_mm_fault</text></g><g><title>mem_cgroup_from_task (68 samples, 0.03%)</title><rect x="91.8522%" y="565" width="0.0278%" height="15" fill="rgb(226,216,39)" fg:x="224947" fg:w="68"/><text x="92.1022%" y="575.50"></text></g><g><title>rcu_all_qs (41 samples, 0.02%)</title><rect x="91.8800%" y="565" width="0.0167%" height="15" fill="rgb(243,47,51)" fg:x="225015" fg:w="41"/><text x="92.1300%" y="575.50"></text></g><g><title>up_read (462 samples, 0.19%)</title><rect x="91.9057%" y="565" width="0.1886%" height="15" fill="rgb(241,183,40)" fg:x="225078" fg:w="462"/><text x="92.1557%" y="575.50"></text></g><g><title>do_user_addr_fault (32,967 samples, 13.46%)</title><rect x="78.6408%" y="581" width="13.4614%" height="15" fill="rgb(231,217,32)" fg:x="192592" fg:w="32967"/><text x="78.8908%" y="591.50">do_user_addr_fault</text></g><g><title>down_read_trylock (38 samples, 0.02%)</title><rect x="92.1021%" y="581" width="0.0155%" height="15" fill="rgb(229,61,38)" fg:x="225559" fg:w="38"/><text x="92.3521%" y="591.50"></text></g><g><title>find_vma (26 samples, 0.01%)</title><rect x="92.1176%" y="581" width="0.0106%" height="15" fill="rgb(225,210,5)" fg:x="225597" fg:w="26"/><text x="92.3676%" y="591.50"></text></g><g><title>handle_mm_fault (40 samples, 0.02%)</title><rect x="92.1282%" y="581" width="0.0163%" height="15" fill="rgb(231,79,45)" fg:x="225623" fg:w="40"/><text x="92.3782%" y="591.50"></text></g><g><title>irqentry_enter (26 samples, 0.01%)</title><rect x="92.1446%" y="581" width="0.0106%" height="15" fill="rgb(224,100,7)" fg:x="225663" fg:w="26"/><text x="92.3946%" y="591.50"></text></g><g><title>exit_to_user_mode_prepare (56 samples, 0.02%)</title><rect x="92.1748%" y="565" width="0.0229%" height="15" fill="rgb(241,198,18)" fg:x="225737" fg:w="56"/><text x="92.4248%" y="575.50"></text></g><g><title>exit_to_user_mode_prepare (438 samples, 0.18%)</title><rect x="92.2079%" y="549" width="0.1788%" height="15" fill="rgb(252,97,53)" fg:x="225818" fg:w="438"/><text x="92.4579%" y="559.50"></text></g><g><title>fpregs_assert_state_consistent (60 samples, 0.02%)</title><rect x="92.3622%" y="533" width="0.0245%" height="15" fill="rgb(220,88,7)" fg:x="226196" fg:w="60"/><text x="92.6122%" y="543.50"></text></g><g><title>irqentry_exit (589 samples, 0.24%)</title><rect x="92.1605%" y="581" width="0.2405%" height="15" fill="rgb(213,176,14)" fg:x="225702" fg:w="589"/><text x="92.4105%" y="591.50"></text></g><g><title>irqentry_exit_to_user_mode (498 samples, 0.20%)</title><rect x="92.1977%" y="565" width="0.2033%" height="15" fill="rgb(246,73,7)" fg:x="225793" fg:w="498"/><text x="92.4477%" y="575.50"></text></g><g><title>fpregs_assert_state_consistent (35 samples, 0.01%)</title><rect x="92.3867%" y="549" width="0.0143%" height="15" fill="rgb(245,64,36)" fg:x="226256" fg:w="35"/><text x="92.6367%" y="559.50"></text></g><g><title>exc_page_fault (34,127 samples, 13.94%)</title><rect x="78.4750%" y="597" width="13.9350%" height="15" fill="rgb(245,80,10)" fg:x="192186" fg:w="34127"/><text x="78.7250%" y="607.50">exc_page_fault</text></g><g><title>asm_exc_page_fault (34,741 samples, 14.19%)</title><rect x="78.2361%" y="613" width="14.1857%" height="15" fill="rgb(232,107,50)" fg:x="191601" fg:w="34741"/><text x="78.4861%" y="623.50">asm_exc_page_fault</text></g><g><title>asm_sysvec_apic_timer_interrupt (26 samples, 0.01%)</title><rect x="92.4218%" y="613" width="0.0106%" height="15" fill="rgb(253,3,0)" fg:x="226342" fg:w="26"/><text x="92.6718%" y="623.50"></text></g><g><title>sysvec_apic_timer_interrupt (26 samples, 0.01%)</title><rect x="92.4218%" y="597" width="0.0106%" height="15" fill="rgb(212,99,53)" fg:x="226342" fg:w="26"/><text x="92.6718%" y="607.50"></text></g><g><title>error_entry (941 samples, 0.38%)</title><rect x="92.4329%" y="613" width="0.3842%" height="15" fill="rgb(249,111,54)" fg:x="226369" fg:w="941"/><text x="92.6829%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (62,952 samples, 25.71%)</title><rect x="68.8715%" y="629" width="25.7051%" height="15" fill="rgb(249,55,30)" fg:x="168667" fg:w="62952"/><text x="69.1215%" y="639.50">__memcpy_avx_unaligned_erms</text></g><g><title>sync_regs (4,270 samples, 1.74%)</title><rect x="92.8330%" y="613" width="1.7436%" height="15" fill="rgb(237,47,42)" fg:x="227349" fg:w="4270"/><text x="93.0830%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (68,683 samples, 28.05%)</title><rect x="66.5318%" y="661" width="28.0452%" height="15" fill="rgb(211,20,18)" fg:x="162937" fg:w="68683"/><text x="66.7818%" y="671.50">alloc::vec::Vec&lt;T,A&gt;::push</text></g><g><title>core::ptr::write (63,192 samples, 25.80%)</title><rect x="68.7739%" y="645" width="25.8031%" height="15" fill="rgb(231,203,46)" fg:x="168428" fg:w="63192"/><text x="69.0239%" y="655.50">core::ptr::write</text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (116,030 samples, 47.38%)</title><rect x="47.4237%" y="693" width="47.3783%" height="15" fill="rgb(237,142,3)" fg:x="116141" fg:w="116030"/><text x="47.6737%" y="703.50">hprof_slurp::record_parser::HprofRecordParser::parse_streaming</text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (116,030 samples, 47.38%)</title><rect x="47.4237%" y="677" width="47.3783%" height="15" fill="rgb(241,107,1)" fg:x="116141" fg:w="116030"/><text x="47.6737%" y="687.50">hprof_slurp::record_parser::lazy_many1::{{closure}}</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (530 samples, 0.22%)</title><rect x="94.5856%" y="661" width="0.2164%" height="15" fill="rgb(229,83,13)" fg:x="231641" fg:w="530"/><text x="94.8356%" y="671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (530 samples, 0.22%)</title><rect x="94.5856%" y="645" width="0.2164%" height="15" fill="rgb(241,91,40)" fg:x="231641" fg:w="530"/><text x="94.8356%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (530 samples, 0.22%)</title><rect x="94.5856%" y="629" width="0.2164%" height="15" fill="rgb(225,3,45)" fg:x="231641" fg:w="530"/><text x="94.8356%" y="639.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (37 samples, 0.02%)</title><rect x="94.8020%" y="677" width="0.0151%" height="15" fill="rgb(244,223,14)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="687.50"></text></g><g><title>std::io::default_read_exact (37 samples, 0.02%)</title><rect x="94.8020%" y="661" width="0.0151%" height="15" fill="rgb(224,124,37)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="671.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (37 samples, 0.02%)</title><rect x="94.8020%" y="645" width="0.0151%" height="15" fill="rgb(251,171,30)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="655.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (37 samples, 0.02%)</title><rect x="94.8020%" y="629" width="0.0151%" height="15" fill="rgb(236,46,54)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="639.50"></text></g><g><title>std::sys::unix::fs::File::read (37 samples, 0.02%)</title><rect x="94.8020%" y="613" width="0.0151%" height="15" fill="rgb(245,213,5)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="623.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (37 samples, 0.02%)</title><rect x="94.8020%" y="597" width="0.0151%" height="15" fill="rgb(230,144,27)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="607.50"></text></g><g><title>__libc_read (37 samples, 0.02%)</title><rect x="94.8020%" y="581" width="0.0151%" height="15" fill="rgb(220,86,6)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="591.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (37 samples, 0.02%)</title><rect x="94.8020%" y="565" width="0.0151%" height="15" fill="rgb(240,20,13)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="575.50"></text></g><g><title>do_syscall_64 (37 samples, 0.02%)</title><rect x="94.8020%" y="549" width="0.0151%" height="15" fill="rgb(217,89,34)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="559.50"></text></g><g><title>__x64_sys_read (37 samples, 0.02%)</title><rect x="94.8020%" y="533" width="0.0151%" height="15" fill="rgb(229,13,5)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="543.50"></text></g><g><title>ksys_read (37 samples, 0.02%)</title><rect x="94.8020%" y="517" width="0.0151%" height="15" fill="rgb(244,67,35)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="527.50"></text></g><g><title>vfs_read (37 samples, 0.02%)</title><rect x="94.8020%" y="501" width="0.0151%" height="15" fill="rgb(221,40,2)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="511.50"></text></g><g><title>new_sync_read (37 samples, 0.02%)</title><rect x="94.8020%" y="485" width="0.0151%" height="15" fill="rgb(237,157,21)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="495.50"></text></g><g><title>ext4_file_read_iter (37 samples, 0.02%)</title><rect x="94.8020%" y="469" width="0.0151%" height="15" fill="rgb(222,94,11)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="479.50"></text></g><g><title>generic_file_read_iter (37 samples, 0.02%)</title><rect x="94.8020%" y="453" width="0.0151%" height="15" fill="rgb(249,113,6)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="463.50"></text></g><g><title>filemap_read (37 samples, 0.02%)</title><rect x="94.8020%" y="437" width="0.0151%" height="15" fill="rgb(238,137,36)" fg:x="232171" fg:w="37"/><text x="95.0520%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (34 samples, 0.01%)</title><rect x="94.8383%" y="501" width="0.0139%" height="15" fill="rgb(210,102,26)" fg:x="232260" fg:w="34"/><text x="95.0883%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (34 samples, 0.01%)</title><rect x="94.8383%" y="485" width="0.0139%" height="15" fill="rgb(218,30,30)" fg:x="232260" fg:w="34"/><text x="95.0883%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (34 samples, 0.01%)</title><rect x="94.8383%" y="469" width="0.0139%" height="15" fill="rgb(214,67,26)" fg:x="232260" fg:w="34"/><text x="95.0883%" y="479.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (34 samples, 0.01%)</title><rect x="94.8383%" y="453" width="0.0139%" height="15" fill="rgb(251,9,53)" fg:x="232260" fg:w="34"/><text x="95.0883%" y="463.50"></text></g><g><title>nom::number::streaming::be_u64 (34 samples, 0.01%)</title><rect x="94.8383%" y="437" width="0.0139%" height="15" fill="rgb(228,204,25)" fg:x="232260" fg:w="34"/><text x="95.0883%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (40 samples, 0.02%)</title><rect x="94.8522%" y="501" width="0.0163%" height="15" fill="rgb(207,153,8)" fg:x="232294" fg:w="40"/><text x="95.1022%" y="511.50"></text></g><g><title>core::ptr::write (34 samples, 0.01%)</title><rect x="94.8547%" y="485" width="0.0139%" height="15" fill="rgb(242,9,16)" fg:x="232300" fg:w="34"/><text x="95.1047%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (106 samples, 0.04%)</title><rect x="94.8281%" y="677" width="0.0433%" height="15" fill="rgb(217,211,10)" fg:x="232235" fg:w="106"/><text x="95.0781%" y="687.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (106 samples, 0.04%)</title><rect x="94.8281%" y="661" width="0.0433%" height="15" fill="rgb(219,228,52)" fg:x="232235" fg:w="106"/><text x="95.0781%" y="671.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (106 samples, 0.04%)</title><rect x="94.8281%" y="645" width="0.0433%" height="15" fill="rgb(231,92,29)" fg:x="232235" fg:w="106"/><text x="95.0781%" y="655.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (106 samples, 0.04%)</title><rect x="94.8281%" y="629" width="0.0433%" height="15" fill="rgb(232,8,23)" fg:x="232235" fg:w="106"/><text x="95.0781%" y="639.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (106 samples, 0.04%)</title><rect x="94.8281%" y="613" width="0.0433%" height="15" fill="rgb(216,211,34)" fg:x="232235" fg:w="106"/><text x="95.0781%" y="623.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (106 samples, 0.04%)</title><rect x="94.8281%" y="597" width="0.0433%" height="15" fill="rgb(236,151,0)" fg:x="232235" fg:w="106"/><text x="95.0781%" y="607.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (106 samples, 0.04%)</title><rect x="94.8281%" y="581" width="0.0433%" height="15" fill="rgb(209,168,3)" fg:x="232235" fg:w="106"/><text x="95.0781%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (106 samples, 0.04%)</title><rect x="94.8281%" y="565" width="0.0433%" height="15" fill="rgb(208,129,28)" fg:x="232235" fg:w="106"/><text x="95.0781%" y="575.50"></text></g><g><title>nom::combinator::map::{{closure}} (106 samples, 0.04%)</title><rect x="94.8281%" y="549" width="0.0433%" height="15" fill="rgb(229,78,22)" fg:x="232235" fg:w="106"/><text x="95.0781%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (106 samples, 0.04%)</title><rect x="94.8281%" y="533" width="0.0433%" height="15" fill="rgb(228,187,13)" fg:x="232235" fg:w="106"/><text x="95.0781%" y="543.50"></text></g><g><title>nom::multi::count::{{closure}} (106 samples, 0.04%)</title><rect x="94.8281%" y="517" width="0.0433%" height="15" fill="rgb(240,119,24)" fg:x="232235" fg:w="106"/><text x="95.0781%" y="527.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (37 samples, 0.02%)</title><rect x="94.8714%" y="661" width="0.0151%" height="15" fill="rgb(209,194,42)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="671.50"></text></g><g><title>std::io::default_read_exact (37 samples, 0.02%)</title><rect x="94.8714%" y="645" width="0.0151%" height="15" fill="rgb(247,200,46)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="655.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (37 samples, 0.02%)</title><rect x="94.8714%" y="629" width="0.0151%" height="15" fill="rgb(218,76,16)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="639.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (37 samples, 0.02%)</title><rect x="94.8714%" y="613" width="0.0151%" height="15" fill="rgb(225,21,48)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="623.50"></text></g><g><title>std::sys::unix::fs::File::read (37 samples, 0.02%)</title><rect x="94.8714%" y="597" width="0.0151%" height="15" fill="rgb(239,223,50)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="607.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (37 samples, 0.02%)</title><rect x="94.8714%" y="581" width="0.0151%" height="15" fill="rgb(244,45,21)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="591.50"></text></g><g><title>__libc_read (37 samples, 0.02%)</title><rect x="94.8714%" y="565" width="0.0151%" height="15" fill="rgb(232,33,43)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (37 samples, 0.02%)</title><rect x="94.8714%" y="549" width="0.0151%" height="15" fill="rgb(209,8,3)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="559.50"></text></g><g><title>do_syscall_64 (37 samples, 0.02%)</title><rect x="94.8714%" y="533" width="0.0151%" height="15" fill="rgb(214,25,53)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="543.50"></text></g><g><title>__x64_sys_read (37 samples, 0.02%)</title><rect x="94.8714%" y="517" width="0.0151%" height="15" fill="rgb(254,186,54)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="527.50"></text></g><g><title>ksys_read (37 samples, 0.02%)</title><rect x="94.8714%" y="501" width="0.0151%" height="15" fill="rgb(208,174,49)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="511.50"></text></g><g><title>vfs_read (37 samples, 0.02%)</title><rect x="94.8714%" y="485" width="0.0151%" height="15" fill="rgb(233,191,51)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="495.50"></text></g><g><title>new_sync_read (37 samples, 0.02%)</title><rect x="94.8714%" y="469" width="0.0151%" height="15" fill="rgb(222,134,10)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="479.50"></text></g><g><title>ext4_file_read_iter (37 samples, 0.02%)</title><rect x="94.8714%" y="453" width="0.0151%" height="15" fill="rgb(230,226,20)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="463.50"></text></g><g><title>generic_file_read_iter (37 samples, 0.02%)</title><rect x="94.8714%" y="437" width="0.0151%" height="15" fill="rgb(251,111,25)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="447.50"></text></g><g><title>filemap_read (37 samples, 0.02%)</title><rect x="94.8714%" y="421" width="0.0151%" height="15" fill="rgb(224,40,46)" fg:x="232341" fg:w="37"/><text x="95.1214%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (54 samples, 0.02%)</title><rect x="94.9081%" y="485" width="0.0220%" height="15" fill="rgb(236,108,47)" fg:x="232431" fg:w="54"/><text x="95.1581%" y="495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (54 samples, 0.02%)</title><rect x="94.9081%" y="469" width="0.0220%" height="15" fill="rgb(234,93,0)" fg:x="232431" fg:w="54"/><text x="95.1581%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (54 samples, 0.02%)</title><rect x="94.9081%" y="453" width="0.0220%" height="15" fill="rgb(224,213,32)" fg:x="232431" fg:w="54"/><text x="95.1581%" y="463.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (54 samples, 0.02%)</title><rect x="94.9081%" y="437" width="0.0220%" height="15" fill="rgb(251,11,48)" fg:x="232431" fg:w="54"/><text x="95.1581%" y="447.50"></text></g><g><title>nom::number::streaming::be_u64 (54 samples, 0.02%)</title><rect x="94.9081%" y="421" width="0.0220%" height="15" fill="rgb(236,173,5)" fg:x="232431" fg:w="54"/><text x="95.1581%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.01%)</title><rect x="94.9167%" y="405" width="0.0135%" height="15" fill="rgb(230,95,12)" fg:x="232452" fg:w="33"/><text x="95.1667%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.01%)</title><rect x="94.9167%" y="389" width="0.0135%" height="15" fill="rgb(232,209,1)" fg:x="232452" fg:w="33"/><text x="95.1667%" y="399.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (33 samples, 0.01%)</title><rect x="94.9167%" y="373" width="0.0135%" height="15" fill="rgb(232,6,1)" fg:x="232452" fg:w="33"/><text x="95.1667%" y="383.50"></text></g><g><title>do_anonymous_page (26 samples, 0.01%)</title><rect x="94.9384%" y="357" width="0.0106%" height="15" fill="rgb(210,224,50)" fg:x="232505" fg:w="26"/><text x="95.1884%" y="367.50"></text></g><g><title>__handle_mm_fault (30 samples, 0.01%)</title><rect x="94.9380%" y="389" width="0.0122%" height="15" fill="rgb(228,127,35)" fg:x="232504" fg:w="30"/><text x="95.1880%" y="399.50"></text></g><g><title>handle_pte_fault (30 samples, 0.01%)</title><rect x="94.9380%" y="373" width="0.0122%" height="15" fill="rgb(245,102,45)" fg:x="232504" fg:w="30"/><text x="95.1880%" y="383.50"></text></g><g><title>do_user_addr_fault (33 samples, 0.01%)</title><rect x="94.9375%" y="421" width="0.0135%" height="15" fill="rgb(214,1,49)" fg:x="232503" fg:w="33"/><text x="95.1875%" y="431.50"></text></g><g><title>handle_mm_fault (32 samples, 0.01%)</title><rect x="94.9380%" y="405" width="0.0131%" height="15" fill="rgb(226,163,40)" fg:x="232504" fg:w="32"/><text x="95.1880%" y="415.50"></text></g><g><title>asm_exc_page_fault (34 samples, 0.01%)</title><rect x="94.9375%" y="453" width="0.0139%" height="15" fill="rgb(239,212,28)" fg:x="232503" fg:w="34"/><text x="95.1875%" y="463.50"></text></g><g><title>exc_page_fault (34 samples, 0.01%)</title><rect x="94.9375%" y="437" width="0.0139%" height="15" fill="rgb(220,20,13)" fg:x="232503" fg:w="34"/><text x="95.1875%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (58 samples, 0.02%)</title><rect x="94.9302%" y="485" width="0.0237%" height="15" fill="rgb(210,164,35)" fg:x="232485" fg:w="58"/><text x="95.1802%" y="495.50"></text></g><g><title>core::ptr::write (42 samples, 0.02%)</title><rect x="94.9367%" y="469" width="0.0171%" height="15" fill="rgb(248,109,41)" fg:x="232501" fg:w="42"/><text x="95.1867%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (150 samples, 0.06%)</title><rect x="94.8967%" y="661" width="0.0612%" height="15" fill="rgb(238,23,50)" fg:x="232403" fg:w="150"/><text x="95.1467%" y="671.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (150 samples, 0.06%)</title><rect x="94.8967%" y="645" width="0.0612%" height="15" fill="rgb(211,48,49)" fg:x="232403" fg:w="150"/><text x="95.1467%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (150 samples, 0.06%)</title><rect x="94.8967%" y="629" width="0.0612%" height="15" fill="rgb(223,36,21)" fg:x="232403" fg:w="150"/><text x="95.1467%" y="639.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (150 samples, 0.06%)</title><rect x="94.8967%" y="613" width="0.0612%" height="15" fill="rgb(207,123,46)" fg:x="232403" fg:w="150"/><text x="95.1467%" y="623.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (150 samples, 0.06%)</title><rect x="94.8967%" y="597" width="0.0612%" height="15" fill="rgb(240,218,32)" fg:x="232403" fg:w="150"/><text x="95.1467%" y="607.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (150 samples, 0.06%)</title><rect x="94.8967%" y="581" width="0.0612%" height="15" fill="rgb(252,5,43)" fg:x="232403" fg:w="150"/><text x="95.1467%" y="591.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (150 samples, 0.06%)</title><rect x="94.8967%" y="565" width="0.0612%" height="15" fill="rgb(252,84,19)" fg:x="232403" fg:w="150"/><text x="95.1467%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (150 samples, 0.06%)</title><rect x="94.8967%" y="549" width="0.0612%" height="15" fill="rgb(243,152,39)" fg:x="232403" fg:w="150"/><text x="95.1467%" y="559.50"></text></g><g><title>nom::combinator::map::{{closure}} (150 samples, 0.06%)</title><rect x="94.8967%" y="533" width="0.0612%" height="15" fill="rgb(234,160,15)" fg:x="232403" fg:w="150"/><text x="95.1467%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (150 samples, 0.06%)</title><rect x="94.8967%" y="517" width="0.0612%" height="15" fill="rgb(237,34,20)" fg:x="232403" fg:w="150"/><text x="95.1467%" y="527.50"></text></g><g><title>nom::multi::count::{{closure}} (150 samples, 0.06%)</title><rect x="94.8967%" y="501" width="0.0612%" height="15" fill="rgb(229,97,13)" fg:x="232403" fg:w="150"/><text x="95.1467%" y="511.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (36 samples, 0.01%)</title><rect x="94.9580%" y="645" width="0.0147%" height="15" fill="rgb(234,71,50)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="655.50"></text></g><g><title>std::io::default_read_exact (36 samples, 0.01%)</title><rect x="94.9580%" y="629" width="0.0147%" height="15" fill="rgb(253,155,4)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="639.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (36 samples, 0.01%)</title><rect x="94.9580%" y="613" width="0.0147%" height="15" fill="rgb(222,185,37)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="623.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (36 samples, 0.01%)</title><rect x="94.9580%" y="597" width="0.0147%" height="15" fill="rgb(251,177,13)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="607.50"></text></g><g><title>std::sys::unix::fs::File::read (36 samples, 0.01%)</title><rect x="94.9580%" y="581" width="0.0147%" height="15" fill="rgb(250,179,40)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="591.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (36 samples, 0.01%)</title><rect x="94.9580%" y="565" width="0.0147%" height="15" fill="rgb(242,44,2)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="575.50"></text></g><g><title>__libc_read (36 samples, 0.01%)</title><rect x="94.9580%" y="549" width="0.0147%" height="15" fill="rgb(216,177,13)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (36 samples, 0.01%)</title><rect x="94.9580%" y="533" width="0.0147%" height="15" fill="rgb(216,106,43)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="543.50"></text></g><g><title>do_syscall_64 (36 samples, 0.01%)</title><rect x="94.9580%" y="517" width="0.0147%" height="15" fill="rgb(216,183,2)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="527.50"></text></g><g><title>__x64_sys_read (36 samples, 0.01%)</title><rect x="94.9580%" y="501" width="0.0147%" height="15" fill="rgb(249,75,3)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="511.50"></text></g><g><title>ksys_read (36 samples, 0.01%)</title><rect x="94.9580%" y="485" width="0.0147%" height="15" fill="rgb(219,67,39)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="495.50"></text></g><g><title>vfs_read (36 samples, 0.01%)</title><rect x="94.9580%" y="469" width="0.0147%" height="15" fill="rgb(253,228,2)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="479.50"></text></g><g><title>new_sync_read (36 samples, 0.01%)</title><rect x="94.9580%" y="453" width="0.0147%" height="15" fill="rgb(235,138,27)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="463.50"></text></g><g><title>ext4_file_read_iter (36 samples, 0.01%)</title><rect x="94.9580%" y="437" width="0.0147%" height="15" fill="rgb(236,97,51)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="447.50"></text></g><g><title>generic_file_read_iter (36 samples, 0.01%)</title><rect x="94.9580%" y="421" width="0.0147%" height="15" fill="rgb(240,80,30)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="431.50"></text></g><g><title>filemap_read (36 samples, 0.01%)</title><rect x="94.9580%" y="405" width="0.0147%" height="15" fill="rgb(230,178,19)" fg:x="232553" fg:w="36"/><text x="95.2080%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (60 samples, 0.02%)</title><rect x="94.9984%" y="469" width="0.0245%" height="15" fill="rgb(210,190,27)" fg:x="232652" fg:w="60"/><text x="95.2484%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (60 samples, 0.02%)</title><rect x="94.9984%" y="453" width="0.0245%" height="15" fill="rgb(222,107,31)" fg:x="232652" fg:w="60"/><text x="95.2484%" y="463.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (60 samples, 0.02%)</title><rect x="94.9984%" y="437" width="0.0245%" height="15" fill="rgb(216,127,34)" fg:x="232652" fg:w="60"/><text x="95.2484%" y="447.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (60 samples, 0.02%)</title><rect x="94.9984%" y="421" width="0.0245%" height="15" fill="rgb(234,116,52)" fg:x="232652" fg:w="60"/><text x="95.2484%" y="431.50"></text></g><g><title>nom::number::streaming::be_u64 (60 samples, 0.02%)</title><rect x="94.9984%" y="405" width="0.0245%" height="15" fill="rgb(222,124,15)" fg:x="232652" fg:w="60"/><text x="95.2484%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.02%)</title><rect x="95.0053%" y="389" width="0.0176%" height="15" fill="rgb(231,179,28)" fg:x="232669" fg:w="43"/><text x="95.2553%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.02%)</title><rect x="95.0053%" y="373" width="0.0176%" height="15" fill="rgb(226,93,45)" fg:x="232669" fg:w="43"/><text x="95.2553%" y="383.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (43 samples, 0.02%)</title><rect x="95.0053%" y="357" width="0.0176%" height="15" fill="rgb(215,8,51)" fg:x="232669" fg:w="43"/><text x="95.2553%" y="367.50"></text></g><g><title>handle_pte_fault (37 samples, 0.02%)</title><rect x="95.0364%" y="357" width="0.0151%" height="15" fill="rgb(223,106,5)" fg:x="232745" fg:w="37"/><text x="95.2864%" y="367.50"></text></g><g><title>do_anonymous_page (36 samples, 0.01%)</title><rect x="95.0368%" y="341" width="0.0147%" height="15" fill="rgb(250,191,5)" fg:x="232746" fg:w="36"/><text x="95.2868%" y="351.50"></text></g><g><title>handle_mm_fault (38 samples, 0.02%)</title><rect x="95.0364%" y="389" width="0.0155%" height="15" fill="rgb(242,132,44)" fg:x="232745" fg:w="38"/><text x="95.2864%" y="399.50"></text></g><g><title>__handle_mm_fault (38 samples, 0.02%)</title><rect x="95.0364%" y="373" width="0.0155%" height="15" fill="rgb(251,152,29)" fg:x="232745" fg:w="38"/><text x="95.2864%" y="383.50"></text></g><g><title>asm_exc_page_fault (43 samples, 0.02%)</title><rect x="95.0355%" y="437" width="0.0176%" height="15" fill="rgb(218,179,5)" fg:x="232743" fg:w="43"/><text x="95.2855%" y="447.50"></text></g><g><title>exc_page_fault (43 samples, 0.02%)</title><rect x="95.0355%" y="421" width="0.0176%" height="15" fill="rgb(227,67,19)" fg:x="232743" fg:w="43"/><text x="95.2855%" y="431.50"></text></g><g><title>do_user_addr_fault (43 samples, 0.02%)</title><rect x="95.0355%" y="405" width="0.0176%" height="15" fill="rgb(233,119,31)" fg:x="232743" fg:w="43"/><text x="95.2855%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (83 samples, 0.03%)</title><rect x="95.0229%" y="469" width="0.0339%" height="15" fill="rgb(241,120,22)" fg:x="232712" fg:w="83"/><text x="95.2729%" y="479.50"></text></g><g><title>core::ptr::write (66 samples, 0.03%)</title><rect x="95.0298%" y="453" width="0.0269%" height="15" fill="rgb(224,102,30)" fg:x="232729" fg:w="66"/><text x="95.2798%" y="463.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (197 samples, 0.08%)</title><rect x="94.9816%" y="645" width="0.0804%" height="15" fill="rgb(210,164,37)" fg:x="232611" fg:w="197"/><text x="95.2316%" y="655.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (197 samples, 0.08%)</title><rect x="94.9816%" y="629" width="0.0804%" height="15" fill="rgb(226,191,16)" fg:x="232611" fg:w="197"/><text x="95.2316%" y="639.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (197 samples, 0.08%)</title><rect x="94.9816%" y="613" width="0.0804%" height="15" fill="rgb(214,40,45)" fg:x="232611" fg:w="197"/><text x="95.2316%" y="623.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (197 samples, 0.08%)</title><rect x="94.9816%" y="597" width="0.0804%" height="15" fill="rgb(244,29,26)" fg:x="232611" fg:w="197"/><text x="95.2316%" y="607.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (197 samples, 0.08%)</title><rect x="94.9816%" y="581" width="0.0804%" height="15" fill="rgb(216,16,5)" fg:x="232611" fg:w="197"/><text x="95.2316%" y="591.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (197 samples, 0.08%)</title><rect x="94.9816%" y="565" width="0.0804%" height="15" fill="rgb(249,76,35)" fg:x="232611" fg:w="197"/><text x="95.2316%" y="575.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (197 samples, 0.08%)</title><rect x="94.9816%" y="549" width="0.0804%" height="15" fill="rgb(207,11,44)" fg:x="232611" fg:w="197"/><text x="95.2316%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (197 samples, 0.08%)</title><rect x="94.9816%" y="533" width="0.0804%" height="15" fill="rgb(228,190,49)" fg:x="232611" fg:w="197"/><text x="95.2316%" y="543.50"></text></g><g><title>nom::combinator::map::{{closure}} (197 samples, 0.08%)</title><rect x="94.9816%" y="517" width="0.0804%" height="15" fill="rgb(214,173,12)" fg:x="232611" fg:w="197"/><text x="95.2316%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (197 samples, 0.08%)</title><rect x="94.9816%" y="501" width="0.0804%" height="15" fill="rgb(218,26,35)" fg:x="232611" fg:w="197"/><text x="95.2316%" y="511.50"></text></g><g><title>nom::multi::count::{{closure}} (197 samples, 0.08%)</title><rect x="94.9816%" y="485" width="0.0804%" height="15" fill="rgb(220,200,19)" fg:x="232611" fg:w="197"/><text x="95.2316%" y="495.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (39 samples, 0.02%)</title><rect x="95.0621%" y="629" width="0.0159%" height="15" fill="rgb(239,95,49)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="639.50"></text></g><g><title>std::io::default_read_exact (39 samples, 0.02%)</title><rect x="95.0621%" y="613" width="0.0159%" height="15" fill="rgb(235,85,53)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="623.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (39 samples, 0.02%)</title><rect x="95.0621%" y="597" width="0.0159%" height="15" fill="rgb(233,133,31)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="607.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (39 samples, 0.02%)</title><rect x="95.0621%" y="581" width="0.0159%" height="15" fill="rgb(218,25,20)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::read (39 samples, 0.02%)</title><rect x="95.0621%" y="565" width="0.0159%" height="15" fill="rgb(252,210,38)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="575.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (39 samples, 0.02%)</title><rect x="95.0621%" y="549" width="0.0159%" height="15" fill="rgb(242,134,21)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="559.50"></text></g><g><title>__libc_read (39 samples, 0.02%)</title><rect x="95.0621%" y="533" width="0.0159%" height="15" fill="rgb(213,28,48)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (39 samples, 0.02%)</title><rect x="95.0621%" y="517" width="0.0159%" height="15" fill="rgb(250,196,2)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="527.50"></text></g><g><title>do_syscall_64 (39 samples, 0.02%)</title><rect x="95.0621%" y="501" width="0.0159%" height="15" fill="rgb(227,5,17)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="511.50"></text></g><g><title>__x64_sys_read (39 samples, 0.02%)</title><rect x="95.0621%" y="485" width="0.0159%" height="15" fill="rgb(221,226,24)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="495.50"></text></g><g><title>ksys_read (39 samples, 0.02%)</title><rect x="95.0621%" y="469" width="0.0159%" height="15" fill="rgb(211,5,48)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="479.50"></text></g><g><title>vfs_read (39 samples, 0.02%)</title><rect x="95.0621%" y="453" width="0.0159%" height="15" fill="rgb(219,150,6)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="463.50"></text></g><g><title>new_sync_read (39 samples, 0.02%)</title><rect x="95.0621%" y="437" width="0.0159%" height="15" fill="rgb(251,46,16)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="447.50"></text></g><g><title>ext4_file_read_iter (39 samples, 0.02%)</title><rect x="95.0621%" y="421" width="0.0159%" height="15" fill="rgb(220,204,40)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="431.50"></text></g><g><title>generic_file_read_iter (39 samples, 0.02%)</title><rect x="95.0621%" y="405" width="0.0159%" height="15" fill="rgb(211,85,2)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="415.50"></text></g><g><title>filemap_read (39 samples, 0.02%)</title><rect x="95.0621%" y="389" width="0.0159%" height="15" fill="rgb(229,17,7)" fg:x="232808" fg:w="39"/><text x="95.3121%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (69 samples, 0.03%)</title><rect x="95.1086%" y="453" width="0.0282%" height="15" fill="rgb(239,72,28)" fg:x="232922" fg:w="69"/><text x="95.3586%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (69 samples, 0.03%)</title><rect x="95.1086%" y="437" width="0.0282%" height="15" fill="rgb(230,47,54)" fg:x="232922" fg:w="69"/><text x="95.3586%" y="447.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (69 samples, 0.03%)</title><rect x="95.1086%" y="421" width="0.0282%" height="15" fill="rgb(214,50,8)" fg:x="232922" fg:w="69"/><text x="95.3586%" y="431.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (69 samples, 0.03%)</title><rect x="95.1086%" y="405" width="0.0282%" height="15" fill="rgb(216,198,43)" fg:x="232922" fg:w="69"/><text x="95.3586%" y="415.50"></text></g><g><title>nom::number::streaming::be_u64 (69 samples, 0.03%)</title><rect x="95.1086%" y="389" width="0.0282%" height="15" fill="rgb(234,20,35)" fg:x="232922" fg:w="69"/><text x="95.3586%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.02%)</title><rect x="95.1176%" y="373" width="0.0192%" height="15" fill="rgb(254,45,19)" fg:x="232944" fg:w="47"/><text x="95.3676%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (47 samples, 0.02%)</title><rect x="95.1176%" y="357" width="0.0192%" height="15" fill="rgb(219,14,44)" fg:x="232944" fg:w="47"/><text x="95.3676%" y="367.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (47 samples, 0.02%)</title><rect x="95.1176%" y="341" width="0.0192%" height="15" fill="rgb(217,220,26)" fg:x="232944" fg:w="47"/><text x="95.3676%" y="351.50"></text></g><g><title>handle_pte_fault (39 samples, 0.02%)</title><rect x="95.1572%" y="341" width="0.0159%" height="15" fill="rgb(213,158,28)" fg:x="233041" fg:w="39"/><text x="95.4072%" y="351.50"></text></g><g><title>do_anonymous_page (37 samples, 0.02%)</title><rect x="95.1580%" y="325" width="0.0151%" height="15" fill="rgb(252,51,52)" fg:x="233043" fg:w="37"/><text x="95.4080%" y="335.50"></text></g><g><title>do_user_addr_fault (46 samples, 0.02%)</title><rect x="95.1548%" y="389" width="0.0188%" height="15" fill="rgb(246,89,16)" fg:x="233035" fg:w="46"/><text x="95.4048%" y="399.50"></text></g><g><title>handle_mm_fault (45 samples, 0.02%)</title><rect x="95.1552%" y="373" width="0.0184%" height="15" fill="rgb(216,158,49)" fg:x="233036" fg:w="45"/><text x="95.4052%" y="383.50"></text></g><g><title>__handle_mm_fault (41 samples, 0.02%)</title><rect x="95.1568%" y="357" width="0.0167%" height="15" fill="rgb(236,107,19)" fg:x="233040" fg:w="41"/><text x="95.4068%" y="367.50"></text></g><g><title>asm_exc_page_fault (48 samples, 0.02%)</title><rect x="95.1544%" y="421" width="0.0196%" height="15" fill="rgb(228,185,30)" fg:x="233034" fg:w="48"/><text x="95.4044%" y="431.50"></text></g><g><title>exc_page_fault (47 samples, 0.02%)</title><rect x="95.1548%" y="405" width="0.0192%" height="15" fill="rgb(246,134,8)" fg:x="233035" fg:w="47"/><text x="95.4048%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (100 samples, 0.04%)</title><rect x="95.1368%" y="453" width="0.0408%" height="15" fill="rgb(214,143,50)" fg:x="232991" fg:w="100"/><text x="95.3868%" y="463.50"></text></g><g><title>core::ptr::write (81 samples, 0.03%)</title><rect x="95.1446%" y="437" width="0.0331%" height="15" fill="rgb(228,75,8)" fg:x="233010" fg:w="81"/><text x="95.3946%" y="447.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (239 samples, 0.10%)</title><rect x="95.0870%" y="629" width="0.0976%" height="15" fill="rgb(207,175,4)" fg:x="232869" fg:w="239"/><text x="95.3370%" y="639.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (239 samples, 0.10%)</title><rect x="95.0870%" y="613" width="0.0976%" height="15" fill="rgb(205,108,24)" fg:x="232869" fg:w="239"/><text x="95.3370%" y="623.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (239 samples, 0.10%)</title><rect x="95.0870%" y="597" width="0.0976%" height="15" fill="rgb(244,120,49)" fg:x="232869" fg:w="239"/><text x="95.3370%" y="607.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (239 samples, 0.10%)</title><rect x="95.0870%" y="581" width="0.0976%" height="15" fill="rgb(223,47,38)" fg:x="232869" fg:w="239"/><text x="95.3370%" y="591.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (239 samples, 0.10%)</title><rect x="95.0870%" y="565" width="0.0976%" height="15" fill="rgb(229,179,11)" fg:x="232869" fg:w="239"/><text x="95.3370%" y="575.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (239 samples, 0.10%)</title><rect x="95.0870%" y="549" width="0.0976%" height="15" fill="rgb(231,122,1)" fg:x="232869" fg:w="239"/><text x="95.3370%" y="559.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (239 samples, 0.10%)</title><rect x="95.0870%" y="533" width="0.0976%" height="15" fill="rgb(245,119,9)" fg:x="232869" fg:w="239"/><text x="95.3370%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (239 samples, 0.10%)</title><rect x="95.0870%" y="517" width="0.0976%" height="15" fill="rgb(241,163,25)" fg:x="232869" fg:w="239"/><text x="95.3370%" y="527.50"></text></g><g><title>nom::combinator::map::{{closure}} (239 samples, 0.10%)</title><rect x="95.0870%" y="501" width="0.0976%" height="15" fill="rgb(217,214,3)" fg:x="232869" fg:w="239"/><text x="95.3370%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (239 samples, 0.10%)</title><rect x="95.0870%" y="485" width="0.0976%" height="15" fill="rgb(240,86,28)" fg:x="232869" fg:w="239"/><text x="95.3370%" y="495.50"></text></g><g><title>nom::multi::count::{{closure}} (239 samples, 0.10%)</title><rect x="95.0870%" y="469" width="0.0976%" height="15" fill="rgb(215,47,9)" fg:x="232869" fg:w="239"/><text x="95.3370%" y="479.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (37 samples, 0.02%)</title><rect x="95.1846%" y="613" width="0.0151%" height="15" fill="rgb(252,25,45)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="623.50"></text></g><g><title>std::io::default_read_exact (37 samples, 0.02%)</title><rect x="95.1846%" y="597" width="0.0151%" height="15" fill="rgb(251,164,9)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="607.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (37 samples, 0.02%)</title><rect x="95.1846%" y="581" width="0.0151%" height="15" fill="rgb(233,194,0)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="591.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (37 samples, 0.02%)</title><rect x="95.1846%" y="565" width="0.0151%" height="15" fill="rgb(249,111,24)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="575.50"></text></g><g><title>std::sys::unix::fs::File::read (37 samples, 0.02%)</title><rect x="95.1846%" y="549" width="0.0151%" height="15" fill="rgb(250,223,3)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="559.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (37 samples, 0.02%)</title><rect x="95.1846%" y="533" width="0.0151%" height="15" fill="rgb(236,178,37)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="543.50"></text></g><g><title>__libc_read (37 samples, 0.02%)</title><rect x="95.1846%" y="517" width="0.0151%" height="15" fill="rgb(241,158,50)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (37 samples, 0.02%)</title><rect x="95.1846%" y="501" width="0.0151%" height="15" fill="rgb(213,121,41)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="511.50"></text></g><g><title>do_syscall_64 (37 samples, 0.02%)</title><rect x="95.1846%" y="485" width="0.0151%" height="15" fill="rgb(240,92,3)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="495.50"></text></g><g><title>__x64_sys_read (37 samples, 0.02%)</title><rect x="95.1846%" y="469" width="0.0151%" height="15" fill="rgb(205,123,3)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="479.50"></text></g><g><title>ksys_read (37 samples, 0.02%)</title><rect x="95.1846%" y="453" width="0.0151%" height="15" fill="rgb(205,97,47)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="463.50"></text></g><g><title>vfs_read (37 samples, 0.02%)</title><rect x="95.1846%" y="437" width="0.0151%" height="15" fill="rgb(247,152,14)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="447.50"></text></g><g><title>new_sync_read (37 samples, 0.02%)</title><rect x="95.1846%" y="421" width="0.0151%" height="15" fill="rgb(248,195,53)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="431.50"></text></g><g><title>ext4_file_read_iter (37 samples, 0.02%)</title><rect x="95.1846%" y="405" width="0.0151%" height="15" fill="rgb(226,201,16)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="415.50"></text></g><g><title>generic_file_read_iter (37 samples, 0.02%)</title><rect x="95.1846%" y="389" width="0.0151%" height="15" fill="rgb(205,98,0)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="399.50"></text></g><g><title>filemap_read (37 samples, 0.02%)</title><rect x="95.1846%" y="373" width="0.0151%" height="15" fill="rgb(214,191,48)" fg:x="233108" fg:w="37"/><text x="95.4346%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (98 samples, 0.04%)</title><rect x="95.2336%" y="437" width="0.0400%" height="15" fill="rgb(237,112,39)" fg:x="233228" fg:w="98"/><text x="95.4836%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (98 samples, 0.04%)</title><rect x="95.2336%" y="421" width="0.0400%" height="15" fill="rgb(247,203,27)" fg:x="233228" fg:w="98"/><text x="95.4836%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (98 samples, 0.04%)</title><rect x="95.2336%" y="405" width="0.0400%" height="15" fill="rgb(235,124,28)" fg:x="233228" fg:w="98"/><text x="95.4836%" y="415.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (98 samples, 0.04%)</title><rect x="95.2336%" y="389" width="0.0400%" height="15" fill="rgb(208,207,46)" fg:x="233228" fg:w="98"/><text x="95.4836%" y="399.50"></text></g><g><title>nom::number::streaming::be_u64 (98 samples, 0.04%)</title><rect x="95.2336%" y="373" width="0.0400%" height="15" fill="rgb(234,176,4)" fg:x="233228" fg:w="98"/><text x="95.4836%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.03%)</title><rect x="95.2479%" y="357" width="0.0257%" height="15" fill="rgb(230,133,28)" fg:x="233263" fg:w="63"/><text x="95.4979%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.03%)</title><rect x="95.2479%" y="341" width="0.0257%" height="15" fill="rgb(211,137,40)" fg:x="233263" fg:w="63"/><text x="95.4979%" y="351.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (63 samples, 0.03%)</title><rect x="95.2479%" y="325" width="0.0257%" height="15" fill="rgb(254,35,13)" fg:x="233263" fg:w="63"/><text x="95.4979%" y="335.50"></text></g><g><title>do_anonymous_page (52 samples, 0.02%)</title><rect x="95.2908%" y="309" width="0.0212%" height="15" fill="rgb(225,49,51)" fg:x="233368" fg:w="52"/><text x="95.5408%" y="319.50"></text></g><g><title>do_user_addr_fault (60 samples, 0.02%)</title><rect x="95.2879%" y="373" width="0.0245%" height="15" fill="rgb(251,10,15)" fg:x="233361" fg:w="60"/><text x="95.5379%" y="383.50"></text></g><g><title>handle_mm_fault (55 samples, 0.02%)</title><rect x="95.2899%" y="357" width="0.0225%" height="15" fill="rgb(228,207,15)" fg:x="233366" fg:w="55"/><text x="95.5399%" y="367.50"></text></g><g><title>__handle_mm_fault (54 samples, 0.02%)</title><rect x="95.2903%" y="341" width="0.0220%" height="15" fill="rgb(241,99,19)" fg:x="233367" fg:w="54"/><text x="95.5403%" y="351.50"></text></g><g><title>handle_pte_fault (53 samples, 0.02%)</title><rect x="95.2908%" y="325" width="0.0216%" height="15" fill="rgb(207,104,49)" fg:x="233368" fg:w="53"/><text x="95.5408%" y="335.50"></text></g><g><title>asm_exc_page_fault (61 samples, 0.02%)</title><rect x="95.2879%" y="405" width="0.0249%" height="15" fill="rgb(234,99,18)" fg:x="233361" fg:w="61"/><text x="95.5379%" y="415.50"></text></g><g><title>exc_page_fault (61 samples, 0.02%)</title><rect x="95.2879%" y="389" width="0.0249%" height="15" fill="rgb(213,191,49)" fg:x="233361" fg:w="61"/><text x="95.5379%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (104 samples, 0.04%)</title><rect x="95.2736%" y="437" width="0.0425%" height="15" fill="rgb(210,226,19)" fg:x="233326" fg:w="104"/><text x="95.5236%" y="447.50"></text></g><g><title>core::ptr::write (89 samples, 0.04%)</title><rect x="95.2797%" y="421" width="0.0363%" height="15" fill="rgb(229,97,18)" fg:x="233341" fg:w="89"/><text x="95.5297%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (278 samples, 0.11%)</title><rect x="95.2099%" y="613" width="0.1135%" height="15" fill="rgb(211,167,15)" fg:x="233170" fg:w="278"/><text x="95.4599%" y="623.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (278 samples, 0.11%)</title><rect x="95.2099%" y="597" width="0.1135%" height="15" fill="rgb(210,169,34)" fg:x="233170" fg:w="278"/><text x="95.4599%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (278 samples, 0.11%)</title><rect x="95.2099%" y="581" width="0.1135%" height="15" fill="rgb(241,121,31)" fg:x="233170" fg:w="278"/><text x="95.4599%" y="591.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (278 samples, 0.11%)</title><rect x="95.2099%" y="565" width="0.1135%" height="15" fill="rgb(232,40,11)" fg:x="233170" fg:w="278"/><text x="95.4599%" y="575.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (278 samples, 0.11%)</title><rect x="95.2099%" y="549" width="0.1135%" height="15" fill="rgb(205,86,26)" fg:x="233170" fg:w="278"/><text x="95.4599%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (278 samples, 0.11%)</title><rect x="95.2099%" y="533" width="0.1135%" height="15" fill="rgb(231,126,28)" fg:x="233170" fg:w="278"/><text x="95.4599%" y="543.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (278 samples, 0.11%)</title><rect x="95.2099%" y="517" width="0.1135%" height="15" fill="rgb(219,221,18)" fg:x="233170" fg:w="278"/><text x="95.4599%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (278 samples, 0.11%)</title><rect x="95.2099%" y="501" width="0.1135%" height="15" fill="rgb(211,40,0)" fg:x="233170" fg:w="278"/><text x="95.4599%" y="511.50"></text></g><g><title>nom::combinator::map::{{closure}} (278 samples, 0.11%)</title><rect x="95.2099%" y="485" width="0.1135%" height="15" fill="rgb(239,85,43)" fg:x="233170" fg:w="278"/><text x="95.4599%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (278 samples, 0.11%)</title><rect x="95.2099%" y="469" width="0.1135%" height="15" fill="rgb(231,55,21)" fg:x="233170" fg:w="278"/><text x="95.4599%" y="479.50"></text></g><g><title>nom::multi::count::{{closure}} (278 samples, 0.11%)</title><rect x="95.2099%" y="453" width="0.1135%" height="15" fill="rgb(225,184,43)" fg:x="233170" fg:w="278"/><text x="95.4599%" y="463.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (37 samples, 0.02%)</title><rect x="95.3234%" y="597" width="0.0151%" height="15" fill="rgb(251,158,41)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="607.50"></text></g><g><title>std::io::default_read_exact (37 samples, 0.02%)</title><rect x="95.3234%" y="581" width="0.0151%" height="15" fill="rgb(234,159,37)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="591.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (37 samples, 0.02%)</title><rect x="95.3234%" y="565" width="0.0151%" height="15" fill="rgb(216,204,22)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="575.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (37 samples, 0.02%)</title><rect x="95.3234%" y="549" width="0.0151%" height="15" fill="rgb(214,17,3)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::read (37 samples, 0.02%)</title><rect x="95.3234%" y="533" width="0.0151%" height="15" fill="rgb(212,111,17)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="543.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (37 samples, 0.02%)</title><rect x="95.3234%" y="517" width="0.0151%" height="15" fill="rgb(221,157,24)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="527.50"></text></g><g><title>__libc_read (37 samples, 0.02%)</title><rect x="95.3234%" y="501" width="0.0151%" height="15" fill="rgb(252,16,13)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (37 samples, 0.02%)</title><rect x="95.3234%" y="485" width="0.0151%" height="15" fill="rgb(221,62,2)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="495.50"></text></g><g><title>do_syscall_64 (37 samples, 0.02%)</title><rect x="95.3234%" y="469" width="0.0151%" height="15" fill="rgb(247,87,22)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="479.50"></text></g><g><title>__x64_sys_read (37 samples, 0.02%)</title><rect x="95.3234%" y="453" width="0.0151%" height="15" fill="rgb(215,73,9)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="463.50"></text></g><g><title>ksys_read (37 samples, 0.02%)</title><rect x="95.3234%" y="437" width="0.0151%" height="15" fill="rgb(207,175,33)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="447.50"></text></g><g><title>vfs_read (37 samples, 0.02%)</title><rect x="95.3234%" y="421" width="0.0151%" height="15" fill="rgb(243,129,54)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="431.50"></text></g><g><title>new_sync_read (37 samples, 0.02%)</title><rect x="95.3234%" y="405" width="0.0151%" height="15" fill="rgb(227,119,45)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="415.50"></text></g><g><title>ext4_file_read_iter (37 samples, 0.02%)</title><rect x="95.3234%" y="389" width="0.0151%" height="15" fill="rgb(205,109,36)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="399.50"></text></g><g><title>generic_file_read_iter (37 samples, 0.02%)</title><rect x="95.3234%" y="373" width="0.0151%" height="15" fill="rgb(205,6,39)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="383.50"></text></g><g><title>filemap_read (37 samples, 0.02%)</title><rect x="95.3234%" y="357" width="0.0151%" height="15" fill="rgb(221,32,16)" fg:x="233448" fg:w="37"/><text x="95.5734%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (110 samples, 0.04%)</title><rect x="95.3785%" y="421" width="0.0449%" height="15" fill="rgb(228,144,50)" fg:x="233583" fg:w="110"/><text x="95.6285%" y="431.50"></text></g><g><title>core::ops::function::FnMut::call_mut (110 samples, 0.04%)</title><rect x="95.3785%" y="405" width="0.0449%" height="15" fill="rgb(229,201,53)" fg:x="233583" fg:w="110"/><text x="95.6285%" y="415.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (110 samples, 0.04%)</title><rect x="95.3785%" y="389" width="0.0449%" height="15" fill="rgb(249,153,27)" fg:x="233583" fg:w="110"/><text x="95.6285%" y="399.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (110 samples, 0.04%)</title><rect x="95.3785%" y="373" width="0.0449%" height="15" fill="rgb(227,106,25)" fg:x="233583" fg:w="110"/><text x="95.6285%" y="383.50"></text></g><g><title>nom::number::streaming::be_u64 (110 samples, 0.04%)</title><rect x="95.3785%" y="357" width="0.0449%" height="15" fill="rgb(230,65,29)" fg:x="233583" fg:w="110"/><text x="95.6285%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (80 samples, 0.03%)</title><rect x="95.3908%" y="341" width="0.0327%" height="15" fill="rgb(221,57,46)" fg:x="233613" fg:w="80"/><text x="95.6408%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (80 samples, 0.03%)</title><rect x="95.3908%" y="325" width="0.0327%" height="15" fill="rgb(229,161,17)" fg:x="233613" fg:w="80"/><text x="95.6408%" y="335.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (80 samples, 0.03%)</title><rect x="95.3908%" y="309" width="0.0327%" height="15" fill="rgb(222,213,11)" fg:x="233613" fg:w="80"/><text x="95.6408%" y="319.50"></text></g><g><title>__alloc_pages (27 samples, 0.01%)</title><rect x="95.4439%" y="261" width="0.0110%" height="15" fill="rgb(235,35,13)" fg:x="233743" fg:w="27"/><text x="95.6939%" y="271.50"></text></g><g><title>get_page_from_freelist (27 samples, 0.01%)</title><rect x="95.4439%" y="245" width="0.0110%" height="15" fill="rgb(233,158,34)" fg:x="233743" fg:w="27"/><text x="95.6939%" y="255.50"></text></g><g><title>alloc_pages_vma (29 samples, 0.01%)</title><rect x="95.4435%" y="277" width="0.0118%" height="15" fill="rgb(215,151,48)" fg:x="233742" fg:w="29"/><text x="95.6935%" y="287.50"></text></g><g><title>do_anonymous_page (52 samples, 0.02%)</title><rect x="95.4426%" y="293" width="0.0212%" height="15" fill="rgb(229,84,14)" fg:x="233740" fg:w="52"/><text x="95.6926%" y="303.50"></text></g><g><title>__handle_mm_fault (54 samples, 0.02%)</title><rect x="95.4422%" y="325" width="0.0220%" height="15" fill="rgb(229,68,14)" fg:x="233739" fg:w="54"/><text x="95.6922%" y="335.50"></text></g><g><title>handle_pte_fault (53 samples, 0.02%)</title><rect x="95.4426%" y="309" width="0.0216%" height="15" fill="rgb(243,106,26)" fg:x="233740" fg:w="53"/><text x="95.6926%" y="319.50"></text></g><g><title>handle_mm_fault (56 samples, 0.02%)</title><rect x="95.4418%" y="341" width="0.0229%" height="15" fill="rgb(206,45,38)" fg:x="233738" fg:w="56"/><text x="95.6918%" y="351.50"></text></g><g><title>do_user_addr_fault (60 samples, 0.02%)</title><rect x="95.4410%" y="357" width="0.0245%" height="15" fill="rgb(226,6,15)" fg:x="233736" fg:w="60"/><text x="95.6910%" y="367.50"></text></g><g><title>asm_exc_page_fault (64 samples, 0.03%)</title><rect x="95.4410%" y="389" width="0.0261%" height="15" fill="rgb(232,22,54)" fg:x="233736" fg:w="64"/><text x="95.6910%" y="399.50"></text></g><g><title>exc_page_fault (64 samples, 0.03%)</title><rect x="95.4410%" y="373" width="0.0261%" height="15" fill="rgb(229,222,32)" fg:x="233736" fg:w="64"/><text x="95.6910%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (114 samples, 0.05%)</title><rect x="95.4235%" y="421" width="0.0465%" height="15" fill="rgb(228,62,29)" fg:x="233693" fg:w="114"/><text x="95.6735%" y="431.50"></text></g><g><title>core::ptr::write (97 samples, 0.04%)</title><rect x="95.4304%" y="405" width="0.0396%" height="15" fill="rgb(251,103,34)" fg:x="233710" fg:w="97"/><text x="95.6804%" y="415.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (318 samples, 0.13%)</title><rect x="95.3487%" y="597" width="0.1298%" height="15" fill="rgb(233,12,30)" fg:x="233510" fg:w="318"/><text x="95.5987%" y="607.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (318 samples, 0.13%)</title><rect x="95.3487%" y="581" width="0.1298%" height="15" fill="rgb(238,52,0)" fg:x="233510" fg:w="318"/><text x="95.5987%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (318 samples, 0.13%)</title><rect x="95.3487%" y="565" width="0.1298%" height="15" fill="rgb(223,98,5)" fg:x="233510" fg:w="318"/><text x="95.5987%" y="575.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (318 samples, 0.13%)</title><rect x="95.3487%" y="549" width="0.1298%" height="15" fill="rgb(228,75,37)" fg:x="233510" fg:w="318"/><text x="95.5987%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (318 samples, 0.13%)</title><rect x="95.3487%" y="533" width="0.1298%" height="15" fill="rgb(205,115,49)" fg:x="233510" fg:w="318"/><text x="95.5987%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (318 samples, 0.13%)</title><rect x="95.3487%" y="517" width="0.1298%" height="15" fill="rgb(250,154,43)" fg:x="233510" fg:w="318"/><text x="95.5987%" y="527.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (318 samples, 0.13%)</title><rect x="95.3487%" y="501" width="0.1298%" height="15" fill="rgb(226,43,29)" fg:x="233510" fg:w="318"/><text x="95.5987%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (318 samples, 0.13%)</title><rect x="95.3487%" y="485" width="0.1298%" height="15" fill="rgb(249,228,39)" fg:x="233510" fg:w="318"/><text x="95.5987%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (318 samples, 0.13%)</title><rect x="95.3487%" y="469" width="0.1298%" height="15" fill="rgb(216,79,43)" fg:x="233510" fg:w="318"/><text x="95.5987%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (318 samples, 0.13%)</title><rect x="95.3487%" y="453" width="0.1298%" height="15" fill="rgb(228,95,12)" fg:x="233510" fg:w="318"/><text x="95.5987%" y="463.50"></text></g><g><title>nom::multi::count::{{closure}} (318 samples, 0.13%)</title><rect x="95.3487%" y="437" width="0.1298%" height="15" fill="rgb(249,221,15)" fg:x="233510" fg:w="318"/><text x="95.5987%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::rotate_left (44 samples, 0.02%)</title><rect x="95.4786%" y="581" width="0.0180%" height="15" fill="rgb(233,34,13)" fg:x="233828" fg:w="44"/><text x="95.7286%" y="591.50"></text></g><g><title>core::slice::rotate::ptr_rotate (44 samples, 0.02%)</title><rect x="95.4786%" y="565" width="0.0180%" height="15" fill="rgb(214,103,39)" fg:x="233828" fg:w="44"/><text x="95.7286%" y="575.50"></text></g><g><title>core::intrinsics::copy (44 samples, 0.02%)</title><rect x="95.4786%" y="549" width="0.0180%" height="15" fill="rgb(251,126,39)" fg:x="233828" fg:w="44"/><text x="95.7286%" y="559.50"></text></g><g><title>__memcpy_avx_unaligned_erms (44 samples, 0.02%)</title><rect x="95.4786%" y="533" width="0.0180%" height="15" fill="rgb(214,216,36)" fg:x="233828" fg:w="44"/><text x="95.7286%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (105 samples, 0.04%)</title><rect x="95.5308%" y="405" width="0.0429%" height="15" fill="rgb(220,221,8)" fg:x="233956" fg:w="105"/><text x="95.7808%" y="415.50"></text></g><g><title>core::ops::function::FnMut::call_mut (105 samples, 0.04%)</title><rect x="95.5308%" y="389" width="0.0429%" height="15" fill="rgb(240,216,3)" fg:x="233956" fg:w="105"/><text x="95.7808%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (105 samples, 0.04%)</title><rect x="95.5308%" y="373" width="0.0429%" height="15" fill="rgb(232,218,17)" fg:x="233956" fg:w="105"/><text x="95.7808%" y="383.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (105 samples, 0.04%)</title><rect x="95.5308%" y="357" width="0.0429%" height="15" fill="rgb(229,163,45)" fg:x="233956" fg:w="105"/><text x="95.7808%" y="367.50"></text></g><g><title>nom::number::streaming::be_u64 (105 samples, 0.04%)</title><rect x="95.5308%" y="341" width="0.0429%" height="15" fill="rgb(231,110,42)" fg:x="233956" fg:w="105"/><text x="95.7808%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.03%)</title><rect x="95.5464%" y="325" width="0.0274%" height="15" fill="rgb(208,170,48)" fg:x="233994" fg:w="67"/><text x="95.7964%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.03%)</title><rect x="95.5464%" y="309" width="0.0274%" height="15" fill="rgb(239,116,25)" fg:x="233994" fg:w="67"/><text x="95.7964%" y="319.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (67 samples, 0.03%)</title><rect x="95.5464%" y="293" width="0.0274%" height="15" fill="rgb(219,200,50)" fg:x="233994" fg:w="67"/><text x="95.7964%" y="303.50"></text></g><g><title>alloc_pages_vma (30 samples, 0.01%)</title><rect x="95.6048%" y="261" width="0.0122%" height="15" fill="rgb(245,200,0)" fg:x="234137" fg:w="30"/><text x="95.8548%" y="271.50"></text></g><g><title>__alloc_pages (29 samples, 0.01%)</title><rect x="95.6052%" y="245" width="0.0118%" height="15" fill="rgb(245,119,33)" fg:x="234138" fg:w="29"/><text x="95.8552%" y="255.50"></text></g><g><title>get_page_from_freelist (28 samples, 0.01%)</title><rect x="95.6056%" y="229" width="0.0114%" height="15" fill="rgb(231,125,12)" fg:x="234139" fg:w="28"/><text x="95.8556%" y="239.50"></text></g><g><title>do_anonymous_page (55 samples, 0.02%)</title><rect x="95.6039%" y="277" width="0.0225%" height="15" fill="rgb(216,96,41)" fg:x="234135" fg:w="55"/><text x="95.8539%" y="287.50"></text></g><g><title>__handle_mm_fault (61 samples, 0.02%)</title><rect x="95.6019%" y="309" width="0.0249%" height="15" fill="rgb(248,43,45)" fg:x="234130" fg:w="61"/><text x="95.8519%" y="319.50"></text></g><g><title>handle_pte_fault (57 samples, 0.02%)</title><rect x="95.6035%" y="293" width="0.0233%" height="15" fill="rgb(217,222,7)" fg:x="234134" fg:w="57"/><text x="95.8535%" y="303.50"></text></g><g><title>do_user_addr_fault (70 samples, 0.03%)</title><rect x="95.5986%" y="341" width="0.0286%" height="15" fill="rgb(233,28,6)" fg:x="234122" fg:w="70"/><text x="95.8486%" y="351.50"></text></g><g><title>handle_mm_fault (66 samples, 0.03%)</title><rect x="95.6003%" y="325" width="0.0269%" height="15" fill="rgb(231,218,15)" fg:x="234126" fg:w="66"/><text x="95.8503%" y="335.50"></text></g><g><title>asm_exc_page_fault (75 samples, 0.03%)</title><rect x="95.5974%" y="373" width="0.0306%" height="15" fill="rgb(226,171,48)" fg:x="234119" fg:w="75"/><text x="95.8474%" y="383.50"></text></g><g><title>exc_page_fault (73 samples, 0.03%)</title><rect x="95.5982%" y="357" width="0.0298%" height="15" fill="rgb(235,201,9)" fg:x="234121" fg:w="73"/><text x="95.8482%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (145 samples, 0.06%)</title><rect x="95.5737%" y="405" width="0.0592%" height="15" fill="rgb(217,80,15)" fg:x="234061" fg:w="145"/><text x="95.8237%" y="415.50"></text></g><g><title>core::ptr::write (115 samples, 0.05%)</title><rect x="95.5860%" y="389" width="0.0470%" height="15" fill="rgb(219,152,8)" fg:x="234091" fg:w="115"/><text x="95.8360%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (336 samples, 0.14%)</title><rect x="95.4965%" y="549" width="0.1372%" height="15" fill="rgb(243,107,38)" fg:x="233872" fg:w="336"/><text x="95.7465%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (336 samples, 0.14%)</title><rect x="95.4965%" y="533" width="0.1372%" height="15" fill="rgb(231,17,5)" fg:x="233872" fg:w="336"/><text x="95.7465%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (336 samples, 0.14%)</title><rect x="95.4965%" y="517" width="0.1372%" height="15" fill="rgb(209,25,54)" fg:x="233872" fg:w="336"/><text x="95.7465%" y="527.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (335 samples, 0.14%)</title><rect x="95.4970%" y="501" width="0.1368%" height="15" fill="rgb(219,0,2)" fg:x="233873" fg:w="335"/><text x="95.7470%" y="511.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (335 samples, 0.14%)</title><rect x="95.4970%" y="485" width="0.1368%" height="15" fill="rgb(246,9,5)" fg:x="233873" fg:w="335"/><text x="95.7470%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (335 samples, 0.14%)</title><rect x="95.4970%" y="469" width="0.1368%" height="15" fill="rgb(226,159,4)" fg:x="233873" fg:w="335"/><text x="95.7470%" y="479.50"></text></g><g><title>nom::combinator::map::{{closure}} (335 samples, 0.14%)</title><rect x="95.4970%" y="453" width="0.1368%" height="15" fill="rgb(219,175,34)" fg:x="233873" fg:w="335"/><text x="95.7470%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (335 samples, 0.14%)</title><rect x="95.4970%" y="437" width="0.1368%" height="15" fill="rgb(236,10,46)" fg:x="233873" fg:w="335"/><text x="95.7470%" y="447.50"></text></g><g><title>nom::multi::count::{{closure}} (335 samples, 0.14%)</title><rect x="95.4970%" y="421" width="0.1368%" height="15" fill="rgb(240,211,16)" fg:x="233873" fg:w="335"/><text x="95.7470%" y="431.50"></text></g><g><title>&lt;hprof_slurp::record_parser_iter::HprofRecordParserIter as core::iter::traits::iterator::Iterator&gt;::next (178,871 samples, 73.04%)</title><rect x="22.6022%" y="741" width="73.0381%" height="15" fill="rgb(205,3,43)" fg:x="55353" fg:w="178871"/><text x="22.8522%" y="751.50">&lt;hprof_slurp::record_parser_iter::HprofRecordParserIter as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (178,871 samples, 73.04%)</title><rect x="22.6022%" y="725" width="73.0381%" height="15" fill="rgb(245,7,22)" fg:x="55353" fg:w="178871"/><text x="22.8522%" y="735.50">hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next</text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (123,993 samples, 50.63%)</title><rect x="45.0104%" y="709" width="50.6298%" height="15" fill="rgb(239,132,32)" fg:x="110231" fg:w="123993"/><text x="45.2604%" y="719.50">hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next</text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (2,053 samples, 0.84%)</title><rect x="94.8020%" y="693" width="0.8383%" height="15" fill="rgb(228,202,34)" fg:x="232171" fg:w="2053"/><text x="95.0520%" y="703.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,883 samples, 0.77%)</title><rect x="94.8714%" y="677" width="0.7689%" height="15" fill="rgb(254,200,22)" fg:x="232341" fg:w="1883"/><text x="95.1214%" y="687.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,671 samples, 0.68%)</title><rect x="94.9580%" y="661" width="0.6823%" height="15" fill="rgb(219,10,39)" fg:x="232553" fg:w="1671"/><text x="95.2080%" y="671.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,416 samples, 0.58%)</title><rect x="95.0621%" y="645" width="0.5782%" height="15" fill="rgb(226,210,39)" fg:x="232808" fg:w="1416"/><text x="95.3121%" y="655.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,116 samples, 0.46%)</title><rect x="95.1846%" y="629" width="0.4557%" height="15" fill="rgb(208,219,16)" fg:x="233108" fg:w="1116"/><text x="95.4346%" y="639.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (776 samples, 0.32%)</title><rect x="95.3234%" y="613" width="0.3169%" height="15" fill="rgb(216,158,51)" fg:x="233448" fg:w="776"/><text x="95.5734%" y="623.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (396 samples, 0.16%)</title><rect x="95.4786%" y="597" width="0.1617%" height="15" fill="rgb(233,14,44)" fg:x="233828" fg:w="396"/><text x="95.7286%" y="607.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (352 samples, 0.14%)</title><rect x="95.4965%" y="581" width="0.1437%" height="15" fill="rgb(237,97,39)" fg:x="233872" fg:w="352"/><text x="95.7465%" y="591.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (352 samples, 0.14%)</title><rect x="95.4965%" y="565" width="0.1437%" height="15" fill="rgb(218,198,43)" fg:x="233872" fg:w="352"/><text x="95.7465%" y="575.50"></text></g><g><title>indicatif::state::ProgressState::draw (28 samples, 0.01%)</title><rect x="95.6403%" y="661" width="0.0114%" height="15" fill="rgb(231,104,20)" fg:x="234224" fg:w="28"/><text x="95.8903%" y="671.50"></text></g><g><title>indicatif::state::ProgressState::update_and_draw (29 samples, 0.01%)</title><rect x="95.6403%" y="677" width="0.0118%" height="15" fill="rgb(254,36,13)" fg:x="234224" fg:w="29"/><text x="95.8903%" y="687.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::set_position (30 samples, 0.01%)</title><rect x="95.6403%" y="709" width="0.0122%" height="15" fill="rgb(248,14,50)" fg:x="234224" fg:w="30"/><text x="95.8903%" y="719.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::update_and_draw (30 samples, 0.01%)</title><rect x="95.6403%" y="693" width="0.0122%" height="15" fill="rgb(217,107,29)" fg:x="234224" fg:w="30"/><text x="95.8903%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (33 samples, 0.01%)</title><rect x="95.6403%" y="741" width="0.0135%" height="15" fill="rgb(251,169,33)" fg:x="234224" fg:w="33"/><text x="95.8903%" y="751.50"></text></g><g><title>hprof_slurp::slurp::slurp_file::{{closure}} (33 samples, 0.01%)</title><rect x="95.6403%" y="725" width="0.0135%" height="15" fill="rgb(217,108,32)" fg:x="234224" fg:w="33"/><text x="95.8903%" y="735.50"></text></g><g><title>_start (178,932 samples, 73.06%)</title><rect x="22.6022%" y="1061" width="73.0630%" height="15" fill="rgb(219,66,42)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="1071.50">_start</text></g><g><title>__libc_start_main_alias_2 (178,932 samples, 73.06%)</title><rect x="22.6022%" y="1045" width="73.0630%" height="15" fill="rgb(206,180,7)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="1055.50">__libc_start_main_alias_2</text></g><g><title>__libc_start_call_main (178,932 samples, 73.06%)</title><rect x="22.6022%" y="1029" width="73.0630%" height="15" fill="rgb(208,226,31)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="1039.50">__libc_start_call_main</text></g><g><title>main (178,932 samples, 73.06%)</title><rect x="22.6022%" y="1013" width="73.0630%" height="15" fill="rgb(218,26,49)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="1023.50">main</text></g><g><title>std::rt::lang_start_internal (178,932 samples, 73.06%)</title><rect x="22.6022%" y="997" width="73.0630%" height="15" fill="rgb(233,197,48)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="1007.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (178,932 samples, 73.06%)</title><rect x="22.6022%" y="981" width="73.0630%" height="15" fill="rgb(252,181,51)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="991.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (178,932 samples, 73.06%)</title><rect x="22.6022%" y="965" width="73.0630%" height="15" fill="rgb(253,90,19)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="975.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (178,932 samples, 73.06%)</title><rect x="22.6022%" y="949" width="73.0630%" height="15" fill="rgb(215,171,30)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="959.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (178,932 samples, 73.06%)</title><rect x="22.6022%" y="933" width="73.0630%" height="15" fill="rgb(214,222,9)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="943.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (178,932 samples, 73.06%)</title><rect x="22.6022%" y="917" width="73.0630%" height="15" fill="rgb(223,3,22)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="927.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (178,932 samples, 73.06%)</title><rect x="22.6022%" y="901" width="73.0630%" height="15" fill="rgb(225,196,46)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="911.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (178,932 samples, 73.06%)</title><rect x="22.6022%" y="885" width="73.0630%" height="15" fill="rgb(209,110,37)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="895.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (178,932 samples, 73.06%)</title><rect x="22.6022%" y="869" width="73.0630%" height="15" fill="rgb(249,89,12)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="879.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (178,932 samples, 73.06%)</title><rect x="22.6022%" y="853" width="73.0630%" height="15" fill="rgb(226,27,33)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="863.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (178,932 samples, 73.06%)</title><rect x="22.6022%" y="837" width="73.0630%" height="15" fill="rgb(213,82,22)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="847.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (178,932 samples, 73.06%)</title><rect x="22.6022%" y="821" width="73.0630%" height="15" fill="rgb(248,140,0)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="831.50">core::ops::function::FnOnce::call_once</text></g><g><title>hprof_slurp::main (178,932 samples, 73.06%)</title><rect x="22.6022%" y="805" width="73.0630%" height="15" fill="rgb(228,106,3)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="815.50">hprof_slurp::main</text></g><g><title>hprof_slurp::slurp::slurp_file (178,932 samples, 73.06%)</title><rect x="22.6022%" y="789" width="73.0630%" height="15" fill="rgb(209,23,37)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="799.50">hprof_slurp::slurp::slurp_file</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (178,932 samples, 73.06%)</title><rect x="22.6022%" y="773" width="73.0630%" height="15" fill="rgb(241,93,50)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="783.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>core::iter::traits::iterator::Iterator::fold (178,932 samples, 73.06%)</title><rect x="22.6022%" y="757" width="73.0630%" height="15" fill="rgb(253,46,43)" fg:x="55353" fg:w="178932"/><text x="22.8522%" y="767.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::record_parser_iter::HprofRecordParserIter&gt; (28 samples, 0.01%)</title><rect x="95.6538%" y="741" width="0.0114%" height="15" fill="rgb(226,206,43)" fg:x="234257" fg:w="28"/><text x="95.9038%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (28 samples, 0.01%)</title><rect x="95.6538%" y="725" width="0.0114%" height="15" fill="rgb(217,54,7)" fg:x="234257" fg:w="28"/><text x="95.9038%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (28 samples, 0.01%)</title><rect x="95.6538%" y="709" width="0.0114%" height="15" fill="rgb(223,5,52)" fg:x="234257" fg:w="28"/><text x="95.9038%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="95.6538%" y="693" width="0.0114%" height="15" fill="rgb(206,52,46)" fg:x="234257" fg:w="28"/><text x="95.9038%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.01%)</title><rect x="95.6538%" y="677" width="0.0114%" height="15" fill="rgb(253,136,11)" fg:x="234257" fg:w="28"/><text x="95.9038%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.01%)</title><rect x="95.6538%" y="661" width="0.0114%" height="15" fill="rgb(208,106,33)" fg:x="234257" fg:w="28"/><text x="95.9038%" y="671.50"></text></g><g><title>__free (28 samples, 0.01%)</title><rect x="95.6538%" y="645" width="0.0114%" height="15" fill="rgb(206,54,4)" fg:x="234257" fg:w="28"/><text x="95.9038%" y="655.50"></text></g><g><title>__GI___munmap (28 samples, 0.01%)</title><rect x="95.6538%" y="629" width="0.0114%" height="15" fill="rgb(213,3,15)" fg:x="234257" fg:w="28"/><text x="95.9038%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (28 samples, 0.01%)</title><rect x="95.6538%" y="613" width="0.0114%" height="15" fill="rgb(252,211,39)" fg:x="234257" fg:w="28"/><text x="95.9038%" y="623.50"></text></g><g><title>do_syscall_64 (28 samples, 0.01%)</title><rect x="95.6538%" y="597" width="0.0114%" height="15" fill="rgb(223,6,36)" fg:x="234257" fg:w="28"/><text x="95.9038%" y="607.50"></text></g><g><title>__x64_sys_munmap (28 samples, 0.01%)</title><rect x="95.6538%" y="581" width="0.0114%" height="15" fill="rgb(252,169,45)" fg:x="234257" fg:w="28"/><text x="95.9038%" y="591.50"></text></g><g><title>__vm_munmap (28 samples, 0.01%)</title><rect x="95.6538%" y="565" width="0.0114%" height="15" fill="rgb(212,48,26)" fg:x="234257" fg:w="28"/><text x="95.9038%" y="575.50"></text></g><g><title>__do_munmap (28 samples, 0.01%)</title><rect x="95.6538%" y="549" width="0.0114%" height="15" fill="rgb(251,102,48)" fg:x="234257" fg:w="28"/><text x="95.9038%" y="559.50"></text></g><g><title>unmap_region (28 samples, 0.01%)</title><rect x="95.6538%" y="533" width="0.0114%" height="15" fill="rgb(243,208,16)" fg:x="234257" fg:w="28"/><text x="95.9038%" y="543.50"></text></g><g><title>unmap_vmas (27 samples, 0.01%)</title><rect x="95.6542%" y="517" width="0.0110%" height="15" fill="rgb(219,96,24)" fg:x="234258" fg:w="27"/><text x="95.9042%" y="527.50"></text></g><g><title>unmap_single_vma (27 samples, 0.01%)</title><rect x="95.6542%" y="501" width="0.0110%" height="15" fill="rgb(219,33,29)" fg:x="234258" fg:w="27"/><text x="95.9042%" y="511.50"></text></g><g><title>unmap_page_range (27 samples, 0.01%)</title><rect x="95.6542%" y="485" width="0.0110%" height="15" fill="rgb(223,176,5)" fg:x="234258" fg:w="27"/><text x="95.9042%" y="495.50"></text></g><g><title>zap_pmd_range.isra.0 (27 samples, 0.01%)</title><rect x="95.6542%" y="469" width="0.0110%" height="15" fill="rgb(228,140,14)" fg:x="234258" fg:w="27"/><text x="95.9042%" y="479.50"></text></g><g><title>zap_pte_range (26 samples, 0.01%)</title><rect x="95.6546%" y="453" width="0.0106%" height="15" fill="rgb(217,179,31)" fg:x="234259" fg:w="26"/><text x="95.9046%" y="463.50"></text></g><g><title>asm_exc_page_fault (10,504 samples, 4.29%)</title><rect x="95.6652%" y="1061" width="4.2891%" height="15" fill="rgb(230,9,30)" fg:x="234285" fg:w="10504"/><text x="95.9152%" y="1071.50">asm_e..</text></g><g><title>copy_user_enhanced_fast_string (30 samples, 0.01%)</title><rect x="99.9653%" y="917" width="0.0122%" height="15" fill="rgb(230,136,20)" fg:x="244816" fg:w="30"/><text x="100.2153%" y="927.50"></text></g><g><title>filemap_get_pages (26 samples, 0.01%)</title><rect x="99.9780%" y="917" width="0.0106%" height="15" fill="rgb(215,210,22)" fg:x="244847" fg:w="26"/><text x="100.2280%" y="927.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (80 samples, 0.03%)</title><rect x="99.9571%" y="1061" width="0.0327%" height="15" fill="rgb(218,43,5)" fg:x="244796" fg:w="80"/><text x="100.2071%" y="1071.50"></text></g><g><title>do_syscall_64 (80 samples, 0.03%)</title><rect x="99.9571%" y="1045" width="0.0327%" height="15" fill="rgb(216,11,5)" fg:x="244796" fg:w="80"/><text x="100.2071%" y="1055.50"></text></g><g><title>__x64_sys_read (76 samples, 0.03%)</title><rect x="99.9588%" y="1029" width="0.0310%" height="15" fill="rgb(209,82,29)" fg:x="244800" fg:w="76"/><text x="100.2088%" y="1039.50"></text></g><g><title>ksys_read (76 samples, 0.03%)</title><rect x="99.9588%" y="1013" width="0.0310%" height="15" fill="rgb(244,115,12)" fg:x="244800" fg:w="76"/><text x="100.2088%" y="1023.50"></text></g><g><title>vfs_read (76 samples, 0.03%)</title><rect x="99.9588%" y="997" width="0.0310%" height="15" fill="rgb(222,82,18)" fg:x="244800" fg:w="76"/><text x="100.2088%" y="1007.50"></text></g><g><title>new_sync_read (76 samples, 0.03%)</title><rect x="99.9588%" y="981" width="0.0310%" height="15" fill="rgb(249,227,8)" fg:x="244800" fg:w="76"/><text x="100.2088%" y="991.50"></text></g><g><title>ext4_file_read_iter (76 samples, 0.03%)</title><rect x="99.9588%" y="965" width="0.0310%" height="15" fill="rgb(253,141,45)" fg:x="244800" fg:w="76"/><text x="100.2088%" y="975.50"></text></g><g><title>generic_file_read_iter (76 samples, 0.03%)</title><rect x="99.9588%" y="949" width="0.0310%" height="15" fill="rgb(234,184,4)" fg:x="244800" fg:w="76"/><text x="100.2088%" y="959.50"></text></g><g><title>filemap_read (76 samples, 0.03%)</title><rect x="99.9588%" y="933" width="0.0310%" height="15" fill="rgb(218,194,23)" fg:x="244800" fg:w="76"/><text x="100.2088%" y="943.50"></text></g><g><title>hprof-slurp (244,896 samples, 100.00%)</title><rect x="0.0000%" y="1077" width="99.9980%" height="15" fill="rgb(235,66,41)" fg:x="0" fg:w="244896"/><text x="0.2500%" y="1087.50">hprof-slurp</text></g><g><title>all (244,901 samples, 100%)</title><rect x="0.0000%" y="1093" width="100.0000%" height="15" fill="rgb(245,217,1)" fg:x="0" fg:w="244901"/><text x="0.2500%" y="1103.50"></text></g></svg></svg>