<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="997.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="280203"><g><title>asm_exc_page_fault (7,603 samples, 2.71%)</title><rect x="0.1677%" y="453" width="2.7134%" height="15" fill="rgb(227,0,7)" fg:x="470" fg:w="7603"/><text x="0.4177%" y="463.50">as..</text></g><g><title>copy_page_to_iter (312 samples, 0.11%)</title><rect x="2.8811%" y="453" width="0.1113%" height="15" fill="rgb(217,0,24)" fg:x="8073" fg:w="312"/><text x="3.1311%" y="463.50"></text></g><g><title>__read_end_io (117 samples, 0.04%)</title><rect x="6.1705%" y="213" width="0.0418%" height="15" fill="rgb(221,193,54)" fg:x="17290" fg:w="117"/><text x="6.4205%" y="223.50"></text></g><g><title>nvme_complete_rq (209 samples, 0.07%)</title><rect x="6.1573%" y="293" width="0.0746%" height="15" fill="rgb(248,212,6)" fg:x="17253" fg:w="209"/><text x="6.4073%" y="303.50"></text></g><g><title>blk_mq_end_request (209 samples, 0.07%)</title><rect x="6.1573%" y="277" width="0.0746%" height="15" fill="rgb(208,68,35)" fg:x="17253" fg:w="209"/><text x="6.4073%" y="287.50"></text></g><g><title>blk_update_request (197 samples, 0.07%)</title><rect x="6.1616%" y="261" width="0.0703%" height="15" fill="rgb(232,128,0)" fg:x="17265" fg:w="197"/><text x="6.4116%" y="271.50"></text></g><g><title>bio_endio (185 samples, 0.07%)</title><rect x="6.1659%" y="245" width="0.0660%" height="15" fill="rgb(207,160,47)" fg:x="17277" fg:w="185"/><text x="6.4159%" y="255.50"></text></g><g><title>mpage_end_io (172 samples, 0.06%)</title><rect x="6.1705%" y="229" width="0.0614%" height="15" fill="rgb(228,23,34)" fg:x="17290" fg:w="172"/><text x="6.4205%" y="239.50"></text></g><g><title>unlock_page (55 samples, 0.02%)</title><rect x="6.2123%" y="213" width="0.0196%" height="15" fill="rgb(218,30,26)" fg:x="17407" fg:w="55"/><text x="6.4623%" y="223.50"></text></g><g><title>__handle_irq_event_percpu (268 samples, 0.10%)</title><rect x="6.1495%" y="357" width="0.0956%" height="15" fill="rgb(220,122,19)" fg:x="17231" fg:w="268"/><text x="6.3995%" y="367.50"></text></g><g><title>nvme_irq (266 samples, 0.09%)</title><rect x="6.1502%" y="341" width="0.0949%" height="15" fill="rgb(250,228,42)" fg:x="17233" fg:w="266"/><text x="6.4002%" y="351.50"></text></g><g><title>nvme_process_cq (266 samples, 0.09%)</title><rect x="6.1502%" y="325" width="0.0949%" height="15" fill="rgb(240,193,28)" fg:x="17233" fg:w="266"/><text x="6.4002%" y="335.50"></text></g><g><title>nvme_pci_complete_rq (246 samples, 0.09%)</title><rect x="6.1573%" y="309" width="0.0878%" height="15" fill="rgb(216,20,37)" fg:x="17253" fg:w="246"/><text x="6.4073%" y="319.50"></text></g><g><title>nvme_unmap_data (37 samples, 0.01%)</title><rect x="6.2319%" y="293" width="0.0132%" height="15" fill="rgb(206,188,39)" fg:x="17462" fg:w="37"/><text x="6.4819%" y="303.50"></text></g><g><title>handle_irq_event (270 samples, 0.10%)</title><rect x="6.1495%" y="373" width="0.0964%" height="15" fill="rgb(217,207,13)" fg:x="17231" fg:w="270"/><text x="6.3995%" y="383.50"></text></g><g><title>__common_interrupt (282 samples, 0.10%)</title><rect x="6.1466%" y="405" width="0.1006%" height="15" fill="rgb(231,73,38)" fg:x="17223" fg:w="282"/><text x="6.3966%" y="415.50"></text></g><g><title>handle_edge_irq (279 samples, 0.10%)</title><rect x="6.1477%" y="389" width="0.0996%" height="15" fill="rgb(225,20,46)" fg:x="17226" fg:w="279"/><text x="6.3977%" y="399.50"></text></g><g><title>asm_common_interrupt (285 samples, 0.10%)</title><rect x="6.1463%" y="437" width="0.1017%" height="15" fill="rgb(210,31,41)" fg:x="17222" fg:w="285"/><text x="6.3963%" y="447.50"></text></g><g><title>common_interrupt (285 samples, 0.10%)</title><rect x="6.1463%" y="421" width="0.1017%" height="15" fill="rgb(221,200,47)" fg:x="17222" fg:w="285"/><text x="6.3963%" y="431.50"></text></g><g><title>__read_end_io (58 samples, 0.02%)</title><rect x="6.4068%" y="165" width="0.0207%" height="15" fill="rgb(226,26,5)" fg:x="17952" fg:w="58"/><text x="6.6568%" y="175.50"></text></g><g><title>blk_update_request (83 samples, 0.03%)</title><rect x="6.4032%" y="213" width="0.0296%" height="15" fill="rgb(249,33,26)" fg:x="17942" fg:w="83"/><text x="6.6532%" y="223.50"></text></g><g><title>bio_endio (78 samples, 0.03%)</title><rect x="6.4050%" y="197" width="0.0278%" height="15" fill="rgb(235,183,28)" fg:x="17947" fg:w="78"/><text x="6.6550%" y="207.50"></text></g><g><title>mpage_end_io (73 samples, 0.03%)</title><rect x="6.4068%" y="181" width="0.0261%" height="15" fill="rgb(221,5,38)" fg:x="17952" fg:w="73"/><text x="6.6568%" y="191.50"></text></g><g><title>blk_mq_end_request (91 samples, 0.03%)</title><rect x="6.4007%" y="229" width="0.0325%" height="15" fill="rgb(247,18,42)" fg:x="17935" fg:w="91"/><text x="6.6507%" y="239.50"></text></g><g><title>nvme_complete_rq (93 samples, 0.03%)</title><rect x="6.4004%" y="245" width="0.0332%" height="15" fill="rgb(241,131,45)" fg:x="17934" fg:w="93"/><text x="6.6504%" y="255.50"></text></g><g><title>__handle_irq_event_percpu (120 samples, 0.04%)</title><rect x="6.3968%" y="309" width="0.0428%" height="15" fill="rgb(249,31,29)" fg:x="17924" fg:w="120"/><text x="6.6468%" y="319.50"></text></g><g><title>nvme_irq (119 samples, 0.04%)</title><rect x="6.3971%" y="293" width="0.0425%" height="15" fill="rgb(225,111,53)" fg:x="17925" fg:w="119"/><text x="6.6471%" y="303.50"></text></g><g><title>nvme_process_cq (119 samples, 0.04%)</title><rect x="6.3971%" y="277" width="0.0425%" height="15" fill="rgb(238,160,17)" fg:x="17925" fg:w="119"/><text x="6.6471%" y="287.50"></text></g><g><title>nvme_pci_complete_rq (111 samples, 0.04%)</title><rect x="6.4000%" y="261" width="0.0396%" height="15" fill="rgb(214,148,48)" fg:x="17933" fg:w="111"/><text x="6.6500%" y="271.50"></text></g><g><title>handle_irq_event (121 samples, 0.04%)</title><rect x="6.3968%" y="325" width="0.0432%" height="15" fill="rgb(232,36,49)" fg:x="17924" fg:w="121"/><text x="6.6468%" y="335.50"></text></g><g><title>asm_common_interrupt (126 samples, 0.04%)</title><rect x="6.3957%" y="389" width="0.0450%" height="15" fill="rgb(209,103,24)" fg:x="17921" fg:w="126"/><text x="6.6457%" y="399.50"></text></g><g><title>common_interrupt (126 samples, 0.04%)</title><rect x="6.3957%" y="373" width="0.0450%" height="15" fill="rgb(229,88,8)" fg:x="17921" fg:w="126"/><text x="6.6457%" y="383.50"></text></g><g><title>__common_interrupt (126 samples, 0.04%)</title><rect x="6.3957%" y="357" width="0.0450%" height="15" fill="rgb(213,181,19)" fg:x="17921" fg:w="126"/><text x="6.6457%" y="367.50"></text></g><g><title>handle_edge_irq (125 samples, 0.04%)</title><rect x="6.3961%" y="341" width="0.0446%" height="15" fill="rgb(254,191,54)" fg:x="17922" fg:w="125"/><text x="6.6461%" y="351.50"></text></g><g><title>down_read_trylock (492 samples, 0.18%)</title><rect x="6.4507%" y="389" width="0.1756%" height="15" fill="rgb(241,83,37)" fg:x="18075" fg:w="492"/><text x="6.7007%" y="399.50"></text></g><g><title>find_vma (100 samples, 0.04%)</title><rect x="6.6263%" y="389" width="0.0357%" height="15" fill="rgb(233,36,39)" fg:x="18567" fg:w="100"/><text x="6.8763%" y="399.50"></text></g><g><title>vmacache_find (79 samples, 0.03%)</title><rect x="6.6338%" y="373" width="0.0282%" height="15" fill="rgb(226,3,54)" fg:x="18588" fg:w="79"/><text x="6.8838%" y="383.50"></text></g><g><title>__count_memcg_events (67 samples, 0.02%)</title><rect x="6.7258%" y="373" width="0.0239%" height="15" fill="rgb(245,192,40)" fg:x="18846" fg:w="67"/><text x="6.9758%" y="383.50"></text></g><g><title>cgroup_rstat_updated (37 samples, 0.01%)</title><rect x="6.7365%" y="357" width="0.0132%" height="15" fill="rgb(238,167,29)" fg:x="18876" fg:w="37"/><text x="6.9865%" y="367.50"></text></g><g><title>_raw_spin_lock (166 samples, 0.06%)</title><rect x="6.9896%" y="341" width="0.0592%" height="15" fill="rgb(232,182,51)" fg:x="19585" fg:w="166"/><text x="7.2396%" y="351.50"></text></g><g><title>clear_page_erms (75 samples, 0.03%)</title><rect x="7.3472%" y="261" width="0.0268%" height="15" fill="rgb(231,60,39)" fg:x="20587" fg:w="75"/><text x="7.5972%" y="271.50"></text></g><g><title>get_page_from_freelist (104 samples, 0.04%)</title><rect x="7.3457%" y="277" width="0.0371%" height="15" fill="rgb(208,69,12)" fg:x="20583" fg:w="104"/><text x="7.5957%" y="287.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (117 samples, 0.04%)</title><rect x="7.3443%" y="293" width="0.0418%" height="15" fill="rgb(235,93,37)" fg:x="20579" fg:w="117"/><text x="7.5943%" y="303.50"></text></g><g><title>__next_zones_zonelist (114 samples, 0.04%)</title><rect x="7.3911%" y="293" width="0.0407%" height="15" fill="rgb(213,116,39)" fg:x="20710" fg:w="114"/><text x="7.6411%" y="303.50"></text></g><g><title>__inc_numa_state (55 samples, 0.02%)</title><rect x="7.5210%" y="277" width="0.0196%" height="15" fill="rgb(222,207,29)" fg:x="21074" fg:w="55"/><text x="7.7710%" y="287.50"></text></g><g><title>__read_end_io (37 samples, 0.01%)</title><rect x="8.6784%" y="37" width="0.0132%" height="15" fill="rgb(206,96,30)" fg:x="24317" fg:w="37"/><text x="8.9284%" y="47.50"></text></g><g><title>blk_update_request (56 samples, 0.02%)</title><rect x="8.6755%" y="85" width="0.0200%" height="15" fill="rgb(218,138,4)" fg:x="24309" fg:w="56"/><text x="8.9255%" y="95.50"></text></g><g><title>bio_endio (49 samples, 0.02%)</title><rect x="8.6780%" y="69" width="0.0175%" height="15" fill="rgb(250,191,14)" fg:x="24316" fg:w="49"/><text x="8.9280%" y="79.50"></text></g><g><title>mpage_end_io (48 samples, 0.02%)</title><rect x="8.6784%" y="53" width="0.0171%" height="15" fill="rgb(239,60,40)" fg:x="24317" fg:w="48"/><text x="8.9284%" y="63.50"></text></g><g><title>nvme_complete_rq (60 samples, 0.02%)</title><rect x="8.6748%" y="117" width="0.0214%" height="15" fill="rgb(206,27,48)" fg:x="24307" fg:w="60"/><text x="8.9248%" y="127.50"></text></g><g><title>blk_mq_end_request (60 samples, 0.02%)</title><rect x="8.6748%" y="101" width="0.0214%" height="15" fill="rgb(225,35,8)" fg:x="24307" fg:w="60"/><text x="8.9248%" y="111.50"></text></g><g><title>__handle_irq_event_percpu (78 samples, 0.03%)</title><rect x="8.6730%" y="181" width="0.0278%" height="15" fill="rgb(250,213,24)" fg:x="24302" fg:w="78"/><text x="8.9230%" y="191.50"></text></g><g><title>nvme_irq (78 samples, 0.03%)</title><rect x="8.6730%" y="165" width="0.0278%" height="15" fill="rgb(247,123,22)" fg:x="24302" fg:w="78"/><text x="8.9230%" y="175.50"></text></g><g><title>nvme_process_cq (78 samples, 0.03%)</title><rect x="8.6730%" y="149" width="0.0278%" height="15" fill="rgb(231,138,38)" fg:x="24302" fg:w="78"/><text x="8.9230%" y="159.50"></text></g><g><title>nvme_pci_complete_rq (73 samples, 0.03%)</title><rect x="8.6748%" y="133" width="0.0261%" height="15" fill="rgb(231,145,46)" fg:x="24307" fg:w="73"/><text x="8.9248%" y="143.50"></text></g><g><title>handle_irq_event (84 samples, 0.03%)</title><rect x="8.6723%" y="197" width="0.0300%" height="15" fill="rgb(251,118,11)" fg:x="24300" fg:w="84"/><text x="8.9223%" y="207.50"></text></g><g><title>handle_edge_irq (90 samples, 0.03%)</title><rect x="8.6716%" y="213" width="0.0321%" height="15" fill="rgb(217,147,25)" fg:x="24298" fg:w="90"/><text x="8.9216%" y="223.50"></text></g><g><title>asm_common_interrupt (94 samples, 0.03%)</title><rect x="8.6705%" y="261" width="0.0335%" height="15" fill="rgb(247,81,37)" fg:x="24295" fg:w="94"/><text x="8.9205%" y="271.50"></text></g><g><title>common_interrupt (94 samples, 0.03%)</title><rect x="8.6705%" y="245" width="0.0335%" height="15" fill="rgb(209,12,38)" fg:x="24295" fg:w="94"/><text x="8.9205%" y="255.50"></text></g><g><title>__common_interrupt (94 samples, 0.03%)</title><rect x="8.6705%" y="229" width="0.0335%" height="15" fill="rgb(227,1,9)" fg:x="24295" fg:w="94"/><text x="8.9205%" y="239.50"></text></g><g><title>clear_page_erms (3,234 samples, 1.15%)</title><rect x="7.5531%" y="277" width="1.1542%" height="15" fill="rgb(248,47,43)" fg:x="21164" fg:w="3234"/><text x="7.8031%" y="287.50"></text></g><g><title>kernel_init_free_pages (53 samples, 0.02%)</title><rect x="8.7073%" y="277" width="0.0189%" height="15" fill="rgb(221,10,30)" fg:x="24398" fg:w="53"/><text x="8.9573%" y="287.50"></text></g><g><title>blk_update_request (32 samples, 0.01%)</title><rect x="8.8461%" y="85" width="0.0114%" height="15" fill="rgb(210,229,1)" fg:x="24787" fg:w="32"/><text x="9.0961%" y="95.50"></text></g><g><title>bio_endio (30 samples, 0.01%)</title><rect x="8.8468%" y="69" width="0.0107%" height="15" fill="rgb(222,148,37)" fg:x="24789" fg:w="30"/><text x="9.0968%" y="79.50"></text></g><g><title>mpage_end_io (29 samples, 0.01%)</title><rect x="8.8472%" y="53" width="0.0103%" height="15" fill="rgb(234,67,33)" fg:x="24790" fg:w="29"/><text x="9.0972%" y="63.50"></text></g><g><title>nvme_complete_rq (36 samples, 0.01%)</title><rect x="8.8450%" y="117" width="0.0128%" height="15" fill="rgb(247,98,35)" fg:x="24784" fg:w="36"/><text x="9.0950%" y="127.50"></text></g><g><title>blk_mq_end_request (36 samples, 0.01%)</title><rect x="8.8450%" y="101" width="0.0128%" height="15" fill="rgb(247,138,52)" fg:x="24784" fg:w="36"/><text x="9.0950%" y="111.50"></text></g><g><title>__handle_irq_event_percpu (45 samples, 0.02%)</title><rect x="8.8443%" y="181" width="0.0161%" height="15" fill="rgb(213,79,30)" fg:x="24782" fg:w="45"/><text x="9.0943%" y="191.50"></text></g><g><title>nvme_irq (45 samples, 0.02%)</title><rect x="8.8443%" y="165" width="0.0161%" height="15" fill="rgb(246,177,23)" fg:x="24782" fg:w="45"/><text x="9.0943%" y="175.50"></text></g><g><title>nvme_process_cq (45 samples, 0.02%)</title><rect x="8.8443%" y="149" width="0.0161%" height="15" fill="rgb(230,62,27)" fg:x="24782" fg:w="45"/><text x="9.0943%" y="159.50"></text></g><g><title>nvme_pci_complete_rq (43 samples, 0.02%)</title><rect x="8.8450%" y="133" width="0.0153%" height="15" fill="rgb(216,154,8)" fg:x="24784" fg:w="43"/><text x="9.0950%" y="143.50"></text></g><g><title>handle_edge_irq (51 samples, 0.02%)</title><rect x="8.8429%" y="213" width="0.0182%" height="15" fill="rgb(244,35,45)" fg:x="24778" fg:w="51"/><text x="9.0929%" y="223.50"></text></g><g><title>handle_irq_event (47 samples, 0.02%)</title><rect x="8.8443%" y="197" width="0.0168%" height="15" fill="rgb(251,115,12)" fg:x="24782" fg:w="47"/><text x="9.0943%" y="207.50"></text></g><g><title>asm_common_interrupt (52 samples, 0.02%)</title><rect x="8.8429%" y="261" width="0.0186%" height="15" fill="rgb(240,54,50)" fg:x="24778" fg:w="52"/><text x="9.0929%" y="271.50"></text></g><g><title>common_interrupt (52 samples, 0.02%)</title><rect x="8.8429%" y="245" width="0.0186%" height="15" fill="rgb(233,84,52)" fg:x="24778" fg:w="52"/><text x="9.0929%" y="255.50"></text></g><g><title>__common_interrupt (52 samples, 0.02%)</title><rect x="8.8429%" y="229" width="0.0186%" height="15" fill="rgb(207,117,47)" fg:x="24778" fg:w="52"/><text x="9.0929%" y="239.50"></text></g><g><title>rmqueue (1,635 samples, 0.58%)</title><rect x="8.7262%" y="277" width="0.5835%" height="15" fill="rgb(249,43,39)" fg:x="24451" fg:w="1635"/><text x="8.9762%" y="287.50"></text></g><g><title>rmqueue_bulk.constprop.0 (1,250 samples, 0.45%)</title><rect x="8.8636%" y="261" width="0.4461%" height="15" fill="rgb(209,38,44)" fg:x="24836" fg:w="1250"/><text x="9.1136%" y="271.50"></text></g><g><title>get_page_from_freelist (5,249 samples, 1.87%)</title><rect x="7.4368%" y="293" width="1.8733%" height="15" fill="rgb(236,212,23)" fg:x="20838" fg:w="5249"/><text x="7.6868%" y="303.50">g..</text></g><g><title>__alloc_pages (5,780 samples, 2.06%)</title><rect x="7.2633%" y="309" width="2.0628%" height="15" fill="rgb(242,79,21)" fg:x="20352" fg:w="5780"/><text x="7.5133%" y="319.50">_..</text></g><g><title>__next_zones_zonelist (34 samples, 0.01%)</title><rect x="9.3304%" y="309" width="0.0121%" height="15" fill="rgb(211,96,35)" fg:x="26144" fg:w="34"/><text x="9.5804%" y="319.50"></text></g><g><title>alloc_pages_vma (6,087 samples, 2.17%)</title><rect x="7.1916%" y="325" width="2.1724%" height="15" fill="rgb(253,215,40)" fg:x="20151" fg:w="6087"/><text x="7.4416%" y="335.50">a..</text></g><g><title>cgroup_throttle_swaprate (182 samples, 0.06%)</title><rect x="9.3664%" y="325" width="0.0650%" height="15" fill="rgb(211,81,21)" fg:x="26245" fg:w="182"/><text x="9.6164%" y="335.50"></text></g><g><title>get_mem_cgroup_from_mm (38 samples, 0.01%)</title><rect x="9.4314%" y="325" width="0.0136%" height="15" fill="rgb(208,190,38)" fg:x="26427" fg:w="38"/><text x="9.6814%" y="335.50"></text></g><g><title>__handle_irq_event_percpu (30 samples, 0.01%)</title><rect x="9.5591%" y="181" width="0.0107%" height="15" fill="rgb(235,213,38)" fg:x="26785" fg:w="30"/><text x="9.8091%" y="191.50"></text></g><g><title>nvme_irq (30 samples, 0.01%)</title><rect x="9.5591%" y="165" width="0.0107%" height="15" fill="rgb(237,122,38)" fg:x="26785" fg:w="30"/><text x="9.8091%" y="175.50"></text></g><g><title>nvme_process_cq (30 samples, 0.01%)</title><rect x="9.5591%" y="149" width="0.0107%" height="15" fill="rgb(244,218,35)" fg:x="26785" fg:w="30"/><text x="9.8091%" y="159.50"></text></g><g><title>asm_common_interrupt (32 samples, 0.01%)</title><rect x="9.5588%" y="261" width="0.0114%" height="15" fill="rgb(240,68,47)" fg:x="26784" fg:w="32"/><text x="9.8088%" y="271.50"></text></g><g><title>common_interrupt (32 samples, 0.01%)</title><rect x="9.5588%" y="245" width="0.0114%" height="15" fill="rgb(210,16,53)" fg:x="26784" fg:w="32"/><text x="9.8088%" y="255.50"></text></g><g><title>__common_interrupt (32 samples, 0.01%)</title><rect x="9.5588%" y="229" width="0.0114%" height="15" fill="rgb(235,124,12)" fg:x="26784" fg:w="32"/><text x="9.8088%" y="239.50"></text></g><g><title>handle_edge_irq (31 samples, 0.01%)</title><rect x="9.5591%" y="213" width="0.0111%" height="15" fill="rgb(224,169,11)" fg:x="26785" fg:w="31"/><text x="9.8091%" y="223.50"></text></g><g><title>handle_irq_event (31 samples, 0.01%)</title><rect x="9.5591%" y="197" width="0.0111%" height="15" fill="rgb(250,166,2)" fg:x="26785" fg:w="31"/><text x="9.8091%" y="207.50"></text></g><g><title>__lock_text_start (35 samples, 0.01%)</title><rect x="9.5581%" y="277" width="0.0125%" height="15" fill="rgb(242,216,29)" fg:x="26782" fg:w="35"/><text x="9.8081%" y="287.50"></text></g><g><title>__mod_memcg_state.part.0 (35 samples, 0.01%)</title><rect x="9.8457%" y="229" width="0.0125%" height="15" fill="rgb(230,116,27)" fg:x="27588" fg:w="35"/><text x="10.0957%" y="239.50"></text></g><g><title>__mod_memcg_lruvec_state (154 samples, 0.05%)</title><rect x="9.8054%" y="245" width="0.0550%" height="15" fill="rgb(228,99,48)" fg:x="27475" fg:w="154"/><text x="10.0554%" y="255.50"></text></g><g><title>__mod_lruvec_state (247 samples, 0.09%)</title><rect x="9.7943%" y="261" width="0.0882%" height="15" fill="rgb(253,11,6)" fg:x="27444" fg:w="247"/><text x="10.0443%" y="271.50"></text></g><g><title>__mod_node_page_state (46 samples, 0.02%)</title><rect x="9.8661%" y="245" width="0.0164%" height="15" fill="rgb(247,143,39)" fg:x="27645" fg:w="46"/><text x="10.1161%" y="255.50"></text></g><g><title>__mod_zone_page_state (33 samples, 0.01%)</title><rect x="9.8968%" y="261" width="0.0118%" height="15" fill="rgb(236,97,10)" fg:x="27731" fg:w="33"/><text x="10.1468%" y="271.50"></text></g><g><title>mem_cgroup_update_lru_size (47 samples, 0.02%)</title><rect x="9.9085%" y="261" width="0.0168%" height="15" fill="rgb(233,208,19)" fg:x="27764" fg:w="47"/><text x="10.1585%" y="271.50"></text></g><g><title>__pagevec_lru_add_fn (1,075 samples, 0.38%)</title><rect x="9.5820%" y="277" width="0.3837%" height="15" fill="rgb(216,164,2)" fg:x="26849" fg:w="1075"/><text x="9.8320%" y="287.50"></text></g><g><title>page_mapping (113 samples, 0.04%)</title><rect x="9.9253%" y="261" width="0.0403%" height="15" fill="rgb(220,129,5)" fg:x="27811" fg:w="113"/><text x="10.1753%" y="271.50"></text></g><g><title>_raw_spin_lock_irqsave (84 samples, 0.03%)</title><rect x="9.9706%" y="261" width="0.0300%" height="15" fill="rgb(242,17,10)" fg:x="27938" fg:w="84"/><text x="10.2206%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (50 samples, 0.02%)</title><rect x="9.9828%" y="245" width="0.0178%" height="15" fill="rgb(242,107,0)" fg:x="27972" fg:w="50"/><text x="10.2328%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (50 samples, 0.02%)</title><rect x="9.9828%" y="229" width="0.0178%" height="15" fill="rgb(251,28,31)" fg:x="27972" fg:w="50"/><text x="10.2328%" y="239.50"></text></g><g><title>lock_page_lruvec_irqsave (97 samples, 0.03%)</title><rect x="9.9663%" y="277" width="0.0346%" height="15" fill="rgb(233,223,10)" fg:x="27926" fg:w="97"/><text x="10.2163%" y="287.50"></text></g><g><title>__pagevec_lru_add (1,514 samples, 0.54%)</title><rect x="9.5349%" y="293" width="0.5403%" height="15" fill="rgb(215,21,27)" fg:x="26717" fg:w="1514"/><text x="9.7849%" y="303.50"></text></g><g><title>release_pages (180 samples, 0.06%)</title><rect x="10.0110%" y="277" width="0.0642%" height="15" fill="rgb(232,23,21)" fg:x="28051" fg:w="180"/><text x="10.2610%" y="287.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1,756 samples, 0.63%)</title><rect x="9.4553%" y="325" width="0.6267%" height="15" fill="rgb(244,5,23)" fg:x="26494" fg:w="1756"/><text x="9.7053%" y="335.50"></text></g><g><title>lru_cache_add (1,728 samples, 0.62%)</title><rect x="9.4653%" y="309" width="0.6167%" height="15" fill="rgb(226,81,46)" fg:x="26522" fg:w="1728"/><text x="9.7153%" y="319.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (863 samples, 0.31%)</title><rect x="10.2122%" y="293" width="0.3080%" height="15" fill="rgb(247,70,30)" fg:x="28615" fg:w="863"/><text x="10.4622%" y="303.50"></text></g><g><title>cgroup_rstat_updated (89 samples, 0.03%)</title><rect x="10.4885%" y="277" width="0.0318%" height="15" fill="rgb(212,68,19)" fg:x="29389" fg:w="89"/><text x="10.7385%" y="287.50"></text></g><g><title>page_counter_try_charge (92 samples, 0.03%)</title><rect x="10.7040%" y="277" width="0.0328%" height="15" fill="rgb(240,187,13)" fg:x="29993" fg:w="92"/><text x="10.9540%" y="287.50"></text></g><g><title>__mem_cgroup_charge (1,736 samples, 0.62%)</title><rect x="10.1194%" y="309" width="0.6196%" height="15" fill="rgb(223,113,26)" fg:x="28355" fg:w="1736"/><text x="10.3694%" y="319.50"></text></g><g><title>try_charge (598 samples, 0.21%)</title><rect x="10.5256%" y="293" width="0.2134%" height="15" fill="rgb(206,192,2)" fg:x="29493" fg:w="598"/><text x="10.7756%" y="303.50"></text></g><g><title>get_mem_cgroup_from_mm (311 samples, 0.11%)</title><rect x="10.7397%" y="309" width="0.1110%" height="15" fill="rgb(241,108,4)" fg:x="30093" fg:w="311"/><text x="10.9897%" y="319.50"></text></g><g><title>memcg_check_events (55 samples, 0.02%)</title><rect x="10.8568%" y="309" width="0.0196%" height="15" fill="rgb(247,173,49)" fg:x="30421" fg:w="55"/><text x="11.1068%" y="319.50"></text></g><g><title>rcu_read_unlock_strict (43 samples, 0.02%)</title><rect x="10.8764%" y="309" width="0.0153%" height="15" fill="rgb(224,114,35)" fg:x="30476" fg:w="43"/><text x="11.1264%" y="319.50"></text></g><g><title>mem_cgroup_charge (2,292 samples, 0.82%)</title><rect x="10.0820%" y="325" width="0.8180%" height="15" fill="rgb(245,159,27)" fg:x="28250" fg:w="2292"/><text x="10.3320%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (167 samples, 0.06%)</title><rect x="10.9585%" y="277" width="0.0596%" height="15" fill="rgb(245,172,44)" fg:x="30706" fg:w="167"/><text x="11.2085%" y="287.50"></text></g><g><title>__mod_node_page_state (98 samples, 0.03%)</title><rect x="11.0277%" y="277" width="0.0350%" height="15" fill="rgb(236,23,11)" fg:x="30900" fg:w="98"/><text x="11.2777%" y="287.50"></text></g><g><title>__mod_lruvec_state (326 samples, 0.12%)</title><rect x="10.9467%" y="293" width="0.1163%" height="15" fill="rgb(205,117,38)" fg:x="30673" fg:w="326"/><text x="11.1967%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (448 samples, 0.16%)</title><rect x="10.9192%" y="309" width="0.1599%" height="15" fill="rgb(237,72,25)" fg:x="30596" fg:w="448"/><text x="11.1692%" y="319.50"></text></g><g><title>__page_set_anon_rmap (32 samples, 0.01%)</title><rect x="11.0813%" y="309" width="0.0114%" height="15" fill="rgb(244,70,9)" fg:x="31050" fg:w="32"/><text x="11.3313%" y="319.50"></text></g><g><title>page_add_new_anon_rmap (544 samples, 0.19%)</title><rect x="10.9028%" y="325" width="0.1941%" height="15" fill="rgb(217,125,39)" fg:x="30550" fg:w="544"/><text x="11.1528%" y="335.50"></text></g><g><title>pmd_page_vaddr (31 samples, 0.01%)</title><rect x="11.0995%" y="325" width="0.0111%" height="15" fill="rgb(235,36,10)" fg:x="31101" fg:w="31"/><text x="11.3495%" y="335.50"></text></g><g><title>pmd_pfn (36 samples, 0.01%)</title><rect x="11.1105%" y="325" width="0.0128%" height="15" fill="rgb(251,123,47)" fg:x="31132" fg:w="36"/><text x="11.3605%" y="335.50"></text></g><g><title>do_anonymous_page (11,440 samples, 4.08%)</title><rect x="7.0659%" y="341" width="4.0828%" height="15" fill="rgb(221,13,13)" fg:x="19799" fg:w="11440"/><text x="7.3159%" y="351.50">do_a..</text></g><g><title>pmd_page_vaddr (53 samples, 0.02%)</title><rect x="11.1640%" y="341" width="0.0189%" height="15" fill="rgb(238,131,9)" fg:x="31282" fg:w="53"/><text x="11.4140%" y="351.50"></text></g><g><title>pmd_val (40 samples, 0.01%)</title><rect x="11.1876%" y="341" width="0.0143%" height="15" fill="rgb(211,50,8)" fg:x="31348" fg:w="40"/><text x="11.4376%" y="351.50"></text></g><g><title>handle_pte_fault (11,977 samples, 4.27%)</title><rect x="6.9332%" y="357" width="4.2744%" height="15" fill="rgb(245,182,24)" fg:x="19427" fg:w="11977"/><text x="7.1832%" y="367.50">handl..</text></g><g><title>pmd_val (37 samples, 0.01%)</title><rect x="11.2101%" y="357" width="0.0132%" height="15" fill="rgb(242,14,37)" fg:x="31411" fg:w="37"/><text x="11.4601%" y="367.50"></text></g><g><title>__handle_mm_fault (12,565 samples, 4.48%)</title><rect x="6.7497%" y="373" width="4.4842%" height="15" fill="rgb(246,228,12)" fg:x="18913" fg:w="12565"/><text x="6.9997%" y="383.50">__han..</text></g><g><title>pud_val (30 samples, 0.01%)</title><rect x="11.2233%" y="357" width="0.0107%" height="15" fill="rgb(213,55,15)" fg:x="31448" fg:w="30"/><text x="11.4733%" y="367.50"></text></g><g><title>pud_val (42 samples, 0.01%)</title><rect x="11.2679%" y="373" width="0.0150%" height="15" fill="rgb(209,9,3)" fg:x="31573" fg:w="42"/><text x="11.5179%" y="383.50"></text></g><g><title>handle_mm_fault (12,964 samples, 4.63%)</title><rect x="6.6620%" y="389" width="4.6266%" height="15" fill="rgb(230,59,30)" fg:x="18667" fg:w="12964"/><text x="6.9120%" y="399.50">handl..</text></g><g><title>mem_cgroup_from_task (37 samples, 0.01%)</title><rect x="11.2886%" y="389" width="0.0132%" height="15" fill="rgb(209,121,21)" fg:x="31631" fg:w="37"/><text x="11.5386%" y="399.50"></text></g><g><title>up_read (406 samples, 0.14%)</title><rect x="11.3089%" y="389" width="0.1449%" height="15" fill="rgb(220,109,13)" fg:x="31688" fg:w="406"/><text x="11.5589%" y="399.50"></text></g><g><title>do_user_addr_fault (14,437 samples, 5.15%)</title><rect x="6.3051%" y="405" width="5.1523%" height="15" fill="rgb(232,18,1)" fg:x="17667" fg:w="14437"/><text x="6.5551%" y="415.50">do_use..</text></g><g><title>exc_page_fault (14,655 samples, 5.23%)</title><rect x="6.2505%" y="421" width="5.2301%" height="15" fill="rgb(215,41,42)" fg:x="17514" fg:w="14655"/><text x="6.5005%" y="431.50">exc_pa..</text></g><g><title>asm_exc_page_fault (14,692 samples, 5.24%)</title><rect x="6.2480%" y="437" width="5.2433%" height="15" fill="rgb(224,123,36)" fg:x="17507" fg:w="14692"/><text x="6.4980%" y="447.50">asm_ex..</text></g><g><title>copy_user_enhanced_fast_string (23,845 samples, 8.51%)</title><rect x="2.9925%" y="453" width="8.5099%" height="15" fill="rgb(240,125,3)" fg:x="8385" fg:w="23845"/><text x="3.2425%" y="463.50">copy_user_en..</text></g><g><title>asm_sysvec_apic_timer_interrupt (31 samples, 0.01%)</title><rect x="11.4913%" y="437" width="0.0111%" height="15" fill="rgb(205,98,50)" fg:x="32199" fg:w="31"/><text x="11.7413%" y="447.50"></text></g><g><title>sysvec_apic_timer_interrupt (31 samples, 0.01%)</title><rect x="11.4913%" y="421" width="0.0111%" height="15" fill="rgb(205,185,37)" fg:x="32199" fg:w="31"/><text x="11.7413%" y="431.50"></text></g><g><title>error_entry (207 samples, 0.07%)</title><rect x="11.5034%" y="453" width="0.0739%" height="15" fill="rgb(238,207,15)" fg:x="32233" fg:w="207"/><text x="11.7534%" y="463.50"></text></g><g><title>xas_load (67 samples, 0.02%)</title><rect x="11.9628%" y="421" width="0.0239%" height="15" fill="rgb(213,199,42)" fg:x="33520" fg:w="67"/><text x="12.2128%" y="431.50"></text></g><g><title>filemap_get_read_batch (1,091 samples, 0.39%)</title><rect x="11.6002%" y="437" width="0.3894%" height="15" fill="rgb(235,201,11)" fg:x="32504" fg:w="1091"/><text x="11.8502%" y="447.50"></text></g><g><title>clear_page_erms (58 samples, 0.02%)</title><rect x="12.1869%" y="309" width="0.0207%" height="15" fill="rgb(207,46,11)" fg:x="34148" fg:w="58"/><text x="12.4369%" y="319.50"></text></g><g><title>get_page_from_freelist (93 samples, 0.03%)</title><rect x="12.1837%" y="325" width="0.0332%" height="15" fill="rgb(241,35,35)" fg:x="34139" fg:w="93"/><text x="12.4337%" y="335.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (108 samples, 0.04%)</title><rect x="12.1830%" y="341" width="0.0385%" height="15" fill="rgb(243,32,47)" fg:x="34137" fg:w="108"/><text x="12.4330%" y="351.50"></text></g><g><title>__next_zones_zonelist (51 samples, 0.02%)</title><rect x="12.2286%" y="341" width="0.0182%" height="15" fill="rgb(247,202,23)" fg:x="34265" fg:w="51"/><text x="12.4786%" y="351.50"></text></g><g><title>__inc_numa_state (44 samples, 0.02%)</title><rect x="12.3246%" y="325" width="0.0157%" height="15" fill="rgb(219,102,11)" fg:x="34534" fg:w="44"/><text x="12.5746%" y="335.50"></text></g><g><title>clear_page_erms (2,632 samples, 0.94%)</title><rect x="12.3464%" y="325" width="0.9393%" height="15" fill="rgb(243,110,44)" fg:x="34595" fg:w="2632"/><text x="12.5964%" y="335.50"></text></g><g><title>kernel_init_free_pages (53 samples, 0.02%)</title><rect x="13.2857%" y="325" width="0.0189%" height="15" fill="rgb(222,74,54)" fg:x="37227" fg:w="53"/><text x="13.5357%" y="335.50"></text></g><g><title>rmqueue (1,413 samples, 0.50%)</title><rect x="13.3046%" y="325" width="0.5043%" height="15" fill="rgb(216,99,12)" fg:x="37280" fg:w="1413"/><text x="13.5546%" y="335.50"></text></g><g><title>rmqueue_bulk.constprop.0 (1,135 samples, 0.41%)</title><rect x="13.4039%" y="309" width="0.4051%" height="15" fill="rgb(226,22,26)" fg:x="37558" fg:w="1135"/><text x="13.6539%" y="319.50"></text></g><g><title>get_page_from_freelist (4,369 samples, 1.56%)</title><rect x="12.2500%" y="341" width="1.5592%" height="15" fill="rgb(217,163,10)" fg:x="34325" fg:w="4369"/><text x="12.5000%" y="351.50"></text></g><g><title>__alloc_pages (4,801 samples, 1.71%)</title><rect x="12.1101%" y="357" width="1.7134%" height="15" fill="rgb(213,25,53)" fg:x="33933" fg:w="4801"/><text x="12.3601%" y="367.50"></text></g><g><title>policy_nodemask (31 samples, 0.01%)</title><rect x="13.8410%" y="357" width="0.0111%" height="15" fill="rgb(252,105,26)" fg:x="38783" fg:w="31"/><text x="14.0910%" y="367.50"></text></g><g><title>alloc_pages (4,964 samples, 1.77%)</title><rect x="12.0866%" y="373" width="1.7716%" height="15" fill="rgb(220,39,43)" fg:x="33867" fg:w="4964"/><text x="12.3366%" y="383.50">a..</text></g><g><title>__page_cache_alloc (5,027 samples, 1.79%)</title><rect x="12.0705%" y="389" width="1.7941%" height="15" fill="rgb(229,68,48)" fg:x="33822" fg:w="5027"/><text x="12.3205%" y="399.50">_..</text></g><g><title>PageHuge (33 samples, 0.01%)</title><rect x="13.8985%" y="373" width="0.0118%" height="15" fill="rgb(252,8,32)" fg:x="38944" fg:w="33"/><text x="14.1485%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (133 samples, 0.05%)</title><rect x="14.6922%" y="325" width="0.0475%" height="15" fill="rgb(223,20,43)" fg:x="41168" fg:w="133"/><text x="14.9422%" y="335.50"></text></g><g><title>__mod_lruvec_state (278 samples, 0.10%)</title><rect x="14.6826%" y="341" width="0.0992%" height="15" fill="rgb(229,81,49)" fg:x="41141" fg:w="278"/><text x="14.9326%" y="351.50"></text></g><g><title>__mod_node_page_state (98 samples, 0.03%)</title><rect x="14.7468%" y="325" width="0.0350%" height="15" fill="rgb(236,28,36)" fg:x="41321" fg:w="98"/><text x="14.9968%" y="335.50"></text></g><g><title>__mod_lruvec_page_state (404 samples, 0.14%)</title><rect x="14.6515%" y="357" width="0.1442%" height="15" fill="rgb(249,185,26)" fg:x="41054" fg:w="404"/><text x="14.9015%" y="367.50"></text></g><g><title>_raw_spin_lock_irq (301 samples, 0.11%)</title><rect x="14.8007%" y="357" width="0.1074%" height="15" fill="rgb(249,174,33)" fg:x="41472" fg:w="301"/><text x="15.0507%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath (142 samples, 0.05%)</title><rect x="14.8574%" y="341" width="0.0507%" height="15" fill="rgb(233,201,37)" fg:x="41631" fg:w="142"/><text x="15.1074%" y="351.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (142 samples, 0.05%)</title><rect x="14.8574%" y="325" width="0.0507%" height="15" fill="rgb(221,78,26)" fg:x="41631" fg:w="142"/><text x="15.1074%" y="335.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (76 samples, 0.03%)</title><rect x="14.9898%" y="325" width="0.0271%" height="15" fill="rgb(250,127,30)" fg:x="42002" fg:w="76"/><text x="15.2398%" y="335.50"></text></g><g><title>cgroup_rstat_updated (34 samples, 0.01%)</title><rect x="15.0048%" y="309" width="0.0121%" height="15" fill="rgb(230,49,44)" fg:x="42044" fg:w="34"/><text x="15.2548%" y="319.50"></text></g><g><title>arch_local_irq_enable (29 samples, 0.01%)</title><rect x="15.0630%" y="309" width="0.0103%" height="15" fill="rgb(229,67,23)" fg:x="42207" fg:w="29"/><text x="15.3130%" y="319.50"></text></g><g><title>page_counter_try_charge (42 samples, 0.01%)</title><rect x="15.0737%" y="309" width="0.0150%" height="15" fill="rgb(249,83,47)" fg:x="42237" fg:w="42"/><text x="15.3237%" y="319.50"></text></g><g><title>__mem_cgroup_charge (410 samples, 0.15%)</title><rect x="14.9438%" y="341" width="0.1463%" height="15" fill="rgb(215,43,3)" fg:x="41873" fg:w="410"/><text x="15.1938%" y="351.50"></text></g><g><title>try_charge (197 samples, 0.07%)</title><rect x="15.0198%" y="325" width="0.0703%" height="15" fill="rgb(238,154,13)" fg:x="42086" fg:w="197"/><text x="15.2698%" y="335.50"></text></g><g><title>get_mem_cgroup_from_mm (63 samples, 0.02%)</title><rect x="15.0901%" y="341" width="0.0225%" height="15" fill="rgb(219,56,2)" fg:x="42283" fg:w="63"/><text x="15.3401%" y="351.50"></text></g><g><title>rcu_read_unlock_strict (33 samples, 0.01%)</title><rect x="15.1187%" y="341" width="0.0118%" height="15" fill="rgb(233,0,4)" fg:x="42363" fg:w="33"/><text x="15.3687%" y="351.50"></text></g><g><title>mem_cgroup_charge (590 samples, 0.21%)</title><rect x="14.9217%" y="357" width="0.2106%" height="15" fill="rgb(235,30,7)" fg:x="41811" fg:w="590"/><text x="15.1717%" y="367.50"></text></g><g><title>xas_load (667 samples, 0.24%)</title><rect x="15.2033%" y="341" width="0.2380%" height="15" fill="rgb(250,79,13)" fg:x="42600" fg:w="667"/><text x="15.4533%" y="351.50"></text></g><g><title>xa_get_order (922 samples, 0.33%)</title><rect x="15.1476%" y="357" width="0.3290%" height="15" fill="rgb(211,146,34)" fg:x="42444" fg:w="922"/><text x="15.3976%" y="367.50"></text></g><g><title>xas_start (99 samples, 0.04%)</title><rect x="15.4413%" y="341" width="0.0353%" height="15" fill="rgb(228,22,38)" fg:x="43267" fg:w="99"/><text x="15.6913%" y="351.50"></text></g><g><title>xas_find_conflict (257 samples, 0.09%)</title><rect x="15.4774%" y="357" width="0.0917%" height="15" fill="rgb(235,168,5)" fg:x="43368" fg:w="257"/><text x="15.7274%" y="367.50"></text></g><g><title>xas_load (33 samples, 0.01%)</title><rect x="15.5691%" y="357" width="0.0118%" height="15" fill="rgb(221,155,16)" fg:x="43625" fg:w="33"/><text x="15.8191%" y="367.50"></text></g><g><title>xas_start (45 samples, 0.02%)</title><rect x="15.5869%" y="357" width="0.0161%" height="15" fill="rgb(215,215,53)" fg:x="43675" fg:w="45"/><text x="15.8369%" y="367.50"></text></g><g><title>workingset_update_node (67 samples, 0.02%)</title><rect x="15.6651%" y="341" width="0.0239%" height="15" fill="rgb(223,4,10)" fg:x="43894" fg:w="67"/><text x="15.9151%" y="351.50"></text></g><g><title>list_lru_del (36 samples, 0.01%)</title><rect x="15.6761%" y="325" width="0.0128%" height="15" fill="rgb(234,103,6)" fg:x="43925" fg:w="36"/><text x="15.9261%" y="335.50"></text></g><g><title>__add_to_page_cache_locked (5,037 samples, 1.80%)</title><rect x="13.9103%" y="373" width="1.7976%" height="15" fill="rgb(227,97,0)" fg:x="38977" fg:w="5037"/><text x="14.1603%" y="383.50">_..</text></g><g><title>xas_store (294 samples, 0.10%)</title><rect x="15.6030%" y="357" width="0.1049%" height="15" fill="rgb(234,150,53)" fg:x="43720" fg:w="294"/><text x="15.8530%" y="367.50"></text></g><g><title>xas_create (53 samples, 0.02%)</title><rect x="15.6890%" y="341" width="0.0189%" height="15" fill="rgb(228,201,54)" fg:x="43961" fg:w="53"/><text x="15.9390%" y="351.50"></text></g><g><title>__mod_memcg_lruvec_state (107 samples, 0.04%)</title><rect x="16.0152%" y="309" width="0.0382%" height="15" fill="rgb(222,22,37)" fg:x="44875" fg:w="107"/><text x="16.2652%" y="319.50"></text></g><g><title>__mod_lruvec_state (195 samples, 0.07%)</title><rect x="16.0041%" y="325" width="0.0696%" height="15" fill="rgb(237,53,32)" fg:x="44844" fg:w="195"/><text x="16.2541%" y="335.50"></text></g><g><title>__mod_node_page_state (38 samples, 0.01%)</title><rect x="16.0601%" y="309" width="0.0136%" height="15" fill="rgb(233,25,53)" fg:x="45001" fg:w="38"/><text x="16.3101%" y="319.50"></text></g><g><title>mem_cgroup_update_lru_size (37 samples, 0.01%)</title><rect x="16.0894%" y="325" width="0.0132%" height="15" fill="rgb(210,40,34)" fg:x="45083" fg:w="37"/><text x="16.3394%" y="335.50"></text></g><g><title>page_mapping (117 samples, 0.04%)</title><rect x="16.1026%" y="325" width="0.0418%" height="15" fill="rgb(241,220,44)" fg:x="45120" fg:w="117"/><text x="16.3526%" y="335.50"></text></g><g><title>__pagevec_lru_add_fn (944 samples, 0.34%)</title><rect x="15.8082%" y="341" width="0.3369%" height="15" fill="rgb(235,28,35)" fg:x="44295" fg:w="944"/><text x="16.0582%" y="351.50"></text></g><g><title>_raw_spin_lock_irqsave (83 samples, 0.03%)</title><rect x="16.1508%" y="325" width="0.0296%" height="15" fill="rgb(210,56,17)" fg:x="45255" fg:w="83"/><text x="16.4008%" y="335.50"></text></g><g><title>native_queued_spin_lock_slowpath (62 samples, 0.02%)</title><rect x="16.1583%" y="309" width="0.0221%" height="15" fill="rgb(224,130,29)" fg:x="45276" fg:w="62"/><text x="16.4083%" y="319.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (62 samples, 0.02%)</title><rect x="16.1583%" y="293" width="0.0221%" height="15" fill="rgb(235,212,8)" fg:x="45276" fg:w="62"/><text x="16.4083%" y="303.50"></text></g><g><title>lock_page_lruvec_irqsave (97 samples, 0.03%)</title><rect x="16.1462%" y="341" width="0.0346%" height="15" fill="rgb(223,33,50)" fg:x="45242" fg:w="97"/><text x="16.3962%" y="351.50"></text></g><g><title>__pagevec_lru_add (1,324 samples, 0.47%)</title><rect x="15.7736%" y="357" width="0.4725%" height="15" fill="rgb(219,149,13)" fg:x="44198" fg:w="1324"/><text x="16.0236%" y="367.50"></text></g><g><title>release_pages (155 samples, 0.06%)</title><rect x="16.1908%" y="341" width="0.0553%" height="15" fill="rgb(250,156,29)" fg:x="45367" fg:w="155"/><text x="16.4408%" y="351.50"></text></g><g><title>lru_cache_add (1,493 samples, 0.53%)</title><rect x="15.7161%" y="373" width="0.5328%" height="15" fill="rgb(216,193,19)" fg:x="44037" fg:w="1493"/><text x="15.9661%" y="383.50"></text></g><g><title>__radix_tree_lookup (138 samples, 0.05%)</title><rect x="16.3813%" y="309" width="0.0493%" height="15" fill="rgb(216,135,14)" fg:x="45901" fg:w="138"/><text x="16.6313%" y="319.50"></text></g><g><title>idr_find (157 samples, 0.06%)</title><rect x="16.3749%" y="341" width="0.0560%" height="15" fill="rgb(241,47,5)" fg:x="45883" fg:w="157"/><text x="16.6249%" y="351.50"></text></g><g><title>radix_tree_lookup (139 samples, 0.05%)</title><rect x="16.3813%" y="325" width="0.0496%" height="15" fill="rgb(233,42,35)" fg:x="45901" fg:w="139"/><text x="16.6313%" y="335.50"></text></g><g><title>mem_cgroup_from_id (182 samples, 0.06%)</title><rect x="16.3706%" y="357" width="0.0650%" height="15" fill="rgb(231,13,6)" fg:x="45871" fg:w="182"/><text x="16.6206%" y="367.50"></text></g><g><title>mem_cgroup_get_nr_swap_pages (81 samples, 0.03%)</title><rect x="16.4356%" y="357" width="0.0289%" height="15" fill="rgb(207,181,40)" fg:x="46053" fg:w="81"/><text x="16.6856%" y="367.50"></text></g><g><title>__mod_memcg_state.part.0 (42 samples, 0.01%)</title><rect x="16.5484%" y="309" width="0.0150%" height="15" fill="rgb(254,173,49)" fg:x="46369" fg:w="42"/><text x="16.7984%" y="319.50"></text></g><g><title>cgroup_rstat_updated (32 samples, 0.01%)</title><rect x="16.5519%" y="293" width="0.0114%" height="15" fill="rgb(221,1,38)" fg:x="46379" fg:w="32"/><text x="16.8019%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (175 samples, 0.06%)</title><rect x="16.5041%" y="325" width="0.0625%" height="15" fill="rgb(206,124,46)" fg:x="46245" fg:w="175"/><text x="16.7541%" y="335.50"></text></g><g><title>__mod_lruvec_state (250 samples, 0.09%)</title><rect x="16.4916%" y="341" width="0.0892%" height="15" fill="rgb(249,21,11)" fg:x="46210" fg:w="250"/><text x="16.7416%" y="351.50"></text></g><g><title>mod_lruvec_state.constprop.0 (354 samples, 0.13%)</title><rect x="16.4645%" y="357" width="0.1263%" height="15" fill="rgb(222,201,40)" fg:x="46134" fg:w="354"/><text x="16.7145%" y="367.50"></text></g><g><title>workingset_refault (903 samples, 0.32%)</title><rect x="16.2700%" y="373" width="0.3223%" height="15" fill="rgb(235,61,29)" fg:x="45589" fg:w="903"/><text x="16.5200%" y="383.50"></text></g><g><title>xa_get_order (31 samples, 0.01%)</title><rect x="16.5923%" y="373" width="0.0111%" height="15" fill="rgb(219,207,3)" fg:x="46492" fg:w="31"/><text x="16.8423%" y="383.50"></text></g><g><title>xas_find_conflict (35 samples, 0.01%)</title><rect x="16.6033%" y="373" width="0.0125%" height="15" fill="rgb(222,56,46)" fg:x="46523" fg:w="35"/><text x="16.8533%" y="383.50"></text></g><g><title>add_to_page_cache_lru (7,726 samples, 2.76%)</title><rect x="13.8646%" y="389" width="2.7573%" height="15" fill="rgb(239,76,54)" fg:x="38849" fg:w="7726"/><text x="14.1146%" y="399.50">ad..</text></g><g><title>nvme_pci_setup_prps (30 samples, 0.01%)</title><rect x="16.6558%" y="245" width="0.0107%" height="15" fill="rgb(231,124,27)" fg:x="46670" fg:w="30"/><text x="16.9058%" y="255.50"></text></g><g><title>nvme_map_data (93 samples, 0.03%)</title><rect x="16.6358%" y="261" width="0.0332%" height="15" fill="rgb(249,195,6)" fg:x="46614" fg:w="93"/><text x="16.8858%" y="271.50"></text></g><g><title>__blk_mq_try_issue_directly (100 samples, 0.04%)</title><rect x="16.6351%" y="293" width="0.0357%" height="15" fill="rgb(237,174,47)" fg:x="46612" fg:w="100"/><text x="16.8851%" y="303.50"></text></g><g><title>nvme_queue_rq (99 samples, 0.04%)</title><rect x="16.6354%" y="277" width="0.0353%" height="15" fill="rgb(206,201,31)" fg:x="46613" fg:w="99"/><text x="16.8854%" y="287.50"></text></g><g><title>blk_finish_plug (103 samples, 0.04%)</title><rect x="16.6344%" y="373" width="0.0368%" height="15" fill="rgb(231,57,52)" fg:x="46610" fg:w="103"/><text x="16.8844%" y="383.50"></text></g><g><title>blk_flush_plug_list (103 samples, 0.04%)</title><rect x="16.6344%" y="357" width="0.0368%" height="15" fill="rgb(248,177,22)" fg:x="46610" fg:w="103"/><text x="16.8844%" y="367.50"></text></g><g><title>blk_mq_flush_plug_list (102 samples, 0.04%)</title><rect x="16.6347%" y="341" width="0.0364%" height="15" fill="rgb(215,211,37)" fg:x="46611" fg:w="102"/><text x="16.8847%" y="351.50"></text></g><g><title>blk_mq_sched_insert_requests (101 samples, 0.04%)</title><rect x="16.6351%" y="325" width="0.0360%" height="15" fill="rgb(241,128,51)" fg:x="46612" fg:w="101"/><text x="16.8851%" y="335.50"></text></g><g><title>blk_mq_try_issue_list_directly (101 samples, 0.04%)</title><rect x="16.6351%" y="309" width="0.0360%" height="15" fill="rgb(227,165,31)" fg:x="46612" fg:w="101"/><text x="16.8851%" y="319.50"></text></g><g><title>__bio_add_page (29 samples, 0.01%)</title><rect x="16.9659%" y="325" width="0.0103%" height="15" fill="rgb(228,167,24)" fg:x="47539" fg:w="29"/><text x="17.2159%" y="335.50"></text></g><g><title>bio_add_page (162 samples, 0.06%)</title><rect x="16.9463%" y="341" width="0.0578%" height="15" fill="rgb(228,143,12)" fg:x="47484" fg:w="162"/><text x="17.1963%" y="351.50"></text></g><g><title>__bio_try_merge_page (78 samples, 0.03%)</title><rect x="16.9763%" y="325" width="0.0278%" height="15" fill="rgb(249,149,8)" fg:x="47568" fg:w="78"/><text x="17.2263%" y="335.50"></text></g><g><title>bio_alloc_bioset (40 samples, 0.01%)</title><rect x="17.0041%" y="341" width="0.0143%" height="15" fill="rgb(243,35,44)" fg:x="47646" fg:w="40"/><text x="17.2541%" y="351.50"></text></g><g><title>ext4_es_lookup_extent (73 samples, 0.03%)</title><rect x="17.0398%" y="325" width="0.0261%" height="15" fill="rgb(246,89,9)" fg:x="47746" fg:w="73"/><text x="17.2898%" y="335.50"></text></g><g><title>ext4_map_blocks (148 samples, 0.05%)</title><rect x="17.0230%" y="341" width="0.0528%" height="15" fill="rgb(233,213,13)" fg:x="47699" fg:w="148"/><text x="17.2730%" y="351.50"></text></g><g><title>fscrypt_mergeable_bio (43 samples, 0.02%)</title><rect x="17.0758%" y="341" width="0.0153%" height="15" fill="rgb(233,141,41)" fg:x="47847" fg:w="43"/><text x="17.3258%" y="351.50"></text></g><g><title>__blk_mq_alloc_request (44 samples, 0.02%)</title><rect x="17.0997%" y="293" width="0.0157%" height="15" fill="rgb(239,167,4)" fg:x="47914" fg:w="44"/><text x="17.3497%" y="303.50"></text></g><g><title>blk_bio_segment_split (119 samples, 0.04%)</title><rect x="17.1183%" y="277" width="0.0425%" height="15" fill="rgb(209,217,16)" fg:x="47966" fg:w="119"/><text x="17.3683%" y="287.50"></text></g><g><title>__blk_queue_split (129 samples, 0.05%)</title><rect x="17.1169%" y="293" width="0.0460%" height="15" fill="rgb(219,88,35)" fg:x="47962" fg:w="129"/><text x="17.3669%" y="303.50"></text></g><g><title>__blk_bios_map_sg (109 samples, 0.04%)</title><rect x="17.1822%" y="165" width="0.0389%" height="15" fill="rgb(220,193,23)" fg:x="48145" fg:w="109"/><text x="17.4322%" y="175.50"></text></g><g><title>__blk_rq_map_sg (121 samples, 0.04%)</title><rect x="17.1818%" y="181" width="0.0432%" height="15" fill="rgb(230,90,52)" fg:x="48144" fg:w="121"/><text x="17.4318%" y="191.50"></text></g><g><title>dma_direct_map_sg (40 samples, 0.01%)</title><rect x="17.2250%" y="165" width="0.0143%" height="15" fill="rgb(252,106,19)" fg:x="48265" fg:w="40"/><text x="17.4750%" y="175.50"></text></g><g><title>dma_map_sg_attrs (48 samples, 0.02%)</title><rect x="17.2250%" y="181" width="0.0171%" height="15" fill="rgb(206,74,20)" fg:x="48265" fg:w="48"/><text x="17.4750%" y="191.50"></text></g><g><title>nvme_pci_setup_prps (44 samples, 0.02%)</title><rect x="17.2496%" y="181" width="0.0157%" height="15" fill="rgb(230,138,44)" fg:x="48334" fg:w="44"/><text x="17.4996%" y="191.50"></text></g><g><title>nvme_map_data (252 samples, 0.09%)</title><rect x="17.1811%" y="197" width="0.0899%" height="15" fill="rgb(235,182,43)" fg:x="48142" fg:w="252"/><text x="17.4311%" y="207.50"></text></g><g><title>__blk_mq_try_issue_directly (271 samples, 0.10%)</title><rect x="17.1761%" y="229" width="0.0967%" height="15" fill="rgb(242,16,51)" fg:x="48128" fg:w="271"/><text x="17.4261%" y="239.50"></text></g><g><title>nvme_queue_rq (267 samples, 0.10%)</title><rect x="17.1775%" y="213" width="0.0953%" height="15" fill="rgb(248,9,4)" fg:x="48132" fg:w="267"/><text x="17.4275%" y="223.50"></text></g><g><title>blk_mq_sched_insert_requests (273 samples, 0.10%)</title><rect x="17.1758%" y="261" width="0.0974%" height="15" fill="rgb(210,31,22)" fg:x="48127" fg:w="273"/><text x="17.4258%" y="271.50"></text></g><g><title>blk_mq_try_issue_list_directly (272 samples, 0.10%)</title><rect x="17.1761%" y="245" width="0.0971%" height="15" fill="rgb(239,54,39)" fg:x="48128" fg:w="272"/><text x="17.4261%" y="255.50"></text></g><g><title>blk_flush_plug_list (278 samples, 0.10%)</title><rect x="17.1747%" y="293" width="0.0992%" height="15" fill="rgb(230,99,41)" fg:x="48124" fg:w="278"/><text x="17.4247%" y="303.50"></text></g><g><title>blk_mq_flush_plug_list (276 samples, 0.10%)</title><rect x="17.1754%" y="277" width="0.0985%" height="15" fill="rgb(253,106,12)" fg:x="48126" fg:w="276"/><text x="17.4254%" y="287.50"></text></g><g><title>blk_mq_submit_bio (497 samples, 0.18%)</title><rect x="17.0983%" y="309" width="0.1774%" height="15" fill="rgb(213,46,41)" fg:x="47910" fg:w="497"/><text x="17.3483%" y="319.50"></text></g><g><title>submit_bio (534 samples, 0.19%)</title><rect x="17.0933%" y="341" width="0.1906%" height="15" fill="rgb(215,133,35)" fg:x="47896" fg:w="534"/><text x="17.3433%" y="351.50"></text></g><g><title>submit_bio_noacct (527 samples, 0.19%)</title><rect x="17.0958%" y="325" width="0.1881%" height="15" fill="rgb(213,28,5)" fg:x="47903" fg:w="527"/><text x="17.3458%" y="335.50"></text></g><g><title>xas_load (231 samples, 0.08%)</title><rect x="17.2967%" y="325" width="0.0824%" height="15" fill="rgb(215,77,49)" fg:x="48466" fg:w="231"/><text x="17.5467%" y="335.50"></text></g><g><title>xa_load (305 samples, 0.11%)</title><rect x="17.2839%" y="341" width="0.1088%" height="15" fill="rgb(248,100,22)" fg:x="48430" fg:w="305"/><text x="17.5339%" y="351.50"></text></g><g><title>xas_start (38 samples, 0.01%)</title><rect x="17.3792%" y="325" width="0.0136%" height="15" fill="rgb(208,67,9)" fg:x="48697" fg:w="38"/><text x="17.6292%" y="335.50"></text></g><g><title>ext4_mpage_readpages (2,023 samples, 0.72%)</title><rect x="16.6726%" y="357" width="0.7220%" height="15" fill="rgb(219,133,21)" fg:x="46717" fg:w="2023"/><text x="16.9226%" y="367.50"></text></g><g><title>read_pages (2,154 samples, 0.77%)</title><rect x="16.6333%" y="389" width="0.7687%" height="15" fill="rgb(246,46,29)" fg:x="46607" fg:w="2154"/><text x="16.8833%" y="399.50"></text></g><g><title>ext4_readahead (2,048 samples, 0.73%)</title><rect x="16.6711%" y="373" width="0.7309%" height="15" fill="rgb(246,185,52)" fg:x="46713" fg:w="2048"/><text x="16.9211%" y="383.50"></text></g><g><title>xas_load (357 samples, 0.13%)</title><rect x="17.4217%" y="373" width="0.1274%" height="15" fill="rgb(252,136,11)" fg:x="48816" fg:w="357"/><text x="17.6717%" y="383.50"></text></g><g><title>xa_load (450 samples, 0.16%)</title><rect x="17.4042%" y="389" width="0.1606%" height="15" fill="rgb(219,138,53)" fg:x="48767" fg:w="450"/><text x="17.6542%" y="399.50"></text></g><g><title>xas_start (44 samples, 0.02%)</title><rect x="17.5491%" y="373" width="0.0157%" height="15" fill="rgb(211,51,23)" fg:x="49173" fg:w="44"/><text x="17.7991%" y="383.50"></text></g><g><title>page_cache_ra_unbounded (15,578 samples, 5.56%)</title><rect x="12.0106%" y="405" width="5.5595%" height="15" fill="rgb(247,221,28)" fg:x="33654" fg:w="15578"/><text x="12.2606%" y="415.50">page_ca..</text></g><g><title>page_cache_async_ra (15,619 samples, 5.57%)</title><rect x="11.9967%" y="437" width="5.5742%" height="15" fill="rgb(251,222,45)" fg:x="33615" fg:w="15619"/><text x="12.2467%" y="447.50">page_ca..</text></g><g><title>ondemand_readahead (15,615 samples, 5.57%)</title><rect x="11.9981%" y="421" width="5.5727%" height="15" fill="rgb(217,162,53)" fg:x="33619" fg:w="15615"/><text x="12.2481%" y="431.50">ondeman..</text></g><g><title>clear_page_erms (29 samples, 0.01%)</title><rect x="17.5790%" y="325" width="0.0103%" height="15" fill="rgb(229,93,14)" fg:x="49257" fg:w="29"/><text x="17.8290%" y="335.50"></text></g><g><title>__alloc_pages (57 samples, 0.02%)</title><rect x="17.5755%" y="357" width="0.0203%" height="15" fill="rgb(209,67,49)" fg:x="49247" fg:w="57"/><text x="17.8255%" y="367.50"></text></g><g><title>get_page_from_freelist (53 samples, 0.02%)</title><rect x="17.5769%" y="341" width="0.0189%" height="15" fill="rgb(213,87,29)" fg:x="49251" fg:w="53"/><text x="17.8269%" y="351.50"></text></g><g><title>__page_cache_alloc (65 samples, 0.02%)</title><rect x="17.5740%" y="389" width="0.0232%" height="15" fill="rgb(205,151,52)" fg:x="49243" fg:w="65"/><text x="17.8240%" y="399.50"></text></g><g><title>alloc_pages (62 samples, 0.02%)</title><rect x="17.5751%" y="373" width="0.0221%" height="15" fill="rgb(253,215,39)" fg:x="49246" fg:w="62"/><text x="17.8251%" y="383.50"></text></g><g><title>__add_to_page_cache_locked (42 samples, 0.01%)</title><rect x="17.5980%" y="373" width="0.0150%" height="15" fill="rgb(221,220,41)" fg:x="49310" fg:w="42"/><text x="17.8480%" y="383.50"></text></g><g><title>add_to_page_cache_lru (65 samples, 0.02%)</title><rect x="17.5972%" y="389" width="0.0232%" height="15" fill="rgb(218,133,21)" fg:x="49308" fg:w="65"/><text x="17.8472%" y="399.50"></text></g><g><title>ext4_es_insert_extent (55 samples, 0.02%)</title><rect x="17.6486%" y="325" width="0.0196%" height="15" fill="rgb(221,193,43)" fg:x="49452" fg:w="55"/><text x="17.8986%" y="335.50"></text></g><g><title>ext4_es_lookup_extent (29 samples, 0.01%)</title><rect x="17.6683%" y="325" width="0.0103%" height="15" fill="rgb(240,128,52)" fg:x="49507" fg:w="29"/><text x="17.9183%" y="335.50"></text></g><g><title>ext4_map_blocks (116 samples, 0.04%)</title><rect x="17.6447%" y="341" width="0.0414%" height="15" fill="rgb(253,114,12)" fg:x="49441" fg:w="116"/><text x="17.8947%" y="351.50"></text></g><g><title>submit_bio (48 samples, 0.02%)</title><rect x="17.6868%" y="341" width="0.0171%" height="15" fill="rgb(215,223,47)" fg:x="49559" fg:w="48"/><text x="17.9368%" y="351.50"></text></g><g><title>submit_bio_noacct (47 samples, 0.02%)</title><rect x="17.6872%" y="325" width="0.0168%" height="15" fill="rgb(248,225,23)" fg:x="49560" fg:w="47"/><text x="17.9372%" y="335.50"></text></g><g><title>read_pages (234 samples, 0.08%)</title><rect x="17.6212%" y="389" width="0.0835%" height="15" fill="rgb(250,108,0)" fg:x="49375" fg:w="234"/><text x="17.8712%" y="399.50"></text></g><g><title>ext4_readahead (202 samples, 0.07%)</title><rect x="17.6326%" y="373" width="0.0721%" height="15" fill="rgb(228,208,7)" fg:x="49407" fg:w="202"/><text x="17.8826%" y="383.50"></text></g><g><title>ext4_mpage_readpages (202 samples, 0.07%)</title><rect x="17.6326%" y="357" width="0.0721%" height="15" fill="rgb(244,45,10)" fg:x="49407" fg:w="202"/><text x="17.8826%" y="367.50"></text></g><g><title>page_cache_sync_ra (409 samples, 0.15%)</title><rect x="17.5708%" y="437" width="0.1460%" height="15" fill="rgb(207,125,25)" fg:x="49234" fg:w="409"/><text x="17.8208%" y="447.50"></text></g><g><title>ondemand_readahead (409 samples, 0.15%)</title><rect x="17.5708%" y="421" width="0.1460%" height="15" fill="rgb(210,195,18)" fg:x="49234" fg:w="409"/><text x="17.8208%" y="431.50"></text></g><g><title>page_cache_ra_unbounded (406 samples, 0.14%)</title><rect x="17.5719%" y="405" width="0.1449%" height="15" fill="rgb(249,80,12)" fg:x="49237" fg:w="406"/><text x="17.8219%" y="415.50"></text></g><g><title>xa_load (34 samples, 0.01%)</title><rect x="17.7047%" y="389" width="0.0121%" height="15" fill="rgb(221,65,9)" fg:x="49609" fg:w="34"/><text x="17.9547%" y="399.50"></text></g><g><title>filemap_get_pages (17,178 samples, 6.13%)</title><rect x="11.5866%" y="453" width="6.1306%" height="15" fill="rgb(235,49,36)" fg:x="32466" fg:w="17178"/><text x="11.8366%" y="463.50">filemap_..</text></g><g><title>mark_page_accessed (255 samples, 0.09%)</title><rect x="17.7175%" y="453" width="0.0910%" height="15" fill="rgb(225,32,20)" fg:x="49645" fg:w="255"/><text x="17.9675%" y="463.50"></text></g><g><title>restore_regs_and_return_to_kernel (35 samples, 0.01%)</title><rect x="17.8107%" y="453" width="0.0125%" height="15" fill="rgb(215,141,46)" fg:x="49906" fg:w="35"/><text x="18.0607%" y="463.50"></text></g><g><title>filemap_read (49,922 samples, 17.82%)</title><rect x="0.0079%" y="469" width="17.8164%" height="15" fill="rgb(250,160,47)" fg:x="22" fg:w="49922"/><text x="0.2579%" y="479.50">filemap_read</text></g><g><title>new_sync_read (49,943 samples, 17.82%)</title><rect x="0.0029%" y="517" width="17.8239%" height="15" fill="rgb(216,222,40)" fg:x="8" fg:w="49943"/><text x="0.2529%" y="527.50">new_sync_read</text></g><g><title>ext4_file_read_iter (49,943 samples, 17.82%)</title><rect x="0.0029%" y="501" width="17.8239%" height="15" fill="rgb(234,217,39)" fg:x="8" fg:w="49943"/><text x="0.2529%" y="511.50">ext4_file_read_iter</text></g><g><title>generic_file_read_iter (49,942 samples, 17.82%)</title><rect x="0.0032%" y="485" width="17.8235%" height="15" fill="rgb(207,178,40)" fg:x="9" fg:w="49942"/><text x="0.2532%" y="495.50">generic_file_read_iter</text></g><g><title>entry_SYSCALL_64_after_hwframe (49,946 samples, 17.82%)</title><rect x="0.0021%" y="597" width="17.8249%" height="15" fill="rgb(221,136,13)" fg:x="6" fg:w="49946"/><text x="0.2521%" y="607.50">entry_SYSCALL_64_after_hwfra..</text></g><g><title>do_syscall_64 (49,946 samples, 17.82%)</title><rect x="0.0021%" y="581" width="17.8249%" height="15" fill="rgb(249,199,10)" fg:x="6" fg:w="49946"/><text x="0.2521%" y="591.50">do_syscall_64</text></g><g><title>__x64_sys_read (49,946 samples, 17.82%)</title><rect x="0.0021%" y="565" width="17.8249%" height="15" fill="rgb(249,222,13)" fg:x="6" fg:w="49946"/><text x="0.2521%" y="575.50">__x64_sys_read</text></g><g><title>ksys_read (49,946 samples, 17.82%)</title><rect x="0.0021%" y="549" width="17.8249%" height="15" fill="rgb(244,185,38)" fg:x="6" fg:w="49946"/><text x="0.2521%" y="559.50">ksys_read</text></g><g><title>vfs_read (49,944 samples, 17.82%)</title><rect x="0.0029%" y="533" width="17.8242%" height="15" fill="rgb(236,202,9)" fg:x="8" fg:w="49944"/><text x="0.2529%" y="543.50">vfs_read</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (49,958 samples, 17.83%)</title><rect x="0.0021%" y="709" width="17.8292%" height="15" fill="rgb(250,229,37)" fg:x="6" fg:w="49958"/><text x="0.2521%" y="719.50">&lt;std::io::buffered::bufreade..</text></g><g><title>std::io::default_read_exact (49,958 samples, 17.83%)</title><rect x="0.0021%" y="693" width="17.8292%" height="15" fill="rgb(206,174,23)" fg:x="6" fg:w="49958"/><text x="0.2521%" y="703.50">std::io::default_read_exact</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (49,958 samples, 17.83%)</title><rect x="0.0021%" y="677" width="17.8292%" height="15" fill="rgb(211,33,43)" fg:x="6" fg:w="49958"/><text x="0.2521%" y="687.50">&lt;std::io::buffered::bufreade..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (49,958 samples, 17.83%)</title><rect x="0.0021%" y="661" width="17.8292%" height="15" fill="rgb(245,58,50)" fg:x="6" fg:w="49958"/><text x="0.2521%" y="671.50">&lt;std::fs::File as std::io::R..</text></g><g><title>std::sys::unix::fs::File::read (49,958 samples, 17.83%)</title><rect x="0.0021%" y="645" width="17.8292%" height="15" fill="rgb(244,68,36)" fg:x="6" fg:w="49958"/><text x="0.2521%" y="655.50">std::sys::unix::fs::File::re..</text></g><g><title>std::sys::unix::fd::FileDesc::read (49,958 samples, 17.83%)</title><rect x="0.0021%" y="629" width="17.8292%" height="15" fill="rgb(232,229,15)" fg:x="6" fg:w="49958"/><text x="0.2521%" y="639.50">std::sys::unix::fd::FileDesc..</text></g><g><title>__libc_read (49,958 samples, 17.83%)</title><rect x="0.0021%" y="613" width="17.8292%" height="15" fill="rgb(254,30,23)" fg:x="6" fg:w="49958"/><text x="0.2521%" y="623.50">__libc_read</text></g><g><title>alloc::vec::from_elem (33 samples, 0.01%)</title><rect x="17.8314%" y="709" width="0.0118%" height="15" fill="rgb(235,160,14)" fg:x="49964" fg:w="33"/><text x="18.0814%" y="719.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (33 samples, 0.01%)</title><rect x="17.8314%" y="693" width="0.0118%" height="15" fill="rgb(212,155,44)" fg:x="49964" fg:w="33"/><text x="18.0814%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (33 samples, 0.01%)</title><rect x="17.8314%" y="677" width="0.0118%" height="15" fill="rgb(226,2,50)" fg:x="49964" fg:w="33"/><text x="18.0814%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (33 samples, 0.01%)</title><rect x="17.8314%" y="661" width="0.0118%" height="15" fill="rgb(234,177,6)" fg:x="49964" fg:w="33"/><text x="18.0814%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (33 samples, 0.01%)</title><rect x="17.8314%" y="645" width="0.0118%" height="15" fill="rgb(217,24,9)" fg:x="49964" fg:w="33"/><text x="18.0814%" y="655.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (33 samples, 0.01%)</title><rect x="17.8314%" y="629" width="0.0118%" height="15" fill="rgb(220,13,46)" fg:x="49964" fg:w="33"/><text x="18.0814%" y="639.50"></text></g><g><title>alloc::alloc::alloc_zeroed (32 samples, 0.01%)</title><rect x="17.8317%" y="613" width="0.0114%" height="15" fill="rgb(239,221,27)" fg:x="49965" fg:w="32"/><text x="18.0817%" y="623.50"></text></g><g><title>__calloc (32 samples, 0.01%)</title><rect x="17.8317%" y="597" width="0.0114%" height="15" fill="rgb(222,198,25)" fg:x="49965" fg:w="32"/><text x="18.0817%" y="607.50"></text></g><g><title>_int_malloc (32 samples, 0.01%)</title><rect x="17.8317%" y="581" width="0.0114%" height="15" fill="rgb(211,99,13)" fg:x="49965" fg:w="32"/><text x="18.0817%" y="591.50"></text></g><g><title>sysmalloc (30 samples, 0.01%)</title><rect x="17.8324%" y="565" width="0.0107%" height="15" fill="rgb(232,111,31)" fg:x="49967" fg:w="30"/><text x="18.0824%" y="575.50"></text></g><g><title>std::panic::catch_unwind (50,004 samples, 17.85%)</title><rect x="0.0021%" y="821" width="17.8456%" height="15" fill="rgb(245,82,37)" fg:x="6" fg:w="50004"/><text x="0.2521%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (50,004 samples, 17.85%)</title><rect x="0.0021%" y="805" width="17.8456%" height="15" fill="rgb(227,149,46)" fg:x="6" fg:w="50004"/><text x="0.2521%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (50,004 samples, 17.85%)</title><rect x="0.0021%" y="789" width="17.8456%" height="15" fill="rgb(218,36,50)" fg:x="6" fg:w="50004"/><text x="0.2521%" y="799.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (50,004 samples, 17.85%)</title><rect x="0.0021%" y="773" width="17.8456%" height="15" fill="rgb(226,80,48)" fg:x="6" fg:w="50004"/><text x="0.2521%" y="783.50">&lt;core::panic::unwind_safe::A..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (50,004 samples, 17.85%)</title><rect x="0.0021%" y="757" width="17.8456%" height="15" fill="rgb(238,224,15)" fg:x="6" fg:w="50004"/><text x="0.2521%" y="767.50">std::thread::Builder::spawn_..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (50,004 samples, 17.85%)</title><rect x="0.0021%" y="741" width="17.8456%" height="15" fill="rgb(241,136,10)" fg:x="6" fg:w="50004"/><text x="0.2521%" y="751.50">std::sys_common::backtrace::..</text></g><g><title>hprof_slurp::prefetch_reader::PrefetchReader::start_reader::{{closure}} (50,004 samples, 17.85%)</title><rect x="0.0021%" y="725" width="17.8456%" height="15" fill="rgb(208,32,45)" fg:x="6" fg:w="50004"/><text x="0.2521%" y="735.50">hprof_slurp::prefetch_reader..</text></g><g><title>__GI___clone (50,005 samples, 17.85%)</title><rect x="0.0021%" y="933" width="17.8460%" height="15" fill="rgb(207,135,9)" fg:x="6" fg:w="50005"/><text x="0.2521%" y="943.50">__GI___clone</text></g><g><title>start_thread (50,005 samples, 17.85%)</title><rect x="0.0021%" y="917" width="17.8460%" height="15" fill="rgb(206,86,44)" fg:x="6" fg:w="50005"/><text x="0.2521%" y="927.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (50,005 samples, 17.85%)</title><rect x="0.0021%" y="901" width="17.8460%" height="15" fill="rgb(245,177,15)" fg:x="6" fg:w="50005"/><text x="0.2521%" y="911.50">std::sys::unix::thread::Thre..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50,005 samples, 17.85%)</title><rect x="0.0021%" y="885" width="17.8460%" height="15" fill="rgb(206,64,50)" fg:x="6" fg:w="50005"/><text x="0.2521%" y="895.50">&lt;alloc::boxed::Box&lt;F,A&gt; as c..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50,005 samples, 17.85%)</title><rect x="0.0021%" y="869" width="17.8460%" height="15" fill="rgb(234,36,40)" fg:x="6" fg:w="50005"/><text x="0.2521%" y="879.50">&lt;alloc::boxed::Box&lt;F,A&gt; as c..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (50,005 samples, 17.85%)</title><rect x="0.0021%" y="853" width="17.8460%" height="15" fill="rgb(213,64,8)" fg:x="6" fg:w="50005"/><text x="0.2521%" y="863.50">core::ops::function::FnOnce:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (50,005 samples, 17.85%)</title><rect x="0.0021%" y="837" width="17.8460%" height="15" fill="rgb(210,75,36)" fg:x="6" fg:w="50005"/><text x="0.2521%" y="847.50">std::thread::Builder::spawn_..</text></g><g><title>do_user_addr_fault (30 samples, 0.01%)</title><rect x="17.8628%" y="741" width="0.0107%" height="15" fill="rgb(229,88,21)" fg:x="50052" fg:w="30"/><text x="18.1128%" y="751.50"></text></g><g><title>copy_user_enhanced_fast_string (50 samples, 0.02%)</title><rect x="17.8560%" y="789" width="0.0178%" height="15" fill="rgb(252,204,47)" fg:x="50033" fg:w="50"/><text x="18.1060%" y="799.50"></text></g><g><title>asm_exc_page_fault (31 samples, 0.01%)</title><rect x="17.8628%" y="773" width="0.0111%" height="15" fill="rgb(208,77,27)" fg:x="50052" fg:w="31"/><text x="18.1128%" y="783.50"></text></g><g><title>exc_page_fault (31 samples, 0.01%)</title><rect x="17.8628%" y="757" width="0.0111%" height="15" fill="rgb(221,76,26)" fg:x="50052" fg:w="31"/><text x="18.1128%" y="767.50"></text></g><g><title>filemap_get_pages (33 samples, 0.01%)</title><rect x="17.8738%" y="789" width="0.0118%" height="15" fill="rgb(225,139,18)" fg:x="50083" fg:w="33"/><text x="18.1238%" y="799.50"></text></g><g><title>hprof-prefetch (50,118 samples, 17.89%)</title><rect x="0.0000%" y="949" width="17.8863%" height="15" fill="rgb(230,137,11)" fg:x="0" fg:w="50118"/><text x="0.2500%" y="959.50">hprof-prefetch</text></g><g><title>entry_SYSCALL_64_after_hwframe (106 samples, 0.04%)</title><rect x="17.8485%" y="933" width="0.0378%" height="15" fill="rgb(212,28,1)" fg:x="50012" fg:w="106"/><text x="18.0985%" y="943.50"></text></g><g><title>do_syscall_64 (106 samples, 0.04%)</title><rect x="17.8485%" y="917" width="0.0378%" height="15" fill="rgb(248,164,17)" fg:x="50012" fg:w="106"/><text x="18.0985%" y="927.50"></text></g><g><title>__x64_sys_read (104 samples, 0.04%)</title><rect x="17.8492%" y="901" width="0.0371%" height="15" fill="rgb(222,171,42)" fg:x="50014" fg:w="104"/><text x="18.0992%" y="911.50"></text></g><g><title>ksys_read (104 samples, 0.04%)</title><rect x="17.8492%" y="885" width="0.0371%" height="15" fill="rgb(243,84,45)" fg:x="50014" fg:w="104"/><text x="18.0992%" y="895.50"></text></g><g><title>vfs_read (104 samples, 0.04%)</title><rect x="17.8492%" y="869" width="0.0371%" height="15" fill="rgb(252,49,23)" fg:x="50014" fg:w="104"/><text x="18.0992%" y="879.50"></text></g><g><title>new_sync_read (104 samples, 0.04%)</title><rect x="17.8492%" y="853" width="0.0371%" height="15" fill="rgb(215,19,7)" fg:x="50014" fg:w="104"/><text x="18.0992%" y="863.50"></text></g><g><title>ext4_file_read_iter (104 samples, 0.04%)</title><rect x="17.8492%" y="837" width="0.0371%" height="15" fill="rgb(238,81,41)" fg:x="50014" fg:w="104"/><text x="18.0992%" y="847.50"></text></g><g><title>generic_file_read_iter (104 samples, 0.04%)</title><rect x="17.8492%" y="821" width="0.0371%" height="15" fill="rgb(210,199,37)" fg:x="50014" fg:w="104"/><text x="18.0992%" y="831.50"></text></g><g><title>filemap_read (104 samples, 0.04%)</title><rect x="17.8492%" y="805" width="0.0371%" height="15" fill="rgb(244,192,49)" fg:x="50014" fg:w="104"/><text x="18.0992%" y="815.50"></text></g><g><title>__memcpy_avx_unaligned_erms (40 samples, 0.01%)</title><rect x="17.9034%" y="917" width="0.0143%" height="15" fill="rgb(226,211,11)" fg:x="50166" fg:w="40"/><text x="18.1534%" y="927.50"></text></g><g><title>_int_free (35 samples, 0.01%)</title><rect x="17.9177%" y="917" width="0.0125%" height="15" fill="rgb(236,162,54)" fg:x="50206" fg:w="35"/><text x="18.1677%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::GcRecord&gt; (336 samples, 0.12%)</title><rect x="17.9302%" y="917" width="0.1199%" height="15" fill="rgb(220,229,9)" fg:x="50241" fg:w="336"/><text x="18.1802%" y="927.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,029 samples, 0.37%)</title><rect x="18.0501%" y="917" width="0.3672%" height="15" fill="rgb(250,87,22)" fg:x="50577" fg:w="1029"/><text x="18.3001%" y="927.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start_recorder::{{closure}} (1,029 samples, 0.37%)</title><rect x="18.0501%" y="901" width="0.3672%" height="15" fill="rgb(239,43,17)" fg:x="50577" fg:w="1029"/><text x="18.3001%" y="911.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (1,029 samples, 0.37%)</title><rect x="18.0501%" y="885" width="0.3672%" height="15" fill="rgb(231,177,25)" fg:x="50577" fg:w="1029"/><text x="18.3001%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,029 samples, 0.37%)</title><rect x="18.0501%" y="869" width="0.3672%" height="15" fill="rgb(219,179,1)" fg:x="50577" fg:w="1029"/><text x="18.3001%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,029 samples, 0.37%)</title><rect x="18.0501%" y="853" width="0.3672%" height="15" fill="rgb(238,219,53)" fg:x="50577" fg:w="1029"/><text x="18.3001%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,029 samples, 0.37%)</title><rect x="18.0501%" y="837" width="0.3672%" height="15" fill="rgb(232,167,36)" fg:x="50577" fg:w="1029"/><text x="18.3001%" y="847.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (335 samples, 0.12%)</title><rect x="18.2978%" y="821" width="0.1196%" height="15" fill="rgb(244,19,51)" fg:x="51271" fg:w="335"/><text x="18.5478%" y="831.50"></text></g><g><title>[unknown] (1,466 samples, 0.52%)</title><rect x="17.8949%" y="933" width="0.5232%" height="15" fill="rgb(224,6,22)" fg:x="50142" fg:w="1466"/><text x="18.1449%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder::start_recorder::{{closure}}&gt; (29 samples, 0.01%)</title><rect x="18.4216%" y="709" width="0.0103%" height="15" fill="rgb(224,145,5)" fg:x="51618" fg:w="29"/><text x="18.6716%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder&gt; (29 samples, 0.01%)</title><rect x="18.4216%" y="693" width="0.0103%" height="15" fill="rgb(234,130,49)" fg:x="51618" fg:w="29"/><text x="18.6716%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;ahash::hash_map::AHashMap&lt;u64,alloc::string::String&gt;&gt; (29 samples, 0.01%)</title><rect x="18.4216%" y="677" width="0.0103%" height="15" fill="rgb(254,6,2)" fg:x="51618" fg:w="29"/><text x="18.6716%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (29 samples, 0.01%)</title><rect x="18.4216%" y="661" width="0.0103%" height="15" fill="rgb(208,96,46)" fg:x="51618" fg:w="29"/><text x="18.6716%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (29 samples, 0.01%)</title><rect x="18.4216%" y="645" width="0.0103%" height="15" fill="rgb(239,3,39)" fg:x="51618" fg:w="29"/><text x="18.6716%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (29 samples, 0.01%)</title><rect x="18.4216%" y="629" width="0.0103%" height="15" fill="rgb(233,210,1)" fg:x="51618" fg:w="29"/><text x="18.6716%" y="639.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,368 samples, 0.49%)</title><rect x="18.4352%" y="661" width="0.4882%" height="15" fill="rgb(244,137,37)" fg:x="51656" fg:w="1368"/><text x="18.6852%" y="671.50"></text></g><g><title>core::ptr::read (1,363 samples, 0.49%)</title><rect x="18.4370%" y="645" width="0.4864%" height="15" fill="rgb(240,136,2)" fg:x="51661" fg:w="1363"/><text x="18.6870%" y="655.50"></text></g><g><title>__sysvec_apic_timer_interrupt (32 samples, 0.01%)</title><rect x="25.1621%" y="597" width="0.0114%" height="15" fill="rgb(239,18,37)" fg:x="70505" fg:w="32"/><text x="25.4121%" y="607.50"></text></g><g><title>hrtimer_interrupt (31 samples, 0.01%)</title><rect x="25.1625%" y="581" width="0.0111%" height="15" fill="rgb(218,185,22)" fg:x="70506" fg:w="31"/><text x="25.4125%" y="591.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (40 samples, 0.01%)</title><rect x="25.1621%" y="629" width="0.0143%" height="15" fill="rgb(225,218,4)" fg:x="70505" fg:w="40"/><text x="25.4121%" y="639.50"></text></g><g><title>sysvec_apic_timer_interrupt (40 samples, 0.01%)</title><rect x="25.1621%" y="613" width="0.0143%" height="15" fill="rgb(230,182,32)" fg:x="70505" fg:w="40"/><text x="25.4121%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17,012 samples, 6.07%)</title><rect x="19.1108%" y="645" width="6.0713%" height="15" fill="rgb(242,56,43)" fg:x="53549" fg:w="17012"/><text x="19.3608%" y="655.50">__memcpy..</text></g><g><title>__GI___munmap (38 samples, 0.01%)</title><rect x="28.0283%" y="613" width="0.0136%" height="15" fill="rgb(233,99,24)" fg:x="78536" fg:w="38"/><text x="28.2783%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (38 samples, 0.01%)</title><rect x="28.0283%" y="597" width="0.0136%" height="15" fill="rgb(234,209,42)" fg:x="78536" fg:w="38"/><text x="28.2783%" y="607.50"></text></g><g><title>do_syscall_64 (38 samples, 0.01%)</title><rect x="28.0283%" y="581" width="0.0136%" height="15" fill="rgb(227,7,12)" fg:x="78536" fg:w="38"/><text x="28.2783%" y="591.50"></text></g><g><title>__x64_sys_munmap (38 samples, 0.01%)</title><rect x="28.0283%" y="565" width="0.0136%" height="15" fill="rgb(245,203,43)" fg:x="78536" fg:w="38"/><text x="28.2783%" y="575.50"></text></g><g><title>__vm_munmap (38 samples, 0.01%)</title><rect x="28.0283%" y="549" width="0.0136%" height="15" fill="rgb(238,205,33)" fg:x="78536" fg:w="38"/><text x="28.2783%" y="559.50"></text></g><g><title>__do_munmap (38 samples, 0.01%)</title><rect x="28.0283%" y="533" width="0.0136%" height="15" fill="rgb(231,56,7)" fg:x="78536" fg:w="38"/><text x="28.2783%" y="543.50"></text></g><g><title>unmap_region (38 samples, 0.01%)</title><rect x="28.0283%" y="517" width="0.0136%" height="15" fill="rgb(244,186,29)" fg:x="78536" fg:w="38"/><text x="28.2783%" y="527.50"></text></g><g><title>unmap_vmas (36 samples, 0.01%)</title><rect x="28.0290%" y="501" width="0.0128%" height="15" fill="rgb(234,111,31)" fg:x="78538" fg:w="36"/><text x="28.2790%" y="511.50"></text></g><g><title>unmap_single_vma (36 samples, 0.01%)</title><rect x="28.0290%" y="485" width="0.0128%" height="15" fill="rgb(241,149,10)" fg:x="78538" fg:w="36"/><text x="28.2790%" y="495.50"></text></g><g><title>unmap_page_range (36 samples, 0.01%)</title><rect x="28.0290%" y="469" width="0.0128%" height="15" fill="rgb(249,206,44)" fg:x="78538" fg:w="36"/><text x="28.2790%" y="479.50"></text></g><g><title>zap_pmd_range.isra.0 (36 samples, 0.01%)</title><rect x="28.0290%" y="453" width="0.0128%" height="15" fill="rgb(251,153,30)" fg:x="78538" fg:w="36"/><text x="28.2790%" y="463.50"></text></g><g><title>zap_pte_range (36 samples, 0.01%)</title><rect x="28.0290%" y="437" width="0.0128%" height="15" fill="rgb(239,152,38)" fg:x="78538" fg:w="36"/><text x="28.2790%" y="447.50"></text></g><g><title>futex_wait_queue_me (63 samples, 0.02%)</title><rect x="28.6885%" y="501" width="0.0225%" height="15" fill="rgb(249,139,47)" fg:x="80386" fg:w="63"/><text x="28.9385%" y="511.50"></text></g><g><title>schedule (63 samples, 0.02%)</title><rect x="28.6885%" y="485" width="0.0225%" height="15" fill="rgb(244,64,35)" fg:x="80386" fg:w="63"/><text x="28.9385%" y="495.50"></text></g><g><title>__schedule (58 samples, 0.02%)</title><rect x="28.6903%" y="469" width="0.0207%" height="15" fill="rgb(216,46,15)" fg:x="80391" fg:w="58"/><text x="28.9403%" y="479.50"></text></g><g><title>__x64_sys_futex (82 samples, 0.03%)</title><rect x="28.6849%" y="549" width="0.0293%" height="15" fill="rgb(250,74,19)" fg:x="80376" fg:w="82"/><text x="28.9349%" y="559.50"></text></g><g><title>do_futex (80 samples, 0.03%)</title><rect x="28.6856%" y="533" width="0.0286%" height="15" fill="rgb(249,42,33)" fg:x="80378" fg:w="80"/><text x="28.9356%" y="543.50"></text></g><g><title>futex_wait (79 samples, 0.03%)</title><rect x="28.6860%" y="517" width="0.0282%" height="15" fill="rgb(242,149,17)" fg:x="80379" fg:w="79"/><text x="28.9360%" y="527.50"></text></g><g><title>do_syscall_64 (96 samples, 0.03%)</title><rect x="28.6838%" y="565" width="0.0343%" height="15" fill="rgb(244,29,21)" fg:x="80373" fg:w="96"/><text x="28.9338%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (98 samples, 0.03%)</title><rect x="28.6838%" y="581" width="0.0350%" height="15" fill="rgb(220,130,37)" fg:x="80373" fg:w="98"/><text x="28.9338%" y="591.50"></text></g><g><title>__GI___lll_lock_wait_private (118 samples, 0.04%)</title><rect x="28.6771%" y="597" width="0.0421%" height="15" fill="rgb(211,67,2)" fg:x="80354" fg:w="118"/><text x="28.9271%" y="607.50"></text></g><g><title>malloc_consolidate (215 samples, 0.08%)</title><rect x="28.7199%" y="597" width="0.0767%" height="15" fill="rgb(235,68,52)" fg:x="80474" fg:w="215"/><text x="28.9699%" y="607.50"></text></g><g><title>unlink_chunk.constprop.0 (52 samples, 0.02%)</title><rect x="28.7781%" y="581" width="0.0186%" height="15" fill="rgb(246,142,3)" fg:x="80637" fg:w="52"/><text x="29.0281%" y="591.50"></text></g><g><title>_int_free (2,204 samples, 0.79%)</title><rect x="28.0418%" y="613" width="0.7866%" height="15" fill="rgb(241,25,7)" fg:x="78574" fg:w="2204"/><text x="28.2918%" y="623.50"></text></g><g><title>unlink_chunk.constprop.0 (89 samples, 0.03%)</title><rect x="28.7966%" y="597" width="0.0318%" height="15" fill="rgb(242,119,39)" fg:x="80689" fg:w="89"/><text x="29.0466%" y="607.50"></text></g><g><title>__free (3,733 samples, 1.33%)</title><rect x="27.4979%" y="629" width="1.3322%" height="15" fill="rgb(241,98,45)" fg:x="77050" fg:w="3733"/><text x="27.7479%" y="639.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (30 samples, 0.01%)</title><rect x="28.8452%" y="629" width="0.0107%" height="15" fill="rgb(254,28,30)" fg:x="80825" fg:w="30"/><text x="29.0952%" y="639.50"></text></g><g><title>sysvec_apic_timer_interrupt (29 samples, 0.01%)</title><rect x="28.8455%" y="613" width="0.0103%" height="15" fill="rgb(241,142,54)" fg:x="80826" fg:w="29"/><text x="29.0955%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::GcRecord&gt; (389 samples, 0.14%)</title><rect x="28.8566%" y="629" width="0.1388%" height="15" fill="rgb(222,85,15)" fg:x="80857" fg:w="389"/><text x="29.1066%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::ArrayValue&gt; (52 samples, 0.02%)</title><rect x="28.9768%" y="613" width="0.0186%" height="15" fill="rgb(210,85,47)" fg:x="81194" fg:w="52"/><text x="29.2268%" y="623.50"></text></g><g><title>hprof_slurp::result_recorder::ArrayCounter::add_elements_from_array (86 samples, 0.03%)</title><rect x="28.9954%" y="629" width="0.0307%" height="15" fill="rgb(224,206,25)" fg:x="81246" fg:w="86"/><text x="29.2454%" y="639.50"></text></g><g><title>hprof_slurp::result_recorder::ClassInstanceCounter::add_instance (2,819 samples, 1.01%)</title><rect x="29.0261%" y="629" width="1.0061%" height="15" fill="rgb(243,201,19)" fg:x="81332" fg:w="2819"/><text x="29.2761%" y="639.50"></text></g><g><title>ahash::operations::folded_multiply (939 samples, 0.34%)</title><rect x="30.0329%" y="565" width="0.3351%" height="15" fill="rgb(236,59,4)" fg:x="84153" fg:w="939"/><text x="30.2829%" y="575.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (701 samples, 0.25%)</title><rect x="30.1178%" y="549" width="0.2502%" height="15" fill="rgb(254,179,45)" fg:x="84391" fg:w="701"/><text x="30.3678%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1,455 samples, 0.52%)</title><rect x="30.0329%" y="581" width="0.5193%" height="15" fill="rgb(226,14,10)" fg:x="84153" fg:w="1455"/><text x="30.2829%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (516 samples, 0.18%)</title><rect x="30.3680%" y="565" width="0.1842%" height="15" fill="rgb(244,27,41)" fg:x="85092" fg:w="516"/><text x="30.6180%" y="575.50"></text></g><g><title>ahash::operations::folded_multiply (42 samples, 0.01%)</title><rect x="30.5532%" y="485" width="0.0150%" height="15" fill="rgb(235,35,32)" fg:x="85611" fg:w="42"/><text x="30.8032%" y="495.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (40 samples, 0.01%)</title><rect x="30.5539%" y="469" width="0.0143%" height="15" fill="rgb(218,68,31)" fg:x="85613" fg:w="40"/><text x="30.8039%" y="479.50"></text></g><g><title>&lt;hprof_slurp::gc_record::FieldType as core::hash::Hash&gt;::hash (46 samples, 0.02%)</title><rect x="30.5521%" y="581" width="0.0164%" height="15" fill="rgb(207,120,37)" fg:x="85608" fg:w="46"/><text x="30.8021%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (46 samples, 0.02%)</title><rect x="30.5521%" y="565" width="0.0164%" height="15" fill="rgb(227,98,0)" fg:x="85608" fg:w="46"/><text x="30.8021%" y="575.50"></text></g><g><title>core::hash::Hasher::write_isize (46 samples, 0.02%)</title><rect x="30.5521%" y="549" width="0.0164%" height="15" fill="rgb(207,7,3)" fg:x="85608" fg:w="46"/><text x="30.8021%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (46 samples, 0.02%)</title><rect x="30.5521%" y="533" width="0.0164%" height="15" fill="rgb(206,98,19)" fg:x="85608" fg:w="46"/><text x="30.8021%" y="543.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (46 samples, 0.02%)</title><rect x="30.5521%" y="517" width="0.0164%" height="15" fill="rgb(217,5,26)" fg:x="85608" fg:w="46"/><text x="30.8021%" y="527.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (46 samples, 0.02%)</title><rect x="30.5521%" y="501" width="0.0164%" height="15" fill="rgb(235,190,38)" fg:x="85608" fg:w="46"/><text x="30.8021%" y="511.50"></text></g><g><title>ahash::operations::folded_multiply (658 samples, 0.23%)</title><rect x="30.5878%" y="533" width="0.2348%" height="15" fill="rgb(247,86,24)" fg:x="85708" fg:w="658"/><text x="30.8378%" y="543.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (635 samples, 0.23%)</title><rect x="30.5960%" y="517" width="0.2266%" height="15" fill="rgb(205,101,16)" fg:x="85731" fg:w="635"/><text x="30.8460%" y="527.50"></text></g><g><title>hashbrown::map::make_insert_hash (2,214 samples, 0.79%)</title><rect x="30.0329%" y="597" width="0.7901%" height="15" fill="rgb(246,168,33)" fg:x="84153" fg:w="2214"/><text x="30.2829%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (713 samples, 0.25%)</title><rect x="30.5686%" y="581" width="0.2545%" height="15" fill="rgb(231,114,1)" fg:x="85654" fg:w="713"/><text x="30.8186%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (713 samples, 0.25%)</title><rect x="30.5686%" y="565" width="0.2545%" height="15" fill="rgb(207,184,53)" fg:x="85654" fg:w="713"/><text x="30.8186%" y="575.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (713 samples, 0.25%)</title><rect x="30.5686%" y="549" width="0.2545%" height="15" fill="rgb(224,95,51)" fg:x="85654" fg:w="713"/><text x="30.8186%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,374 samples, 0.49%)</title><rect x="33.0857%" y="533" width="0.4904%" height="15" fill="rgb(212,188,45)" fg:x="92707" fg:w="1374"/><text x="33.3357%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,446 samples, 0.52%)</title><rect x="33.0817%" y="549" width="0.5161%" height="15" fill="rgb(223,154,38)" fg:x="92696" fg:w="1446"/><text x="33.3317%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (61 samples, 0.02%)</title><rect x="33.5760%" y="533" width="0.0218%" height="15" fill="rgb(251,22,52)" fg:x="94081" fg:w="61"/><text x="33.8260%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,062 samples, 0.74%)</title><rect x="32.9879%" y="581" width="0.7359%" height="15" fill="rgb(229,209,22)" fg:x="92433" fg:w="2062"/><text x="33.2379%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,062 samples, 0.74%)</title><rect x="32.9879%" y="565" width="0.7359%" height="15" fill="rgb(234,138,34)" fg:x="92433" fg:w="2062"/><text x="33.2379%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (314 samples, 0.11%)</title><rect x="33.6117%" y="549" width="0.1121%" height="15" fill="rgb(212,95,11)" fg:x="94181" fg:w="314"/><text x="33.8617%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (314 samples, 0.11%)</title><rect x="33.6117%" y="533" width="0.1121%" height="15" fill="rgb(240,179,47)" fg:x="94181" fg:w="314"/><text x="33.8617%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (314 samples, 0.11%)</title><rect x="33.6117%" y="517" width="0.1121%" height="15" fill="rgb(240,163,11)" fg:x="94181" fg:w="314"/><text x="33.8617%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (459 samples, 0.16%)</title><rect x="33.7634%" y="533" width="0.1638%" height="15" fill="rgb(236,37,12)" fg:x="94606" fg:w="459"/><text x="34.0134%" y="543.50"></text></g><g><title>hashbrown::raw::h2 (571 samples, 0.20%)</title><rect x="33.9272%" y="533" width="0.2038%" height="15" fill="rgb(232,164,16)" fg:x="95065" fg:w="571"/><text x="34.1772%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1,134 samples, 0.40%)</title><rect x="34.1310%" y="533" width="0.4047%" height="15" fill="rgb(244,205,15)" fg:x="95636" fg:w="1134"/><text x="34.3810%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,134 samples, 0.40%)</title><rect x="34.1310%" y="517" width="0.4047%" height="15" fill="rgb(223,117,47)" fg:x="95636" fg:w="1134"/><text x="34.3810%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,134 samples, 0.40%)</title><rect x="34.1310%" y="501" width="0.4047%" height="15" fill="rgb(244,107,35)" fg:x="95636" fg:w="1134"/><text x="34.3810%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2,899 samples, 1.03%)</title><rect x="33.7266%" y="581" width="1.0346%" height="15" fill="rgb(205,140,8)" fg:x="94503" fg:w="2899"/><text x="33.9766%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2,899 samples, 1.03%)</title><rect x="33.7266%" y="565" width="1.0346%" height="15" fill="rgb(228,84,46)" fg:x="94503" fg:w="2899"/><text x="33.9766%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2,899 samples, 1.03%)</title><rect x="33.7266%" y="549" width="1.0346%" height="15" fill="rgb(254,188,9)" fg:x="94503" fg:w="2899"/><text x="33.9766%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (632 samples, 0.23%)</title><rect x="34.5357%" y="533" width="0.2256%" height="15" fill="rgb(206,112,54)" fg:x="96770" fg:w="632"/><text x="34.7857%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (632 samples, 0.23%)</title><rect x="34.5357%" y="517" width="0.2256%" height="15" fill="rgb(216,84,49)" fg:x="96770" fg:w="632"/><text x="34.7857%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (632 samples, 0.23%)</title><rect x="34.5357%" y="501" width="0.2256%" height="15" fill="rgb(214,194,35)" fg:x="96770" fg:w="632"/><text x="34.7857%" y="511.50"></text></g><g><title>core::core_arch::simd::i8x16::new (632 samples, 0.23%)</title><rect x="34.5357%" y="485" width="0.2256%" height="15" fill="rgb(249,28,3)" fg:x="96770" fg:w="632"/><text x="34.7857%" y="495.50"></text></g><g><title>&lt;hprof_slurp::gc_record::FieldType as core::cmp::PartialEq&gt;::eq (69 samples, 0.02%)</title><rect x="34.7612%" y="565" width="0.0246%" height="15" fill="rgb(222,56,52)" fg:x="97402" fg:w="69"/><text x="35.0112%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (13,366 samples, 4.77%)</title><rect x="30.0325%" y="629" width="4.7701%" height="15" fill="rgb(245,217,50)" fg:x="84152" fg:w="13366"/><text x="30.2825%" y="639.50">std::c..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (13,366 samples, 4.77%)</title><rect x="30.0325%" y="613" width="4.7701%" height="15" fill="rgb(213,201,24)" fg:x="84152" fg:w="13366"/><text x="30.2825%" y="623.50">hashbr..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11,151 samples, 3.98%)</title><rect x="30.8230%" y="597" width="3.9796%" height="15" fill="rgb(248,116,28)" fg:x="86367" fg:w="11151"/><text x="31.0730%" y="607.50">hash..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (116 samples, 0.04%)</title><rect x="34.7612%" y="581" width="0.0414%" height="15" fill="rgb(219,72,43)" fg:x="97402" fg:w="116"/><text x="35.0112%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (47 samples, 0.02%)</title><rect x="34.7859%" y="565" width="0.0168%" height="15" fill="rgb(209,138,14)" fg:x="97471" fg:w="47"/><text x="35.0359%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (44,493 samples, 15.88%)</title><rect x="18.9245%" y="661" width="15.8788%" height="15" fill="rgb(222,18,33)" fg:x="53027" fg:w="44493"/><text x="19.1745%" y="671.50">core::iter::traits::iter..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (26,953 samples, 9.62%)</title><rect x="25.1842%" y="645" width="9.6191%" height="15" fill="rgb(213,199,7)" fg:x="70567" fg:w="26953"/><text x="25.4342%" y="655.50">hprof_slurp::r..</text></g><g><title>__free_one_page (70 samples, 0.02%)</title><rect x="34.8612%" y="309" width="0.0250%" height="15" fill="rgb(250,110,10)" fg:x="97682" fg:w="70"/><text x="35.1112%" y="319.50"></text></g><g><title>free_unref_page_list (127 samples, 0.05%)</title><rect x="34.8419%" y="357" width="0.0453%" height="15" fill="rgb(248,123,6)" fg:x="97628" fg:w="127"/><text x="35.0919%" y="367.50"></text></g><g><title>free_unref_page_commit (106 samples, 0.04%)</title><rect x="34.8494%" y="341" width="0.0378%" height="15" fill="rgb(206,91,31)" fg:x="97649" fg:w="106"/><text x="35.0994%" y="351.50"></text></g><g><title>free_pcppages_bulk (95 samples, 0.03%)</title><rect x="34.8533%" y="325" width="0.0339%" height="15" fill="rgb(211,154,13)" fg:x="97660" fg:w="95"/><text x="35.1033%" y="335.50"></text></g><g><title>tlb_finish_mmu (231 samples, 0.08%)</title><rect x="34.8130%" y="405" width="0.0824%" height="15" fill="rgb(225,148,7)" fg:x="97547" fg:w="231"/><text x="35.0630%" y="415.50"></text></g><g><title>free_pages_and_swap_cache (230 samples, 0.08%)</title><rect x="34.8133%" y="389" width="0.0821%" height="15" fill="rgb(220,160,43)" fg:x="97548" fg:w="230"/><text x="35.0633%" y="399.50"></text></g><g><title>release_pages (207 samples, 0.07%)</title><rect x="34.8215%" y="373" width="0.0739%" height="15" fill="rgb(213,52,39)" fg:x="97571" fg:w="207"/><text x="35.0715%" y="383.50"></text></g><g><title>vm_normal_page (40 samples, 0.01%)</title><rect x="34.9175%" y="341" width="0.0143%" height="15" fill="rgb(243,137,7)" fg:x="97840" fg:w="40"/><text x="35.1675%" y="351.50"></text></g><g><title>__mod_lruvec_page_state (51 samples, 0.02%)</title><rect x="36.4743%" y="325" width="0.0182%" height="15" fill="rgb(230,79,13)" fg:x="102202" fg:w="51"/><text x="36.7243%" y="335.50"></text></g><g><title>__tlb_remove_page_size (91 samples, 0.03%)</title><rect x="36.4925%" y="325" width="0.0325%" height="15" fill="rgb(247,105,23)" fg:x="102253" fg:w="91"/><text x="36.7425%" y="335.50"></text></g><g><title>lock_page_memcg (44 samples, 0.02%)</title><rect x="36.5324%" y="325" width="0.0157%" height="15" fill="rgb(223,179,41)" fg:x="102365" fg:w="44"/><text x="36.7824%" y="335.50"></text></g><g><title>__mod_memcg_state.part.0 (89 samples, 0.03%)</title><rect x="36.9682%" y="261" width="0.0318%" height="15" fill="rgb(218,9,34)" fg:x="103586" fg:w="89"/><text x="37.2182%" y="271.50"></text></g><g><title>cgroup_rstat_updated (62 samples, 0.02%)</title><rect x="36.9778%" y="245" width="0.0221%" height="15" fill="rgb(222,106,8)" fg:x="103613" fg:w="62"/><text x="37.2278%" y="255.50"></text></g><g><title>__mod_memcg_lruvec_state (396 samples, 0.14%)</title><rect x="36.8683%" y="277" width="0.1413%" height="15" fill="rgb(211,220,0)" fg:x="103306" fg:w="396"/><text x="37.1183%" y="287.50"></text></g><g><title>__mod_memcg_state.part.0 (54 samples, 0.02%)</title><rect x="37.0096%" y="277" width="0.0193%" height="15" fill="rgb(229,52,16)" fg:x="103702" fg:w="54"/><text x="37.2596%" y="287.50"></text></g><g><title>__mod_node_page_state (81 samples, 0.03%)</title><rect x="37.0289%" y="277" width="0.0289%" height="15" fill="rgb(212,155,18)" fg:x="103756" fg:w="81"/><text x="37.2789%" y="287.50"></text></g><g><title>__mod_lruvec_state (651 samples, 0.23%)</title><rect x="36.8258%" y="293" width="0.2323%" height="15" fill="rgb(242,21,14)" fg:x="103187" fg:w="651"/><text x="37.0758%" y="303.50"></text></g><g><title>__mod_node_page_state (52 samples, 0.02%)</title><rect x="37.0649%" y="293" width="0.0186%" height="15" fill="rgb(222,19,48)" fg:x="103857" fg:w="52"/><text x="37.3149%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (846 samples, 0.30%)</title><rect x="36.7855%" y="309" width="0.3019%" height="15" fill="rgb(232,45,27)" fg:x="103074" fg:w="846"/><text x="37.0355%" y="319.50"></text></g><g><title>lock_page_memcg (121 samples, 0.04%)</title><rect x="37.0938%" y="309" width="0.0432%" height="15" fill="rgb(249,103,42)" fg:x="103938" fg:w="121"/><text x="37.3438%" y="319.50"></text></g><g><title>rcu_read_unlock_strict (39 samples, 0.01%)</title><rect x="37.1370%" y="309" width="0.0139%" height="15" fill="rgb(246,81,33)" fg:x="104059" fg:w="39"/><text x="37.3870%" y="319.50"></text></g><g><title>page_remove_rmap (1,754 samples, 0.63%)</title><rect x="36.5481%" y="325" width="0.6260%" height="15" fill="rgb(252,33,42)" fg:x="102409" fg:w="1754"/><text x="36.7981%" y="335.50"></text></g><g><title>unlock_page_memcg (65 samples, 0.02%)</title><rect x="37.1509%" y="309" width="0.0232%" height="15" fill="rgb(209,212,41)" fg:x="104098" fg:w="65"/><text x="37.4009%" y="319.50"></text></g><g><title>__mod_lruvec_state (49 samples, 0.02%)</title><rect x="37.4314%" y="293" width="0.0175%" height="15" fill="rgb(207,154,6)" fg:x="104884" fg:w="49"/><text x="37.6814%" y="303.50"></text></g><g><title>__mod_zone_page_state (83 samples, 0.03%)</title><rect x="37.4489%" y="293" width="0.0296%" height="15" fill="rgb(223,64,47)" fg:x="104933" fg:w="83"/><text x="37.6989%" y="303.50"></text></g><g><title>__mod_memcg_state.part.0 (73 samples, 0.03%)</title><rect x="38.0032%" y="245" width="0.0261%" height="15" fill="rgb(211,161,38)" fg:x="106486" fg:w="73"/><text x="38.2532%" y="255.50"></text></g><g><title>cgroup_rstat_updated (53 samples, 0.02%)</title><rect x="38.0103%" y="229" width="0.0189%" height="15" fill="rgb(219,138,40)" fg:x="106506" fg:w="53"/><text x="38.2603%" y="239.50"></text></g><g><title>__mod_memcg_lruvec_state (359 samples, 0.13%)</title><rect x="37.9057%" y="261" width="0.1281%" height="15" fill="rgb(241,228,46)" fg:x="106213" fg:w="359"/><text x="38.1557%" y="271.50"></text></g><g><title>__mod_memcg_state.part.0 (56 samples, 0.02%)</title><rect x="38.0339%" y="261" width="0.0200%" height="15" fill="rgb(223,209,38)" fg:x="106572" fg:w="56"/><text x="38.2839%" y="271.50"></text></g><g><title>__mod_lruvec_state (597 samples, 0.21%)</title><rect x="37.8754%" y="277" width="0.2131%" height="15" fill="rgb(236,164,45)" fg:x="106128" fg:w="597"/><text x="38.1254%" y="287.50"></text></g><g><title>__mod_node_page_state (97 samples, 0.03%)</title><rect x="38.0538%" y="261" width="0.0346%" height="15" fill="rgb(231,15,5)" fg:x="106628" fg:w="97"/><text x="38.3038%" y="271.50"></text></g><g><title>__mod_node_page_state (68 samples, 0.02%)</title><rect x="38.0935%" y="277" width="0.0243%" height="15" fill="rgb(252,35,15)" fg:x="106739" fg:w="68"/><text x="38.3435%" y="287.50"></text></g><g><title>__mod_zone_page_state (91 samples, 0.03%)</title><rect x="38.1177%" y="277" width="0.0325%" height="15" fill="rgb(248,181,18)" fg:x="106807" fg:w="91"/><text x="38.3677%" y="287.50"></text></g><g><title>free_pcp_prepare (31 samples, 0.01%)</title><rect x="38.1502%" y="277" width="0.0111%" height="15" fill="rgb(233,39,42)" fg:x="106898" fg:w="31"/><text x="38.4002%" y="287.50"></text></g><g><title>free_unref_page_commit (36 samples, 0.01%)</title><rect x="38.1613%" y="277" width="0.0128%" height="15" fill="rgb(238,110,33)" fg:x="106929" fg:w="36"/><text x="38.4113%" y="287.50"></text></g><g><title>free_pcp_prepare (111 samples, 0.04%)</title><rect x="38.3179%" y="261" width="0.0396%" height="15" fill="rgb(233,195,10)" fg:x="107368" fg:w="111"/><text x="38.5679%" y="271.50"></text></g><g><title>__free_one_page (2,018 samples, 0.72%)</title><rect x="38.7605%" y="229" width="0.7202%" height="15" fill="rgb(254,105,3)" fg:x="108608" fg:w="2018"/><text x="39.0105%" y="239.50"></text></g><g><title>__mod_zone_page_state (54 samples, 0.02%)</title><rect x="39.4614%" y="213" width="0.0193%" height="15" fill="rgb(221,225,9)" fg:x="110572" fg:w="54"/><text x="39.7114%" y="223.50"></text></g><g><title>__mod_zone_page_state (48 samples, 0.02%)</title><rect x="39.4807%" y="229" width="0.0171%" height="15" fill="rgb(224,227,45)" fg:x="110626" fg:w="48"/><text x="39.7307%" y="239.50"></text></g><g><title>free_unref_page_list (3,763 samples, 1.34%)</title><rect x="38.1741%" y="277" width="1.3430%" height="15" fill="rgb(229,198,43)" fg:x="106965" fg:w="3763"/><text x="38.4241%" y="287.50"></text></g><g><title>free_unref_page_commit (3,247 samples, 1.16%)</title><rect x="38.3583%" y="261" width="1.1588%" height="15" fill="rgb(206,209,35)" fg:x="107481" fg:w="3247"/><text x="38.6083%" y="271.50"></text></g><g><title>free_pcppages_bulk (2,955 samples, 1.05%)</title><rect x="38.4625%" y="245" width="1.0546%" height="15" fill="rgb(245,195,53)" fg:x="107773" fg:w="2955"/><text x="38.7125%" y="255.50"></text></g><g><title>_raw_spin_lock (54 samples, 0.02%)</title><rect x="39.4978%" y="229" width="0.0193%" height="15" fill="rgb(240,92,26)" fg:x="110674" fg:w="54"/><text x="39.7478%" y="239.50"></text></g><g><title>native_queued_spin_lock_slowpath (54 samples, 0.02%)</title><rect x="39.4978%" y="213" width="0.0193%" height="15" fill="rgb(207,40,23)" fg:x="110674" fg:w="54"/><text x="39.7478%" y="223.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (54 samples, 0.02%)</title><rect x="39.4978%" y="197" width="0.0193%" height="15" fill="rgb(223,111,35)" fg:x="110674" fg:w="54"/><text x="39.7478%" y="207.50"></text></g><g><title>lock_page_lruvec_irqsave (155 samples, 0.06%)</title><rect x="39.5171%" y="277" width="0.0553%" height="15" fill="rgb(229,147,28)" fg:x="110728" fg:w="155"/><text x="39.7671%" y="287.50"></text></g><g><title>_raw_spin_lock_irqsave (150 samples, 0.05%)</title><rect x="39.5188%" y="261" width="0.0535%" height="15" fill="rgb(211,29,28)" fg:x="110733" fg:w="150"/><text x="39.7688%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (123 samples, 0.04%)</title><rect x="39.5285%" y="245" width="0.0439%" height="15" fill="rgb(228,72,33)" fg:x="110760" fg:w="123"/><text x="39.7785%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (123 samples, 0.04%)</title><rect x="39.5285%" y="229" width="0.0439%" height="15" fill="rgb(205,214,31)" fg:x="110760" fg:w="123"/><text x="39.7785%" y="239.50"></text></g><g><title>mem_cgroup_uncharge_list (374 samples, 0.13%)</title><rect x="39.5724%" y="277" width="0.1335%" height="15" fill="rgb(224,111,15)" fg:x="110883" fg:w="374"/><text x="39.8224%" y="287.50"></text></g><g><title>uncharge_page (297 samples, 0.11%)</title><rect x="39.5999%" y="261" width="0.1060%" height="15" fill="rgb(253,21,26)" fg:x="110960" fg:w="297"/><text x="39.8499%" y="271.50"></text></g><g><title>mem_cgroup_update_lru_size (83 samples, 0.03%)</title><rect x="39.7059%" y="277" width="0.0296%" height="15" fill="rgb(245,139,43)" fg:x="111257" fg:w="83"/><text x="39.9559%" y="287.50"></text></g><g><title>tlb_flush_mmu (7,191 samples, 2.57%)</title><rect x="37.1748%" y="325" width="2.5664%" height="15" fill="rgb(252,170,7)" fg:x="104165" fg:w="7191"/><text x="37.4248%" y="335.50">tl..</text></g><g><title>free_pages_and_swap_cache (7,184 samples, 2.56%)</title><rect x="37.1773%" y="309" width="2.5639%" height="15" fill="rgb(231,118,14)" fg:x="104172" fg:w="7184"/><text x="37.4273%" y="319.50">fr..</text></g><g><title>release_pages (6,312 samples, 2.25%)</title><rect x="37.4885%" y="293" width="2.2527%" height="15" fill="rgb(238,83,0)" fg:x="105044" fg:w="6312"/><text x="37.7385%" y="303.50">r..</text></g><g><title>unlock_page_memcg (45 samples, 0.02%)</title><rect x="39.7412%" y="325" width="0.0161%" height="15" fill="rgb(221,39,39)" fg:x="111356" fg:w="45"/><text x="39.9912%" y="335.50"></text></g><g><title>__do_munmap (13,958 samples, 4.98%)</title><rect x="34.8037%" y="437" width="4.9814%" height="15" fill="rgb(222,119,46)" fg:x="97521" fg:w="13958"/><text x="35.0537%" y="447.50">__do_m..</text></g><g><title>unmap_region (13,953 samples, 4.98%)</title><rect x="34.8055%" y="421" width="4.9796%" height="15" fill="rgb(222,165,49)" fg:x="97526" fg:w="13953"/><text x="35.0555%" y="431.50">unmap_..</text></g><g><title>unmap_vmas (13,700 samples, 4.89%)</title><rect x="34.8958%" y="405" width="4.8893%" height="15" fill="rgb(219,113,52)" fg:x="97779" fg:w="13700"/><text x="35.1458%" y="415.50">unmap_..</text></g><g><title>unmap_single_vma (13,699 samples, 4.89%)</title><rect x="34.8961%" y="389" width="4.8890%" height="15" fill="rgb(214,7,15)" fg:x="97780" fg:w="13699"/><text x="35.1461%" y="399.50">unmap_..</text></g><g><title>unmap_page_range (13,699 samples, 4.89%)</title><rect x="34.8961%" y="373" width="4.8890%" height="15" fill="rgb(235,32,4)" fg:x="97780" fg:w="13699"/><text x="35.1461%" y="383.50">unmap_..</text></g><g><title>zap_pmd_range.isra.0 (13,697 samples, 4.89%)</title><rect x="34.8968%" y="357" width="4.8882%" height="15" fill="rgb(238,90,54)" fg:x="97782" fg:w="13697"/><text x="35.1468%" y="367.50">zap_pm..</text></g><g><title>zap_pte_range (13,599 samples, 4.85%)</title><rect x="34.9318%" y="341" width="4.8533%" height="15" fill="rgb(213,208,19)" fg:x="97880" fg:w="13599"/><text x="35.1818%" y="351.50">zap_pt..</text></g><g><title>vm_normal_page (78 samples, 0.03%)</title><rect x="39.7572%" y="325" width="0.0278%" height="15" fill="rgb(233,156,4)" fg:x="111401" fg:w="78"/><text x="40.0072%" y="335.50"></text></g><g><title>__vm_munmap (13,959 samples, 4.98%)</title><rect x="34.8037%" y="453" width="4.9817%" height="15" fill="rgb(207,194,5)" fg:x="97521" fg:w="13959"/><text x="35.0537%" y="463.50">__vm_m..</text></g><g><title>__GI___munmap (13,960 samples, 4.98%)</title><rect x="34.8037%" y="517" width="4.9821%" height="15" fill="rgb(206,111,30)" fg:x="97521" fg:w="13960"/><text x="35.0537%" y="527.50">__GI__..</text></g><g><title>entry_SYSCALL_64_after_hwframe (13,960 samples, 4.98%)</title><rect x="34.8037%" y="501" width="4.9821%" height="15" fill="rgb(243,70,54)" fg:x="97521" fg:w="13960"/><text x="35.0537%" y="511.50">entry_..</text></g><g><title>do_syscall_64 (13,960 samples, 4.98%)</title><rect x="34.8037%" y="485" width="4.9821%" height="15" fill="rgb(242,28,8)" fg:x="97521" fg:w="13960"/><text x="35.0537%" y="495.50">do_sys..</text></g><g><title>__x64_sys_munmap (13,960 samples, 4.98%)</title><rect x="34.8037%" y="469" width="4.9821%" height="15" fill="rgb(219,106,18)" fg:x="97521" fg:w="13960"/><text x="35.0537%" y="479.50">__x64_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;hprof_slurp::record::Record&gt;&gt; (13,962 samples, 4.98%)</title><rect x="34.8033%" y="661" width="4.9828%" height="15" fill="rgb(244,222,10)" fg:x="97520" fg:w="13962"/><text x="35.0533%" y="671.50">core::..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,962 samples, 4.98%)</title><rect x="34.8033%" y="645" width="4.9828%" height="15" fill="rgb(236,179,52)" fg:x="97520" fg:w="13962"/><text x="35.0533%" y="655.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;hprof_slurp::record::Record,alloc::alloc::Global&gt;&gt; (13,962 samples, 4.98%)</title><rect x="34.8033%" y="629" width="4.9828%" height="15" fill="rgb(213,23,39)" fg:x="97520" fg:w="13962"/><text x="35.0533%" y="639.50">core::..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,962 samples, 4.98%)</title><rect x="34.8033%" y="613" width="4.9828%" height="15" fill="rgb(238,48,10)" fg:x="97520" fg:w="13962"/><text x="35.0533%" y="623.50">&lt;&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;hprof_slurp::record::Record&gt;&gt; (13,961 samples, 4.98%)</title><rect x="34.8037%" y="597" width="4.9825%" height="15" fill="rgb(251,196,23)" fg:x="97521" fg:w="13961"/><text x="35.0537%" y="607.50">core::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13,961 samples, 4.98%)</title><rect x="34.8037%" y="581" width="4.9825%" height="15" fill="rgb(250,152,24)" fg:x="97521" fg:w="13961"/><text x="35.0537%" y="591.50">&lt;alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13,961 samples, 4.98%)</title><rect x="34.8037%" y="565" width="4.9825%" height="15" fill="rgb(209,150,17)" fg:x="97521" fg:w="13961"/><text x="35.0537%" y="575.50">&lt;alloc..</text></g><g><title>alloc::alloc::dealloc (13,961 samples, 4.98%)</title><rect x="34.8037%" y="549" width="4.9825%" height="15" fill="rgb(234,202,34)" fg:x="97521" fg:w="13961"/><text x="35.0537%" y="559.50">alloc:..</text></g><g><title>__free (13,961 samples, 4.98%)</title><rect x="34.8037%" y="533" width="4.9825%" height="15" fill="rgb(253,148,53)" fg:x="97521" fg:w="13961"/><text x="35.0537%" y="543.50">__free</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (59,835 samples, 21.35%)</title><rect x="18.4324%" y="709" width="21.3542%" height="15" fill="rgb(218,129,16)" fg:x="51648" fg:w="59835"/><text x="18.6824%" y="719.50">hprof_slurp::result_recorder::Resu..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (59,835 samples, 21.35%)</title><rect x="18.4324%" y="693" width="21.3542%" height="15" fill="rgb(216,85,19)" fg:x="51648" fg:w="59835"/><text x="18.6824%" y="703.50">core::iter::traits::iterator::Iter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (59,835 samples, 21.35%)</title><rect x="18.4324%" y="677" width="21.3542%" height="15" fill="rgb(235,228,7)" fg:x="51648" fg:w="59835"/><text x="18.6824%" y="687.50">core::iter::traits::iterator::Iter..</text></g><g><title>__GI___clone (59,891 samples, 21.37%)</title><rect x="18.4181%" y="933" width="21.3741%" height="15" fill="rgb(245,175,0)" fg:x="51608" fg:w="59891"/><text x="18.6681%" y="943.50">__GI___clone</text></g><g><title>start_thread (59,891 samples, 21.37%)</title><rect x="18.4181%" y="917" width="21.3741%" height="15" fill="rgb(208,168,36)" fg:x="51608" fg:w="59891"/><text x="18.6681%" y="927.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (59,881 samples, 21.37%)</title><rect x="18.4216%" y="901" width="21.3706%" height="15" fill="rgb(246,171,24)" fg:x="51618" fg:w="59881"/><text x="18.6716%" y="911.50">std::sys::unix::thread::Thread::ne..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (59,881 samples, 21.37%)</title><rect x="18.4216%" y="885" width="21.3706%" height="15" fill="rgb(215,142,24)" fg:x="51618" fg:w="59881"/><text x="18.6716%" y="895.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::o..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (59,881 samples, 21.37%)</title><rect x="18.4216%" y="869" width="21.3706%" height="15" fill="rgb(250,187,7)" fg:x="51618" fg:w="59881"/><text x="18.6716%" y="879.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::o..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (59,881 samples, 21.37%)</title><rect x="18.4216%" y="853" width="21.3706%" height="15" fill="rgb(228,66,33)" fg:x="51618" fg:w="59881"/><text x="18.6716%" y="863.50">core::ops::function::FnOnce::call_..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (59,881 samples, 21.37%)</title><rect x="18.4216%" y="837" width="21.3706%" height="15" fill="rgb(234,215,21)" fg:x="51618" fg:w="59881"/><text x="18.6716%" y="847.50">std::thread::Builder::spawn_unchec..</text></g><g><title>std::panic::catch_unwind (59,881 samples, 21.37%)</title><rect x="18.4216%" y="821" width="21.3706%" height="15" fill="rgb(222,191,20)" fg:x="51618" fg:w="59881"/><text x="18.6716%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (59,881 samples, 21.37%)</title><rect x="18.4216%" y="805" width="21.3706%" height="15" fill="rgb(245,79,54)" fg:x="51618" fg:w="59881"/><text x="18.6716%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (59,881 samples, 21.37%)</title><rect x="18.4216%" y="789" width="21.3706%" height="15" fill="rgb(240,10,37)" fg:x="51618" fg:w="59881"/><text x="18.6716%" y="799.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (59,881 samples, 21.37%)</title><rect x="18.4216%" y="773" width="21.3706%" height="15" fill="rgb(214,192,32)" fg:x="51618" fg:w="59881"/><text x="18.6716%" y="783.50">&lt;core::panic::unwind_safe::AssertU..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (59,881 samples, 21.37%)</title><rect x="18.4216%" y="757" width="21.3706%" height="15" fill="rgb(209,36,54)" fg:x="51618" fg:w="59881"/><text x="18.6716%" y="767.50">std::thread::Builder::spawn_unchec..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (59,881 samples, 21.37%)</title><rect x="18.4216%" y="741" width="21.3706%" height="15" fill="rgb(220,10,11)" fg:x="51618" fg:w="59881"/><text x="18.6716%" y="751.50">std::sys_common::backtrace::__rust..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start_recorder::{{closure}} (59,881 samples, 21.37%)</title><rect x="18.4216%" y="725" width="21.3706%" height="15" fill="rgb(221,106,17)" fg:x="51618" fg:w="59881"/><text x="18.6716%" y="735.50">hprof_slurp::result_recorder::Resu..</text></g><g><title>hprof-recorder (61,423 samples, 21.92%)</title><rect x="17.8863%" y="949" width="21.9209%" height="15" fill="rgb(251,142,44)" fg:x="50118" fg:w="61423"/><text x="18.1363%" y="959.50">hprof-recorder</text></g><g><title>__memcpy_avx_unaligned_erms (57 samples, 0.02%)</title><rect x="39.8115%" y="917" width="0.0203%" height="15" fill="rgb(238,13,15)" fg:x="111553" fg:w="57"/><text x="40.0615%" y="927.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (33 samples, 0.01%)</title><rect x="39.8318%" y="917" width="0.0118%" height="15" fill="rgb(208,107,27)" fg:x="111610" fg:w="33"/><text x="40.0818%" y="927.50"></text></g><g><title>[[heap]] (104 samples, 0.04%)</title><rect x="39.8079%" y="933" width="0.0371%" height="15" fill="rgb(205,136,37)" fg:x="111543" fg:w="104"/><text x="40.0579%" y="943.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (78 samples, 0.03%)</title><rect x="40.2373%" y="885" width="0.0278%" height="15" fill="rgb(250,205,27)" fg:x="112746" fg:w="78"/><text x="40.4873%" y="895.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (1,609 samples, 0.57%)</title><rect x="39.8561%" y="917" width="0.5742%" height="15" fill="rgb(210,80,43)" fg:x="111678" fg:w="1609"/><text x="40.1061%" y="927.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (1,609 samples, 0.57%)</title><rect x="39.8561%" y="901" width="0.5742%" height="15" fill="rgb(247,160,36)" fg:x="111678" fg:w="1609"/><text x="40.1061%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (463 samples, 0.17%)</title><rect x="40.2651%" y="885" width="0.1652%" height="15" fill="rgb(234,13,49)" fg:x="112824" fg:w="463"/><text x="40.5151%" y="895.50"></text></g><g><title>core::ptr::write (463 samples, 0.17%)</title><rect x="40.2651%" y="869" width="0.1652%" height="15" fill="rgb(234,122,0)" fg:x="112824" fg:w="463"/><text x="40.5151%" y="879.50"></text></g><g><title>[[stack]] (1,643 samples, 0.59%)</title><rect x="39.8450%" y="933" width="0.5864%" height="15" fill="rgb(207,146,38)" fg:x="111647" fg:w="1643"/><text x="40.0950%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (652 samples, 0.23%)</title><rect x="40.4314%" y="917" width="0.2327%" height="15" fill="rgb(207,177,25)" fg:x="113290" fg:w="652"/><text x="40.6814%" y="927.50"></text></g><g><title>[anon] (1,156 samples, 0.41%)</title><rect x="40.4314%" y="933" width="0.4126%" height="15" fill="rgb(211,178,42)" fg:x="113290" fg:w="1156"/><text x="40.6814%" y="943.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (504 samples, 0.18%)</title><rect x="40.6641%" y="917" width="0.1799%" height="15" fill="rgb(230,69,54)" fg:x="113942" fg:w="504"/><text x="40.9141%" y="927.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (1,468 samples, 0.52%)</title><rect x="40.8443%" y="917" width="0.5239%" height="15" fill="rgb(214,135,41)" fg:x="114447" fg:w="1468"/><text x="41.0943%" y="927.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (90 samples, 0.03%)</title><rect x="41.3682%" y="917" width="0.0321%" height="15" fill="rgb(237,67,25)" fg:x="115915" fg:w="90"/><text x="41.6182%" y="927.50"></text></g><g><title>__GI___libc_malloc (96 samples, 0.03%)</title><rect x="41.4011%" y="917" width="0.0343%" height="15" fill="rgb(222,189,50)" fg:x="116007" fg:w="96"/><text x="41.6511%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (137 samples, 0.05%)</title><rect x="41.4357%" y="917" width="0.0489%" height="15" fill="rgb(245,148,34)" fg:x="116104" fg:w="137"/><text x="41.6857%" y="927.50"></text></g><g><title>__realloc (540 samples, 0.19%)</title><rect x="41.4871%" y="917" width="0.1927%" height="15" fill="rgb(222,29,6)" fg:x="116248" fg:w="540"/><text x="41.7371%" y="927.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (540 samples, 0.19%)</title><rect x="41.4871%" y="901" width="0.1927%" height="15" fill="rgb(221,189,43)" fg:x="116248" fg:w="540"/><text x="41.7371%" y="911.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_instance_dump (469 samples, 0.17%)</title><rect x="42.1187%" y="885" width="0.1674%" height="15" fill="rgb(207,36,27)" fg:x="118018" fg:w="469"/><text x="42.3687%" y="895.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (469 samples, 0.17%)</title><rect x="42.1187%" y="869" width="0.1674%" height="15" fill="rgb(217,90,24)" fg:x="118018" fg:w="469"/><text x="42.3687%" y="879.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (469 samples, 0.17%)</title><rect x="42.1187%" y="853" width="0.1674%" height="15" fill="rgb(224,66,35)" fg:x="118018" fg:w="469"/><text x="42.3687%" y="863.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (469 samples, 0.17%)</title><rect x="42.1187%" y="837" width="0.1674%" height="15" fill="rgb(221,13,50)" fg:x="118018" fg:w="469"/><text x="42.3687%" y="847.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (1,675 samples, 0.60%)</title><rect x="41.6898%" y="917" width="0.5978%" height="15" fill="rgb(236,68,49)" fg:x="116816" fg:w="1675"/><text x="41.9398%" y="927.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (473 samples, 0.17%)</title><rect x="42.1187%" y="901" width="0.1688%" height="15" fill="rgb(229,146,28)" fg:x="118018" fg:w="473"/><text x="42.3687%" y="911.50"></text></g><g><title>[unknown] (4,049 samples, 1.45%)</title><rect x="40.8443%" y="933" width="1.4450%" height="15" fill="rgb(225,31,38)" fg:x="114447" fg:w="4049"/><text x="41.0943%" y="943.50"></text></g><g><title>__irqentry_text_end (62 samples, 0.02%)</title><rect x="42.2936%" y="933" width="0.0221%" height="15" fill="rgb(250,208,3)" fg:x="118508" fg:w="62"/><text x="42.5436%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7,795 samples, 2.78%)</title><rect x="42.3200%" y="581" width="2.7819%" height="15" fill="rgb(246,54,23)" fg:x="118582" fg:w="7795"/><text x="42.5700%" y="591.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7,795 samples, 2.78%)</title><rect x="42.3200%" y="565" width="2.7819%" height="15" fill="rgb(243,76,11)" fg:x="118582" fg:w="7795"/><text x="42.5700%" y="575.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7,795 samples, 2.78%)</title><rect x="42.3200%" y="549" width="2.7819%" height="15" fill="rgb(245,21,50)" fg:x="118582" fg:w="7795"/><text x="42.5700%" y="559.50">al..</text></g><g><title>core::intrinsics::copy_nonoverlapping (7,794 samples, 2.78%)</title><rect x="42.3204%" y="533" width="2.7816%" height="15" fill="rgb(228,9,43)" fg:x="118583" fg:w="7794"/><text x="42.5704%" y="543.50">co..</text></g><g><title>__memcpy_avx_unaligned_erms (7,794 samples, 2.78%)</title><rect x="42.3204%" y="517" width="2.7816%" height="15" fill="rgb(208,100,47)" fg:x="118583" fg:w="7794"/><text x="42.5704%" y="527.50">__..</text></g><g><title>__mod_memcg_lruvec_state (46 samples, 0.02%)</title><rect x="45.1983%" y="309" width="0.0164%" height="15" fill="rgb(232,26,8)" fg:x="126647" fg:w="46"/><text x="45.4483%" y="319.50"></text></g><g><title>__mod_lruvec_state (68 samples, 0.02%)</title><rect x="45.1951%" y="325" width="0.0243%" height="15" fill="rgb(216,166,38)" fg:x="126638" fg:w="68"/><text x="45.4451%" y="335.50"></text></g><g><title>__free_one_page (248 samples, 0.09%)</title><rect x="45.3125%" y="277" width="0.0885%" height="15" fill="rgb(251,202,51)" fg:x="126967" fg:w="248"/><text x="45.5625%" y="287.50"></text></g><g><title>free_unref_page_list (475 samples, 0.17%)</title><rect x="45.2333%" y="325" width="0.1695%" height="15" fill="rgb(254,216,34)" fg:x="126745" fg:w="475"/><text x="45.4833%" y="335.50"></text></g><g><title>free_unref_page_commit (403 samples, 0.14%)</title><rect x="45.2590%" y="309" width="0.1438%" height="15" fill="rgb(251,32,27)" fg:x="126817" fg:w="403"/><text x="45.5090%" y="319.50"></text></g><g><title>free_pcppages_bulk (353 samples, 0.13%)</title><rect x="45.2768%" y="293" width="0.1260%" height="15" fill="rgb(208,127,28)" fg:x="126867" fg:w="353"/><text x="45.5268%" y="303.50"></text></g><g><title>mem_cgroup_uncharge_list (49 samples, 0.02%)</title><rect x="45.4035%" y="325" width="0.0175%" height="15" fill="rgb(224,137,22)" fg:x="127222" fg:w="49"/><text x="45.6535%" y="335.50"></text></g><g><title>uncharge_page (40 samples, 0.01%)</title><rect x="45.4067%" y="309" width="0.0143%" height="15" fill="rgb(254,70,32)" fg:x="127231" fg:w="40"/><text x="45.6567%" y="319.50"></text></g><g><title>tlb_finish_mmu (890 samples, 0.32%)</title><rect x="45.1084%" y="373" width="0.3176%" height="15" fill="rgb(229,75,37)" fg:x="126395" fg:w="890"/><text x="45.3584%" y="383.50"></text></g><g><title>free_pages_and_swap_cache (888 samples, 0.32%)</title><rect x="45.1091%" y="357" width="0.3169%" height="15" fill="rgb(252,64,23)" fg:x="126397" fg:w="888"/><text x="45.3591%" y="367.50"></text></g><g><title>release_pages (791 samples, 0.28%)</title><rect x="45.1437%" y="341" width="0.2823%" height="15" fill="rgb(232,162,48)" fg:x="126494" fg:w="791"/><text x="45.3937%" y="351.50"></text></g><g><title>__mod_memcg_lruvec_state (122 samples, 0.04%)</title><rect x="45.9831%" y="245" width="0.0435%" height="15" fill="rgb(246,160,12)" fg:x="128846" fg:w="122"/><text x="46.2331%" y="255.50"></text></g><g><title>__mod_lruvec_state (189 samples, 0.07%)</title><rect x="45.9756%" y="261" width="0.0675%" height="15" fill="rgb(247,166,0)" fg:x="128825" fg:w="189"/><text x="46.2256%" y="271.50"></text></g><g><title>__mod_lruvec_page_state (261 samples, 0.09%)</title><rect x="45.9606%" y="277" width="0.0931%" height="15" fill="rgb(249,219,21)" fg:x="128783" fg:w="261"/><text x="46.2106%" y="287.50"></text></g><g><title>lock_page_memcg (42 samples, 0.01%)</title><rect x="46.0563%" y="277" width="0.0150%" height="15" fill="rgb(205,209,3)" fg:x="129051" fg:w="42"/><text x="46.3063%" y="287.50"></text></g><g><title>page_remove_rmap (558 samples, 0.20%)</title><rect x="45.8853%" y="293" width="0.1991%" height="15" fill="rgb(243,44,1)" fg:x="128572" fg:w="558"/><text x="46.1353%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (53 samples, 0.02%)</title><rect x="46.2236%" y="229" width="0.0189%" height="15" fill="rgb(206,159,16)" fg:x="129520" fg:w="53"/><text x="46.4736%" y="239.50"></text></g><g><title>__mod_lruvec_state (84 samples, 0.03%)</title><rect x="46.2204%" y="245" width="0.0300%" height="15" fill="rgb(244,77,30)" fg:x="129511" fg:w="84"/><text x="46.4704%" y="255.50"></text></g><g><title>__free_one_page (392 samples, 0.14%)</title><rect x="46.3742%" y="197" width="0.1399%" height="15" fill="rgb(218,69,12)" fg:x="129942" fg:w="392"/><text x="46.6242%" y="207.50"></text></g><g><title>free_unref_page_list (708 samples, 0.25%)</title><rect x="46.2665%" y="245" width="0.2527%" height="15" fill="rgb(212,87,7)" fg:x="129640" fg:w="708"/><text x="46.5165%" y="255.50"></text></g><g><title>free_unref_page_commit (609 samples, 0.22%)</title><rect x="46.3018%" y="229" width="0.2173%" height="15" fill="rgb(245,114,25)" fg:x="129739" fg:w="609"/><text x="46.5518%" y="239.50"></text></g><g><title>free_pcppages_bulk (554 samples, 0.20%)</title><rect x="46.3214%" y="213" width="0.1977%" height="15" fill="rgb(210,61,42)" fg:x="129794" fg:w="554"/><text x="46.5714%" y="223.50"></text></g><g><title>mem_cgroup_uncharge_list (66 samples, 0.02%)</title><rect x="46.5206%" y="245" width="0.0236%" height="15" fill="rgb(211,52,33)" fg:x="130352" fg:w="66"/><text x="46.7706%" y="255.50"></text></g><g><title>uncharge_page (47 samples, 0.02%)</title><rect x="46.5273%" y="229" width="0.0168%" height="15" fill="rgb(234,58,33)" fg:x="130371" fg:w="47"/><text x="46.7773%" y="239.50"></text></g><g><title>tlb_flush_mmu (1,310 samples, 0.47%)</title><rect x="46.0844%" y="293" width="0.4675%" height="15" fill="rgb(220,115,36)" fg:x="129130" fg:w="1310"/><text x="46.3344%" y="303.50"></text></g><g><title>free_pages_and_swap_cache (1,306 samples, 0.47%)</title><rect x="46.0859%" y="277" width="0.4661%" height="15" fill="rgb(243,153,54)" fg:x="129134" fg:w="1306"/><text x="46.3359%" y="287.50"></text></g><g><title>release_pages (1,142 samples, 0.41%)</title><rect x="46.1444%" y="261" width="0.4076%" height="15" fill="rgb(251,47,18)" fg:x="129298" fg:w="1142"/><text x="46.3944%" y="271.50"></text></g><g><title>__do_munmap (4,107 samples, 1.47%)</title><rect x="45.1027%" y="405" width="1.4657%" height="15" fill="rgb(242,102,42)" fg:x="126379" fg:w="4107"/><text x="45.3527%" y="415.50"></text></g><g><title>unmap_region (4,097 samples, 1.46%)</title><rect x="45.1062%" y="389" width="1.4622%" height="15" fill="rgb(234,31,38)" fg:x="126389" fg:w="4097"/><text x="45.3562%" y="399.50"></text></g><g><title>unmap_vmas (3,200 samples, 1.14%)</title><rect x="45.4264%" y="373" width="1.1420%" height="15" fill="rgb(221,117,51)" fg:x="127286" fg:w="3200"/><text x="45.6764%" y="383.50"></text></g><g><title>unmap_single_vma (3,200 samples, 1.14%)</title><rect x="45.4264%" y="357" width="1.1420%" height="15" fill="rgb(212,20,18)" fg:x="127286" fg:w="3200"/><text x="45.6764%" y="367.50"></text></g><g><title>unmap_page_range (3,200 samples, 1.14%)</title><rect x="45.4264%" y="341" width="1.1420%" height="15" fill="rgb(245,133,36)" fg:x="127286" fg:w="3200"/><text x="45.6764%" y="351.50"></text></g><g><title>zap_pmd_range.isra.0 (3,200 samples, 1.14%)</title><rect x="45.4264%" y="325" width="1.1420%" height="15" fill="rgb(212,6,19)" fg:x="127286" fg:w="3200"/><text x="45.6764%" y="335.50"></text></g><g><title>zap_pte_range (3,170 samples, 1.13%)</title><rect x="45.4371%" y="309" width="1.1313%" height="15" fill="rgb(218,1,36)" fg:x="127316" fg:w="3170"/><text x="45.6871%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4,111 samples, 1.47%)</title><rect x="45.1019%" y="581" width="1.4672%" height="15" fill="rgb(246,84,54)" fg:x="126377" fg:w="4111"/><text x="45.3519%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4,111 samples, 1.47%)</title><rect x="45.1019%" y="565" width="1.4672%" height="15" fill="rgb(242,110,6)" fg:x="126377" fg:w="4111"/><text x="45.3519%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,111 samples, 1.47%)</title><rect x="45.1019%" y="549" width="1.4672%" height="15" fill="rgb(214,47,5)" fg:x="126377" fg:w="4111"/><text x="45.3519%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,111 samples, 1.47%)</title><rect x="45.1019%" y="533" width="1.4672%" height="15" fill="rgb(218,159,25)" fg:x="126377" fg:w="4111"/><text x="45.3519%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (4,111 samples, 1.47%)</title><rect x="45.1019%" y="517" width="1.4672%" height="15" fill="rgb(215,211,28)" fg:x="126377" fg:w="4111"/><text x="45.3519%" y="527.50"></text></g><g><title>__free (4,111 samples, 1.47%)</title><rect x="45.1019%" y="501" width="1.4672%" height="15" fill="rgb(238,59,32)" fg:x="126377" fg:w="4111"/><text x="45.3519%" y="511.50"></text></g><g><title>__GI___munmap (4,110 samples, 1.47%)</title><rect x="45.1023%" y="485" width="1.4668%" height="15" fill="rgb(226,82,3)" fg:x="126378" fg:w="4110"/><text x="45.3523%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,110 samples, 1.47%)</title><rect x="45.1023%" y="469" width="1.4668%" height="15" fill="rgb(240,164,32)" fg:x="126378" fg:w="4110"/><text x="45.3523%" y="479.50"></text></g><g><title>do_syscall_64 (4,110 samples, 1.47%)</title><rect x="45.1023%" y="453" width="1.4668%" height="15" fill="rgb(232,46,7)" fg:x="126378" fg:w="4110"/><text x="45.3523%" y="463.50"></text></g><g><title>__x64_sys_munmap (4,110 samples, 1.47%)</title><rect x="45.1023%" y="437" width="1.4668%" height="15" fill="rgb(229,129,53)" fg:x="126378" fg:w="4110"/><text x="45.3523%" y="447.50"></text></g><g><title>__vm_munmap (4,110 samples, 1.47%)</title><rect x="45.1023%" y="421" width="1.4668%" height="15" fill="rgb(234,188,29)" fg:x="126378" fg:w="4110"/><text x="45.3523%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (31 samples, 0.01%)</title><rect x="46.5691%" y="581" width="0.0111%" height="15" fill="rgb(246,141,4)" fg:x="130488" fg:w="31"/><text x="46.8191%" y="591.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (31 samples, 0.01%)</title><rect x="46.5691%" y="565" width="0.0111%" height="15" fill="rgb(229,23,39)" fg:x="130488" fg:w="31"/><text x="46.8191%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (31 samples, 0.01%)</title><rect x="46.5691%" y="549" width="0.0111%" height="15" fill="rgb(206,12,3)" fg:x="130488" fg:w="31"/><text x="46.8191%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (31 samples, 0.01%)</title><rect x="46.5691%" y="533" width="0.0111%" height="15" fill="rgb(252,226,20)" fg:x="130488" fg:w="31"/><text x="46.8191%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (31 samples, 0.01%)</title><rect x="46.5691%" y="517" width="0.0111%" height="15" fill="rgb(216,123,35)" fg:x="130488" fg:w="31"/><text x="46.8191%" y="527.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (31 samples, 0.01%)</title><rect x="46.5691%" y="501" width="0.0111%" height="15" fill="rgb(212,68,40)" fg:x="130488" fg:w="31"/><text x="46.8191%" y="511.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (31 samples, 0.01%)</title><rect x="46.5691%" y="485" width="0.0111%" height="15" fill="rgb(254,125,32)" fg:x="130488" fg:w="31"/><text x="46.8191%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (31 samples, 0.01%)</title><rect x="46.5691%" y="469" width="0.0111%" height="15" fill="rgb(253,97,22)" fg:x="130488" fg:w="31"/><text x="46.8191%" y="479.50"></text></g><g><title>nom::combinator::map::{{closure}} (31 samples, 0.01%)</title><rect x="46.5691%" y="453" width="0.0111%" height="15" fill="rgb(241,101,14)" fg:x="130488" fg:w="31"/><text x="46.8191%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (31 samples, 0.01%)</title><rect x="46.5691%" y="437" width="0.0111%" height="15" fill="rgb(238,103,29)" fg:x="130488" fg:w="31"/><text x="46.8191%" y="447.50"></text></g><g><title>nom::multi::count::{{closure}} (31 samples, 0.01%)</title><rect x="46.5691%" y="421" width="0.0111%" height="15" fill="rgb(233,195,47)" fg:x="130488" fg:w="31"/><text x="46.8191%" y="431.50"></text></g><g><title>core::intrinsics::copy (5,900 samples, 2.11%)</title><rect x="46.5902%" y="533" width="2.1056%" height="15" fill="rgb(246,218,30)" fg:x="130547" fg:w="5900"/><text x="46.8402%" y="543.50">c..</text></g><g><title>__memcpy_avx_unaligned_erms (5,900 samples, 2.11%)</title><rect x="46.5902%" y="517" width="2.1056%" height="15" fill="rgb(219,145,47)" fg:x="130547" fg:w="5900"/><text x="46.8402%" y="527.50">_..</text></g><g><title>core::slice::&lt;impl [T]&gt;::rotate_left (5,920 samples, 2.11%)</title><rect x="46.5902%" y="565" width="2.1128%" height="15" fill="rgb(243,12,26)" fg:x="130547" fg:w="5920"/><text x="46.8402%" y="575.50">c..</text></g><g><title>core::slice::rotate::ptr_rotate (5,920 samples, 2.11%)</title><rect x="46.5902%" y="549" width="2.1128%" height="15" fill="rgb(214,87,16)" fg:x="130547" fg:w="5920"/><text x="46.8402%" y="559.50">c..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,738 samples, 0.62%)</title><rect x="51.9641%" y="501" width="0.6203%" height="15" fill="rgb(208,99,42)" fg:x="145605" fg:w="1738"/><text x="52.2141%" y="511.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u8 (1,138 samples, 0.41%)</title><rect x="53.3924%" y="485" width="0.4061%" height="15" fill="rgb(253,99,2)" fg:x="149607" fg:w="1138"/><text x="53.6424%" y="495.50"></text></g><g><title>nom::number::streaming::be_u8 (1,138 samples, 0.41%)</title><rect x="53.3924%" y="469" width="0.4061%" height="15" fill="rgb(220,168,23)" fg:x="149607" fg:w="1138"/><text x="53.6424%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,072 samples, 0.38%)</title><rect x="53.4159%" y="453" width="0.3826%" height="15" fill="rgb(242,38,24)" fg:x="149673" fg:w="1072"/><text x="53.6659%" y="463.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1,072 samples, 0.38%)</title><rect x="53.4159%" y="437" width="0.3826%" height="15" fill="rgb(225,182,9)" fg:x="149673" fg:w="1072"/><text x="53.6659%" y="447.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,108 samples, 0.40%)</title><rect x="53.7996%" y="437" width="0.3954%" height="15" fill="rgb(243,178,37)" fg:x="150748" fg:w="1108"/><text x="54.0496%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (511 samples, 0.18%)</title><rect x="54.0126%" y="421" width="0.1824%" height="15" fill="rgb(232,139,19)" fg:x="151345" fg:w="511"/><text x="54.2626%" y="431.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (511 samples, 0.18%)</title><rect x="54.0126%" y="405" width="0.1824%" height="15" fill="rgb(225,201,24)" fg:x="151345" fg:w="511"/><text x="54.2626%" y="415.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (511 samples, 0.18%)</title><rect x="54.0126%" y="389" width="0.1824%" height="15" fill="rgb(221,47,46)" fg:x="151345" fg:w="511"/><text x="54.2626%" y="399.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u32 (1,803 samples, 0.64%)</title><rect x="55.7292%" y="373" width="0.6435%" height="15" fill="rgb(249,23,13)" fg:x="156155" fg:w="1803"/><text x="55.9792%" y="383.50"></text></g><g><title>nom::number::streaming::be_u32 (1,803 samples, 0.64%)</title><rect x="55.7292%" y="357" width="0.6435%" height="15" fill="rgb(219,9,5)" fg:x="156155" fg:w="1803"/><text x="55.9792%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,604 samples, 1.29%)</title><rect x="55.7292%" y="405" width="1.2862%" height="15" fill="rgb(254,171,16)" fg:x="156155" fg:w="3604"/><text x="55.9792%" y="415.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,604 samples, 1.29%)</title><rect x="55.7292%" y="389" width="1.2862%" height="15" fill="rgb(230,171,20)" fg:x="156155" fg:w="3604"/><text x="55.9792%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (1,801 samples, 0.64%)</title><rect x="56.3727%" y="373" width="0.6427%" height="15" fill="rgb(210,71,41)" fg:x="157958" fg:w="1801"/><text x="56.6227%" y="383.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (1,801 samples, 0.64%)</title><rect x="56.3727%" y="357" width="0.6427%" height="15" fill="rgb(206,173,20)" fg:x="157958" fg:w="1801"/><text x="56.6227%" y="367.50"></text></g><g><title>nom::number::streaming::be_u64 (1,801 samples, 0.64%)</title><rect x="56.3727%" y="341" width="0.6427%" height="15" fill="rgb(233,88,34)" fg:x="157958" fg:w="1801"/><text x="56.6227%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9,029 samples, 3.22%)</title><rect x="53.7996%" y="453" width="3.2223%" height="15" fill="rgb(223,209,46)" fg:x="150748" fg:w="9029"/><text x="54.0496%" y="463.50">&lt;F ..</text></g><g><title>nom::sequence::tuple::{{closure}} (7,921 samples, 2.83%)</title><rect x="54.1950%" y="437" width="2.8269%" height="15" fill="rgb(250,43,18)" fg:x="151856" fg:w="7921"/><text x="54.4450%" y="447.50">no..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (7,921 samples, 2.83%)</title><rect x="54.1950%" y="421" width="2.8269%" height="15" fill="rgb(208,13,10)" fg:x="151856" fg:w="7921"/><text x="54.4450%" y="431.50">&lt;(..</text></g><g><title>hprof_slurp::record_parser::parse_gc_instance_dump (10,130 samples, 3.62%)</title><rect x="53.7992%" y="485" width="3.6152%" height="15" fill="rgb(212,200,36)" fg:x="150747" fg:w="10130"/><text x="54.0492%" y="495.50">hpro..</text></g><g><title>nom::combinator::flat_map::{{closure}} (10,130 samples, 3.62%)</title><rect x="53.7992%" y="469" width="3.6152%" height="15" fill="rgb(225,90,30)" fg:x="150747" fg:w="10130"/><text x="54.0492%" y="479.50">nom:..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,100 samples, 0.39%)</title><rect x="57.0219%" y="453" width="0.3926%" height="15" fill="rgb(236,182,39)" fg:x="159777" fg:w="1100"/><text x="57.2719%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (238 samples, 0.08%)</title><rect x="57.4944%" y="389" width="0.0849%" height="15" fill="rgb(212,144,35)" fg:x="161101" fg:w="238"/><text x="57.7444%" y="399.50"></text></g><g><title>core::ops::function::FnMut::call_mut (238 samples, 0.08%)</title><rect x="57.4944%" y="373" width="0.0849%" height="15" fill="rgb(228,63,44)" fg:x="161101" fg:w="238"/><text x="57.7444%" y="383.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (237 samples, 0.08%)</title><rect x="57.4947%" y="357" width="0.0846%" height="15" fill="rgb(228,109,6)" fg:x="161102" fg:w="237"/><text x="57.7447%" y="367.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (237 samples, 0.08%)</title><rect x="57.4947%" y="341" width="0.0846%" height="15" fill="rgb(238,117,24)" fg:x="161102" fg:w="237"/><text x="57.7447%" y="351.50"></text></g><g><title>nom::number::streaming::be_u64 (237 samples, 0.08%)</title><rect x="57.4947%" y="325" width="0.0846%" height="15" fill="rgb(242,26,26)" fg:x="161102" fg:w="237"/><text x="57.7447%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (168 samples, 0.06%)</title><rect x="57.5194%" y="309" width="0.0600%" height="15" fill="rgb(221,92,48)" fg:x="161171" fg:w="168"/><text x="57.7694%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (168 samples, 0.06%)</title><rect x="57.5194%" y="293" width="0.0600%" height="15" fill="rgb(209,209,32)" fg:x="161171" fg:w="168"/><text x="57.7694%" y="303.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (168 samples, 0.06%)</title><rect x="57.5194%" y="277" width="0.0600%" height="15" fill="rgb(221,70,22)" fg:x="161171" fg:w="168"/><text x="57.7694%" y="287.50"></text></g><g><title>asm_exc_page_fault (29 samples, 0.01%)</title><rect x="57.6254%" y="357" width="0.0103%" height="15" fill="rgb(248,145,5)" fg:x="161468" fg:w="29"/><text x="57.8754%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (160 samples, 0.06%)</title><rect x="57.5793%" y="389" width="0.0571%" height="15" fill="rgb(226,116,26)" fg:x="161339" fg:w="160"/><text x="57.8293%" y="399.50"></text></g><g><title>core::ptr::write (68 samples, 0.02%)</title><rect x="57.6122%" y="373" width="0.0243%" height="15" fill="rgb(244,5,17)" fg:x="161431" fg:w="68"/><text x="57.8622%" y="383.50"></text></g><g><title>malloc_consolidate (357 samples, 0.13%)</title><rect x="58.0440%" y="245" width="0.1274%" height="15" fill="rgb(252,159,33)" fg:x="162641" fg:w="357"/><text x="58.2940%" y="255.50"></text></g><g><title>unlink_chunk.constprop.0 (94 samples, 0.03%)</title><rect x="58.1379%" y="229" width="0.0335%" height="15" fill="rgb(206,71,0)" fg:x="162904" fg:w="94"/><text x="58.3879%" y="239.50"></text></g><g><title>__GI___libc_malloc (1,610 samples, 0.57%)</title><rect x="57.6407%" y="277" width="0.5746%" height="15" fill="rgb(233,118,54)" fg:x="161511" fg:w="1610"/><text x="57.8907%" y="287.50"></text></g><g><title>_int_malloc (1,263 samples, 0.45%)</title><rect x="57.7645%" y="261" width="0.4507%" height="15" fill="rgb(234,83,48)" fg:x="161858" fg:w="1263"/><text x="58.0145%" y="271.50"></text></g><g><title>unlink_chunk.constprop.0 (123 samples, 0.04%)</title><rect x="58.1714%" y="245" width="0.0439%" height="15" fill="rgb(228,3,54)" fg:x="162998" fg:w="123"/><text x="58.4214%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,634 samples, 0.58%)</title><rect x="57.6382%" y="325" width="0.5831%" height="15" fill="rgb(226,155,13)" fg:x="161504" fg:w="1634"/><text x="57.8882%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,634 samples, 0.58%)</title><rect x="57.6382%" y="309" width="0.5831%" height="15" fill="rgb(241,28,37)" fg:x="161504" fg:w="1634"/><text x="57.8882%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1,634 samples, 0.58%)</title><rect x="57.6382%" y="293" width="0.5831%" height="15" fill="rgb(233,93,10)" fg:x="161504" fg:w="1634"/><text x="57.8882%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,644 samples, 0.59%)</title><rect x="57.6364%" y="389" width="0.5867%" height="15" fill="rgb(225,113,19)" fg:x="161499" fg:w="1644"/><text x="57.8864%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,644 samples, 0.59%)</title><rect x="57.6364%" y="373" width="0.5867%" height="15" fill="rgb(241,2,18)" fg:x="161499" fg:w="1644"/><text x="57.8864%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,642 samples, 0.59%)</title><rect x="57.6371%" y="357" width="0.5860%" height="15" fill="rgb(228,207,21)" fg:x="161501" fg:w="1642"/><text x="57.8871%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,642 samples, 0.59%)</title><rect x="57.6371%" y="341" width="0.5860%" height="15" fill="rgb(213,211,35)" fg:x="161501" fg:w="1642"/><text x="57.8871%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,275 samples, 0.81%)</title><rect x="57.4162%" y="421" width="0.8119%" height="15" fill="rgb(209,83,10)" fg:x="160882" fg:w="2275"/><text x="57.6662%" y="431.50"></text></g><g><title>nom::multi::count::{{closure}} (2,266 samples, 0.81%)</title><rect x="57.4194%" y="405" width="0.8087%" height="15" fill="rgb(209,164,1)" fg:x="160891" fg:w="2266"/><text x="57.6694%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (33 samples, 0.01%)</title><rect x="58.2281%" y="421" width="0.0118%" height="15" fill="rgb(213,184,43)" fg:x="163157" fg:w="33"/><text x="58.4781%" y="431.50"></text></g><g><title>nom::combinator::map::{{closure}} (2,317 samples, 0.83%)</title><rect x="57.4144%" y="437" width="0.8269%" height="15" fill="rgb(231,61,34)" fg:x="160877" fg:w="2317"/><text x="57.6644%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,379 samples, 0.85%)</title><rect x="57.4144%" y="453" width="0.8490%" height="15" fill="rgb(235,75,3)" fg:x="160877" fg:w="2379"/><text x="57.6644%" y="463.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (62 samples, 0.02%)</title><rect x="58.2413%" y="437" width="0.0221%" height="15" fill="rgb(220,106,47)" fg:x="163194" fg:w="62"/><text x="58.4913%" y="447.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (62 samples, 0.02%)</title><rect x="58.2413%" y="421" width="0.0221%" height="15" fill="rgb(210,196,33)" fg:x="163194" fg:w="62"/><text x="58.4913%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (34 samples, 0.01%)</title><rect x="58.2513%" y="405" width="0.0121%" height="15" fill="rgb(229,154,42)" fg:x="163222" fg:w="34"/><text x="58.5013%" y="415.50"></text></g><g><title>core::ops::function::FnMut::call_mut (34 samples, 0.01%)</title><rect x="58.2513%" y="389" width="0.0121%" height="15" fill="rgb(228,114,26)" fg:x="163222" fg:w="34"/><text x="58.5013%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (2,398 samples, 0.86%)</title><rect x="57.4144%" y="485" width="0.8558%" height="15" fill="rgb(208,144,1)" fg:x="160877" fg:w="2398"/><text x="57.6644%" y="495.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (2,398 samples, 0.86%)</title><rect x="57.4144%" y="469" width="0.8558%" height="15" fill="rgb(239,112,37)" fg:x="160877" fg:w="2398"/><text x="57.6644%" y="479.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i32 (105 samples, 0.04%)</title><rect x="58.3523%" y="389" width="0.0375%" height="15" fill="rgb(210,96,50)" fg:x="163505" fg:w="105"/><text x="58.6023%" y="399.50"></text></g><g><title>nom::number::streaming::be_i32 (105 samples, 0.04%)</title><rect x="58.3523%" y="373" width="0.0375%" height="15" fill="rgb(222,178,2)" fg:x="163505" fg:w="105"/><text x="58.6023%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (90 samples, 0.03%)</title><rect x="58.3577%" y="357" width="0.0321%" height="15" fill="rgb(226,74,18)" fg:x="163520" fg:w="90"/><text x="58.6077%" y="367.50"></text></g><g><title>nom::combinator::map::{{closure}} (87 samples, 0.03%)</title><rect x="58.3588%" y="341" width="0.0310%" height="15" fill="rgb(225,67,54)" fg:x="163523" fg:w="87"/><text x="58.6088%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (74 samples, 0.03%)</title><rect x="58.3634%" y="325" width="0.0264%" height="15" fill="rgb(251,92,32)" fg:x="163536" fg:w="74"/><text x="58.6134%" y="335.50"></text></g><g><title>nom::number::streaming::be_i32::{{closure}} (74 samples, 0.03%)</title><rect x="58.3634%" y="309" width="0.0264%" height="15" fill="rgb(228,149,22)" fg:x="163536" fg:w="74"/><text x="58.6134%" y="319.50"></text></g><g><title>nom::number::streaming::be_u32 (74 samples, 0.03%)</title><rect x="58.3634%" y="293" width="0.0264%" height="15" fill="rgb(243,54,13)" fg:x="163536" fg:w="74"/><text x="58.6134%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.01%)</title><rect x="58.3787%" y="277" width="0.0111%" height="15" fill="rgb(243,180,28)" fg:x="163579" fg:w="31"/><text x="58.6287%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.01%)</title><rect x="58.3787%" y="261" width="0.0111%" height="15" fill="rgb(208,167,24)" fg:x="163579" fg:w="31"/><text x="58.6287%" y="271.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (338 samples, 0.12%)</title><rect x="58.3523%" y="421" width="0.1206%" height="15" fill="rgb(245,73,45)" fg:x="163505" fg:w="338"/><text x="58.6023%" y="431.50"></text></g><g><title>core::ops::function::FnMut::call_mut (338 samples, 0.12%)</title><rect x="58.3523%" y="405" width="0.1206%" height="15" fill="rgb(237,203,48)" fg:x="163505" fg:w="338"/><text x="58.6023%" y="415.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i8 (220 samples, 0.08%)</title><rect x="58.3944%" y="389" width="0.0785%" height="15" fill="rgb(211,197,16)" fg:x="163623" fg:w="220"/><text x="58.6444%" y="399.50"></text></g><g><title>nom::number::streaming::be_i8 (220 samples, 0.08%)</title><rect x="58.3944%" y="373" width="0.0785%" height="15" fill="rgb(243,99,51)" fg:x="163623" fg:w="220"/><text x="58.6444%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (220 samples, 0.08%)</title><rect x="58.3944%" y="357" width="0.0785%" height="15" fill="rgb(215,123,29)" fg:x="163623" fg:w="220"/><text x="58.6444%" y="367.50"></text></g><g><title>nom::combinator::map::{{closure}} (220 samples, 0.08%)</title><rect x="58.3944%" y="341" width="0.0785%" height="15" fill="rgb(239,186,37)" fg:x="163623" fg:w="220"/><text x="58.6444%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (220 samples, 0.08%)</title><rect x="58.3944%" y="325" width="0.0785%" height="15" fill="rgb(252,136,39)" fg:x="163623" fg:w="220"/><text x="58.6444%" y="335.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (220 samples, 0.08%)</title><rect x="58.3944%" y="309" width="0.0785%" height="15" fill="rgb(223,213,32)" fg:x="163623" fg:w="220"/><text x="58.6444%" y="319.50"></text></g><g><title>nom::number::streaming::be_u8 (220 samples, 0.08%)</title><rect x="58.3944%" y="293" width="0.0785%" height="15" fill="rgb(233,115,5)" fg:x="163623" fg:w="220"/><text x="58.6444%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.02%)</title><rect x="58.4487%" y="277" width="0.0243%" height="15" fill="rgb(207,226,44)" fg:x="163775" fg:w="68"/><text x="58.6987%" y="287.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (68 samples, 0.02%)</title><rect x="58.4487%" y="261" width="0.0243%" height="15" fill="rgb(208,126,0)" fg:x="163775" fg:w="68"/><text x="58.6987%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (133 samples, 0.05%)</title><rect x="58.7156%" y="405" width="0.0475%" height="15" fill="rgb(244,66,21)" fg:x="164523" fg:w="133"/><text x="58.9656%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,424 samples, 0.51%)</title><rect x="58.4730%" y="421" width="0.5082%" height="15" fill="rgb(222,97,12)" fg:x="163843" fg:w="1424"/><text x="58.7230%" y="431.50"></text></g><g><title>core::ptr::write (610 samples, 0.22%)</title><rect x="58.7635%" y="405" width="0.2177%" height="15" fill="rgb(219,213,19)" fg:x="164657" fg:w="610"/><text x="59.0135%" y="415.50"></text></g><g><title>__GI___lll_lock_wake_private (29 samples, 0.01%)</title><rect x="59.3113%" y="293" width="0.0103%" height="15" fill="rgb(252,169,30)" fg:x="166192" fg:w="29"/><text x="59.5613%" y="303.50"></text></g><g><title>malloc_consolidate (266 samples, 0.09%)</title><rect x="59.8777%" y="277" width="0.0949%" height="15" fill="rgb(206,32,51)" fg:x="167779" fg:w="266"/><text x="60.1277%" y="287.50"></text></g><g><title>unlink_chunk.constprop.0 (79 samples, 0.03%)</title><rect x="59.9444%" y="261" width="0.0282%" height="15" fill="rgb(250,172,42)" fg:x="167966" fg:w="79"/><text x="60.1944%" y="271.50"></text></g><g><title>__GI___libc_malloc (3,019 samples, 1.08%)</title><rect x="58.9904%" y="309" width="1.0774%" height="15" fill="rgb(209,34,43)" fg:x="165293" fg:w="3019"/><text x="59.2404%" y="319.50"></text></g><g><title>_int_malloc (2,091 samples, 0.75%)</title><rect x="59.3216%" y="293" width="0.7462%" height="15" fill="rgb(223,11,35)" fg:x="166221" fg:w="2091"/><text x="59.5716%" y="303.50"></text></g><g><title>unlink_chunk.constprop.0 (266 samples, 0.09%)</title><rect x="59.9729%" y="277" width="0.0949%" height="15" fill="rgb(251,219,26)" fg:x="168046" fg:w="266"/><text x="60.2229%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,053 samples, 1.09%)</title><rect x="58.9890%" y="357" width="1.0896%" height="15" fill="rgb(231,119,3)" fg:x="165289" fg:w="3053"/><text x="59.2390%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,053 samples, 1.09%)</title><rect x="58.9890%" y="341" width="1.0896%" height="15" fill="rgb(216,97,11)" fg:x="165289" fg:w="3053"/><text x="59.2390%" y="351.50"></text></g><g><title>alloc::alloc::alloc (3,051 samples, 1.09%)</title><rect x="58.9897%" y="325" width="1.0889%" height="15" fill="rgb(223,59,9)" fg:x="165291" fg:w="3051"/><text x="59.2397%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,079 samples, 1.10%)</title><rect x="58.9812%" y="421" width="1.0988%" height="15" fill="rgb(233,93,31)" fg:x="165267" fg:w="3079"/><text x="59.2312%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,079 samples, 1.10%)</title><rect x="58.9812%" y="405" width="1.0988%" height="15" fill="rgb(239,81,33)" fg:x="165267" fg:w="3079"/><text x="59.2312%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,064 samples, 1.09%)</title><rect x="58.9865%" y="389" width="1.0935%" height="15" fill="rgb(213,120,34)" fg:x="165282" fg:w="3064"/><text x="59.2365%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3,064 samples, 1.09%)</title><rect x="58.9865%" y="373" width="1.0935%" height="15" fill="rgb(243,49,53)" fg:x="165282" fg:w="3064"/><text x="59.2365%" y="383.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (29 samples, 0.01%)</title><rect x="60.0839%" y="389" width="0.0103%" height="15" fill="rgb(247,216,33)" fg:x="168357" fg:w="29"/><text x="60.3339%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (29 samples, 0.01%)</title><rect x="60.0839%" y="373" width="0.0103%" height="15" fill="rgb(226,26,14)" fg:x="168357" fg:w="29"/><text x="60.3339%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5,114 samples, 1.83%)</title><rect x="58.3209%" y="453" width="1.8251%" height="15" fill="rgb(215,49,53)" fg:x="163417" fg:w="5114"/><text x="58.5709%" y="463.50">&lt;..</text></g><g><title>nom::multi::count::{{closure}} (5,098 samples, 1.82%)</title><rect x="58.3266%" y="437" width="1.8194%" height="15" fill="rgb(245,162,40)" fg:x="163433" fg:w="5098"/><text x="58.5766%" y="447.50">n..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (185 samples, 0.07%)</title><rect x="60.0800%" y="421" width="0.0660%" height="15" fill="rgb(229,68,17)" fg:x="168346" fg:w="185"/><text x="60.3300%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (185 samples, 0.07%)</title><rect x="60.0800%" y="405" width="0.0660%" height="15" fill="rgb(213,182,10)" fg:x="168346" fg:w="185"/><text x="60.3300%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (145 samples, 0.05%)</title><rect x="60.0943%" y="389" width="0.0517%" height="15" fill="rgb(245,125,30)" fg:x="168386" fg:w="145"/><text x="60.3443%" y="399.50"></text></g><g><title>nom::combinator::map::{{closure}} (5,173 samples, 1.85%)</title><rect x="58.3209%" y="469" width="1.8462%" height="15" fill="rgb(232,202,2)" fg:x="163417" fg:w="5173"/><text x="58.5709%" y="479.50">n..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (59 samples, 0.02%)</title><rect x="60.1460%" y="453" width="0.0211%" height="15" fill="rgb(237,140,51)" fg:x="168531" fg:w="59"/><text x="60.3960%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (45 samples, 0.02%)</title><rect x="60.1746%" y="373" width="0.0161%" height="15" fill="rgb(236,157,25)" fg:x="168611" fg:w="45"/><text x="60.4246%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (45 samples, 0.02%)</title><rect x="60.1746%" y="357" width="0.0161%" height="15" fill="rgb(219,209,0)" fg:x="168611" fg:w="45"/><text x="60.4246%" y="367.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i8 (45 samples, 0.02%)</title><rect x="60.1746%" y="341" width="0.0161%" height="15" fill="rgb(240,116,54)" fg:x="168611" fg:w="45"/><text x="60.4246%" y="351.50"></text></g><g><title>nom::number::streaming::be_i8 (45 samples, 0.02%)</title><rect x="60.1746%" y="325" width="0.0161%" height="15" fill="rgb(216,10,36)" fg:x="168611" fg:w="45"/><text x="60.4246%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (45 samples, 0.02%)</title><rect x="60.1746%" y="309" width="0.0161%" height="15" fill="rgb(222,72,44)" fg:x="168611" fg:w="45"/><text x="60.4246%" y="319.50"></text></g><g><title>nom::combinator::map::{{closure}} (45 samples, 0.02%)</title><rect x="60.1746%" y="293" width="0.0161%" height="15" fill="rgb(232,159,9)" fg:x="168611" fg:w="45"/><text x="60.4246%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (45 samples, 0.02%)</title><rect x="60.1746%" y="277" width="0.0161%" height="15" fill="rgb(210,39,32)" fg:x="168611" fg:w="45"/><text x="60.4246%" y="287.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (45 samples, 0.02%)</title><rect x="60.1746%" y="261" width="0.0161%" height="15" fill="rgb(216,194,45)" fg:x="168611" fg:w="45"/><text x="60.4246%" y="271.50"></text></g><g><title>nom::number::streaming::be_u8 (45 samples, 0.02%)</title><rect x="60.1746%" y="245" width="0.0161%" height="15" fill="rgb(218,18,35)" fg:x="168611" fg:w="45"/><text x="60.4246%" y="255.50"></text></g><g><title>hprof_slurp::record_parser::parse_field_type (48 samples, 0.02%)</title><rect x="60.1746%" y="405" width="0.0171%" height="15" fill="rgb(207,83,51)" fg:x="168611" fg:w="48"/><text x="60.4246%" y="415.50"></text></g><g><title>nom::combinator::map::{{closure}} (48 samples, 0.02%)</title><rect x="60.1746%" y="389" width="0.0171%" height="15" fill="rgb(225,63,43)" fg:x="168611" fg:w="48"/><text x="60.4246%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (21,314 samples, 7.61%)</title><rect x="52.5901%" y="501" width="7.6066%" height="15" fill="rgb(207,57,36)" fg:x="147359" fg:w="21314"/><text x="52.8401%" y="511.50">hprof_slur..</text></g><g><title>hprof_slurp::record_parser::parse_gc_primitive_array_dump (5,398 samples, 1.93%)</title><rect x="58.2703%" y="485" width="1.9265%" height="15" fill="rgb(216,99,33)" fg:x="163275" fg:w="5398"/><text x="58.5203%" y="495.50">h..</text></g><g><title>nom::sequence::tuple::{{closure}} (83 samples, 0.03%)</title><rect x="60.1671%" y="469" width="0.0296%" height="15" fill="rgb(225,42,16)" fg:x="168590" fg:w="83"/><text x="60.4171%" y="479.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (83 samples, 0.03%)</title><rect x="60.1671%" y="453" width="0.0296%" height="15" fill="rgb(220,201,45)" fg:x="168590" fg:w="83"/><text x="60.4171%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (83 samples, 0.03%)</title><rect x="60.1671%" y="437" width="0.0296%" height="15" fill="rgb(225,33,4)" fg:x="168590" fg:w="83"/><text x="60.4171%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (83 samples, 0.03%)</title><rect x="60.1671%" y="421" width="0.0296%" height="15" fill="rgb(224,33,50)" fg:x="168590" fg:w="83"/><text x="60.4171%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (31,023 samples, 11.07%)</title><rect x="49.1308%" y="533" width="11.0716%" height="15" fill="rgb(246,198,51)" fg:x="137666" fg:w="31023"/><text x="49.3808%" y="543.50">&lt;F as nom::inter..</text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (30,470 samples, 10.87%)</title><rect x="49.3282%" y="517" width="10.8743%" height="15" fill="rgb(205,22,4)" fg:x="138219" fg:w="30470"/><text x="49.5782%" y="527.50">hprof_slurp::rec..</text></g><g><title>__memcpy_avx_unaligned_erms (22,252 samples, 7.94%)</title><rect x="60.2024%" y="533" width="7.9414%" height="15" fill="rgb(206,3,8)" fg:x="168689" fg:w="22252"/><text x="60.4524%" y="543.50">__memcpy_av..</text></g><g><title>do_munmap (99 samples, 0.04%)</title><rect x="68.5692%" y="277" width="0.0353%" height="15" fill="rgb(251,23,15)" fg:x="192133" fg:w="99"/><text x="68.8192%" y="287.50"></text></g><g><title>__do_munmap (99 samples, 0.04%)</title><rect x="68.5692%" y="261" width="0.0353%" height="15" fill="rgb(252,88,28)" fg:x="192133" fg:w="99"/><text x="68.8192%" y="271.50"></text></g><g><title>unmap_region (95 samples, 0.03%)</title><rect x="68.5706%" y="245" width="0.0339%" height="15" fill="rgb(212,127,14)" fg:x="192137" fg:w="95"/><text x="68.8206%" y="255.50"></text></g><g><title>unmap_vmas (61 samples, 0.02%)</title><rect x="68.5828%" y="229" width="0.0218%" height="15" fill="rgb(247,145,37)" fg:x="192171" fg:w="61"/><text x="68.8328%" y="239.50"></text></g><g><title>unmap_single_vma (61 samples, 0.02%)</title><rect x="68.5828%" y="213" width="0.0218%" height="15" fill="rgb(209,117,53)" fg:x="192171" fg:w="61"/><text x="68.8328%" y="223.50"></text></g><g><title>unmap_page_range (61 samples, 0.02%)</title><rect x="68.5828%" y="197" width="0.0218%" height="15" fill="rgb(212,90,42)" fg:x="192171" fg:w="61"/><text x="68.8328%" y="207.50"></text></g><g><title>zap_pmd_range.isra.0 (60 samples, 0.02%)</title><rect x="68.5831%" y="181" width="0.0214%" height="15" fill="rgb(218,164,37)" fg:x="192172" fg:w="60"/><text x="68.8331%" y="191.50"></text></g><g><title>zap_pte_range (54 samples, 0.02%)</title><rect x="68.5853%" y="165" width="0.0193%" height="15" fill="rgb(246,65,34)" fg:x="192178" fg:w="54"/><text x="68.8353%" y="175.50"></text></g><g><title>clear_page_erms (31 samples, 0.01%)</title><rect x="68.6178%" y="181" width="0.0111%" height="15" fill="rgb(231,100,33)" fg:x="192269" fg:w="31"/><text x="68.8678%" y="191.50"></text></g><g><title>get_page_from_freelist (48 samples, 0.02%)</title><rect x="68.6167%" y="197" width="0.0171%" height="15" fill="rgb(228,126,14)" fg:x="192266" fg:w="48"/><text x="68.8667%" y="207.50"></text></g><g><title>alloc_pages (69 samples, 0.02%)</title><rect x="68.6099%" y="229" width="0.0246%" height="15" fill="rgb(215,173,21)" fg:x="192247" fg:w="69"/><text x="68.8599%" y="239.50"></text></g><g><title>__alloc_pages (69 samples, 0.02%)</title><rect x="68.6099%" y="213" width="0.0246%" height="15" fill="rgb(210,6,40)" fg:x="192247" fg:w="69"/><text x="68.8599%" y="223.50"></text></g><g><title>__pte_alloc (82 samples, 0.03%)</title><rect x="68.6085%" y="261" width="0.0293%" height="15" fill="rgb(212,48,18)" fg:x="192243" fg:w="82"/><text x="68.8585%" y="271.50"></text></g><g><title>pte_alloc_one (80 samples, 0.03%)</title><rect x="68.6092%" y="245" width="0.0286%" height="15" fill="rgb(230,214,11)" fg:x="192245" fg:w="80"/><text x="68.8592%" y="255.50"></text></g><g><title>on_each_cpu_cond_mask (79 samples, 0.03%)</title><rect x="68.8776%" y="213" width="0.0282%" height="15" fill="rgb(254,105,39)" fg:x="192997" fg:w="79"/><text x="69.1276%" y="223.50"></text></g><g><title>smp_call_function_many_cond (74 samples, 0.03%)</title><rect x="68.8793%" y="197" width="0.0264%" height="15" fill="rgb(245,158,5)" fg:x="193002" fg:w="74"/><text x="69.1293%" y="207.50"></text></g><g><title>move_ptes.constprop.0 (724 samples, 0.26%)</title><rect x="68.6477%" y="261" width="0.2584%" height="15" fill="rgb(249,208,11)" fg:x="192353" fg:w="724"/><text x="68.8977%" y="271.50"></text></g><g><title>flush_tlb_mm_range (115 samples, 0.04%)</title><rect x="68.8651%" y="245" width="0.0410%" height="15" fill="rgb(210,39,28)" fg:x="192962" fg:w="115"/><text x="69.1151%" y="255.50"></text></g><g><title>native_flush_tlb_multi (81 samples, 0.03%)</title><rect x="68.8772%" y="229" width="0.0289%" height="15" fill="rgb(211,56,53)" fg:x="192996" fg:w="81"/><text x="69.1272%" y="239.50"></text></g><g><title>move_vma (981 samples, 0.35%)</title><rect x="68.5642%" y="293" width="0.3501%" height="15" fill="rgb(226,201,30)" fg:x="192119" fg:w="981"/><text x="68.8142%" y="303.50"></text></g><g><title>move_page_tables (868 samples, 0.31%)</title><rect x="68.6045%" y="277" width="0.3098%" height="15" fill="rgb(239,101,34)" fg:x="192232" fg:w="868"/><text x="68.8545%" y="287.50"></text></g><g><title>__do_sys_mremap (1,008 samples, 0.36%)</title><rect x="68.5574%" y="309" width="0.3597%" height="15" fill="rgb(226,209,5)" fg:x="192100" fg:w="1008"/><text x="68.8074%" y="319.50"></text></g><g><title>__x64_sys_mremap (1,011 samples, 0.36%)</title><rect x="68.5574%" y="325" width="0.3608%" height="15" fill="rgb(250,105,47)" fg:x="192100" fg:w="1011"/><text x="68.8074%" y="335.50"></text></g><g><title>__mremap (1,017 samples, 0.36%)</title><rect x="68.5564%" y="373" width="0.3630%" height="15" fill="rgb(230,72,3)" fg:x="192097" fg:w="1017"/><text x="68.8064%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,016 samples, 0.36%)</title><rect x="68.5567%" y="357" width="0.3626%" height="15" fill="rgb(232,218,39)" fg:x="192098" fg:w="1016"/><text x="68.8067%" y="367.50"></text></g><g><title>do_syscall_64 (1,014 samples, 0.36%)</title><rect x="68.5574%" y="341" width="0.3619%" height="15" fill="rgb(248,166,6)" fg:x="192100" fg:w="1014"/><text x="68.8074%" y="351.50"></text></g><g><title>down_read_trylock (41 samples, 0.01%)</title><rect x="69.6866%" y="293" width="0.0146%" height="15" fill="rgb(247,89,20)" fg:x="195264" fg:w="41"/><text x="69.9366%" y="303.50"></text></g><g><title>clear_page_erms (343 samples, 0.12%)</title><rect x="69.8122%" y="181" width="0.1224%" height="15" fill="rgb(248,130,54)" fg:x="195616" fg:w="343"/><text x="70.0622%" y="191.50"></text></g><g><title>get_page_from_freelist (602 samples, 0.21%)</title><rect x="69.7973%" y="197" width="0.2148%" height="15" fill="rgb(234,196,4)" fg:x="195574" fg:w="602"/><text x="70.0473%" y="207.50"></text></g><g><title>rmqueue (209 samples, 0.07%)</title><rect x="69.9375%" y="181" width="0.0746%" height="15" fill="rgb(250,143,31)" fg:x="195967" fg:w="209"/><text x="70.1875%" y="191.50"></text></g><g><title>rmqueue_bulk.constprop.0 (171 samples, 0.06%)</title><rect x="69.9511%" y="165" width="0.0610%" height="15" fill="rgb(211,110,34)" fg:x="196005" fg:w="171"/><text x="70.2011%" y="175.50"></text></g><g><title>__alloc_pages (648 samples, 0.23%)</title><rect x="69.7833%" y="213" width="0.2313%" height="15" fill="rgb(215,124,48)" fg:x="195535" fg:w="648"/><text x="70.0333%" y="223.50"></text></g><g><title>alloc_pages_vma (680 samples, 0.24%)</title><rect x="69.7766%" y="229" width="0.2427%" height="15" fill="rgb(216,46,13)" fg:x="195516" fg:w="680"/><text x="70.0266%" y="239.50"></text></g><g><title>__mod_lruvec_state (34 samples, 0.01%)</title><rect x="70.0774%" y="165" width="0.0121%" height="15" fill="rgb(205,184,25)" fg:x="196359" fg:w="34"/><text x="70.3274%" y="175.50"></text></g><g><title>__pagevec_lru_add_fn (166 samples, 0.06%)</title><rect x="70.0435%" y="181" width="0.0592%" height="15" fill="rgb(228,1,10)" fg:x="196264" fg:w="166"/><text x="70.2935%" y="191.50"></text></g><g><title>__pagevec_lru_add (219 samples, 0.08%)</title><rect x="70.0378%" y="197" width="0.0782%" height="15" fill="rgb(213,116,27)" fg:x="196248" fg:w="219"/><text x="70.2878%" y="207.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (242 samples, 0.09%)</title><rect x="70.0299%" y="229" width="0.0864%" height="15" fill="rgb(241,95,50)" fg:x="196226" fg:w="242"/><text x="70.2799%" y="239.50"></text></g><g><title>lru_cache_add (238 samples, 0.08%)</title><rect x="70.0314%" y="213" width="0.0849%" height="15" fill="rgb(238,48,32)" fg:x="196230" fg:w="238"/><text x="70.2814%" y="223.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (106 samples, 0.04%)</title><rect x="70.1256%" y="197" width="0.0378%" height="15" fill="rgb(235,113,49)" fg:x="196494" fg:w="106"/><text x="70.3756%" y="207.50"></text></g><g><title>__mem_cgroup_charge (186 samples, 0.07%)</title><rect x="70.1192%" y="213" width="0.0664%" height="15" fill="rgb(205,127,43)" fg:x="196476" fg:w="186"/><text x="70.3692%" y="223.50"></text></g><g><title>try_charge (61 samples, 0.02%)</title><rect x="70.1638%" y="197" width="0.0218%" height="15" fill="rgb(250,162,2)" fg:x="196601" fg:w="61"/><text x="70.4138%" y="207.50"></text></g><g><title>get_mem_cgroup_from_mm (37 samples, 0.01%)</title><rect x="70.1855%" y="213" width="0.0132%" height="15" fill="rgb(220,13,41)" fg:x="196662" fg:w="37"/><text x="70.4355%" y="223.50"></text></g><g><title>mem_cgroup_charge (245 samples, 0.09%)</title><rect x="70.1163%" y="229" width="0.0874%" height="15" fill="rgb(249,221,25)" fg:x="196468" fg:w="245"/><text x="70.3663%" y="239.50"></text></g><g><title>__mod_lruvec_state (32 samples, 0.01%)</title><rect x="70.2102%" y="197" width="0.0114%" height="15" fill="rgb(215,208,19)" fg:x="196731" fg:w="32"/><text x="70.4602%" y="207.50"></text></g><g><title>__mod_lruvec_page_state (55 samples, 0.02%)</title><rect x="70.2059%" y="213" width="0.0196%" height="15" fill="rgb(236,175,2)" fg:x="196719" fg:w="55"/><text x="70.4559%" y="223.50"></text></g><g><title>page_add_new_anon_rmap (66 samples, 0.02%)</title><rect x="70.2041%" y="229" width="0.0236%" height="15" fill="rgb(241,52,2)" fg:x="196714" fg:w="66"/><text x="70.4541%" y="239.50"></text></g><g><title>do_anonymous_page (1,333 samples, 0.48%)</title><rect x="69.7598%" y="245" width="0.4757%" height="15" fill="rgb(248,140,14)" fg:x="195469" fg:w="1333"/><text x="70.0098%" y="255.50"></text></g><g><title>handle_pte_fault (1,388 samples, 0.50%)</title><rect x="69.7476%" y="261" width="0.4954%" height="15" fill="rgb(253,22,42)" fg:x="195435" fg:w="1388"/><text x="69.9976%" y="271.50"></text></g><g><title>__handle_mm_fault (1,461 samples, 0.52%)</title><rect x="69.7244%" y="277" width="0.5214%" height="15" fill="rgb(234,61,47)" fg:x="195370" fg:w="1461"/><text x="69.9744%" y="287.50"></text></g><g><title>handle_mm_fault (1,530 samples, 0.55%)</title><rect x="69.7055%" y="293" width="0.5460%" height="15" fill="rgb(208,226,15)" fg:x="195317" fg:w="1530"/><text x="69.9555%" y="303.50"></text></g><g><title>up_read (45 samples, 0.02%)</title><rect x="70.2541%" y="293" width="0.0161%" height="15" fill="rgb(217,221,4)" fg:x="196854" fg:w="45"/><text x="70.5041%" y="303.50"></text></g><g><title>do_user_addr_fault (1,671 samples, 0.60%)</title><rect x="69.6741%" y="309" width="0.5964%" height="15" fill="rgb(212,174,34)" fg:x="195229" fg:w="1671"/><text x="69.9241%" y="319.50"></text></g><g><title>irqentry_exit (36 samples, 0.01%)</title><rect x="70.2726%" y="309" width="0.0128%" height="15" fill="rgb(253,83,4)" fg:x="196906" fg:w="36"/><text x="70.5226%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (30 samples, 0.01%)</title><rect x="70.2748%" y="293" width="0.0107%" height="15" fill="rgb(250,195,49)" fg:x="196912" fg:w="30"/><text x="70.5248%" y="303.50"></text></g><g><title>exit_to_user_mode_prepare (30 samples, 0.01%)</title><rect x="70.2748%" y="277" width="0.0107%" height="15" fill="rgb(241,192,25)" fg:x="196912" fg:w="30"/><text x="70.5248%" y="287.50"></text></g><g><title>exc_page_fault (1,734 samples, 0.62%)</title><rect x="69.6670%" y="325" width="0.6188%" height="15" fill="rgb(208,124,10)" fg:x="195209" fg:w="1734"/><text x="69.9170%" y="335.50"></text></g><g><title>asm_exc_page_fault (1,781 samples, 0.64%)</title><rect x="69.6506%" y="341" width="0.6356%" height="15" fill="rgb(222,33,0)" fg:x="195163" fg:w="1781"/><text x="69.9006%" y="351.50"></text></g><g><title>error_entry (54 samples, 0.02%)</title><rect x="70.2883%" y="341" width="0.0193%" height="15" fill="rgb(234,209,28)" fg:x="196950" fg:w="54"/><text x="70.5383%" y="351.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4,114 samples, 1.47%)</title><rect x="68.9197%" y="357" width="1.4682%" height="15" fill="rgb(224,11,23)" fg:x="193115" fg:w="4114"/><text x="69.1697%" y="367.50"></text></g><g><title>sync_regs (223 samples, 0.08%)</title><rect x="70.3083%" y="341" width="0.0796%" height="15" fill="rgb(232,99,1)" fg:x="197006" fg:w="223"/><text x="70.5583%" y="351.50"></text></g><g><title>malloc_consolidate (318 samples, 0.11%)</title><rect x="70.4479%" y="341" width="0.1135%" height="15" fill="rgb(237,95,45)" fg:x="197397" fg:w="318"/><text x="70.6979%" y="351.50"></text></g><g><title>unlink_chunk.constprop.0 (53 samples, 0.02%)</title><rect x="70.5424%" y="325" width="0.0189%" height="15" fill="rgb(208,109,11)" fg:x="197662" fg:w="53"/><text x="70.7924%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5,648 samples, 2.02%)</title><rect x="68.5510%" y="517" width="2.0157%" height="15" fill="rgb(216,190,48)" fg:x="192082" fg:w="5648"/><text x="68.8010%" y="527.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5,648 samples, 2.02%)</title><rect x="68.5510%" y="501" width="2.0157%" height="15" fill="rgb(251,171,36)" fg:x="192082" fg:w="5648"/><text x="68.8010%" y="511.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5,648 samples, 2.02%)</title><rect x="68.5510%" y="485" width="2.0157%" height="15" fill="rgb(230,62,22)" fg:x="192082" fg:w="5648"/><text x="68.8010%" y="495.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5,648 samples, 2.02%)</title><rect x="68.5510%" y="469" width="2.0157%" height="15" fill="rgb(225,114,35)" fg:x="192082" fg:w="5648"/><text x="68.8010%" y="479.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (5,648 samples, 2.02%)</title><rect x="68.5510%" y="453" width="2.0157%" height="15" fill="rgb(215,118,42)" fg:x="192082" fg:w="5648"/><text x="68.8010%" y="463.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5,648 samples, 2.02%)</title><rect x="68.5510%" y="437" width="2.0157%" height="15" fill="rgb(243,119,21)" fg:x="192082" fg:w="5648"/><text x="68.8010%" y="447.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (5,648 samples, 2.02%)</title><rect x="68.5510%" y="421" width="2.0157%" height="15" fill="rgb(252,177,53)" fg:x="192082" fg:w="5648"/><text x="68.8010%" y="431.50">a..</text></g><g><title>alloc::alloc::realloc (5,648 samples, 2.02%)</title><rect x="68.5510%" y="405" width="2.0157%" height="15" fill="rgb(237,209,29)" fg:x="192082" fg:w="5648"/><text x="68.8010%" y="415.50">a..</text></g><g><title>__realloc (5,647 samples, 2.02%)</title><rect x="68.5514%" y="389" width="2.0153%" height="15" fill="rgb(212,65,23)" fg:x="192083" fg:w="5647"/><text x="68.8014%" y="399.50">_..</text></g><g><title>_int_realloc (4,616 samples, 1.65%)</title><rect x="68.9193%" y="373" width="1.6474%" height="15" fill="rgb(230,222,46)" fg:x="193114" fg:w="4616"/><text x="69.1693%" y="383.50"></text></g><g><title>_int_malloc (475 samples, 0.17%)</title><rect x="70.3972%" y="357" width="0.1695%" height="15" fill="rgb(215,135,32)" fg:x="197255" fg:w="475"/><text x="70.6472%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (532 samples, 0.19%)</title><rect x="70.5674%" y="517" width="0.1899%" height="15" fill="rgb(246,101,22)" fg:x="197732" fg:w="532"/><text x="70.8174%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (532 samples, 0.19%)</title><rect x="70.5674%" y="501" width="0.1899%" height="15" fill="rgb(206,107,13)" fg:x="197732" fg:w="532"/><text x="70.8174%" y="511.50"></text></g><g><title>__irqentry_text_end (349 samples, 0.12%)</title><rect x="79.2036%" y="485" width="0.1246%" height="15" fill="rgb(250,100,44)" fg:x="221931" fg:w="349"/><text x="79.4536%" y="495.50"></text></g><g><title>__cond_resched (45 samples, 0.02%)</title><rect x="79.6754%" y="453" width="0.0161%" height="15" fill="rgb(231,147,38)" fg:x="223253" fg:w="45"/><text x="79.9254%" y="463.50"></text></g><g><title>__cond_resched (42 samples, 0.01%)</title><rect x="79.8885%" y="437" width="0.0150%" height="15" fill="rgb(229,8,40)" fg:x="223850" fg:w="42"/><text x="80.1385%" y="447.50"></text></g><g><title>__count_memcg_events (45 samples, 0.02%)</title><rect x="79.9035%" y="437" width="0.0161%" height="15" fill="rgb(221,135,30)" fg:x="223892" fg:w="45"/><text x="80.1535%" y="447.50"></text></g><g><title>down_read_trylock (550 samples, 0.20%)</title><rect x="79.9392%" y="437" width="0.1963%" height="15" fill="rgb(249,193,18)" fg:x="223992" fg:w="550"/><text x="80.1892%" y="447.50"></text></g><g><title>find_vma (277 samples, 0.10%)</title><rect x="80.1355%" y="437" width="0.0989%" height="15" fill="rgb(209,133,39)" fg:x="224542" fg:w="277"/><text x="80.3855%" y="447.50"></text></g><g><title>vmacache_find (202 samples, 0.07%)</title><rect x="80.1622%" y="421" width="0.0721%" height="15" fill="rgb(232,100,14)" fg:x="224617" fg:w="202"/><text x="80.4122%" y="431.50"></text></g><g><title>__count_memcg_events (235 samples, 0.08%)</title><rect x="80.4649%" y="421" width="0.0839%" height="15" fill="rgb(224,185,1)" fg:x="225465" fg:w="235"/><text x="80.7149%" y="431.50"></text></g><g><title>cgroup_rstat_updated (96 samples, 0.03%)</title><rect x="80.5145%" y="405" width="0.0343%" height="15" fill="rgb(223,139,8)" fg:x="225604" fg:w="96"/><text x="80.7645%" y="415.50"></text></g><g><title>_raw_spin_lock (412 samples, 0.15%)</title><rect x="81.1808%" y="389" width="0.1470%" height="15" fill="rgb(232,213,38)" fg:x="227471" fg:w="412"/><text x="81.4308%" y="399.50"></text></g><g><title>add_mm_counter_fast (39 samples, 0.01%)</title><rect x="81.3278%" y="389" width="0.0139%" height="15" fill="rgb(207,94,22)" fg:x="227883" fg:w="39"/><text x="81.5778%" y="399.50"></text></g><g><title>alloc_pages_vma (33 samples, 0.01%)</title><rect x="81.3417%" y="389" width="0.0118%" height="15" fill="rgb(219,183,54)" fg:x="227922" fg:w="33"/><text x="81.5917%" y="399.50"></text></g><g><title>__get_vma_policy (65 samples, 0.02%)</title><rect x="81.6119%" y="373" width="0.0232%" height="15" fill="rgb(216,185,54)" fg:x="228679" fg:w="65"/><text x="81.8619%" y="383.50"></text></g><g><title>__mem_cgroup_charge (38 samples, 0.01%)</title><rect x="81.6351%" y="373" width="0.0136%" height="15" fill="rgb(254,217,39)" fg:x="228744" fg:w="38"/><text x="81.8851%" y="383.50"></text></g><g><title>__mod_lruvec_page_state (44 samples, 0.02%)</title><rect x="81.6487%" y="373" width="0.0157%" height="15" fill="rgb(240,178,23)" fg:x="228782" fg:w="44"/><text x="81.8987%" y="383.50"></text></g><g><title>__page_set_anon_rmap (48 samples, 0.02%)</title><rect x="81.6644%" y="373" width="0.0171%" height="15" fill="rgb(218,11,47)" fg:x="228826" fg:w="48"/><text x="81.9144%" y="383.50"></text></g><g><title>clear_page_erms (31 samples, 0.01%)</title><rect x="81.6886%" y="293" width="0.0111%" height="15" fill="rgb(218,51,51)" fg:x="228894" fg:w="31"/><text x="81.9386%" y="303.50"></text></g><g><title>get_page_from_freelist (49 samples, 0.02%)</title><rect x="81.6879%" y="309" width="0.0175%" height="15" fill="rgb(238,126,27)" fg:x="228892" fg:w="49"/><text x="81.9379%" y="319.50"></text></g><g><title>__alloc_pages (64 samples, 0.02%)</title><rect x="81.6829%" y="325" width="0.0228%" height="15" fill="rgb(249,202,22)" fg:x="228878" fg:w="64"/><text x="81.9329%" y="335.50"></text></g><g><title>alloc_pages (66 samples, 0.02%)</title><rect x="81.6826%" y="341" width="0.0236%" height="15" fill="rgb(254,195,49)" fg:x="228877" fg:w="66"/><text x="81.9326%" y="351.50"></text></g><g><title>__pte_alloc (78 samples, 0.03%)</title><rect x="81.6815%" y="373" width="0.0278%" height="15" fill="rgb(208,123,14)" fg:x="228874" fg:w="78"/><text x="81.9315%" y="383.50"></text></g><g><title>pte_alloc_one (75 samples, 0.03%)</title><rect x="81.6826%" y="357" width="0.0268%" height="15" fill="rgb(224,200,8)" fg:x="228877" fg:w="75"/><text x="81.9326%" y="367.50"></text></g><g><title>clear_page_erms (89 samples, 0.03%)</title><rect x="82.1101%" y="309" width="0.0318%" height="15" fill="rgb(217,61,36)" fg:x="230075" fg:w="89"/><text x="82.3601%" y="319.50"></text></g><g><title>get_page_from_freelist (125 samples, 0.04%)</title><rect x="82.1065%" y="325" width="0.0446%" height="15" fill="rgb(206,35,45)" fg:x="230065" fg:w="125"/><text x="82.3565%" y="335.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (142 samples, 0.05%)</title><rect x="82.1058%" y="341" width="0.0507%" height="15" fill="rgb(217,65,33)" fg:x="230063" fg:w="142"/><text x="82.3558%" y="351.50"></text></g><g><title>__cond_resched (68 samples, 0.02%)</title><rect x="82.1565%" y="341" width="0.0243%" height="15" fill="rgb(222,158,48)" fg:x="230205" fg:w="68"/><text x="82.4065%" y="351.50"></text></g><g><title>__next_zones_zonelist (334 samples, 0.12%)</title><rect x="82.1808%" y="341" width="0.1192%" height="15" fill="rgb(254,2,54)" fg:x="230273" fg:w="334"/><text x="82.4308%" y="351.50"></text></g><g><title>__inc_numa_state (142 samples, 0.05%)</title><rect x="82.6194%" y="325" width="0.0507%" height="15" fill="rgb(250,143,38)" fg:x="231502" fg:w="142"/><text x="82.8694%" y="335.50"></text></g><g><title>clear_page_erms (8,445 samples, 3.01%)</title><rect x="82.6786%" y="325" width="3.0139%" height="15" fill="rgb(248,25,0)" fg:x="231668" fg:w="8445"/><text x="82.9286%" y="335.50">cle..</text></g><g><title>kernel_init_free_pages (138 samples, 0.05%)</title><rect x="85.6925%" y="325" width="0.0493%" height="15" fill="rgb(206,152,27)" fg:x="240113" fg:w="138"/><text x="85.9425%" y="335.50"></text></g><g><title>_raw_spin_lock (42 samples, 0.01%)</title><rect x="87.4245%" y="293" width="0.0150%" height="15" fill="rgb(240,77,30)" fg:x="244966" fg:w="42"/><text x="87.6745%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath (42 samples, 0.01%)</title><rect x="87.4245%" y="277" width="0.0150%" height="15" fill="rgb(231,5,3)" fg:x="244966" fg:w="42"/><text x="87.6745%" y="287.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (42 samples, 0.01%)</title><rect x="87.4245%" y="261" width="0.0150%" height="15" fill="rgb(207,226,32)" fg:x="244966" fg:w="42"/><text x="87.6745%" y="271.50"></text></g><g><title>rmqueue (4,758 samples, 1.70%)</title><rect x="85.7418%" y="325" width="1.6981%" height="15" fill="rgb(222,207,47)" fg:x="240251" fg:w="4758"/><text x="85.9918%" y="335.50"></text></g><g><title>rmqueue_bulk.constprop.0 (3,733 samples, 1.33%)</title><rect x="86.1076%" y="309" width="1.3322%" height="15" fill="rgb(229,115,45)" fg:x="241276" fg:w="3733"/><text x="86.3576%" y="319.50"></text></g><g><title>get_page_from_freelist (14,395 samples, 5.14%)</title><rect x="82.3028%" y="341" width="5.1373%" height="15" fill="rgb(224,191,6)" fg:x="230615" fg:w="14395"/><text x="82.5528%" y="351.50">get_pa..</text></g><g><title>kernel_init_free_pages (49 samples, 0.02%)</title><rect x="87.4402%" y="341" width="0.0175%" height="15" fill="rgb(230,227,24)" fg:x="245010" fg:w="49"/><text x="87.6902%" y="351.50"></text></g><g><title>rcu_all_qs (38 samples, 0.01%)</title><rect x="87.4577%" y="341" width="0.0136%" height="15" fill="rgb(228,80,19)" fg:x="245059" fg:w="38"/><text x="87.7077%" y="351.50"></text></g><g><title>__alloc_pages (15,717 samples, 5.61%)</title><rect x="81.8671%" y="357" width="5.6091%" height="15" fill="rgb(247,229,0)" fg:x="229394" fg:w="15717"/><text x="82.1171%" y="367.50">__alloc..</text></g><g><title>__cond_resched (51 samples, 0.02%)</title><rect x="87.4762%" y="357" width="0.0182%" height="15" fill="rgb(237,194,15)" fg:x="245111" fg:w="51"/><text x="87.7262%" y="367.50"></text></g><g><title>__next_zones_zonelist (80 samples, 0.03%)</title><rect x="87.4944%" y="357" width="0.0286%" height="15" fill="rgb(219,203,20)" fg:x="245162" fg:w="80"/><text x="87.7444%" y="367.50"></text></g><g><title>get_page_from_freelist (30 samples, 0.01%)</title><rect x="87.5230%" y="357" width="0.0107%" height="15" fill="rgb(234,128,8)" fg:x="245242" fg:w="30"/><text x="87.7730%" y="367.50"></text></g><g><title>policy_nodemask (48 samples, 0.02%)</title><rect x="87.5415%" y="357" width="0.0171%" height="15" fill="rgb(248,202,8)" fg:x="245294" fg:w="48"/><text x="87.7915%" y="367.50"></text></g><g><title>alloc_pages_vma (16,426 samples, 5.86%)</title><rect x="81.7093%" y="373" width="5.8622%" height="15" fill="rgb(206,104,37)" fg:x="228952" fg:w="16426"/><text x="81.9593%" y="383.50">alloc_p..</text></g><g><title>should_fail_alloc_page (36 samples, 0.01%)</title><rect x="87.5587%" y="357" width="0.0128%" height="15" fill="rgb(223,8,27)" fg:x="245342" fg:w="36"/><text x="87.8087%" y="367.50"></text></g><g><title>cgroup_throttle_swaprate (724 samples, 0.26%)</title><rect x="87.5715%" y="373" width="0.2584%" height="15" fill="rgb(216,217,28)" fg:x="245378" fg:w="724"/><text x="87.8215%" y="383.50"></text></g><g><title>get_mem_cgroup_from_mm (68 samples, 0.02%)</title><rect x="87.8299%" y="373" width="0.0243%" height="15" fill="rgb(249,199,1)" fg:x="246102" fg:w="68"/><text x="88.0799%" y="383.50"></text></g><g><title>kthread_blkcg (30 samples, 0.01%)</title><rect x="87.8542%" y="373" width="0.0107%" height="15" fill="rgb(240,85,17)" fg:x="246170" fg:w="30"/><text x="88.1042%" y="383.50"></text></g><g><title>lru_cache_add (37 samples, 0.01%)</title><rect x="87.8649%" y="373" width="0.0132%" height="15" fill="rgb(206,108,45)" fg:x="246200" fg:w="37"/><text x="88.1149%" y="383.50"></text></g><g><title>__mod_lruvec_state (35 samples, 0.01%)</title><rect x="88.1522%" y="325" width="0.0125%" height="15" fill="rgb(245,210,41)" fg:x="247005" fg:w="35"/><text x="88.4022%" y="335.50"></text></g><g><title>__mod_zone_page_state (61 samples, 0.02%)</title><rect x="88.1647%" y="325" width="0.0218%" height="15" fill="rgb(206,13,37)" fg:x="247040" fg:w="61"/><text x="88.4147%" y="335.50"></text></g><g><title>__mod_memcg_state.part.0 (77 samples, 0.03%)</title><rect x="88.8695%" y="277" width="0.0275%" height="15" fill="rgb(250,61,18)" fg:x="249015" fg:w="77"/><text x="89.1195%" y="287.50"></text></g><g><title>cgroup_rstat_updated (63 samples, 0.02%)</title><rect x="88.8745%" y="261" width="0.0225%" height="15" fill="rgb(235,172,48)" fg:x="249029" fg:w="63"/><text x="89.1245%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (386 samples, 0.14%)</title><rect x="88.7656%" y="293" width="0.1378%" height="15" fill="rgb(249,201,17)" fg:x="248724" fg:w="386"/><text x="89.0156%" y="303.50"></text></g><g><title>__mod_memcg_state.part.0 (40 samples, 0.01%)</title><rect x="88.9034%" y="293" width="0.0143%" height="15" fill="rgb(219,208,6)" fg:x="249110" fg:w="40"/><text x="89.1534%" y="303.50"></text></g><g><title>__mod_lruvec_state (578 samples, 0.21%)</title><rect x="88.7392%" y="309" width="0.2063%" height="15" fill="rgb(248,31,23)" fg:x="248650" fg:w="578"/><text x="88.9892%" y="319.50"></text></g><g><title>__mod_node_page_state (78 samples, 0.03%)</title><rect x="88.9177%" y="293" width="0.0278%" height="15" fill="rgb(245,15,42)" fg:x="249150" fg:w="78"/><text x="89.1677%" y="303.50"></text></g><g><title>__mod_node_page_state (73 samples, 0.03%)</title><rect x="88.9537%" y="309" width="0.0261%" height="15" fill="rgb(222,217,39)" fg:x="249251" fg:w="73"/><text x="89.2037%" y="319.50"></text></g><g><title>__mod_zone_page_state (66 samples, 0.02%)</title><rect x="88.9798%" y="309" width="0.0236%" height="15" fill="rgb(210,219,27)" fg:x="249324" fg:w="66"/><text x="89.2298%" y="319.50"></text></g><g><title>mem_cgroup_update_lru_size (110 samples, 0.04%)</title><rect x="89.0033%" y="309" width="0.0393%" height="15" fill="rgb(252,166,36)" fg:x="249390" fg:w="110"/><text x="89.2533%" y="319.50"></text></g><g><title>__pagevec_lru_add_fn (2,740 samples, 0.98%)</title><rect x="88.1864%" y="325" width="0.9779%" height="15" fill="rgb(245,132,34)" fg:x="247101" fg:w="2740"/><text x="88.4364%" y="335.50"></text></g><g><title>page_mapping (341 samples, 0.12%)</title><rect x="89.0426%" y="309" width="0.1217%" height="15" fill="rgb(236,54,3)" fg:x="249500" fg:w="341"/><text x="89.2926%" y="319.50"></text></g><g><title>_raw_spin_lock_irqsave (203 samples, 0.07%)</title><rect x="89.1803%" y="309" width="0.0724%" height="15" fill="rgb(241,173,43)" fg:x="249886" fg:w="203"/><text x="89.4303%" y="319.50"></text></g><g><title>native_queued_spin_lock_slowpath (122 samples, 0.04%)</title><rect x="89.2093%" y="293" width="0.0435%" height="15" fill="rgb(215,190,9)" fg:x="249967" fg:w="122"/><text x="89.4593%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (122 samples, 0.04%)</title><rect x="89.2093%" y="277" width="0.0435%" height="15" fill="rgb(242,101,16)" fg:x="249967" fg:w="122"/><text x="89.4593%" y="287.50"></text></g><g><title>lock_page_lruvec_irqsave (244 samples, 0.09%)</title><rect x="89.1664%" y="325" width="0.0871%" height="15" fill="rgb(223,190,21)" fg:x="249847" fg:w="244"/><text x="89.4164%" y="335.50"></text></g><g><title>__pagevec_lru_add (3,810 samples, 1.36%)</title><rect x="88.0883%" y="341" width="1.3597%" height="15" fill="rgb(215,228,25)" fg:x="246826" fg:w="3810"/><text x="88.3383%" y="351.50"></text></g><g><title>release_pages (481 samples, 0.17%)</title><rect x="89.2763%" y="325" width="0.1717%" height="15" fill="rgb(225,36,22)" fg:x="250155" fg:w="481"/><text x="89.5263%" y="335.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (4,432 samples, 1.58%)</title><rect x="87.8781%" y="373" width="1.5817%" height="15" fill="rgb(251,106,46)" fg:x="246237" fg:w="4432"/><text x="88.1281%" y="383.50"></text></g><g><title>lru_cache_add (4,377 samples, 1.56%)</title><rect x="87.8977%" y="357" width="1.5621%" height="15" fill="rgb(208,90,1)" fg:x="246292" fg:w="4377"/><text x="88.1477%" y="367.50"></text></g><g><title>arch_local_irq_enable (73 samples, 0.03%)</title><rect x="89.7085%" y="341" width="0.0261%" height="15" fill="rgb(243,10,4)" fg:x="251366" fg:w="73"/><text x="89.9585%" y="351.50"></text></g><g><title>cgroup_rstat_updated (50 samples, 0.02%)</title><rect x="89.7378%" y="341" width="0.0178%" height="15" fill="rgb(212,137,27)" fg:x="251448" fg:w="50"/><text x="89.9878%" y="351.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (2,657 samples, 0.95%)</title><rect x="89.7556%" y="341" width="0.9482%" height="15" fill="rgb(231,220,49)" fg:x="251498" fg:w="2657"/><text x="90.0056%" y="351.50"></text></g><g><title>cgroup_rstat_updated (168 samples, 0.06%)</title><rect x="90.6439%" y="325" width="0.0600%" height="15" fill="rgb(237,96,20)" fg:x="253987" fg:w="168"/><text x="90.8939%" y="335.50"></text></g><g><title>memcg_check_events (30 samples, 0.01%)</title><rect x="90.7039%" y="341" width="0.0107%" height="15" fill="rgb(239,229,30)" fg:x="254155" fg:w="30"/><text x="90.9539%" y="351.50"></text></g><g><title>arch_local_irq_enable (83 samples, 0.03%)</title><rect x="91.1343%" y="325" width="0.0296%" height="15" fill="rgb(219,65,33)" fg:x="255361" fg:w="83"/><text x="91.3843%" y="335.50"></text></g><g><title>page_counter_try_charge (182 samples, 0.06%)</title><rect x="91.1639%" y="325" width="0.0650%" height="15" fill="rgb(243,134,7)" fg:x="255444" fg:w="182"/><text x="91.4139%" y="335.50"></text></g><g><title>__mem_cgroup_charge (4,771 samples, 1.70%)</title><rect x="89.5301%" y="357" width="1.7027%" height="15" fill="rgb(216,177,54)" fg:x="250866" fg:w="4771"/><text x="89.7801%" y="367.50"></text></g><g><title>try_charge (1,446 samples, 0.52%)</title><rect x="90.7167%" y="341" width="0.5161%" height="15" fill="rgb(211,160,20)" fg:x="254191" fg:w="1446"/><text x="90.9667%" y="351.50"></text></g><g><title>get_mem_cgroup_from_mm (661 samples, 0.24%)</title><rect x="91.2335%" y="357" width="0.2359%" height="15" fill="rgb(239,85,39)" fg:x="255639" fg:w="661"/><text x="91.4835%" y="367.50"></text></g><g><title>memcg_check_events (131 samples, 0.05%)</title><rect x="91.4787%" y="357" width="0.0468%" height="15" fill="rgb(232,125,22)" fg:x="256326" fg:w="131"/><text x="91.7287%" y="367.50"></text></g><g><title>rcu_read_unlock_strict (139 samples, 0.05%)</title><rect x="91.5254%" y="357" width="0.0496%" height="15" fill="rgb(244,57,34)" fg:x="256457" fg:w="139"/><text x="91.7754%" y="367.50"></text></g><g><title>mem_cgroup_charge (5,953 samples, 2.12%)</title><rect x="89.4598%" y="373" width="2.1245%" height="15" fill="rgb(214,203,32)" fg:x="250669" fg:w="5953"/><text x="89.7098%" y="383.50">m..</text></g><g><title>__mod_memcg_state.part.0 (59 samples, 0.02%)</title><rect x="91.8523%" y="309" width="0.0211%" height="15" fill="rgb(207,58,43)" fg:x="257373" fg:w="59"/><text x="92.1023%" y="319.50"></text></g><g><title>cgroup_rstat_updated (47 samples, 0.02%)</title><rect x="91.8566%" y="293" width="0.0168%" height="15" fill="rgb(215,193,15)" fg:x="257385" fg:w="47"/><text x="92.1066%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (392 samples, 0.14%)</title><rect x="91.7417%" y="325" width="0.1399%" height="15" fill="rgb(232,15,44)" fg:x="257063" fg:w="392"/><text x="91.9917%" y="335.50"></text></g><g><title>__mod_memcg_state.part.0 (62 samples, 0.02%)</title><rect x="91.8816%" y="325" width="0.0221%" height="15" fill="rgb(212,3,48)" fg:x="257455" fg:w="62"/><text x="92.1316%" y="335.50"></text></g><g><title>__mod_lruvec_state (687 samples, 0.25%)</title><rect x="91.7139%" y="341" width="0.2452%" height="15" fill="rgb(218,128,7)" fg:x="256985" fg:w="687"/><text x="91.9639%" y="351.50"></text></g><g><title>__mod_node_page_state (155 samples, 0.06%)</title><rect x="91.9037%" y="325" width="0.0553%" height="15" fill="rgb(226,216,39)" fg:x="257517" fg:w="155"/><text x="92.1537%" y="335.50"></text></g><g><title>__mod_node_page_state (109 samples, 0.04%)</title><rect x="91.9680%" y="341" width="0.0389%" height="15" fill="rgb(243,47,51)" fg:x="257697" fg:w="109"/><text x="92.2180%" y="351.50"></text></g><g><title>__mod_lruvec_page_state (1,016 samples, 0.36%)</title><rect x="91.6468%" y="357" width="0.3626%" height="15" fill="rgb(241,183,40)" fg:x="256797" fg:w="1016"/><text x="91.8968%" y="367.50"></text></g><g><title>__page_set_anon_rmap (92 samples, 0.03%)</title><rect x="92.0154%" y="357" width="0.0328%" height="15" fill="rgb(231,217,32)" fg:x="257830" fg:w="92"/><text x="92.2654%" y="367.50"></text></g><g><title>page_add_new_anon_rmap (1,294 samples, 0.46%)</title><rect x="91.5932%" y="373" width="0.4618%" height="15" fill="rgb(229,61,38)" fg:x="256647" fg:w="1294"/><text x="91.8432%" y="383.50"></text></g><g><title>pfn_pte (37 samples, 0.01%)</title><rect x="92.0550%" y="373" width="0.0132%" height="15" fill="rgb(225,210,5)" fg:x="257941" fg:w="37"/><text x="92.3050%" y="383.50"></text></g><g><title>pmd_page_vaddr (109 samples, 0.04%)</title><rect x="92.0683%" y="373" width="0.0389%" height="15" fill="rgb(231,79,45)" fg:x="257978" fg:w="109"/><text x="92.3183%" y="383.50"></text></g><g><title>pmd_pfn (90 samples, 0.03%)</title><rect x="92.1072%" y="373" width="0.0321%" height="15" fill="rgb(224,100,7)" fg:x="258087" fg:w="90"/><text x="92.3572%" y="383.50"></text></g><g><title>pmd_val (57 samples, 0.02%)</title><rect x="92.1393%" y="373" width="0.0203%" height="15" fill="rgb(241,198,18)" fg:x="258177" fg:w="57"/><text x="92.3893%" y="383.50"></text></g><g><title>policy_node (29 samples, 0.01%)</title><rect x="92.1596%" y="373" width="0.0103%" height="15" fill="rgb(252,97,53)" fg:x="258234" fg:w="29"/><text x="92.4096%" y="383.50"></text></g><g><title>rcu_read_unlock_strict (35 samples, 0.01%)</title><rect x="92.1839%" y="373" width="0.0125%" height="15" fill="rgb(220,88,7)" fg:x="258302" fg:w="35"/><text x="92.4339%" y="383.50"></text></g><g><title>do_anonymous_page (30,371 samples, 10.84%)</title><rect x="81.3617%" y="389" width="10.8389%" height="15" fill="rgb(213,176,14)" fg:x="227978" fg:w="30371"/><text x="81.6117%" y="399.50">do_anonymous_page</text></g><g><title>pfn_pte (45 samples, 0.02%)</title><rect x="92.2224%" y="389" width="0.0161%" height="15" fill="rgb(246,73,7)" fg:x="258410" fg:w="45"/><text x="92.4724%" y="399.50"></text></g><g><title>pmd_page_vaddr (123 samples, 0.04%)</title><rect x="92.2385%" y="389" width="0.0439%" height="15" fill="rgb(245,64,36)" fg:x="258455" fg:w="123"/><text x="92.4885%" y="399.50"></text></g><g><title>pmd_pfn (48 samples, 0.02%)</title><rect x="92.2824%" y="389" width="0.0171%" height="15" fill="rgb(245,80,10)" fg:x="258578" fg:w="48"/><text x="92.5324%" y="399.50"></text></g><g><title>pmd_val (118 samples, 0.04%)</title><rect x="92.2995%" y="389" width="0.0421%" height="15" fill="rgb(232,107,50)" fg:x="258626" fg:w="118"/><text x="92.5495%" y="399.50"></text></g><g><title>handle_pte_fault (31,728 samples, 11.32%)</title><rect x="81.0295%" y="405" width="11.3232%" height="15" fill="rgb(253,3,0)" fg:x="227047" fg:w="31728"/><text x="81.2795%" y="415.50">handle_pte_fault</text></g><g><title>pmd_val (85 samples, 0.03%)</title><rect x="92.3595%" y="405" width="0.0303%" height="15" fill="rgb(212,99,53)" fg:x="258794" fg:w="85"/><text x="92.6095%" y="415.50"></text></g><g><title>__handle_mm_fault (33,261 samples, 11.87%)</title><rect x="80.5487%" y="421" width="11.8703%" height="15" fill="rgb(249,111,54)" fg:x="225700" fg:w="33261"/><text x="80.7987%" y="431.50">__handle_mm_fault</text></g><g><title>pud_val (82 samples, 0.03%)</title><rect x="92.3898%" y="405" width="0.0293%" height="15" fill="rgb(249,55,30)" fg:x="258879" fg:w="82"/><text x="92.6398%" y="415.50"></text></g><g><title>handle_pte_fault (35 samples, 0.01%)</title><rect x="92.4291%" y="421" width="0.0125%" height="15" fill="rgb(237,47,42)" fg:x="258989" fg:w="35"/><text x="92.6791%" y="431.50"></text></g><g><title>mem_cgroup_from_task (41 samples, 0.01%)</title><rect x="92.4416%" y="421" width="0.0146%" height="15" fill="rgb(211,20,18)" fg:x="259024" fg:w="41"/><text x="92.6916%" y="431.50"></text></g><g><title>pmd_val (38 samples, 0.01%)</title><rect x="92.4755%" y="421" width="0.0136%" height="15" fill="rgb(231,203,46)" fg:x="259119" fg:w="38"/><text x="92.7255%" y="431.50"></text></g><g><title>pud_val (97 samples, 0.03%)</title><rect x="92.4890%" y="421" width="0.0346%" height="15" fill="rgb(237,142,3)" fg:x="259157" fg:w="97"/><text x="92.7390%" y="431.50"></text></g><g><title>handle_mm_fault (34,475 samples, 12.30%)</title><rect x="80.2343%" y="437" width="12.3036%" height="15" fill="rgb(241,107,1)" fg:x="224819" fg:w="34475"/><text x="80.4843%" y="447.50">handle_mm_fault</text></g><g><title>mem_cgroup_from_task (88 samples, 0.03%)</title><rect x="92.5379%" y="437" width="0.0314%" height="15" fill="rgb(229,83,13)" fg:x="259294" fg:w="88"/><text x="92.7879%" y="447.50"></text></g><g><title>rcu_all_qs (36 samples, 0.01%)</title><rect x="92.5693%" y="437" width="0.0128%" height="15" fill="rgb(241,91,40)" fg:x="259382" fg:w="36"/><text x="92.8193%" y="447.50"></text></g><g><title>up_read (674 samples, 0.24%)</title><rect x="92.5904%" y="437" width="0.2405%" height="15" fill="rgb(225,3,45)" fg:x="259441" fg:w="674"/><text x="92.8404%" y="447.50"></text></g><g><title>do_user_addr_fault (36,839 samples, 13.15%)</title><rect x="79.6926%" y="453" width="13.1473%" height="15" fill="rgb(244,223,14)" fg:x="223301" fg:w="36839"/><text x="79.9426%" y="463.50">do_user_addr_fault</text></g><g><title>down_read_trylock (44 samples, 0.02%)</title><rect x="92.8398%" y="453" width="0.0157%" height="15" fill="rgb(224,124,37)" fg:x="260140" fg:w="44"/><text x="93.0898%" y="463.50"></text></g><g><title>handle_mm_fault (43 samples, 0.02%)</title><rect x="92.8655%" y="453" width="0.0153%" height="15" fill="rgb(251,171,30)" fg:x="260212" fg:w="43"/><text x="93.1155%" y="463.50"></text></g><g><title>irqentry_enter (35 samples, 0.01%)</title><rect x="92.8809%" y="453" width="0.0125%" height="15" fill="rgb(236,46,54)" fg:x="260255" fg:w="35"/><text x="93.1309%" y="463.50"></text></g><g><title>exit_to_user_mode_prepare (45 samples, 0.02%)</title><rect x="92.9151%" y="437" width="0.0161%" height="15" fill="rgb(245,213,5)" fg:x="260351" fg:w="45"/><text x="93.1651%" y="447.50"></text></g><g><title>exit_to_user_mode_prepare (446 samples, 0.16%)</title><rect x="92.9376%" y="421" width="0.1592%" height="15" fill="rgb(230,144,27)" fg:x="260414" fg:w="446"/><text x="93.1876%" y="431.50"></text></g><g><title>fpregs_assert_state_consistent (60 samples, 0.02%)</title><rect x="93.0754%" y="405" width="0.0214%" height="15" fill="rgb(220,86,6)" fg:x="260800" fg:w="60"/><text x="93.3254%" y="415.50"></text></g><g><title>irqentry_exit (578 samples, 0.21%)</title><rect x="92.9034%" y="453" width="0.2063%" height="15" fill="rgb(240,20,13)" fg:x="260318" fg:w="578"/><text x="93.1534%" y="463.50"></text></g><g><title>irqentry_exit_to_user_mode (500 samples, 0.18%)</title><rect x="92.9312%" y="437" width="0.1784%" height="15" fill="rgb(217,89,34)" fg:x="260396" fg:w="500"/><text x="93.1812%" y="447.50"></text></g><g><title>fpregs_assert_state_consistent (36 samples, 0.01%)</title><rect x="93.0968%" y="421" width="0.0128%" height="15" fill="rgb(229,13,5)" fg:x="260860" fg:w="36"/><text x="93.3468%" y="431.50"></text></g><g><title>exc_page_fault (38,040 samples, 13.58%)</title><rect x="79.5480%" y="469" width="13.5759%" height="15" fill="rgb(244,67,35)" fg:x="222896" fg:w="38040"/><text x="79.7980%" y="479.50">exc_page_fault</text></g><g><title>asm_exc_page_fault (38,693 samples, 13.81%)</title><rect x="79.3282%" y="485" width="13.8089%" height="15" fill="rgb(221,40,2)" fg:x="222280" fg:w="38693"/><text x="79.5782%" y="495.50">asm_exc_page_fault</text></g><g><title>asm_sysvec_apic_timer_interrupt (34 samples, 0.01%)</title><rect x="93.1371%" y="485" width="0.0121%" height="15" fill="rgb(237,157,21)" fg:x="260973" fg:w="34"/><text x="93.3871%" y="495.50"></text></g><g><title>sysvec_apic_timer_interrupt (34 samples, 0.01%)</title><rect x="93.1371%" y="469" width="0.0121%" height="15" fill="rgb(222,94,11)" fg:x="260973" fg:w="34"/><text x="93.3871%" y="479.50"></text></g><g><title>error_entry (905 samples, 0.32%)</title><rect x="93.1496%" y="485" width="0.3230%" height="15" fill="rgb(249,113,6)" fg:x="261008" fg:w="905"/><text x="93.3996%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned_erms (68,191 samples, 24.34%)</title><rect x="70.7694%" y="501" width="24.3363%" height="15" fill="rgb(238,137,36)" fg:x="198298" fg:w="68191"/><text x="71.0194%" y="511.50">__memcpy_avx_unaligned_erms</text></g><g><title>sync_regs (4,538 samples, 1.62%)</title><rect x="93.4862%" y="485" width="1.6195%" height="15" fill="rgb(210,102,26)" fg:x="261951" fg:w="4538"/><text x="93.7362%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (75,553 samples, 26.96%)</title><rect x="68.1438%" y="533" width="26.9637%" height="15" fill="rgb(218,30,30)" fg:x="190941" fg:w="75553"/><text x="68.3938%" y="543.50">alloc::vec::Vec&lt;T,A&gt;::push</text></g><g><title>core::ptr::write (68,230 samples, 24.35%)</title><rect x="70.7573%" y="517" width="24.3502%" height="15" fill="rgb(214,67,26)" fg:x="198264" fg:w="68230"/><text x="71.0073%" y="527.50">core::ptr::write</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (555 samples, 0.20%)</title><rect x="95.1089%" y="533" width="0.1981%" height="15" fill="rgb(251,9,53)" fg:x="266498" fg:w="555"/><text x="95.3589%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (555 samples, 0.20%)</title><rect x="95.1089%" y="517" width="0.1981%" height="15" fill="rgb(228,204,25)" fg:x="266498" fg:w="555"/><text x="95.3589%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (555 samples, 0.20%)</title><rect x="95.1089%" y="501" width="0.1981%" height="15" fill="rgb(207,153,8)" fg:x="266498" fg:w="555"/><text x="95.3589%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (130,587 samples, 46.60%)</title><rect x="48.7029%" y="565" width="46.6044%" height="15" fill="rgb(242,9,16)" fg:x="136467" fg:w="130587"/><text x="48.9529%" y="575.50">hprof_slurp::record_parser::HprofRecordParser::parse_streaming</text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (130,587 samples, 46.60%)</title><rect x="48.7029%" y="549" width="46.6044%" height="15" fill="rgb(217,211,10)" fg:x="136467" fg:w="130587"/><text x="48.9529%" y="559.50">hprof_slurp::record_parser::lazy_many1::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (40 samples, 0.01%)</title><rect x="95.3216%" y="373" width="0.0143%" height="15" fill="rgb(219,228,52)" fg:x="267094" fg:w="40"/><text x="95.5716%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (40 samples, 0.01%)</title><rect x="95.3216%" y="357" width="0.0143%" height="15" fill="rgb(231,92,29)" fg:x="267094" fg:w="40"/><text x="95.5716%" y="367.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (40 samples, 0.01%)</title><rect x="95.3216%" y="341" width="0.0143%" height="15" fill="rgb(232,8,23)" fg:x="267094" fg:w="40"/><text x="95.5716%" y="351.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (40 samples, 0.01%)</title><rect x="95.3216%" y="325" width="0.0143%" height="15" fill="rgb(216,211,34)" fg:x="267094" fg:w="40"/><text x="95.5716%" y="335.50"></text></g><g><title>nom::number::streaming::be_u64 (40 samples, 0.01%)</title><rect x="95.3216%" y="309" width="0.0143%" height="15" fill="rgb(236,151,0)" fg:x="267094" fg:w="40"/><text x="95.5716%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.01%)</title><rect x="95.3255%" y="293" width="0.0103%" height="15" fill="rgb(209,168,3)" fg:x="267105" fg:w="29"/><text x="95.5755%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.01%)</title><rect x="95.3255%" y="277" width="0.0103%" height="15" fill="rgb(208,129,28)" fg:x="267105" fg:w="29"/><text x="95.5755%" y="287.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (29 samples, 0.01%)</title><rect x="95.3255%" y="261" width="0.0103%" height="15" fill="rgb(229,78,22)" fg:x="267105" fg:w="29"/><text x="95.5755%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (38 samples, 0.01%)</title><rect x="95.3359%" y="373" width="0.0136%" height="15" fill="rgb(228,187,13)" fg:x="267134" fg:w="38"/><text x="95.5859%" y="383.50"></text></g><g><title>core::ptr::write (31 samples, 0.01%)</title><rect x="95.3384%" y="357" width="0.0111%" height="15" fill="rgb(240,119,24)" fg:x="267141" fg:w="31"/><text x="95.5884%" y="367.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (101 samples, 0.04%)</title><rect x="95.3166%" y="549" width="0.0360%" height="15" fill="rgb(209,194,42)" fg:x="267080" fg:w="101"/><text x="95.5666%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (101 samples, 0.04%)</title><rect x="95.3166%" y="533" width="0.0360%" height="15" fill="rgb(247,200,46)" fg:x="267080" fg:w="101"/><text x="95.5666%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (101 samples, 0.04%)</title><rect x="95.3166%" y="517" width="0.0360%" height="15" fill="rgb(218,76,16)" fg:x="267080" fg:w="101"/><text x="95.5666%" y="527.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (101 samples, 0.04%)</title><rect x="95.3166%" y="501" width="0.0360%" height="15" fill="rgb(225,21,48)" fg:x="267080" fg:w="101"/><text x="95.5666%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (101 samples, 0.04%)</title><rect x="95.3166%" y="485" width="0.0360%" height="15" fill="rgb(239,223,50)" fg:x="267080" fg:w="101"/><text x="95.5666%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (101 samples, 0.04%)</title><rect x="95.3166%" y="469" width="0.0360%" height="15" fill="rgb(244,45,21)" fg:x="267080" fg:w="101"/><text x="95.5666%" y="479.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (101 samples, 0.04%)</title><rect x="95.3166%" y="453" width="0.0360%" height="15" fill="rgb(232,33,43)" fg:x="267080" fg:w="101"/><text x="95.5666%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (101 samples, 0.04%)</title><rect x="95.3166%" y="437" width="0.0360%" height="15" fill="rgb(209,8,3)" fg:x="267080" fg:w="101"/><text x="95.5666%" y="447.50"></text></g><g><title>nom::combinator::map::{{closure}} (101 samples, 0.04%)</title><rect x="95.3166%" y="421" width="0.0360%" height="15" fill="rgb(214,25,53)" fg:x="267080" fg:w="101"/><text x="95.5666%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (101 samples, 0.04%)</title><rect x="95.3166%" y="405" width="0.0360%" height="15" fill="rgb(254,186,54)" fg:x="267080" fg:w="101"/><text x="95.5666%" y="415.50"></text></g><g><title>nom::multi::count::{{closure}} (101 samples, 0.04%)</title><rect x="95.3166%" y="389" width="0.0360%" height="15" fill="rgb(208,174,49)" fg:x="267080" fg:w="101"/><text x="95.5666%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (33 samples, 0.01%)</title><rect x="95.3744%" y="357" width="0.0118%" height="15" fill="rgb(233,191,51)" fg:x="267242" fg:w="33"/><text x="95.6244%" y="367.50"></text></g><g><title>core::ops::function::FnMut::call_mut (33 samples, 0.01%)</title><rect x="95.3744%" y="341" width="0.0118%" height="15" fill="rgb(222,134,10)" fg:x="267242" fg:w="33"/><text x="95.6244%" y="351.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (33 samples, 0.01%)</title><rect x="95.3744%" y="325" width="0.0118%" height="15" fill="rgb(230,226,20)" fg:x="267242" fg:w="33"/><text x="95.6244%" y="335.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (33 samples, 0.01%)</title><rect x="95.3744%" y="309" width="0.0118%" height="15" fill="rgb(251,111,25)" fg:x="267242" fg:w="33"/><text x="95.6244%" y="319.50"></text></g><g><title>nom::number::streaming::be_u64 (33 samples, 0.01%)</title><rect x="95.3744%" y="293" width="0.0118%" height="15" fill="rgb(224,40,46)" fg:x="267242" fg:w="33"/><text x="95.6244%" y="303.50"></text></g><g><title>handle_mm_fault (32 samples, 0.01%)</title><rect x="95.3937%" y="277" width="0.0114%" height="15" fill="rgb(236,108,47)" fg:x="267296" fg:w="32"/><text x="95.6437%" y="287.50"></text></g><g><title>__handle_mm_fault (31 samples, 0.01%)</title><rect x="95.3941%" y="261" width="0.0111%" height="15" fill="rgb(234,93,0)" fg:x="267297" fg:w="31"/><text x="95.6441%" y="271.50"></text></g><g><title>do_user_addr_fault (34 samples, 0.01%)</title><rect x="95.3937%" y="293" width="0.0121%" height="15" fill="rgb(224,213,32)" fg:x="267296" fg:w="34"/><text x="95.6437%" y="303.50"></text></g><g><title>asm_exc_page_fault (38 samples, 0.01%)</title><rect x="95.3930%" y="325" width="0.0136%" height="15" fill="rgb(251,11,48)" fg:x="267294" fg:w="38"/><text x="95.6430%" y="335.50"></text></g><g><title>exc_page_fault (37 samples, 0.01%)</title><rect x="95.3933%" y="309" width="0.0132%" height="15" fill="rgb(236,173,5)" fg:x="267295" fg:w="37"/><text x="95.6433%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (65 samples, 0.02%)</title><rect x="95.3862%" y="357" width="0.0232%" height="15" fill="rgb(230,95,12)" fg:x="267275" fg:w="65"/><text x="95.6362%" y="367.50"></text></g><g><title>core::ptr::write (58 samples, 0.02%)</title><rect x="95.3887%" y="341" width="0.0207%" height="15" fill="rgb(232,209,1)" fg:x="267282" fg:w="58"/><text x="95.6387%" y="351.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (146 samples, 0.05%)</title><rect x="95.3616%" y="533" width="0.0521%" height="15" fill="rgb(232,6,1)" fg:x="267206" fg:w="146"/><text x="95.6116%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (146 samples, 0.05%)</title><rect x="95.3616%" y="517" width="0.0521%" height="15" fill="rgb(210,224,50)" fg:x="267206" fg:w="146"/><text x="95.6116%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (146 samples, 0.05%)</title><rect x="95.3616%" y="501" width="0.0521%" height="15" fill="rgb(228,127,35)" fg:x="267206" fg:w="146"/><text x="95.6116%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (146 samples, 0.05%)</title><rect x="95.3616%" y="485" width="0.0521%" height="15" fill="rgb(245,102,45)" fg:x="267206" fg:w="146"/><text x="95.6116%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (146 samples, 0.05%)</title><rect x="95.3616%" y="469" width="0.0521%" height="15" fill="rgb(214,1,49)" fg:x="267206" fg:w="146"/><text x="95.6116%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (146 samples, 0.05%)</title><rect x="95.3616%" y="453" width="0.0521%" height="15" fill="rgb(226,163,40)" fg:x="267206" fg:w="146"/><text x="95.6116%" y="463.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (146 samples, 0.05%)</title><rect x="95.3616%" y="437" width="0.0521%" height="15" fill="rgb(239,212,28)" fg:x="267206" fg:w="146"/><text x="95.6116%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (146 samples, 0.05%)</title><rect x="95.3616%" y="421" width="0.0521%" height="15" fill="rgb(220,20,13)" fg:x="267206" fg:w="146"/><text x="95.6116%" y="431.50"></text></g><g><title>nom::combinator::map::{{closure}} (146 samples, 0.05%)</title><rect x="95.3616%" y="405" width="0.0521%" height="15" fill="rgb(210,164,35)" fg:x="267206" fg:w="146"/><text x="95.6116%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (146 samples, 0.05%)</title><rect x="95.3616%" y="389" width="0.0521%" height="15" fill="rgb(248,109,41)" fg:x="267206" fg:w="146"/><text x="95.6116%" y="399.50"></text></g><g><title>nom::multi::count::{{closure}} (146 samples, 0.05%)</title><rect x="95.3616%" y="373" width="0.0521%" height="15" fill="rgb(238,23,50)" fg:x="267206" fg:w="146"/><text x="95.6116%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (57 samples, 0.02%)</title><rect x="95.4333%" y="341" width="0.0203%" height="15" fill="rgb(211,48,49)" fg:x="267407" fg:w="57"/><text x="95.6833%" y="351.50"></text></g><g><title>core::ops::function::FnMut::call_mut (57 samples, 0.02%)</title><rect x="95.4333%" y="325" width="0.0203%" height="15" fill="rgb(223,36,21)" fg:x="267407" fg:w="57"/><text x="95.6833%" y="335.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (57 samples, 0.02%)</title><rect x="95.4333%" y="309" width="0.0203%" height="15" fill="rgb(207,123,46)" fg:x="267407" fg:w="57"/><text x="95.6833%" y="319.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (57 samples, 0.02%)</title><rect x="95.4333%" y="293" width="0.0203%" height="15" fill="rgb(240,218,32)" fg:x="267407" fg:w="57"/><text x="95.6833%" y="303.50"></text></g><g><title>nom::number::streaming::be_u64 (57 samples, 0.02%)</title><rect x="95.4333%" y="277" width="0.0203%" height="15" fill="rgb(252,5,43)" fg:x="267407" fg:w="57"/><text x="95.6833%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.01%)</title><rect x="95.4394%" y="261" width="0.0143%" height="15" fill="rgb(252,84,19)" fg:x="267424" fg:w="40"/><text x="95.6894%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.01%)</title><rect x="95.4394%" y="245" width="0.0143%" height="15" fill="rgb(243,152,39)" fg:x="267424" fg:w="40"/><text x="95.6894%" y="255.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (40 samples, 0.01%)</title><rect x="95.4394%" y="229" width="0.0143%" height="15" fill="rgb(234,160,15)" fg:x="267424" fg:w="40"/><text x="95.6894%" y="239.50"></text></g><g><title>do_anonymous_page (35 samples, 0.01%)</title><rect x="95.4679%" y="213" width="0.0125%" height="15" fill="rgb(237,34,20)" fg:x="267504" fg:w="35"/><text x="95.7179%" y="223.50"></text></g><g><title>do_user_addr_fault (41 samples, 0.01%)</title><rect x="95.4661%" y="277" width="0.0146%" height="15" fill="rgb(229,97,13)" fg:x="267499" fg:w="41"/><text x="95.7161%" y="287.50"></text></g><g><title>handle_mm_fault (39 samples, 0.01%)</title><rect x="95.4669%" y="261" width="0.0139%" height="15" fill="rgb(234,71,50)" fg:x="267501" fg:w="39"/><text x="95.7169%" y="271.50"></text></g><g><title>__handle_mm_fault (38 samples, 0.01%)</title><rect x="95.4672%" y="245" width="0.0136%" height="15" fill="rgb(253,155,4)" fg:x="267502" fg:w="38"/><text x="95.7172%" y="255.50"></text></g><g><title>handle_pte_fault (36 samples, 0.01%)</title><rect x="95.4679%" y="229" width="0.0128%" height="15" fill="rgb(222,185,37)" fg:x="267504" fg:w="36"/><text x="95.7179%" y="239.50"></text></g><g><title>asm_exc_page_fault (43 samples, 0.02%)</title><rect x="95.4658%" y="309" width="0.0153%" height="15" fill="rgb(251,177,13)" fg:x="267498" fg:w="43"/><text x="95.7158%" y="319.50"></text></g><g><title>exc_page_fault (42 samples, 0.01%)</title><rect x="95.4661%" y="293" width="0.0150%" height="15" fill="rgb(250,179,40)" fg:x="267499" fg:w="42"/><text x="95.7161%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (86 samples, 0.03%)</title><rect x="95.4537%" y="341" width="0.0307%" height="15" fill="rgb(242,44,2)" fg:x="267464" fg:w="86"/><text x="95.7037%" y="351.50"></text></g><g><title>core::ptr::write (65 samples, 0.02%)</title><rect x="95.4611%" y="325" width="0.0232%" height="15" fill="rgb(216,177,13)" fg:x="267485" fg:w="65"/><text x="95.7111%" y="335.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (191 samples, 0.07%)</title><rect x="95.4222%" y="517" width="0.0682%" height="15" fill="rgb(216,106,43)" fg:x="267376" fg:w="191"/><text x="95.6722%" y="527.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (191 samples, 0.07%)</title><rect x="95.4222%" y="501" width="0.0682%" height="15" fill="rgb(216,183,2)" fg:x="267376" fg:w="191"/><text x="95.6722%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (191 samples, 0.07%)</title><rect x="95.4222%" y="485" width="0.0682%" height="15" fill="rgb(249,75,3)" fg:x="267376" fg:w="191"/><text x="95.6722%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (191 samples, 0.07%)</title><rect x="95.4222%" y="469" width="0.0682%" height="15" fill="rgb(219,67,39)" fg:x="267376" fg:w="191"/><text x="95.6722%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (191 samples, 0.07%)</title><rect x="95.4222%" y="453" width="0.0682%" height="15" fill="rgb(253,228,2)" fg:x="267376" fg:w="191"/><text x="95.6722%" y="463.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (191 samples, 0.07%)</title><rect x="95.4222%" y="437" width="0.0682%" height="15" fill="rgb(235,138,27)" fg:x="267376" fg:w="191"/><text x="95.6722%" y="447.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (191 samples, 0.07%)</title><rect x="95.4222%" y="421" width="0.0682%" height="15" fill="rgb(236,97,51)" fg:x="267376" fg:w="191"/><text x="95.6722%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (191 samples, 0.07%)</title><rect x="95.4222%" y="405" width="0.0682%" height="15" fill="rgb(240,80,30)" fg:x="267376" fg:w="191"/><text x="95.6722%" y="415.50"></text></g><g><title>nom::combinator::map::{{closure}} (191 samples, 0.07%)</title><rect x="95.4222%" y="389" width="0.0682%" height="15" fill="rgb(230,178,19)" fg:x="267376" fg:w="191"/><text x="95.6722%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (191 samples, 0.07%)</title><rect x="95.4222%" y="373" width="0.0682%" height="15" fill="rgb(210,190,27)" fg:x="267376" fg:w="191"/><text x="95.6722%" y="383.50"></text></g><g><title>nom::multi::count::{{closure}} (191 samples, 0.07%)</title><rect x="95.4222%" y="357" width="0.0682%" height="15" fill="rgb(222,107,31)" fg:x="267376" fg:w="191"/><text x="95.6722%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (66 samples, 0.02%)</title><rect x="95.5207%" y="325" width="0.0236%" height="15" fill="rgb(216,127,34)" fg:x="267652" fg:w="66"/><text x="95.7707%" y="335.50"></text></g><g><title>core::ops::function::FnMut::call_mut (66 samples, 0.02%)</title><rect x="95.5207%" y="309" width="0.0236%" height="15" fill="rgb(234,116,52)" fg:x="267652" fg:w="66"/><text x="95.7707%" y="319.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (66 samples, 0.02%)</title><rect x="95.5207%" y="293" width="0.0236%" height="15" fill="rgb(222,124,15)" fg:x="267652" fg:w="66"/><text x="95.7707%" y="303.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (66 samples, 0.02%)</title><rect x="95.5207%" y="277" width="0.0236%" height="15" fill="rgb(231,179,28)" fg:x="267652" fg:w="66"/><text x="95.7707%" y="287.50"></text></g><g><title>nom::number::streaming::be_u64 (66 samples, 0.02%)</title><rect x="95.5207%" y="261" width="0.0236%" height="15" fill="rgb(226,93,45)" fg:x="267652" fg:w="66"/><text x="95.7707%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.01%)</title><rect x="95.5304%" y="245" width="0.0139%" height="15" fill="rgb(215,8,51)" fg:x="267679" fg:w="39"/><text x="95.7804%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.01%)</title><rect x="95.5304%" y="229" width="0.0139%" height="15" fill="rgb(223,106,5)" fg:x="267679" fg:w="39"/><text x="95.7804%" y="239.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (39 samples, 0.01%)</title><rect x="95.5304%" y="213" width="0.0139%" height="15" fill="rgb(250,191,5)" fg:x="267679" fg:w="39"/><text x="95.7804%" y="223.50"></text></g><g><title>handle_mm_fault (41 samples, 0.01%)</title><rect x="95.5579%" y="245" width="0.0146%" height="15" fill="rgb(242,132,44)" fg:x="267756" fg:w="41"/><text x="95.8079%" y="255.50"></text></g><g><title>__handle_mm_fault (39 samples, 0.01%)</title><rect x="95.5586%" y="229" width="0.0139%" height="15" fill="rgb(251,152,29)" fg:x="267758" fg:w="39"/><text x="95.8086%" y="239.50"></text></g><g><title>handle_pte_fault (36 samples, 0.01%)</title><rect x="95.5596%" y="213" width="0.0128%" height="15" fill="rgb(218,179,5)" fg:x="267761" fg:w="36"/><text x="95.8096%" y="223.50"></text></g><g><title>do_anonymous_page (34 samples, 0.01%)</title><rect x="95.5604%" y="197" width="0.0121%" height="15" fill="rgb(227,67,19)" fg:x="267763" fg:w="34"/><text x="95.8104%" y="207.50"></text></g><g><title>do_user_addr_fault (46 samples, 0.02%)</title><rect x="95.5564%" y="261" width="0.0164%" height="15" fill="rgb(233,119,31)" fg:x="267752" fg:w="46"/><text x="95.8064%" y="271.50"></text></g><g><title>asm_exc_page_fault (51 samples, 0.02%)</title><rect x="95.5554%" y="293" width="0.0182%" height="15" fill="rgb(241,120,22)" fg:x="267749" fg:w="51"/><text x="95.8054%" y="303.50"></text></g><g><title>exc_page_fault (50 samples, 0.02%)</title><rect x="95.5557%" y="277" width="0.0178%" height="15" fill="rgb(224,102,30)" fg:x="267750" fg:w="50"/><text x="95.8057%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (92 samples, 0.03%)</title><rect x="95.5443%" y="325" width="0.0328%" height="15" fill="rgb(210,164,37)" fg:x="267718" fg:w="92"/><text x="95.7943%" y="335.50"></text></g><g><title>core::ptr::write (77 samples, 0.03%)</title><rect x="95.5497%" y="309" width="0.0275%" height="15" fill="rgb(226,191,16)" fg:x="267733" fg:w="77"/><text x="95.7997%" y="319.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (236 samples, 0.08%)</title><rect x="95.4993%" y="501" width="0.0842%" height="15" fill="rgb(214,40,45)" fg:x="267592" fg:w="236"/><text x="95.7493%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (236 samples, 0.08%)</title><rect x="95.4993%" y="485" width="0.0842%" height="15" fill="rgb(244,29,26)" fg:x="267592" fg:w="236"/><text x="95.7493%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (236 samples, 0.08%)</title><rect x="95.4993%" y="469" width="0.0842%" height="15" fill="rgb(216,16,5)" fg:x="267592" fg:w="236"/><text x="95.7493%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (236 samples, 0.08%)</title><rect x="95.4993%" y="453" width="0.0842%" height="15" fill="rgb(249,76,35)" fg:x="267592" fg:w="236"/><text x="95.7493%" y="463.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (236 samples, 0.08%)</title><rect x="95.4993%" y="437" width="0.0842%" height="15" fill="rgb(207,11,44)" fg:x="267592" fg:w="236"/><text x="95.7493%" y="447.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (236 samples, 0.08%)</title><rect x="95.4993%" y="421" width="0.0842%" height="15" fill="rgb(228,190,49)" fg:x="267592" fg:w="236"/><text x="95.7493%" y="431.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (236 samples, 0.08%)</title><rect x="95.4993%" y="405" width="0.0842%" height="15" fill="rgb(214,173,12)" fg:x="267592" fg:w="236"/><text x="95.7493%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (236 samples, 0.08%)</title><rect x="95.4993%" y="389" width="0.0842%" height="15" fill="rgb(218,26,35)" fg:x="267592" fg:w="236"/><text x="95.7493%" y="399.50"></text></g><g><title>nom::combinator::map::{{closure}} (236 samples, 0.08%)</title><rect x="95.4993%" y="373" width="0.0842%" height="15" fill="rgb(220,200,19)" fg:x="267592" fg:w="236"/><text x="95.7493%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (236 samples, 0.08%)</title><rect x="95.4993%" y="357" width="0.0842%" height="15" fill="rgb(239,95,49)" fg:x="267592" fg:w="236"/><text x="95.7493%" y="367.50"></text></g><g><title>nom::multi::count::{{closure}} (236 samples, 0.08%)</title><rect x="95.4993%" y="341" width="0.0842%" height="15" fill="rgb(235,85,53)" fg:x="267592" fg:w="236"/><text x="95.7493%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (83 samples, 0.03%)</title><rect x="95.6114%" y="309" width="0.0296%" height="15" fill="rgb(233,133,31)" fg:x="267906" fg:w="83"/><text x="95.8614%" y="319.50"></text></g><g><title>core::ops::function::FnMut::call_mut (83 samples, 0.03%)</title><rect x="95.6114%" y="293" width="0.0296%" height="15" fill="rgb(218,25,20)" fg:x="267906" fg:w="83"/><text x="95.8614%" y="303.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (83 samples, 0.03%)</title><rect x="95.6114%" y="277" width="0.0296%" height="15" fill="rgb(252,210,38)" fg:x="267906" fg:w="83"/><text x="95.8614%" y="287.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (83 samples, 0.03%)</title><rect x="95.6114%" y="261" width="0.0296%" height="15" fill="rgb(242,134,21)" fg:x="267906" fg:w="83"/><text x="95.8614%" y="271.50"></text></g><g><title>nom::number::streaming::be_u64 (83 samples, 0.03%)</title><rect x="95.6114%" y="245" width="0.0296%" height="15" fill="rgb(213,28,48)" fg:x="267906" fg:w="83"/><text x="95.8614%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.02%)</title><rect x="95.6178%" y="229" width="0.0232%" height="15" fill="rgb(250,196,2)" fg:x="267924" fg:w="65"/><text x="95.8678%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.02%)</title><rect x="95.6178%" y="213" width="0.0232%" height="15" fill="rgb(227,5,17)" fg:x="267924" fg:w="65"/><text x="95.8678%" y="223.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (65 samples, 0.02%)</title><rect x="95.6178%" y="197" width="0.0232%" height="15" fill="rgb(221,226,24)" fg:x="267924" fg:w="65"/><text x="95.8678%" y="207.50"></text></g><g><title>handle_pte_fault (47 samples, 0.02%)</title><rect x="95.6585%" y="197" width="0.0168%" height="15" fill="rgb(211,5,48)" fg:x="268038" fg:w="47"/><text x="95.9085%" y="207.50"></text></g><g><title>do_anonymous_page (44 samples, 0.02%)</title><rect x="95.6596%" y="181" width="0.0157%" height="15" fill="rgb(219,150,6)" fg:x="268041" fg:w="44"/><text x="95.9096%" y="191.50"></text></g><g><title>__handle_mm_fault (50 samples, 0.02%)</title><rect x="95.6578%" y="213" width="0.0178%" height="15" fill="rgb(251,46,16)" fg:x="268036" fg:w="50"/><text x="95.9078%" y="223.50"></text></g><g><title>handle_mm_fault (52 samples, 0.02%)</title><rect x="95.6574%" y="229" width="0.0186%" height="15" fill="rgb(220,204,40)" fg:x="268035" fg:w="52"/><text x="95.9074%" y="239.50"></text></g><g><title>do_user_addr_fault (57 samples, 0.02%)</title><rect x="95.6564%" y="245" width="0.0203%" height="15" fill="rgb(211,85,2)" fg:x="268032" fg:w="57"/><text x="95.9064%" y="255.50"></text></g><g><title>asm_exc_page_fault (62 samples, 0.02%)</title><rect x="95.6553%" y="277" width="0.0221%" height="15" fill="rgb(229,17,7)" fg:x="268029" fg:w="62"/><text x="95.9053%" y="287.50"></text></g><g><title>exc_page_fault (60 samples, 0.02%)</title><rect x="95.6560%" y="261" width="0.0214%" height="15" fill="rgb(239,72,28)" fg:x="268031" fg:w="60"/><text x="95.9060%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (112 samples, 0.04%)</title><rect x="95.6410%" y="309" width="0.0400%" height="15" fill="rgb(230,47,54)" fg:x="267989" fg:w="112"/><text x="95.8910%" y="319.50"></text></g><g><title>core::ptr::write (89 samples, 0.03%)</title><rect x="95.6492%" y="293" width="0.0318%" height="15" fill="rgb(214,50,8)" fg:x="268012" fg:w="89"/><text x="95.8992%" y="303.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (270 samples, 0.10%)</title><rect x="95.5921%" y="485" width="0.0964%" height="15" fill="rgb(216,198,43)" fg:x="267852" fg:w="270"/><text x="95.8421%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (270 samples, 0.10%)</title><rect x="95.5921%" y="469" width="0.0964%" height="15" fill="rgb(234,20,35)" fg:x="267852" fg:w="270"/><text x="95.8421%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (270 samples, 0.10%)</title><rect x="95.5921%" y="453" width="0.0964%" height="15" fill="rgb(254,45,19)" fg:x="267852" fg:w="270"/><text x="95.8421%" y="463.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (270 samples, 0.10%)</title><rect x="95.5921%" y="437" width="0.0964%" height="15" fill="rgb(219,14,44)" fg:x="267852" fg:w="270"/><text x="95.8421%" y="447.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (270 samples, 0.10%)</title><rect x="95.5921%" y="421" width="0.0964%" height="15" fill="rgb(217,220,26)" fg:x="267852" fg:w="270"/><text x="95.8421%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (270 samples, 0.10%)</title><rect x="95.5921%" y="405" width="0.0964%" height="15" fill="rgb(213,158,28)" fg:x="267852" fg:w="270"/><text x="95.8421%" y="415.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (270 samples, 0.10%)</title><rect x="95.5921%" y="389" width="0.0964%" height="15" fill="rgb(252,51,52)" fg:x="267852" fg:w="270"/><text x="95.8421%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (270 samples, 0.10%)</title><rect x="95.5921%" y="373" width="0.0964%" height="15" fill="rgb(246,89,16)" fg:x="267852" fg:w="270"/><text x="95.8421%" y="383.50"></text></g><g><title>nom::combinator::map::{{closure}} (270 samples, 0.10%)</title><rect x="95.5921%" y="357" width="0.0964%" height="15" fill="rgb(216,158,49)" fg:x="267852" fg:w="270"/><text x="95.8421%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (270 samples, 0.10%)</title><rect x="95.5921%" y="341" width="0.0964%" height="15" fill="rgb(236,107,19)" fg:x="267852" fg:w="270"/><text x="95.8421%" y="351.50"></text></g><g><title>nom::multi::count::{{closure}} (270 samples, 0.10%)</title><rect x="95.5921%" y="325" width="0.0964%" height="15" fill="rgb(228,185,30)" fg:x="267852" fg:w="270"/><text x="95.8421%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (90 samples, 0.03%)</title><rect x="95.7170%" y="293" width="0.0321%" height="15" fill="rgb(246,134,8)" fg:x="268202" fg:w="90"/><text x="95.9670%" y="303.50"></text></g><g><title>core::ops::function::FnMut::call_mut (90 samples, 0.03%)</title><rect x="95.7170%" y="277" width="0.0321%" height="15" fill="rgb(214,143,50)" fg:x="268202" fg:w="90"/><text x="95.9670%" y="287.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (90 samples, 0.03%)</title><rect x="95.7170%" y="261" width="0.0321%" height="15" fill="rgb(228,75,8)" fg:x="268202" fg:w="90"/><text x="95.9670%" y="271.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (90 samples, 0.03%)</title><rect x="95.7170%" y="245" width="0.0321%" height="15" fill="rgb(207,175,4)" fg:x="268202" fg:w="90"/><text x="95.9670%" y="255.50"></text></g><g><title>nom::number::streaming::be_u64 (90 samples, 0.03%)</title><rect x="95.7170%" y="229" width="0.0321%" height="15" fill="rgb(205,108,24)" fg:x="268202" fg:w="90"/><text x="95.9670%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.02%)</title><rect x="95.7292%" y="213" width="0.0200%" height="15" fill="rgb(244,120,49)" fg:x="268236" fg:w="56"/><text x="95.9792%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (56 samples, 0.02%)</title><rect x="95.7292%" y="197" width="0.0200%" height="15" fill="rgb(223,47,38)" fg:x="268236" fg:w="56"/><text x="95.9792%" y="207.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (56 samples, 0.02%)</title><rect x="95.7292%" y="181" width="0.0200%" height="15" fill="rgb(229,179,11)" fg:x="268236" fg:w="56"/><text x="95.9792%" y="191.50"></text></g><g><title>alloc_pages_vma (33 samples, 0.01%)</title><rect x="95.7706%" y="149" width="0.0118%" height="15" fill="rgb(231,122,1)" fg:x="268352" fg:w="33"/><text x="96.0206%" y="159.50"></text></g><g><title>__alloc_pages (31 samples, 0.01%)</title><rect x="95.7713%" y="133" width="0.0111%" height="15" fill="rgb(245,119,9)" fg:x="268354" fg:w="31"/><text x="96.0213%" y="143.50"></text></g><g><title>get_page_from_freelist (30 samples, 0.01%)</title><rect x="95.7716%" y="117" width="0.0107%" height="15" fill="rgb(241,163,25)" fg:x="268355" fg:w="30"/><text x="96.0216%" y="127.50"></text></g><g><title>handle_pte_fault (62 samples, 0.02%)</title><rect x="95.7691%" y="181" width="0.0221%" height="15" fill="rgb(217,214,3)" fg:x="268348" fg:w="62"/><text x="96.0191%" y="191.50"></text></g><g><title>do_anonymous_page (61 samples, 0.02%)</title><rect x="95.7695%" y="165" width="0.0218%" height="15" fill="rgb(240,86,28)" fg:x="268349" fg:w="61"/><text x="96.0195%" y="175.50"></text></g><g><title>handle_mm_fault (68 samples, 0.02%)</title><rect x="95.7677%" y="213" width="0.0243%" height="15" fill="rgb(215,47,9)" fg:x="268344" fg:w="68"/><text x="96.0177%" y="223.50"></text></g><g><title>__handle_mm_fault (67 samples, 0.02%)</title><rect x="95.7681%" y="197" width="0.0239%" height="15" fill="rgb(252,25,45)" fg:x="268345" fg:w="67"/><text x="96.0181%" y="207.50"></text></g><g><title>do_user_addr_fault (71 samples, 0.03%)</title><rect x="95.7670%" y="229" width="0.0253%" height="15" fill="rgb(251,164,9)" fg:x="268342" fg:w="71"/><text x="96.0170%" y="239.50"></text></g><g><title>asm_exc_page_fault (76 samples, 0.03%)</title><rect x="95.7659%" y="261" width="0.0271%" height="15" fill="rgb(233,194,0)" fg:x="268339" fg:w="76"/><text x="96.0159%" y="271.50"></text></g><g><title>exc_page_fault (75 samples, 0.03%)</title><rect x="95.7663%" y="245" width="0.0268%" height="15" fill="rgb(249,111,24)" fg:x="268340" fg:w="75"/><text x="96.0163%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (133 samples, 0.05%)</title><rect x="95.7492%" y="293" width="0.0475%" height="15" fill="rgb(250,223,3)" fg:x="268292" fg:w="133"/><text x="95.9992%" y="303.50"></text></g><g><title>core::ptr::write (103 samples, 0.04%)</title><rect x="95.7599%" y="277" width="0.0368%" height="15" fill="rgb(236,178,37)" fg:x="268322" fg:w="103"/><text x="96.0099%" y="287.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (304 samples, 0.11%)</title><rect x="95.6967%" y="469" width="0.1085%" height="15" fill="rgb(241,158,50)" fg:x="268145" fg:w="304"/><text x="95.9467%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (304 samples, 0.11%)</title><rect x="95.6967%" y="453" width="0.1085%" height="15" fill="rgb(213,121,41)" fg:x="268145" fg:w="304"/><text x="95.9467%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (304 samples, 0.11%)</title><rect x="95.6967%" y="437" width="0.1085%" height="15" fill="rgb(240,92,3)" fg:x="268145" fg:w="304"/><text x="95.9467%" y="447.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (304 samples, 0.11%)</title><rect x="95.6967%" y="421" width="0.1085%" height="15" fill="rgb(205,123,3)" fg:x="268145" fg:w="304"/><text x="95.9467%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (304 samples, 0.11%)</title><rect x="95.6967%" y="405" width="0.1085%" height="15" fill="rgb(205,97,47)" fg:x="268145" fg:w="304"/><text x="95.9467%" y="415.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (304 samples, 0.11%)</title><rect x="95.6967%" y="389" width="0.1085%" height="15" fill="rgb(247,152,14)" fg:x="268145" fg:w="304"/><text x="95.9467%" y="399.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (304 samples, 0.11%)</title><rect x="95.6967%" y="373" width="0.1085%" height="15" fill="rgb(248,195,53)" fg:x="268145" fg:w="304"/><text x="95.9467%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (304 samples, 0.11%)</title><rect x="95.6967%" y="357" width="0.1085%" height="15" fill="rgb(226,201,16)" fg:x="268145" fg:w="304"/><text x="95.9467%" y="367.50"></text></g><g><title>nom::combinator::map::{{closure}} (304 samples, 0.11%)</title><rect x="95.6967%" y="341" width="0.1085%" height="15" fill="rgb(205,98,0)" fg:x="268145" fg:w="304"/><text x="95.9467%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (304 samples, 0.11%)</title><rect x="95.6967%" y="325" width="0.1085%" height="15" fill="rgb(214,191,48)" fg:x="268145" fg:w="304"/><text x="95.9467%" y="335.50"></text></g><g><title>nom::multi::count::{{closure}} (304 samples, 0.11%)</title><rect x="95.6967%" y="309" width="0.1085%" height="15" fill="rgb(237,112,39)" fg:x="268145" fg:w="304"/><text x="95.9467%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::rotate_left (42 samples, 0.01%)</title><rect x="95.8052%" y="453" width="0.0150%" height="15" fill="rgb(247,203,27)" fg:x="268449" fg:w="42"/><text x="96.0552%" y="463.50"></text></g><g><title>core::slice::rotate::ptr_rotate (42 samples, 0.01%)</title><rect x="95.8052%" y="437" width="0.0150%" height="15" fill="rgb(235,124,28)" fg:x="268449" fg:w="42"/><text x="96.0552%" y="447.50"></text></g><g><title>core::intrinsics::copy (42 samples, 0.01%)</title><rect x="95.8052%" y="421" width="0.0150%" height="15" fill="rgb(208,207,46)" fg:x="268449" fg:w="42"/><text x="96.0552%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (42 samples, 0.01%)</title><rect x="95.8052%" y="405" width="0.0150%" height="15" fill="rgb(234,176,4)" fg:x="268449" fg:w="42"/><text x="96.0552%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (94 samples, 0.03%)</title><rect x="95.8444%" y="277" width="0.0335%" height="15" fill="rgb(230,133,28)" fg:x="268559" fg:w="94"/><text x="96.0944%" y="287.50"></text></g><g><title>core::ops::function::FnMut::call_mut (94 samples, 0.03%)</title><rect x="95.8444%" y="261" width="0.0335%" height="15" fill="rgb(211,137,40)" fg:x="268559" fg:w="94"/><text x="96.0944%" y="271.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (94 samples, 0.03%)</title><rect x="95.8444%" y="245" width="0.0335%" height="15" fill="rgb(254,35,13)" fg:x="268559" fg:w="94"/><text x="96.0944%" y="255.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (94 samples, 0.03%)</title><rect x="95.8444%" y="229" width="0.0335%" height="15" fill="rgb(225,49,51)" fg:x="268559" fg:w="94"/><text x="96.0944%" y="239.50"></text></g><g><title>nom::number::streaming::be_u64 (94 samples, 0.03%)</title><rect x="95.8444%" y="213" width="0.0335%" height="15" fill="rgb(251,10,15)" fg:x="268559" fg:w="94"/><text x="96.0944%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (70 samples, 0.02%)</title><rect x="95.8530%" y="197" width="0.0250%" height="15" fill="rgb(228,207,15)" fg:x="268583" fg:w="70"/><text x="96.1030%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (70 samples, 0.02%)</title><rect x="95.8530%" y="181" width="0.0250%" height="15" fill="rgb(241,99,19)" fg:x="268583" fg:w="70"/><text x="96.1030%" y="191.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (70 samples, 0.02%)</title><rect x="95.8530%" y="165" width="0.0250%" height="15" fill="rgb(207,104,49)" fg:x="268583" fg:w="70"/><text x="96.1030%" y="175.50"></text></g><g><title>__alloc_pages (29 samples, 0.01%)</title><rect x="95.8998%" y="117" width="0.0103%" height="15" fill="rgb(234,99,18)" fg:x="268714" fg:w="29"/><text x="96.1498%" y="127.50"></text></g><g><title>alloc_pages_vma (31 samples, 0.01%)</title><rect x="95.8998%" y="133" width="0.0111%" height="15" fill="rgb(213,191,49)" fg:x="268714" fg:w="31"/><text x="96.1498%" y="143.50"></text></g><g><title>do_anonymous_page (57 samples, 0.02%)</title><rect x="95.8987%" y="149" width="0.0203%" height="15" fill="rgb(210,226,19)" fg:x="268711" fg:w="57"/><text x="96.1487%" y="159.50"></text></g><g><title>__handle_mm_fault (65 samples, 0.02%)</title><rect x="95.8965%" y="181" width="0.0232%" height="15" fill="rgb(229,97,18)" fg:x="268705" fg:w="65"/><text x="96.1465%" y="191.50"></text></g><g><title>handle_pte_fault (60 samples, 0.02%)</title><rect x="95.8983%" y="165" width="0.0214%" height="15" fill="rgb(211,167,15)" fg:x="268710" fg:w="60"/><text x="96.1483%" y="175.50"></text></g><g><title>handle_mm_fault (67 samples, 0.02%)</title><rect x="95.8962%" y="197" width="0.0239%" height="15" fill="rgb(210,169,34)" fg:x="268704" fg:w="67"/><text x="96.1462%" y="207.50"></text></g><g><title>do_user_addr_fault (73 samples, 0.03%)</title><rect x="95.8944%" y="213" width="0.0261%" height="15" fill="rgb(241,121,31)" fg:x="268699" fg:w="73"/><text x="96.1444%" y="223.50"></text></g><g><title>asm_exc_page_fault (76 samples, 0.03%)</title><rect x="95.8937%" y="245" width="0.0271%" height="15" fill="rgb(232,40,11)" fg:x="268697" fg:w="76"/><text x="96.1437%" y="255.50"></text></g><g><title>exc_page_fault (75 samples, 0.03%)</title><rect x="95.8940%" y="229" width="0.0268%" height="15" fill="rgb(205,86,26)" fg:x="268698" fg:w="75"/><text x="96.1440%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (133 samples, 0.05%)</title><rect x="95.8780%" y="277" width="0.0475%" height="15" fill="rgb(231,126,28)" fg:x="268653" fg:w="133"/><text x="96.1280%" y="287.50"></text></g><g><title>core::ptr::write (105 samples, 0.04%)</title><rect x="95.8880%" y="261" width="0.0375%" height="15" fill="rgb(219,221,18)" fg:x="268681" fg:w="105"/><text x="96.1380%" y="271.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (297 samples, 0.11%)</title><rect x="95.8202%" y="421" width="0.1060%" height="15" fill="rgb(211,40,0)" fg:x="268491" fg:w="297"/><text x="96.0702%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (297 samples, 0.11%)</title><rect x="95.8202%" y="405" width="0.1060%" height="15" fill="rgb(239,85,43)" fg:x="268491" fg:w="297"/><text x="96.0702%" y="415.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (297 samples, 0.11%)</title><rect x="95.8202%" y="389" width="0.1060%" height="15" fill="rgb(231,55,21)" fg:x="268491" fg:w="297"/><text x="96.0702%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (297 samples, 0.11%)</title><rect x="95.8202%" y="373" width="0.1060%" height="15" fill="rgb(225,184,43)" fg:x="268491" fg:w="297"/><text x="96.0702%" y="383.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (297 samples, 0.11%)</title><rect x="95.8202%" y="357" width="0.1060%" height="15" fill="rgb(251,158,41)" fg:x="268491" fg:w="297"/><text x="96.0702%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (297 samples, 0.11%)</title><rect x="95.8202%" y="341" width="0.1060%" height="15" fill="rgb(234,159,37)" fg:x="268491" fg:w="297"/><text x="96.0702%" y="351.50"></text></g><g><title>nom::combinator::map::{{closure}} (297 samples, 0.11%)</title><rect x="95.8202%" y="325" width="0.1060%" height="15" fill="rgb(216,204,22)" fg:x="268491" fg:w="297"/><text x="96.0702%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (297 samples, 0.11%)</title><rect x="95.8202%" y="309" width="0.1060%" height="15" fill="rgb(214,17,3)" fg:x="268491" fg:w="297"/><text x="96.0702%" y="319.50"></text></g><g><title>nom::multi::count::{{closure}} (297 samples, 0.11%)</title><rect x="95.8202%" y="293" width="0.1060%" height="15" fill="rgb(212,111,17)" fg:x="268491" fg:w="297"/><text x="96.0702%" y="303.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (138,283 samples, 49.35%)</title><rect x="46.5802%" y="581" width="49.3510%" height="15" fill="rgb(221,157,24)" fg:x="130519" fg:w="138283"/><text x="46.8302%" y="591.50">hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next</text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,748 samples, 0.62%)</title><rect x="95.3073%" y="565" width="0.6238%" height="15" fill="rgb(252,16,13)" fg:x="267054" fg:w="1748"/><text x="95.5573%" y="575.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,621 samples, 0.58%)</title><rect x="95.3527%" y="549" width="0.5785%" height="15" fill="rgb(221,62,2)" fg:x="267181" fg:w="1621"/><text x="95.6027%" y="559.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,450 samples, 0.52%)</title><rect x="95.4137%" y="533" width="0.5175%" height="15" fill="rgb(247,87,22)" fg:x="267352" fg:w="1450"/><text x="95.6637%" y="543.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,235 samples, 0.44%)</title><rect x="95.4904%" y="517" width="0.4408%" height="15" fill="rgb(215,73,9)" fg:x="267567" fg:w="1235"/><text x="95.7404%" y="527.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (974 samples, 0.35%)</title><rect x="95.5836%" y="501" width="0.3476%" height="15" fill="rgb(207,175,33)" fg:x="267828" fg:w="974"/><text x="95.8336%" y="511.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (680 samples, 0.24%)</title><rect x="95.6885%" y="485" width="0.2427%" height="15" fill="rgb(243,129,54)" fg:x="268122" fg:w="680"/><text x="95.9385%" y="495.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (353 samples, 0.13%)</title><rect x="95.8052%" y="469" width="0.1260%" height="15" fill="rgb(227,119,45)" fg:x="268449" fg:w="353"/><text x="96.0552%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (311 samples, 0.11%)</title><rect x="95.8202%" y="453" width="0.1110%" height="15" fill="rgb(205,109,36)" fg:x="268491" fg:w="311"/><text x="96.0702%" y="463.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (311 samples, 0.11%)</title><rect x="95.8202%" y="437" width="0.1110%" height="15" fill="rgb(205,6,39)" fg:x="268491" fg:w="311"/><text x="96.0702%" y="447.50"></text></g><g><title>&lt;hprof_slurp::record_parser_iter::HprofRecordParserIter as core::iter::traits::iterator::Iterator&gt;::next (150,222 samples, 53.61%)</title><rect x="42.3200%" y="613" width="53.6118%" height="15" fill="rgb(221,32,16)" fg:x="118582" fg:w="150222"/><text x="42.5700%" y="623.50">&lt;hprof_slurp::record_parser_iter::HprofRecordParserIter as core::iter::traits::iterator:..</text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (150,222 samples, 53.61%)</title><rect x="42.3200%" y="597" width="53.6118%" height="15" fill="rgb(228,144,50)" fg:x="118582" fg:w="150222"/><text x="42.5700%" y="607.50">hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next</text></g><g><title>indicatif::state::ProgressState::update_and_draw (36 samples, 0.01%)</title><rect x="95.9322%" y="549" width="0.0128%" height="15" fill="rgb(229,201,53)" fg:x="268805" fg:w="36"/><text x="96.1822%" y="559.50"></text></g><g><title>indicatif::state::ProgressState::draw (36 samples, 0.01%)</title><rect x="95.9322%" y="533" width="0.0128%" height="15" fill="rgb(249,153,27)" fg:x="268805" fg:w="36"/><text x="96.1822%" y="543.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::set_position (38 samples, 0.01%)</title><rect x="95.9319%" y="581" width="0.0136%" height="15" fill="rgb(227,106,25)" fg:x="268804" fg:w="38"/><text x="96.1819%" y="591.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::update_and_draw (38 samples, 0.01%)</title><rect x="95.9319%" y="565" width="0.0136%" height="15" fill="rgb(230,65,29)" fg:x="268804" fg:w="38"/><text x="96.1819%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (43 samples, 0.02%)</title><rect x="95.9319%" y="613" width="0.0153%" height="15" fill="rgb(221,57,46)" fg:x="268804" fg:w="43"/><text x="96.1819%" y="623.50"></text></g><g><title>hprof_slurp::slurp::slurp_file::{{closure}} (43 samples, 0.02%)</title><rect x="95.9319%" y="597" width="0.0153%" height="15" fill="rgb(229,161,17)" fg:x="268804" fg:w="43"/><text x="96.1819%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (150,296 samples, 53.64%)</title><rect x="42.3200%" y="645" width="53.6383%" height="15" fill="rgb(222,213,11)" fg:x="118582" fg:w="150296"/><text x="42.5700%" y="655.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>core::iter::traits::iterator::Iterator::fold (150,296 samples, 53.64%)</title><rect x="42.3200%" y="629" width="53.6383%" height="15" fill="rgb(235,35,13)" fg:x="118582" fg:w="150296"/><text x="42.5700%" y="639.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::record_parser_iter::HprofRecordParserIter&gt; (31 samples, 0.01%)</title><rect x="95.9472%" y="613" width="0.0111%" height="15" fill="rgb(233,158,34)" fg:x="268847" fg:w="31"/><text x="96.1972%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (31 samples, 0.01%)</title><rect x="95.9472%" y="597" width="0.0111%" height="15" fill="rgb(215,151,48)" fg:x="268847" fg:w="31"/><text x="96.1972%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (31 samples, 0.01%)</title><rect x="95.9472%" y="581" width="0.0111%" height="15" fill="rgb(229,84,14)" fg:x="268847" fg:w="31"/><text x="96.1972%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.01%)</title><rect x="95.9472%" y="565" width="0.0111%" height="15" fill="rgb(229,68,14)" fg:x="268847" fg:w="31"/><text x="96.1972%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (31 samples, 0.01%)</title><rect x="95.9472%" y="549" width="0.0111%" height="15" fill="rgb(243,106,26)" fg:x="268847" fg:w="31"/><text x="96.1972%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (31 samples, 0.01%)</title><rect x="95.9472%" y="533" width="0.0111%" height="15" fill="rgb(206,45,38)" fg:x="268847" fg:w="31"/><text x="96.1972%" y="543.50"></text></g><g><title>__free (31 samples, 0.01%)</title><rect x="95.9472%" y="517" width="0.0111%" height="15" fill="rgb(226,6,15)" fg:x="268847" fg:w="31"/><text x="96.1972%" y="527.50"></text></g><g><title>__GI___munmap (31 samples, 0.01%)</title><rect x="95.9472%" y="501" width="0.0111%" height="15" fill="rgb(232,22,54)" fg:x="268847" fg:w="31"/><text x="96.1972%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (31 samples, 0.01%)</title><rect x="95.9472%" y="485" width="0.0111%" height="15" fill="rgb(229,222,32)" fg:x="268847" fg:w="31"/><text x="96.1972%" y="495.50"></text></g><g><title>do_syscall_64 (31 samples, 0.01%)</title><rect x="95.9472%" y="469" width="0.0111%" height="15" fill="rgb(228,62,29)" fg:x="268847" fg:w="31"/><text x="96.1972%" y="479.50"></text></g><g><title>__x64_sys_munmap (31 samples, 0.01%)</title><rect x="95.9472%" y="453" width="0.0111%" height="15" fill="rgb(251,103,34)" fg:x="268847" fg:w="31"/><text x="96.1972%" y="463.50"></text></g><g><title>__vm_munmap (31 samples, 0.01%)</title><rect x="95.9472%" y="437" width="0.0111%" height="15" fill="rgb(233,12,30)" fg:x="268847" fg:w="31"/><text x="96.1972%" y="447.50"></text></g><g><title>__do_munmap (31 samples, 0.01%)</title><rect x="95.9472%" y="421" width="0.0111%" height="15" fill="rgb(238,52,0)" fg:x="268847" fg:w="31"/><text x="96.1972%" y="431.50"></text></g><g><title>unmap_region (31 samples, 0.01%)</title><rect x="95.9472%" y="405" width="0.0111%" height="15" fill="rgb(223,98,5)" fg:x="268847" fg:w="31"/><text x="96.1972%" y="415.50"></text></g><g><title>unmap_vmas (30 samples, 0.01%)</title><rect x="95.9476%" y="389" width="0.0107%" height="15" fill="rgb(228,75,37)" fg:x="268848" fg:w="30"/><text x="96.1976%" y="399.50"></text></g><g><title>unmap_single_vma (30 samples, 0.01%)</title><rect x="95.9476%" y="373" width="0.0107%" height="15" fill="rgb(205,115,49)" fg:x="268848" fg:w="30"/><text x="96.1976%" y="383.50"></text></g><g><title>unmap_page_range (30 samples, 0.01%)</title><rect x="95.9476%" y="357" width="0.0107%" height="15" fill="rgb(250,154,43)" fg:x="268848" fg:w="30"/><text x="96.1976%" y="367.50"></text></g><g><title>zap_pmd_range.isra.0 (29 samples, 0.01%)</title><rect x="95.9479%" y="341" width="0.0103%" height="15" fill="rgb(226,43,29)" fg:x="268849" fg:w="29"/><text x="96.1979%" y="351.50"></text></g><g><title>zap_pte_range (29 samples, 0.01%)</title><rect x="95.9479%" y="325" width="0.0103%" height="15" fill="rgb(249,228,39)" fg:x="268849" fg:w="29"/><text x="96.1979%" y="335.50"></text></g><g><title>_start (150,297 samples, 53.64%)</title><rect x="42.3200%" y="933" width="53.6386%" height="15" fill="rgb(216,79,43)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="943.50">_start</text></g><g><title>__libc_start_main_alias_2 (150,297 samples, 53.64%)</title><rect x="42.3200%" y="917" width="53.6386%" height="15" fill="rgb(228,95,12)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="927.50">__libc_start_main_alias_2</text></g><g><title>__libc_start_call_main (150,297 samples, 53.64%)</title><rect x="42.3200%" y="901" width="53.6386%" height="15" fill="rgb(249,221,15)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="911.50">__libc_start_call_main</text></g><g><title>main (150,297 samples, 53.64%)</title><rect x="42.3200%" y="885" width="53.6386%" height="15" fill="rgb(233,34,13)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (150,297 samples, 53.64%)</title><rect x="42.3200%" y="869" width="53.6386%" height="15" fill="rgb(214,103,39)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (150,297 samples, 53.64%)</title><rect x="42.3200%" y="853" width="53.6386%" height="15" fill="rgb(251,126,39)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (150,297 samples, 53.64%)</title><rect x="42.3200%" y="837" width="53.6386%" height="15" fill="rgb(214,216,36)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (150,297 samples, 53.64%)</title><rect x="42.3200%" y="821" width="53.6386%" height="15" fill="rgb(220,221,8)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="831.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (150,297 samples, 53.64%)</title><rect x="42.3200%" y="805" width="53.6386%" height="15" fill="rgb(240,216,3)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="815.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (150,297 samples, 53.64%)</title><rect x="42.3200%" y="789" width="53.6386%" height="15" fill="rgb(232,218,17)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (150,297 samples, 53.64%)</title><rect x="42.3200%" y="773" width="53.6386%" height="15" fill="rgb(229,163,45)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (150,297 samples, 53.64%)</title><rect x="42.3200%" y="757" width="53.6386%" height="15" fill="rgb(231,110,42)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (150,297 samples, 53.64%)</title><rect x="42.3200%" y="741" width="53.6386%" height="15" fill="rgb(208,170,48)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="751.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (150,297 samples, 53.64%)</title><rect x="42.3200%" y="725" width="53.6386%" height="15" fill="rgb(239,116,25)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="735.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (150,297 samples, 53.64%)</title><rect x="42.3200%" y="709" width="53.6386%" height="15" fill="rgb(219,200,50)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (150,297 samples, 53.64%)</title><rect x="42.3200%" y="693" width="53.6386%" height="15" fill="rgb(245,200,0)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="703.50">core::ops::function::FnOnce::call_once</text></g><g><title>hprof_slurp::main (150,297 samples, 53.64%)</title><rect x="42.3200%" y="677" width="53.6386%" height="15" fill="rgb(245,119,33)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="687.50">hprof_slurp::main</text></g><g><title>hprof_slurp::slurp::slurp_file (150,297 samples, 53.64%)</title><rect x="42.3200%" y="661" width="53.6386%" height="15" fill="rgb(231,125,12)" fg:x="118582" fg:w="150297"/><text x="42.5700%" y="671.50">hprof_slurp::slurp::slurp_file</text></g><g><title>asm_exc_page_fault (11,223 samples, 4.01%)</title><rect x="95.9586%" y="933" width="4.0053%" height="15" fill="rgb(216,96,41)" fg:x="268879" fg:w="11223"/><text x="96.2086%" y="943.50">asm_..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (57 samples, 0.02%)</title><rect x="99.9714%" y="917" width="0.0203%" height="15" fill="rgb(248,43,45)" fg:x="280123" fg:w="57"/><text x="100.2214%" y="927.50"></text></g><g><title>hprof-slurp (168,657 samples, 60.19%)</title><rect x="39.8072%" y="949" width="60.1910%" height="15" fill="rgb(217,222,7)" fg:x="111541" fg:w="168657"/><text x="40.0572%" y="959.50">hprof-slurp</text></g><g><title>main_arena (75 samples, 0.03%)</title><rect x="99.9714%" y="933" width="0.0268%" height="15" fill="rgb(233,28,6)" fg:x="280123" fg:w="75"/><text x="100.2214%" y="943.50"></text></g><g><title>all (280,203 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(231,218,15)" fg:x="0" fg:w="280203"/><text x="0.2500%" y="975.50"></text></g></svg></svg>