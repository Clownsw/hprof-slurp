<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="901.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="901.00"> </text><svg id="frames" x="10" width="1180" total_samples="317645"><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (199 samples, 0.06%)</title><rect x="0.0009%" y="821" width="0.0626%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="199"/><text x="0.2509%" y="831.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (101 samples, 0.03%)</title><rect x="0.0318%" y="805" width="0.0318%" height="15" fill="rgb(217,0,24)" fg:x="101" fg:w="101"/><text x="0.2818%" y="815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (101 samples, 0.03%)</title><rect x="0.0318%" y="789" width="0.0318%" height="15" fill="rgb(221,193,54)" fg:x="101" fg:w="101"/><text x="0.2818%" y="799.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (99 samples, 0.03%)</title><rect x="0.0324%" y="773" width="0.0312%" height="15" fill="rgb(248,212,6)" fg:x="103" fg:w="99"/><text x="0.2824%" y="783.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (99 samples, 0.03%)</title><rect x="0.0324%" y="757" width="0.0312%" height="15" fill="rgb(208,68,35)" fg:x="103" fg:w="99"/><text x="0.2824%" y="767.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (43 samples, 0.01%)</title><rect x="0.0636%" y="821" width="0.0135%" height="15" fill="rgb(232,128,0)" fg:x="202" fg:w="43"/><text x="0.3136%" y="831.50"></text></g><g><title>nom::multi::count::{{closure}} (36 samples, 0.01%)</title><rect x="0.0658%" y="805" width="0.0113%" height="15" fill="rgb(207,160,47)" fg:x="209" fg:w="36"/><text x="0.3158%" y="815.50"></text></g><g><title>__memmove_avx_unaligned_erms (113 samples, 0.04%)</title><rect x="0.0790%" y="821" width="0.0356%" height="15" fill="rgb(228,23,34)" fg:x="251" fg:w="113"/><text x="0.3290%" y="831.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (182 samples, 0.06%)</title><rect x="0.1209%" y="821" width="0.0573%" height="15" fill="rgb(218,30,26)" fg:x="384" fg:w="182"/><text x="0.3709%" y="831.50"></text></g><g><title>[[heap]] (567 samples, 0.18%)</title><rect x="0.0009%" y="837" width="0.1785%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="567"/><text x="0.2509%" y="847.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (91 samples, 0.03%)</title><rect x="0.3938%" y="789" width="0.0286%" height="15" fill="rgb(250,228,42)" fg:x="1251" fg:w="91"/><text x="0.6438%" y="799.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (919 samples, 0.29%)</title><rect x="0.1914%" y="821" width="0.2893%" height="15" fill="rgb(240,193,28)" fg:x="608" fg:w="919"/><text x="0.4414%" y="831.50"></text></g><g><title>hprof_slurp::record_parser::many1_streaming::{{closure}} (919 samples, 0.29%)</title><rect x="0.1914%" y="805" width="0.2893%" height="15" fill="rgb(216,20,37)" fg:x="608" fg:w="919"/><text x="0.4414%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (185 samples, 0.06%)</title><rect x="0.4225%" y="789" width="0.0582%" height="15" fill="rgb(206,188,39)" fg:x="1342" fg:w="185"/><text x="0.6725%" y="799.50"></text></g><g><title>core::ptr::write (185 samples, 0.06%)</title><rect x="0.4225%" y="773" width="0.0582%" height="15" fill="rgb(217,207,13)" fg:x="1342" fg:w="185"/><text x="0.6725%" y="783.50"></text></g><g><title>nom::number::streaming::be_u32 (1,758 samples, 0.55%)</title><rect x="0.4810%" y="821" width="0.5534%" height="15" fill="rgb(231,73,38)" fg:x="1528" fg:w="1758"/><text x="0.7310%" y="831.50"></text></g><g><title>nom::number::streaming::be_u64 (812 samples, 0.26%)</title><rect x="1.0345%" y="821" width="0.2556%" height="15" fill="rgb(225,20,46)" fg:x="3286" fg:w="812"/><text x="1.2845%" y="831.50"></text></g><g><title>[[stack]] (3,529 samples, 1.11%)</title><rect x="0.1794%" y="837" width="1.1110%" height="15" fill="rgb(210,31,41)" fg:x="570" fg:w="3529"/><text x="0.4294%" y="847.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (119 samples, 0.04%)</title><rect x="1.2904%" y="821" width="0.0375%" height="15" fill="rgb(221,200,47)" fg:x="4099" fg:w="119"/><text x="1.5404%" y="831.50"></text></g><g><title>nom::multi::count::{{closure}} (118 samples, 0.04%)</title><rect x="1.2907%" y="805" width="0.0371%" height="15" fill="rgb(226,26,5)" fg:x="4100" fg:w="118"/><text x="1.5407%" y="815.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (118 samples, 0.04%)</title><rect x="1.2907%" y="789" width="0.0371%" height="15" fill="rgb(249,33,26)" fg:x="4100" fg:w="118"/><text x="1.5407%" y="799.50"></text></g><g><title>core::ops::function::FnMut::call_mut (118 samples, 0.04%)</title><rect x="1.2907%" y="773" width="0.0371%" height="15" fill="rgb(235,183,28)" fg:x="4100" fg:w="118"/><text x="1.5407%" y="783.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (118 samples, 0.04%)</title><rect x="1.2907%" y="757" width="0.0371%" height="15" fill="rgb(221,5,38)" fg:x="4100" fg:w="118"/><text x="1.5407%" y="767.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (118 samples, 0.04%)</title><rect x="1.2907%" y="741" width="0.0371%" height="15" fill="rgb(247,18,42)" fg:x="4100" fg:w="118"/><text x="1.5407%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (381 samples, 0.12%)</title><rect x="1.3279%" y="821" width="0.1199%" height="15" fill="rgb(241,131,45)" fg:x="4218" fg:w="381"/><text x="1.5779%" y="831.50"></text></g><g><title>[anon] (1,166 samples, 0.37%)</title><rect x="1.2904%" y="837" width="0.3671%" height="15" fill="rgb(249,31,29)" fg:x="4099" fg:w="1166"/><text x="1.5404%" y="847.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (666 samples, 0.21%)</title><rect x="1.4478%" y="821" width="0.2097%" height="15" fill="rgb(225,111,53)" fg:x="4599" fg:w="666"/><text x="1.6978%" y="831.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (861 samples, 0.27%)</title><rect x="1.6578%" y="821" width="0.2711%" height="15" fill="rgb(238,160,17)" fg:x="5266" fg:w="861"/><text x="1.9078%" y="831.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (68 samples, 0.02%)</title><rect x="1.9563%" y="789" width="0.0214%" height="15" fill="rgb(214,148,48)" fg:x="6214" fg:w="68"/><text x="2.2063%" y="799.50"></text></g><g><title>core::ops::function::FnMut::call_mut (68 samples, 0.02%)</title><rect x="1.9563%" y="773" width="0.0214%" height="15" fill="rgb(232,36,49)" fg:x="6214" fg:w="68"/><text x="2.2063%" y="783.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (55 samples, 0.02%)</title><rect x="1.9604%" y="757" width="0.0173%" height="15" fill="rgb(209,103,24)" fg:x="6227" fg:w="55"/><text x="2.2104%" y="767.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (55 samples, 0.02%)</title><rect x="1.9604%" y="741" width="0.0173%" height="15" fill="rgb(229,88,8)" fg:x="6227" fg:w="55"/><text x="2.2104%" y="751.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (175 samples, 0.06%)</title><rect x="1.9289%" y="821" width="0.0551%" height="15" fill="rgb(213,181,19)" fg:x="6127" fg:w="175"/><text x="2.1789%" y="831.50"></text></g><g><title>nom::multi::count::{{closure}} (88 samples, 0.03%)</title><rect x="1.9563%" y="805" width="0.0277%" height="15" fill="rgb(254,191,54)" fg:x="6214" fg:w="88"/><text x="2.2063%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (457 samples, 0.14%)</title><rect x="1.9893%" y="821" width="0.1439%" height="15" fill="rgb(241,83,37)" fg:x="6319" fg:w="457"/><text x="2.2393%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (551 samples, 0.17%)</title><rect x="2.1464%" y="821" width="0.1735%" height="15" fill="rgb(233,36,39)" fg:x="6818" fg:w="551"/><text x="2.3964%" y="831.50"></text></g><g><title>_int_free (52 samples, 0.02%)</title><rect x="2.3205%" y="821" width="0.0164%" height="15" fill="rgb(226,3,54)" fg:x="7371" fg:w="52"/><text x="2.5705%" y="831.50"></text></g><g><title>_int_malloc (36 samples, 0.01%)</title><rect x="2.3369%" y="821" width="0.0113%" height="15" fill="rgb(245,192,40)" fg:x="7423" fg:w="36"/><text x="2.5869%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::GcRecord&gt; (445 samples, 0.14%)</title><rect x="2.3495%" y="821" width="0.1401%" height="15" fill="rgb(238,167,29)" fg:x="7463" fg:w="445"/><text x="2.5995%" y="831.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2,071 samples, 0.65%)</title><rect x="2.4899%" y="821" width="0.6520%" height="15" fill="rgb(232,182,51)" fg:x="7909" fg:w="2071"/><text x="2.7399%" y="831.50"></text></g><g><title>hashbrown::map::make_insert_hash (129 samples, 0.04%)</title><rect x="3.1013%" y="805" width="0.0406%" height="15" fill="rgb(231,60,39)" fg:x="9851" fg:w="129"/><text x="3.3513%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (129 samples, 0.04%)</title><rect x="3.1013%" y="789" width="0.0406%" height="15" fill="rgb(208,69,12)" fg:x="9851" fg:w="129"/><text x="3.3513%" y="799.50"></text></g><g><title>core::hash::Hasher::write_u64 (129 samples, 0.04%)</title><rect x="3.1013%" y="773" width="0.0406%" height="15" fill="rgb(235,93,37)" fg:x="9851" fg:w="129"/><text x="3.3513%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (940 samples, 0.30%)</title><rect x="3.1422%" y="805" width="0.2959%" height="15" fill="rgb(213,116,39)" fg:x="9981" fg:w="940"/><text x="3.3922%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (940 samples, 0.30%)</title><rect x="3.1422%" y="789" width="0.2959%" height="15" fill="rgb(222,207,29)" fg:x="9981" fg:w="940"/><text x="3.3922%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (940 samples, 0.30%)</title><rect x="3.1422%" y="773" width="0.2959%" height="15" fill="rgb(206,96,30)" fg:x="9981" fg:w="940"/><text x="3.3922%" y="783.50"></text></g><g><title>hprof_slurp::main::{{closure}} (475 samples, 0.15%)</title><rect x="3.2886%" y="757" width="0.1495%" height="15" fill="rgb(218,138,4)" fg:x="10446" fg:w="475"/><text x="3.5386%" y="767.50"></text></g><g><title>hprof_slurp::main (942 samples, 0.30%)</title><rect x="3.1419%" y="821" width="0.2966%" height="15" fill="rgb(250,191,14)" fg:x="9980" fg:w="942"/><text x="3.3919%" y="831.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_instance_dump (381 samples, 0.12%)</title><rect x="3.7957%" y="789" width="0.1199%" height="15" fill="rgb(239,60,40)" fg:x="12057" fg:w="381"/><text x="4.0457%" y="799.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (381 samples, 0.12%)</title><rect x="3.7957%" y="773" width="0.1199%" height="15" fill="rgb(206,27,48)" fg:x="12057" fg:w="381"/><text x="4.0457%" y="783.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (381 samples, 0.12%)</title><rect x="3.7957%" y="757" width="0.1199%" height="15" fill="rgb(225,35,8)" fg:x="12057" fg:w="381"/><text x="4.0457%" y="767.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (381 samples, 0.12%)</title><rect x="3.7957%" y="741" width="0.1199%" height="15" fill="rgb(250,213,24)" fg:x="12057" fg:w="381"/><text x="4.0457%" y="751.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (1,575 samples, 0.50%)</title><rect x="3.4384%" y="821" width="0.4958%" height="15" fill="rgb(247,123,22)" fg:x="10922" fg:w="1575"/><text x="3.6884%" y="831.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (440 samples, 0.14%)</title><rect x="3.7957%" y="805" width="0.1385%" height="15" fill="rgb(231,138,38)" fg:x="12057" fg:w="440"/><text x="4.0457%" y="815.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_primitive_array_dump (50 samples, 0.02%)</title><rect x="3.9185%" y="789" width="0.0157%" height="15" fill="rgb(231,145,46)" fg:x="12447" fg:w="50"/><text x="4.1685%" y="799.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (35 samples, 0.01%)</title><rect x="3.9232%" y="773" width="0.0110%" height="15" fill="rgb(251,118,11)" fg:x="12462" fg:w="35"/><text x="4.1732%" y="783.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (35 samples, 0.01%)</title><rect x="3.9232%" y="757" width="0.0110%" height="15" fill="rgb(217,147,25)" fg:x="12462" fg:w="35"/><text x="4.1732%" y="767.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (35 samples, 0.01%)</title><rect x="3.9232%" y="741" width="0.0110%" height="15" fill="rgb(247,81,37)" fg:x="12462" fg:w="35"/><text x="4.1732%" y="751.50"></text></g><g><title>core::ops::function::FnMut::call_mut (35 samples, 0.01%)</title><rect x="3.9232%" y="725" width="0.0110%" height="15" fill="rgb(209,12,38)" fg:x="12462" fg:w="35"/><text x="4.1732%" y="735.50"></text></g><g><title>nom::number::streaming::be_u32 (122 samples, 0.04%)</title><rect x="3.9352%" y="821" width="0.0384%" height="15" fill="rgb(227,1,9)" fg:x="12500" fg:w="122"/><text x="4.1852%" y="831.50"></text></g><g><title>nom::number::streaming::be_u64 (119 samples, 0.04%)</title><rect x="3.9736%" y="821" width="0.0375%" height="15" fill="rgb(248,47,43)" fg:x="12622" fg:w="119"/><text x="4.2236%" y="831.50"></text></g><g><title>[unknown] (7,485 samples, 2.36%)</title><rect x="1.6578%" y="837" width="2.3564%" height="15" fill="rgb(221,10,30)" fg:x="5266" fg:w="7485"/><text x="1.9078%" y="847.50">[..</text></g><g><title>__irqentry_text_end (87 samples, 0.03%)</title><rect x="4.0142%" y="837" width="0.0274%" height="15" fill="rgb(210,229,1)" fg:x="12751" fg:w="87"/><text x="4.2642%" y="847.50"></text></g><g><title>asm_exc_page_fault (12,264 samples, 3.86%)</title><rect x="4.1959%" y="357" width="3.8609%" height="15" fill="rgb(222,148,37)" fg:x="13328" fg:w="12264"/><text x="4.4459%" y="367.50">asm_..</text></g><g><title>__read_end_io (41 samples, 0.01%)</title><rect x="9.2723%" y="117" width="0.0129%" height="15" fill="rgb(234,67,33)" fg:x="29453" fg:w="41"/><text x="9.5223%" y="127.50"></text></g><g><title>nvme_complete_rq (81 samples, 0.03%)</title><rect x="9.2688%" y="197" width="0.0255%" height="15" fill="rgb(247,98,35)" fg:x="29442" fg:w="81"/><text x="9.5188%" y="207.50"></text></g><g><title>blk_mq_end_request (81 samples, 0.03%)</title><rect x="9.2688%" y="181" width="0.0255%" height="15" fill="rgb(247,138,52)" fg:x="29442" fg:w="81"/><text x="9.5188%" y="191.50"></text></g><g><title>blk_update_request (78 samples, 0.02%)</title><rect x="9.2698%" y="165" width="0.0246%" height="15" fill="rgb(213,79,30)" fg:x="29445" fg:w="78"/><text x="9.5198%" y="175.50"></text></g><g><title>bio_endio (72 samples, 0.02%)</title><rect x="9.2717%" y="149" width="0.0227%" height="15" fill="rgb(246,177,23)" fg:x="29451" fg:w="72"/><text x="9.5217%" y="159.50"></text></g><g><title>mpage_end_io (70 samples, 0.02%)</title><rect x="9.2723%" y="133" width="0.0220%" height="15" fill="rgb(230,62,27)" fg:x="29453" fg:w="70"/><text x="9.5223%" y="143.50"></text></g><g><title>__handle_irq_event_percpu (95 samples, 0.03%)</title><rect x="9.2666%" y="261" width="0.0299%" height="15" fill="rgb(216,154,8)" fg:x="29435" fg:w="95"/><text x="9.5166%" y="271.50"></text></g><g><title>nvme_irq (93 samples, 0.03%)</title><rect x="9.2673%" y="245" width="0.0293%" height="15" fill="rgb(244,35,45)" fg:x="29437" fg:w="93"/><text x="9.5173%" y="255.50"></text></g><g><title>nvme_process_cq (93 samples, 0.03%)</title><rect x="9.2673%" y="229" width="0.0293%" height="15" fill="rgb(251,115,12)" fg:x="29437" fg:w="93"/><text x="9.5173%" y="239.50"></text></g><g><title>nvme_pci_complete_rq (89 samples, 0.03%)</title><rect x="9.2685%" y="213" width="0.0280%" height="15" fill="rgb(240,54,50)" fg:x="29441" fg:w="89"/><text x="9.5185%" y="223.50"></text></g><g><title>handle_edge_irq (98 samples, 0.03%)</title><rect x="9.2660%" y="293" width="0.0309%" height="15" fill="rgb(233,84,52)" fg:x="29433" fg:w="98"/><text x="9.5160%" y="303.50"></text></g><g><title>handle_irq_event (96 samples, 0.03%)</title><rect x="9.2666%" y="277" width="0.0302%" height="15" fill="rgb(207,117,47)" fg:x="29435" fg:w="96"/><text x="9.5166%" y="287.50"></text></g><g><title>asm_common_interrupt (104 samples, 0.03%)</title><rect x="9.2647%" y="341" width="0.0327%" height="15" fill="rgb(249,43,39)" fg:x="29429" fg:w="104"/><text x="9.5147%" y="351.50"></text></g><g><title>common_interrupt (104 samples, 0.03%)</title><rect x="9.2647%" y="325" width="0.0327%" height="15" fill="rgb(209,38,44)" fg:x="29429" fg:w="104"/><text x="9.5147%" y="335.50"></text></g><g><title>asm_call_sysvec_on_stack (101 samples, 0.03%)</title><rect x="9.2657%" y="309" width="0.0318%" height="15" fill="rgb(236,212,23)" fg:x="29432" fg:w="101"/><text x="9.5157%" y="319.50"></text></g><g><title>__handle_irq_event_percpu (38 samples, 0.01%)</title><rect x="9.4052%" y="213" width="0.0120%" height="15" fill="rgb(242,79,21)" fg:x="29875" fg:w="38"/><text x="9.6552%" y="223.50"></text></g><g><title>nvme_irq (38 samples, 0.01%)</title><rect x="9.4052%" y="197" width="0.0120%" height="15" fill="rgb(211,96,35)" fg:x="29875" fg:w="38"/><text x="9.6552%" y="207.50"></text></g><g><title>nvme_process_cq (38 samples, 0.01%)</title><rect x="9.4052%" y="181" width="0.0120%" height="15" fill="rgb(253,215,40)" fg:x="29875" fg:w="38"/><text x="9.6552%" y="191.50"></text></g><g><title>nvme_pci_complete_rq (35 samples, 0.01%)</title><rect x="9.4061%" y="165" width="0.0110%" height="15" fill="rgb(211,81,21)" fg:x="29878" fg:w="35"/><text x="9.6561%" y="175.50"></text></g><g><title>asm_common_interrupt (39 samples, 0.01%)</title><rect x="9.4052%" y="293" width="0.0123%" height="15" fill="rgb(208,190,38)" fg:x="29875" fg:w="39"/><text x="9.6552%" y="303.50"></text></g><g><title>common_interrupt (39 samples, 0.01%)</title><rect x="9.4052%" y="277" width="0.0123%" height="15" fill="rgb(235,213,38)" fg:x="29875" fg:w="39"/><text x="9.6552%" y="287.50"></text></g><g><title>asm_call_sysvec_on_stack (39 samples, 0.01%)</title><rect x="9.4052%" y="261" width="0.0123%" height="15" fill="rgb(237,122,38)" fg:x="29875" fg:w="39"/><text x="9.6552%" y="271.50"></text></g><g><title>handle_edge_irq (39 samples, 0.01%)</title><rect x="9.4052%" y="245" width="0.0123%" height="15" fill="rgb(244,218,35)" fg:x="29875" fg:w="39"/><text x="9.6552%" y="255.50"></text></g><g><title>handle_irq_event (39 samples, 0.01%)</title><rect x="9.4052%" y="229" width="0.0123%" height="15" fill="rgb(240,68,47)" fg:x="29875" fg:w="39"/><text x="9.6552%" y="239.50"></text></g><g><title>down_read_trylock (130 samples, 0.04%)</title><rect x="9.4212%" y="293" width="0.0409%" height="15" fill="rgb(210,16,53)" fg:x="29926" fg:w="130"/><text x="9.6712%" y="303.50"></text></g><g><title>find_vma (72 samples, 0.02%)</title><rect x="9.4621%" y="293" width="0.0227%" height="15" fill="rgb(235,124,12)" fg:x="30056" fg:w="72"/><text x="9.7121%" y="303.50"></text></g><g><title>vmacache_find (58 samples, 0.02%)</title><rect x="9.4665%" y="277" width="0.0183%" height="15" fill="rgb(224,169,11)" fg:x="30070" fg:w="58"/><text x="9.7165%" y="287.50"></text></g><g><title>__count_memcg_events (40 samples, 0.01%)</title><rect x="9.5777%" y="277" width="0.0126%" height="15" fill="rgb(250,166,2)" fg:x="30423" fg:w="40"/><text x="9.8277%" y="287.50"></text></g><g><title>__count_memcg_events.part.0 (40 samples, 0.01%)</title><rect x="9.5777%" y="261" width="0.0126%" height="15" fill="rgb(242,216,29)" fg:x="30423" fg:w="40"/><text x="9.8277%" y="271.50"></text></g><g><title>_raw_spin_lock (123 samples, 0.04%)</title><rect x="9.7814%" y="245" width="0.0387%" height="15" fill="rgb(230,116,27)" fg:x="31070" fg:w="123"/><text x="10.0314%" y="255.50"></text></g><g><title>clear_page_erms (2,459 samples, 0.77%)</title><rect x="10.0911%" y="181" width="0.7741%" height="15" fill="rgb(228,99,48)" fg:x="32054" fg:w="2459"/><text x="10.3411%" y="191.50"></text></g><g><title>kernel_init_free_pages (38 samples, 0.01%)</title><rect x="10.8653%" y="181" width="0.0120%" height="15" fill="rgb(253,11,6)" fg:x="34513" fg:w="38"/><text x="11.1153%" y="191.50"></text></g><g><title>__inc_numa_state (35 samples, 0.01%)</title><rect x="10.9112%" y="165" width="0.0110%" height="15" fill="rgb(247,143,39)" fg:x="34659" fg:w="35"/><text x="11.1612%" y="175.50"></text></g><g><title>rmqueue (972 samples, 0.31%)</title><rect x="10.8772%" y="181" width="0.3060%" height="15" fill="rgb(236,97,10)" fg:x="34551" fg:w="972"/><text x="11.1272%" y="191.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (826 samples, 0.26%)</title><rect x="10.9232%" y="165" width="0.2600%" height="15" fill="rgb(233,208,19)" fg:x="34697" fg:w="826"/><text x="11.1732%" y="175.50"></text></g><g><title>rmqueue_bulk.constprop.0 (482 samples, 0.15%)</title><rect x="11.0315%" y="149" width="0.1517%" height="15" fill="rgb(216,164,2)" fg:x="35041" fg:w="482"/><text x="11.2815%" y="159.50"></text></g><g><title>get_page_from_freelist (3,646 samples, 1.15%)</title><rect x="10.0370%" y="197" width="1.1478%" height="15" fill="rgb(220,129,5)" fg:x="31882" fg:w="3646"/><text x="10.2870%" y="207.50"></text></g><g><title>__alloc_pages_nodemask (3,905 samples, 1.23%)</title><rect x="9.9668%" y="213" width="1.2294%" height="15" fill="rgb(242,17,10)" fg:x="31659" fg:w="3905"/><text x="10.2168%" y="223.50"></text></g><g><title>alloc_pages_vma (4,111 samples, 1.29%)</title><rect x="9.9170%" y="229" width="1.2942%" height="15" fill="rgb(242,107,0)" fg:x="31501" fg:w="4111"/><text x="10.1670%" y="239.50"></text></g><g><title>cgroup_throttle_swaprate (659 samples, 0.21%)</title><rect x="11.2116%" y="229" width="0.2075%" height="15" fill="rgb(251,28,31)" fg:x="35613" fg:w="659"/><text x="11.4616%" y="239.50"></text></g><g><title>__mod_memcg_lruvec_state (130 samples, 0.04%)</title><rect x="11.6854%" y="149" width="0.0409%" height="15" fill="rgb(233,223,10)" fg:x="37118" fg:w="130"/><text x="11.9354%" y="159.50"></text></g><g><title>__mod_memcg_state.part.0 (76 samples, 0.02%)</title><rect x="11.7024%" y="133" width="0.0239%" height="15" fill="rgb(215,21,27)" fg:x="37172" fg:w="76"/><text x="11.9524%" y="143.50"></text></g><g><title>__mod_lruvec_state (185 samples, 0.06%)</title><rect x="11.6791%" y="165" width="0.0582%" height="15" fill="rgb(232,23,21)" fg:x="37098" fg:w="185"/><text x="11.9291%" y="175.50"></text></g><g><title>__pagevec_lru_add_fn (916 samples, 0.29%)</title><rect x="11.5169%" y="181" width="0.2884%" height="15" fill="rgb(244,5,23)" fg:x="36583" fg:w="916"/><text x="11.7669%" y="191.50"></text></g><g><title>page_mapping (131 samples, 0.04%)</title><rect x="11.7641%" y="165" width="0.0412%" height="15" fill="rgb(226,81,46)" fg:x="37368" fg:w="131"/><text x="12.0141%" y="175.50"></text></g><g><title>__pagevec_lru_add (1,230 samples, 0.39%)</title><rect x="11.4914%" y="197" width="0.3872%" height="15" fill="rgb(247,70,30)" fg:x="36502" fg:w="1230"/><text x="11.7414%" y="207.50"></text></g><g><title>release_pages (178 samples, 0.06%)</title><rect x="11.8226%" y="181" width="0.0560%" height="15" fill="rgb(212,68,19)" fg:x="37554" fg:w="178"/><text x="12.0726%" y="191.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1,412 samples, 0.44%)</title><rect x="11.4360%" y="229" width="0.4445%" height="15" fill="rgb(240,187,13)" fg:x="36326" fg:w="1412"/><text x="11.6860%" y="239.50"></text></g><g><title>lru_cache_add (1,393 samples, 0.44%)</title><rect x="11.4420%" y="213" width="0.4385%" height="15" fill="rgb(223,113,26)" fg:x="36345" fg:w="1393"/><text x="11.6920%" y="223.50"></text></g><g><title>get_mem_cgroup_from_mm (217 samples, 0.07%)</title><rect x="11.9867%" y="213" width="0.0683%" height="15" fill="rgb(206,192,2)" fg:x="38075" fg:w="217"/><text x="12.2367%" y="223.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (79 samples, 0.02%)</title><rect x="12.0550%" y="213" width="0.0249%" height="15" fill="rgb(241,108,4)" fg:x="38292" fg:w="79"/><text x="12.3050%" y="223.50"></text></g><g><title>__count_memcg_events.part.0 (50 samples, 0.02%)</title><rect x="12.0641%" y="197" width="0.0157%" height="15" fill="rgb(247,173,49)" fg:x="38321" fg:w="50"/><text x="12.3141%" y="207.50"></text></g><g><title>page_counter_try_charge (75 samples, 0.02%)</title><rect x="12.2193%" y="197" width="0.0236%" height="15" fill="rgb(224,114,35)" fg:x="38814" fg:w="75"/><text x="12.4693%" y="207.50"></text></g><g><title>mem_cgroup_charge (1,159 samples, 0.36%)</title><rect x="11.8806%" y="229" width="0.3649%" height="15" fill="rgb(245,159,27)" fg:x="37738" fg:w="1159"/><text x="12.1306%" y="239.50"></text></g><g><title>try_charge (491 samples, 0.15%)</title><rect x="12.0909%" y="213" width="0.1546%" height="15" fill="rgb(245,172,44)" fg:x="38406" fg:w="491"/><text x="12.3409%" y="223.50"></text></g><g><title>__mod_memcg_state.part.0 (77 samples, 0.02%)</title><rect x="12.3109%" y="165" width="0.0242%" height="15" fill="rgb(236,23,11)" fg:x="39105" fg:w="77"/><text x="12.5609%" y="175.50"></text></g><g><title>__mod_memcg_lruvec_state (158 samples, 0.05%)</title><rect x="12.2857%" y="181" width="0.0497%" height="15" fill="rgb(205,117,38)" fg:x="39025" fg:w="158"/><text x="12.5357%" y="191.50"></text></g><g><title>__mod_lruvec_state (212 samples, 0.07%)</title><rect x="12.2766%" y="197" width="0.0667%" height="15" fill="rgb(237,72,25)" fg:x="38996" fg:w="212"/><text x="12.5266%" y="207.50"></text></g><g><title>__mod_lruvec_page_state (274 samples, 0.09%)</title><rect x="12.2719%" y="213" width="0.0863%" height="15" fill="rgb(244,70,9)" fg:x="38981" fg:w="274"/><text x="12.5219%" y="223.50"></text></g><g><title>__mod_node_page_state (40 samples, 0.01%)</title><rect x="12.3455%" y="197" width="0.0126%" height="15" fill="rgb(217,125,39)" fg:x="39215" fg:w="40"/><text x="12.5955%" y="207.50"></text></g><g><title>page_add_new_anon_rmap (381 samples, 0.12%)</title><rect x="12.2555%" y="229" width="0.1199%" height="15" fill="rgb(235,36,10)" fg:x="38929" fg:w="381"/><text x="12.5055%" y="239.50"></text></g><g><title>__page_set_anon_rmap (43 samples, 0.01%)</title><rect x="12.3619%" y="213" width="0.0135%" height="15" fill="rgb(251,123,47)" fg:x="39267" fg:w="43"/><text x="12.6119%" y="223.50"></text></g><g><title>do_anonymous_page (8,169 samples, 2.57%)</title><rect x="9.8286%" y="245" width="2.5717%" height="15" fill="rgb(221,13,13)" fg:x="31220" fg:w="8169"/><text x="10.0786%" y="255.50">do..</text></g><g><title>handle_pte_fault (8,554 samples, 2.69%)</title><rect x="9.7278%" y="261" width="2.6929%" height="15" fill="rgb(238,131,9)" fg:x="30900" fg:w="8554"/><text x="9.9778%" y="271.50">ha..</text></g><g><title>__handle_mm_fault (8,998 samples, 2.83%)</title><rect x="9.5903%" y="277" width="2.8327%" height="15" fill="rgb(211,50,8)" fg:x="30463" fg:w="8998"/><text x="9.8403%" y="287.50">__..</text></g><g><title>handle_mm_fault (9,416 samples, 2.96%)</title><rect x="9.4848%" y="293" width="2.9643%" height="15" fill="rgb(245,182,24)" fg:x="30128" fg:w="9416"/><text x="9.7348%" y="303.50">han..</text></g><g><title>rcu_read_unlock_strict (68 samples, 0.02%)</title><rect x="12.4589%" y="293" width="0.0214%" height="15" fill="rgb(242,14,37)" fg:x="39575" fg:w="68"/><text x="12.7089%" y="303.50"></text></g><g><title>up_read (165 samples, 0.05%)</title><rect x="12.4812%" y="293" width="0.0519%" height="15" fill="rgb(246,228,12)" fg:x="39646" fg:w="165"/><text x="12.7312%" y="303.50"></text></g><g><title>do_user_addr_fault (10,173 samples, 3.20%)</title><rect x="9.3353%" y="309" width="3.2026%" height="15" fill="rgb(213,55,15)" fg:x="29653" fg:w="10173"/><text x="9.5853%" y="319.50">do_..</text></g><g><title>exc_page_fault (10,364 samples, 3.26%)</title><rect x="9.2987%" y="325" width="3.2628%" height="15" fill="rgb(209,9,3)" fg:x="29537" fg:w="10364"/><text x="9.5487%" y="335.50">exc..</text></g><g><title>asm_exc_page_fault (10,394 samples, 3.27%)</title><rect x="9.2975%" y="341" width="3.2722%" height="15" fill="rgb(230,59,30)" fg:x="29533" fg:w="10394"/><text x="9.5475%" y="351.50">asm..</text></g><g><title>copy_user_enhanced_fast_string (14,351 samples, 4.52%)</title><rect x="8.0577%" y="357" width="4.5179%" height="15" fill="rgb(209,121,21)" fg:x="25595" fg:w="14351"/><text x="8.3077%" y="367.50">copy_..</text></g><g><title>copyout (61 samples, 0.02%)</title><rect x="12.5760%" y="357" width="0.0192%" height="15" fill="rgb(220,109,13)" fg:x="39947" fg:w="61"/><text x="12.8260%" y="367.50"></text></g><g><title>error_entry (168 samples, 0.05%)</title><rect x="12.5952%" y="357" width="0.0529%" height="15" fill="rgb(232,18,1)" fg:x="40008" fg:w="168"/><text x="12.8452%" y="367.50"></text></g><g><title>copy_page_to_iter_iovec (27,084 samples, 8.53%)</title><rect x="4.1461%" y="373" width="8.5265%" height="15" fill="rgb(215,41,42)" fg:x="13170" fg:w="27084"/><text x="4.3961%" y="383.50">copy_page_to..</text></g><g><title>restore_regs_and_return_to_kernel (34 samples, 0.01%)</title><rect x="12.6619%" y="357" width="0.0107%" height="15" fill="rgb(224,123,36)" fg:x="40220" fg:w="34"/><text x="12.9119%" y="367.50"></text></g><g><title>copy_page_to_iter (27,171 samples, 8.55%)</title><rect x="4.1291%" y="389" width="8.5539%" height="15" fill="rgb(240,125,3)" fg:x="13116" fg:w="27171"/><text x="4.3791%" y="399.50">copy_page_to..</text></g><g><title>copyout (33 samples, 0.01%)</title><rect x="12.6726%" y="373" width="0.0104%" height="15" fill="rgb(205,98,50)" fg:x="40254" fg:w="33"/><text x="12.9226%" y="383.50"></text></g><g><title>find_get_pages_contig (292 samples, 0.09%)</title><rect x="12.7136%" y="373" width="0.0919%" height="15" fill="rgb(205,185,37)" fg:x="40384" fg:w="292"/><text x="12.9636%" y="383.50"></text></g><g><title>blk_update_request (41 samples, 0.01%)</title><rect x="13.7074%" y="69" width="0.0129%" height="15" fill="rgb(238,207,15)" fg:x="43541" fg:w="41"/><text x="13.9574%" y="79.50"></text></g><g><title>bio_endio (39 samples, 0.01%)</title><rect x="13.7081%" y="53" width="0.0123%" height="15" fill="rgb(213,199,42)" fg:x="43543" fg:w="39"/><text x="13.9581%" y="63.50"></text></g><g><title>mpage_end_io (39 samples, 0.01%)</title><rect x="13.7081%" y="37" width="0.0123%" height="15" fill="rgb(235,201,11)" fg:x="43543" fg:w="39"/><text x="13.9581%" y="47.50"></text></g><g><title>nvme_complete_rq (43 samples, 0.01%)</title><rect x="13.7071%" y="101" width="0.0135%" height="15" fill="rgb(207,46,11)" fg:x="43540" fg:w="43"/><text x="13.9571%" y="111.50"></text></g><g><title>blk_mq_end_request (43 samples, 0.01%)</title><rect x="13.7071%" y="85" width="0.0135%" height="15" fill="rgb(241,35,35)" fg:x="43540" fg:w="43"/><text x="13.9571%" y="95.50"></text></g><g><title>asm_common_interrupt (49 samples, 0.02%)</title><rect x="13.7059%" y="245" width="0.0154%" height="15" fill="rgb(243,32,47)" fg:x="43536" fg:w="49"/><text x="13.9559%" y="255.50"></text></g><g><title>common_interrupt (49 samples, 0.02%)</title><rect x="13.7059%" y="229" width="0.0154%" height="15" fill="rgb(247,202,23)" fg:x="43536" fg:w="49"/><text x="13.9559%" y="239.50"></text></g><g><title>asm_call_sysvec_on_stack (48 samples, 0.02%)</title><rect x="13.7062%" y="213" width="0.0151%" height="15" fill="rgb(219,102,11)" fg:x="43537" fg:w="48"/><text x="13.9562%" y="223.50"></text></g><g><title>handle_edge_irq (48 samples, 0.02%)</title><rect x="13.7062%" y="197" width="0.0151%" height="15" fill="rgb(243,110,44)" fg:x="43537" fg:w="48"/><text x="13.9562%" y="207.50"></text></g><g><title>handle_irq_event (47 samples, 0.01%)</title><rect x="13.7065%" y="181" width="0.0148%" height="15" fill="rgb(222,74,54)" fg:x="43538" fg:w="47"/><text x="13.9565%" y="191.50"></text></g><g><title>__handle_irq_event_percpu (47 samples, 0.01%)</title><rect x="13.7065%" y="165" width="0.0148%" height="15" fill="rgb(216,99,12)" fg:x="43538" fg:w="47"/><text x="13.9565%" y="175.50"></text></g><g><title>nvme_irq (47 samples, 0.01%)</title><rect x="13.7065%" y="149" width="0.0148%" height="15" fill="rgb(226,22,26)" fg:x="43538" fg:w="47"/><text x="13.9565%" y="159.50"></text></g><g><title>nvme_process_cq (47 samples, 0.01%)</title><rect x="13.7065%" y="133" width="0.0148%" height="15" fill="rgb(217,163,10)" fg:x="43538" fg:w="47"/><text x="13.9565%" y="143.50"></text></g><g><title>nvme_pci_complete_rq (45 samples, 0.01%)</title><rect x="13.7071%" y="117" width="0.0142%" height="15" fill="rgb(213,25,53)" fg:x="43540" fg:w="45"/><text x="13.9571%" y="127.50"></text></g><g><title>clear_page_erms (2,305 samples, 0.73%)</title><rect x="12.9963%" y="261" width="0.7257%" height="15" fill="rgb(252,105,26)" fg:x="41282" fg:w="2305"/><text x="13.2463%" y="271.50"></text></g><g><title>kernel_init_free_pages (51 samples, 0.02%)</title><rect x="13.7219%" y="261" width="0.0161%" height="15" fill="rgb(220,39,43)" fg:x="43587" fg:w="51"/><text x="13.9719%" y="271.50"></text></g><g><title>rmqueue (913 samples, 0.29%)</title><rect x="13.7380%" y="261" width="0.2874%" height="15" fill="rgb(229,68,48)" fg:x="43638" fg:w="913"/><text x="13.9880%" y="271.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (781 samples, 0.25%)</title><rect x="13.7795%" y="245" width="0.2459%" height="15" fill="rgb(252,8,32)" fg:x="43770" fg:w="781"/><text x="14.0295%" y="255.50"></text></g><g><title>rmqueue_bulk.constprop.0 (463 samples, 0.15%)</title><rect x="13.8796%" y="229" width="0.1458%" height="15" fill="rgb(223,20,43)" fg:x="44088" fg:w="463"/><text x="14.1296%" y="239.50"></text></g><g><title>get_page_from_freelist (3,451 samples, 1.09%)</title><rect x="12.9418%" y="277" width="1.0864%" height="15" fill="rgb(229,81,49)" fg:x="41109" fg:w="3451"/><text x="13.1918%" y="287.50"></text></g><g><title>__alloc_pages_nodemask (3,661 samples, 1.15%)</title><rect x="12.8880%" y="293" width="1.1525%" height="15" fill="rgb(236,28,36)" fg:x="40938" fg:w="3661"/><text x="13.1380%" y="303.50"></text></g><g><title>alloc_pages_current (3,797 samples, 1.20%)</title><rect x="12.8666%" y="309" width="1.1954%" height="15" fill="rgb(249,185,26)" fg:x="40870" fg:w="3797"/><text x="13.1166%" y="319.50"></text></g><g><title>__page_cache_alloc (3,832 samples, 1.21%)</title><rect x="12.8609%" y="325" width="1.2064%" height="15" fill="rgb(249,174,33)" fg:x="40852" fg:w="3832"/><text x="13.1109%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (145 samples, 0.05%)</title><rect x="14.6749%" y="261" width="0.0456%" height="15" fill="rgb(233,201,37)" fg:x="46614" fg:w="145"/><text x="14.9249%" y="271.50"></text></g><g><title>__mod_memcg_state.part.0 (69 samples, 0.02%)</title><rect x="14.6988%" y="245" width="0.0217%" height="15" fill="rgb(221,78,26)" fg:x="46690" fg:w="69"/><text x="14.9488%" y="255.50"></text></g><g><title>__mod_lruvec_state (212 samples, 0.07%)</title><rect x="14.6689%" y="277" width="0.0667%" height="15" fill="rgb(250,127,30)" fg:x="46595" fg:w="212"/><text x="14.9189%" y="287.50"></text></g><g><title>__mod_node_page_state (41 samples, 0.01%)</title><rect x="14.7227%" y="261" width="0.0129%" height="15" fill="rgb(230,49,44)" fg:x="46766" fg:w="41"/><text x="14.9727%" y="271.50"></text></g><g><title>__mod_lruvec_page_state (348 samples, 0.11%)</title><rect x="14.6509%" y="293" width="0.1096%" height="15" fill="rgb(229,67,23)" fg:x="46538" fg:w="348"/><text x="14.9009%" y="303.50"></text></g><g><title>__mod_node_page_state (73 samples, 0.02%)</title><rect x="14.7375%" y="277" width="0.0230%" height="15" fill="rgb(249,83,47)" fg:x="46813" fg:w="73"/><text x="14.9875%" y="287.50"></text></g><g><title>_raw_spin_lock_irq (124 samples, 0.04%)</title><rect x="14.7649%" y="293" width="0.0390%" height="15" fill="rgb(215,43,3)" fg:x="46900" fg:w="124"/><text x="15.0149%" y="303.50"></text></g><g><title>nvme_complete_rq (36 samples, 0.01%)</title><rect x="14.8068%" y="149" width="0.0113%" height="15" fill="rgb(238,154,13)" fg:x="47033" fg:w="36"/><text x="15.0568%" y="159.50"></text></g><g><title>blk_mq_end_request (36 samples, 0.01%)</title><rect x="14.8068%" y="133" width="0.0113%" height="15" fill="rgb(219,56,2)" fg:x="47033" fg:w="36"/><text x="15.0568%" y="143.50"></text></g><g><title>blk_update_request (33 samples, 0.01%)</title><rect x="14.8077%" y="117" width="0.0104%" height="15" fill="rgb(233,0,4)" fg:x="47036" fg:w="33"/><text x="15.0577%" y="127.50"></text></g><g><title>handle_irq_event (45 samples, 0.01%)</title><rect x="14.8046%" y="229" width="0.0142%" height="15" fill="rgb(235,30,7)" fg:x="47026" fg:w="45"/><text x="15.0546%" y="239.50"></text></g><g><title>__handle_irq_event_percpu (45 samples, 0.01%)</title><rect x="14.8046%" y="213" width="0.0142%" height="15" fill="rgb(250,79,13)" fg:x="47026" fg:w="45"/><text x="15.0546%" y="223.50"></text></g><g><title>nvme_irq (45 samples, 0.01%)</title><rect x="14.8046%" y="197" width="0.0142%" height="15" fill="rgb(211,146,34)" fg:x="47026" fg:w="45"/><text x="15.0546%" y="207.50"></text></g><g><title>nvme_process_cq (45 samples, 0.01%)</title><rect x="14.8046%" y="181" width="0.0142%" height="15" fill="rgb(228,22,38)" fg:x="47026" fg:w="45"/><text x="15.0546%" y="191.50"></text></g><g><title>nvme_pci_complete_rq (39 samples, 0.01%)</title><rect x="14.8065%" y="165" width="0.0123%" height="15" fill="rgb(235,168,5)" fg:x="47032" fg:w="39"/><text x="15.0565%" y="175.50"></text></g><g><title>asm_common_interrupt (48 samples, 0.02%)</title><rect x="14.8039%" y="293" width="0.0151%" height="15" fill="rgb(221,155,16)" fg:x="47024" fg:w="48"/><text x="15.0539%" y="303.50"></text></g><g><title>common_interrupt (48 samples, 0.02%)</title><rect x="14.8039%" y="277" width="0.0151%" height="15" fill="rgb(215,215,53)" fg:x="47024" fg:w="48"/><text x="15.0539%" y="287.50"></text></g><g><title>asm_call_sysvec_on_stack (47 samples, 0.01%)</title><rect x="14.8043%" y="261" width="0.0148%" height="15" fill="rgb(223,4,10)" fg:x="47025" fg:w="47"/><text x="15.0543%" y="271.50"></text></g><g><title>handle_edge_irq (46 samples, 0.01%)</title><rect x="14.8046%" y="245" width="0.0145%" height="15" fill="rgb(234,103,6)" fg:x="47026" fg:w="46"/><text x="15.0546%" y="255.50"></text></g><g><title>get_mem_cgroup_from_mm (51 samples, 0.02%)</title><rect x="14.9104%" y="277" width="0.0161%" height="15" fill="rgb(227,97,0)" fg:x="47362" fg:w="51"/><text x="15.1604%" y="287.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (63 samples, 0.02%)</title><rect x="14.9264%" y="277" width="0.0198%" height="15" fill="rgb(234,150,53)" fg:x="47413" fg:w="63"/><text x="15.1764%" y="287.50"></text></g><g><title>__count_memcg_events.part.0 (35 samples, 0.01%)</title><rect x="14.9352%" y="261" width="0.0110%" height="15" fill="rgb(228,201,54)" fg:x="47441" fg:w="35"/><text x="15.1852%" y="271.50"></text></g><g><title>page_counter_try_charge (58 samples, 0.02%)</title><rect x="15.0419%" y="261" width="0.0183%" height="15" fill="rgb(222,22,37)" fg:x="47780" fg:w="58"/><text x="15.2919%" y="271.50"></text></g><g><title>mem_cgroup_charge (755 samples, 0.24%)</title><rect x="14.8257%" y="293" width="0.2377%" height="15" fill="rgb(237,53,32)" fg:x="47093" fg:w="755"/><text x="15.0757%" y="303.50"></text></g><g><title>try_charge (345 samples, 0.11%)</title><rect x="14.9547%" y="277" width="0.1086%" height="15" fill="rgb(233,25,53)" fg:x="47503" fg:w="345"/><text x="15.2047%" y="287.50"></text></g><g><title>xas_load (296 samples, 0.09%)</title><rect x="15.0983%" y="277" width="0.0932%" height="15" fill="rgb(210,40,34)" fg:x="47959" fg:w="296"/><text x="15.3483%" y="287.50"></text></g><g><title>xa_get_order (372 samples, 0.12%)</title><rect x="15.0863%" y="293" width="0.1171%" height="15" fill="rgb(241,220,44)" fg:x="47921" fg:w="372"/><text x="15.3363%" y="303.50"></text></g><g><title>xas_start (38 samples, 0.01%)</title><rect x="15.1915%" y="277" width="0.0120%" height="15" fill="rgb(235,28,35)" fg:x="48255" fg:w="38"/><text x="15.4415%" y="287.50"></text></g><g><title>xas_find_conflict (181 samples, 0.06%)</title><rect x="15.2057%" y="293" width="0.0570%" height="15" fill="rgb(210,56,17)" fg:x="48300" fg:w="181"/><text x="15.4557%" y="303.50"></text></g><g><title>xas_start (34 samples, 0.01%)</title><rect x="15.2718%" y="293" width="0.0107%" height="15" fill="rgb(224,130,29)" fg:x="48510" fg:w="34"/><text x="15.5218%" y="303.50"></text></g><g><title>__add_to_page_cache_locked (4,054 samples, 1.28%)</title><rect x="14.1019%" y="309" width="1.2763%" height="15" fill="rgb(235,212,8)" fg:x="44794" fg:w="4054"/><text x="14.3519%" y="319.50"></text></g><g><title>xas_store (304 samples, 0.10%)</title><rect x="15.2825%" y="293" width="0.0957%" height="15" fill="rgb(223,33,50)" fg:x="48544" fg:w="304"/><text x="15.5325%" y="303.50"></text></g><g><title>xas_create (132 samples, 0.04%)</title><rect x="15.3366%" y="277" width="0.0416%" height="15" fill="rgb(219,149,13)" fg:x="48716" fg:w="132"/><text x="15.5866%" y="287.50"></text></g><g><title>xas_alloc (82 samples, 0.03%)</title><rect x="15.3524%" y="261" width="0.0258%" height="15" fill="rgb(250,156,29)" fg:x="48766" fg:w="82"/><text x="15.6024%" y="271.50"></text></g><g><title>kmem_cache_alloc (78 samples, 0.02%)</title><rect x="15.3536%" y="245" width="0.0246%" height="15" fill="rgb(216,193,19)" fg:x="48770" fg:w="78"/><text x="15.6036%" y="255.50"></text></g><g><title>__lock_text_start (37 samples, 0.01%)</title><rect x="15.4500%" y="277" width="0.0116%" height="15" fill="rgb(216,135,14)" fg:x="49076" fg:w="37"/><text x="15.7000%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (133 samples, 0.04%)</title><rect x="15.6329%" y="245" width="0.0419%" height="15" fill="rgb(241,47,5)" fg:x="49657" fg:w="133"/><text x="15.8829%" y="255.50"></text></g><g><title>__mod_memcg_state.part.0 (69 samples, 0.02%)</title><rect x="15.6530%" y="229" width="0.0217%" height="15" fill="rgb(233,42,35)" fg:x="49721" fg:w="69"/><text x="15.9030%" y="239.50"></text></g><g><title>__mod_lruvec_state (183 samples, 0.06%)</title><rect x="15.6253%" y="261" width="0.0576%" height="15" fill="rgb(231,13,6)" fg:x="49633" fg:w="183"/><text x="15.8753%" y="271.50"></text></g><g><title>__mod_zone_page_state (38 samples, 0.01%)</title><rect x="15.6908%" y="261" width="0.0120%" height="15" fill="rgb(207,181,40)" fg:x="49841" fg:w="38"/><text x="15.9408%" y="271.50"></text></g><g><title>mem_cgroup_update_lru_size (32 samples, 0.01%)</title><rect x="15.7027%" y="261" width="0.0101%" height="15" fill="rgb(254,173,49)" fg:x="49879" fg:w="32"/><text x="15.9527%" y="271.50"></text></g><g><title>page_mapping (100 samples, 0.03%)</title><rect x="15.7128%" y="261" width="0.0315%" height="15" fill="rgb(221,1,38)" fg:x="49911" fg:w="100"/><text x="15.9628%" y="271.50"></text></g><g><title>__pagevec_lru_add_fn (872 samples, 0.27%)</title><rect x="15.4701%" y="277" width="0.2745%" height="15" fill="rgb(206,124,46)" fg:x="49140" fg:w="872"/><text x="15.7201%" y="287.50"></text></g><g><title>__pagevec_lru_add (1,192 samples, 0.38%)</title><rect x="15.4345%" y="293" width="0.3753%" height="15" fill="rgb(249,21,11)" fg:x="49027" fg:w="1192"/><text x="15.6845%" y="303.50"></text></g><g><title>release_pages (138 samples, 0.04%)</title><rect x="15.7663%" y="277" width="0.0434%" height="15" fill="rgb(222,201,40)" fg:x="50081" fg:w="138"/><text x="16.0163%" y="287.50"></text></g><g><title>lru_cache_add (1,344 samples, 0.42%)</title><rect x="15.3895%" y="309" width="0.4231%" height="15" fill="rgb(235,61,29)" fg:x="48884" fg:w="1344"/><text x="15.6395%" y="319.50"></text></g><g><title>add_to_page_cache_lru (5,584 samples, 1.76%)</title><rect x="14.0673%" y="325" width="1.7579%" height="15" fill="rgb(219,207,3)" fg:x="44684" fg:w="5584"/><text x="14.3173%" y="335.50"></text></g><g><title>nvme_pci_setup_prps (44 samples, 0.01%)</title><rect x="15.8583%" y="181" width="0.0139%" height="15" fill="rgb(222,56,46)" fg:x="50373" fg:w="44"/><text x="16.1083%" y="191.50"></text></g><g><title>nvme_map_data (107 samples, 0.03%)</title><rect x="15.8416%" y="197" width="0.0337%" height="15" fill="rgb(239,76,54)" fg:x="50320" fg:w="107"/><text x="16.0916%" y="207.50"></text></g><g><title>nvme_queue_rq (125 samples, 0.04%)</title><rect x="15.8378%" y="213" width="0.0394%" height="15" fill="rgb(231,124,27)" fg:x="50308" fg:w="125"/><text x="16.0878%" y="223.50"></text></g><g><title>__blk_mq_try_issue_directly (128 samples, 0.04%)</title><rect x="15.8375%" y="229" width="0.0403%" height="15" fill="rgb(249,195,6)" fg:x="50307" fg:w="128"/><text x="16.0875%" y="239.50"></text></g><g><title>blk_finish_plug (133 samples, 0.04%)</title><rect x="15.8365%" y="309" width="0.0419%" height="15" fill="rgb(237,174,47)" fg:x="50304" fg:w="133"/><text x="16.0865%" y="319.50"></text></g><g><title>blk_flush_plug_list (133 samples, 0.04%)</title><rect x="15.8365%" y="293" width="0.0419%" height="15" fill="rgb(206,201,31)" fg:x="50304" fg:w="133"/><text x="16.0865%" y="303.50"></text></g><g><title>blk_mq_flush_plug_list (133 samples, 0.04%)</title><rect x="15.8365%" y="277" width="0.0419%" height="15" fill="rgb(231,57,52)" fg:x="50304" fg:w="133"/><text x="16.0865%" y="287.50"></text></g><g><title>blk_mq_sched_insert_requests (132 samples, 0.04%)</title><rect x="15.8369%" y="261" width="0.0416%" height="15" fill="rgb(248,177,22)" fg:x="50305" fg:w="132"/><text x="16.0869%" y="271.50"></text></g><g><title>blk_mq_try_issue_list_directly (131 samples, 0.04%)</title><rect x="15.8372%" y="245" width="0.0412%" height="15" fill="rgb(215,211,37)" fg:x="50306" fg:w="131"/><text x="16.0872%" y="255.50"></text></g><g><title>bio_add_page (138 samples, 0.04%)</title><rect x="16.0547%" y="277" width="0.0434%" height="15" fill="rgb(241,128,51)" fg:x="50997" fg:w="138"/><text x="16.3047%" y="287.50"></text></g><g><title>__bio_try_merge_page (95 samples, 0.03%)</title><rect x="16.0683%" y="261" width="0.0299%" height="15" fill="rgb(227,165,31)" fg:x="51040" fg:w="95"/><text x="16.3183%" y="271.50"></text></g><g><title>ext4_map_blocks (35 samples, 0.01%)</title><rect x="16.1041%" y="277" width="0.0110%" height="15" fill="rgb(228,167,24)" fg:x="51154" fg:w="35"/><text x="16.3541%" y="287.50"></text></g><g><title>fscrypt_mergeable_bio (39 samples, 0.01%)</title><rect x="16.1152%" y="277" width="0.0123%" height="15" fill="rgb(228,143,12)" fg:x="51189" fg:w="39"/><text x="16.3652%" y="287.50"></text></g><g><title>blk_bio_segment_split (36 samples, 0.01%)</title><rect x="16.1410%" y="197" width="0.0113%" height="15" fill="rgb(249,149,8)" fg:x="51271" fg:w="36"/><text x="16.3910%" y="207.50"></text></g><g><title>__blk_queue_split (43 samples, 0.01%)</title><rect x="16.1397%" y="213" width="0.0135%" height="15" fill="rgb(243,35,44)" fg:x="51267" fg:w="43"/><text x="16.3897%" y="223.50"></text></g><g><title>nvme_map_data (50 samples, 0.02%)</title><rect x="16.1589%" y="117" width="0.0157%" height="15" fill="rgb(246,89,9)" fg:x="51328" fg:w="50"/><text x="16.4089%" y="127.50"></text></g><g><title>blk_mq_try_issue_list_directly (58 samples, 0.02%)</title><rect x="16.1570%" y="165" width="0.0183%" height="15" fill="rgb(233,213,13)" fg:x="51322" fg:w="58"/><text x="16.4070%" y="175.50"></text></g><g><title>__blk_mq_try_issue_directly (57 samples, 0.02%)</title><rect x="16.1573%" y="149" width="0.0179%" height="15" fill="rgb(233,141,41)" fg:x="51323" fg:w="57"/><text x="16.4073%" y="159.50"></text></g><g><title>nvme_queue_rq (57 samples, 0.02%)</title><rect x="16.1573%" y="133" width="0.0179%" height="15" fill="rgb(239,167,4)" fg:x="51323" fg:w="57"/><text x="16.4073%" y="143.50"></text></g><g><title>blk_mq_flush_plug_list (59 samples, 0.02%)</title><rect x="16.1570%" y="197" width="0.0186%" height="15" fill="rgb(209,217,16)" fg:x="51322" fg:w="59"/><text x="16.4070%" y="207.50"></text></g><g><title>blk_mq_sched_insert_requests (59 samples, 0.02%)</title><rect x="16.1570%" y="181" width="0.0186%" height="15" fill="rgb(219,88,35)" fg:x="51322" fg:w="59"/><text x="16.4070%" y="191.50"></text></g><g><title>blk_flush_plug_list (60 samples, 0.02%)</title><rect x="16.1570%" y="213" width="0.0189%" height="15" fill="rgb(220,193,23)" fg:x="51322" fg:w="60"/><text x="16.4070%" y="223.50"></text></g><g><title>blk_mq_submit_bio (138 samples, 0.04%)</title><rect x="16.1334%" y="229" width="0.0434%" height="15" fill="rgb(230,90,52)" fg:x="51247" fg:w="138"/><text x="16.3834%" y="239.50"></text></g><g><title>__submit_bio_noacct_mq (142 samples, 0.04%)</title><rect x="16.1325%" y="245" width="0.0447%" height="15" fill="rgb(252,106,19)" fg:x="51244" fg:w="142"/><text x="16.3825%" y="255.50"></text></g><g><title>submit_bio (170 samples, 0.05%)</title><rect x="16.1300%" y="277" width="0.0535%" height="15" fill="rgb(206,74,20)" fg:x="51236" fg:w="170"/><text x="16.3800%" y="287.50"></text></g><g><title>submit_bio_noacct (166 samples, 0.05%)</title><rect x="16.1312%" y="261" width="0.0523%" height="15" fill="rgb(230,138,44)" fg:x="51240" fg:w="166"/><text x="16.3812%" y="271.50"></text></g><g><title>xas_load (136 samples, 0.04%)</title><rect x="16.1961%" y="261" width="0.0428%" height="15" fill="rgb(235,182,43)" fg:x="51446" fg:w="136"/><text x="16.4461%" y="271.50"></text></g><g><title>xa_load (206 samples, 0.06%)</title><rect x="16.1835%" y="277" width="0.0649%" height="15" fill="rgb(242,16,51)" fg:x="51406" fg:w="206"/><text x="16.4335%" y="287.50"></text></g><g><title>ext4_mpage_readpages (1,176 samples, 0.37%)</title><rect x="15.8803%" y="293" width="0.3702%" height="15" fill="rgb(248,9,4)" fg:x="50443" fg:w="1176"/><text x="16.1303%" y="303.50"></text></g><g><title>read_pages (1,341 samples, 0.42%)</title><rect x="15.8362%" y="325" width="0.4222%" height="15" fill="rgb(210,31,22)" fg:x="50303" fg:w="1341"/><text x="16.0862%" y="335.50"></text></g><g><title>ext4_readahead (1,206 samples, 0.38%)</title><rect x="15.8787%" y="309" width="0.3797%" height="15" fill="rgb(239,54,39)" fg:x="50438" fg:w="1206"/><text x="16.1287%" y="319.50"></text></g><g><title>xas_load (257 samples, 0.08%)</title><rect x="16.2707%" y="309" width="0.0809%" height="15" fill="rgb(230,99,41)" fg:x="51683" fg:w="257"/><text x="16.5207%" y="319.50"></text></g><g><title>xa_load (335 samples, 0.11%)</title><rect x="16.2584%" y="325" width="0.1055%" height="15" fill="rgb(253,106,12)" fg:x="51644" fg:w="335"/><text x="16.5084%" y="335.50"></text></g><g><title>xas_start (39 samples, 0.01%)</title><rect x="16.3516%" y="309" width="0.0123%" height="15" fill="rgb(213,46,41)" fg:x="51940" fg:w="39"/><text x="16.6016%" y="319.50"></text></g><g><title>page_cache_ra_unbounded (11,261 samples, 3.55%)</title><rect x="12.8219%" y="341" width="3.5452%" height="15" fill="rgb(215,133,35)" fg:x="40728" fg:w="11261"/><text x="13.0719%" y="351.50">page..</text></g><g><title>page_cache_async_ra (11,295 samples, 3.56%)</title><rect x="12.8124%" y="373" width="3.5559%" height="15" fill="rgb(213,28,5)" fg:x="40698" fg:w="11295"/><text x="13.0624%" y="383.50">page..</text></g><g><title>ondemand_readahead (11,286 samples, 3.55%)</title><rect x="12.8152%" y="357" width="3.5530%" height="15" fill="rgb(215,77,49)" fg:x="40707" fg:w="11286"/><text x="13.0652%" y="367.50">onde..</text></g><g><title>generic_file_buffered_read_get_pages (11,703 samples, 3.68%)</title><rect x="12.6843%" y="389" width="3.6843%" height="15" fill="rgb(248,100,22)" fg:x="40291" fg:w="11703"/><text x="12.9343%" y="399.50">gene..</text></g><g><title>mark_page_accessed (273 samples, 0.09%)</title><rect x="16.3692%" y="389" width="0.0859%" height="15" fill="rgb(208,67,9)" fg:x="51996" fg:w="273"/><text x="16.6192%" y="399.50"></text></g><g><title>generic_file_buffered_read (39,413 samples, 12.41%)</title><rect x="4.0479%" y="405" width="12.4079%" height="15" fill="rgb(219,133,21)" fg:x="12858" fg:w="39413"/><text x="4.2979%" y="415.50">generic_file_buffer..</text></g><g><title>new_sync_read (39,433 samples, 12.41%)</title><rect x="4.0448%" y="453" width="12.4142%" height="15" fill="rgb(246,46,29)" fg:x="12848" fg:w="39433"/><text x="4.2948%" y="463.50">new_sync_read</text></g><g><title>ext4_file_read_iter (39,432 samples, 12.41%)</title><rect x="4.0451%" y="437" width="12.4139%" height="15" fill="rgb(246,185,52)" fg:x="12849" fg:w="39432"/><text x="4.2951%" y="447.50">ext4_file_read_iter</text></g><g><title>generic_file_read_iter (39,432 samples, 12.41%)</title><rect x="4.0451%" y="421" width="12.4139%" height="15" fill="rgb(252,136,11)" fg:x="12849" fg:w="39432"/><text x="4.2951%" y="431.50">generic_file_read_i..</text></g><g><title>entry_SYSCALL_64_after_hwframe (39,438 samples, 12.42%)</title><rect x="4.0435%" y="533" width="12.4157%" height="15" fill="rgb(219,138,53)" fg:x="12844" fg:w="39438"/><text x="4.2935%" y="543.50">entry_SYSCALL_64_af..</text></g><g><title>do_syscall_64 (39,438 samples, 12.42%)</title><rect x="4.0435%" y="517" width="12.4157%" height="15" fill="rgb(211,51,23)" fg:x="12844" fg:w="39438"/><text x="4.2935%" y="527.50">do_syscall_64</text></g><g><title>__x64_sys_read (39,438 samples, 12.42%)</title><rect x="4.0435%" y="501" width="12.4157%" height="15" fill="rgb(247,221,28)" fg:x="12844" fg:w="39438"/><text x="4.2935%" y="511.50">__x64_sys_read</text></g><g><title>ksys_read (39,438 samples, 12.42%)</title><rect x="4.0435%" y="485" width="12.4157%" height="15" fill="rgb(251,222,45)" fg:x="12844" fg:w="39438"/><text x="4.2935%" y="495.50">ksys_read</text></g><g><title>vfs_read (39,437 samples, 12.42%)</title><rect x="4.0438%" y="469" width="12.4154%" height="15" fill="rgb(217,162,53)" fg:x="12845" fg:w="39437"/><text x="4.2938%" y="479.50">vfs_read</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (39,452 samples, 12.42%)</title><rect x="4.0426%" y="645" width="12.4202%" height="15" fill="rgb(229,93,14)" fg:x="12841" fg:w="39452"/><text x="4.2926%" y="655.50">&lt;std::io::buffered:..</text></g><g><title>std::io::default_read_exact (39,452 samples, 12.42%)</title><rect x="4.0426%" y="629" width="12.4202%" height="15" fill="rgb(209,67,49)" fg:x="12841" fg:w="39452"/><text x="4.2926%" y="639.50">std::io::default_re..</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (39,451 samples, 12.42%)</title><rect x="4.0429%" y="613" width="12.4198%" height="15" fill="rgb(213,87,29)" fg:x="12842" fg:w="39451"/><text x="4.2929%" y="623.50">&lt;std::io::buffered:..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (39,451 samples, 12.42%)</title><rect x="4.0429%" y="597" width="12.4198%" height="15" fill="rgb(205,151,52)" fg:x="12842" fg:w="39451"/><text x="4.2929%" y="607.50">&lt;std::fs::File as s..</text></g><g><title>std::sys::unix::fs::File::read (39,451 samples, 12.42%)</title><rect x="4.0429%" y="581" width="12.4198%" height="15" fill="rgb(253,215,39)" fg:x="12842" fg:w="39451"/><text x="4.2929%" y="591.50">std::sys::unix::fs:..</text></g><g><title>std::sys::unix::fd::FileDesc::read (39,451 samples, 12.42%)</title><rect x="4.0429%" y="565" width="12.4198%" height="15" fill="rgb(221,220,41)" fg:x="12842" fg:w="39451"/><text x="4.2929%" y="575.50">std::sys::unix::fd:..</text></g><g><title>__libc_read (39,451 samples, 12.42%)</title><rect x="4.0429%" y="549" width="12.4198%" height="15" fill="rgb(218,133,21)" fg:x="12842" fg:w="39451"/><text x="4.2929%" y="559.50">__libc_read</text></g><g><title>_int_realloc (48 samples, 0.02%)</title><rect x="16.4643%" y="453" width="0.0151%" height="15" fill="rgb(221,193,43)" fg:x="52298" fg:w="48"/><text x="16.7143%" y="463.50"></text></g><g><title>_int_malloc (32 samples, 0.01%)</title><rect x="16.4693%" y="437" width="0.0101%" height="15" fill="rgb(240,128,52)" fg:x="52314" fg:w="32"/><text x="16.7193%" y="447.50"></text></g><g><title>sysmalloc (32 samples, 0.01%)</title><rect x="16.4693%" y="421" width="0.0101%" height="15" fill="rgb(253,114,12)" fg:x="52314" fg:w="32"/><text x="16.7193%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (53 samples, 0.02%)</title><rect x="16.4637%" y="597" width="0.0167%" height="15" fill="rgb(215,223,47)" fg:x="52296" fg:w="53"/><text x="16.7137%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (53 samples, 0.02%)</title><rect x="16.4637%" y="581" width="0.0167%" height="15" fill="rgb(248,225,23)" fg:x="52296" fg:w="53"/><text x="16.7137%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (53 samples, 0.02%)</title><rect x="16.4637%" y="565" width="0.0167%" height="15" fill="rgb(250,108,0)" fg:x="52296" fg:w="53"/><text x="16.7137%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (53 samples, 0.02%)</title><rect x="16.4637%" y="549" width="0.0167%" height="15" fill="rgb(228,208,7)" fg:x="52296" fg:w="53"/><text x="16.7137%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (52 samples, 0.02%)</title><rect x="16.4640%" y="533" width="0.0164%" height="15" fill="rgb(244,45,10)" fg:x="52297" fg:w="52"/><text x="16.7140%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (52 samples, 0.02%)</title><rect x="16.4640%" y="517" width="0.0164%" height="15" fill="rgb(207,125,25)" fg:x="52297" fg:w="52"/><text x="16.7140%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (52 samples, 0.02%)</title><rect x="16.4640%" y="501" width="0.0164%" height="15" fill="rgb(210,195,18)" fg:x="52297" fg:w="52"/><text x="16.7140%" y="511.50"></text></g><g><title>alloc::alloc::realloc (52 samples, 0.02%)</title><rect x="16.4640%" y="485" width="0.0164%" height="15" fill="rgb(249,80,12)" fg:x="52297" fg:w="52"/><text x="16.7140%" y="495.50"></text></g><g><title>__GI___libc_realloc (52 samples, 0.02%)</title><rect x="16.4640%" y="469" width="0.0164%" height="15" fill="rgb(221,65,9)" fg:x="52297" fg:w="52"/><text x="16.7140%" y="479.50"></text></g><g><title>__irqentry_text_end (41 samples, 0.01%)</title><rect x="20.7168%" y="565" width="0.0129%" height="15" fill="rgb(235,49,36)" fg:x="65806" fg:w="41"/><text x="20.9668%" y="575.50"></text></g><g><title>down_read_trylock (143 samples, 0.05%)</title><rect x="20.9202%" y="517" width="0.0450%" height="15" fill="rgb(225,32,20)" fg:x="66452" fg:w="143"/><text x="21.1702%" y="527.50"></text></g><g><title>find_vma (73 samples, 0.02%)</title><rect x="20.9652%" y="517" width="0.0230%" height="15" fill="rgb(215,141,46)" fg:x="66595" fg:w="73"/><text x="21.2152%" y="527.50"></text></g><g><title>vmacache_find (60 samples, 0.02%)</title><rect x="20.9693%" y="501" width="0.0189%" height="15" fill="rgb(250,160,47)" fg:x="66608" fg:w="60"/><text x="21.2193%" y="511.50"></text></g><g><title>_raw_spin_lock (133 samples, 0.04%)</title><rect x="21.2955%" y="469" width="0.0419%" height="15" fill="rgb(216,222,40)" fg:x="67644" fg:w="133"/><text x="21.5455%" y="479.50"></text></g><g><title>clear_page_erms (2,351 samples, 0.74%)</title><rect x="21.6575%" y="405" width="0.7401%" height="15" fill="rgb(234,217,39)" fg:x="68794" fg:w="2351"/><text x="21.9075%" y="415.50"></text></g><g><title>kernel_init_free_pages (69 samples, 0.02%)</title><rect x="22.3976%" y="405" width="0.0217%" height="15" fill="rgb(207,178,40)" fg:x="71145" fg:w="69"/><text x="22.6476%" y="415.50"></text></g><g><title>rmqueue (817 samples, 0.26%)</title><rect x="22.4194%" y="405" width="0.2572%" height="15" fill="rgb(221,136,13)" fg:x="71214" fg:w="817"/><text x="22.6694%" y="415.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (688 samples, 0.22%)</title><rect x="22.4600%" y="389" width="0.2166%" height="15" fill="rgb(249,199,10)" fg:x="71343" fg:w="688"/><text x="22.7100%" y="399.50"></text></g><g><title>rmqueue_bulk.constprop.0 (411 samples, 0.13%)</title><rect x="22.5472%" y="373" width="0.1294%" height="15" fill="rgb(249,222,13)" fg:x="71620" fg:w="411"/><text x="22.7972%" y="383.50"></text></g><g><title>get_page_from_freelist (3,492 samples, 1.10%)</title><rect x="21.5785%" y="421" width="1.0993%" height="15" fill="rgb(244,185,38)" fg:x="68543" fg:w="3492"/><text x="21.8285%" y="431.50"></text></g><g><title>__alloc_pages_nodemask (3,796 samples, 1.20%)</title><rect x="21.4907%" y="437" width="1.1950%" height="15" fill="rgb(236,202,9)" fg:x="68264" fg:w="3796"/><text x="21.7407%" y="447.50"></text></g><g><title>alloc_pages_vma (4,023 samples, 1.27%)</title><rect x="21.4409%" y="453" width="1.2665%" height="15" fill="rgb(250,229,37)" fg:x="68106" fg:w="4023"/><text x="21.6909%" y="463.50"></text></g><g><title>cgroup_throttle_swaprate (703 samples, 0.22%)</title><rect x="22.7074%" y="453" width="0.2213%" height="15" fill="rgb(206,174,23)" fg:x="72129" fg:w="703"/><text x="22.9574%" y="463.50"></text></g><g><title>__mod_memcg_lruvec_state (135 samples, 0.04%)</title><rect x="23.1778%" y="373" width="0.0425%" height="15" fill="rgb(211,33,43)" fg:x="73623" fg:w="135"/><text x="23.4278%" y="383.50"></text></g><g><title>__mod_memcg_state.part.0 (74 samples, 0.02%)</title><rect x="23.1970%" y="357" width="0.0233%" height="15" fill="rgb(245,58,50)" fg:x="73684" fg:w="74"/><text x="23.4470%" y="367.50"></text></g><g><title>__mod_lruvec_state (191 samples, 0.06%)</title><rect x="23.1699%" y="389" width="0.0601%" height="15" fill="rgb(244,68,36)" fg:x="73598" fg:w="191"/><text x="23.4199%" y="399.50"></text></g><g><title>__pagevec_lru_add_fn (853 samples, 0.27%)</title><rect x="23.0163%" y="405" width="0.2685%" height="15" fill="rgb(232,229,15)" fg:x="73110" fg:w="853"/><text x="23.2663%" y="415.50"></text></g><g><title>page_mapping (97 samples, 0.03%)</title><rect x="23.2543%" y="389" width="0.0305%" height="15" fill="rgb(254,30,23)" fg:x="73866" fg:w="97"/><text x="23.5043%" y="399.50"></text></g><g><title>__pagevec_lru_add (1,111 samples, 0.35%)</title><rect x="22.9955%" y="421" width="0.3498%" height="15" fill="rgb(235,160,14)" fg:x="73044" fg:w="1111"/><text x="23.2455%" y="431.50"></text></g><g><title>release_pages (151 samples, 0.05%)</title><rect x="23.2977%" y="405" width="0.0475%" height="15" fill="rgb(212,155,44)" fg:x="74004" fg:w="151"/><text x="23.5477%" y="415.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1,297 samples, 0.41%)</title><rect x="22.9391%" y="453" width="0.4083%" height="15" fill="rgb(226,2,50)" fg:x="72865" fg:w="1297"/><text x="23.1891%" y="463.50"></text></g><g><title>lru_cache_add (1,279 samples, 0.40%)</title><rect x="22.9448%" y="437" width="0.4027%" height="15" fill="rgb(234,177,6)" fg:x="72883" fg:w="1279"/><text x="23.1948%" y="447.50"></text></g><g><title>get_mem_cgroup_from_mm (202 samples, 0.06%)</title><rect x="23.4435%" y="437" width="0.0636%" height="15" fill="rgb(217,24,9)" fg:x="74467" fg:w="202"/><text x="23.6935%" y="447.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (73 samples, 0.02%)</title><rect x="23.5071%" y="437" width="0.0230%" height="15" fill="rgb(220,13,46)" fg:x="74669" fg:w="73"/><text x="23.7571%" y="447.50"></text></g><g><title>__count_memcg_events.part.0 (48 samples, 0.02%)</title><rect x="23.5149%" y="421" width="0.0151%" height="15" fill="rgb(239,221,27)" fg:x="74694" fg:w="48"/><text x="23.7649%" y="431.50"></text></g><g><title>page_counter_try_charge (69 samples, 0.02%)</title><rect x="23.6519%" y="421" width="0.0217%" height="15" fill="rgb(222,198,25)" fg:x="75129" fg:w="69"/><text x="23.9019%" y="431.50"></text></g><g><title>mem_cgroup_charge (1,045 samples, 0.33%)</title><rect x="23.3474%" y="453" width="0.3290%" height="15" fill="rgb(211,99,13)" fg:x="74162" fg:w="1045"/><text x="23.5974%" y="463.50"></text></g><g><title>try_charge (430 samples, 0.14%)</title><rect x="23.5411%" y="437" width="0.1354%" height="15" fill="rgb(232,111,31)" fg:x="74777" fg:w="430"/><text x="23.7911%" y="447.50"></text></g><g><title>__mod_memcg_lruvec_state (131 samples, 0.04%)</title><rect x="23.7158%" y="405" width="0.0412%" height="15" fill="rgb(245,82,37)" fg:x="75332" fg:w="131"/><text x="23.9658%" y="415.50"></text></g><g><title>__mod_memcg_state.part.0 (59 samples, 0.02%)</title><rect x="23.7385%" y="389" width="0.0186%" height="15" fill="rgb(227,149,46)" fg:x="75404" fg:w="59"/><text x="23.9885%" y="399.50"></text></g><g><title>__mod_lruvec_state (189 samples, 0.06%)</title><rect x="23.7107%" y="421" width="0.0595%" height="15" fill="rgb(218,36,50)" fg:x="75316" fg:w="189"/><text x="23.9607%" y="431.50"></text></g><g><title>__mod_node_page_state (34 samples, 0.01%)</title><rect x="23.7595%" y="405" width="0.0107%" height="15" fill="rgb(226,80,48)" fg:x="75471" fg:w="34"/><text x="24.0095%" y="415.50"></text></g><g><title>__mod_lruvec_page_state (264 samples, 0.08%)</title><rect x="23.7022%" y="437" width="0.0831%" height="15" fill="rgb(238,224,15)" fg:x="75289" fg:w="264"/><text x="23.9522%" y="447.50"></text></g><g><title>__mod_node_page_state (42 samples, 0.01%)</title><rect x="23.7721%" y="421" width="0.0132%" height="15" fill="rgb(241,136,10)" fg:x="75511" fg:w="42"/><text x="24.0221%" y="431.50"></text></g><g><title>page_add_new_anon_rmap (358 samples, 0.11%)</title><rect x="23.6871%" y="453" width="0.1127%" height="15" fill="rgb(208,32,45)" fg:x="75241" fg:w="358"/><text x="23.9371%" y="463.50"></text></g><g><title>__page_set_anon_rmap (38 samples, 0.01%)</title><rect x="23.7879%" y="437" width="0.0120%" height="15" fill="rgb(207,135,9)" fg:x="75561" fg:w="38"/><text x="24.0379%" y="447.50"></text></g><g><title>do_anonymous_page (7,888 samples, 2.48%)</title><rect x="21.3480%" y="469" width="2.4833%" height="15" fill="rgb(206,86,44)" fg:x="67811" fg:w="7888"/><text x="21.5980%" y="479.50">do..</text></g><g><title>handle_pte_fault (8,343 samples, 2.63%)</title><rect x="21.2284%" y="485" width="2.6265%" height="15" fill="rgb(245,177,15)" fg:x="67431" fg:w="8343"/><text x="21.4784%" y="495.50">ha..</text></g><g><title>__handle_mm_fault (8,760 samples, 2.76%)</title><rect x="21.0990%" y="501" width="2.7578%" height="15" fill="rgb(206,64,50)" fg:x="67020" fg:w="8760"/><text x="21.3490%" y="511.50">__..</text></g><g><title>handle_mm_fault (9,191 samples, 2.89%)</title><rect x="20.9882%" y="517" width="2.8935%" height="15" fill="rgb(234,36,40)" fg:x="66668" fg:w="9191"/><text x="21.2382%" y="527.50">ha..</text></g><g><title>rcu_read_unlock_strict (77 samples, 0.02%)</title><rect x="23.8902%" y="517" width="0.0242%" height="15" fill="rgb(213,64,8)" fg:x="75886" fg:w="77"/><text x="24.1402%" y="527.50"></text></g><g><title>up_read (161 samples, 0.05%)</title><rect x="23.9144%" y="517" width="0.0507%" height="15" fill="rgb(210,75,36)" fg:x="75963" fg:w="161"/><text x="24.1644%" y="527.50"></text></g><g><title>do_user_addr_fault (9,924 samples, 3.12%)</title><rect x="20.8440%" y="533" width="3.1242%" height="15" fill="rgb(229,88,21)" fg:x="66210" fg:w="9924"/><text x="21.0940%" y="543.50">do_..</text></g><g><title>exit_to_user_mode_prepare (40 samples, 0.01%)</title><rect x="23.9953%" y="501" width="0.0126%" height="15" fill="rgb(252,204,47)" fg:x="76220" fg:w="40"/><text x="24.2453%" y="511.50"></text></g><g><title>irqentry_exit (74 samples, 0.02%)</title><rect x="23.9868%" y="533" width="0.0233%" height="15" fill="rgb(208,77,27)" fg:x="76193" fg:w="74"/><text x="24.2368%" y="543.50"></text></g><g><title>irqentry_exit_to_user_mode (53 samples, 0.02%)</title><rect x="23.9935%" y="517" width="0.0167%" height="15" fill="rgb(221,76,26)" fg:x="76214" fg:w="53"/><text x="24.2435%" y="527.50"></text></g><g><title>exc_page_fault (10,195 samples, 3.21%)</title><rect x="20.8034%" y="549" width="3.2096%" height="15" fill="rgb(225,139,18)" fg:x="66081" fg:w="10195"/><text x="21.0534%" y="559.50">exc..</text></g><g><title>asm_exc_page_fault (10,450 samples, 3.29%)</title><rect x="20.7297%" y="565" width="3.2898%" height="15" fill="rgb(230,137,11)" fg:x="65847" fg:w="10450"/><text x="20.9797%" y="575.50">asm..</text></g><g><title>error_entry (314 samples, 0.10%)</title><rect x="24.0265%" y="565" width="0.0989%" height="15" fill="rgb(212,28,1)" fg:x="76319" fg:w="314"/><text x="24.2765%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (25,650 samples, 8.08%)</title><rect x="16.4637%" y="645" width="8.0751%" height="15" fill="rgb(248,164,17)" fg:x="52296" fg:w="25650"/><text x="16.7137%" y="655.50">alloc::vec:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (25,650 samples, 8.08%)</title><rect x="16.4637%" y="629" width="8.0751%" height="15" fill="rgb(222,171,42)" fg:x="52296" fg:w="25650"/><text x="16.7137%" y="639.50">&lt;alloc::vec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (25,650 samples, 8.08%)</title><rect x="16.4637%" y="613" width="8.0751%" height="15" fill="rgb(243,84,45)" fg:x="52296" fg:w="25650"/><text x="16.7137%" y="623.50">alloc::vec:..</text></g><g><title>core::intrinsics::copy_nonoverlapping (25,597 samples, 8.06%)</title><rect x="16.4803%" y="597" width="8.0584%" height="15" fill="rgb(252,49,23)" fg:x="52349" fg:w="25597"/><text x="16.7303%" y="607.50">core::intri..</text></g><g><title>__memmove_avx_unaligned_erms (25,597 samples, 8.06%)</title><rect x="16.4803%" y="581" width="8.0584%" height="15" fill="rgb(215,19,7)" fg:x="52349" fg:w="25597"/><text x="16.7303%" y="591.50">__memmove_a..</text></g><g><title>sync_regs (1,311 samples, 0.41%)</title><rect x="24.1260%" y="565" width="0.4127%" height="15" fill="rgb(238,81,41)" fg:x="76635" fg:w="1311"/><text x="24.3760%" y="575.50"></text></g><g><title>__libc_calloc (46 samples, 0.01%)</title><rect x="24.5390%" y="533" width="0.0145%" height="15" fill="rgb(210,199,37)" fg:x="77947" fg:w="46"/><text x="24.7890%" y="543.50"></text></g><g><title>_int_malloc (46 samples, 0.01%)</title><rect x="24.5390%" y="517" width="0.0145%" height="15" fill="rgb(244,192,49)" fg:x="77947" fg:w="46"/><text x="24.7890%" y="527.50"></text></g><g><title>alloc::vec::from_elem (67 samples, 0.02%)</title><rect x="24.5387%" y="645" width="0.0211%" height="15" fill="rgb(226,211,11)" fg:x="77946" fg:w="67"/><text x="24.7887%" y="655.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (67 samples, 0.02%)</title><rect x="24.5387%" y="629" width="0.0211%" height="15" fill="rgb(236,162,54)" fg:x="77946" fg:w="67"/><text x="24.7887%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (67 samples, 0.02%)</title><rect x="24.5387%" y="613" width="0.0211%" height="15" fill="rgb(220,229,9)" fg:x="77946" fg:w="67"/><text x="24.7887%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (67 samples, 0.02%)</title><rect x="24.5387%" y="597" width="0.0211%" height="15" fill="rgb(250,87,22)" fg:x="77946" fg:w="67"/><text x="24.7887%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (67 samples, 0.02%)</title><rect x="24.5387%" y="581" width="0.0211%" height="15" fill="rgb(239,43,17)" fg:x="77946" fg:w="67"/><text x="24.7887%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (67 samples, 0.02%)</title><rect x="24.5387%" y="565" width="0.0211%" height="15" fill="rgb(231,177,25)" fg:x="77946" fg:w="67"/><text x="24.7887%" y="575.50"></text></g><g><title>alloc::alloc::alloc_zeroed (67 samples, 0.02%)</title><rect x="24.5387%" y="549" width="0.0211%" height="15" fill="rgb(219,179,1)" fg:x="77946" fg:w="67"/><text x="24.7887%" y="559.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (494 samples, 0.16%)</title><rect x="24.8416%" y="613" width="0.1555%" height="15" fill="rgb(238,219,53)" fg:x="78908" fg:w="494"/><text x="25.0916%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (23,284 samples, 7.33%)</title><rect x="25.0009%" y="597" width="7.3302%" height="15" fill="rgb(232,167,36)" fg:x="79414" fg:w="23284"/><text x="25.2509%" y="607.50">__memmove_..</text></g><g><title>malloc_consolidate (65 samples, 0.02%)</title><rect x="37.0074%" y="549" width="0.0205%" height="15" fill="rgb(244,19,51)" fg:x="117552" fg:w="65"/><text x="37.2574%" y="559.50"></text></g><g><title>__GI___libc_free (533 samples, 0.17%)</title><rect x="36.8603%" y="581" width="0.1678%" height="15" fill="rgb(224,6,22)" fg:x="117085" fg:w="533"/><text x="37.1103%" y="591.50"></text></g><g><title>_int_free (367 samples, 0.12%)</title><rect x="36.9126%" y="565" width="0.1155%" height="15" fill="rgb(224,145,5)" fg:x="117251" fg:w="367"/><text x="37.1626%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::GcRecord&gt; (77 samples, 0.02%)</title><rect x="37.0445%" y="581" width="0.0242%" height="15" fill="rgb(234,130,49)" fg:x="117670" fg:w="77"/><text x="37.2945%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::ArrayValue&gt; (40 samples, 0.01%)</title><rect x="37.0561%" y="565" width="0.0126%" height="15" fill="rgb(254,6,2)" fg:x="117707" fg:w="40"/><text x="37.3061%" y="575.50"></text></g><g><title>hprof_slurp::analysis::ArrayCounter::add_elements_from_array (59 samples, 0.02%)</title><rect x="37.0691%" y="581" width="0.0186%" height="15" fill="rgb(208,96,46)" fg:x="117748" fg:w="59"/><text x="37.3191%" y="591.50"></text></g><g><title>hprof_slurp::analysis::ClassInstanceCounter::add_instance (602 samples, 0.19%)</title><rect x="37.0876%" y="581" width="0.1895%" height="15" fill="rgb(239,3,39)" fg:x="117807" fg:w="602"/><text x="37.3376%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (50 samples, 0.02%)</title><rect x="38.0966%" y="421" width="0.0157%" height="15" fill="rgb(233,210,1)" fg:x="121012" fg:w="50"/><text x="38.3466%" y="431.50"></text></g><g><title>&lt;hprof_slurp::gc_record::FieldType as core::hash::Hash&gt;::hash (178 samples, 0.06%)</title><rect x="38.0708%" y="533" width="0.0560%" height="15" fill="rgb(244,137,37)" fg:x="120930" fg:w="178"/><text x="38.3208%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (167 samples, 0.05%)</title><rect x="38.0743%" y="517" width="0.0526%" height="15" fill="rgb(240,136,2)" fg:x="120941" fg:w="167"/><text x="38.3243%" y="527.50"></text></g><g><title>core::hash::Hasher::write_isize (167 samples, 0.05%)</title><rect x="38.0743%" y="501" width="0.0526%" height="15" fill="rgb(239,18,37)" fg:x="120941" fg:w="167"/><text x="38.3243%" y="511.50"></text></g><g><title>core::hash::Hasher::write_usize (167 samples, 0.05%)</title><rect x="38.0743%" y="485" width="0.0526%" height="15" fill="rgb(218,185,22)" fg:x="120941" fg:w="167"/><text x="38.3243%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (167 samples, 0.05%)</title><rect x="38.0743%" y="469" width="0.0526%" height="15" fill="rgb(225,218,4)" fg:x="120941" fg:w="167"/><text x="38.3243%" y="479.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (167 samples, 0.05%)</title><rect x="38.0743%" y="453" width="0.0526%" height="15" fill="rgb(230,182,32)" fg:x="120941" fg:w="167"/><text x="38.3243%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (167 samples, 0.05%)</title><rect x="38.0743%" y="437" width="0.0526%" height="15" fill="rgb(242,56,43)" fg:x="120941" fg:w="167"/><text x="38.3243%" y="447.50"></text></g><g><title>core::hash::sip::u8to64_le (46 samples, 0.01%)</title><rect x="38.1124%" y="421" width="0.0145%" height="15" fill="rgb(233,99,24)" fg:x="121062" fg:w="46"/><text x="38.3624%" y="431.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,020 samples, 0.32%)</title><rect x="38.5899%" y="469" width="0.3211%" height="15" fill="rgb(234,209,42)" fg:x="122579" fg:w="1020"/><text x="38.8399%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,027 samples, 0.64%)</title><rect x="38.4360%" y="485" width="0.6381%" height="15" fill="rgb(227,7,12)" fg:x="122090" fg:w="2027"/><text x="38.6860%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (518 samples, 0.16%)</title><rect x="38.9110%" y="469" width="0.1631%" height="15" fill="rgb(245,203,43)" fg:x="123599" fg:w="518"/><text x="39.1610%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,434 samples, 0.77%)</title><rect x="39.2564%" y="469" width="0.7663%" height="15" fill="rgb(238,205,33)" fg:x="124696" fg:w="2434"/><text x="39.5064%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3,996 samples, 1.26%)</title><rect x="39.0741%" y="485" width="1.2580%" height="15" fill="rgb(231,56,7)" fg:x="124117" fg:w="3996"/><text x="39.3241%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (983 samples, 0.31%)</title><rect x="40.0227%" y="469" width="0.3095%" height="15" fill="rgb(244,186,29)" fg:x="127130" fg:w="983"/><text x="40.2727%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7,009 samples, 2.21%)</title><rect x="38.1268%" y="533" width="2.2066%" height="15" fill="rgb(234,111,31)" fg:x="121108" fg:w="7009"/><text x="38.3768%" y="543.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7,009 samples, 2.21%)</title><rect x="38.1268%" y="517" width="2.2066%" height="15" fill="rgb(241,149,10)" fg:x="121108" fg:w="7009"/><text x="38.3768%" y="527.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7,009 samples, 2.21%)</title><rect x="38.1268%" y="501" width="2.2066%" height="15" fill="rgb(249,206,44)" fg:x="121108" fg:w="7009"/><text x="38.3768%" y="511.50">&lt;..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (991 samples, 0.31%)</title><rect x="40.3334%" y="533" width="0.3120%" height="15" fill="rgb(251,153,30)" fg:x="128117" fg:w="991"/><text x="40.5834%" y="543.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (923 samples, 0.29%)</title><rect x="40.3548%" y="517" width="0.2906%" height="15" fill="rgb(239,152,38)" fg:x="128185" fg:w="923"/><text x="40.6048%" y="527.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (916 samples, 0.29%)</title><rect x="40.3570%" y="501" width="0.2884%" height="15" fill="rgb(249,139,47)" fg:x="128192" fg:w="916"/><text x="40.6070%" y="511.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (916 samples, 0.29%)</title><rect x="40.3570%" y="485" width="0.2884%" height="15" fill="rgb(244,64,35)" fg:x="128192" fg:w="916"/><text x="40.6070%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (975 samples, 0.31%)</title><rect x="41.5262%" y="437" width="0.3069%" height="15" fill="rgb(216,46,15)" fg:x="131906" fg:w="975"/><text x="41.7762%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1,959 samples, 0.62%)</title><rect x="41.3751%" y="453" width="0.6167%" height="15" fill="rgb(250,74,19)" fg:x="131426" fg:w="1959"/><text x="41.6251%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (504 samples, 0.16%)</title><rect x="41.8332%" y="437" width="0.1587%" height="15" fill="rgb(249,42,33)" fg:x="132881" fg:w="504"/><text x="42.0832%" y="447.50"></text></g><g><title>core::hash::sip::u8to64_le (1,451 samples, 0.46%)</title><rect x="41.9925%" y="453" width="0.4568%" height="15" fill="rgb(242,149,17)" fg:x="133387" fg:w="1451"/><text x="42.2425%" y="463.50"></text></g><g><title>hashbrown::map::make_insert_hash (14,401 samples, 4.53%)</title><rect x="38.0708%" y="549" width="4.5337%" height="15" fill="rgb(244,29,21)" fg:x="120930" fg:w="14401"/><text x="38.3208%" y="559.50">hashb..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (6,223 samples, 1.96%)</title><rect x="40.6454%" y="533" width="1.9591%" height="15" fill="rgb(220,130,37)" fg:x="129108" fg:w="6223"/><text x="40.8954%" y="543.50">c..</text></g><g><title>core::hash::Hasher::write_u64 (6,223 samples, 1.96%)</title><rect x="40.6454%" y="517" width="1.9591%" height="15" fill="rgb(211,67,2)" fg:x="129108" fg:w="6223"/><text x="40.8954%" y="527.50">c..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5,782 samples, 1.82%)</title><rect x="40.7842%" y="501" width="1.8203%" height="15" fill="rgb(235,68,52)" fg:x="129549" fg:w="5782"/><text x="41.0342%" y="511.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5,782 samples, 1.82%)</title><rect x="40.7842%" y="485" width="1.8203%" height="15" fill="rgb(246,142,3)" fg:x="129549" fg:w="5782"/><text x="41.0342%" y="495.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5,782 samples, 1.82%)</title><rect x="40.7842%" y="469" width="1.8203%" height="15" fill="rgb(241,25,7)" fg:x="129549" fg:w="5782"/><text x="41.0342%" y="479.50">&lt;..</text></g><g><title>core::intrinsics::copy_nonoverlapping (493 samples, 0.16%)</title><rect x="42.4493%" y="453" width="0.1552%" height="15" fill="rgb(242,119,39)" fg:x="134838" fg:w="493"/><text x="42.6993%" y="463.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (565 samples, 0.18%)</title><rect x="43.0622%" y="485" width="0.1779%" height="15" fill="rgb(241,98,45)" fg:x="136785" fg:w="565"/><text x="43.3122%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (613 samples, 0.19%)</title><rect x="43.0591%" y="501" width="0.1930%" height="15" fill="rgb(254,28,30)" fg:x="136775" fg:w="613"/><text x="43.3091%" y="511.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (38 samples, 0.01%)</title><rect x="43.2401%" y="485" width="0.0120%" height="15" fill="rgb(241,142,54)" fg:x="137350" fg:w="38"/><text x="43.4901%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,085 samples, 0.34%)</title><rect x="42.9158%" y="517" width="0.3416%" height="15" fill="rgb(222,85,15)" fg:x="136320" fg:w="1085"/><text x="43.1658%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,106 samples, 0.35%)</title><rect x="42.9158%" y="533" width="0.3482%" height="15" fill="rgb(210,85,47)" fg:x="136320" fg:w="1106"/><text x="43.1658%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (556 samples, 0.18%)</title><rect x="43.2662%" y="533" width="0.1750%" height="15" fill="rgb(224,206,25)" fg:x="137433" fg:w="556"/><text x="43.5162%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (556 samples, 0.18%)</title><rect x="43.2662%" y="517" width="0.1750%" height="15" fill="rgb(243,201,19)" fg:x="137433" fg:w="556"/><text x="43.5162%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (556 samples, 0.18%)</title><rect x="43.2662%" y="501" width="0.1750%" height="15" fill="rgb(236,59,4)" fg:x="137433" fg:w="556"/><text x="43.5162%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (556 samples, 0.18%)</title><rect x="43.2662%" y="485" width="0.1750%" height="15" fill="rgb(254,179,45)" fg:x="137433" fg:w="556"/><text x="43.5162%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (61 samples, 0.02%)</title><rect x="43.6056%" y="485" width="0.0192%" height="15" fill="rgb(226,14,10)" fg:x="138511" fg:w="61"/><text x="43.8556%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (61 samples, 0.02%)</title><rect x="43.6056%" y="469" width="0.0192%" height="15" fill="rgb(244,27,41)" fg:x="138511" fg:w="61"/><text x="43.8556%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (61 samples, 0.02%)</title><rect x="43.6056%" y="453" width="0.0192%" height="15" fill="rgb(235,35,32)" fg:x="138511" fg:w="61"/><text x="43.8556%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1,080 samples, 0.34%)</title><rect x="43.4413%" y="533" width="0.3400%" height="15" fill="rgb(218,68,31)" fg:x="137989" fg:w="1080"/><text x="43.6913%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1,080 samples, 0.34%)</title><rect x="43.4413%" y="517" width="0.3400%" height="15" fill="rgb(207,120,37)" fg:x="137989" fg:w="1080"/><text x="43.6913%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1,080 samples, 0.34%)</title><rect x="43.4413%" y="501" width="0.3400%" height="15" fill="rgb(227,98,0)" fg:x="137989" fg:w="1080"/><text x="43.6913%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (497 samples, 0.16%)</title><rect x="43.6248%" y="485" width="0.1565%" height="15" fill="rgb(207,7,3)" fg:x="138572" fg:w="497"/><text x="43.8748%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (497 samples, 0.16%)</title><rect x="43.6248%" y="469" width="0.1565%" height="15" fill="rgb(206,98,19)" fg:x="138572" fg:w="497"/><text x="43.8748%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (497 samples, 0.16%)</title><rect x="43.6248%" y="453" width="0.1565%" height="15" fill="rgb(217,5,26)" fg:x="138572" fg:w="497"/><text x="43.8748%" y="463.50"></text></g><g><title>core::core_arch::simd::i8x16::new (497 samples, 0.16%)</title><rect x="43.6248%" y="437" width="0.1565%" height="15" fill="rgb(235,190,38)" fg:x="138572" fg:w="497"/><text x="43.8748%" y="447.50"></text></g><g><title>&lt;hprof_slurp::gc_record::FieldType as core::cmp::PartialEq&gt;::eq (40 samples, 0.01%)</title><rect x="43.7813%" y="517" width="0.0126%" height="15" fill="rgb(247,86,24)" fg:x="139069" fg:w="40"/><text x="44.0313%" y="527.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (20,490 samples, 6.45%)</title><rect x="37.4264%" y="565" width="6.4506%" height="15" fill="rgb(205,101,16)" fg:x="118883" fg:w="20490"/><text x="37.6764%" y="575.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4,042 samples, 1.27%)</title><rect x="42.6045%" y="549" width="1.2725%" height="15" fill="rgb(246,168,33)" fg:x="135331" fg:w="4042"/><text x="42.8545%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (304 samples, 0.10%)</title><rect x="43.7813%" y="533" width="0.0957%" height="15" fill="rgb(231,114,1)" fg:x="139069" fg:w="304"/><text x="44.0313%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (264 samples, 0.08%)</title><rect x="43.7939%" y="517" width="0.0831%" height="15" fill="rgb(207,184,53)" fg:x="139109" fg:w="264"/><text x="44.0439%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (21,431 samples, 6.75%)</title><rect x="37.2771%" y="581" width="6.7468%" height="15" fill="rgb(224,95,51)" fg:x="118409" fg:w="21431"/><text x="37.5271%" y="591.50">std::coll..</text></g><g><title>std::collections::hash::map::map_entry (467 samples, 0.15%)</title><rect x="43.8770%" y="565" width="0.1470%" height="15" fill="rgb(212,188,45)" fg:x="139373" fg:w="467"/><text x="44.1270%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (60,456 samples, 19.03%)</title><rect x="24.9974%" y="613" width="19.0326%" height="15" fill="rgb(223,154,38)" fg:x="79403" fg:w="60456"/><text x="25.2474%" y="623.50">core::iter::traits::iterator::..</text></g><g><title>hprof_slurp::main::{{closure}} (37,161 samples, 11.70%)</title><rect x="32.3311%" y="597" width="11.6989%" height="15" fill="rgb(251,22,52)" fg:x="102698" fg:w="37161"/><text x="32.5811%" y="607.50">hprof_slurp::main..</text></g><g><title>__mod_memcg_lruvec_state (50 samples, 0.02%)</title><rect x="44.1040%" y="293" width="0.0157%" height="15" fill="rgb(229,209,22)" fg:x="140094" fg:w="50"/><text x="44.3540%" y="303.50"></text></g><g><title>__mod_lruvec_state (76 samples, 0.02%)</title><rect x="44.0999%" y="309" width="0.0239%" height="15" fill="rgb(234,138,34)" fg:x="140081" fg:w="76"/><text x="44.3499%" y="319.50"></text></g><g><title>__free_one_page (177 samples, 0.06%)</title><rect x="44.1754%" y="261" width="0.0557%" height="15" fill="rgb(212,95,11)" fg:x="140321" fg:w="177"/><text x="44.4254%" y="271.50"></text></g><g><title>free_unref_page_list (326 samples, 0.10%)</title><rect x="44.1313%" y="309" width="0.1026%" height="15" fill="rgb(240,179,47)" fg:x="140181" fg:w="326"/><text x="44.3813%" y="319.50"></text></g><g><title>free_unref_page_commit (276 samples, 0.09%)</title><rect x="44.1471%" y="293" width="0.0869%" height="15" fill="rgb(240,163,11)" fg:x="140231" fg:w="276"/><text x="44.3971%" y="303.50"></text></g><g><title>free_pcppages_bulk (239 samples, 0.08%)</title><rect x="44.1587%" y="277" width="0.0752%" height="15" fill="rgb(236,37,12)" fg:x="140268" fg:w="239"/><text x="44.4087%" y="287.50"></text></g><g><title>mem_cgroup_uncharge_list (42 samples, 0.01%)</title><rect x="44.2349%" y="309" width="0.0132%" height="15" fill="rgb(232,164,16)" fg:x="140510" fg:w="42"/><text x="44.4849%" y="319.50"></text></g><g><title>tlb_finish_mmu (685 samples, 0.22%)</title><rect x="44.0372%" y="357" width="0.2156%" height="15" fill="rgb(244,205,15)" fg:x="139882" fg:w="685"/><text x="44.2872%" y="367.50"></text></g><g><title>free_pages_and_swap_cache (674 samples, 0.21%)</title><rect x="44.0407%" y="341" width="0.2122%" height="15" fill="rgb(223,117,47)" fg:x="139893" fg:w="674"/><text x="44.2907%" y="351.50"></text></g><g><title>release_pages (626 samples, 0.20%)</title><rect x="44.0558%" y="325" width="0.1971%" height="15" fill="rgb(244,107,35)" fg:x="139941" fg:w="626"/><text x="44.3058%" y="335.50"></text></g><g><title>vm_normal_page (33 samples, 0.01%)</title><rect x="44.2708%" y="309" width="0.0104%" height="15" fill="rgb(205,140,8)" fg:x="140624" fg:w="33"/><text x="44.5208%" y="319.50"></text></g><g><title>__mod_lruvec_page_state (39 samples, 0.01%)</title><rect x="44.6678%" y="293" width="0.0123%" height="15" fill="rgb(228,84,46)" fg:x="141885" fg:w="39"/><text x="44.9178%" y="303.50"></text></g><g><title>__tlb_remove_page_size (73 samples, 0.02%)</title><rect x="44.6801%" y="293" width="0.0230%" height="15" fill="rgb(254,188,9)" fg:x="141924" fg:w="73"/><text x="44.9301%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (291 samples, 0.09%)</title><rect x="44.8888%" y="245" width="0.0916%" height="15" fill="rgb(206,112,54)" fg:x="142587" fg:w="291"/><text x="45.1388%" y="255.50"></text></g><g><title>__mod_memcg_state.part.0 (121 samples, 0.04%)</title><rect x="44.9423%" y="229" width="0.0381%" height="15" fill="rgb(216,84,49)" fg:x="142757" fg:w="121"/><text x="45.1923%" y="239.50"></text></g><g><title>__mod_lruvec_state (416 samples, 0.13%)</title><rect x="44.8734%" y="261" width="0.1310%" height="15" fill="rgb(214,194,35)" fg:x="142538" fg:w="416"/><text x="45.1234%" y="271.50"></text></g><g><title>__mod_node_page_state (52 samples, 0.02%)</title><rect x="44.9880%" y="245" width="0.0164%" height="15" fill="rgb(249,28,3)" fg:x="142902" fg:w="52"/><text x="45.2380%" y="255.50"></text></g><g><title>__mod_memcg_lruvec_state (35 samples, 0.01%)</title><rect x="45.0043%" y="261" width="0.0110%" height="15" fill="rgb(222,56,52)" fg:x="142954" fg:w="35"/><text x="45.2543%" y="271.50"></text></g><g><title>__mod_lruvec_page_state (585 samples, 0.18%)</title><rect x="44.8579%" y="277" width="0.1842%" height="15" fill="rgb(245,217,50)" fg:x="142489" fg:w="585"/><text x="45.1079%" y="287.50"></text></g><g><title>__mod_node_page_state (85 samples, 0.03%)</title><rect x="45.0153%" y="261" width="0.0268%" height="15" fill="rgb(213,201,24)" fg:x="142989" fg:w="85"/><text x="45.2653%" y="271.50"></text></g><g><title>lock_page_memcg (79 samples, 0.02%)</title><rect x="45.0490%" y="277" width="0.0249%" height="15" fill="rgb(248,116,28)" fg:x="143096" fg:w="79"/><text x="45.2990%" y="287.50"></text></g><g><title>rcu_read_unlock_strict (39 samples, 0.01%)</title><rect x="45.0739%" y="277" width="0.0123%" height="15" fill="rgb(219,72,43)" fg:x="143175" fg:w="39"/><text x="45.3239%" y="287.50"></text></g><g><title>page_remove_rmap (1,222 samples, 0.38%)</title><rect x="44.7106%" y="293" width="0.3847%" height="15" fill="rgb(209,138,14)" fg:x="142021" fg:w="1222"/><text x="44.9606%" y="303.50"></text></g><g><title>__mod_zone_page_state (42 samples, 0.01%)</title><rect x="45.1948%" y="261" width="0.0132%" height="15" fill="rgb(222,18,33)" fg:x="143559" fg:w="42"/><text x="45.4448%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (345 samples, 0.11%)</title><rect x="45.4599%" y="229" width="0.1086%" height="15" fill="rgb(213,199,7)" fg:x="144401" fg:w="345"/><text x="45.7099%" y="239.50"></text></g><g><title>__mod_memcg_state.part.0 (150 samples, 0.05%)</title><rect x="45.5213%" y="213" width="0.0472%" height="15" fill="rgb(250,110,10)" fg:x="144596" fg:w="150"/><text x="45.7713%" y="223.50"></text></g><g><title>__mod_lruvec_state (488 samples, 0.15%)</title><rect x="45.4400%" y="245" width="0.1536%" height="15" fill="rgb(248,123,6)" fg:x="144338" fg:w="488"/><text x="45.6900%" y="255.50"></text></g><g><title>__mod_node_page_state (56 samples, 0.02%)</title><rect x="45.5760%" y="229" width="0.0176%" height="15" fill="rgb(206,91,31)" fg:x="144770" fg:w="56"/><text x="45.8260%" y="239.50"></text></g><g><title>__mod_node_page_state (55 samples, 0.02%)</title><rect x="45.6019%" y="245" width="0.0173%" height="15" fill="rgb(211,154,13)" fg:x="144852" fg:w="55"/><text x="45.8519%" y="255.50"></text></g><g><title>__mod_zone_page_state (55 samples, 0.02%)</title><rect x="45.6192%" y="245" width="0.0173%" height="15" fill="rgb(225,148,7)" fg:x="144907" fg:w="55"/><text x="45.8692%" y="255.50"></text></g><g><title>free_pcp_prepare (85 samples, 0.03%)</title><rect x="45.7205%" y="229" width="0.0268%" height="15" fill="rgb(220,160,43)" fg:x="145229" fg:w="85"/><text x="45.9705%" y="239.50"></text></g><g><title>__free_one_page (908 samples, 0.29%)</title><rect x="45.9079%" y="197" width="0.2859%" height="15" fill="rgb(213,52,39)" fg:x="145824" fg:w="908"/><text x="46.1579%" y="207.50"></text></g><g><title>__mod_zone_page_state (49 samples, 0.02%)</title><rect x="46.1783%" y="181" width="0.0154%" height="15" fill="rgb(243,137,7)" fg:x="146683" fg:w="49"/><text x="46.4283%" y="191.50"></text></g><g><title>free_unref_page_list (1,755 samples, 0.55%)</title><rect x="45.6535%" y="245" width="0.5525%" height="15" fill="rgb(230,79,13)" fg:x="145016" fg:w="1755"/><text x="45.9035%" y="255.50"></text></g><g><title>free_unref_page_commit (1,456 samples, 0.46%)</title><rect x="45.7476%" y="229" width="0.4584%" height="15" fill="rgb(247,105,23)" fg:x="145315" fg:w="1456"/><text x="45.9976%" y="239.50"></text></g><g><title>free_pcppages_bulk (1,293 samples, 0.41%)</title><rect x="45.7989%" y="213" width="0.4071%" height="15" fill="rgb(223,179,41)" fg:x="145478" fg:w="1293"/><text x="46.0489%" y="223.50"></text></g><g><title>__mod_zone_page_state (39 samples, 0.01%)</title><rect x="46.1937%" y="197" width="0.0123%" height="15" fill="rgb(218,9,34)" fg:x="146732" fg:w="39"/><text x="46.4437%" y="207.50"></text></g><g><title>mem_cgroup_uncharge_list (234 samples, 0.07%)</title><rect x="46.2098%" y="245" width="0.0737%" height="15" fill="rgb(222,106,8)" fg:x="146783" fg:w="234"/><text x="46.4598%" y="255.50"></text></g><g><title>uncharge_page (147 samples, 0.05%)</title><rect x="46.2372%" y="229" width="0.0463%" height="15" fill="rgb(211,220,0)" fg:x="146870" fg:w="147"/><text x="46.4872%" y="239.50"></text></g><g><title>mem_cgroup_update_lru_size (68 samples, 0.02%)</title><rect x="46.2834%" y="245" width="0.0214%" height="15" fill="rgb(229,52,16)" fg:x="147017" fg:w="68"/><text x="46.5334%" y="255.50"></text></g><g><title>tlb_flush_mmu (3,874 samples, 1.22%)</title><rect x="45.0959%" y="293" width="1.2196%" height="15" fill="rgb(212,155,18)" fg:x="143245" fg:w="3874"/><text x="45.3459%" y="303.50"></text></g><g><title>free_pages_and_swap_cache (3,869 samples, 1.22%)</title><rect x="45.0975%" y="277" width="1.2180%" height="15" fill="rgb(242,21,14)" fg:x="143250" fg:w="3869"/><text x="45.3475%" y="287.50"></text></g><g><title>release_pages (3,504 samples, 1.10%)</title><rect x="45.2124%" y="261" width="1.1031%" height="15" fill="rgb(222,19,48)" fg:x="143615" fg:w="3504"/><text x="45.4624%" y="271.50"></text></g><g><title>uncharge_page (32 samples, 0.01%)</title><rect x="46.3055%" y="245" width="0.0101%" height="15" fill="rgb(232,45,27)" fg:x="147087" fg:w="32"/><text x="46.5555%" y="255.50"></text></g><g><title>unlock_page_memcg (39 samples, 0.01%)</title><rect x="46.3155%" y="293" width="0.0123%" height="15" fill="rgb(249,103,42)" fg:x="147119" fg:w="39"/><text x="46.5655%" y="303.50"></text></g><g><title>unmap_region (7,372 samples, 2.32%)</title><rect x="44.0325%" y="373" width="2.3208%" height="15" fill="rgb(246,81,33)" fg:x="139867" fg:w="7372"/><text x="44.2825%" y="383.50">u..</text></g><g><title>unmap_vmas (6,672 samples, 2.10%)</title><rect x="44.2529%" y="357" width="2.1005%" height="15" fill="rgb(252,33,42)" fg:x="140567" fg:w="6672"/><text x="44.5029%" y="367.50">u..</text></g><g><title>unmap_single_vma (6,672 samples, 2.10%)</title><rect x="44.2529%" y="341" width="2.1005%" height="15" fill="rgb(209,212,41)" fg:x="140567" fg:w="6672"/><text x="44.5029%" y="351.50">u..</text></g><g><title>unmap_page_range (6,671 samples, 2.10%)</title><rect x="44.2532%" y="325" width="2.1001%" height="15" fill="rgb(207,154,6)" fg:x="140568" fg:w="6671"/><text x="44.5032%" y="335.50">u..</text></g><g><title>zap_pte_range (6,582 samples, 2.07%)</title><rect x="44.2812%" y="309" width="2.0721%" height="15" fill="rgb(223,64,47)" fg:x="140657" fg:w="6582"/><text x="44.5312%" y="319.50">z..</text></g><g><title>vm_normal_page (81 samples, 0.03%)</title><rect x="46.3278%" y="293" width="0.0255%" height="15" fill="rgb(211,161,38)" fg:x="147158" fg:w="81"/><text x="46.5778%" y="303.50"></text></g><g><title>__vm_munmap (7,377 samples, 2.32%)</title><rect x="44.0315%" y="405" width="2.3224%" height="15" fill="rgb(219,138,40)" fg:x="139864" fg:w="7377"/><text x="44.2815%" y="415.50">_..</text></g><g><title>__do_munmap (7,377 samples, 2.32%)</title><rect x="44.0315%" y="389" width="2.3224%" height="15" fill="rgb(241,228,46)" fg:x="139864" fg:w="7377"/><text x="44.2815%" y="399.50">_..</text></g><g><title>__GI_munmap (7,380 samples, 2.32%)</title><rect x="44.0309%" y="469" width="2.3233%" height="15" fill="rgb(223,209,38)" fg:x="139862" fg:w="7380"/><text x="44.2809%" y="479.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (7,380 samples, 2.32%)</title><rect x="44.0309%" y="453" width="2.3233%" height="15" fill="rgb(236,164,45)" fg:x="139862" fg:w="7380"/><text x="44.2809%" y="463.50">e..</text></g><g><title>do_syscall_64 (7,379 samples, 2.32%)</title><rect x="44.0312%" y="437" width="2.3230%" height="15" fill="rgb(231,15,5)" fg:x="139863" fg:w="7379"/><text x="44.2812%" y="447.50">d..</text></g><g><title>__x64_sys_munmap (7,378 samples, 2.32%)</title><rect x="44.0315%" y="421" width="2.3227%" height="15" fill="rgb(252,35,15)" fg:x="139864" fg:w="7378"/><text x="44.2815%" y="431.50">_..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (69,231 samples, 21.80%)</title><rect x="24.5598%" y="645" width="21.7951%" height="15" fill="rgb(248,181,18)" fg:x="78013" fg:w="69231"/><text x="24.8098%" y="655.50">core::iter::traits::iterator::Iter..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (69,231 samples, 21.80%)</title><rect x="24.5598%" y="629" width="21.7951%" height="15" fill="rgb(233,39,42)" fg:x="78013" fg:w="69231"/><text x="24.8098%" y="639.50">core::iter::traits::iterator::Iter..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;hprof_slurp::record::Record&gt;&gt; (7,385 samples, 2.32%)</title><rect x="44.0300%" y="613" width="2.3249%" height="15" fill="rgb(238,110,33)" fg:x="139859" fg:w="7385"/><text x="44.2800%" y="623.50">c..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,385 samples, 2.32%)</title><rect x="44.0300%" y="597" width="2.3249%" height="15" fill="rgb(233,195,10)" fg:x="139859" fg:w="7385"/><text x="44.2800%" y="607.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;hprof_slurp::record::Record,alloc::alloc::Global&gt;&gt; (7,385 samples, 2.32%)</title><rect x="44.0300%" y="581" width="2.3249%" height="15" fill="rgb(254,105,3)" fg:x="139859" fg:w="7385"/><text x="44.2800%" y="591.50">c..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,385 samples, 2.32%)</title><rect x="44.0300%" y="565" width="2.3249%" height="15" fill="rgb(221,225,9)" fg:x="139859" fg:w="7385"/><text x="44.2800%" y="575.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;hprof_slurp::record::Record&gt;&gt; (7,385 samples, 2.32%)</title><rect x="44.0300%" y="549" width="2.3249%" height="15" fill="rgb(224,227,45)" fg:x="139859" fg:w="7385"/><text x="44.2800%" y="559.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,385 samples, 2.32%)</title><rect x="44.0300%" y="533" width="2.3249%" height="15" fill="rgb(229,198,43)" fg:x="139859" fg:w="7385"/><text x="44.2800%" y="543.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,385 samples, 2.32%)</title><rect x="44.0300%" y="517" width="2.3249%" height="15" fill="rgb(206,209,35)" fg:x="139859" fg:w="7385"/><text x="44.2800%" y="527.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (7,385 samples, 2.32%)</title><rect x="44.0300%" y="501" width="2.3249%" height="15" fill="rgb(245,195,53)" fg:x="139859" fg:w="7385"/><text x="44.2800%" y="511.50">a..</text></g><g><title>__GI___libc_free (7,385 samples, 2.32%)</title><rect x="44.0300%" y="485" width="2.3249%" height="15" fill="rgb(240,92,26)" fg:x="139859" fg:w="7385"/><text x="44.2800%" y="495.50">_..</text></g><g><title>malloc_consolidate (511 samples, 0.16%)</title><rect x="46.3640%" y="533" width="0.1609%" height="15" fill="rgb(207,40,23)" fg:x="147273" fg:w="511"/><text x="46.6140%" y="543.50"></text></g><g><title>unlink_chunk (118 samples, 0.04%)</title><rect x="46.4877%" y="517" width="0.0371%" height="15" fill="rgb(223,111,35)" fg:x="147666" fg:w="118"/><text x="46.7377%" y="527.50"></text></g><g><title>__mod_memcg_lruvec_state (80 samples, 0.03%)</title><rect x="46.6430%" y="293" width="0.0252%" height="15" fill="rgb(229,147,28)" fg:x="148159" fg:w="80"/><text x="46.8930%" y="303.50"></text></g><g><title>__mod_lruvec_state (123 samples, 0.04%)</title><rect x="46.6385%" y="309" width="0.0387%" height="15" fill="rgb(211,29,28)" fg:x="148145" fg:w="123"/><text x="46.8885%" y="319.50"></text></g><g><title>__free_one_page (265 samples, 0.08%)</title><rect x="46.7755%" y="261" width="0.0834%" height="15" fill="rgb(228,72,33)" fg:x="148580" fg:w="265"/><text x="47.0255%" y="271.50"></text></g><g><title>free_unref_page_list (527 samples, 0.17%)</title><rect x="46.6965%" y="309" width="0.1659%" height="15" fill="rgb(205,214,31)" fg:x="148329" fg:w="527"/><text x="46.9465%" y="319.50"></text></g><g><title>free_unref_page_commit (436 samples, 0.14%)</title><rect x="46.7251%" y="293" width="0.1373%" height="15" fill="rgb(224,111,15)" fg:x="148420" fg:w="436"/><text x="46.9751%" y="303.50"></text></g><g><title>free_pcppages_bulk (383 samples, 0.12%)</title><rect x="46.7418%" y="277" width="0.1206%" height="15" fill="rgb(253,21,26)" fg:x="148473" fg:w="383"/><text x="46.9918%" y="287.50"></text></g><g><title>mem_cgroup_uncharge_list (63 samples, 0.02%)</title><rect x="46.8640%" y="309" width="0.0198%" height="15" fill="rgb(245,139,43)" fg:x="148861" fg:w="63"/><text x="47.1140%" y="319.50"></text></g><g><title>uncharge_page (48 samples, 0.02%)</title><rect x="46.8687%" y="293" width="0.0151%" height="15" fill="rgb(252,170,7)" fg:x="148876" fg:w="48"/><text x="47.1187%" y="303.50"></text></g><g><title>tlb_finish_mmu (1,146 samples, 0.36%)</title><rect x="46.5312%" y="357" width="0.3608%" height="15" fill="rgb(231,118,14)" fg:x="147804" fg:w="1146"/><text x="46.7812%" y="367.50"></text></g><g><title>free_pages_and_swap_cache (1,138 samples, 0.36%)</title><rect x="46.5337%" y="341" width="0.3583%" height="15" fill="rgb(238,83,0)" fg:x="147812" fg:w="1138"/><text x="46.7837%" y="351.50"></text></g><g><title>release_pages (1,030 samples, 0.32%)</title><rect x="46.5677%" y="325" width="0.3243%" height="15" fill="rgb(221,39,39)" fg:x="147920" fg:w="1030"/><text x="46.8177%" y="335.50"></text></g><g><title>__tlb_remove_page_size (44 samples, 0.01%)</title><rect x="47.2165%" y="293" width="0.0139%" height="15" fill="rgb(222,119,46)" fg:x="149981" fg:w="44"/><text x="47.4665%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (198 samples, 0.06%)</title><rect x="47.3610%" y="245" width="0.0623%" height="15" fill="rgb(222,165,49)" fg:x="150440" fg:w="198"/><text x="47.6110%" y="255.50"></text></g><g><title>__mod_memcg_state.part.0 (89 samples, 0.03%)</title><rect x="47.3954%" y="229" width="0.0280%" height="15" fill="rgb(219,113,52)" fg:x="150549" fg:w="89"/><text x="47.6454%" y="239.50"></text></g><g><title>__mod_lruvec_state (283 samples, 0.09%)</title><rect x="47.3513%" y="261" width="0.0891%" height="15" fill="rgb(214,7,15)" fg:x="150409" fg:w="283"/><text x="47.6013%" y="271.50"></text></g><g><title>__mod_node_page_state (35 samples, 0.01%)</title><rect x="47.4294%" y="245" width="0.0110%" height="15" fill="rgb(235,32,4)" fg:x="150657" fg:w="35"/><text x="47.6794%" y="255.50"></text></g><g><title>__mod_lruvec_page_state (375 samples, 0.12%)</title><rect x="47.3409%" y="277" width="0.1181%" height="15" fill="rgb(238,90,54)" fg:x="150376" fg:w="375"/><text x="47.5909%" y="287.50"></text></g><g><title>__mod_node_page_state (46 samples, 0.01%)</title><rect x="47.4445%" y="261" width="0.0145%" height="15" fill="rgb(213,208,19)" fg:x="150705" fg:w="46"/><text x="47.6945%" y="271.50"></text></g><g><title>lock_page_memcg (53 samples, 0.02%)</title><rect x="47.4615%" y="277" width="0.0167%" height="15" fill="rgb(233,156,4)" fg:x="150759" fg:w="53"/><text x="47.7115%" y="287.50"></text></g><g><title>page_remove_rmap (812 samples, 0.26%)</title><rect x="47.2348%" y="293" width="0.2556%" height="15" fill="rgb(207,194,5)" fg:x="150039" fg:w="812"/><text x="47.4848%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (168 samples, 0.05%)</title><rect x="47.6957%" y="229" width="0.0529%" height="15" fill="rgb(206,111,30)" fg:x="151503" fg:w="168"/><text x="47.9457%" y="239.50"></text></g><g><title>__mod_memcg_state.part.0 (83 samples, 0.03%)</title><rect x="47.7225%" y="213" width="0.0261%" height="15" fill="rgb(243,70,54)" fg:x="151588" fg:w="83"/><text x="47.9725%" y="223.50"></text></g><g><title>__mod_lruvec_state (248 samples, 0.08%)</title><rect x="47.6856%" y="245" width="0.0781%" height="15" fill="rgb(242,28,8)" fg:x="151471" fg:w="248"/><text x="47.9356%" y="255.50"></text></g><g><title>free_pcp_prepare (44 samples, 0.01%)</title><rect x="47.8339%" y="229" width="0.0139%" height="15" fill="rgb(219,106,18)" fg:x="151942" fg:w="44"/><text x="48.0839%" y="239.50"></text></g><g><title>__free_one_page (469 samples, 0.15%)</title><rect x="47.9413%" y="197" width="0.1476%" height="15" fill="rgb(244,222,10)" fg:x="152283" fg:w="469"/><text x="48.1913%" y="207.50"></text></g><g><title>free_unref_page_list (936 samples, 0.29%)</title><rect x="47.8005%" y="245" width="0.2947%" height="15" fill="rgb(236,179,52)" fg:x="151836" fg:w="936"/><text x="48.0505%" y="255.50"></text></g><g><title>free_unref_page_commit (785 samples, 0.25%)</title><rect x="47.8481%" y="229" width="0.2471%" height="15" fill="rgb(213,23,39)" fg:x="151987" fg:w="785"/><text x="48.0981%" y="239.50"></text></g><g><title>free_pcppages_bulk (686 samples, 0.22%)</title><rect x="47.8792%" y="213" width="0.2160%" height="15" fill="rgb(238,48,10)" fg:x="152086" fg:w="686"/><text x="48.1292%" y="223.50"></text></g><g><title>mem_cgroup_uncharge_list (115 samples, 0.04%)</title><rect x="48.0983%" y="245" width="0.0362%" height="15" fill="rgb(251,196,23)" fg:x="152782" fg:w="115"/><text x="48.3483%" y="255.50"></text></g><g><title>uncharge_page (77 samples, 0.02%)</title><rect x="48.1103%" y="229" width="0.0242%" height="15" fill="rgb(250,152,24)" fg:x="152820" fg:w="77"/><text x="48.3603%" y="239.50"></text></g><g><title>mem_cgroup_update_lru_size (32 samples, 0.01%)</title><rect x="48.1346%" y="245" width="0.0101%" height="15" fill="rgb(209,150,17)" fg:x="152897" fg:w="32"/><text x="48.3846%" y="255.50"></text></g><g><title>tlb_flush_mmu (2,095 samples, 0.66%)</title><rect x="47.4911%" y="293" width="0.6595%" height="15" fill="rgb(234,202,34)" fg:x="150853" fg:w="2095"/><text x="47.7411%" y="303.50"></text></g><g><title>free_pages_and_swap_cache (2,093 samples, 0.66%)</title><rect x="47.4917%" y="277" width="0.6589%" height="15" fill="rgb(253,148,53)" fg:x="150855" fg:w="2093"/><text x="47.7417%" y="287.50"></text></g><g><title>release_pages (1,868 samples, 0.59%)</title><rect x="47.5625%" y="261" width="0.5881%" height="15" fill="rgb(218,129,16)" fg:x="151080" fg:w="1868"/><text x="47.8125%" y="271.50"></text></g><g><title>unmap_region (5,219 samples, 1.64%)</title><rect x="46.5280%" y="373" width="1.6430%" height="15" fill="rgb(216,85,19)" fg:x="147794" fg:w="5219"/><text x="46.7780%" y="383.50"></text></g><g><title>unmap_vmas (4,063 samples, 1.28%)</title><rect x="46.8920%" y="357" width="1.2791%" height="15" fill="rgb(235,228,7)" fg:x="148950" fg:w="4063"/><text x="47.1420%" y="367.50"></text></g><g><title>unmap_single_vma (4,063 samples, 1.28%)</title><rect x="46.8920%" y="341" width="1.2791%" height="15" fill="rgb(245,175,0)" fg:x="148950" fg:w="4063"/><text x="47.1420%" y="351.50"></text></g><g><title>unmap_page_range (4,063 samples, 1.28%)</title><rect x="46.8920%" y="325" width="1.2791%" height="15" fill="rgb(208,168,36)" fg:x="148950" fg:w="4063"/><text x="47.1420%" y="335.50"></text></g><g><title>zap_pte_range (4,014 samples, 1.26%)</title><rect x="46.9074%" y="309" width="1.2637%" height="15" fill="rgb(246,171,24)" fg:x="148999" fg:w="4014"/><text x="47.1574%" y="319.50"></text></g><g><title>vm_normal_page (47 samples, 0.01%)</title><rect x="48.1563%" y="293" width="0.0148%" height="15" fill="rgb(215,142,24)" fg:x="152966" fg:w="47"/><text x="48.4063%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5,770 samples, 1.82%)</title><rect x="46.3549%" y="645" width="1.8165%" height="15" fill="rgb(250,187,7)" fg:x="147244" fg:w="5770"/><text x="46.6049%" y="655.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5,770 samples, 1.82%)</title><rect x="46.3549%" y="629" width="1.8165%" height="15" fill="rgb(228,66,33)" fg:x="147244" fg:w="5770"/><text x="46.6049%" y="639.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5,770 samples, 1.82%)</title><rect x="46.3549%" y="613" width="1.8165%" height="15" fill="rgb(234,215,21)" fg:x="147244" fg:w="5770"/><text x="46.6049%" y="623.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,770 samples, 1.82%)</title><rect x="46.3549%" y="597" width="1.8165%" height="15" fill="rgb(222,191,20)" fg:x="147244" fg:w="5770"/><text x="46.6049%" y="607.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (5,770 samples, 1.82%)</title><rect x="46.3549%" y="581" width="1.8165%" height="15" fill="rgb(245,79,54)" fg:x="147244" fg:w="5770"/><text x="46.6049%" y="591.50">a..</text></g><g><title>__GI___libc_free (5,770 samples, 1.82%)</title><rect x="46.3549%" y="565" width="1.8165%" height="15" fill="rgb(240,10,37)" fg:x="147244" fg:w="5770"/><text x="46.6049%" y="575.50">_..</text></g><g><title>_int_free (5,742 samples, 1.81%)</title><rect x="46.3637%" y="549" width="1.8077%" height="15" fill="rgb(214,192,32)" fg:x="147272" fg:w="5742"/><text x="46.6137%" y="559.50">_..</text></g><g><title>systrim (5,230 samples, 1.65%)</title><rect x="46.5249%" y="533" width="1.6465%" height="15" fill="rgb(209,36,54)" fg:x="147784" fg:w="5230"/><text x="46.7749%" y="543.50"></text></g><g><title>__GI___default_morecore (5,229 samples, 1.65%)</title><rect x="46.5252%" y="517" width="1.6462%" height="15" fill="rgb(220,10,11)" fg:x="147785" fg:w="5229"/><text x="46.7752%" y="527.50"></text></g><g><title>__GI___sbrk (5,228 samples, 1.65%)</title><rect x="46.5255%" y="501" width="1.6459%" height="15" fill="rgb(221,106,17)" fg:x="147786" fg:w="5228"/><text x="46.7755%" y="511.50"></text></g><g><title>__GI___sbrk (5,227 samples, 1.65%)</title><rect x="46.5258%" y="485" width="1.6455%" height="15" fill="rgb(251,142,44)" fg:x="147787" fg:w="5227"/><text x="46.7758%" y="495.50"></text></g><g><title>__brk (5,227 samples, 1.65%)</title><rect x="46.5258%" y="469" width="1.6455%" height="15" fill="rgb(238,13,15)" fg:x="147787" fg:w="5227"/><text x="46.7758%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5,227 samples, 1.65%)</title><rect x="46.5258%" y="453" width="1.6455%" height="15" fill="rgb(208,107,27)" fg:x="147787" fg:w="5227"/><text x="46.7758%" y="463.50"></text></g><g><title>do_syscall_64 (5,226 samples, 1.65%)</title><rect x="46.5262%" y="437" width="1.6452%" height="15" fill="rgb(205,136,37)" fg:x="147788" fg:w="5226"/><text x="46.7762%" y="447.50"></text></g><g><title>__x64_sys_brk (5,226 samples, 1.65%)</title><rect x="46.5262%" y="421" width="1.6452%" height="15" fill="rgb(250,205,27)" fg:x="147788" fg:w="5226"/><text x="46.7762%" y="431.50"></text></g><g><title>__do_sys_brk (5,226 samples, 1.65%)</title><rect x="46.5262%" y="405" width="1.6452%" height="15" fill="rgb(210,80,43)" fg:x="147788" fg:w="5226"/><text x="46.7762%" y="415.50"></text></g><g><title>__do_munmap (5,226 samples, 1.65%)</title><rect x="46.5262%" y="389" width="1.6452%" height="15" fill="rgb(247,160,36)" fg:x="147788" fg:w="5226"/><text x="46.7762%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.01%)</title><rect x="48.1714%" y="597" width="0.0107%" height="15" fill="rgb(234,13,49)" fg:x="153014" fg:w="34"/><text x="48.4214%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (34 samples, 0.01%)</title><rect x="48.1714%" y="581" width="0.0107%" height="15" fill="rgb(234,122,0)" fg:x="153014" fg:w="34"/><text x="48.4214%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (33 samples, 0.01%)</title><rect x="48.1717%" y="565" width="0.0104%" height="15" fill="rgb(207,146,38)" fg:x="153015" fg:w="33"/><text x="48.4217%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (33 samples, 0.01%)</title><rect x="48.1717%" y="549" width="0.0104%" height="15" fill="rgb(207,177,25)" fg:x="153015" fg:w="33"/><text x="48.4217%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,alloc::string::String)&gt; (33 samples, 0.01%)</title><rect x="48.1717%" y="533" width="0.0104%" height="15" fill="rgb(211,178,42)" fg:x="153015" fg:w="33"/><text x="48.4217%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (33 samples, 0.01%)</title><rect x="48.1717%" y="517" width="0.0104%" height="15" fill="rgb(230,69,54)" fg:x="153015" fg:w="33"/><text x="48.4217%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (33 samples, 0.01%)</title><rect x="48.1717%" y="501" width="0.0104%" height="15" fill="rgb(214,135,41)" fg:x="153015" fg:w="33"/><text x="48.4217%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (33 samples, 0.01%)</title><rect x="48.1717%" y="485" width="0.0104%" height="15" fill="rgb(237,67,25)" fg:x="153015" fg:w="33"/><text x="48.4217%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.01%)</title><rect x="48.1717%" y="469" width="0.0104%" height="15" fill="rgb(222,189,50)" fg:x="153015" fg:w="33"/><text x="48.4217%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (32 samples, 0.01%)</title><rect x="48.1720%" y="453" width="0.0101%" height="15" fill="rgb(245,148,34)" fg:x="153016" fg:w="32"/><text x="48.4220%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (32 samples, 0.01%)</title><rect x="48.1720%" y="437" width="0.0101%" height="15" fill="rgb(222,29,6)" fg:x="153016" fg:w="32"/><text x="48.4220%" y="447.50"></text></g><g><title>__GI___libc_free (32 samples, 0.01%)</title><rect x="48.1720%" y="421" width="0.0101%" height="15" fill="rgb(221,189,43)" fg:x="153016" fg:w="32"/><text x="48.4220%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String&gt;&gt; (44 samples, 0.01%)</title><rect x="48.1714%" y="645" width="0.0139%" height="15" fill="rgb(207,36,27)" fg:x="153014" fg:w="44"/><text x="48.4214%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (44 samples, 0.01%)</title><rect x="48.1714%" y="629" width="0.0139%" height="15" fill="rgb(217,90,24)" fg:x="153014" fg:w="44"/><text x="48.4214%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (44 samples, 0.01%)</title><rect x="48.1714%" y="613" width="0.0139%" height="15" fill="rgb(224,66,35)" fg:x="153014" fg:w="44"/><text x="48.4214%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (8,400 samples, 2.64%)</title><rect x="51.4244%" y="581" width="2.6445%" height="15" fill="rgb(221,13,50)" fg:x="163347" fg:w="8400"/><text x="51.6744%" y="591.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,033 samples, 0.33%)</title><rect x="54.6686%" y="533" width="0.3252%" height="15" fill="rgb(236,68,49)" fg:x="173652" fg:w="1033"/><text x="54.9186%" y="543.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1,033 samples, 0.33%)</title><rect x="54.6686%" y="517" width="0.3252%" height="15" fill="rgb(229,146,28)" fg:x="173652" fg:w="1033"/><text x="54.9186%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,033 samples, 0.33%)</title><rect x="54.6686%" y="501" width="0.3252%" height="15" fill="rgb(225,31,38)" fg:x="173652" fg:w="1033"/><text x="54.9186%" y="511.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u8 (1,493 samples, 0.47%)</title><rect x="54.5244%" y="565" width="0.4700%" height="15" fill="rgb(250,208,3)" fg:x="173194" fg:w="1493"/><text x="54.7744%" y="575.50"></text></g><g><title>nom::number::streaming::be_u8 (1,493 samples, 0.47%)</title><rect x="54.5244%" y="549" width="0.4700%" height="15" fill="rgb(246,54,23)" fg:x="173194" fg:w="1493"/><text x="54.7744%" y="559.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (460 samples, 0.14%)</title><rect x="55.2582%" y="469" width="0.1448%" height="15" fill="rgb(243,76,11)" fg:x="175525" fg:w="460"/><text x="55.5082%" y="479.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,355 samples, 0.43%)</title><rect x="55.1077%" y="517" width="0.4266%" height="15" fill="rgb(245,21,50)" fg:x="175047" fg:w="1355"/><text x="55.3577%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (877 samples, 0.28%)</title><rect x="55.2582%" y="501" width="0.2761%" height="15" fill="rgb(228,9,43)" fg:x="175525" fg:w="877"/><text x="55.5082%" y="511.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (877 samples, 0.28%)</title><rect x="55.2582%" y="485" width="0.2761%" height="15" fill="rgb(208,100,47)" fg:x="175525" fg:w="877"/><text x="55.5082%" y="495.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (417 samples, 0.13%)</title><rect x="55.4030%" y="469" width="0.1313%" height="15" fill="rgb(232,26,8)" fg:x="175985" fg:w="417"/><text x="55.6530%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (417 samples, 0.13%)</title><rect x="55.4030%" y="453" width="0.1313%" height="15" fill="rgb(216,166,38)" fg:x="175985" fg:w="417"/><text x="55.6530%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (417 samples, 0.13%)</title><rect x="55.4030%" y="437" width="0.1313%" height="15" fill="rgb(251,202,51)" fg:x="175985" fg:w="417"/><text x="55.6530%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (417 samples, 0.13%)</title><rect x="55.4030%" y="421" width="0.1313%" height="15" fill="rgb(254,216,34)" fg:x="175985" fg:w="417"/><text x="55.6530%" y="431.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (417 samples, 0.13%)</title><rect x="55.4030%" y="405" width="0.1313%" height="15" fill="rgb(251,32,27)" fg:x="175985" fg:w="417"/><text x="55.6530%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (417 samples, 0.13%)</title><rect x="55.4030%" y="389" width="0.1313%" height="15" fill="rgb(208,127,28)" fg:x="175985" fg:w="417"/><text x="55.6530%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (417 samples, 0.13%)</title><rect x="55.4030%" y="373" width="0.1313%" height="15" fill="rgb(224,137,22)" fg:x="175985" fg:w="417"/><text x="55.6530%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (417 samples, 0.13%)</title><rect x="55.4030%" y="357" width="0.1313%" height="15" fill="rgb(254,70,32)" fg:x="175985" fg:w="417"/><text x="55.6530%" y="367.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u32 (2,214 samples, 0.70%)</title><rect x="56.7904%" y="453" width="0.6970%" height="15" fill="rgb(229,75,37)" fg:x="180392" fg:w="2214"/><text x="57.0404%" y="463.50"></text></g><g><title>nom::number::streaming::be_u32 (2,214 samples, 0.70%)</title><rect x="56.7904%" y="437" width="0.6970%" height="15" fill="rgb(252,64,23)" fg:x="180392" fg:w="2214"/><text x="57.0404%" y="447.50"></text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (928 samples, 0.29%)</title><rect x="59.0256%" y="405" width="0.2922%" height="15" fill="rgb(232,162,48)" fg:x="187492" fg:w="928"/><text x="59.2756%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (928 samples, 0.29%)</title><rect x="59.0256%" y="389" width="0.2922%" height="15" fill="rgb(246,160,12)" fg:x="187492" fg:w="928"/><text x="59.2756%" y="399.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (928 samples, 0.29%)</title><rect x="59.0256%" y="373" width="0.2922%" height="15" fill="rgb(247,166,0)" fg:x="187492" fg:w="928"/><text x="59.2756%" y="383.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (928 samples, 0.29%)</title><rect x="59.0256%" y="357" width="0.2922%" height="15" fill="rgb(249,219,21)" fg:x="187492" fg:w="928"/><text x="59.2756%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (928 samples, 0.29%)</title><rect x="59.0256%" y="341" width="0.2922%" height="15" fill="rgb(205,209,3)" fg:x="187492" fg:w="928"/><text x="59.2756%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (853 samples, 0.27%)</title><rect x="59.0493%" y="325" width="0.2685%" height="15" fill="rgb(243,44,1)" fg:x="187567" fg:w="853"/><text x="59.2993%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (853 samples, 0.27%)</title><rect x="59.0493%" y="309" width="0.2685%" height="15" fill="rgb(206,159,16)" fg:x="187567" fg:w="853"/><text x="59.2993%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,301 samples, 0.72%)</title><rect x="59.3178%" y="405" width="0.7244%" height="15" fill="rgb(244,77,30)" fg:x="188420" fg:w="2301"/><text x="59.5678%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,301 samples, 0.72%)</title><rect x="59.3178%" y="389" width="0.7244%" height="15" fill="rgb(218,69,12)" fg:x="188420" fg:w="2301"/><text x="59.5678%" y="399.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (2,301 samples, 0.72%)</title><rect x="59.3178%" y="373" width="0.7244%" height="15" fill="rgb(212,87,7)" fg:x="188420" fg:w="2301"/><text x="59.5678%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,301 samples, 0.72%)</title><rect x="59.3178%" y="357" width="0.7244%" height="15" fill="rgb(245,114,25)" fg:x="188420" fg:w="2301"/><text x="59.5678%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (10,339 samples, 3.25%)</title><rect x="56.7904%" y="485" width="3.2549%" height="15" fill="rgb(210,61,42)" fg:x="180392" fg:w="10339"/><text x="57.0404%" y="495.50">&lt;F ..</text></g><g><title>core::ops::function::FnMut::call_mut (10,339 samples, 3.25%)</title><rect x="56.7904%" y="469" width="3.2549%" height="15" fill="rgb(211,52,33)" fg:x="180392" fg:w="10339"/><text x="57.0404%" y="479.50">cor..</text></g><g><title>hprof_slurp::record_parser::parse_id (8,125 samples, 2.56%)</title><rect x="57.4874%" y="453" width="2.5579%" height="15" fill="rgb(234,58,33)" fg:x="182606" fg:w="8125"/><text x="57.7374%" y="463.50">hp..</text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (8,125 samples, 2.56%)</title><rect x="57.4874%" y="437" width="2.5579%" height="15" fill="rgb(220,115,36)" fg:x="182606" fg:w="8125"/><text x="57.7374%" y="447.50">hp..</text></g><g><title>nom::number::streaming::be_u64 (7,717 samples, 2.43%)</title><rect x="57.6159%" y="421" width="2.4294%" height="15" fill="rgb(243,153,54)" fg:x="183014" fg:w="7717"/><text x="57.8659%" y="431.50">no..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (18,549 samples, 5.84%)</title><rect x="60.0453%" y="485" width="5.8395%" height="15" fill="rgb(251,47,18)" fg:x="190731" fg:w="18549"/><text x="60.2953%" y="495.50">&lt;core::..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (34,255 samples, 10.78%)</title><rect x="55.1077%" y="533" width="10.7841%" height="15" fill="rgb(242,102,42)" fg:x="175047" fg:w="34255"/><text x="55.3577%" y="543.50">&lt;F as nom::inter..</text></g><g><title>nom::sequence::tuple::{{closure}} (32,900 samples, 10.36%)</title><rect x="55.5343%" y="517" width="10.3575%" height="15" fill="rgb(234,31,38)" fg:x="176402" fg:w="32900"/><text x="55.7843%" y="527.50">nom::sequence::..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (32,825 samples, 10.33%)</title><rect x="55.5579%" y="501" width="10.3339%" height="15" fill="rgb(221,117,51)" fg:x="176477" fg:w="32825"/><text x="55.8079%" y="511.50">&lt;(FnA,FnB,FnC,F..</text></g><g><title>hprof_slurp::record_parser::parse_gc_instance_dump (35,096 samples, 11.05%)</title><rect x="54.9957%" y="565" width="11.0488%" height="15" fill="rgb(212,20,18)" fg:x="174691" fg:w="35096"/><text x="55.2457%" y="575.50">hprof_slurp::rec..</text></g><g><title>nom::combinator::flat_map::{{closure}} (35,096 samples, 11.05%)</title><rect x="54.9957%" y="549" width="11.0488%" height="15" fill="rgb(245,133,36)" fg:x="174691" fg:w="35096"/><text x="55.2457%" y="559.50">nom::combinator:..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (485 samples, 0.15%)</title><rect x="65.8918%" y="533" width="0.1527%" height="15" fill="rgb(212,6,19)" fg:x="209302" fg:w="485"/><text x="66.1418%" y="543.50"></text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (237 samples, 0.07%)</title><rect x="66.6710%" y="389" width="0.0746%" height="15" fill="rgb(218,1,36)" fg:x="211777" fg:w="237"/><text x="66.9210%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (237 samples, 0.07%)</title><rect x="66.6710%" y="373" width="0.0746%" height="15" fill="rgb(246,84,54)" fg:x="211777" fg:w="237"/><text x="66.9210%" y="383.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (237 samples, 0.07%)</title><rect x="66.6710%" y="357" width="0.0746%" height="15" fill="rgb(242,110,6)" fg:x="211777" fg:w="237"/><text x="66.9210%" y="367.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (237 samples, 0.07%)</title><rect x="66.6710%" y="341" width="0.0746%" height="15" fill="rgb(214,47,5)" fg:x="211777" fg:w="237"/><text x="66.9210%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (237 samples, 0.07%)</title><rect x="66.6710%" y="325" width="0.0746%" height="15" fill="rgb(218,159,25)" fg:x="211777" fg:w="237"/><text x="66.9210%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (600 samples, 0.19%)</title><rect x="66.7456%" y="389" width="0.1889%" height="15" fill="rgb(215,211,28)" fg:x="212014" fg:w="600"/><text x="66.9956%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (600 samples, 0.19%)</title><rect x="66.7456%" y="373" width="0.1889%" height="15" fill="rgb(238,59,32)" fg:x="212014" fg:w="600"/><text x="66.9956%" y="383.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (600 samples, 0.19%)</title><rect x="66.7456%" y="357" width="0.1889%" height="15" fill="rgb(226,82,3)" fg:x="212014" fg:w="600"/><text x="66.9956%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (600 samples, 0.19%)</title><rect x="66.7456%" y="341" width="0.1889%" height="15" fill="rgb(240,164,32)" fg:x="212014" fg:w="600"/><text x="66.9956%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,234 samples, 0.70%)</title><rect x="66.2327%" y="469" width="0.7033%" height="15" fill="rgb(232,46,7)" fg:x="210385" fg:w="2234"/><text x="66.4827%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,234 samples, 0.70%)</title><rect x="66.2327%" y="453" width="0.7033%" height="15" fill="rgb(229,129,53)" fg:x="210385" fg:w="2234"/><text x="66.4827%" y="463.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (2,234 samples, 0.70%)</title><rect x="66.2327%" y="437" width="0.7033%" height="15" fill="rgb(234,188,29)" fg:x="210385" fg:w="2234"/><text x="66.4827%" y="447.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (2,234 samples, 0.70%)</title><rect x="66.2327%" y="421" width="0.7033%" height="15" fill="rgb(246,141,4)" fg:x="210385" fg:w="2234"/><text x="66.4827%" y="431.50"></text></g><g><title>nom::number::streaming::be_u64 (2,139 samples, 0.67%)</title><rect x="66.2627%" y="405" width="0.6734%" height="15" fill="rgb(229,23,39)" fg:x="210480" fg:w="2139"/><text x="66.5127%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (107 samples, 0.03%)</title><rect x="66.9581%" y="453" width="0.0337%" height="15" fill="rgb(206,12,3)" fg:x="212689" fg:w="107"/><text x="67.2081%" y="463.50"></text></g><g><title>clear_page_erms (178 samples, 0.06%)</title><rect x="67.1791%" y="277" width="0.0560%" height="15" fill="rgb(252,226,20)" fg:x="213391" fg:w="178"/><text x="67.4291%" y="287.50"></text></g><g><title>get_page_from_freelist (253 samples, 0.08%)</title><rect x="67.1744%" y="293" width="0.0796%" height="15" fill="rgb(216,123,35)" fg:x="213376" fg:w="253"/><text x="67.4244%" y="303.50"></text></g><g><title>rmqueue (58 samples, 0.02%)</title><rect x="67.2358%" y="277" width="0.0183%" height="15" fill="rgb(212,68,40)" fg:x="213571" fg:w="58"/><text x="67.4858%" y="287.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (47 samples, 0.01%)</title><rect x="67.2392%" y="261" width="0.0148%" height="15" fill="rgb(254,125,32)" fg:x="213582" fg:w="47"/><text x="67.4892%" y="271.50"></text></g><g><title>__alloc_pages_nodemask (269 samples, 0.08%)</title><rect x="67.1696%" y="309" width="0.0847%" height="15" fill="rgb(253,97,22)" fg:x="213361" fg:w="269"/><text x="67.4196%" y="319.50"></text></g><g><title>alloc_pages_vma (286 samples, 0.09%)</title><rect x="67.1668%" y="325" width="0.0900%" height="15" fill="rgb(241,101,14)" fg:x="213352" fg:w="286"/><text x="67.4168%" y="335.50"></text></g><g><title>cgroup_throttle_swaprate (47 samples, 0.01%)</title><rect x="67.2568%" y="325" width="0.0148%" height="15" fill="rgb(238,103,29)" fg:x="213638" fg:w="47"/><text x="67.5068%" y="335.50"></text></g><g><title>__pagevec_lru_add_fn (60 samples, 0.02%)</title><rect x="67.2742%" y="277" width="0.0189%" height="15" fill="rgb(233,195,47)" fg:x="213693" fg:w="60"/><text x="67.5242%" y="287.50"></text></g><g><title>__pagevec_lru_add (77 samples, 0.02%)</title><rect x="67.2738%" y="293" width="0.0242%" height="15" fill="rgb(246,218,30)" fg:x="213692" fg:w="77"/><text x="67.5238%" y="303.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (85 samples, 0.03%)</title><rect x="67.2716%" y="325" width="0.0268%" height="15" fill="rgb(219,145,47)" fg:x="213685" fg:w="85"/><text x="67.5216%" y="335.50"></text></g><g><title>lru_cache_add (85 samples, 0.03%)</title><rect x="67.2716%" y="309" width="0.0268%" height="15" fill="rgb(243,12,26)" fg:x="213685" fg:w="85"/><text x="67.5216%" y="319.50"></text></g><g><title>mem_cgroup_charge (92 samples, 0.03%)</title><rect x="67.2984%" y="325" width="0.0290%" height="15" fill="rgb(214,87,16)" fg:x="213770" fg:w="92"/><text x="67.5484%" y="335.50"></text></g><g><title>do_anonymous_page (560 samples, 0.18%)</title><rect x="67.1630%" y="341" width="0.1763%" height="15" fill="rgb(208,99,42)" fg:x="213340" fg:w="560"/><text x="67.4130%" y="351.50"></text></g><g><title>__handle_mm_fault (616 samples, 0.19%)</title><rect x="67.1476%" y="373" width="0.1939%" height="15" fill="rgb(253,99,2)" fg:x="213291" fg:w="616"/><text x="67.3976%" y="383.50"></text></g><g><title>handle_pte_fault (584 samples, 0.18%)</title><rect x="67.1577%" y="357" width="0.1839%" height="15" fill="rgb(220,168,23)" fg:x="213323" fg:w="584"/><text x="67.4077%" y="367.50"></text></g><g><title>handle_mm_fault (646 samples, 0.20%)</title><rect x="67.1394%" y="389" width="0.2034%" height="15" fill="rgb(242,38,24)" fg:x="213265" fg:w="646"/><text x="67.3894%" y="399.50"></text></g><g><title>do_user_addr_fault (698 samples, 0.22%)</title><rect x="67.1278%" y="405" width="0.2197%" height="15" fill="rgb(225,182,9)" fg:x="213228" fg:w="698"/><text x="67.3778%" y="415.50"></text></g><g><title>exc_page_fault (719 samples, 0.23%)</title><rect x="67.1259%" y="421" width="0.2264%" height="15" fill="rgb(243,178,37)" fg:x="213222" fg:w="719"/><text x="67.3759%" y="431.50"></text></g><g><title>asm_exc_page_fault (741 samples, 0.23%)</title><rect x="67.1196%" y="437" width="0.2333%" height="15" fill="rgb(232,139,19)" fg:x="213202" fg:w="741"/><text x="67.3696%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,464 samples, 0.46%)</title><rect x="66.9360%" y="469" width="0.4609%" height="15" fill="rgb(225,201,24)" fg:x="212619" fg:w="1464"/><text x="67.1860%" y="479.50"></text></g><g><title>core::ptr::write (1,287 samples, 0.41%)</title><rect x="66.9918%" y="453" width="0.4052%" height="15" fill="rgb(221,47,46)" fg:x="212796" fg:w="1287"/><text x="67.2418%" y="463.50"></text></g><g><title>sync_regs (111 samples, 0.03%)</title><rect x="67.3620%" y="437" width="0.0349%" height="15" fill="rgb(249,23,13)" fg:x="213972" fg:w="111"/><text x="67.6120%" y="447.50"></text></g><g><title>_int_malloc (240 samples, 0.08%)</title><rect x="67.4174%" y="341" width="0.0756%" height="15" fill="rgb(219,9,5)" fg:x="214148" fg:w="240"/><text x="67.6674%" y="351.50"></text></g><g><title>unlink_chunk (66 samples, 0.02%)</title><rect x="67.4722%" y="325" width="0.0208%" height="15" fill="rgb(254,171,16)" fg:x="214322" fg:w="66"/><text x="67.7222%" y="335.50"></text></g><g><title>__GI___libc_malloc (298 samples, 0.09%)</title><rect x="67.4013%" y="357" width="0.0938%" height="15" fill="rgb(230,171,20)" fg:x="214097" fg:w="298"/><text x="67.6513%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (313 samples, 0.10%)</title><rect x="67.4001%" y="405" width="0.0985%" height="15" fill="rgb(210,71,41)" fg:x="214093" fg:w="313"/><text x="67.6501%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (313 samples, 0.10%)</title><rect x="67.4001%" y="389" width="0.0985%" height="15" fill="rgb(206,173,20)" fg:x="214093" fg:w="313"/><text x="67.6501%" y="399.50"></text></g><g><title>alloc::alloc::alloc (313 samples, 0.10%)</title><rect x="67.4001%" y="373" width="0.0985%" height="15" fill="rgb(233,88,34)" fg:x="214093" fg:w="313"/><text x="67.6501%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (327 samples, 0.10%)</title><rect x="67.3969%" y="469" width="0.1029%" height="15" fill="rgb(223,209,46)" fg:x="214083" fg:w="327"/><text x="67.6469%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (327 samples, 0.10%)</title><rect x="67.3969%" y="453" width="0.1029%" height="15" fill="rgb(250,43,18)" fg:x="214083" fg:w="327"/><text x="67.6469%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (319 samples, 0.10%)</title><rect x="67.3995%" y="437" width="0.1004%" height="15" fill="rgb(208,13,10)" fg:x="214091" fg:w="319"/><text x="67.6495%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (319 samples, 0.10%)</title><rect x="67.3995%" y="421" width="0.1004%" height="15" fill="rgb(212,200,36)" fg:x="214091" fg:w="319"/><text x="67.6495%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (119 samples, 0.04%)</title><rect x="67.4999%" y="469" width="0.0375%" height="15" fill="rgb(225,90,30)" fg:x="214410" fg:w="119"/><text x="67.7499%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (117 samples, 0.04%)</title><rect x="67.5005%" y="453" width="0.0368%" height="15" fill="rgb(236,182,39)" fg:x="214412" fg:w="117"/><text x="67.7505%" y="463.50"></text></g><g><title>free_unref_page_list (47 samples, 0.01%)</title><rect x="67.5732%" y="149" width="0.0148%" height="15" fill="rgb(212,144,35)" fg:x="214643" fg:w="47"/><text x="67.8232%" y="159.50"></text></g><g><title>free_unref_page_commit (39 samples, 0.01%)</title><rect x="67.5758%" y="133" width="0.0123%" height="15" fill="rgb(228,63,44)" fg:x="214651" fg:w="39"/><text x="67.8258%" y="143.50"></text></g><g><title>free_pcppages_bulk (34 samples, 0.01%)</title><rect x="67.5773%" y="117" width="0.0107%" height="15" fill="rgb(228,109,6)" fg:x="214656" fg:w="34"/><text x="67.8273%" y="127.50"></text></g><g><title>tlb_flush_mmu (94 samples, 0.03%)</title><rect x="67.5597%" y="197" width="0.0296%" height="15" fill="rgb(238,117,24)" fg:x="214600" fg:w="94"/><text x="67.8097%" y="207.50"></text></g><g><title>free_pages_and_swap_cache (94 samples, 0.03%)</title><rect x="67.5597%" y="181" width="0.0296%" height="15" fill="rgb(242,26,26)" fg:x="214600" fg:w="94"/><text x="67.8097%" y="191.50"></text></g><g><title>release_pages (85 samples, 0.03%)</title><rect x="67.5625%" y="165" width="0.0268%" height="15" fill="rgb(221,92,48)" fg:x="214609" fg:w="85"/><text x="67.8125%" y="175.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,901 samples, 1.54%)</title><rect x="66.0476%" y="501" width="1.5429%" height="15" fill="rgb(209,209,32)" fg:x="209797" fg:w="4901"/><text x="66.2976%" y="511.50"></text></g><g><title>nom::multi::count::{{closure}} (4,898 samples, 1.54%)</title><rect x="66.0486%" y="485" width="1.5420%" height="15" fill="rgb(221,70,22)" fg:x="209800" fg:w="4898"/><text x="66.2986%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (169 samples, 0.05%)</title><rect x="67.5373%" y="469" width="0.0532%" height="15" fill="rgb(248,145,5)" fg:x="214529" fg:w="169"/><text x="67.7873%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (169 samples, 0.05%)</title><rect x="67.5373%" y="453" width="0.0532%" height="15" fill="rgb(226,116,26)" fg:x="214529" fg:w="169"/><text x="67.7873%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (169 samples, 0.05%)</title><rect x="67.5373%" y="437" width="0.0532%" height="15" fill="rgb(244,5,17)" fg:x="214529" fg:w="169"/><text x="67.7873%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (169 samples, 0.05%)</title><rect x="67.5373%" y="421" width="0.0532%" height="15" fill="rgb(252,159,33)" fg:x="214529" fg:w="169"/><text x="67.7873%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (169 samples, 0.05%)</title><rect x="67.5373%" y="405" width="0.0532%" height="15" fill="rgb(206,71,0)" fg:x="214529" fg:w="169"/><text x="67.7873%" y="415.50"></text></g><g><title>__GI___libc_free (169 samples, 0.05%)</title><rect x="67.5373%" y="389" width="0.0532%" height="15" fill="rgb(233,118,54)" fg:x="214529" fg:w="169"/><text x="67.7873%" y="399.50"></text></g><g><title>__GI_munmap (169 samples, 0.05%)</title><rect x="67.5373%" y="373" width="0.0532%" height="15" fill="rgb(234,83,48)" fg:x="214529" fg:w="169"/><text x="67.7873%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (169 samples, 0.05%)</title><rect x="67.5373%" y="357" width="0.0532%" height="15" fill="rgb(228,3,54)" fg:x="214529" fg:w="169"/><text x="67.7873%" y="367.50"></text></g><g><title>do_syscall_64 (168 samples, 0.05%)</title><rect x="67.5377%" y="341" width="0.0529%" height="15" fill="rgb(226,155,13)" fg:x="214530" fg:w="168"/><text x="67.7877%" y="351.50"></text></g><g><title>__x64_sys_munmap (168 samples, 0.05%)</title><rect x="67.5377%" y="325" width="0.0529%" height="15" fill="rgb(241,28,37)" fg:x="214530" fg:w="168"/><text x="67.7877%" y="335.50"></text></g><g><title>__vm_munmap (168 samples, 0.05%)</title><rect x="67.5377%" y="309" width="0.0529%" height="15" fill="rgb(233,93,10)" fg:x="214530" fg:w="168"/><text x="67.7877%" y="319.50"></text></g><g><title>__do_munmap (168 samples, 0.05%)</title><rect x="67.5377%" y="293" width="0.0529%" height="15" fill="rgb(225,113,19)" fg:x="214530" fg:w="168"/><text x="67.7877%" y="303.50"></text></g><g><title>unmap_region (168 samples, 0.05%)</title><rect x="67.5377%" y="277" width="0.0529%" height="15" fill="rgb(241,2,18)" fg:x="214530" fg:w="168"/><text x="67.7877%" y="287.50"></text></g><g><title>unmap_vmas (159 samples, 0.05%)</title><rect x="67.5405%" y="261" width="0.0501%" height="15" fill="rgb(228,207,21)" fg:x="214539" fg:w="159"/><text x="67.7905%" y="271.50"></text></g><g><title>unmap_single_vma (159 samples, 0.05%)</title><rect x="67.5405%" y="245" width="0.0501%" height="15" fill="rgb(213,211,35)" fg:x="214539" fg:w="159"/><text x="67.7905%" y="255.50"></text></g><g><title>unmap_page_range (159 samples, 0.05%)</title><rect x="67.5405%" y="229" width="0.0501%" height="15" fill="rgb(209,83,10)" fg:x="214539" fg:w="159"/><text x="67.7905%" y="239.50"></text></g><g><title>zap_pte_range (158 samples, 0.05%)</title><rect x="67.5408%" y="213" width="0.0497%" height="15" fill="rgb(209,164,1)" fg:x="214540" fg:w="158"/><text x="67.7908%" y="223.50"></text></g><g><title>nom::combinator::map::{{closure}} (4,917 samples, 1.55%)</title><rect x="66.0457%" y="517" width="1.5480%" height="15" fill="rgb(213,184,43)" fg:x="209791" fg:w="4917"/><text x="66.2957%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (72 samples, 0.02%)</title><rect x="67.5987%" y="485" width="0.0227%" height="15" fill="rgb(231,61,34)" fg:x="214724" fg:w="72"/><text x="67.8487%" y="495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (72 samples, 0.02%)</title><rect x="67.5987%" y="469" width="0.0227%" height="15" fill="rgb(235,75,3)" fg:x="214724" fg:w="72"/><text x="67.8487%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (51 samples, 0.02%)</title><rect x="67.6053%" y="453" width="0.0161%" height="15" fill="rgb(220,106,47)" fg:x="214745" fg:w="51"/><text x="67.8553%" y="463.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (51 samples, 0.02%)</title><rect x="67.6053%" y="437" width="0.0161%" height="15" fill="rgb(210,196,33)" fg:x="214745" fg:w="51"/><text x="67.8553%" y="447.50"></text></g><g><title>nom::number::streaming::be_u64 (47 samples, 0.01%)</title><rect x="67.6066%" y="421" width="0.0148%" height="15" fill="rgb(229,154,42)" fg:x="214749" fg:w="47"/><text x="67.8566%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5,135 samples, 1.62%)</title><rect x="66.0457%" y="533" width="1.6166%" height="15" fill="rgb(228,114,26)" fg:x="209791" fg:w="5135"/><text x="66.2957%" y="543.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (218 samples, 0.07%)</title><rect x="67.5937%" y="517" width="0.0686%" height="15" fill="rgb(208,144,1)" fg:x="214708" fg:w="218"/><text x="67.8437%" y="527.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (218 samples, 0.07%)</title><rect x="67.5937%" y="501" width="0.0686%" height="15" fill="rgb(239,112,37)" fg:x="214708" fg:w="218"/><text x="67.8437%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (130 samples, 0.04%)</title><rect x="67.6214%" y="485" width="0.0409%" height="15" fill="rgb(210,96,50)" fg:x="214796" fg:w="130"/><text x="67.8714%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (5,159 samples, 1.62%)</title><rect x="66.0445%" y="565" width="1.6241%" height="15" fill="rgb(222,178,2)" fg:x="209787" fg:w="5159"/><text x="66.2945%" y="575.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (5,159 samples, 1.62%)</title><rect x="66.0445%" y="549" width="1.6241%" height="15" fill="rgb(226,74,18)" fg:x="209787" fg:w="5159"/><text x="66.2945%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (46 samples, 0.01%)</title><rect x="67.7521%" y="389" width="0.0145%" height="15" fill="rgb(225,67,54)" fg:x="215211" fg:w="46"/><text x="68.0021%" y="399.50"></text></g><g><title>nom::number::streaming::be_i32::{{closure}} (45 samples, 0.01%)</title><rect x="67.7524%" y="373" width="0.0142%" height="15" fill="rgb(251,92,32)" fg:x="215212" fg:w="45"/><text x="68.0024%" y="383.50"></text></g><g><title>nom::number::streaming::be_u32 (45 samples, 0.01%)</title><rect x="67.7524%" y="357" width="0.0142%" height="15" fill="rgb(228,149,22)" fg:x="215212" fg:w="45"/><text x="68.0024%" y="367.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i32 (100 samples, 0.03%)</title><rect x="67.7467%" y="469" width="0.0315%" height="15" fill="rgb(243,54,13)" fg:x="215194" fg:w="100"/><text x="67.9967%" y="479.50"></text></g><g><title>nom::number::streaming::be_i32 (100 samples, 0.03%)</title><rect x="67.7467%" y="453" width="0.0315%" height="15" fill="rgb(243,180,28)" fg:x="215194" fg:w="100"/><text x="67.9967%" y="463.50"></text></g><g><title>nom::combinator::mapc (100 samples, 0.03%)</title><rect x="67.7467%" y="437" width="0.0315%" height="15" fill="rgb(208,167,24)" fg:x="215194" fg:w="100"/><text x="67.9967%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (100 samples, 0.03%)</title><rect x="67.7467%" y="421" width="0.0315%" height="15" fill="rgb(245,73,45)" fg:x="215194" fg:w="100"/><text x="67.9967%" y="431.50"></text></g><g><title>nom::combinator::map::{{closure}} (100 samples, 0.03%)</title><rect x="67.7467%" y="405" width="0.0315%" height="15" fill="rgb(237,203,48)" fg:x="215194" fg:w="100"/><text x="67.9967%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (37 samples, 0.01%)</title><rect x="67.7665%" y="389" width="0.0116%" height="15" fill="rgb(211,197,16)" fg:x="215257" fg:w="37"/><text x="68.0165%" y="399.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i8 (236 samples, 0.07%)</title><rect x="67.7832%" y="469" width="0.0743%" height="15" fill="rgb(243,99,51)" fg:x="215310" fg:w="236"/><text x="68.0332%" y="479.50"></text></g><g><title>nom::number::streaming::be_i8 (236 samples, 0.07%)</title><rect x="67.7832%" y="453" width="0.0743%" height="15" fill="rgb(215,123,29)" fg:x="215310" fg:w="236"/><text x="68.0332%" y="463.50"></text></g><g><title>nom::combinator::mapc (236 samples, 0.07%)</title><rect x="67.7832%" y="437" width="0.0743%" height="15" fill="rgb(239,186,37)" fg:x="215310" fg:w="236"/><text x="68.0332%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (236 samples, 0.07%)</title><rect x="67.7832%" y="421" width="0.0743%" height="15" fill="rgb(252,136,39)" fg:x="215310" fg:w="236"/><text x="68.0332%" y="431.50"></text></g><g><title>nom::combinator::map::{{closure}} (236 samples, 0.07%)</title><rect x="67.7832%" y="405" width="0.0743%" height="15" fill="rgb(223,213,32)" fg:x="215310" fg:w="236"/><text x="68.0332%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (236 samples, 0.07%)</title><rect x="67.7832%" y="389" width="0.0743%" height="15" fill="rgb(233,115,5)" fg:x="215310" fg:w="236"/><text x="68.0332%" y="399.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (236 samples, 0.07%)</title><rect x="67.7832%" y="373" width="0.0743%" height="15" fill="rgb(207,226,44)" fg:x="215310" fg:w="236"/><text x="68.0332%" y="383.50"></text></g><g><title>nom::number::streaming::be_u8 (236 samples, 0.07%)</title><rect x="67.7832%" y="357" width="0.0743%" height="15" fill="rgb(208,126,0)" fg:x="215310" fg:w="236"/><text x="68.0332%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.02%)</title><rect x="67.8418%" y="341" width="0.0157%" height="15" fill="rgb(244,66,21)" fg:x="215496" fg:w="50"/><text x="68.0918%" y="351.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (50 samples, 0.02%)</title><rect x="67.8418%" y="325" width="0.0157%" height="15" fill="rgb(222,97,12)" fg:x="215496" fg:w="50"/><text x="68.0918%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (50 samples, 0.02%)</title><rect x="67.8418%" y="309" width="0.0157%" height="15" fill="rgb(219,213,19)" fg:x="215496" fg:w="50"/><text x="68.0918%" y="319.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (355 samples, 0.11%)</title><rect x="67.7464%" y="501" width="0.1118%" height="15" fill="rgb(252,169,30)" fg:x="215193" fg:w="355"/><text x="67.9964%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (355 samples, 0.11%)</title><rect x="67.7464%" y="485" width="0.1118%" height="15" fill="rgb(206,32,51)" fg:x="215193" fg:w="355"/><text x="67.9964%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (191 samples, 0.06%)</title><rect x="68.0171%" y="485" width="0.0601%" height="15" fill="rgb(250,172,42)" fg:x="216053" fg:w="191"/><text x="68.2671%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,249 samples, 0.39%)</title><rect x="67.8581%" y="501" width="0.3932%" height="15" fill="rgb(209,34,43)" fg:x="215548" fg:w="1249"/><text x="68.1081%" y="511.50"></text></g><g><title>core::ptr::write (553 samples, 0.17%)</title><rect x="68.0773%" y="485" width="0.1741%" height="15" fill="rgb(223,11,35)" fg:x="216244" fg:w="553"/><text x="68.3273%" y="495.50"></text></g><g><title>_int_malloc (518 samples, 0.16%)</title><rect x="68.3017%" y="373" width="0.1631%" height="15" fill="rgb(251,219,26)" fg:x="216957" fg:w="518"/><text x="68.5517%" y="383.50"></text></g><g><title>__GI___libc_malloc (667 samples, 0.21%)</title><rect x="68.2630%" y="389" width="0.2100%" height="15" fill="rgb(231,119,3)" fg:x="216834" fg:w="667"/><text x="68.5130%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (715 samples, 0.23%)</title><rect x="68.2583%" y="437" width="0.2251%" height="15" fill="rgb(216,97,11)" fg:x="216819" fg:w="715"/><text x="68.5083%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (715 samples, 0.23%)</title><rect x="68.2583%" y="421" width="0.2251%" height="15" fill="rgb(223,59,9)" fg:x="216819" fg:w="715"/><text x="68.5083%" y="431.50"></text></g><g><title>alloc::alloc::alloc (713 samples, 0.22%)</title><rect x="68.2589%" y="405" width="0.2245%" height="15" fill="rgb(233,93,31)" fg:x="216821" fg:w="713"/><text x="68.5089%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (740 samples, 0.23%)</title><rect x="68.2513%" y="501" width="0.2330%" height="15" fill="rgb(239,81,33)" fg:x="216797" fg:w="740"/><text x="68.5013%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (740 samples, 0.23%)</title><rect x="68.2513%" y="485" width="0.2330%" height="15" fill="rgb(213,120,34)" fg:x="216797" fg:w="740"/><text x="68.5013%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (720 samples, 0.23%)</title><rect x="68.2576%" y="469" width="0.2267%" height="15" fill="rgb(243,49,53)" fg:x="216817" fg:w="720"/><text x="68.5076%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (720 samples, 0.23%)</title><rect x="68.2576%" y="453" width="0.2267%" height="15" fill="rgb(247,216,33)" fg:x="216817" fg:w="720"/><text x="68.5076%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,645 samples, 0.83%)</title><rect x="67.7118%" y="533" width="0.8327%" height="15" fill="rgb(226,26,14)" fg:x="215083" fg:w="2645"/><text x="67.9618%" y="543.50"></text></g><g><title>nom::multi::count::{{closure}} (2,625 samples, 0.83%)</title><rect x="67.7181%" y="517" width="0.8264%" height="15" fill="rgb(215,49,53)" fg:x="215103" fg:w="2625"/><text x="67.9681%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (191 samples, 0.06%)</title><rect x="68.4843%" y="501" width="0.0601%" height="15" fill="rgb(245,162,40)" fg:x="217537" fg:w="191"/><text x="68.7343%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (169 samples, 0.05%)</title><rect x="68.4912%" y="485" width="0.0532%" height="15" fill="rgb(229,68,17)" fg:x="217559" fg:w="169"/><text x="68.7412%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (2,687 samples, 0.85%)</title><rect x="67.7086%" y="549" width="0.8459%" height="15" fill="rgb(213,182,10)" fg:x="215073" fg:w="2687"/><text x="67.9586%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (32 samples, 0.01%)</title><rect x="68.5444%" y="533" width="0.0101%" height="15" fill="rgb(245,125,30)" fg:x="217728" fg:w="32"/><text x="68.7944%" y="543.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u32 (98 samples, 0.03%)</title><rect x="68.5630%" y="485" width="0.0309%" height="15" fill="rgb(232,202,2)" fg:x="217787" fg:w="98"/><text x="68.8130%" y="495.50"></text></g><g><title>nom::number::streaming::be_u32 (98 samples, 0.03%)</title><rect x="68.5630%" y="469" width="0.0309%" height="15" fill="rgb(237,140,51)" fg:x="217787" fg:w="98"/><text x="68.8130%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::parse_field_type (38 samples, 0.01%)</title><rect x="68.5939%" y="485" width="0.0120%" height="15" fill="rgb(236,157,25)" fg:x="217885" fg:w="38"/><text x="68.8439%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (38 samples, 0.01%)</title><rect x="68.5939%" y="469" width="0.0120%" height="15" fill="rgb(219,209,0)" fg:x="217885" fg:w="38"/><text x="68.8439%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (247 samples, 0.08%)</title><rect x="68.5630%" y="517" width="0.0778%" height="15" fill="rgb(240,116,54)" fg:x="217787" fg:w="247"/><text x="68.8130%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (247 samples, 0.08%)</title><rect x="68.5630%" y="501" width="0.0778%" height="15" fill="rgb(216,10,36)" fg:x="217787" fg:w="247"/><text x="68.8130%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (111 samples, 0.03%)</title><rect x="68.6058%" y="485" width="0.0349%" height="15" fill="rgb(222,72,44)" fg:x="217923" fg:w="111"/><text x="68.8558%" y="495.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (111 samples, 0.03%)</title><rect x="68.6058%" y="469" width="0.0349%" height="15" fill="rgb(232,159,9)" fg:x="217923" fg:w="111"/><text x="68.8558%" y="479.50"></text></g><g><title>nom::number::streaming::be_u64 (107 samples, 0.03%)</title><rect x="68.6071%" y="453" width="0.0337%" height="15" fill="rgb(210,39,32)" fg:x="217927" fg:w="107"/><text x="68.8571%" y="463.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (46,321 samples, 14.58%)</title><rect x="54.0711%" y="581" width="14.5826%" height="15" fill="rgb(216,194,45)" fg:x="171754" fg:w="46321"/><text x="54.3211%" y="591.50">hprof_slurp::record_pa..</text></g><g><title>hprof_slurp::record_parser::parse_gc_primitive_array_dump (3,129 samples, 0.99%)</title><rect x="67.6686%" y="565" width="0.9851%" height="15" fill="rgb(218,18,35)" fg:x="214946" fg:w="3129"/><text x="67.9186%" y="575.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (315 samples, 0.10%)</title><rect x="68.5545%" y="549" width="0.0992%" height="15" fill="rgb(207,83,51)" fg:x="217760" fg:w="315"/><text x="68.8045%" y="559.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (315 samples, 0.10%)</title><rect x="68.5545%" y="533" width="0.0992%" height="15" fill="rgb(225,63,43)" fg:x="217760" fg:w="315"/><text x="68.8045%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (41 samples, 0.01%)</title><rect x="68.6408%" y="517" width="0.0129%" height="15" fill="rgb(207,57,36)" fg:x="218034" fg:w="41"/><text x="68.8908%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (63,277 samples, 19.92%)</title><rect x="48.7371%" y="613" width="19.9207%" height="15" fill="rgb(216,99,33)" fg:x="154811" fg:w="63277"/><text x="48.9871%" y="623.50">&lt;F as nom::internal::Parser&lt;I,O..</text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (62,771 samples, 19.76%)</title><rect x="48.8964%" y="597" width="19.7614%" height="15" fill="rgb(225,42,16)" fg:x="155317" fg:w="62771"/><text x="49.1464%" y="607.50">hprof_slurp::record_parser::Hpr..</text></g><g><title>__memmove_avx_unaligned_erms (15,633 samples, 4.92%)</title><rect x="68.6578%" y="613" width="4.9215%" height="15" fill="rgb(220,201,45)" fg:x="218088" fg:w="15633"/><text x="68.9078%" y="623.50">__memm..</text></g><g><title>down_read_trylock (81 samples, 0.03%)</title><rect x="76.6390%" y="373" width="0.0255%" height="15" fill="rgb(225,33,4)" fg:x="243440" fg:w="81"/><text x="76.8890%" y="383.50"></text></g><g><title>find_vma (35 samples, 0.01%)</title><rect x="76.6645%" y="373" width="0.0110%" height="15" fill="rgb(224,33,50)" fg:x="243521" fg:w="35"/><text x="76.9145%" y="383.50"></text></g><g><title>_raw_spin_lock (65 samples, 0.02%)</title><rect x="76.8339%" y="325" width="0.0205%" height="15" fill="rgb(246,198,51)" fg:x="244059" fg:w="65"/><text x="77.0839%" y="335.50"></text></g><g><title>clear_page_erms (1,390 samples, 0.44%)</title><rect x="77.0310%" y="261" width="0.4376%" height="15" fill="rgb(205,22,4)" fg:x="244685" fg:w="1390"/><text x="77.2810%" y="271.50"></text></g><g><title>rmqueue (537 samples, 0.17%)</title><rect x="77.4758%" y="261" width="0.1691%" height="15" fill="rgb(206,3,8)" fg:x="246098" fg:w="537"/><text x="77.7258%" y="271.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (452 samples, 0.14%)</title><rect x="77.5026%" y="245" width="0.1423%" height="15" fill="rgb(251,23,15)" fg:x="246183" fg:w="452"/><text x="77.7526%" y="255.50"></text></g><g><title>rmqueue_bulk.constprop.0 (269 samples, 0.08%)</title><rect x="77.5602%" y="229" width="0.0847%" height="15" fill="rgb(252,88,28)" fg:x="246366" fg:w="269"/><text x="77.8102%" y="239.50"></text></g><g><title>get_page_from_freelist (2,111 samples, 0.66%)</title><rect x="76.9815%" y="277" width="0.6646%" height="15" fill="rgb(212,127,14)" fg:x="244528" fg:w="2111"/><text x="77.2315%" y="287.50"></text></g><g><title>__alloc_pages_nodemask (2,296 samples, 0.72%)</title><rect x="76.9280%" y="293" width="0.7228%" height="15" fill="rgb(247,145,37)" fg:x="244358" fg:w="2296"/><text x="77.1780%" y="303.50"></text></g><g><title>alloc_pages_vma (2,412 samples, 0.76%)</title><rect x="76.9019%" y="309" width="0.7593%" height="15" fill="rgb(209,117,53)" fg:x="244275" fg:w="2412"/><text x="77.1519%" y="319.50"></text></g><g><title>cgroup_throttle_swaprate (377 samples, 0.12%)</title><rect x="77.6612%" y="309" width="0.1187%" height="15" fill="rgb(212,90,42)" fg:x="246687" fg:w="377"/><text x="77.9112%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (56 samples, 0.02%)</title><rect x="77.9118%" y="229" width="0.0176%" height="15" fill="rgb(218,164,37)" fg:x="247483" fg:w="56"/><text x="78.1618%" y="239.50"></text></g><g><title>__mod_lruvec_state (81 samples, 0.03%)</title><rect x="77.9077%" y="245" width="0.0255%" height="15" fill="rgb(246,65,34)" fg:x="247470" fg:w="81"/><text x="78.1577%" y="255.50"></text></g><g><title>__pagevec_lru_add_fn (448 samples, 0.14%)</title><rect x="77.8259%" y="261" width="0.1410%" height="15" fill="rgb(231,100,33)" fg:x="247210" fg:w="448"/><text x="78.0759%" y="271.50"></text></g><g><title>page_mapping (60 samples, 0.02%)</title><rect x="77.9480%" y="245" width="0.0189%" height="15" fill="rgb(228,126,14)" fg:x="247598" fg:w="60"/><text x="78.1980%" y="255.50"></text></g><g><title>__pagevec_lru_add (595 samples, 0.19%)</title><rect x="77.8171%" y="277" width="0.1873%" height="15" fill="rgb(215,173,21)" fg:x="247182" fg:w="595"/><text x="78.0671%" y="287.50"></text></g><g><title>release_pages (93 samples, 0.03%)</title><rect x="77.9751%" y="261" width="0.0293%" height="15" fill="rgb(210,6,40)" fg:x="247684" fg:w="93"/><text x="78.2251%" y="271.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (689 samples, 0.22%)</title><rect x="77.7890%" y="309" width="0.2169%" height="15" fill="rgb(212,48,18)" fg:x="247093" fg:w="689"/><text x="78.0390%" y="319.50"></text></g><g><title>lru_cache_add (677 samples, 0.21%)</title><rect x="77.7928%" y="293" width="0.2131%" height="15" fill="rgb(230,214,11)" fg:x="247105" fg:w="677"/><text x="78.0428%" y="303.50"></text></g><g><title>get_mem_cgroup_from_mm (145 samples, 0.05%)</title><rect x="78.0623%" y="293" width="0.0456%" height="15" fill="rgb(254,105,39)" fg:x="247961" fg:w="145"/><text x="78.3123%" y="303.50"></text></g><g><title>page_counter_try_charge (36 samples, 0.01%)</title><rect x="78.1892%" y="277" width="0.0113%" height="15" fill="rgb(245,158,5)" fg:x="248364" fg:w="36"/><text x="78.4392%" y="287.50"></text></g><g><title>mem_cgroup_charge (622 samples, 0.20%)</title><rect x="78.0060%" y="309" width="0.1958%" height="15" fill="rgb(249,208,11)" fg:x="247782" fg:w="622"/><text x="78.2560%" y="319.50"></text></g><g><title>try_charge (248 samples, 0.08%)</title><rect x="78.1237%" y="293" width="0.0781%" height="15" fill="rgb(210,39,28)" fg:x="248156" fg:w="248"/><text x="78.3737%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (71 samples, 0.02%)</title><rect x="78.2247%" y="261" width="0.0224%" height="15" fill="rgb(211,56,53)" fg:x="248477" fg:w="71"/><text x="78.4747%" y="271.50"></text></g><g><title>__mod_lruvec_state (110 samples, 0.03%)</title><rect x="78.2191%" y="277" width="0.0346%" height="15" fill="rgb(226,201,30)" fg:x="248459" fg:w="110"/><text x="78.4691%" y="287.50"></text></g><g><title>__mod_lruvec_page_state (150 samples, 0.05%)</title><rect x="78.2150%" y="293" width="0.0472%" height="15" fill="rgb(239,101,34)" fg:x="248446" fg:w="150"/><text x="78.4650%" y="303.50"></text></g><g><title>page_add_new_anon_rmap (196 samples, 0.06%)</title><rect x="78.2077%" y="309" width="0.0617%" height="15" fill="rgb(226,209,5)" fg:x="248423" fg:w="196"/><text x="78.4577%" y="319.50"></text></g><g><title>do_anonymous_page (4,530 samples, 1.43%)</title><rect x="76.8597%" y="325" width="1.4261%" height="15" fill="rgb(250,105,47)" fg:x="244141" fg:w="4530"/><text x="77.1097%" y="335.50"></text></g><g><title>handle_pte_fault (4,746 samples, 1.49%)</title><rect x="76.8059%" y="341" width="1.4941%" height="15" fill="rgb(230,72,3)" fg:x="243970" fg:w="4746"/><text x="77.0559%" y="351.50"></text></g><g><title>__handle_mm_fault (4,977 samples, 1.57%)</title><rect x="76.7347%" y="357" width="1.5668%" height="15" fill="rgb(232,218,39)" fg:x="243744" fg:w="4977"/><text x="76.9847%" y="367.50"></text></g><g><title>handle_mm_fault (5,201 samples, 1.64%)</title><rect x="76.6755%" y="373" width="1.6374%" height="15" fill="rgb(248,166,6)" fg:x="243556" fg:w="5201"/><text x="76.9255%" y="383.50"></text></g><g><title>rcu_read_unlock_strict (34 samples, 0.01%)</title><rect x="78.3151%" y="373" width="0.0107%" height="15" fill="rgb(247,89,20)" fg:x="248764" fg:w="34"/><text x="78.5651%" y="383.50"></text></g><g><title>up_read (104 samples, 0.03%)</title><rect x="78.3258%" y="373" width="0.0327%" height="15" fill="rgb(248,130,54)" fg:x="248798" fg:w="104"/><text x="78.5758%" y="383.50"></text></g><g><title>do_user_addr_fault (5,581 samples, 1.76%)</title><rect x="76.6034%" y="389" width="1.7570%" height="15" fill="rgb(234,196,4)" fg:x="243327" fg:w="5581"/><text x="76.8534%" y="399.50"></text></g><g><title>irqentry_exit (45 samples, 0.01%)</title><rect x="78.3708%" y="389" width="0.0142%" height="15" fill="rgb(250,143,31)" fg:x="248941" fg:w="45"/><text x="78.6208%" y="399.50"></text></g><g><title>exc_page_fault (5,728 samples, 1.80%)</title><rect x="76.5833%" y="405" width="1.8033%" height="15" fill="rgb(211,110,34)" fg:x="243263" fg:w="5728"/><text x="76.8333%" y="415.50">e..</text></g><g><title>asm_exc_page_fault (5,850 samples, 1.84%)</title><rect x="76.5499%" y="421" width="1.8417%" height="15" fill="rgb(215,124,48)" fg:x="243157" fg:w="5850"/><text x="76.7999%" y="431.50">a..</text></g><g><title>error_entry (169 samples, 0.05%)</title><rect x="78.3944%" y="421" width="0.0532%" height="15" fill="rgb(216,46,13)" fg:x="249016" fg:w="169"/><text x="78.6444%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (15,263 samples, 4.81%)</title><rect x="73.8828%" y="437" width="4.8050%" height="15" fill="rgb(205,184,25)" fg:x="234685" fg:w="15263"/><text x="74.1328%" y="447.50">__memm..</text></g><g><title>sync_regs (755 samples, 0.24%)</title><rect x="78.4502%" y="421" width="0.2377%" height="15" fill="rgb(228,1,10)" fg:x="249193" fg:w="755"/><text x="78.7002%" y="431.50"></text></g><g><title>_int_realloc (15,323 samples, 4.82%)</title><rect x="73.8822%" y="453" width="4.8239%" height="15" fill="rgb(213,116,27)" fg:x="234683" fg:w="15323"/><text x="74.1322%" y="463.50">_int_r..</text></g><g><title>_int_malloc (54 samples, 0.02%)</title><rect x="78.6891%" y="437" width="0.0170%" height="15" fill="rgb(241,95,50)" fg:x="249952" fg:w="54"/><text x="78.9391%" y="447.50"></text></g><g><title>do_munmap (129 samples, 0.04%)</title><rect x="78.7162%" y="341" width="0.0406%" height="15" fill="rgb(238,48,32)" fg:x="250038" fg:w="129"/><text x="78.9662%" y="351.50"></text></g><g><title>__do_munmap (129 samples, 0.04%)</title><rect x="78.7162%" y="325" width="0.0406%" height="15" fill="rgb(235,113,49)" fg:x="250038" fg:w="129"/><text x="78.9662%" y="335.50"></text></g><g><title>unmap_region (122 samples, 0.04%)</title><rect x="78.7184%" y="309" width="0.0384%" height="15" fill="rgb(205,127,43)" fg:x="250045" fg:w="122"/><text x="78.9684%" y="319.50"></text></g><g><title>unmap_vmas (77 samples, 0.02%)</title><rect x="78.7325%" y="293" width="0.0242%" height="15" fill="rgb(250,162,2)" fg:x="250090" fg:w="77"/><text x="78.9825%" y="303.50"></text></g><g><title>unmap_single_vma (77 samples, 0.02%)</title><rect x="78.7325%" y="277" width="0.0242%" height="15" fill="rgb(220,13,41)" fg:x="250090" fg:w="77"/><text x="78.9825%" y="287.50"></text></g><g><title>unmap_page_range (77 samples, 0.02%)</title><rect x="78.7325%" y="261" width="0.0242%" height="15" fill="rgb(249,221,25)" fg:x="250090" fg:w="77"/><text x="78.9825%" y="271.50"></text></g><g><title>zap_pte_range (70 samples, 0.02%)</title><rect x="78.7348%" y="245" width="0.0220%" height="15" fill="rgb(215,208,19)" fg:x="250097" fg:w="70"/><text x="78.9848%" y="255.50"></text></g><g><title>clear_page_erms (33 samples, 0.01%)</title><rect x="78.7688%" y="245" width="0.0104%" height="15" fill="rgb(236,175,2)" fg:x="250205" fg:w="33"/><text x="79.0188%" y="255.50"></text></g><g><title>__pte_alloc (81 samples, 0.03%)</title><rect x="78.7587%" y="325" width="0.0255%" height="15" fill="rgb(241,52,2)" fg:x="250173" fg:w="81"/><text x="79.0087%" y="335.50"></text></g><g><title>pte_alloc_one (79 samples, 0.02%)</title><rect x="78.7593%" y="309" width="0.0249%" height="15" fill="rgb(248,140,14)" fg:x="250175" fg:w="79"/><text x="79.0093%" y="319.50"></text></g><g><title>alloc_pages_current (75 samples, 0.02%)</title><rect x="78.7606%" y="293" width="0.0236%" height="15" fill="rgb(253,22,42)" fg:x="250179" fg:w="75"/><text x="79.0106%" y="303.50"></text></g><g><title>__alloc_pages_nodemask (74 samples, 0.02%)</title><rect x="78.7609%" y="277" width="0.0233%" height="15" fill="rgb(234,61,47)" fg:x="250180" fg:w="74"/><text x="79.0109%" y="287.50"></text></g><g><title>get_page_from_freelist (49 samples, 0.02%)</title><rect x="78.7688%" y="261" width="0.0154%" height="15" fill="rgb(208,226,15)" fg:x="250205" fg:w="49"/><text x="79.0188%" y="271.50"></text></g><g><title>move_ptes.constprop.0 (428 samples, 0.13%)</title><rect x="78.7898%" y="325" width="0.1347%" height="15" fill="rgb(217,221,4)" fg:x="250272" fg:w="428"/><text x="79.0398%" y="335.50"></text></g><g><title>move_page_tables (558 samples, 0.18%)</title><rect x="78.7568%" y="341" width="0.1757%" height="15" fill="rgb(212,174,34)" fg:x="250167" fg:w="558"/><text x="79.0068%" y="351.50"></text></g><g><title>move_vma (707 samples, 0.22%)</title><rect x="78.7105%" y="357" width="0.2226%" height="15" fill="rgb(253,83,4)" fg:x="250020" fg:w="707"/><text x="78.9605%" y="367.50"></text></g><g><title>__do_sys_mremap (723 samples, 0.23%)</title><rect x="78.7067%" y="373" width="0.2276%" height="15" fill="rgb(250,195,49)" fg:x="250008" fg:w="723"/><text x="78.9567%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16,054 samples, 5.05%)</title><rect x="73.8806%" y="597" width="5.0541%" height="15" fill="rgb(241,192,25)" fg:x="234678" fg:w="16054"/><text x="74.1306%" y="607.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16,054 samples, 5.05%)</title><rect x="73.8806%" y="581" width="5.0541%" height="15" fill="rgb(208,124,10)" fg:x="234678" fg:w="16054"/><text x="74.1306%" y="591.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16,053 samples, 5.05%)</title><rect x="73.8809%" y="565" width="5.0538%" height="15" fill="rgb(222,33,0)" fg:x="234679" fg:w="16053"/><text x="74.1309%" y="575.50">alloc:..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16,053 samples, 5.05%)</title><rect x="73.8809%" y="549" width="5.0538%" height="15" fill="rgb(234,209,28)" fg:x="234679" fg:w="16053"/><text x="74.1309%" y="559.50">alloc:..</text></g><g><title>alloc::raw_vec::finish_grow (16,052 samples, 5.05%)</title><rect x="73.8812%" y="533" width="5.0534%" height="15" fill="rgb(224,11,23)" fg:x="234680" fg:w="16052"/><text x="74.1312%" y="543.50">alloc:..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16,052 samples, 5.05%)</title><rect x="73.8812%" y="517" width="5.0534%" height="15" fill="rgb(232,99,1)" fg:x="234680" fg:w="16052"/><text x="74.1312%" y="527.50">&lt;alloc..</text></g><g><title>alloc::alloc::Global::grow_impl (16,052 samples, 5.05%)</title><rect x="73.8812%" y="501" width="5.0534%" height="15" fill="rgb(237,95,45)" fg:x="234680" fg:w="16052"/><text x="74.1312%" y="511.50">alloc:..</text></g><g><title>alloc::alloc::realloc (16,052 samples, 5.05%)</title><rect x="73.8812%" y="485" width="5.0534%" height="15" fill="rgb(208,109,11)" fg:x="234680" fg:w="16052"/><text x="74.1312%" y="495.50">alloc:..</text></g><g><title>__GI___libc_realloc (16,052 samples, 5.05%)</title><rect x="73.8812%" y="469" width="5.0534%" height="15" fill="rgb(216,190,48)" fg:x="234680" fg:w="16052"/><text x="74.1312%" y="479.50">__GI__..</text></g><g><title>mremap_chunk (726 samples, 0.23%)</title><rect x="78.7061%" y="453" width="0.2286%" height="15" fill="rgb(251,171,36)" fg:x="250006" fg:w="726"/><text x="78.9561%" y="463.50"></text></g><g><title>__GI___mremap (725 samples, 0.23%)</title><rect x="78.7064%" y="437" width="0.2282%" height="15" fill="rgb(230,62,22)" fg:x="250007" fg:w="725"/><text x="78.9564%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (724 samples, 0.23%)</title><rect x="78.7067%" y="421" width="0.2279%" height="15" fill="rgb(225,114,35)" fg:x="250008" fg:w="724"/><text x="78.9567%" y="431.50"></text></g><g><title>do_syscall_64 (724 samples, 0.23%)</title><rect x="78.7067%" y="405" width="0.2279%" height="15" fill="rgb(215,118,42)" fg:x="250008" fg:w="724"/><text x="78.9567%" y="415.50"></text></g><g><title>__x64_sys_mremap (724 samples, 0.23%)</title><rect x="78.7067%" y="389" width="0.2279%" height="15" fill="rgb(243,119,21)" fg:x="250008" fg:w="724"/><text x="78.9567%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (479 samples, 0.15%)</title><rect x="78.9347%" y="597" width="0.1508%" height="15" fill="rgb(252,177,53)" fg:x="250732" fg:w="479"/><text x="79.1847%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (479 samples, 0.15%)</title><rect x="78.9347%" y="581" width="0.1508%" height="15" fill="rgb(237,209,29)" fg:x="250732" fg:w="479"/><text x="79.1847%" y="591.50"></text></g><g><title>__irqentry_text_end (89 samples, 0.03%)</title><rect x="85.4803%" y="565" width="0.0280%" height="15" fill="rgb(212,65,23)" fg:x="271524" fg:w="89"/><text x="85.7303%" y="575.50"></text></g><g><title>down_read_trylock (331 samples, 0.10%)</title><rect x="85.9072%" y="517" width="0.1042%" height="15" fill="rgb(230,222,46)" fg:x="272880" fg:w="331"/><text x="86.1572%" y="527.50"></text></g><g><title>find_vma (156 samples, 0.05%)</title><rect x="86.0114%" y="517" width="0.0491%" height="15" fill="rgb(215,135,32)" fg:x="273211" fg:w="156"/><text x="86.2614%" y="527.50"></text></g><g><title>vmacache_find (119 samples, 0.04%)</title><rect x="86.0231%" y="501" width="0.0375%" height="15" fill="rgb(246,101,22)" fg:x="273248" fg:w="119"/><text x="86.2731%" y="511.50"></text></g><g><title>__count_memcg_events.part.0 (51 samples, 0.02%)</title><rect x="86.2998%" y="501" width="0.0161%" height="15" fill="rgb(206,107,13)" fg:x="274127" fg:w="51"/><text x="86.5498%" y="511.50"></text></g><g><title>__count_memcg_events (94 samples, 0.03%)</title><rect x="86.3159%" y="501" width="0.0296%" height="15" fill="rgb(250,100,44)" fg:x="274178" fg:w="94"/><text x="86.5659%" y="511.50"></text></g><g><title>__count_memcg_events.part.0 (94 samples, 0.03%)</title><rect x="86.3159%" y="485" width="0.0296%" height="15" fill="rgb(231,147,38)" fg:x="274178" fg:w="94"/><text x="86.5659%" y="495.50"></text></g><g><title>_raw_spin_lock (285 samples, 0.09%)</title><rect x="86.8041%" y="469" width="0.0897%" height="15" fill="rgb(229,8,40)" fg:x="275729" fg:w="285"/><text x="87.0541%" y="479.50"></text></g><g><title>__get_vma_policy (32 samples, 0.01%)</title><rect x="87.0617%" y="453" width="0.0101%" height="15" fill="rgb(221,135,30)" fg:x="276547" fg:w="32"/><text x="87.3117%" y="463.50"></text></g><g><title>__mod_lruvec_page_state (51 samples, 0.02%)</title><rect x="87.0717%" y="453" width="0.0161%" height="15" fill="rgb(249,193,18)" fg:x="276579" fg:w="51"/><text x="87.3217%" y="463.50"></text></g><g><title>__alloc_pages_nodemask (46 samples, 0.01%)</title><rect x="87.0969%" y="405" width="0.0145%" height="15" fill="rgb(209,133,39)" fg:x="276659" fg:w="46"/><text x="87.3469%" y="415.50"></text></g><g><title>__pte_alloc (54 samples, 0.02%)</title><rect x="87.0947%" y="453" width="0.0170%" height="15" fill="rgb(232,100,14)" fg:x="276652" fg:w="54"/><text x="87.3447%" y="463.50"></text></g><g><title>pte_alloc_one (54 samples, 0.02%)</title><rect x="87.0947%" y="437" width="0.0170%" height="15" fill="rgb(224,185,1)" fg:x="276652" fg:w="54"/><text x="87.3447%" y="447.50"></text></g><g><title>alloc_pages_current (47 samples, 0.01%)</title><rect x="87.0969%" y="421" width="0.0148%" height="15" fill="rgb(223,139,8)" fg:x="276659" fg:w="47"/><text x="87.3469%" y="431.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (34 samples, 0.01%)</title><rect x="87.4338%" y="421" width="0.0107%" height="15" fill="rgb(232,213,38)" fg:x="277729" fg:w="34"/><text x="87.6838%" y="431.50"></text></g><g><title>clear_page_erms (5,567 samples, 1.75%)</title><rect x="87.6504%" y="405" width="1.7526%" height="15" fill="rgb(207,94,22)" fg:x="278417" fg:w="5567"/><text x="87.9004%" y="415.50"></text></g><g><title>kernel_init_free_pages (129 samples, 0.04%)</title><rect x="89.4029%" y="405" width="0.0406%" height="15" fill="rgb(219,183,54)" fg:x="283984" fg:w="129"/><text x="89.6529%" y="415.50"></text></g><g><title>__inc_numa_state (101 samples, 0.03%)</title><rect x="89.5320%" y="389" width="0.0318%" height="15" fill="rgb(216,185,54)" fg:x="284394" fg:w="101"/><text x="89.7820%" y="399.50"></text></g><g><title>rmqueue (2,163 samples, 0.68%)</title><rect x="89.4436%" y="405" width="0.6809%" height="15" fill="rgb(254,217,39)" fg:x="284113" fg:w="2163"/><text x="89.6936%" y="415.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (1,779 samples, 0.56%)</title><rect x="89.5645%" y="389" width="0.5601%" height="15" fill="rgb(240,178,23)" fg:x="284497" fg:w="1779"/><text x="89.8145%" y="399.50"></text></g><g><title>rmqueue_bulk.constprop.0 (1,056 samples, 0.33%)</title><rect x="89.7921%" y="373" width="0.3324%" height="15" fill="rgb(218,11,47)" fg:x="285220" fg:w="1056"/><text x="90.0421%" y="383.50"></text></g><g><title>get_page_from_freelist (8,483 samples, 2.67%)</title><rect x="87.4583%" y="421" width="2.6706%" height="15" fill="rgb(218,51,51)" fg:x="277807" fg:w="8483"/><text x="87.7083%" y="431.50">ge..</text></g><g><title>kernel_init_free_pages (41 samples, 0.01%)</title><rect x="90.1289%" y="421" width="0.0129%" height="15" fill="rgb(238,126,27)" fg:x="286290" fg:w="41"/><text x="90.3789%" y="431.50"></text></g><g><title>__alloc_pages_nodemask (9,284 samples, 2.92%)</title><rect x="87.2329%" y="437" width="2.9228%" height="15" fill="rgb(249,202,22)" fg:x="277091" fg:w="9284"/><text x="87.4829%" y="447.50">__..</text></g><g><title>policy_nodemask (55 samples, 0.02%)</title><rect x="90.1765%" y="437" width="0.0173%" height="15" fill="rgb(254,195,49)" fg:x="286441" fg:w="55"/><text x="90.4265%" y="447.50"></text></g><g><title>alloc_pages_vma (9,816 samples, 3.09%)</title><rect x="87.1123%" y="453" width="3.0902%" height="15" fill="rgb(208,123,14)" fg:x="276708" fg:w="9816"/><text x="87.3623%" y="463.50">all..</text></g><g><title>kthread_blkcg (81 samples, 0.03%)</title><rect x="90.7711%" y="437" width="0.0255%" height="15" fill="rgb(224,200,8)" fg:x="288330" fg:w="81"/><text x="91.0211%" y="447.50"></text></g><g><title>cgroup_throttle_swaprate (1,896 samples, 0.60%)</title><rect x="90.2029%" y="453" width="0.5969%" height="15" fill="rgb(217,61,36)" fg:x="286525" fg:w="1896"/><text x="90.4529%" y="463.50"></text></g><g><title>kthread_blkcg (36 samples, 0.01%)</title><rect x="90.8092%" y="453" width="0.0113%" height="15" fill="rgb(206,35,45)" fg:x="288451" fg:w="36"/><text x="91.0592%" y="463.50"></text></g><g><title>__mod_zone_page_state (32 samples, 0.01%)</title><rect x="90.9893%" y="405" width="0.0101%" height="15" fill="rgb(217,65,33)" fg:x="289023" fg:w="32"/><text x="91.2393%" y="415.50"></text></g><g><title>__mod_memcg_lruvec_state (285 samples, 0.09%)</title><rect x="91.3998%" y="373" width="0.0897%" height="15" fill="rgb(222,158,48)" fg:x="290327" fg:w="285"/><text x="91.6498%" y="383.50"></text></g><g><title>__mod_memcg_state.part.0 (135 samples, 0.04%)</title><rect x="91.4471%" y="357" width="0.0425%" height="15" fill="rgb(254,2,54)" fg:x="290477" fg:w="135"/><text x="91.6971%" y="367.50"></text></g><g><title>__mod_lruvec_state (396 samples, 0.12%)</title><rect x="91.3869%" y="389" width="0.1247%" height="15" fill="rgb(250,143,38)" fg:x="290286" fg:w="396"/><text x="91.6369%" y="399.50"></text></g><g><title>__mod_node_page_state (53 samples, 0.02%)</title><rect x="91.4949%" y="373" width="0.0167%" height="15" fill="rgb(248,25,0)" fg:x="290629" fg:w="53"/><text x="91.7449%" y="383.50"></text></g><g><title>__mod_node_page_state (46 samples, 0.01%)</title><rect x="91.5166%" y="389" width="0.0145%" height="15" fill="rgb(206,152,27)" fg:x="290698" fg:w="46"/><text x="91.7666%" y="399.50"></text></g><g><title>__mod_zone_page_state (67 samples, 0.02%)</title><rect x="91.5311%" y="389" width="0.0211%" height="15" fill="rgb(240,77,30)" fg:x="290744" fg:w="67"/><text x="91.7811%" y="399.50"></text></g><g><title>mem_cgroup_update_lru_size (63 samples, 0.02%)</title><rect x="91.5522%" y="389" width="0.0198%" height="15" fill="rgb(231,5,3)" fg:x="290811" fg:w="63"/><text x="91.8022%" y="399.50"></text></g><g><title>__pagevec_lru_add_fn (2,088 samples, 0.66%)</title><rect x="90.9994%" y="405" width="0.6573%" height="15" fill="rgb(207,226,32)" fg:x="289055" fg:w="2088"/><text x="91.2494%" y="415.50"></text></g><g><title>page_mapping (269 samples, 0.08%)</title><rect x="91.5720%" y="389" width="0.0847%" height="15" fill="rgb(222,207,47)" fg:x="290874" fg:w="269"/><text x="91.8220%" y="399.50"></text></g><g><title>lock_page_lruvec_irqsave (82 samples, 0.03%)</title><rect x="91.6577%" y="405" width="0.0258%" height="15" fill="rgb(229,115,45)" fg:x="291146" fg:w="82"/><text x="91.9077%" y="415.50"></text></g><g><title>_raw_spin_lock_irqsave (54 samples, 0.02%)</title><rect x="91.6665%" y="389" width="0.0170%" height="15" fill="rgb(224,191,6)" fg:x="291174" fg:w="54"/><text x="91.9165%" y="399.50"></text></g><g><title>__pagevec_lru_add (2,756 samples, 0.87%)</title><rect x="90.9468%" y="421" width="0.8676%" height="15" fill="rgb(230,227,24)" fg:x="288888" fg:w="2756"/><text x="91.1968%" y="431.50"></text></g><g><title>release_pages (357 samples, 0.11%)</title><rect x="91.7021%" y="405" width="0.1124%" height="15" fill="rgb(228,80,19)" fg:x="291287" fg:w="357"/><text x="91.9521%" y="415.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (3,163 samples, 1.00%)</title><rect x="90.8250%" y="453" width="0.9958%" height="15" fill="rgb(247,229,0)" fg:x="288501" fg:w="3163"/><text x="91.0750%" y="463.50"></text></g><g><title>lru_cache_add (3,115 samples, 0.98%)</title><rect x="90.8401%" y="437" width="0.9807%" height="15" fill="rgb(237,194,15)" fg:x="288549" fg:w="3115"/><text x="91.0901%" y="447.50"></text></g><g><title>__count_memcg_events.part.0 (62 samples, 0.02%)</title><rect x="92.0484%" y="437" width="0.0195%" height="15" fill="rgb(219,203,20)" fg:x="292387" fg:w="62"/><text x="92.2984%" y="447.50"></text></g><g><title>get_mem_cgroup_from_mm (476 samples, 0.15%)</title><rect x="92.0704%" y="437" width="0.1499%" height="15" fill="rgb(234,128,8)" fg:x="292457" fg:w="476"/><text x="92.3204%" y="447.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (196 samples, 0.06%)</title><rect x="92.2202%" y="437" width="0.0617%" height="15" fill="rgb(248,202,8)" fg:x="292933" fg:w="196"/><text x="92.4702%" y="447.50"></text></g><g><title>__count_memcg_events.part.0 (115 samples, 0.04%)</title><rect x="92.2457%" y="421" width="0.0362%" height="15" fill="rgb(206,104,37)" fg:x="293014" fg:w="115"/><text x="92.4957%" y="431.50"></text></g><g><title>rcu_read_unlock_strict (40 samples, 0.01%)</title><rect x="92.2905%" y="437" width="0.0126%" height="15" fill="rgb(223,8,27)" fg:x="293156" fg:w="40"/><text x="92.5405%" y="447.50"></text></g><g><title>page_counter_try_charge (198 samples, 0.06%)</title><rect x="92.6157%" y="421" width="0.0623%" height="15" fill="rgb(216,217,28)" fg:x="294189" fg:w="198"/><text x="92.8657%" y="431.50"></text></g><g><title>mem_cgroup_charge (2,752 samples, 0.87%)</title><rect x="91.8207%" y="453" width="0.8664%" height="15" fill="rgb(249,199,1)" fg:x="291664" fg:w="2752"/><text x="92.0707%" y="463.50"></text></g><g><title>try_charge (1,219 samples, 0.38%)</title><rect x="92.3034%" y="437" width="0.3838%" height="15" fill="rgb(240,85,17)" fg:x="293197" fg:w="1219"/><text x="92.5534%" y="447.50"></text></g><g><title>memcg_check_events (54 samples, 0.02%)</title><rect x="92.6969%" y="453" width="0.0170%" height="15" fill="rgb(206,108,45)" fg:x="294447" fg:w="54"/><text x="92.9469%" y="463.50"></text></g><g><title>__mod_memcg_lruvec_state (311 samples, 0.10%)</title><rect x="92.7743%" y="405" width="0.0979%" height="15" fill="rgb(245,210,41)" fg:x="294693" fg:w="311"/><text x="93.0243%" y="415.50"></text></g><g><title>__mod_memcg_state.part.0 (173 samples, 0.05%)</title><rect x="92.8178%" y="389" width="0.0545%" height="15" fill="rgb(206,13,37)" fg:x="294831" fg:w="173"/><text x="93.0678%" y="399.50"></text></g><g><title>__mod_lruvec_state (454 samples, 0.14%)</title><rect x="92.7573%" y="421" width="0.1429%" height="15" fill="rgb(250,61,18)" fg:x="294639" fg:w="454"/><text x="93.0073%" y="431.50"></text></g><g><title>__mod_node_page_state (67 samples, 0.02%)</title><rect x="92.8792%" y="405" width="0.0211%" height="15" fill="rgb(235,172,48)" fg:x="295026" fg:w="67"/><text x="93.1292%" y="415.50"></text></g><g><title>__mod_lruvec_page_state (593 samples, 0.19%)</title><rect x="92.7444%" y="437" width="0.1867%" height="15" fill="rgb(249,201,17)" fg:x="294598" fg:w="593"/><text x="92.9944%" y="447.50"></text></g><g><title>__mod_node_page_state (83 samples, 0.03%)</title><rect x="92.9050%" y="421" width="0.0261%" height="15" fill="rgb(219,208,6)" fg:x="295108" fg:w="83"/><text x="93.1550%" y="431.50"></text></g><g><title>page_add_new_anon_rmap (806 samples, 0.25%)</title><rect x="92.7139%" y="453" width="0.2537%" height="15" fill="rgb(248,31,23)" fg:x="294501" fg:w="806"/><text x="92.9639%" y="463.50"></text></g><g><title>__page_set_anon_rmap (91 samples, 0.03%)</title><rect x="92.9390%" y="437" width="0.0286%" height="15" fill="rgb(245,15,42)" fg:x="295216" fg:w="91"/><text x="93.1890%" y="447.50"></text></g><g><title>pfn_pte (67 samples, 0.02%)</title><rect x="92.9676%" y="453" width="0.0211%" height="15" fill="rgb(222,217,39)" fg:x="295307" fg:w="67"/><text x="93.2176%" y="463.50"></text></g><g><title>do_anonymous_page (19,435 samples, 6.12%)</title><rect x="86.9165%" y="469" width="6.1185%" height="15" fill="rgb(210,219,27)" fg:x="276086" fg:w="19435"/><text x="87.1665%" y="479.50">do_anony..</text></g><g><title>pmd_pfn (55 samples, 0.02%)</title><rect x="93.0655%" y="469" width="0.0173%" height="15" fill="rgb(252,166,36)" fg:x="295618" fg:w="55"/><text x="93.3155%" y="479.50"></text></g><g><title>handle_pte_fault (20,363 samples, 6.41%)</title><rect x="86.6751%" y="485" width="6.4106%" height="15" fill="rgb(245,132,34)" fg:x="275319" fg:w="20363"/><text x="86.9251%" y="495.50">handle_p..</text></g><g><title>__handle_mm_fault (21,438 samples, 6.75%)</title><rect x="86.3454%" y="501" width="6.7490%" height="15" fill="rgb(236,54,3)" fg:x="274272" fg:w="21438"/><text x="86.5954%" y="511.50">__handle_..</text></g><g><title>handle_pte_fault (35 samples, 0.01%)</title><rect x="93.0945%" y="501" width="0.0110%" height="15" fill="rgb(241,173,43)" fg:x="295710" fg:w="35"/><text x="93.3445%" y="511.50"></text></g><g><title>pmd_val (48 samples, 0.02%)</title><rect x="93.1184%" y="501" width="0.0151%" height="15" fill="rgb(215,190,9)" fg:x="295786" fg:w="48"/><text x="93.3684%" y="511.50"></text></g><g><title>handle_mm_fault (22,487 samples, 7.08%)</title><rect x="86.0605%" y="517" width="7.0793%" height="15" fill="rgb(242,101,16)" fg:x="273367" fg:w="22487"/><text x="86.3105%" y="527.50">handle_mm..</text></g><g><title>mem_cgroup_from_task (36 samples, 0.01%)</title><rect x="93.1398%" y="517" width="0.0113%" height="15" fill="rgb(223,190,21)" fg:x="295854" fg:w="36"/><text x="93.3898%" y="527.50"></text></g><g><title>rcu_all_qs (35 samples, 0.01%)</title><rect x="93.1512%" y="517" width="0.0110%" height="15" fill="rgb(215,228,25)" fg:x="295890" fg:w="35"/><text x="93.4012%" y="527.50"></text></g><g><title>rcu_read_unlock_strict (136 samples, 0.04%)</title><rect x="93.1622%" y="517" width="0.0428%" height="15" fill="rgb(225,36,22)" fg:x="295925" fg:w="136"/><text x="93.4122%" y="527.50"></text></g><g><title>up_read (402 samples, 0.13%)</title><rect x="93.2059%" y="517" width="0.1266%" height="15" fill="rgb(251,106,46)" fg:x="296064" fg:w="402"/><text x="93.4559%" y="527.50"></text></g><g><title>vmacache_find (32 samples, 0.01%)</title><rect x="93.3325%" y="517" width="0.0101%" height="15" fill="rgb(208,90,1)" fg:x="296466" fg:w="32"/><text x="93.5825%" y="527.50"></text></g><g><title>do_user_addr_fault (24,154 samples, 7.60%)</title><rect x="85.7388%" y="533" width="7.6041%" height="15" fill="rgb(243,10,4)" fg:x="272345" fg:w="24154"/><text x="85.9888%" y="543.50">do_user_ad..</text></g><g><title>exit_to_user_mode_prepare (33 samples, 0.01%)</title><rect x="93.3933%" y="517" width="0.0104%" height="15" fill="rgb(212,137,27)" fg:x="296659" fg:w="33"/><text x="93.6433%" y="527.50"></text></g><g><title>exit_to_user_mode_prepare (96 samples, 0.03%)</title><rect x="93.4077%" y="501" width="0.0302%" height="15" fill="rgb(231,220,49)" fg:x="296705" fg:w="96"/><text x="93.6577%" y="511.50"></text></g><g><title>fpregs_assert_state_consistent (50 samples, 0.02%)</title><rect x="93.4222%" y="485" width="0.0157%" height="15" fill="rgb(237,96,20)" fg:x="296751" fg:w="50"/><text x="93.6722%" y="495.50"></text></g><g><title>irqentry_exit (193 samples, 0.06%)</title><rect x="93.3848%" y="533" width="0.0608%" height="15" fill="rgb(239,229,30)" fg:x="296632" fg:w="193"/><text x="93.6348%" y="543.50"></text></g><g><title>irqentry_exit_to_user_mode (133 samples, 0.04%)</title><rect x="93.4036%" y="517" width="0.0419%" height="15" fill="rgb(219,65,33)" fg:x="296692" fg:w="133"/><text x="93.6536%" y="527.50"></text></g><g><title>exc_page_fault (24,756 samples, 7.79%)</title><rect x="85.6623%" y="549" width="7.7936%" height="15" fill="rgb(243,134,7)" fg:x="272102" fg:w="24756"/><text x="85.9123%" y="559.50">exc_page_fa..</text></g><g><title>asm_exc_page_fault (25,296 samples, 7.96%)</title><rect x="85.5084%" y="565" width="7.9636%" height="15" fill="rgb(216,177,54)" fg:x="271613" fg:w="25296"/><text x="85.7584%" y="575.50">asm_exc_pag..</text></g><g><title>asm_sysvec_apic_timer_interrupt (33 samples, 0.01%)</title><rect x="93.4720%" y="565" width="0.0104%" height="15" fill="rgb(211,160,20)" fg:x="296909" fg:w="33"/><text x="93.7220%" y="575.50"></text></g><g><title>sysvec_apic_timer_interrupt (33 samples, 0.01%)</title><rect x="93.4720%" y="549" width="0.0104%" height="15" fill="rgb(239,85,39)" fg:x="296909" fg:w="33"/><text x="93.7220%" y="559.50"></text></g><g><title>error_entry (722 samples, 0.23%)</title><rect x="93.4823%" y="565" width="0.2273%" height="15" fill="rgb(232,125,22)" fg:x="296942" fg:w="722"/><text x="93.7323%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (49,422 samples, 15.56%)</title><rect x="79.1862%" y="581" width="15.5589%" height="15" fill="rgb(244,57,34)" fg:x="251531" fg:w="49422"/><text x="79.4362%" y="591.50">__memmove_avx_unaligned_..</text></g><g><title>sync_regs (3,268 samples, 1.03%)</title><rect x="93.7163%" y="565" width="1.0288%" height="15" fill="rgb(214,203,32)" fg:x="297685" fg:w="3268"/><text x="93.9663%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (67,233 samples, 21.17%)</title><rect x="73.5793%" y="613" width="21.1661%" height="15" fill="rgb(207,58,43)" fg:x="233721" fg:w="67233"/><text x="73.8293%" y="623.50">alloc::vec::Vec&lt;T,A&gt;::push</text></g><g><title>core::ptr::write (49,743 samples, 15.66%)</title><rect x="79.0855%" y="597" width="15.6599%" height="15" fill="rgb(215,193,15)" fg:x="251211" fg:w="49743"/><text x="79.3355%" y="607.50">core::ptr::write</text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (148,401 samples, 46.72%)</title><rect x="48.1868%" y="645" width="46.7191%" height="15" fill="rgb(232,15,44)" fg:x="153063" fg:w="148401"/><text x="48.4368%" y="655.50">hprof_slurp::record_parser::HprofRecordParser::parse_streaming</text></g><g><title>hprof_slurp::record_parser::many1_streaming::{{closure}} (148,401 samples, 46.72%)</title><rect x="48.1868%" y="629" width="46.7191%" height="15" fill="rgb(212,3,48)" fg:x="153063" fg:w="148401"/><text x="48.4368%" y="639.50">hprof_slurp::record_parser::many1_streaming::{{closure}}</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (505 samples, 0.16%)</title><rect x="94.7470%" y="613" width="0.1590%" height="15" fill="rgb(218,128,7)" fg:x="300959" fg:w="505"/><text x="94.9970%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (505 samples, 0.16%)</title><rect x="94.7470%" y="597" width="0.1590%" height="15" fill="rgb(226,216,39)" fg:x="300959" fg:w="505"/><text x="94.9970%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (505 samples, 0.16%)</title><rect x="94.7470%" y="581" width="0.1590%" height="15" fill="rgb(243,47,51)" fg:x="300959" fg:w="505"/><text x="94.9970%" y="591.50"></text></g><g><title>indicatif::style::ProgressStyle::format_state::{{closure}} (43 samples, 0.01%)</title><rect x="94.9302%" y="485" width="0.0135%" height="15" fill="rgb(241,183,40)" fg:x="301541" fg:w="43"/><text x="95.1802%" y="495.50"></text></g><g><title>indicatif::style::ProgressStyle::format_bar (36 samples, 0.01%)</title><rect x="94.9324%" y="469" width="0.0113%" height="15" fill="rgb(231,217,32)" fg:x="301548" fg:w="36"/><text x="95.1824%" y="479.50"></text></g><g><title>alloc::fmt::format (35 samples, 0.01%)</title><rect x="94.9327%" y="453" width="0.0110%" height="15" fill="rgb(229,61,38)" fg:x="301549" fg:w="35"/><text x="95.1827%" y="463.50"></text></g><g><title>core::fmt::Write::write_fmt (35 samples, 0.01%)</title><rect x="94.9327%" y="437" width="0.0110%" height="15" fill="rgb(225,210,5)" fg:x="301549" fg:w="35"/><text x="95.1827%" y="447.50"></text></g><g><title>core::fmt::write (35 samples, 0.01%)</title><rect x="94.9327%" y="421" width="0.0110%" height="15" fill="rgb(231,79,45)" fg:x="301549" fg:w="35"/><text x="95.1827%" y="431.50"></text></g><g><title>&lt;F as regex::re_unicode::Replacer&gt;::replace_append (91 samples, 0.03%)</title><rect x="94.9163%" y="517" width="0.0286%" height="15" fill="rgb(224,100,7)" fg:x="301497" fg:w="91"/><text x="95.1663%" y="527.50"></text></g><g><title>indicatif::utils::expand_template::{{closure}} (63 samples, 0.02%)</title><rect x="94.9252%" y="501" width="0.0198%" height="15" fill="rgb(241,198,18)" fg:x="301525" fg:w="63"/><text x="95.1752%" y="511.50"></text></g><g><title>indicatif::state::ProgressState::draw (139 samples, 0.04%)</title><rect x="94.9059%" y="597" width="0.0438%" height="15" fill="rgb(252,97,53)" fg:x="301464" fg:w="139"/><text x="95.1559%" y="607.50"></text></g><g><title>indicatif::style::ProgressStyle::format_state (113 samples, 0.04%)</title><rect x="94.9141%" y="581" width="0.0356%" height="15" fill="rgb(220,88,7)" fg:x="301490" fg:w="113"/><text x="95.1641%" y="591.50"></text></g><g><title>indicatif::utils::expand_template (106 samples, 0.03%)</title><rect x="94.9163%" y="565" width="0.0334%" height="15" fill="rgb(213,176,14)" fg:x="301497" fg:w="106"/><text x="95.1663%" y="575.50"></text></g><g><title>regex::re_unicode::Regex::replace_all (106 samples, 0.03%)</title><rect x="94.9163%" y="549" width="0.0334%" height="15" fill="rgb(246,73,7)" fg:x="301497" fg:w="106"/><text x="95.1663%" y="559.50"></text></g><g><title>regex::re_unicode::Regex::replacen (106 samples, 0.03%)</title><rect x="94.9163%" y="533" width="0.0334%" height="15" fill="rgb(245,64,36)" fg:x="301497" fg:w="106"/><text x="95.1663%" y="543.50"></text></g><g><title>indicatif::state::ProgressState::update_and_draw (140 samples, 0.04%)</title><rect x="94.9059%" y="613" width="0.0441%" height="15" fill="rgb(245,80,10)" fg:x="301464" fg:w="140"/><text x="95.1559%" y="623.50"></text></g><g><title>_start (288,767 samples, 90.91%)</title><rect x="4.0419%" y="837" width="90.9087%" height="15" fill="rgb(232,107,50)" fg:x="12839" fg:w="288767"/><text x="4.2919%" y="847.50">_start</text></g><g><title>__libc_start_main (288,767 samples, 90.91%)</title><rect x="4.0419%" y="821" width="90.9087%" height="15" fill="rgb(253,3,0)" fg:x="12839" fg:w="288767"/><text x="4.2919%" y="831.50">__libc_start_main</text></g><g><title>main (288,767 samples, 90.91%)</title><rect x="4.0419%" y="805" width="90.9087%" height="15" fill="rgb(212,99,53)" fg:x="12839" fg:w="288767"/><text x="4.2919%" y="815.50">main</text></g><g><title>std::rt::lang_start_internal (288,767 samples, 90.91%)</title><rect x="4.0419%" y="789" width="90.9087%" height="15" fill="rgb(249,111,54)" fg:x="12839" fg:w="288767"/><text x="4.2919%" y="799.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (288,767 samples, 90.91%)</title><rect x="4.0419%" y="773" width="90.9087%" height="15" fill="rgb(249,55,30)" fg:x="12839" fg:w="288767"/><text x="4.2919%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (288,767 samples, 90.91%)</title><rect x="4.0419%" y="757" width="90.9087%" height="15" fill="rgb(237,47,42)" fg:x="12839" fg:w="288767"/><text x="4.2919%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (288,767 samples, 90.91%)</title><rect x="4.0419%" y="741" width="90.9087%" height="15" fill="rgb(211,20,18)" fg:x="12839" fg:w="288767"/><text x="4.2919%" y="751.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (288,767 samples, 90.91%)</title><rect x="4.0419%" y="725" width="90.9087%" height="15" fill="rgb(231,203,46)" fg:x="12839" fg:w="288767"/><text x="4.2919%" y="735.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (288,767 samples, 90.91%)</title><rect x="4.0419%" y="709" width="90.9087%" height="15" fill="rgb(237,142,3)" fg:x="12839" fg:w="288767"/><text x="4.2919%" y="719.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (288,767 samples, 90.91%)</title><rect x="4.0419%" y="693" width="90.9087%" height="15" fill="rgb(241,107,1)" fg:x="12839" fg:w="288767"/><text x="4.2919%" y="703.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (288,767 samples, 90.91%)</title><rect x="4.0419%" y="677" width="90.9087%" height="15" fill="rgb(229,83,13)" fg:x="12839" fg:w="288767"/><text x="4.2919%" y="687.50">core::ops::function::FnOnce::call_once</text></g><g><title>hprof_slurp::main (288,767 samples, 90.91%)</title><rect x="4.0419%" y="661" width="90.9087%" height="15" fill="rgb(241,91,40)" fg:x="12839" fg:w="288767"/><text x="4.2919%" y="671.50">hprof_slurp::main</text></g><g><title>indicatif::progress_bar::ProgressBar::set_position (142 samples, 0.04%)</title><rect x="94.9059%" y="645" width="0.0447%" height="15" fill="rgb(225,3,45)" fg:x="301464" fg:w="142"/><text x="95.1559%" y="655.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::update_and_draw (142 samples, 0.04%)</title><rect x="94.9059%" y="629" width="0.0447%" height="15" fill="rgb(244,223,14)" fg:x="301464" fg:w="142"/><text x="95.1559%" y="639.50"></text></g><g><title>asm_exc_page_fault (15,849 samples, 4.99%)</title><rect x="94.9507%" y="837" width="4.9895%" height="15" fill="rgb(224,124,37)" fg:x="301606" fg:w="15849"/><text x="95.2007%" y="847.50">asm_ex..</text></g><g><title>asm_exc_page_fault (46 samples, 0.01%)</title><rect x="99.9455%" y="661" width="0.0145%" height="15" fill="rgb(251,171,30)" fg:x="317472" fg:w="46"/><text x="100.1955%" y="671.50"></text></g><g><title>handle_pte_fault (36 samples, 0.01%)</title><rect x="99.9651%" y="565" width="0.0113%" height="15" fill="rgb(236,46,54)" fg:x="317534" fg:w="36"/><text x="100.2151%" y="575.50"></text></g><g><title>do_anonymous_page (35 samples, 0.01%)</title><rect x="99.9654%" y="549" width="0.0110%" height="15" fill="rgb(245,213,5)" fg:x="317535" fg:w="35"/><text x="100.2154%" y="559.50"></text></g><g><title>handle_mm_fault (39 samples, 0.01%)</title><rect x="99.9644%" y="597" width="0.0123%" height="15" fill="rgb(230,144,27)" fg:x="317532" fg:w="39"/><text x="100.2144%" y="607.50"></text></g><g><title>__handle_mm_fault (38 samples, 0.01%)</title><rect x="99.9647%" y="581" width="0.0120%" height="15" fill="rgb(220,86,6)" fg:x="317533" fg:w="38"/><text x="100.2147%" y="591.50"></text></g><g><title>copy_page_to_iter (103 samples, 0.03%)</title><rect x="99.9452%" y="693" width="0.0324%" height="15" fill="rgb(240,20,13)" fg:x="317471" fg:w="103"/><text x="100.1952%" y="703.50"></text></g><g><title>copy_page_to_iter_iovec (103 samples, 0.03%)</title><rect x="99.9452%" y="677" width="0.0324%" height="15" fill="rgb(217,89,34)" fg:x="317471" fg:w="103"/><text x="100.1952%" y="687.50"></text></g><g><title>copy_user_enhanced_fast_string (56 samples, 0.02%)</title><rect x="99.9600%" y="661" width="0.0176%" height="15" fill="rgb(229,13,5)" fg:x="317518" fg:w="56"/><text x="100.2100%" y="671.50"></text></g><g><title>asm_exc_page_fault (45 samples, 0.01%)</title><rect x="99.9635%" y="645" width="0.0142%" height="15" fill="rgb(244,67,35)" fg:x="317529" fg:w="45"/><text x="100.2135%" y="655.50"></text></g><g><title>exc_page_fault (45 samples, 0.01%)</title><rect x="99.9635%" y="629" width="0.0142%" height="15" fill="rgb(221,40,2)" fg:x="317529" fg:w="45"/><text x="100.2135%" y="639.50"></text></g><g><title>do_user_addr_fault (45 samples, 0.01%)</title><rect x="99.9635%" y="613" width="0.0142%" height="15" fill="rgb(237,157,21)" fg:x="317529" fg:w="45"/><text x="100.2135%" y="623.50"></text></g><g><title>generic_file_buffered_read_get_pages (41 samples, 0.01%)</title><rect x="99.9776%" y="693" width="0.0129%" height="15" fill="rgb(222,94,11)" fg:x="317574" fg:w="41"/><text x="100.2276%" y="703.50"></text></g><g><title>page_cache_async_ra (38 samples, 0.01%)</title><rect x="99.9786%" y="677" width="0.0120%" height="15" fill="rgb(249,113,6)" fg:x="317577" fg:w="38"/><text x="100.2286%" y="687.50"></text></g><g><title>ondemand_readahead (38 samples, 0.01%)</title><rect x="99.9786%" y="661" width="0.0120%" height="15" fill="rgb(238,137,36)" fg:x="317577" fg:w="38"/><text x="100.2286%" y="671.50"></text></g><g><title>page_cache_ra_unbounded (38 samples, 0.01%)</title><rect x="99.9786%" y="645" width="0.0120%" height="15" fill="rgb(210,102,26)" fg:x="317577" fg:w="38"/><text x="100.2286%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (149 samples, 0.05%)</title><rect x="99.9440%" y="837" width="0.0469%" height="15" fill="rgb(218,30,30)" fg:x="317467" fg:w="149"/><text x="100.1940%" y="847.50"></text></g><g><title>do_syscall_64 (149 samples, 0.05%)</title><rect x="99.9440%" y="821" width="0.0469%" height="15" fill="rgb(214,67,26)" fg:x="317467" fg:w="149"/><text x="100.1940%" y="831.50"></text></g><g><title>__x64_sys_read (146 samples, 0.05%)</title><rect x="99.9449%" y="805" width="0.0460%" height="15" fill="rgb(251,9,53)" fg:x="317470" fg:w="146"/><text x="100.1949%" y="815.50"></text></g><g><title>ksys_read (146 samples, 0.05%)</title><rect x="99.9449%" y="789" width="0.0460%" height="15" fill="rgb(228,204,25)" fg:x="317470" fg:w="146"/><text x="100.1949%" y="799.50"></text></g><g><title>vfs_read (146 samples, 0.05%)</title><rect x="99.9449%" y="773" width="0.0460%" height="15" fill="rgb(207,153,8)" fg:x="317470" fg:w="146"/><text x="100.1949%" y="783.50"></text></g><g><title>new_sync_read (146 samples, 0.05%)</title><rect x="99.9449%" y="757" width="0.0460%" height="15" fill="rgb(242,9,16)" fg:x="317470" fg:w="146"/><text x="100.1949%" y="767.50"></text></g><g><title>ext4_file_read_iter (146 samples, 0.05%)</title><rect x="99.9449%" y="741" width="0.0460%" height="15" fill="rgb(217,211,10)" fg:x="317470" fg:w="146"/><text x="100.1949%" y="751.50"></text></g><g><title>generic_file_read_iter (146 samples, 0.05%)</title><rect x="99.9449%" y="725" width="0.0460%" height="15" fill="rgb(219,228,52)" fg:x="317470" fg:w="146"/><text x="100.1949%" y="735.50"></text></g><g><title>generic_file_buffered_read (146 samples, 0.05%)</title><rect x="99.9449%" y="709" width="0.0460%" height="15" fill="rgb(231,92,29)" fg:x="317470" fg:w="146"/><text x="100.1949%" y="719.50"></text></g><g><title>hprof-slurp (317,640 samples, 100.00%)</title><rect x="0.0000%" y="853" width="99.9984%" height="15" fill="rgb(232,8,23)" fg:x="0" fg:w="317640"/><text x="0.2500%" y="863.50">hprof-slurp</text></g><g><title>all (317,645 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(216,211,34)" fg:x="0" fg:w="317645"/><text x="0.2500%" y="879.50"></text></g></svg></svg>