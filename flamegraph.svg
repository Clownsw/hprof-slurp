<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1094" onload="init(evt)" viewBox="0 0 1200 1094" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1094" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1077.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1077.00"> </text><svg id="frames" x="10" width="1180" total_samples="249448"><g><title>[[heap]] (28 samples, 0.01%)</title><rect x="0.0168%" y="1013" width="0.0112%" height="15" fill="rgb(227,0,7)" fg:x="42" fg:w="28"/><text x="0.2668%" y="1023.50"></text></g><g><title>__memcpy_avx_unaligned_erms (420 samples, 0.17%)</title><rect x="0.0321%" y="997" width="0.1684%" height="15" fill="rgb(217,0,24)" fg:x="80" fg:w="420"/><text x="0.2821%" y="1007.50"></text></g><g><title>[anon] (849 samples, 0.34%)</title><rect x="0.0313%" y="1013" width="0.3404%" height="15" fill="rgb(221,193,54)" fg:x="78" fg:w="849"/><text x="0.2813%" y="1023.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (421 samples, 0.17%)</title><rect x="0.2028%" y="997" width="0.1688%" height="15" fill="rgb(248,212,6)" fg:x="506" fg:w="421"/><text x="0.4528%" y="1007.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (1,922 samples, 0.77%)</title><rect x="0.3728%" y="997" width="0.7705%" height="15" fill="rgb(208,68,35)" fg:x="930" fg:w="1922"/><text x="0.6228%" y="1007.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (91 samples, 0.04%)</title><rect x="1.1433%" y="997" width="0.0365%" height="15" fill="rgb(232,128,0)" fg:x="2852" fg:w="91"/><text x="1.3933%" y="1007.50"></text></g><g><title>__free (29 samples, 0.01%)</title><rect x="1.1850%" y="997" width="0.0116%" height="15" fill="rgb(207,160,47)" fg:x="2956" fg:w="29"/><text x="1.4350%" y="1007.50"></text></g><g><title>__memcpy_avx_unaligned_erms (127 samples, 0.05%)</title><rect x="1.1966%" y="997" width="0.0509%" height="15" fill="rgb(228,23,34)" fg:x="2985" fg:w="127"/><text x="1.4466%" y="1007.50"></text></g><g><title>__realloc (491 samples, 0.20%)</title><rect x="1.2508%" y="997" width="0.1968%" height="15" fill="rgb(218,30,26)" fg:x="3120" fg:w="491"/><text x="1.5008%" y="1007.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (491 samples, 0.20%)</title><rect x="1.2508%" y="981" width="0.1968%" height="15" fill="rgb(220,122,19)" fg:x="3120" fg:w="491"/><text x="1.5008%" y="991.50"></text></g><g><title>_int_free (41 samples, 0.02%)</title><rect x="1.4476%" y="997" width="0.0164%" height="15" fill="rgb(250,228,42)" fg:x="3611" fg:w="41"/><text x="1.6976%" y="1007.50"></text></g><g><title>_int_malloc (41 samples, 0.02%)</title><rect x="1.4640%" y="997" width="0.0164%" height="15" fill="rgb(240,193,28)" fg:x="3652" fg:w="41"/><text x="1.7140%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::GcRecord&gt; (270 samples, 0.11%)</title><rect x="1.4821%" y="997" width="0.1082%" height="15" fill="rgb(216,20,37)" fg:x="3697" fg:w="270"/><text x="1.7321%" y="1007.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_instance_dump (26 samples, 0.01%)</title><rect x="2.0209%" y="965" width="0.0104%" height="15" fill="rgb(206,188,39)" fg:x="5041" fg:w="26"/><text x="2.2709%" y="975.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (26 samples, 0.01%)</title><rect x="2.0209%" y="949" width="0.0104%" height="15" fill="rgb(217,207,13)" fg:x="5041" fg:w="26"/><text x="2.2709%" y="959.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (26 samples, 0.01%)</title><rect x="2.0209%" y="933" width="0.0104%" height="15" fill="rgb(231,73,38)" fg:x="5041" fg:w="26"/><text x="2.2709%" y="943.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (26 samples, 0.01%)</title><rect x="2.0209%" y="917" width="0.0104%" height="15" fill="rgb(225,20,46)" fg:x="5041" fg:w="26"/><text x="2.2709%" y="927.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (1,101 samples, 0.44%)</title><rect x="1.5903%" y="997" width="0.4414%" height="15" fill="rgb(210,31,41)" fg:x="3967" fg:w="1101"/><text x="1.8403%" y="1007.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (27 samples, 0.01%)</title><rect x="2.0209%" y="981" width="0.0108%" height="15" fill="rgb(221,200,47)" fg:x="5041" fg:w="27"/><text x="2.2709%" y="991.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (28 samples, 0.01%)</title><rect x="2.4069%" y="965" width="0.0112%" height="15" fill="rgb(226,26,5)" fg:x="6004" fg:w="28"/><text x="2.6569%" y="975.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (1,334 samples, 0.53%)</title><rect x="2.0317%" y="997" width="0.5348%" height="15" fill="rgb(249,33,26)" fg:x="5068" fg:w="1334"/><text x="2.2817%" y="1007.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (1,333 samples, 0.53%)</title><rect x="2.0321%" y="981" width="0.5344%" height="15" fill="rgb(235,183,28)" fg:x="5069" fg:w="1333"/><text x="2.2821%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (370 samples, 0.15%)</title><rect x="2.4181%" y="965" width="0.1483%" height="15" fill="rgb(221,5,38)" fg:x="6032" fg:w="370"/><text x="2.6681%" y="975.50"></text></g><g><title>core::ptr::write (370 samples, 0.15%)</title><rect x="2.4181%" y="949" width="0.1483%" height="15" fill="rgb(247,18,42)" fg:x="6032" fg:w="370"/><text x="2.6681%" y="959.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (1,012 samples, 0.41%)</title><rect x="2.5669%" y="997" width="0.4057%" height="15" fill="rgb(241,131,45)" fg:x="6403" fg:w="1012"/><text x="2.8169%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,011 samples, 0.41%)</title><rect x="2.5673%" y="981" width="0.4053%" height="15" fill="rgb(249,31,29)" fg:x="6404" fg:w="1011"/><text x="2.8173%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,011 samples, 0.41%)</title><rect x="2.5673%" y="965" width="0.4053%" height="15" fill="rgb(225,111,53)" fg:x="6404" fg:w="1011"/><text x="2.8173%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,011 samples, 0.41%)</title><rect x="2.5673%" y="949" width="0.4053%" height="15" fill="rgb(238,160,17)" fg:x="6404" fg:w="1011"/><text x="2.8173%" y="959.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (491 samples, 0.20%)</title><rect x="2.7757%" y="933" width="0.1968%" height="15" fill="rgb(214,148,48)" fg:x="6924" fg:w="491"/><text x="3.0257%" y="943.50"></text></g><g><title>[unknown] (6,494 samples, 2.60%)</title><rect x="0.3728%" y="1013" width="2.6033%" height="15" fill="rgb(232,36,49)" fg:x="930" fg:w="6494"/><text x="0.6228%" y="1023.50">[u..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.01%)</title><rect x="2.9790%" y="693" width="0.0140%" height="15" fill="rgb(209,103,24)" fg:x="7431" fg:w="35"/><text x="3.2290%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (35 samples, 0.01%)</title><rect x="2.9790%" y="677" width="0.0140%" height="15" fill="rgb(229,88,8)" fg:x="7431" fg:w="35"/><text x="3.2290%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (35 samples, 0.01%)</title><rect x="2.9790%" y="661" width="0.0140%" height="15" fill="rgb(213,181,19)" fg:x="7431" fg:w="35"/><text x="3.2290%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (35 samples, 0.01%)</title><rect x="2.9790%" y="645" width="0.0140%" height="15" fill="rgb(254,191,54)" fg:x="7431" fg:w="35"/><text x="3.2290%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,alloc::string::String)&gt; (35 samples, 0.01%)</title><rect x="2.9790%" y="629" width="0.0140%" height="15" fill="rgb(241,83,37)" fg:x="7431" fg:w="35"/><text x="3.2290%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (35 samples, 0.01%)</title><rect x="2.9790%" y="613" width="0.0140%" height="15" fill="rgb(233,36,39)" fg:x="7431" fg:w="35"/><text x="3.2290%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (35 samples, 0.01%)</title><rect x="2.9790%" y="597" width="0.0140%" height="15" fill="rgb(226,3,54)" fg:x="7431" fg:w="35"/><text x="3.2290%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (35 samples, 0.01%)</title><rect x="2.9790%" y="581" width="0.0140%" height="15" fill="rgb(245,192,40)" fg:x="7431" fg:w="35"/><text x="3.2290%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.01%)</title><rect x="2.9790%" y="565" width="0.0140%" height="15" fill="rgb(238,167,29)" fg:x="7431" fg:w="35"/><text x="3.2290%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (34 samples, 0.01%)</title><rect x="2.9794%" y="549" width="0.0136%" height="15" fill="rgb(232,182,51)" fg:x="7432" fg:w="34"/><text x="3.2294%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (34 samples, 0.01%)</title><rect x="2.9794%" y="533" width="0.0136%" height="15" fill="rgb(231,60,39)" fg:x="7432" fg:w="34"/><text x="3.2294%" y="543.50"></text></g><g><title>__free (34 samples, 0.01%)</title><rect x="2.9794%" y="517" width="0.0136%" height="15" fill="rgb(208,69,12)" fg:x="7432" fg:w="34"/><text x="3.2294%" y="527.50"></text></g><g><title>_int_free (25 samples, 0.01%)</title><rect x="2.9830%" y="501" width="0.0100%" height="15" fill="rgb(235,93,37)" fg:x="7441" fg:w="25"/><text x="3.2330%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder::start_recorder::{{closure}}&gt; (37 samples, 0.01%)</title><rect x="2.9790%" y="789" width="0.0148%" height="15" fill="rgb(213,116,39)" fg:x="7431" fg:w="37"/><text x="3.2290%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder&gt; (37 samples, 0.01%)</title><rect x="2.9790%" y="773" width="0.0148%" height="15" fill="rgb(222,207,29)" fg:x="7431" fg:w="37"/><text x="3.2290%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;ahash::hash_map::AHashMap&lt;u64,alloc::string::String&gt;&gt; (37 samples, 0.01%)</title><rect x="2.9790%" y="757" width="0.0148%" height="15" fill="rgb(206,96,30)" fg:x="7431" fg:w="37"/><text x="3.2290%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (37 samples, 0.01%)</title><rect x="2.9790%" y="741" width="0.0148%" height="15" fill="rgb(218,138,4)" fg:x="7431" fg:w="37"/><text x="3.2290%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (37 samples, 0.01%)</title><rect x="2.9790%" y="725" width="0.0148%" height="15" fill="rgb(250,191,14)" fg:x="7431" fg:w="37"/><text x="3.2290%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (37 samples, 0.01%)</title><rect x="2.9790%" y="709" width="0.0148%" height="15" fill="rgb(239,60,40)" fg:x="7431" fg:w="37"/><text x="3.2290%" y="719.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,119 samples, 0.45%)</title><rect x="2.9950%" y="741" width="0.4486%" height="15" fill="rgb(206,27,48)" fg:x="7471" fg:w="1119"/><text x="3.2450%" y="751.50"></text></g><g><title>core::ptr::read (1,116 samples, 0.45%)</title><rect x="2.9962%" y="725" width="0.4474%" height="15" fill="rgb(225,35,8)" fg:x="7474" fg:w="1116"/><text x="3.2462%" y="735.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (29 samples, 0.01%)</title><rect x="8.7217%" y="709" width="0.0116%" height="15" fill="rgb(250,213,24)" fg:x="21756" fg:w="29"/><text x="8.9717%" y="719.50"></text></g><g><title>sysvec_apic_timer_interrupt (28 samples, 0.01%)</title><rect x="8.7221%" y="693" width="0.0112%" height="15" fill="rgb(247,123,22)" fg:x="21757" fg:w="28"/><text x="8.9721%" y="703.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12,716 samples, 5.10%)</title><rect x="3.6380%" y="725" width="5.0977%" height="15" fill="rgb(231,138,38)" fg:x="9075" fg:w="12716"/><text x="3.8880%" y="735.50">__memc..</text></g><g><title>__free (1,092 samples, 0.44%)</title><rect x="11.4914%" y="709" width="0.4378%" height="15" fill="rgb(231,145,46)" fg:x="28665" fg:w="1092"/><text x="11.7414%" y="719.50"></text></g><g><title>_int_free (932 samples, 0.37%)</title><rect x="11.5555%" y="693" width="0.3736%" height="15" fill="rgb(251,118,11)" fg:x="28825" fg:w="932"/><text x="11.8055%" y="703.50"></text></g><g><title>malloc_consolidate (194 samples, 0.08%)</title><rect x="11.8514%" y="677" width="0.0778%" height="15" fill="rgb(217,147,25)" fg:x="29563" fg:w="194"/><text x="12.1014%" y="687.50"></text></g><g><title>unlink_chunk.constprop.0 (34 samples, 0.01%)</title><rect x="11.9155%" y="661" width="0.0136%" height="15" fill="rgb(247,81,37)" fg:x="29723" fg:w="34"/><text x="12.1655%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::GcRecord&gt; (379 samples, 0.15%)</title><rect x="11.9516%" y="709" width="0.1519%" height="15" fill="rgb(209,12,38)" fg:x="29813" fg:w="379"/><text x="12.2016%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::ArrayValue&gt; (44 samples, 0.02%)</title><rect x="12.0859%" y="693" width="0.0176%" height="15" fill="rgb(227,1,9)" fg:x="30148" fg:w="44"/><text x="12.3359%" y="703.50"></text></g><g><title>hprof_slurp::result_recorder::ArrayCounter::add_elements_from_array (50 samples, 0.02%)</title><rect x="12.1035%" y="709" width="0.0200%" height="15" fill="rgb(248,47,43)" fg:x="30192" fg:w="50"/><text x="12.3535%" y="719.50"></text></g><g><title>hprof_slurp::result_recorder::ClassInstanceCounter::add_instance (2,287 samples, 0.92%)</title><rect x="12.1236%" y="709" width="0.9168%" height="15" fill="rgb(221,10,30)" fg:x="30242" fg:w="2287"/><text x="12.3736%" y="719.50"></text></g><g><title>ahash::operations::folded_multiply (826 samples, 0.33%)</title><rect x="13.0416%" y="645" width="0.3311%" height="15" fill="rgb(210,229,1)" fg:x="32532" fg:w="826"/><text x="13.2916%" y="655.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (562 samples, 0.23%)</title><rect x="13.1474%" y="629" width="0.2253%" height="15" fill="rgb(222,148,37)" fg:x="32796" fg:w="562"/><text x="13.3974%" y="639.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1,125 samples, 0.45%)</title><rect x="13.0416%" y="661" width="0.4510%" height="15" fill="rgb(234,67,33)" fg:x="32532" fg:w="1125"/><text x="13.2916%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (299 samples, 0.12%)</title><rect x="13.3727%" y="645" width="0.1199%" height="15" fill="rgb(247,98,35)" fg:x="33358" fg:w="299"/><text x="13.6227%" y="655.50"></text></g><g><title>&lt;hprof_slurp::gc_record::FieldType as core::hash::Hash&gt;::hash (43 samples, 0.02%)</title><rect x="13.4926%" y="661" width="0.0172%" height="15" fill="rgb(247,138,52)" fg:x="33657" fg:w="43"/><text x="13.7426%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (43 samples, 0.02%)</title><rect x="13.4926%" y="645" width="0.0172%" height="15" fill="rgb(213,79,30)" fg:x="33657" fg:w="43"/><text x="13.7426%" y="655.50"></text></g><g><title>core::hash::Hasher::write_isize (43 samples, 0.02%)</title><rect x="13.4926%" y="629" width="0.0172%" height="15" fill="rgb(246,177,23)" fg:x="33657" fg:w="43"/><text x="13.7426%" y="639.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (43 samples, 0.02%)</title><rect x="13.4926%" y="613" width="0.0172%" height="15" fill="rgb(230,62,27)" fg:x="33657" fg:w="43"/><text x="13.7426%" y="623.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (43 samples, 0.02%)</title><rect x="13.4926%" y="597" width="0.0172%" height="15" fill="rgb(216,154,8)" fg:x="33657" fg:w="43"/><text x="13.7426%" y="607.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (43 samples, 0.02%)</title><rect x="13.4926%" y="581" width="0.0172%" height="15" fill="rgb(244,35,45)" fg:x="33657" fg:w="43"/><text x="13.7426%" y="591.50"></text></g><g><title>ahash::operations::folded_multiply (42 samples, 0.02%)</title><rect x="13.4930%" y="565" width="0.0168%" height="15" fill="rgb(251,115,12)" fg:x="33658" fg:w="42"/><text x="13.7430%" y="575.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (42 samples, 0.02%)</title><rect x="13.4930%" y="549" width="0.0168%" height="15" fill="rgb(240,54,50)" fg:x="33658" fg:w="42"/><text x="13.7430%" y="559.50"></text></g><g><title>hashbrown::map::make_insert_hash (1,931 samples, 0.77%)</title><rect x="13.0416%" y="677" width="0.7741%" height="15" fill="rgb(233,84,52)" fg:x="32532" fg:w="1931"/><text x="13.2916%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (763 samples, 0.31%)</title><rect x="13.5098%" y="661" width="0.3059%" height="15" fill="rgb(207,117,47)" fg:x="33700" fg:w="763"/><text x="13.7598%" y="671.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (763 samples, 0.31%)</title><rect x="13.5098%" y="645" width="0.3059%" height="15" fill="rgb(249,43,39)" fg:x="33700" fg:w="763"/><text x="13.7598%" y="655.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (763 samples, 0.31%)</title><rect x="13.5098%" y="629" width="0.3059%" height="15" fill="rgb(209,38,44)" fg:x="33700" fg:w="763"/><text x="13.7598%" y="639.50"></text></g><g><title>ahash::operations::folded_multiply (756 samples, 0.30%)</title><rect x="13.5126%" y="613" width="0.3031%" height="15" fill="rgb(236,212,23)" fg:x="33707" fg:w="756"/><text x="13.7626%" y="623.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (510 samples, 0.20%)</title><rect x="13.6113%" y="597" width="0.2045%" height="15" fill="rgb(242,79,21)" fg:x="33953" fg:w="510"/><text x="13.8613%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (702 samples, 0.28%)</title><rect x="15.9015%" y="613" width="0.2814%" height="15" fill="rgb(211,96,35)" fg:x="39666" fg:w="702"/><text x="16.1515%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,138 samples, 0.46%)</title><rect x="15.7937%" y="629" width="0.4562%" height="15" fill="rgb(253,215,40)" fg:x="39397" fg:w="1138"/><text x="16.0437%" y="639.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (167 samples, 0.07%)</title><rect x="16.1829%" y="613" width="0.0669%" height="15" fill="rgb(211,81,21)" fg:x="40368" fg:w="167"/><text x="16.4329%" y="623.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (32 samples, 0.01%)</title><rect x="16.2499%" y="629" width="0.0128%" height="15" fill="rgb(208,190,38)" fg:x="40535" fg:w="32"/><text x="16.4999%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (69 samples, 0.03%)</title><rect x="16.2631%" y="629" width="0.0277%" height="15" fill="rgb(235,213,38)" fg:x="40568" fg:w="69"/><text x="16.5131%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (69 samples, 0.03%)</title><rect x="16.2631%" y="613" width="0.0277%" height="15" fill="rgb(237,122,38)" fg:x="40568" fg:w="69"/><text x="16.5131%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (69 samples, 0.03%)</title><rect x="16.2631%" y="597" width="0.0277%" height="15" fill="rgb(244,218,35)" fg:x="40568" fg:w="69"/><text x="16.5131%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,971 samples, 0.79%)</title><rect x="15.7027%" y="661" width="0.7901%" height="15" fill="rgb(240,68,47)" fg:x="39170" fg:w="1971"/><text x="15.9527%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,971 samples, 0.79%)</title><rect x="15.7027%" y="645" width="0.7901%" height="15" fill="rgb(210,16,53)" fg:x="39170" fg:w="1971"/><text x="15.9527%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (504 samples, 0.20%)</title><rect x="16.2908%" y="629" width="0.2020%" height="15" fill="rgb(235,124,12)" fg:x="40637" fg:w="504"/><text x="16.5408%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (504 samples, 0.20%)</title><rect x="16.2908%" y="613" width="0.2020%" height="15" fill="rgb(224,169,11)" fg:x="40637" fg:w="504"/><text x="16.5408%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (504 samples, 0.20%)</title><rect x="16.2908%" y="597" width="0.2020%" height="15" fill="rgb(250,166,2)" fg:x="40637" fg:w="504"/><text x="16.5408%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (33 samples, 0.01%)</title><rect x="16.6888%" y="613" width="0.0132%" height="15" fill="rgb(242,216,29)" fg:x="41630" fg:w="33"/><text x="16.9388%" y="623.50"></text></g><g><title>hashbrown::raw::h2 (239 samples, 0.10%)</title><rect x="16.7021%" y="613" width="0.0958%" height="15" fill="rgb(230,116,27)" fg:x="41663" fg:w="239"/><text x="16.9521%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (389 samples, 0.16%)</title><rect x="16.7979%" y="613" width="0.1559%" height="15" fill="rgb(228,99,48)" fg:x="41902" fg:w="389"/><text x="17.0479%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (389 samples, 0.16%)</title><rect x="16.7979%" y="597" width="0.1559%" height="15" fill="rgb(253,11,6)" fg:x="41902" fg:w="389"/><text x="17.0479%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (389 samples, 0.16%)</title><rect x="16.7979%" y="581" width="0.1559%" height="15" fill="rgb(247,143,39)" fg:x="41902" fg:w="389"/><text x="17.0479%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1,695 samples, 0.68%)</title><rect x="16.4936%" y="661" width="0.6795%" height="15" fill="rgb(236,97,10)" fg:x="41143" fg:w="1695"/><text x="16.7436%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1,695 samples, 0.68%)</title><rect x="16.4936%" y="645" width="0.6795%" height="15" fill="rgb(233,208,19)" fg:x="41143" fg:w="1695"/><text x="16.7436%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1,695 samples, 0.68%)</title><rect x="16.4936%" y="629" width="0.6795%" height="15" fill="rgb(216,164,2)" fg:x="41143" fg:w="1695"/><text x="16.7436%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (547 samples, 0.22%)</title><rect x="16.9538%" y="613" width="0.2193%" height="15" fill="rgb(220,129,5)" fg:x="42291" fg:w="547"/><text x="17.2038%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (547 samples, 0.22%)</title><rect x="16.9538%" y="597" width="0.2193%" height="15" fill="rgb(242,17,10)" fg:x="42291" fg:w="547"/><text x="17.2038%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (547 samples, 0.22%)</title><rect x="16.9538%" y="581" width="0.2193%" height="15" fill="rgb(242,107,0)" fg:x="42291" fg:w="547"/><text x="17.2038%" y="591.50"></text></g><g><title>core::core_arch::simd::i8x16::new (547 samples, 0.22%)</title><rect x="16.9538%" y="565" width="0.2193%" height="15" fill="rgb(251,28,31)" fg:x="42291" fg:w="547"/><text x="17.2038%" y="575.50"></text></g><g><title>&lt;hprof_slurp::gc_record::FieldType as core::cmp::PartialEq&gt;::eq (62 samples, 0.02%)</title><rect x="17.1731%" y="645" width="0.0249%" height="15" fill="rgb(233,223,10)" fg:x="42838" fg:w="62"/><text x="17.4231%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (34,401 samples, 13.79%)</title><rect x="3.4440%" y="741" width="13.7909%" height="15" fill="rgb(215,21,27)" fg:x="8591" fg:w="34401"/><text x="3.6940%" y="751.50">core::iter::traits::i..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (21,199 samples, 8.50%)</title><rect x="8.7365%" y="725" width="8.4984%" height="15" fill="rgb(232,23,21)" fg:x="21793" fg:w="21199"/><text x="8.9865%" y="735.50">hprof_slurp:..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (10,461 samples, 4.19%)</title><rect x="13.0412%" y="709" width="4.1937%" height="15" fill="rgb(244,5,23)" fg:x="32531" fg:w="10461"/><text x="13.2912%" y="719.50">std::..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (10,461 samples, 4.19%)</title><rect x="13.0412%" y="693" width="4.1937%" height="15" fill="rgb(226,81,46)" fg:x="32531" fg:w="10461"/><text x="13.2912%" y="703.50">hashb..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8,529 samples, 3.42%)</title><rect x="13.8157%" y="677" width="3.4191%" height="15" fill="rgb(247,70,30)" fg:x="34463" fg:w="8529"/><text x="14.0657%" y="687.50">has..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (154 samples, 0.06%)</title><rect x="17.1731%" y="661" width="0.0617%" height="15" fill="rgb(212,68,19)" fg:x="42838" fg:w="154"/><text x="17.4231%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (92 samples, 0.04%)</title><rect x="17.1980%" y="645" width="0.0369%" height="15" fill="rgb(240,187,13)" fg:x="42900" fg:w="92"/><text x="17.4480%" y="655.50"></text></g><g><title>__free_one_page (56 samples, 0.02%)</title><rect x="17.2974%" y="389" width="0.0224%" height="15" fill="rgb(223,113,26)" fg:x="43148" fg:w="56"/><text x="17.5474%" y="399.50"></text></g><g><title>free_unref_page_list (95 samples, 0.04%)</title><rect x="17.2822%" y="437" width="0.0381%" height="15" fill="rgb(206,192,2)" fg:x="43110" fg:w="95"/><text x="17.5322%" y="447.50"></text></g><g><title>free_unref_page_commit (80 samples, 0.03%)</title><rect x="17.2882%" y="421" width="0.0321%" height="15" fill="rgb(241,108,4)" fg:x="43125" fg:w="80"/><text x="17.5382%" y="431.50"></text></g><g><title>free_pcppages_bulk (73 samples, 0.03%)</title><rect x="17.2910%" y="405" width="0.0293%" height="15" fill="rgb(247,173,49)" fg:x="43132" fg:w="73"/><text x="17.5410%" y="415.50"></text></g><g><title>tlb_finish_mmu (200 samples, 0.08%)</title><rect x="17.2461%" y="485" width="0.0802%" height="15" fill="rgb(224,114,35)" fg:x="43020" fg:w="200"/><text x="17.4961%" y="495.50"></text></g><g><title>free_pages_and_swap_cache (194 samples, 0.08%)</title><rect x="17.2485%" y="469" width="0.0778%" height="15" fill="rgb(245,159,27)" fg:x="43026" fg:w="194"/><text x="17.4985%" y="479.50"></text></g><g><title>release_pages (169 samples, 0.07%)</title><rect x="17.2585%" y="453" width="0.0677%" height="15" fill="rgb(245,172,44)" fg:x="43051" fg:w="169"/><text x="17.5085%" y="463.50"></text></g><g><title>page_remove_rmap (30 samples, 0.01%)</title><rect x="17.3367%" y="421" width="0.0120%" height="15" fill="rgb(236,23,11)" fg:x="43246" fg:w="30"/><text x="17.5867%" y="431.50"></text></g><g><title>vm_normal_page (28 samples, 0.01%)</title><rect x="17.3491%" y="421" width="0.0112%" height="15" fill="rgb(205,117,38)" fg:x="43277" fg:w="28"/><text x="17.5991%" y="431.50"></text></g><g><title>__mod_lruvec_page_state (36 samples, 0.01%)</title><rect x="18.0414%" y="405" width="0.0144%" height="15" fill="rgb(237,72,25)" fg:x="45004" fg:w="36"/><text x="18.2914%" y="415.50"></text></g><g><title>__tlb_remove_page_size (76 samples, 0.03%)</title><rect x="18.0559%" y="405" width="0.0305%" height="15" fill="rgb(244,70,9)" fg:x="45040" fg:w="76"/><text x="18.3059%" y="415.50"></text></g><g><title>lock_page_memcg (37 samples, 0.01%)</title><rect x="18.0895%" y="405" width="0.0148%" height="15" fill="rgb(217,125,39)" fg:x="45124" fg:w="37"/><text x="18.3395%" y="415.50"></text></g><g><title>__mod_memcg_state.part.0 (95 samples, 0.04%)</title><rect x="18.4628%" y="341" width="0.0381%" height="15" fill="rgb(235,36,10)" fg:x="46055" fg:w="95"/><text x="18.7128%" y="351.50"></text></g><g><title>cgroup_rstat_updated (64 samples, 0.03%)</title><rect x="18.4752%" y="325" width="0.0257%" height="15" fill="rgb(251,123,47)" fg:x="46086" fg:w="64"/><text x="18.7252%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (399 samples, 0.16%)</title><rect x="18.3529%" y="357" width="0.1600%" height="15" fill="rgb(221,13,13)" fg:x="45781" fg:w="399"/><text x="18.6029%" y="367.50"></text></g><g><title>cgroup_rstat_updated (30 samples, 0.01%)</title><rect x="18.5008%" y="341" width="0.0120%" height="15" fill="rgb(238,131,9)" fg:x="46150" fg:w="30"/><text x="18.7508%" y="351.50"></text></g><g><title>__mod_memcg_state.part.0 (59 samples, 0.02%)</title><rect x="18.5129%" y="357" width="0.0237%" height="15" fill="rgb(211,50,8)" fg:x="46180" fg:w="59"/><text x="18.7629%" y="367.50"></text></g><g><title>__mod_node_page_state (66 samples, 0.03%)</title><rect x="18.5365%" y="357" width="0.0265%" height="15" fill="rgb(245,182,24)" fg:x="46239" fg:w="66"/><text x="18.7865%" y="367.50"></text></g><g><title>__mod_lruvec_state (605 samples, 0.24%)</title><rect x="18.3209%" y="373" width="0.2425%" height="15" fill="rgb(242,14,37)" fg:x="45701" fg:w="605"/><text x="18.5709%" y="383.50"></text></g><g><title>__mod_node_page_state (61 samples, 0.02%)</title><rect x="18.5694%" y="373" width="0.0245%" height="15" fill="rgb(246,228,12)" fg:x="46321" fg:w="61"/><text x="18.8194%" y="383.50"></text></g><g><title>__mod_lruvec_page_state (795 samples, 0.32%)</title><rect x="18.2808%" y="389" width="0.3187%" height="15" fill="rgb(213,55,15)" fg:x="45601" fg:w="795"/><text x="18.5308%" y="399.50"></text></g><g><title>lock_page_memcg (110 samples, 0.04%)</title><rect x="18.6059%" y="389" width="0.0441%" height="15" fill="rgb(209,9,3)" fg:x="46412" fg:w="110"/><text x="18.8559%" y="399.50"></text></g><g><title>rcu_read_unlock_strict (33 samples, 0.01%)</title><rect x="18.6500%" y="389" width="0.0132%" height="15" fill="rgb(230,59,30)" fg:x="46522" fg:w="33"/><text x="18.9000%" y="399.50"></text></g><g><title>page_remove_rmap (1,454 samples, 0.58%)</title><rect x="18.1044%" y="405" width="0.5829%" height="15" fill="rgb(209,121,21)" fg:x="45161" fg:w="1454"/><text x="18.3544%" y="415.50"></text></g><g><title>unlock_page_memcg (60 samples, 0.02%)</title><rect x="18.6632%" y="389" width="0.0241%" height="15" fill="rgb(220,109,13)" fg:x="46555" fg:w="60"/><text x="18.9132%" y="399.50"></text></g><g><title>__mod_lruvec_state (25 samples, 0.01%)</title><rect x="18.8985%" y="373" width="0.0100%" height="15" fill="rgb(232,18,1)" fg:x="47142" fg:w="25"/><text x="19.1485%" y="383.50"></text></g><g><title>__mod_zone_page_state (58 samples, 0.02%)</title><rect x="18.9086%" y="373" width="0.0233%" height="15" fill="rgb(215,41,42)" fg:x="47167" fg:w="58"/><text x="19.1586%" y="383.50"></text></g><g><title>__mod_memcg_state.part.0 (53 samples, 0.02%)</title><rect x="19.4473%" y="325" width="0.0212%" height="15" fill="rgb(224,123,36)" fg:x="48511" fg:w="53"/><text x="19.6973%" y="335.50"></text></g><g><title>cgroup_rstat_updated (33 samples, 0.01%)</title><rect x="19.4554%" y="309" width="0.0132%" height="15" fill="rgb(240,125,3)" fg:x="48531" fg:w="33"/><text x="19.7054%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (315 samples, 0.13%)</title><rect x="19.3475%" y="341" width="0.1263%" height="15" fill="rgb(205,98,50)" fg:x="48262" fg:w="315"/><text x="19.5975%" y="351.50"></text></g><g><title>__mod_memcg_state.part.0 (59 samples, 0.02%)</title><rect x="19.4738%" y="341" width="0.0237%" height="15" fill="rgb(205,185,37)" fg:x="48577" fg:w="59"/><text x="19.7238%" y="351.50"></text></g><g><title>__mod_lruvec_state (504 samples, 0.20%)</title><rect x="19.3211%" y="357" width="0.2020%" height="15" fill="rgb(238,207,15)" fg:x="48196" fg:w="504"/><text x="19.5711%" y="367.50"></text></g><g><title>__mod_node_page_state (64 samples, 0.03%)</title><rect x="19.4975%" y="341" width="0.0257%" height="15" fill="rgb(213,199,42)" fg:x="48636" fg:w="64"/><text x="19.7475%" y="351.50"></text></g><g><title>__mod_node_page_state (79 samples, 0.03%)</title><rect x="19.5295%" y="357" width="0.0317%" height="15" fill="rgb(235,201,11)" fg:x="48716" fg:w="79"/><text x="19.7795%" y="367.50"></text></g><g><title>__mod_zone_page_state (57 samples, 0.02%)</title><rect x="19.5612%" y="357" width="0.0229%" height="15" fill="rgb(207,46,11)" fg:x="48795" fg:w="57"/><text x="19.8112%" y="367.50"></text></g><g><title>free_pcp_prepare (27 samples, 0.01%)</title><rect x="19.5856%" y="357" width="0.0108%" height="15" fill="rgb(241,35,35)" fg:x="48856" fg:w="27"/><text x="19.8356%" y="367.50"></text></g><g><title>free_unref_page_commit (32 samples, 0.01%)</title><rect x="19.5965%" y="357" width="0.0128%" height="15" fill="rgb(243,32,47)" fg:x="48883" fg:w="32"/><text x="19.8465%" y="367.50"></text></g><g><title>free_pcp_prepare (107 samples, 0.04%)</title><rect x="19.7095%" y="341" width="0.0429%" height="15" fill="rgb(247,202,23)" fg:x="49165" fg:w="107"/><text x="19.9595%" y="351.50"></text></g><g><title>__free_one_page (27 samples, 0.01%)</title><rect x="19.8214%" y="325" width="0.0108%" height="15" fill="rgb(219,102,11)" fg:x="49444" fg:w="27"/><text x="20.0714%" y="335.50"></text></g><g><title>__free_one_page (1,328 samples, 0.53%)</title><rect x="20.0459%" y="309" width="0.5324%" height="15" fill="rgb(243,110,44)" fg:x="50004" fg:w="1328"/><text x="20.2959%" y="319.50"></text></g><g><title>__mod_zone_page_state (53 samples, 0.02%)</title><rect x="20.5570%" y="293" width="0.0212%" height="15" fill="rgb(222,74,54)" fg:x="51279" fg:w="53"/><text x="20.8070%" y="303.50"></text></g><g><title>__mod_zone_page_state (52 samples, 0.02%)</title><rect x="20.5782%" y="309" width="0.0208%" height="15" fill="rgb(216,99,12)" fg:x="51332" fg:w="52"/><text x="20.8282%" y="319.50"></text></g><g><title>free_unref_page_list (2,476 samples, 0.99%)</title><rect x="19.6093%" y="357" width="0.9926%" height="15" fill="rgb(226,22,26)" fg:x="48915" fg:w="2476"/><text x="19.8593%" y="367.50"></text></g><g><title>free_unref_page_commit (2,118 samples, 0.85%)</title><rect x="19.7528%" y="341" width="0.8491%" height="15" fill="rgb(217,163,10)" fg:x="49273" fg:w="2118"/><text x="20.0028%" y="351.50"></text></g><g><title>free_pcppages_bulk (1,909 samples, 0.77%)</title><rect x="19.8366%" y="325" width="0.7653%" height="15" fill="rgb(213,25,53)" fg:x="49482" fg:w="1909"/><text x="20.0866%" y="335.50"></text></g><g><title>lock_page_lruvec_irqsave (107 samples, 0.04%)</title><rect x="20.6019%" y="357" width="0.0429%" height="15" fill="rgb(252,105,26)" fg:x="51391" fg:w="107"/><text x="20.8519%" y="367.50"></text></g><g><title>_raw_spin_lock_irqsave (102 samples, 0.04%)</title><rect x="20.6039%" y="341" width="0.0409%" height="15" fill="rgb(220,39,43)" fg:x="51396" fg:w="102"/><text x="20.8539%" y="351.50"></text></g><g><title>native_queued_spin_lock_slowpath (81 samples, 0.03%)</title><rect x="20.6123%" y="325" width="0.0325%" height="15" fill="rgb(229,68,48)" fg:x="51417" fg:w="81"/><text x="20.8623%" y="335.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (81 samples, 0.03%)</title><rect x="20.6123%" y="309" width="0.0325%" height="15" fill="rgb(252,8,32)" fg:x="51417" fg:w="81"/><text x="20.8623%" y="319.50"></text></g><g><title>mem_cgroup_uncharge_list (322 samples, 0.13%)</title><rect x="20.6448%" y="357" width="0.1291%" height="15" fill="rgb(223,20,43)" fg:x="51498" fg:w="322"/><text x="20.8948%" y="367.50"></text></g><g><title>uncharge_page (251 samples, 0.10%)</title><rect x="20.6732%" y="341" width="0.1006%" height="15" fill="rgb(229,81,49)" fg:x="51569" fg:w="251"/><text x="20.9232%" y="351.50"></text></g><g><title>mem_cgroup_update_lru_size (89 samples, 0.04%)</title><rect x="20.7739%" y="357" width="0.0357%" height="15" fill="rgb(236,28,36)" fg:x="51820" fg:w="89"/><text x="21.0239%" y="367.50"></text></g><g><title>tlb_flush_mmu (5,306 samples, 2.13%)</title><rect x="18.6877%" y="405" width="2.1271%" height="15" fill="rgb(249,185,26)" fg:x="46616" fg:w="5306"/><text x="18.9377%" y="415.50">t..</text></g><g><title>free_pages_and_swap_cache (5,300 samples, 2.12%)</title><rect x="18.6901%" y="389" width="2.1247%" height="15" fill="rgb(249,174,33)" fg:x="46622" fg:w="5300"/><text x="18.9401%" y="399.50">f..</text></g><g><title>release_pages (4,670 samples, 1.87%)</title><rect x="18.9426%" y="373" width="1.8721%" height="15" fill="rgb(233,201,37)" fg:x="47252" fg:w="4670"/><text x="19.1926%" y="383.50">r..</text></g><g><title>unlock_page_memcg (55 samples, 0.02%)</title><rect x="20.8148%" y="405" width="0.0220%" height="15" fill="rgb(221,78,26)" fg:x="51922" fg:w="55"/><text x="21.0648%" y="415.50"></text></g><g><title>unmap_region (9,077 samples, 3.64%)</title><rect x="17.2369%" y="501" width="3.6388%" height="15" fill="rgb(250,127,30)" fg:x="42997" fg:w="9077"/><text x="17.4869%" y="511.50">unma..</text></g><g><title>unmap_vmas (8,854 samples, 3.55%)</title><rect x="17.3263%" y="485" width="3.5494%" height="15" fill="rgb(230,49,44)" fg:x="43220" fg:w="8854"/><text x="17.5763%" y="495.50">unma..</text></g><g><title>unmap_single_vma (8,852 samples, 3.55%)</title><rect x="17.3271%" y="469" width="3.5486%" height="15" fill="rgb(229,67,23)" fg:x="43222" fg:w="8852"/><text x="17.5771%" y="479.50">unma..</text></g><g><title>unmap_page_range (8,852 samples, 3.55%)</title><rect x="17.3271%" y="453" width="3.5486%" height="15" fill="rgb(249,83,47)" fg:x="43222" fg:w="8852"/><text x="17.5771%" y="463.50">unma..</text></g><g><title>zap_pmd_range.isra.0 (8,851 samples, 3.55%)</title><rect x="17.3275%" y="437" width="3.5482%" height="15" fill="rgb(215,43,3)" fg:x="43223" fg:w="8851"/><text x="17.5775%" y="447.50">zap_..</text></g><g><title>zap_pte_range (8,769 samples, 3.52%)</title><rect x="17.3603%" y="421" width="3.5154%" height="15" fill="rgb(238,154,13)" fg:x="43305" fg:w="8769"/><text x="17.6103%" y="431.50">zap..</text></g><g><title>vm_normal_page (97 samples, 0.04%)</title><rect x="20.8368%" y="405" width="0.0389%" height="15" fill="rgb(219,56,2)" fg:x="51977" fg:w="97"/><text x="21.0868%" y="415.50"></text></g><g><title>__do_munmap (9,081 samples, 3.64%)</title><rect x="17.2357%" y="517" width="3.6404%" height="15" fill="rgb(233,0,4)" fg:x="42994" fg:w="9081"/><text x="17.4857%" y="527.50">__do..</text></g><g><title>__x64_sys_munmap (9,084 samples, 3.64%)</title><rect x="17.2357%" y="549" width="3.6416%" height="15" fill="rgb(235,30,7)" fg:x="42994" fg:w="9084"/><text x="17.4857%" y="559.50">__x6..</text></g><g><title>__vm_munmap (9,084 samples, 3.64%)</title><rect x="17.2357%" y="533" width="3.6416%" height="15" fill="rgb(250,79,13)" fg:x="42994" fg:w="9084"/><text x="17.4857%" y="543.50">__vm..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (44,612 samples, 17.88%)</title><rect x="2.9938%" y="789" width="17.8843%" height="15" fill="rgb(211,146,34)" fg:x="7468" fg:w="44612"/><text x="3.2438%" y="799.50">hprof_slurp::result_recorder..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (44,612 samples, 17.88%)</title><rect x="2.9938%" y="773" width="17.8843%" height="15" fill="rgb(228,22,38)" fg:x="7468" fg:w="44612"/><text x="3.2438%" y="783.50">core::iter::traits::iterator..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (44,612 samples, 17.88%)</title><rect x="2.9938%" y="757" width="17.8843%" height="15" fill="rgb(235,168,5)" fg:x="7468" fg:w="44612"/><text x="3.2438%" y="767.50">core::iter::traits::iterator..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;hprof_slurp::record::Record&gt;&gt; (9,088 samples, 3.64%)</title><rect x="17.2349%" y="741" width="3.6432%" height="15" fill="rgb(221,155,16)" fg:x="42992" fg:w="9088"/><text x="17.4849%" y="751.50">core..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,088 samples, 3.64%)</title><rect x="17.2349%" y="725" width="3.6432%" height="15" fill="rgb(215,215,53)" fg:x="42992" fg:w="9088"/><text x="17.4849%" y="735.50">&lt;all..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;hprof_slurp::record::Record,alloc::alloc::Global&gt;&gt; (9,088 samples, 3.64%)</title><rect x="17.2349%" y="709" width="3.6432%" height="15" fill="rgb(223,4,10)" fg:x="42992" fg:w="9088"/><text x="17.4849%" y="719.50">core..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,088 samples, 3.64%)</title><rect x="17.2349%" y="693" width="3.6432%" height="15" fill="rgb(234,103,6)" fg:x="42992" fg:w="9088"/><text x="17.4849%" y="703.50">&lt;&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;hprof_slurp::record::Record&gt;&gt; (9,088 samples, 3.64%)</title><rect x="17.2349%" y="677" width="3.6432%" height="15" fill="rgb(227,97,0)" fg:x="42992" fg:w="9088"/><text x="17.4849%" y="687.50">core..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9,088 samples, 3.64%)</title><rect x="17.2349%" y="661" width="3.6432%" height="15" fill="rgb(234,150,53)" fg:x="42992" fg:w="9088"/><text x="17.4849%" y="671.50">&lt;all..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9,088 samples, 3.64%)</title><rect x="17.2349%" y="645" width="3.6432%" height="15" fill="rgb(228,201,54)" fg:x="42992" fg:w="9088"/><text x="17.4849%" y="655.50">&lt;all..</text></g><g><title>alloc::alloc::dealloc (9,088 samples, 3.64%)</title><rect x="17.2349%" y="629" width="3.6432%" height="15" fill="rgb(222,22,37)" fg:x="42992" fg:w="9088"/><text x="17.4849%" y="639.50">allo..</text></g><g><title>__free (9,088 samples, 3.64%)</title><rect x="17.2349%" y="613" width="3.6432%" height="15" fill="rgb(237,53,32)" fg:x="42992" fg:w="9088"/><text x="17.4849%" y="623.50">__fr..</text></g><g><title>__GI___munmap (9,088 samples, 3.64%)</title><rect x="17.2349%" y="597" width="3.6432%" height="15" fill="rgb(233,25,53)" fg:x="42992" fg:w="9088"/><text x="17.4849%" y="607.50">__GI..</text></g><g><title>entry_SYSCALL_64_after_hwframe (9,088 samples, 3.64%)</title><rect x="17.2349%" y="581" width="3.6432%" height="15" fill="rgb(210,40,34)" fg:x="42992" fg:w="9088"/><text x="17.4849%" y="591.50">entr..</text></g><g><title>do_syscall_64 (9,088 samples, 3.64%)</title><rect x="17.2349%" y="565" width="3.6432%" height="15" fill="rgb(241,220,44)" fg:x="42992" fg:w="9088"/><text x="17.4849%" y="575.50">do_s..</text></g><g><title>__GI___clone (44,672 samples, 17.91%)</title><rect x="2.9766%" y="1013" width="17.9083%" height="15" fill="rgb(235,28,35)" fg:x="7425" fg:w="44672"/><text x="3.2266%" y="1023.50">__GI___clone</text></g><g><title>start_thread (44,667 samples, 17.91%)</title><rect x="2.9786%" y="997" width="17.9063%" height="15" fill="rgb(210,56,17)" fg:x="7430" fg:w="44667"/><text x="3.2286%" y="1007.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (44,666 samples, 17.91%)</title><rect x="2.9790%" y="981" width="17.9059%" height="15" fill="rgb(224,130,29)" fg:x="7431" fg:w="44666"/><text x="3.2290%" y="991.50">std::sys::unix::thread::Thre..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (44,666 samples, 17.91%)</title><rect x="2.9790%" y="965" width="17.9059%" height="15" fill="rgb(235,212,8)" fg:x="7431" fg:w="44666"/><text x="3.2290%" y="975.50">&lt;alloc::boxed::Box&lt;F,A&gt; as c..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (44,666 samples, 17.91%)</title><rect x="2.9790%" y="949" width="17.9059%" height="15" fill="rgb(223,33,50)" fg:x="7431" fg:w="44666"/><text x="3.2290%" y="959.50">&lt;alloc::boxed::Box&lt;F,A&gt; as c..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (44,666 samples, 17.91%)</title><rect x="2.9790%" y="933" width="17.9059%" height="15" fill="rgb(219,149,13)" fg:x="7431" fg:w="44666"/><text x="3.2290%" y="943.50">core::ops::function::FnOnce:..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (44,666 samples, 17.91%)</title><rect x="2.9790%" y="917" width="17.9059%" height="15" fill="rgb(250,156,29)" fg:x="7431" fg:w="44666"/><text x="3.2290%" y="927.50">std::thread::Builder::spawn_..</text></g><g><title>std::panic::catch_unwind (44,666 samples, 17.91%)</title><rect x="2.9790%" y="901" width="17.9059%" height="15" fill="rgb(216,193,19)" fg:x="7431" fg:w="44666"/><text x="3.2290%" y="911.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (44,666 samples, 17.91%)</title><rect x="2.9790%" y="885" width="17.9059%" height="15" fill="rgb(216,135,14)" fg:x="7431" fg:w="44666"/><text x="3.2290%" y="895.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (44,666 samples, 17.91%)</title><rect x="2.9790%" y="869" width="17.9059%" height="15" fill="rgb(241,47,5)" fg:x="7431" fg:w="44666"/><text x="3.2290%" y="879.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (44,666 samples, 17.91%)</title><rect x="2.9790%" y="853" width="17.9059%" height="15" fill="rgb(233,42,35)" fg:x="7431" fg:w="44666"/><text x="3.2290%" y="863.50">&lt;core::panic::unwind_safe::A..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (44,666 samples, 17.91%)</title><rect x="2.9790%" y="837" width="17.9059%" height="15" fill="rgb(231,13,6)" fg:x="7431" fg:w="44666"/><text x="3.2290%" y="847.50">std::thread::Builder::spawn_..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (44,666 samples, 17.91%)</title><rect x="2.9790%" y="821" width="17.9059%" height="15" fill="rgb(207,181,40)" fg:x="7431" fg:w="44666"/><text x="3.2290%" y="831.50">std::sys_common::backtrace::..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start_recorder::{{closure}} (44,666 samples, 17.91%)</title><rect x="2.9790%" y="805" width="17.9059%" height="15" fill="rgb(254,173,49)" fg:x="7431" fg:w="44666"/><text x="3.2290%" y="815.50">hprof_slurp::result_recorder..</text></g><g><title>__irqentry_text_end (77 samples, 0.03%)</title><rect x="20.8885%" y="1013" width="0.0309%" height="15" fill="rgb(221,1,38)" fg:x="52106" fg:w="77"/><text x="21.1385%" y="1023.50"></text></g><g><title>asm_exc_page_fault (6,011 samples, 2.41%)</title><rect x="21.0629%" y="405" width="2.4097%" height="15" fill="rgb(206,124,46)" fg:x="52541" fg:w="6011"/><text x="21.3129%" y="415.50">as..</text></g><g><title>copy_page_to_iter (247 samples, 0.10%)</title><rect x="23.4726%" y="405" width="0.0990%" height="15" fill="rgb(249,21,11)" fg:x="58552" fg:w="247"/><text x="23.7226%" y="415.50"></text></g><g><title>__read_end_io (40 samples, 0.02%)</title><rect x="26.4917%" y="165" width="0.0160%" height="15" fill="rgb(222,201,40)" fg:x="66083" fg:w="40"/><text x="26.7417%" y="175.50"></text></g><g><title>blk_update_request (66 samples, 0.03%)</title><rect x="26.4877%" y="213" width="0.0265%" height="15" fill="rgb(235,61,29)" fg:x="66073" fg:w="66"/><text x="26.7377%" y="223.50"></text></g><g><title>bio_endio (59 samples, 0.02%)</title><rect x="26.4905%" y="197" width="0.0237%" height="15" fill="rgb(219,207,3)" fg:x="66080" fg:w="59"/><text x="26.7405%" y="207.50"></text></g><g><title>mpage_end_io (56 samples, 0.02%)</title><rect x="26.4917%" y="181" width="0.0224%" height="15" fill="rgb(222,56,46)" fg:x="66083" fg:w="56"/><text x="26.7417%" y="191.50"></text></g><g><title>blk_mq_end_request (68 samples, 0.03%)</title><rect x="26.4877%" y="229" width="0.0273%" height="15" fill="rgb(239,76,54)" fg:x="66073" fg:w="68"/><text x="26.7377%" y="239.50"></text></g><g><title>nvme_complete_rq (69 samples, 0.03%)</title><rect x="26.4877%" y="245" width="0.0277%" height="15" fill="rgb(231,124,27)" fg:x="66073" fg:w="69"/><text x="26.7377%" y="255.50"></text></g><g><title>nvme_irq (82 samples, 0.03%)</title><rect x="26.4849%" y="293" width="0.0329%" height="15" fill="rgb(249,195,6)" fg:x="66066" fg:w="82"/><text x="26.7349%" y="303.50"></text></g><g><title>nvme_process_cq (82 samples, 0.03%)</title><rect x="26.4849%" y="277" width="0.0329%" height="15" fill="rgb(237,174,47)" fg:x="66066" fg:w="82"/><text x="26.7349%" y="287.50"></text></g><g><title>nvme_pci_complete_rq (77 samples, 0.03%)</title><rect x="26.4869%" y="261" width="0.0309%" height="15" fill="rgb(206,201,31)" fg:x="66071" fg:w="77"/><text x="26.7369%" y="271.50"></text></g><g><title>__handle_irq_event_percpu (84 samples, 0.03%)</title><rect x="26.4845%" y="309" width="0.0337%" height="15" fill="rgb(231,57,52)" fg:x="66065" fg:w="84"/><text x="26.7345%" y="319.50"></text></g><g><title>handle_irq_event (86 samples, 0.03%)</title><rect x="26.4845%" y="325" width="0.0345%" height="15" fill="rgb(248,177,22)" fg:x="66065" fg:w="86"/><text x="26.7345%" y="335.50"></text></g><g><title>asm_common_interrupt (93 samples, 0.04%)</title><rect x="26.4829%" y="389" width="0.0373%" height="15" fill="rgb(215,211,37)" fg:x="66061" fg:w="93"/><text x="26.7329%" y="399.50"></text></g><g><title>common_interrupt (93 samples, 0.04%)</title><rect x="26.4829%" y="373" width="0.0373%" height="15" fill="rgb(241,128,51)" fg:x="66061" fg:w="93"/><text x="26.7329%" y="383.50"></text></g><g><title>__common_interrupt (92 samples, 0.04%)</title><rect x="26.4833%" y="357" width="0.0369%" height="15" fill="rgb(227,165,31)" fg:x="66062" fg:w="92"/><text x="26.7333%" y="367.50"></text></g><g><title>handle_edge_irq (92 samples, 0.04%)</title><rect x="26.4833%" y="341" width="0.0369%" height="15" fill="rgb(228,167,24)" fg:x="66062" fg:w="92"/><text x="26.7333%" y="351.50"></text></g><g><title>nvme_complete_rq (29 samples, 0.01%)</title><rect x="26.6793%" y="197" width="0.0116%" height="15" fill="rgb(228,143,12)" fg:x="66551" fg:w="29"/><text x="26.9293%" y="207.50"></text></g><g><title>blk_mq_end_request (29 samples, 0.01%)</title><rect x="26.6793%" y="181" width="0.0116%" height="15" fill="rgb(249,149,8)" fg:x="66551" fg:w="29"/><text x="26.9293%" y="191.50"></text></g><g><title>blk_update_request (27 samples, 0.01%)</title><rect x="26.6801%" y="165" width="0.0108%" height="15" fill="rgb(243,35,44)" fg:x="66553" fg:w="27"/><text x="26.9301%" y="175.50"></text></g><g><title>bio_endio (26 samples, 0.01%)</title><rect x="26.6805%" y="149" width="0.0104%" height="15" fill="rgb(246,89,9)" fg:x="66554" fg:w="26"/><text x="26.9305%" y="159.50"></text></g><g><title>handle_edge_irq (34 samples, 0.01%)</title><rect x="26.6785%" y="293" width="0.0136%" height="15" fill="rgb(233,213,13)" fg:x="66549" fg:w="34"/><text x="26.9285%" y="303.50"></text></g><g><title>handle_irq_event (33 samples, 0.01%)</title><rect x="26.6789%" y="277" width="0.0132%" height="15" fill="rgb(233,141,41)" fg:x="66550" fg:w="33"/><text x="26.9289%" y="287.50"></text></g><g><title>__handle_irq_event_percpu (33 samples, 0.01%)</title><rect x="26.6789%" y="261" width="0.0132%" height="15" fill="rgb(239,167,4)" fg:x="66550" fg:w="33"/><text x="26.9289%" y="271.50"></text></g><g><title>nvme_irq (33 samples, 0.01%)</title><rect x="26.6789%" y="245" width="0.0132%" height="15" fill="rgb(209,217,16)" fg:x="66550" fg:w="33"/><text x="26.9289%" y="255.50"></text></g><g><title>nvme_process_cq (33 samples, 0.01%)</title><rect x="26.6789%" y="229" width="0.0132%" height="15" fill="rgb(219,88,35)" fg:x="66550" fg:w="33"/><text x="26.9289%" y="239.50"></text></g><g><title>nvme_pci_complete_rq (32 samples, 0.01%)</title><rect x="26.6793%" y="213" width="0.0128%" height="15" fill="rgb(220,193,23)" fg:x="66551" fg:w="32"/><text x="26.9293%" y="223.50"></text></g><g><title>asm_common_interrupt (37 samples, 0.01%)</title><rect x="26.6777%" y="341" width="0.0148%" height="15" fill="rgb(230,90,52)" fg:x="66547" fg:w="37"/><text x="26.9277%" y="351.50"></text></g><g><title>common_interrupt (37 samples, 0.01%)</title><rect x="26.6777%" y="325" width="0.0148%" height="15" fill="rgb(252,106,19)" fg:x="66547" fg:w="37"/><text x="26.9277%" y="335.50"></text></g><g><title>__common_interrupt (37 samples, 0.01%)</title><rect x="26.6777%" y="309" width="0.0148%" height="15" fill="rgb(206,74,20)" fg:x="66547" fg:w="37"/><text x="26.9277%" y="319.50"></text></g><g><title>down_read_trylock (161 samples, 0.06%)</title><rect x="26.6986%" y="341" width="0.0645%" height="15" fill="rgb(230,138,44)" fg:x="66599" fg:w="161"/><text x="26.9486%" y="351.50"></text></g><g><title>find_vma (82 samples, 0.03%)</title><rect x="26.7635%" y="341" width="0.0329%" height="15" fill="rgb(235,182,43)" fg:x="66761" fg:w="82"/><text x="27.0135%" y="351.50"></text></g><g><title>vmacache_find (61 samples, 0.02%)</title><rect x="26.7719%" y="325" width="0.0245%" height="15" fill="rgb(242,16,51)" fg:x="66782" fg:w="61"/><text x="27.0219%" y="335.50"></text></g><g><title>__count_memcg_events (54 samples, 0.02%)</title><rect x="26.8793%" y="325" width="0.0216%" height="15" fill="rgb(248,9,4)" fg:x="67050" fg:w="54"/><text x="27.1293%" y="335.50"></text></g><g><title>_raw_spin_lock (113 samples, 0.05%)</title><rect x="27.1299%" y="293" width="0.0453%" height="15" fill="rgb(210,31,22)" fg:x="67675" fg:w="113"/><text x="27.3799%" y="303.50"></text></g><g><title>alloc_pages (25 samples, 0.01%)</title><rect x="27.3163%" y="245" width="0.0100%" height="15" fill="rgb(239,54,39)" fg:x="68140" fg:w="25"/><text x="27.5663%" y="255.50"></text></g><g><title>__pte_alloc (28 samples, 0.01%)</title><rect x="27.3159%" y="277" width="0.0112%" height="15" fill="rgb(230,99,41)" fg:x="68139" fg:w="28"/><text x="27.5659%" y="287.50"></text></g><g><title>pte_alloc_one (27 samples, 0.01%)</title><rect x="27.3163%" y="261" width="0.0108%" height="15" fill="rgb(253,106,12)" fg:x="68140" fg:w="27"/><text x="27.5663%" y="271.50"></text></g><g><title>__next_zones_zonelist (95 samples, 0.04%)</title><rect x="27.4787%" y="245" width="0.0381%" height="15" fill="rgb(213,46,41)" fg:x="68545" fg:w="95"/><text x="27.7287%" y="255.50"></text></g><g><title>__inc_numa_state (40 samples, 0.02%)</title><rect x="27.5969%" y="229" width="0.0160%" height="15" fill="rgb(215,133,35)" fg:x="68840" fg:w="40"/><text x="27.8469%" y="239.50"></text></g><g><title>nvme_complete_rq (26 samples, 0.01%)</title><rect x="28.6833%" y="69" width="0.0104%" height="15" fill="rgb(213,28,5)" fg:x="71550" fg:w="26"/><text x="28.9333%" y="79.50"></text></g><g><title>blk_mq_end_request (26 samples, 0.01%)</title><rect x="28.6833%" y="53" width="0.0104%" height="15" fill="rgb(215,77,49)" fg:x="71550" fg:w="26"/><text x="28.9333%" y="63.50"></text></g><g><title>asm_common_interrupt (27 samples, 0.01%)</title><rect x="28.6833%" y="213" width="0.0108%" height="15" fill="rgb(248,100,22)" fg:x="71550" fg:w="27"/><text x="28.9333%" y="223.50"></text></g><g><title>common_interrupt (27 samples, 0.01%)</title><rect x="28.6833%" y="197" width="0.0108%" height="15" fill="rgb(208,67,9)" fg:x="71550" fg:w="27"/><text x="28.9333%" y="207.50"></text></g><g><title>__common_interrupt (27 samples, 0.01%)</title><rect x="28.6833%" y="181" width="0.0108%" height="15" fill="rgb(219,133,21)" fg:x="71550" fg:w="27"/><text x="28.9333%" y="191.50"></text></g><g><title>handle_edge_irq (27 samples, 0.01%)</title><rect x="28.6833%" y="165" width="0.0108%" height="15" fill="rgb(246,46,29)" fg:x="71550" fg:w="27"/><text x="28.9333%" y="175.50"></text></g><g><title>handle_irq_event (27 samples, 0.01%)</title><rect x="28.6833%" y="149" width="0.0108%" height="15" fill="rgb(246,185,52)" fg:x="71550" fg:w="27"/><text x="28.9333%" y="159.50"></text></g><g><title>__handle_irq_event_percpu (27 samples, 0.01%)</title><rect x="28.6833%" y="133" width="0.0108%" height="15" fill="rgb(252,136,11)" fg:x="71550" fg:w="27"/><text x="28.9333%" y="143.50"></text></g><g><title>nvme_irq (27 samples, 0.01%)</title><rect x="28.6833%" y="117" width="0.0108%" height="15" fill="rgb(219,138,53)" fg:x="71550" fg:w="27"/><text x="28.9333%" y="127.50"></text></g><g><title>nvme_process_cq (27 samples, 0.01%)</title><rect x="28.6833%" y="101" width="0.0108%" height="15" fill="rgb(211,51,23)" fg:x="71550" fg:w="27"/><text x="28.9333%" y="111.50"></text></g><g><title>nvme_pci_complete_rq (27 samples, 0.01%)</title><rect x="28.6833%" y="85" width="0.0108%" height="15" fill="rgb(247,221,28)" fg:x="71550" fg:w="27"/><text x="28.9333%" y="95.50"></text></g><g><title>clear_page_erms (2,693 samples, 1.08%)</title><rect x="27.6170%" y="229" width="1.0796%" height="15" fill="rgb(251,222,45)" fg:x="68890" fg:w="2693"/><text x="27.8670%" y="239.50"></text></g><g><title>kernel_init_free_pages (39 samples, 0.02%)</title><rect x="28.6966%" y="229" width="0.0156%" height="15" fill="rgb(217,162,53)" fg:x="71583" fg:w="39"/><text x="28.9466%" y="239.50"></text></g><g><title>rmqueue (901 samples, 0.36%)</title><rect x="28.7122%" y="229" width="0.3612%" height="15" fill="rgb(229,93,14)" fg:x="71622" fg:w="901"/><text x="28.9622%" y="239.50"></text></g><g><title>rmqueue_bulk.constprop.0 (631 samples, 0.25%)</title><rect x="28.8204%" y="213" width="0.2530%" height="15" fill="rgb(209,67,49)" fg:x="71892" fg:w="631"/><text x="29.0704%" y="223.50"></text></g><g><title>get_page_from_freelist (3,880 samples, 1.56%)</title><rect x="27.5184%" y="245" width="1.5554%" height="15" fill="rgb(213,87,29)" fg:x="68644" fg:w="3880"/><text x="27.7684%" y="255.50"></text></g><g><title>__alloc_pages (4,222 samples, 1.69%)</title><rect x="27.3921%" y="261" width="1.6925%" height="15" fill="rgb(205,151,52)" fg:x="68329" fg:w="4222"/><text x="27.6421%" y="271.50"></text></g><g><title>__next_zones_zonelist (26 samples, 0.01%)</title><rect x="29.0866%" y="261" width="0.0104%" height="15" fill="rgb(253,215,39)" fg:x="72556" fg:w="26"/><text x="29.3366%" y="271.50"></text></g><g><title>alloc_pages_vma (4,469 samples, 1.79%)</title><rect x="27.3279%" y="277" width="1.7916%" height="15" fill="rgb(221,220,41)" fg:x="68169" fg:w="4469"/><text x="27.5779%" y="287.50">a..</text></g><g><title>cgroup_throttle_swaprate (172 samples, 0.07%)</title><rect x="29.1203%" y="277" width="0.0690%" height="15" fill="rgb(218,133,21)" fg:x="72640" fg:w="172"/><text x="29.3703%" y="287.50"></text></g><g><title>get_mem_cgroup_from_mm (39 samples, 0.02%)</title><rect x="29.1892%" y="277" width="0.0156%" height="15" fill="rgb(221,193,43)" fg:x="72812" fg:w="39"/><text x="29.4392%" y="287.50"></text></g><g><title>__lock_text_start (25 samples, 0.01%)</title><rect x="29.3095%" y="229" width="0.0100%" height="15" fill="rgb(240,128,52)" fg:x="73112" fg:w="25"/><text x="29.5595%" y="239.50"></text></g><g><title>__mod_memcg_state.part.0 (28 samples, 0.01%)</title><rect x="29.5982%" y="181" width="0.0112%" height="15" fill="rgb(253,114,12)" fg:x="73832" fg:w="28"/><text x="29.8482%" y="191.50"></text></g><g><title>__mod_memcg_lruvec_state (134 samples, 0.05%)</title><rect x="29.5593%" y="197" width="0.0537%" height="15" fill="rgb(215,223,47)" fg:x="73735" fg:w="134"/><text x="29.8093%" y="207.50"></text></g><g><title>__mod_lruvec_state (193 samples, 0.08%)</title><rect x="29.5488%" y="213" width="0.0774%" height="15" fill="rgb(248,225,23)" fg:x="73709" fg:w="193"/><text x="29.7988%" y="223.50"></text></g><g><title>__pagevec_lru_add_fn (910 samples, 0.36%)</title><rect x="29.3344%" y="229" width="0.3648%" height="15" fill="rgb(250,108,0)" fg:x="73174" fg:w="910"/><text x="29.5844%" y="239.50"></text></g><g><title>page_mapping (113 samples, 0.05%)</title><rect x="29.6539%" y="213" width="0.0453%" height="15" fill="rgb(228,208,7)" fg:x="73971" fg:w="113"/><text x="29.9039%" y="223.50"></text></g><g><title>lock_page_lruvec_irqsave (40 samples, 0.02%)</title><rect x="29.7004%" y="229" width="0.0160%" height="15" fill="rgb(244,45,10)" fg:x="74087" fg:w="40"/><text x="29.9504%" y="239.50"></text></g><g><title>_raw_spin_lock_irqsave (33 samples, 0.01%)</title><rect x="29.7032%" y="213" width="0.0132%" height="15" fill="rgb(207,125,25)" fg:x="74094" fg:w="33"/><text x="29.9532%" y="223.50"></text></g><g><title>__pagevec_lru_add (1,249 samples, 0.50%)</title><rect x="29.2907%" y="245" width="0.5007%" height="15" fill="rgb(210,195,18)" fg:x="73065" fg:w="1249"/><text x="29.5407%" y="255.50"></text></g><g><title>release_pages (150 samples, 0.06%)</title><rect x="29.7312%" y="229" width="0.0601%" height="15" fill="rgb(249,80,12)" fg:x="74164" fg:w="150"/><text x="29.9812%" y="239.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1,440 samples, 0.58%)</title><rect x="29.2165%" y="277" width="0.5773%" height="15" fill="rgb(221,65,9)" fg:x="72880" fg:w="1440"/><text x="29.4665%" y="287.50"></text></g><g><title>lru_cache_add (1,421 samples, 0.57%)</title><rect x="29.2241%" y="261" width="0.5697%" height="15" fill="rgb(235,49,36)" fg:x="72899" fg:w="1421"/><text x="29.4741%" y="271.50"></text></g><g><title>cgroup_rstat_updated (29 samples, 0.01%)</title><rect x="29.9044%" y="245" width="0.0116%" height="15" fill="rgb(225,32,20)" fg:x="74596" fg:w="29"/><text x="30.1544%" y="255.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (843 samples, 0.34%)</title><rect x="29.9161%" y="245" width="0.3379%" height="15" fill="rgb(215,141,46)" fg:x="74625" fg:w="843"/><text x="30.1661%" y="255.50"></text></g><g><title>cgroup_rstat_updated (64 samples, 0.03%)</title><rect x="30.2283%" y="229" width="0.0257%" height="15" fill="rgb(250,160,47)" fg:x="75404" fg:w="64"/><text x="30.4783%" y="239.50"></text></g><g><title>page_counter_try_charge (71 samples, 0.03%)</title><rect x="30.4528%" y="229" width="0.0285%" height="15" fill="rgb(216,222,40)" fg:x="75964" fg:w="71"/><text x="30.7028%" y="239.50"></text></g><g><title>__mem_cgroup_charge (1,648 samples, 0.66%)</title><rect x="29.8218%" y="261" width="0.6607%" height="15" fill="rgb(234,217,39)" fg:x="74390" fg:w="1648"/><text x="30.0718%" y="271.50"></text></g><g><title>try_charge (552 samples, 0.22%)</title><rect x="30.2612%" y="245" width="0.2213%" height="15" fill="rgb(207,178,40)" fg:x="75486" fg:w="552"/><text x="30.5112%" y="255.50"></text></g><g><title>get_mem_cgroup_from_mm (224 samples, 0.09%)</title><rect x="30.4833%" y="261" width="0.0898%" height="15" fill="rgb(221,136,13)" fg:x="76040" fg:w="224"/><text x="30.7333%" y="271.50"></text></g><g><title>memcg_check_events (53 samples, 0.02%)</title><rect x="30.5783%" y="261" width="0.0212%" height="15" fill="rgb(249,199,10)" fg:x="76277" fg:w="53"/><text x="30.8283%" y="271.50"></text></g><g><title>rcu_read_unlock_strict (37 samples, 0.01%)</title><rect x="30.5996%" y="261" width="0.0148%" height="15" fill="rgb(249,222,13)" fg:x="76330" fg:w="37"/><text x="30.8496%" y="271.50"></text></g><g><title>mem_cgroup_charge (2,076 samples, 0.83%)</title><rect x="29.7938%" y="277" width="0.8322%" height="15" fill="rgb(244,185,38)" fg:x="74320" fg:w="2076"/><text x="30.0438%" y="287.50"></text></g><g><title>try_charge (28 samples, 0.01%)</title><rect x="30.6148%" y="261" width="0.0112%" height="15" fill="rgb(236,202,9)" fg:x="76368" fg:w="28"/><text x="30.8648%" y="271.50"></text></g><g><title>__mod_memcg_state.part.0 (25 samples, 0.01%)</title><rect x="30.7363%" y="213" width="0.0100%" height="15" fill="rgb(250,229,37)" fg:x="76671" fg:w="25"/><text x="30.9863%" y="223.50"></text></g><g><title>__mod_memcg_lruvec_state (141 samples, 0.06%)</title><rect x="30.6938%" y="229" width="0.0565%" height="15" fill="rgb(206,174,23)" fg:x="76565" fg:w="141"/><text x="30.9438%" y="239.50"></text></g><g><title>__mod_lruvec_state (272 samples, 0.11%)</title><rect x="30.6825%" y="245" width="0.1090%" height="15" fill="rgb(211,33,43)" fg:x="76537" fg:w="272"/><text x="30.9325%" y="255.50"></text></g><g><title>__mod_node_page_state (82 samples, 0.03%)</title><rect x="30.7587%" y="229" width="0.0329%" height="15" fill="rgb(245,58,50)" fg:x="76727" fg:w="82"/><text x="31.0087%" y="239.50"></text></g><g><title>__mod_node_page_state (31 samples, 0.01%)</title><rect x="30.7928%" y="245" width="0.0124%" height="15" fill="rgb(244,68,36)" fg:x="76812" fg:w="31"/><text x="31.0428%" y="255.50"></text></g><g><title>__mod_lruvec_page_state (400 samples, 0.16%)</title><rect x="30.6481%" y="261" width="0.1604%" height="15" fill="rgb(232,229,15)" fg:x="76451" fg:w="400"/><text x="30.8981%" y="271.50"></text></g><g><title>__page_set_anon_rmap (32 samples, 0.01%)</title><rect x="30.8116%" y="261" width="0.0128%" height="15" fill="rgb(254,30,23)" fg:x="76859" fg:w="32"/><text x="31.0616%" y="271.50"></text></g><g><title>page_add_new_anon_rmap (493 samples, 0.20%)</title><rect x="30.6288%" y="277" width="0.1976%" height="15" fill="rgb(235,160,14)" fg:x="76403" fg:w="493"/><text x="30.8788%" y="287.50"></text></g><g><title>pmd_page_vaddr (28 samples, 0.01%)</title><rect x="30.8313%" y="277" width="0.0112%" height="15" fill="rgb(212,155,44)" fg:x="76908" fg:w="28"/><text x="31.0813%" y="287.50"></text></g><g><title>pmd_pfn (27 samples, 0.01%)</title><rect x="30.8425%" y="277" width="0.0108%" height="15" fill="rgb(226,2,50)" fg:x="76936" fg:w="27"/><text x="31.0925%" y="287.50"></text></g><g><title>do_anonymous_page (9,205 samples, 3.69%)</title><rect x="27.1896%" y="293" width="3.6901%" height="15" fill="rgb(234,177,6)" fg:x="67824" fg:w="9205"/><text x="27.4396%" y="303.50">do_a..</text></g><g><title>pmd_page_vaddr (44 samples, 0.02%)</title><rect x="30.8934%" y="293" width="0.0176%" height="15" fill="rgb(217,24,9)" fg:x="77063" fg:w="44"/><text x="31.1434%" y="303.50"></text></g><g><title>pmd_val (36 samples, 0.01%)</title><rect x="30.9151%" y="293" width="0.0144%" height="15" fill="rgb(220,13,46)" fg:x="77117" fg:w="36"/><text x="31.1651%" y="303.50"></text></g><g><title>handle_pte_fault (9,633 samples, 3.86%)</title><rect x="27.0718%" y="309" width="3.8617%" height="15" fill="rgb(239,221,27)" fg:x="67530" fg:w="9633"/><text x="27.3218%" y="319.50">hand..</text></g><g><title>pmd_val (35 samples, 0.01%)</title><rect x="30.9363%" y="309" width="0.0140%" height="15" fill="rgb(222,198,25)" fg:x="77170" fg:w="35"/><text x="31.1863%" y="319.50"></text></g><g><title>__handle_mm_fault (10,131 samples, 4.06%)</title><rect x="26.9010%" y="325" width="4.0614%" height="15" fill="rgb(211,99,13)" fg:x="67104" fg:w="10131"/><text x="27.1510%" y="335.50">__ha..</text></g><g><title>pud_val (30 samples, 0.01%)</title><rect x="30.9503%" y="309" width="0.0120%" height="15" fill="rgb(232,111,31)" fg:x="77205" fg:w="30"/><text x="31.2003%" y="319.50"></text></g><g><title>pud_val (37 samples, 0.01%)</title><rect x="30.9936%" y="325" width="0.0148%" height="15" fill="rgb(245,82,37)" fg:x="77313" fg:w="37"/><text x="31.2436%" y="335.50"></text></g><g><title>handle_mm_fault (10,521 samples, 4.22%)</title><rect x="26.7964%" y="341" width="4.2177%" height="15" fill="rgb(227,149,46)" fg:x="66843" fg:w="10521"/><text x="27.0464%" y="351.50">handl..</text></g><g><title>mem_cgroup_from_task (29 samples, 0.01%)</title><rect x="31.0141%" y="341" width="0.0116%" height="15" fill="rgb(218,36,50)" fg:x="77364" fg:w="29"/><text x="31.2641%" y="351.50"></text></g><g><title>up_read (157 samples, 0.06%)</title><rect x="31.0353%" y="341" width="0.0629%" height="15" fill="rgb(226,80,48)" fg:x="77417" fg:w="157"/><text x="31.2853%" y="351.50"></text></g><g><title>do_user_addr_fault (11,272 samples, 4.52%)</title><rect x="26.5843%" y="357" width="4.5188%" height="15" fill="rgb(238,224,15)" fg:x="66314" fg:w="11272"/><text x="26.8343%" y="367.50">do_us..</text></g><g><title>exc_page_fault (11,482 samples, 4.60%)</title><rect x="26.5238%" y="373" width="4.6030%" height="15" fill="rgb(241,136,10)" fg:x="66163" fg:w="11482"/><text x="26.7738%" y="383.50">exc_p..</text></g><g><title>asm_exc_page_fault (11,512 samples, 4.61%)</title><rect x="26.5202%" y="389" width="4.6150%" height="15" fill="rgb(208,32,45)" fg:x="66154" fg:w="11512"/><text x="26.7702%" y="399.50">asm_e..</text></g><g><title>copy_user_enhanced_fast_string (18,882 samples, 7.57%)</title><rect x="23.5716%" y="405" width="7.5695%" height="15" fill="rgb(207,135,9)" fg:x="58799" fg:w="18882"/><text x="23.8216%" y="415.50">copy_user_..</text></g><g><title>error_entry (174 samples, 0.07%)</title><rect x="31.1412%" y="405" width="0.0698%" height="15" fill="rgb(206,86,44)" fg:x="77681" fg:w="174"/><text x="31.3912%" y="415.50"></text></g><g><title>__xas_next (25 samples, 0.01%)</title><rect x="31.2249%" y="389" width="0.0100%" height="15" fill="rgb(245,177,15)" fg:x="77890" fg:w="25"/><text x="31.4749%" y="399.50"></text></g><g><title>xas_load (38 samples, 0.02%)</title><rect x="31.4567%" y="373" width="0.0152%" height="15" fill="rgb(206,64,50)" fg:x="78468" fg:w="38"/><text x="31.7067%" y="383.50"></text></g><g><title>filemap_get_read_batch (597 samples, 0.24%)</title><rect x="31.2350%" y="389" width="0.2393%" height="15" fill="rgb(234,36,40)" fg:x="77915" fg:w="597"/><text x="31.4850%" y="399.50"></text></g><g><title>__schedule (28 samples, 0.01%)</title><rect x="31.4763%" y="325" width="0.0112%" height="15" fill="rgb(213,64,8)" fg:x="78517" fg:w="28"/><text x="31.7263%" y="335.50"></text></g><g><title>filemap_update_page (34 samples, 0.01%)</title><rect x="31.4743%" y="389" width="0.0136%" height="15" fill="rgb(210,75,36)" fg:x="78512" fg:w="34"/><text x="31.7243%" y="399.50"></text></g><g><title>wait_on_page_bit_common (33 samples, 0.01%)</title><rect x="31.4747%" y="373" width="0.0132%" height="15" fill="rgb(229,88,21)" fg:x="78513" fg:w="33"/><text x="31.7247%" y="383.50"></text></g><g><title>io_schedule (31 samples, 0.01%)</title><rect x="31.4755%" y="357" width="0.0124%" height="15" fill="rgb(252,204,47)" fg:x="78515" fg:w="31"/><text x="31.7255%" y="367.50"></text></g><g><title>schedule (29 samples, 0.01%)</title><rect x="31.4763%" y="341" width="0.0116%" height="15" fill="rgb(208,77,27)" fg:x="78517" fg:w="29"/><text x="31.7263%" y="351.50"></text></g><g><title>__next_zones_zonelist (40 samples, 0.02%)</title><rect x="31.6812%" y="293" width="0.0160%" height="15" fill="rgb(221,76,26)" fg:x="79028" fg:w="40"/><text x="31.9312%" y="303.50"></text></g><g><title>__inc_numa_state (33 samples, 0.01%)</title><rect x="31.7645%" y="277" width="0.0132%" height="15" fill="rgb(225,139,18)" fg:x="79236" fg:w="33"/><text x="32.0145%" y="287.50"></text></g><g><title>__read_end_io (25 samples, 0.01%)</title><rect x="32.7507%" y="37" width="0.0100%" height="15" fill="rgb(230,137,11)" fg:x="81696" fg:w="25"/><text x="33.0007%" y="47.50"></text></g><g><title>nvme_complete_rq (39 samples, 0.02%)</title><rect x="32.7503%" y="117" width="0.0156%" height="15" fill="rgb(212,28,1)" fg:x="81695" fg:w="39"/><text x="33.0003%" y="127.50"></text></g><g><title>blk_mq_end_request (39 samples, 0.02%)</title><rect x="32.7503%" y="101" width="0.0156%" height="15" fill="rgb(248,164,17)" fg:x="81695" fg:w="39"/><text x="33.0003%" y="111.50"></text></g><g><title>blk_update_request (39 samples, 0.02%)</title><rect x="32.7503%" y="85" width="0.0156%" height="15" fill="rgb(222,171,42)" fg:x="81695" fg:w="39"/><text x="33.0003%" y="95.50"></text></g><g><title>bio_endio (38 samples, 0.02%)</title><rect x="32.7507%" y="69" width="0.0152%" height="15" fill="rgb(243,84,45)" fg:x="81696" fg:w="38"/><text x="33.0007%" y="79.50"></text></g><g><title>mpage_end_io (38 samples, 0.02%)</title><rect x="32.7507%" y="53" width="0.0152%" height="15" fill="rgb(252,49,23)" fg:x="81696" fg:w="38"/><text x="33.0007%" y="63.50"></text></g><g><title>asm_common_interrupt (50 samples, 0.02%)</title><rect x="32.7479%" y="261" width="0.0200%" height="15" fill="rgb(215,19,7)" fg:x="81689" fg:w="50"/><text x="32.9979%" y="271.50"></text></g><g><title>common_interrupt (50 samples, 0.02%)</title><rect x="32.7479%" y="245" width="0.0200%" height="15" fill="rgb(238,81,41)" fg:x="81689" fg:w="50"/><text x="32.9979%" y="255.50"></text></g><g><title>__common_interrupt (50 samples, 0.02%)</title><rect x="32.7479%" y="229" width="0.0200%" height="15" fill="rgb(210,199,37)" fg:x="81689" fg:w="50"/><text x="32.9979%" y="239.50"></text></g><g><title>handle_edge_irq (50 samples, 0.02%)</title><rect x="32.7479%" y="213" width="0.0200%" height="15" fill="rgb(244,192,49)" fg:x="81689" fg:w="50"/><text x="32.9979%" y="223.50"></text></g><g><title>handle_irq_event (49 samples, 0.02%)</title><rect x="32.7483%" y="197" width="0.0196%" height="15" fill="rgb(226,211,11)" fg:x="81690" fg:w="49"/><text x="32.9983%" y="207.50"></text></g><g><title>__handle_irq_event_percpu (49 samples, 0.02%)</title><rect x="32.7483%" y="181" width="0.0196%" height="15" fill="rgb(236,162,54)" fg:x="81690" fg:w="49"/><text x="32.9983%" y="191.50"></text></g><g><title>nvme_irq (49 samples, 0.02%)</title><rect x="32.7483%" y="165" width="0.0196%" height="15" fill="rgb(220,229,9)" fg:x="81690" fg:w="49"/><text x="32.9983%" y="175.50"></text></g><g><title>nvme_process_cq (49 samples, 0.02%)</title><rect x="32.7483%" y="149" width="0.0196%" height="15" fill="rgb(250,87,22)" fg:x="81690" fg:w="49"/><text x="32.9983%" y="159.50"></text></g><g><title>nvme_pci_complete_rq (44 samples, 0.02%)</title><rect x="32.7503%" y="133" width="0.0176%" height="15" fill="rgb(239,43,17)" fg:x="81695" fg:w="44"/><text x="33.0003%" y="143.50"></text></g><g><title>clear_page_erms (2,464 samples, 0.99%)</title><rect x="31.7818%" y="277" width="0.9878%" height="15" fill="rgb(231,177,25)" fg:x="79279" fg:w="2464"/><text x="32.0318%" y="287.50"></text></g><g><title>kernel_init_free_pages (48 samples, 0.02%)</title><rect x="32.7696%" y="277" width="0.0192%" height="15" fill="rgb(219,179,1)" fg:x="81743" fg:w="48"/><text x="33.0196%" y="287.50"></text></g><g><title>get_page_from_freelist (3,619 samples, 1.45%)</title><rect x="31.6980%" y="293" width="1.4508%" height="15" fill="rgb(238,219,53)" fg:x="79070" fg:w="3619"/><text x="31.9480%" y="303.50"></text></g><g><title>rmqueue (898 samples, 0.36%)</title><rect x="32.7888%" y="277" width="0.3600%" height="15" fill="rgb(232,167,36)" fg:x="81791" fg:w="898"/><text x="33.0388%" y="287.50"></text></g><g><title>rmqueue_bulk.constprop.0 (612 samples, 0.25%)</title><rect x="32.9035%" y="261" width="0.2453%" height="15" fill="rgb(244,19,51)" fg:x="82077" fg:w="612"/><text x="33.1535%" y="271.50"></text></g><g><title>__alloc_pages (3,938 samples, 1.58%)</title><rect x="31.5853%" y="309" width="1.5787%" height="15" fill="rgb(224,6,22)" fg:x="78789" fg:w="3938"/><text x="31.8353%" y="319.50"></text></g><g><title>policy_nodemask (34 samples, 0.01%)</title><rect x="33.1845%" y="309" width="0.0136%" height="15" fill="rgb(224,145,5)" fg:x="82778" fg:w="34"/><text x="33.4345%" y="319.50"></text></g><g><title>alloc_pages (4,087 samples, 1.64%)</title><rect x="31.5633%" y="325" width="1.6384%" height="15" fill="rgb(234,130,49)" fg:x="78734" fg:w="4087"/><text x="31.8133%" y="335.50"></text></g><g><title>__page_cache_alloc (4,155 samples, 1.67%)</title><rect x="31.5477%" y="341" width="1.6657%" height="15" fill="rgb(254,6,2)" fg:x="78695" fg:w="4155"/><text x="31.7977%" y="351.50"></text></g><g><title>__mod_memcg_state.part.0 (27 samples, 0.01%)</title><rect x="34.1374%" y="261" width="0.0108%" height="15" fill="rgb(208,96,46)" fg:x="85155" fg:w="27"/><text x="34.3874%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (125 samples, 0.05%)</title><rect x="34.1005%" y="277" width="0.0501%" height="15" fill="rgb(239,3,39)" fg:x="85063" fg:w="125"/><text x="34.3505%" y="287.50"></text></g><g><title>__mod_lruvec_state (265 samples, 0.11%)</title><rect x="34.0925%" y="293" width="0.1062%" height="15" fill="rgb(233,210,1)" fg:x="85043" fg:w="265"/><text x="34.3425%" y="303.50"></text></g><g><title>__mod_node_page_state (96 samples, 0.04%)</title><rect x="34.1602%" y="277" width="0.0385%" height="15" fill="rgb(244,137,37)" fg:x="85212" fg:w="96"/><text x="34.4102%" y="287.50"></text></g><g><title>__mod_node_page_state (27 samples, 0.01%)</title><rect x="34.2003%" y="293" width="0.0108%" height="15" fill="rgb(240,136,2)" fg:x="85312" fg:w="27"/><text x="34.4503%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (384 samples, 0.15%)</title><rect x="34.0616%" y="309" width="0.1539%" height="15" fill="rgb(239,18,37)" fg:x="84966" fg:w="384"/><text x="34.3116%" y="319.50"></text></g><g><title>_raw_spin_lock_irq (146 samples, 0.06%)</title><rect x="34.2200%" y="309" width="0.0585%" height="15" fill="rgb(218,185,22)" fg:x="85361" fg:w="146"/><text x="34.4700%" y="319.50"></text></g><g><title>__read_end_io (49 samples, 0.02%)</title><rect x="34.2817%" y="85" width="0.0196%" height="15" fill="rgb(225,218,4)" fg:x="85515" fg:w="49"/><text x="34.5317%" y="95.50"></text></g><g><title>blk_update_request (82 samples, 0.03%)</title><rect x="34.2809%" y="133" width="0.0329%" height="15" fill="rgb(230,182,32)" fg:x="85513" fg:w="82"/><text x="34.5309%" y="143.50"></text></g><g><title>bio_endio (81 samples, 0.03%)</title><rect x="34.2813%" y="117" width="0.0325%" height="15" fill="rgb(242,56,43)" fg:x="85514" fg:w="81"/><text x="34.5313%" y="127.50"></text></g><g><title>mpage_end_io (80 samples, 0.03%)</title><rect x="34.2817%" y="101" width="0.0321%" height="15" fill="rgb(233,99,24)" fg:x="85515" fg:w="80"/><text x="34.5317%" y="111.50"></text></g><g><title>unlock_page (31 samples, 0.01%)</title><rect x="34.3013%" y="85" width="0.0124%" height="15" fill="rgb(234,209,42)" fg:x="85564" fg:w="31"/><text x="34.5513%" y="95.50"></text></g><g><title>nvme_complete_rq (83 samples, 0.03%)</title><rect x="34.2809%" y="165" width="0.0333%" height="15" fill="rgb(227,7,12)" fg:x="85513" fg:w="83"/><text x="34.5309%" y="175.50"></text></g><g><title>blk_mq_end_request (83 samples, 0.03%)</title><rect x="34.2809%" y="149" width="0.0333%" height="15" fill="rgb(245,203,43)" fg:x="85513" fg:w="83"/><text x="34.5309%" y="159.50"></text></g><g><title>__handle_irq_event_percpu (96 samples, 0.04%)</title><rect x="34.2789%" y="229" width="0.0385%" height="15" fill="rgb(238,205,33)" fg:x="85508" fg:w="96"/><text x="34.5289%" y="239.50"></text></g><g><title>nvme_irq (96 samples, 0.04%)</title><rect x="34.2789%" y="213" width="0.0385%" height="15" fill="rgb(231,56,7)" fg:x="85508" fg:w="96"/><text x="34.5289%" y="223.50"></text></g><g><title>nvme_process_cq (96 samples, 0.04%)</title><rect x="34.2789%" y="197" width="0.0385%" height="15" fill="rgb(244,186,29)" fg:x="85508" fg:w="96"/><text x="34.5289%" y="207.50"></text></g><g><title>nvme_pci_complete_rq (92 samples, 0.04%)</title><rect x="34.2805%" y="181" width="0.0369%" height="15" fill="rgb(234,111,31)" fg:x="85512" fg:w="92"/><text x="34.5305%" y="191.50"></text></g><g><title>asm_common_interrupt (99 samples, 0.04%)</title><rect x="34.2785%" y="309" width="0.0397%" height="15" fill="rgb(241,149,10)" fg:x="85507" fg:w="99"/><text x="34.5285%" y="319.50"></text></g><g><title>common_interrupt (99 samples, 0.04%)</title><rect x="34.2785%" y="293" width="0.0397%" height="15" fill="rgb(249,206,44)" fg:x="85507" fg:w="99"/><text x="34.5285%" y="303.50"></text></g><g><title>__common_interrupt (98 samples, 0.04%)</title><rect x="34.2789%" y="277" width="0.0393%" height="15" fill="rgb(251,153,30)" fg:x="85508" fg:w="98"/><text x="34.5289%" y="287.50"></text></g><g><title>handle_edge_irq (98 samples, 0.04%)</title><rect x="34.2789%" y="261" width="0.0393%" height="15" fill="rgb(239,152,38)" fg:x="85508" fg:w="98"/><text x="34.5289%" y="271.50"></text></g><g><title>handle_irq_event (98 samples, 0.04%)</title><rect x="34.2789%" y="245" width="0.0393%" height="15" fill="rgb(249,139,47)" fg:x="85508" fg:w="98"/><text x="34.5289%" y="255.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (80 samples, 0.03%)</title><rect x="34.3980%" y="277" width="0.0321%" height="15" fill="rgb(244,64,35)" fg:x="85805" fg:w="80"/><text x="34.6480%" y="287.50"></text></g><g><title>cgroup_rstat_updated (29 samples, 0.01%)</title><rect x="34.4184%" y="261" width="0.0116%" height="15" fill="rgb(216,46,15)" fg:x="85856" fg:w="29"/><text x="34.6684%" y="271.50"></text></g><g><title>page_counter_try_charge (39 samples, 0.02%)</title><rect x="34.4898%" y="261" width="0.0156%" height="15" fill="rgb(250,74,19)" fg:x="86034" fg:w="39"/><text x="34.7398%" y="271.50"></text></g><g><title>__mem_cgroup_charge (395 samples, 0.16%)</title><rect x="34.3486%" y="293" width="0.1583%" height="15" fill="rgb(249,42,33)" fg:x="85682" fg:w="395"/><text x="34.5986%" y="303.50"></text></g><g><title>try_charge (189 samples, 0.08%)</title><rect x="34.4312%" y="277" width="0.0758%" height="15" fill="rgb(242,149,17)" fg:x="85888" fg:w="189"/><text x="34.6812%" y="287.50"></text></g><g><title>get_mem_cgroup_from_mm (45 samples, 0.02%)</title><rect x="34.5074%" y="293" width="0.0180%" height="15" fill="rgb(244,29,21)" fg:x="86078" fg:w="45"/><text x="34.7574%" y="303.50"></text></g><g><title>rcu_read_unlock_strict (48 samples, 0.02%)</title><rect x="34.5355%" y="293" width="0.0192%" height="15" fill="rgb(220,130,37)" fg:x="86148" fg:w="48"/><text x="34.7855%" y="303.50"></text></g><g><title>mem_cgroup_charge (573 samples, 0.23%)</title><rect x="34.3278%" y="309" width="0.2297%" height="15" fill="rgb(211,67,2)" fg:x="85630" fg:w="573"/><text x="34.5778%" y="319.50"></text></g><g><title>xas_load (615 samples, 0.25%)</title><rect x="34.6269%" y="293" width="0.2465%" height="15" fill="rgb(235,68,52)" fg:x="86376" fg:w="615"/><text x="34.8769%" y="303.50"></text></g><g><title>xa_get_order (808 samples, 0.32%)</title><rect x="34.5691%" y="309" width="0.3239%" height="15" fill="rgb(246,142,3)" fg:x="86232" fg:w="808"/><text x="34.8191%" y="319.50"></text></g><g><title>xas_start (49 samples, 0.02%)</title><rect x="34.8734%" y="293" width="0.0196%" height="15" fill="rgb(241,25,7)" fg:x="86991" fg:w="49"/><text x="35.1234%" y="303.50"></text></g><g><title>xas_find_conflict (210 samples, 0.08%)</title><rect x="34.8930%" y="309" width="0.0842%" height="15" fill="rgb(242,119,39)" fg:x="87040" fg:w="210"/><text x="35.1430%" y="319.50"></text></g><g><title>xas_load (28 samples, 0.01%)</title><rect x="34.9772%" y="309" width="0.0112%" height="15" fill="rgb(241,98,45)" fg:x="87250" fg:w="28"/><text x="35.2272%" y="319.50"></text></g><g><title>xas_start (33 samples, 0.01%)</title><rect x="34.9977%" y="309" width="0.0132%" height="15" fill="rgb(254,28,30)" fg:x="87301" fg:w="33"/><text x="35.2477%" y="319.50"></text></g><g><title>workingset_update_node (72 samples, 0.03%)</title><rect x="35.0718%" y="293" width="0.0289%" height="15" fill="rgb(241,142,54)" fg:x="87486" fg:w="72"/><text x="35.3218%" y="303.50"></text></g><g><title>list_lru_del (34 samples, 0.01%)</title><rect x="35.0871%" y="277" width="0.0136%" height="15" fill="rgb(222,85,15)" fg:x="87524" fg:w="34"/><text x="35.3371%" y="287.50"></text></g><g><title>__add_to_page_cache_locked (4,603 samples, 1.85%)</title><rect x="33.2691%" y="325" width="1.8453%" height="15" fill="rgb(210,85,47)" fg:x="82989" fg:w="4603"/><text x="33.5191%" y="335.50">_..</text></g><g><title>xas_store (258 samples, 0.10%)</title><rect x="35.0109%" y="309" width="0.1034%" height="15" fill="rgb(224,206,25)" fg:x="87334" fg:w="258"/><text x="35.2609%" y="319.50"></text></g><g><title>xas_create (34 samples, 0.01%)</title><rect x="35.1007%" y="293" width="0.0136%" height="15" fill="rgb(243,201,19)" fg:x="87558" fg:w="34"/><text x="35.3507%" y="303.50"></text></g><g><title>common_interrupt (32 samples, 0.01%)</title><rect x="35.2166%" y="261" width="0.0128%" height="15" fill="rgb(236,59,4)" fg:x="87847" fg:w="32"/><text x="35.4666%" y="271.50"></text></g><g><title>__common_interrupt (32 samples, 0.01%)</title><rect x="35.2166%" y="245" width="0.0128%" height="15" fill="rgb(254,179,45)" fg:x="87847" fg:w="32"/><text x="35.4666%" y="255.50"></text></g><g><title>handle_edge_irq (32 samples, 0.01%)</title><rect x="35.2166%" y="229" width="0.0128%" height="15" fill="rgb(226,14,10)" fg:x="87847" fg:w="32"/><text x="35.4666%" y="239.50"></text></g><g><title>handle_irq_event (31 samples, 0.01%)</title><rect x="35.2170%" y="213" width="0.0124%" height="15" fill="rgb(244,27,41)" fg:x="87848" fg:w="31"/><text x="35.4670%" y="223.50"></text></g><g><title>__handle_irq_event_percpu (31 samples, 0.01%)</title><rect x="35.2170%" y="197" width="0.0124%" height="15" fill="rgb(235,35,32)" fg:x="87848" fg:w="31"/><text x="35.4670%" y="207.50"></text></g><g><title>nvme_irq (30 samples, 0.01%)</title><rect x="35.2174%" y="181" width="0.0120%" height="15" fill="rgb(218,68,31)" fg:x="87849" fg:w="30"/><text x="35.4674%" y="191.50"></text></g><g><title>nvme_process_cq (30 samples, 0.01%)</title><rect x="35.2174%" y="165" width="0.0120%" height="15" fill="rgb(207,120,37)" fg:x="87849" fg:w="30"/><text x="35.4674%" y="175.50"></text></g><g><title>nvme_pci_complete_rq (29 samples, 0.01%)</title><rect x="35.2178%" y="149" width="0.0116%" height="15" fill="rgb(227,98,0)" fg:x="87850" fg:w="29"/><text x="35.4678%" y="159.50"></text></g><g><title>nvme_complete_rq (29 samples, 0.01%)</title><rect x="35.2178%" y="133" width="0.0116%" height="15" fill="rgb(207,7,3)" fg:x="87850" fg:w="29"/><text x="35.4678%" y="143.50"></text></g><g><title>blk_mq_end_request (29 samples, 0.01%)</title><rect x="35.2178%" y="117" width="0.0116%" height="15" fill="rgb(206,98,19)" fg:x="87850" fg:w="29"/><text x="35.4678%" y="127.50"></text></g><g><title>blk_update_request (29 samples, 0.01%)</title><rect x="35.2178%" y="101" width="0.0116%" height="15" fill="rgb(217,5,26)" fg:x="87850" fg:w="29"/><text x="35.4678%" y="111.50"></text></g><g><title>bio_endio (28 samples, 0.01%)</title><rect x="35.2182%" y="85" width="0.0112%" height="15" fill="rgb(235,190,38)" fg:x="87851" fg:w="28"/><text x="35.4682%" y="95.50"></text></g><g><title>mpage_end_io (28 samples, 0.01%)</title><rect x="35.2182%" y="69" width="0.0112%" height="15" fill="rgb(247,86,24)" fg:x="87851" fg:w="28"/><text x="35.4682%" y="79.50"></text></g><g><title>asm_common_interrupt (33 samples, 0.01%)</title><rect x="35.2166%" y="277" width="0.0132%" height="15" fill="rgb(205,101,16)" fg:x="87847" fg:w="33"/><text x="35.4666%" y="287.50"></text></g><g><title>__lock_text_start (40 samples, 0.02%)</title><rect x="35.2158%" y="293" width="0.0160%" height="15" fill="rgb(246,168,33)" fg:x="87845" fg:w="40"/><text x="35.4658%" y="303.50"></text></g><g><title>__mod_memcg_state.part.0 (28 samples, 0.01%)</title><rect x="35.4655%" y="245" width="0.0112%" height="15" fill="rgb(231,114,1)" fg:x="88468" fg:w="28"/><text x="35.7155%" y="255.50"></text></g><g><title>__mod_memcg_lruvec_state (114 samples, 0.05%)</title><rect x="35.4378%" y="261" width="0.0457%" height="15" fill="rgb(207,184,53)" fg:x="88399" fg:w="114"/><text x="35.6878%" y="271.50"></text></g><g><title>__mod_lruvec_state (183 samples, 0.07%)</title><rect x="35.4286%" y="277" width="0.0734%" height="15" fill="rgb(224,95,51)" fg:x="88376" fg:w="183"/><text x="35.6786%" y="287.50"></text></g><g><title>__mod_node_page_state (25 samples, 0.01%)</title><rect x="35.4920%" y="261" width="0.0100%" height="15" fill="rgb(212,188,45)" fg:x="88534" fg:w="25"/><text x="35.7420%" y="271.50"></text></g><g><title>mem_cgroup_update_lru_size (33 samples, 0.01%)</title><rect x="35.5180%" y="277" width="0.0132%" height="15" fill="rgb(223,154,38)" fg:x="88599" fg:w="33"/><text x="35.7680%" y="287.50"></text></g><g><title>page_mapping (91 samples, 0.04%)</title><rect x="35.5313%" y="277" width="0.0365%" height="15" fill="rgb(251,22,52)" fg:x="88632" fg:w="91"/><text x="35.7813%" y="287.50"></text></g><g><title>__pagevec_lru_add_fn (811 samples, 0.33%)</title><rect x="35.2430%" y="293" width="0.3251%" height="15" fill="rgb(229,209,22)" fg:x="87913" fg:w="811"/><text x="35.4930%" y="303.50"></text></g><g><title>_raw_spin_lock_irqsave (30 samples, 0.01%)</title><rect x="35.5782%" y="277" width="0.0120%" height="15" fill="rgb(234,138,34)" fg:x="88749" fg:w="30"/><text x="35.8282%" y="287.50"></text></g><g><title>lock_page_lruvec_irqsave (56 samples, 0.02%)</title><rect x="35.5685%" y="293" width="0.0224%" height="15" fill="rgb(212,95,11)" fg:x="88725" fg:w="56"/><text x="35.8185%" y="303.50"></text></g><g><title>__pagevec_lru_add (1,139 samples, 0.46%)</title><rect x="35.2013%" y="309" width="0.4566%" height="15" fill="rgb(240,179,47)" fg:x="87809" fg:w="1139"/><text x="35.4513%" y="319.50"></text></g><g><title>release_pages (141 samples, 0.06%)</title><rect x="35.6014%" y="293" width="0.0565%" height="15" fill="rgb(240,163,11)" fg:x="88807" fg:w="141"/><text x="35.8514%" y="303.50"></text></g><g><title>lru_cache_add (1,339 samples, 0.54%)</title><rect x="35.1264%" y="325" width="0.5368%" height="15" fill="rgb(236,37,12)" fg:x="87622" fg:w="1339"/><text x="35.3764%" y="335.50"></text></g><g><title>idr_find (191 samples, 0.08%)</title><rect x="35.7714%" y="293" width="0.0766%" height="15" fill="rgb(232,164,16)" fg:x="89231" fg:w="191"/><text x="36.0214%" y="303.50"></text></g><g><title>radix_tree_lookup (170 samples, 0.07%)</title><rect x="35.7798%" y="277" width="0.0682%" height="15" fill="rgb(244,205,15)" fg:x="89252" fg:w="170"/><text x="36.0298%" y="287.50"></text></g><g><title>__radix_tree_lookup (170 samples, 0.07%)</title><rect x="35.7798%" y="261" width="0.0682%" height="15" fill="rgb(223,117,47)" fg:x="89252" fg:w="170"/><text x="36.0298%" y="271.50"></text></g><g><title>mem_cgroup_from_id (214 samples, 0.09%)</title><rect x="35.7674%" y="309" width="0.0858%" height="15" fill="rgb(244,107,35)" fg:x="89221" fg:w="214"/><text x="36.0174%" y="319.50"></text></g><g><title>mem_cgroup_get_nr_swap_pages (68 samples, 0.03%)</title><rect x="35.8532%" y="309" width="0.0273%" height="15" fill="rgb(205,140,8)" fg:x="89435" fg:w="68"/><text x="36.1032%" y="319.50"></text></g><g><title>__mod_memcg_state.part.0 (30 samples, 0.01%)</title><rect x="35.9478%" y="261" width="0.0120%" height="15" fill="rgb(228,84,46)" fg:x="89671" fg:w="30"/><text x="36.1978%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (139 samples, 0.06%)</title><rect x="35.9085%" y="277" width="0.0557%" height="15" fill="rgb(254,188,9)" fg:x="89573" fg:w="139"/><text x="36.1585%" y="287.50"></text></g><g><title>__mod_lruvec_state (204 samples, 0.08%)</title><rect x="35.8997%" y="293" width="0.0818%" height="15" fill="rgb(206,112,54)" fg:x="89551" fg:w="204"/><text x="36.1497%" y="303.50"></text></g><g><title>mod_lruvec_state.constprop.0 (287 samples, 0.12%)</title><rect x="35.8804%" y="309" width="0.1151%" height="15" fill="rgb(216,84,49)" fg:x="89503" fg:w="287"/><text x="36.1304%" y="319.50"></text></g><g><title>workingset_refault (792 samples, 0.32%)</title><rect x="35.6792%" y="325" width="0.3175%" height="15" fill="rgb(214,194,35)" fg:x="89001" fg:w="792"/><text x="35.9292%" y="335.50"></text></g><g><title>xas_find_conflict (39 samples, 0.02%)</title><rect x="36.0047%" y="325" width="0.0156%" height="15" fill="rgb(249,28,3)" fg:x="89813" fg:w="39"/><text x="36.2547%" y="335.50"></text></g><g><title>add_to_page_cache_lru (7,020 samples, 2.81%)</title><rect x="33.2133%" y="341" width="2.8142%" height="15" fill="rgb(222,56,52)" fg:x="82850" fg:w="7020"/><text x="33.4633%" y="351.50">ad..</text></g><g><title>__blk_rq_map_sg (38 samples, 0.02%)</title><rect x="36.0508%" y="197" width="0.0152%" height="15" fill="rgb(245,217,50)" fg:x="89928" fg:w="38"/><text x="36.3008%" y="207.50"></text></g><g><title>__blk_bios_map_sg (38 samples, 0.02%)</title><rect x="36.0508%" y="181" width="0.0152%" height="15" fill="rgb(213,201,24)" fg:x="89928" fg:w="38"/><text x="36.3008%" y="191.50"></text></g><g><title>nvme_pci_setup_prps (29 samples, 0.01%)</title><rect x="36.0789%" y="197" width="0.0116%" height="15" fill="rgb(248,116,28)" fg:x="89998" fg:w="29"/><text x="36.3289%" y="207.50"></text></g><g><title>nvme_map_data (107 samples, 0.04%)</title><rect x="36.0496%" y="213" width="0.0429%" height="15" fill="rgb(219,72,43)" fg:x="89925" fg:w="107"/><text x="36.2996%" y="223.50"></text></g><g><title>__blk_mq_try_issue_directly (123 samples, 0.05%)</title><rect x="36.0460%" y="245" width="0.0493%" height="15" fill="rgb(209,138,14)" fg:x="89916" fg:w="123"/><text x="36.2960%" y="255.50"></text></g><g><title>nvme_queue_rq (123 samples, 0.05%)</title><rect x="36.0460%" y="229" width="0.0493%" height="15" fill="rgb(222,18,33)" fg:x="89916" fg:w="123"/><text x="36.2960%" y="239.50"></text></g><g><title>blk_finish_plug (130 samples, 0.05%)</title><rect x="36.0440%" y="325" width="0.0521%" height="15" fill="rgb(213,199,7)" fg:x="89911" fg:w="130"/><text x="36.2940%" y="335.50"></text></g><g><title>blk_flush_plug_list (129 samples, 0.05%)</title><rect x="36.0444%" y="309" width="0.0517%" height="15" fill="rgb(250,110,10)" fg:x="89912" fg:w="129"/><text x="36.2944%" y="319.50"></text></g><g><title>blk_mq_flush_plug_list (129 samples, 0.05%)</title><rect x="36.0444%" y="293" width="0.0517%" height="15" fill="rgb(248,123,6)" fg:x="89912" fg:w="129"/><text x="36.2944%" y="303.50"></text></g><g><title>blk_mq_sched_insert_requests (127 samples, 0.05%)</title><rect x="36.0452%" y="277" width="0.0509%" height="15" fill="rgb(206,91,31)" fg:x="89914" fg:w="127"/><text x="36.2952%" y="287.50"></text></g><g><title>blk_mq_try_issue_list_directly (125 samples, 0.05%)</title><rect x="36.0460%" y="261" width="0.0501%" height="15" fill="rgb(211,154,13)" fg:x="89916" fg:w="125"/><text x="36.2960%" y="271.50"></text></g><g><title>bio_add_page (174 samples, 0.07%)</title><rect x="36.3483%" y="293" width="0.0698%" height="15" fill="rgb(225,148,7)" fg:x="90670" fg:w="174"/><text x="36.5983%" y="303.50"></text></g><g><title>__bio_try_merge_page (117 samples, 0.05%)</title><rect x="36.3711%" y="277" width="0.0469%" height="15" fill="rgb(220,160,43)" fg:x="90727" fg:w="117"/><text x="36.6211%" y="287.50"></text></g><g><title>ext4_map_blocks (41 samples, 0.02%)</title><rect x="36.4304%" y="293" width="0.0164%" height="15" fill="rgb(213,52,39)" fg:x="90875" fg:w="41"/><text x="36.6804%" y="303.50"></text></g><g><title>fscrypt_mergeable_bio (45 samples, 0.02%)</title><rect x="36.4469%" y="293" width="0.0180%" height="15" fill="rgb(243,137,7)" fg:x="90916" fg:w="45"/><text x="36.6969%" y="303.50"></text></g><g><title>blk_bio_segment_split (68 samples, 0.03%)</title><rect x="36.4882%" y="229" width="0.0273%" height="15" fill="rgb(230,79,13)" fg:x="91019" fg:w="68"/><text x="36.7382%" y="239.50"></text></g><g><title>__blk_queue_split (76 samples, 0.03%)</title><rect x="36.4870%" y="245" width="0.0305%" height="15" fill="rgb(247,105,23)" fg:x="91016" fg:w="76"/><text x="36.7370%" y="255.50"></text></g><g><title>nvme_map_data (60 samples, 0.02%)</title><rect x="36.5254%" y="149" width="0.0241%" height="15" fill="rgb(223,179,41)" fg:x="91112" fg:w="60"/><text x="36.7754%" y="159.50"></text></g><g><title>__blk_mq_try_issue_directly (65 samples, 0.03%)</title><rect x="36.5238%" y="181" width="0.0261%" height="15" fill="rgb(218,9,34)" fg:x="91108" fg:w="65"/><text x="36.7738%" y="191.50"></text></g><g><title>nvme_queue_rq (65 samples, 0.03%)</title><rect x="36.5238%" y="165" width="0.0261%" height="15" fill="rgb(222,106,8)" fg:x="91108" fg:w="65"/><text x="36.7738%" y="175.50"></text></g><g><title>blk_flush_plug_list (67 samples, 0.03%)</title><rect x="36.5234%" y="245" width="0.0269%" height="15" fill="rgb(211,220,0)" fg:x="91107" fg:w="67"/><text x="36.7734%" y="255.50"></text></g><g><title>blk_mq_flush_plug_list (67 samples, 0.03%)</title><rect x="36.5234%" y="229" width="0.0269%" height="15" fill="rgb(229,52,16)" fg:x="91107" fg:w="67"/><text x="36.7734%" y="239.50"></text></g><g><title>blk_mq_sched_insert_requests (67 samples, 0.03%)</title><rect x="36.5234%" y="213" width="0.0269%" height="15" fill="rgb(212,155,18)" fg:x="91107" fg:w="67"/><text x="36.7734%" y="223.50"></text></g><g><title>blk_mq_try_issue_list_directly (67 samples, 0.03%)</title><rect x="36.5234%" y="197" width="0.0269%" height="15" fill="rgb(242,21,14)" fg:x="91107" fg:w="67"/><text x="36.7734%" y="207.50"></text></g><g><title>blk_mq_submit_bio (188 samples, 0.08%)</title><rect x="36.4765%" y="261" width="0.0754%" height="15" fill="rgb(222,19,48)" fg:x="90990" fg:w="188"/><text x="36.7265%" y="271.50"></text></g><g><title>submit_bio (228 samples, 0.09%)</title><rect x="36.4697%" y="293" width="0.0914%" height="15" fill="rgb(232,45,27)" fg:x="90973" fg:w="228"/><text x="36.7197%" y="303.50"></text></g><g><title>submit_bio_noacct (219 samples, 0.09%)</title><rect x="36.4733%" y="277" width="0.0878%" height="15" fill="rgb(249,103,42)" fg:x="90982" fg:w="219"/><text x="36.7233%" y="287.50"></text></g><g><title>xas_load (192 samples, 0.08%)</title><rect x="36.5808%" y="277" width="0.0770%" height="15" fill="rgb(246,81,33)" fg:x="91250" fg:w="192"/><text x="36.8308%" y="287.50"></text></g><g><title>xa_load (269 samples, 0.11%)</title><rect x="36.5611%" y="293" width="0.1078%" height="15" fill="rgb(252,33,42)" fg:x="91201" fg:w="269"/><text x="36.8111%" y="303.50"></text></g><g><title>xas_start (28 samples, 0.01%)</title><rect x="36.6577%" y="277" width="0.0112%" height="15" fill="rgb(209,212,41)" fg:x="91442" fg:w="28"/><text x="36.9077%" y="287.50"></text></g><g><title>ext4_mpage_readpages (1,417 samples, 0.57%)</title><rect x="36.1029%" y="309" width="0.5681%" height="15" fill="rgb(207,154,6)" fg:x="90058" fg:w="1417"/><text x="36.3529%" y="319.50"></text></g><g><title>read_pages (1,589 samples, 0.64%)</title><rect x="36.0440%" y="341" width="0.6370%" height="15" fill="rgb(223,64,47)" fg:x="89911" fg:w="1589"/><text x="36.2940%" y="351.50"></text></g><g><title>ext4_readahead (1,456 samples, 0.58%)</title><rect x="36.0973%" y="325" width="0.5837%" height="15" fill="rgb(211,161,38)" fg:x="90044" fg:w="1456"/><text x="36.3473%" y="335.50"></text></g><g><title>xas_load (335 samples, 0.13%)</title><rect x="36.6974%" y="325" width="0.1343%" height="15" fill="rgb(219,138,40)" fg:x="91541" fg:w="335"/><text x="36.9474%" y="335.50"></text></g><g><title>xa_load (397 samples, 0.16%)</title><rect x="36.6822%" y="341" width="0.1592%" height="15" fill="rgb(241,228,46)" fg:x="91503" fg:w="397"/><text x="36.9322%" y="351.50"></text></g><g><title>page_cache_ra_unbounded (13,321 samples, 5.34%)</title><rect x="31.5056%" y="357" width="5.3402%" height="15" fill="rgb(223,209,38)" fg:x="78590" fg:w="13321"/><text x="31.7556%" y="367.50">page_ca..</text></g><g><title>page_cache_async_ra (13,365 samples, 5.36%)</title><rect x="31.4887%" y="389" width="5.3578%" height="15" fill="rgb(236,164,45)" fg:x="78548" fg:w="13365"/><text x="31.7387%" y="399.50">page_ca..</text></g><g><title>ondemand_readahead (13,360 samples, 5.36%)</title><rect x="31.4907%" y="373" width="5.3558%" height="15" fill="rgb(231,15,5)" fg:x="78553" fg:w="13360"/><text x="31.7407%" y="383.50">ondeman..</text></g><g><title>read_pages (29 samples, 0.01%)</title><rect x="36.8634%" y="341" width="0.0116%" height="15" fill="rgb(252,35,15)" fg:x="91955" fg:w="29"/><text x="37.1134%" y="351.50"></text></g><g><title>page_cache_sync_ra (78 samples, 0.03%)</title><rect x="36.8466%" y="389" width="0.0313%" height="15" fill="rgb(248,181,18)" fg:x="91913" fg:w="78"/><text x="37.0966%" y="399.50"></text></g><g><title>ondemand_readahead (77 samples, 0.03%)</title><rect x="36.8470%" y="373" width="0.0309%" height="15" fill="rgb(233,39,42)" fg:x="91914" fg:w="77"/><text x="37.0970%" y="383.50"></text></g><g><title>page_cache_ra_unbounded (76 samples, 0.03%)</title><rect x="36.8474%" y="357" width="0.0305%" height="15" fill="rgb(238,110,33)" fg:x="91915" fg:w="76"/><text x="37.0974%" y="367.50"></text></g><g><title>filemap_get_pages (14,113 samples, 5.66%)</title><rect x="31.2205%" y="405" width="5.6577%" height="15" fill="rgb(233,195,10)" fg:x="77879" fg:w="14113"/><text x="31.4705%" y="415.50">filemap..</text></g><g><title>mark_page_accessed (252 samples, 0.10%)</title><rect x="36.8794%" y="405" width="0.1010%" height="15" fill="rgb(254,105,3)" fg:x="91995" fg:w="252"/><text x="37.1294%" y="415.50"></text></g><g><title>restore_regs_and_return_to_kernel (36 samples, 0.01%)</title><rect x="36.9829%" y="405" width="0.0144%" height="15" fill="rgb(221,225,9)" fg:x="92253" fg:w="36"/><text x="37.2329%" y="415.50"></text></g><g><title>filemap_read (40,090 samples, 16.07%)</title><rect x="20.9262%" y="421" width="16.0715%" height="15" fill="rgb(224,227,45)" fg:x="52200" fg:w="40090"/><text x="21.1762%" y="431.50">filemap_read</text></g><g><title>entry_SYSCALL_64_after_hwframe (40,111 samples, 16.08%)</title><rect x="20.9202%" y="549" width="16.0799%" height="15" fill="rgb(229,198,43)" fg:x="52185" fg:w="40111"/><text x="21.1702%" y="559.50">entry_SYSCALL_64_after_hw..</text></g><g><title>do_syscall_64 (40,111 samples, 16.08%)</title><rect x="20.9202%" y="533" width="16.0799%" height="15" fill="rgb(206,209,35)" fg:x="52185" fg:w="40111"/><text x="21.1702%" y="543.50">do_syscall_64</text></g><g><title>__x64_sys_read (40,111 samples, 16.08%)</title><rect x="20.9202%" y="517" width="16.0799%" height="15" fill="rgb(245,195,53)" fg:x="52185" fg:w="40111"/><text x="21.1702%" y="527.50">__x64_sys_read</text></g><g><title>ksys_read (40,111 samples, 16.08%)</title><rect x="20.9202%" y="501" width="16.0799%" height="15" fill="rgb(240,92,26)" fg:x="52185" fg:w="40111"/><text x="21.1702%" y="511.50">ksys_read</text></g><g><title>vfs_read (40,111 samples, 16.08%)</title><rect x="20.9202%" y="485" width="16.0799%" height="15" fill="rgb(207,40,23)" fg:x="52185" fg:w="40111"/><text x="21.1702%" y="495.50">vfs_read</text></g><g><title>new_sync_read (40,111 samples, 16.08%)</title><rect x="20.9202%" y="469" width="16.0799%" height="15" fill="rgb(223,111,35)" fg:x="52185" fg:w="40111"/><text x="21.1702%" y="479.50">new_sync_read</text></g><g><title>ext4_file_read_iter (40,109 samples, 16.08%)</title><rect x="20.9210%" y="453" width="16.0791%" height="15" fill="rgb(229,147,28)" fg:x="52187" fg:w="40109"/><text x="21.1710%" y="463.50">ext4_file_read_iter</text></g><g><title>generic_file_read_iter (40,109 samples, 16.08%)</title><rect x="20.9210%" y="437" width="16.0791%" height="15" fill="rgb(211,29,28)" fg:x="52187" fg:w="40109"/><text x="21.1710%" y="447.50">generic_file_read_iter</text></g><g><title>__libc_read (40,129 samples, 16.09%)</title><rect x="20.9194%" y="565" width="16.0871%" height="15" fill="rgb(228,72,33)" fg:x="52183" fg:w="40129"/><text x="21.1694%" y="575.50">__libc_read</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (40,130 samples, 16.09%)</title><rect x="20.9194%" y="661" width="16.0875%" height="15" fill="rgb(205,214,31)" fg:x="52183" fg:w="40130"/><text x="21.1694%" y="671.50">&lt;std::io::buffered::bufre..</text></g><g><title>std::io::default_read_exact (40,130 samples, 16.09%)</title><rect x="20.9194%" y="645" width="16.0875%" height="15" fill="rgb(224,111,15)" fg:x="52183" fg:w="40130"/><text x="21.1694%" y="655.50">std::io::default_read_exa..</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (40,130 samples, 16.09%)</title><rect x="20.9194%" y="629" width="16.0875%" height="15" fill="rgb(253,21,26)" fg:x="52183" fg:w="40130"/><text x="21.1694%" y="639.50">&lt;std::io::buffered::bufre..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (40,130 samples, 16.09%)</title><rect x="20.9194%" y="613" width="16.0875%" height="15" fill="rgb(245,139,43)" fg:x="52183" fg:w="40130"/><text x="21.1694%" y="623.50">&lt;std::fs::File as std::io..</text></g><g><title>std::sys::unix::fs::File::read (40,130 samples, 16.09%)</title><rect x="20.9194%" y="597" width="16.0875%" height="15" fill="rgb(252,170,7)" fg:x="52183" fg:w="40130"/><text x="21.1694%" y="607.50">std::sys::unix::fs::File:..</text></g><g><title>std::sys::unix::fd::FileDesc::read (40,130 samples, 16.09%)</title><rect x="20.9194%" y="581" width="16.0875%" height="15" fill="rgb(231,118,14)" fg:x="52183" fg:w="40130"/><text x="21.1694%" y="591.50">std::sys::unix::fd::FileD..</text></g><g><title>malloc_consolidate (593 samples, 0.24%)</title><rect x="37.0129%" y="437" width="0.2377%" height="15" fill="rgb(238,83,0)" fg:x="92328" fg:w="593"/><text x="37.2629%" y="447.50"></text></g><g><title>unlink_chunk.constprop.0 (168 samples, 0.07%)</title><rect x="37.1833%" y="421" width="0.0673%" height="15" fill="rgb(221,39,39)" fg:x="92753" fg:w="168"/><text x="37.4333%" y="431.50"></text></g><g><title>__GI___mmap64 (26 samples, 0.01%)</title><rect x="37.2506%" y="421" width="0.0104%" height="15" fill="rgb(222,119,46)" fg:x="92921" fg:w="26"/><text x="37.5006%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.01%)</title><rect x="37.2511%" y="405" width="0.0100%" height="15" fill="rgb(222,165,49)" fg:x="92922" fg:w="25"/><text x="37.5011%" y="415.50"></text></g><g><title>do_syscall_64 (25 samples, 0.01%)</title><rect x="37.2511%" y="389" width="0.0100%" height="15" fill="rgb(219,113,52)" fg:x="92922" fg:w="25"/><text x="37.5011%" y="399.50"></text></g><g><title>__x64_sys_mmap (25 samples, 0.01%)</title><rect x="37.2511%" y="373" width="0.0100%" height="15" fill="rgb(214,7,15)" fg:x="92922" fg:w="25"/><text x="37.5011%" y="383.50"></text></g><g><title>ksys_mmap_pgoff (25 samples, 0.01%)</title><rect x="37.2511%" y="357" width="0.0100%" height="15" fill="rgb(235,32,4)" fg:x="92922" fg:w="25"/><text x="37.5011%" y="367.50"></text></g><g><title>vm_mmap_pgoff (25 samples, 0.01%)</title><rect x="37.2511%" y="341" width="0.0100%" height="15" fill="rgb(238,90,54)" fg:x="92922" fg:w="25"/><text x="37.5011%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (641 samples, 0.26%)</title><rect x="37.0069%" y="533" width="0.2570%" height="15" fill="rgb(213,208,19)" fg:x="92313" fg:w="641"/><text x="37.2569%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (641 samples, 0.26%)</title><rect x="37.0069%" y="517" width="0.2570%" height="15" fill="rgb(233,156,4)" fg:x="92313" fg:w="641"/><text x="37.2569%" y="527.50"></text></g><g><title>alloc::alloc::realloc (641 samples, 0.26%)</title><rect x="37.0069%" y="501" width="0.2570%" height="15" fill="rgb(207,194,5)" fg:x="92313" fg:w="641"/><text x="37.2569%" y="511.50"></text></g><g><title>__realloc (641 samples, 0.26%)</title><rect x="37.0069%" y="485" width="0.2570%" height="15" fill="rgb(206,111,30)" fg:x="92313" fg:w="641"/><text x="37.2569%" y="495.50"></text></g><g><title>_int_realloc (640 samples, 0.26%)</title><rect x="37.0073%" y="469" width="0.2566%" height="15" fill="rgb(243,70,54)" fg:x="92314" fg:w="640"/><text x="37.2573%" y="479.50"></text></g><g><title>_int_malloc (639 samples, 0.26%)</title><rect x="37.0077%" y="453" width="0.2562%" height="15" fill="rgb(242,28,8)" fg:x="92315" fg:w="639"/><text x="37.2577%" y="463.50"></text></g><g><title>sysmalloc (33 samples, 0.01%)</title><rect x="37.2506%" y="437" width="0.0132%" height="15" fill="rgb(219,106,18)" fg:x="92921" fg:w="33"/><text x="37.5006%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (652 samples, 0.26%)</title><rect x="37.0069%" y="613" width="0.2614%" height="15" fill="rgb(244,222,10)" fg:x="92313" fg:w="652"/><text x="37.2569%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (652 samples, 0.26%)</title><rect x="37.0069%" y="597" width="0.2614%" height="15" fill="rgb(236,179,52)" fg:x="92313" fg:w="652"/><text x="37.2569%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (652 samples, 0.26%)</title><rect x="37.0069%" y="581" width="0.2614%" height="15" fill="rgb(213,23,39)" fg:x="92313" fg:w="652"/><text x="37.2569%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (652 samples, 0.26%)</title><rect x="37.0069%" y="565" width="0.2614%" height="15" fill="rgb(238,48,10)" fg:x="92313" fg:w="652"/><text x="37.2569%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (652 samples, 0.26%)</title><rect x="37.0069%" y="549" width="0.2614%" height="15" fill="rgb(251,196,23)" fg:x="92313" fg:w="652"/><text x="37.2569%" y="559.50"></text></g><g><title>__irqentry_text_end (70 samples, 0.03%)</title><rect x="41.4575%" y="581" width="0.0281%" height="15" fill="rgb(250,152,24)" fg:x="103415" fg:w="70"/><text x="41.7075%" y="591.50"></text></g><g><title>down_read_trylock (130 samples, 0.05%)</title><rect x="41.7317%" y="533" width="0.0521%" height="15" fill="rgb(209,150,17)" fg:x="104099" fg:w="130"/><text x="41.9817%" y="543.50"></text></g><g><title>find_vma (95 samples, 0.04%)</title><rect x="41.7839%" y="533" width="0.0381%" height="15" fill="rgb(234,202,34)" fg:x="104229" fg:w="95"/><text x="42.0339%" y="543.50"></text></g><g><title>vmacache_find (74 samples, 0.03%)</title><rect x="41.7923%" y="517" width="0.0297%" height="15" fill="rgb(253,148,53)" fg:x="104250" fg:w="74"/><text x="42.0423%" y="527.50"></text></g><g><title>__count_memcg_events (79 samples, 0.03%)</title><rect x="41.9045%" y="517" width="0.0317%" height="15" fill="rgb(218,129,16)" fg:x="104530" fg:w="79"/><text x="42.1545%" y="527.50"></text></g><g><title>cgroup_rstat_updated (40 samples, 0.02%)</title><rect x="41.9202%" y="501" width="0.0160%" height="15" fill="rgb(216,85,19)" fg:x="104569" fg:w="40"/><text x="42.1702%" y="511.50"></text></g><g><title>_raw_spin_lock (106 samples, 0.04%)</title><rect x="42.1499%" y="485" width="0.0425%" height="15" fill="rgb(235,228,7)" fg:x="105142" fg:w="106"/><text x="42.3999%" y="495.50"></text></g><g><title>__get_vma_policy (26 samples, 0.01%)</title><rect x="42.3022%" y="469" width="0.0104%" height="15" fill="rgb(245,175,0)" fg:x="105522" fg:w="26"/><text x="42.5522%" y="479.50"></text></g><g><title>__next_zones_zonelist (80 samples, 0.03%)</title><rect x="42.5103%" y="437" width="0.0321%" height="15" fill="rgb(208,168,36)" fg:x="106041" fg:w="80"/><text x="42.7603%" y="447.50"></text></g><g><title>__inc_numa_state (44 samples, 0.02%)</title><rect x="42.6686%" y="421" width="0.0176%" height="15" fill="rgb(246,171,24)" fg:x="106436" fg:w="44"/><text x="42.9186%" y="431.50"></text></g><g><title>clear_page_erms (2,529 samples, 1.01%)</title><rect x="42.6931%" y="421" width="1.0138%" height="15" fill="rgb(215,142,24)" fg:x="106497" fg:w="2529"/><text x="42.9431%" y="431.50"></text></g><g><title>kernel_init_free_pages (47 samples, 0.02%)</title><rect x="43.7069%" y="421" width="0.0188%" height="15" fill="rgb(250,187,7)" fg:x="109026" fg:w="47"/><text x="43.9569%" y="431.50"></text></g><g><title>get_page_from_freelist (3,718 samples, 1.49%)</title><rect x="42.5447%" y="437" width="1.4905%" height="15" fill="rgb(228,66,33)" fg:x="106127" fg:w="3718"/><text x="42.7947%" y="447.50"></text></g><g><title>rmqueue (772 samples, 0.31%)</title><rect x="43.7257%" y="421" width="0.3095%" height="15" fill="rgb(234,215,21)" fg:x="109073" fg:w="772"/><text x="43.9757%" y="431.50"></text></g><g><title>rmqueue_bulk.constprop.0 (431 samples, 0.17%)</title><rect x="43.8624%" y="405" width="0.1728%" height="15" fill="rgb(222,191,20)" fg:x="109414" fg:w="431"/><text x="44.1124%" y="415.50"></text></g><g><title>__alloc_pages (4,122 samples, 1.65%)</title><rect x="42.3964%" y="453" width="1.6524%" height="15" fill="rgb(245,79,54)" fg:x="105757" fg:w="4122"/><text x="42.6464%" y="463.50"></text></g><g><title>__next_zones_zonelist (27 samples, 0.01%)</title><rect x="44.0541%" y="453" width="0.0108%" height="15" fill="rgb(240,10,37)" fg:x="109892" fg:w="27"/><text x="44.3041%" y="463.50"></text></g><g><title>alloc_pages_vma (4,363 samples, 1.75%)</title><rect x="42.3355%" y="469" width="1.7491%" height="15" fill="rgb(214,192,32)" fg:x="105605" fg:w="4363"/><text x="42.5855%" y="479.50"></text></g><g><title>cgroup_throttle_swaprate (156 samples, 0.06%)</title><rect x="44.0849%" y="469" width="0.0625%" height="15" fill="rgb(209,36,54)" fg:x="109969" fg:w="156"/><text x="44.3349%" y="479.50"></text></g><g><title>__mod_memcg_state.part.0 (33 samples, 0.01%)</title><rect x="44.5243%" y="373" width="0.0132%" height="15" fill="rgb(220,10,11)" fg:x="111065" fg:w="33"/><text x="44.7743%" y="383.50"></text></g><g><title>cgroup_rstat_updated (28 samples, 0.01%)</title><rect x="44.5263%" y="357" width="0.0112%" height="15" fill="rgb(221,106,17)" fg:x="111070" fg:w="28"/><text x="44.7763%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (123 samples, 0.05%)</title><rect x="44.4902%" y="389" width="0.0493%" height="15" fill="rgb(251,142,44)" fg:x="110980" fg:w="123"/><text x="44.7402%" y="399.50"></text></g><g><title>__mod_lruvec_state (184 samples, 0.07%)</title><rect x="44.4798%" y="405" width="0.0738%" height="15" fill="rgb(238,13,15)" fg:x="110954" fg:w="184"/><text x="44.7298%" y="415.50"></text></g><g><title>mem_cgroup_update_lru_size (37 samples, 0.01%)</title><rect x="44.5700%" y="405" width="0.0148%" height="15" fill="rgb(208,107,27)" fg:x="111179" fg:w="37"/><text x="44.8200%" y="415.50"></text></g><g><title>__pagevec_lru_add_fn (911 samples, 0.37%)</title><rect x="44.2653%" y="421" width="0.3652%" height="15" fill="rgb(205,136,37)" fg:x="110419" fg:w="911"/><text x="44.5153%" y="431.50"></text></g><g><title>page_mapping (114 samples, 0.05%)</title><rect x="44.5848%" y="405" width="0.0457%" height="15" fill="rgb(250,205,27)" fg:x="111216" fg:w="114"/><text x="44.8348%" y="415.50"></text></g><g><title>lock_page_lruvec_irqsave (28 samples, 0.01%)</title><rect x="44.6309%" y="421" width="0.0112%" height="15" fill="rgb(210,80,43)" fg:x="111331" fg:w="28"/><text x="44.8809%" y="431.50"></text></g><g><title>__pagevec_lru_add (1,167 samples, 0.47%)</title><rect x="44.2393%" y="437" width="0.4678%" height="15" fill="rgb(247,160,36)" fg:x="110354" fg:w="1167"/><text x="44.4893%" y="447.50"></text></g><g><title>release_pages (132 samples, 0.05%)</title><rect x="44.6542%" y="421" width="0.0529%" height="15" fill="rgb(234,13,49)" fg:x="111389" fg:w="132"/><text x="44.9042%" y="431.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1,368 samples, 0.55%)</title><rect x="44.1619%" y="469" width="0.5484%" height="15" fill="rgb(234,122,0)" fg:x="110161" fg:w="1368"/><text x="44.4119%" y="479.50"></text></g><g><title>lru_cache_add (1,352 samples, 0.54%)</title><rect x="44.1683%" y="453" width="0.5420%" height="15" fill="rgb(207,146,38)" fg:x="110177" fg:w="1352"/><text x="44.4183%" y="463.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (841 samples, 0.34%)</title><rect x="44.7997%" y="437" width="0.3371%" height="15" fill="rgb(207,177,25)" fg:x="111752" fg:w="841"/><text x="45.0497%" y="447.50"></text></g><g><title>cgroup_rstat_updated (58 samples, 0.02%)</title><rect x="45.1136%" y="421" width="0.0233%" height="15" fill="rgb(211,178,42)" fg:x="112535" fg:w="58"/><text x="45.3636%" y="431.50"></text></g><g><title>page_counter_try_charge (47 samples, 0.02%)</title><rect x="45.3072%" y="421" width="0.0188%" height="15" fill="rgb(230,69,54)" fg:x="113018" fg:w="47"/><text x="45.5572%" y="431.50"></text></g><g><title>__mem_cgroup_charge (1,480 samples, 0.59%)</title><rect x="44.7352%" y="453" width="0.5933%" height="15" fill="rgb(214,135,41)" fg:x="111591" fg:w="1480"/><text x="44.9852%" y="463.50"></text></g><g><title>try_charge (469 samples, 0.19%)</title><rect x="45.1405%" y="437" width="0.1880%" height="15" fill="rgb(237,67,25)" fg:x="112602" fg:w="469"/><text x="45.3905%" y="447.50"></text></g><g><title>get_mem_cgroup_from_mm (207 samples, 0.08%)</title><rect x="45.3285%" y="453" width="0.0830%" height="15" fill="rgb(222,189,50)" fg:x="113071" fg:w="207"/><text x="45.5785%" y="463.50"></text></g><g><title>memcg_check_events (45 samples, 0.02%)</title><rect x="45.4139%" y="453" width="0.0180%" height="15" fill="rgb(245,148,34)" fg:x="113284" fg:w="45"/><text x="45.6639%" y="463.50"></text></g><g><title>rcu_read_unlock_strict (32 samples, 0.01%)</title><rect x="45.4319%" y="453" width="0.0128%" height="15" fill="rgb(222,29,6)" fg:x="113329" fg:w="32"/><text x="45.6819%" y="463.50"></text></g><g><title>mem_cgroup_charge (1,840 samples, 0.74%)</title><rect x="44.7103%" y="469" width="0.7376%" height="15" fill="rgb(221,189,43)" fg:x="111529" fg:w="1840"/><text x="44.9603%" y="479.50"></text></g><g><title>__mod_memcg_lruvec_state (131 samples, 0.05%)</title><rect x="45.5025%" y="421" width="0.0525%" height="15" fill="rgb(207,36,27)" fg:x="113505" fg:w="131"/><text x="45.7525%" y="431.50"></text></g><g><title>__mod_lruvec_state (260 samples, 0.10%)</title><rect x="45.4916%" y="437" width="0.1042%" height="15" fill="rgb(217,90,24)" fg:x="113478" fg:w="260"/><text x="45.7416%" y="447.50"></text></g><g><title>__mod_node_page_state (88 samples, 0.04%)</title><rect x="45.5606%" y="421" width="0.0353%" height="15" fill="rgb(224,66,35)" fg:x="113650" fg:w="88"/><text x="45.8106%" y="431.50"></text></g><g><title>__mod_node_page_state (31 samples, 0.01%)</title><rect x="45.5987%" y="437" width="0.0124%" height="15" fill="rgb(221,13,50)" fg:x="113745" fg:w="31"/><text x="45.8487%" y="447.50"></text></g><g><title>__mod_lruvec_page_state (364 samples, 0.15%)</title><rect x="45.4664%" y="453" width="0.1459%" height="15" fill="rgb(236,68,49)" fg:x="113415" fg:w="364"/><text x="45.7164%" y="463.50"></text></g><g><title>__page_set_anon_rmap (41 samples, 0.02%)</title><rect x="45.6151%" y="453" width="0.0164%" height="15" fill="rgb(229,146,28)" fg:x="113786" fg:w="41"/><text x="45.8651%" y="463.50"></text></g><g><title>page_add_new_anon_rmap (451 samples, 0.18%)</title><rect x="45.4528%" y="469" width="0.1808%" height="15" fill="rgb(225,31,38)" fg:x="113381" fg:w="451"/><text x="45.7028%" y="479.50"></text></g><g><title>pmd_page_vaddr (39 samples, 0.02%)</title><rect x="45.6392%" y="469" width="0.0156%" height="15" fill="rgb(250,208,3)" fg:x="113846" fg:w="39"/><text x="45.8892%" y="479.50"></text></g><g><title>do_anonymous_page (8,682 samples, 3.48%)</title><rect x="42.2068%" y="485" width="3.4805%" height="15" fill="rgb(246,54,23)" fg:x="105284" fg:w="8682"/><text x="42.4568%" y="495.50">do_..</text></g><g><title>pmd_page_vaddr (37 samples, 0.01%)</title><rect x="45.7001%" y="485" width="0.0148%" height="15" fill="rgb(243,76,11)" fg:x="113998" fg:w="37"/><text x="45.9501%" y="495.50"></text></g><g><title>pmd_val (45 samples, 0.02%)</title><rect x="45.7185%" y="485" width="0.0180%" height="15" fill="rgb(245,21,50)" fg:x="114044" fg:w="45"/><text x="45.9685%" y="495.50"></text></g><g><title>handle_pte_fault (9,059 samples, 3.63%)</title><rect x="42.1062%" y="501" width="3.6316%" height="15" fill="rgb(228,9,43)" fg:x="105033" fg:w="9059"/><text x="42.3562%" y="511.50">hand..</text></g><g><title>pmd_val (38 samples, 0.02%)</title><rect x="45.7410%" y="501" width="0.0152%" height="15" fill="rgb(208,100,47)" fg:x="114100" fg:w="38"/><text x="45.9910%" y="511.50"></text></g><g><title>__handle_mm_fault (9,563 samples, 3.83%)</title><rect x="41.9362%" y="517" width="3.8337%" height="15" fill="rgb(232,26,8)" fg:x="104609" fg:w="9563"/><text x="42.1862%" y="527.50">__ha..</text></g><g><title>pud_val (34 samples, 0.01%)</title><rect x="45.7562%" y="501" width="0.0136%" height="15" fill="rgb(216,166,38)" fg:x="114138" fg:w="34"/><text x="46.0062%" y="511.50"></text></g><g><title>pud_val (31 samples, 0.01%)</title><rect x="45.8011%" y="517" width="0.0124%" height="15" fill="rgb(251,202,51)" fg:x="114250" fg:w="31"/><text x="46.0511%" y="527.50"></text></g><g><title>handle_mm_fault (9,964 samples, 3.99%)</title><rect x="41.8219%" y="533" width="3.9944%" height="15" fill="rgb(254,216,34)" fg:x="104324" fg:w="9964"/><text x="42.0719%" y="543.50">hand..</text></g><g><title>mem_cgroup_from_task (39 samples, 0.02%)</title><rect x="45.8164%" y="533" width="0.0156%" height="15" fill="rgb(251,32,27)" fg:x="114288" fg:w="39"/><text x="46.0664%" y="543.50"></text></g><g><title>up_read (171 samples, 0.07%)</title><rect x="45.8408%" y="533" width="0.0686%" height="15" fill="rgb(208,127,28)" fg:x="114349" fg:w="171"/><text x="46.0908%" y="543.50"></text></g><g><title>do_user_addr_fault (10,688 samples, 4.28%)</title><rect x="41.6267%" y="549" width="4.2847%" height="15" fill="rgb(224,137,22)" fg:x="103837" fg:w="10688"/><text x="41.8767%" y="559.50">do_us..</text></g><g><title>exit_to_user_mode_prepare (157 samples, 0.06%)</title><rect x="45.9454%" y="517" width="0.0629%" height="15" fill="rgb(254,70,32)" fg:x="114610" fg:w="157"/><text x="46.1954%" y="527.50"></text></g><g><title>irqentry_exit (203 samples, 0.08%)</title><rect x="45.9286%" y="549" width="0.0814%" height="15" fill="rgb(229,75,37)" fg:x="114568" fg:w="203"/><text x="46.1786%" y="559.50"></text></g><g><title>irqentry_exit_to_user_mode (166 samples, 0.07%)</title><rect x="45.9434%" y="533" width="0.0665%" height="15" fill="rgb(252,64,23)" fg:x="114605" fg:w="166"/><text x="46.1934%" y="543.50"></text></g><g><title>exc_page_fault (11,070 samples, 4.44%)</title><rect x="41.5786%" y="565" width="4.4378%" height="15" fill="rgb(232,162,48)" fg:x="103717" fg:w="11070"/><text x="41.8286%" y="575.50">exc_p..</text></g><g><title>asm_exc_page_fault (11,315 samples, 4.54%)</title><rect x="41.4860%" y="581" width="4.5360%" height="15" fill="rgb(246,160,12)" fg:x="103486" fg:w="11315"/><text x="41.7360%" y="591.50">asm_e..</text></g><g><title>error_entry (338 samples, 0.14%)</title><rect x="46.0248%" y="581" width="0.1355%" height="15" fill="rgb(247,166,0)" fg:x="114808" fg:w="338"/><text x="46.2748%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (24,375 samples, 9.77%)</title><rect x="37.0069%" y="661" width="9.7716%" height="15" fill="rgb(249,219,21)" fg:x="92313" fg:w="24375"/><text x="37.2569%" y="671.50">alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (24,375 samples, 9.77%)</title><rect x="37.0069%" y="645" width="9.7716%" height="15" fill="rgb(205,209,3)" fg:x="92313" fg:w="24375"/><text x="37.2569%" y="655.50">&lt;alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (24,375 samples, 9.77%)</title><rect x="37.0069%" y="629" width="9.7716%" height="15" fill="rgb(243,44,1)" fg:x="92313" fg:w="24375"/><text x="37.2569%" y="639.50">alloc::vec::Ve..</text></g><g><title>core::intrinsics::copy_nonoverlapping (23,723 samples, 9.51%)</title><rect x="37.2683%" y="613" width="9.5102%" height="15" fill="rgb(206,159,16)" fg:x="92965" fg:w="23723"/><text x="37.5183%" y="623.50">core::intrinsi..</text></g><g><title>__memcpy_avx_unaligned_erms (23,723 samples, 9.51%)</title><rect x="37.2683%" y="597" width="9.5102%" height="15" fill="rgb(244,77,30)" fg:x="92965" fg:w="23723"/><text x="37.5183%" y="607.50">__memcpy_avx_u..</text></g><g><title>sync_regs (1,530 samples, 0.61%)</title><rect x="46.1651%" y="581" width="0.6134%" height="15" fill="rgb(218,69,12)" fg:x="115158" fg:w="1530"/><text x="46.4151%" y="591.50"></text></g><g><title>__mod_memcg_lruvec_state (47 samples, 0.02%)</title><rect x="46.8743%" y="389" width="0.0188%" height="15" fill="rgb(212,87,7)" fg:x="116927" fg:w="47"/><text x="47.1243%" y="399.50"></text></g><g><title>__mod_lruvec_state (75 samples, 0.03%)</title><rect x="46.8687%" y="405" width="0.0301%" height="15" fill="rgb(245,114,25)" fg:x="116913" fg:w="75"/><text x="47.1187%" y="415.50"></text></g><g><title>__free_one_page (169 samples, 0.07%)</title><rect x="46.9653%" y="357" width="0.0677%" height="15" fill="rgb(210,61,42)" fg:x="117154" fg:w="169"/><text x="47.2153%" y="367.50"></text></g><g><title>free_unref_page_list (317 samples, 0.13%)</title><rect x="46.9100%" y="405" width="0.1271%" height="15" fill="rgb(211,52,33)" fg:x="117016" fg:w="317"/><text x="47.1600%" y="415.50"></text></g><g><title>free_unref_page_commit (281 samples, 0.11%)</title><rect x="46.9244%" y="389" width="0.1126%" height="15" fill="rgb(234,58,33)" fg:x="117052" fg:w="281"/><text x="47.1744%" y="399.50"></text></g><g><title>free_pcppages_bulk (241 samples, 0.10%)</title><rect x="46.9404%" y="373" width="0.0966%" height="15" fill="rgb(220,115,36)" fg:x="117092" fg:w="241"/><text x="47.1904%" y="383.50"></text></g><g><title>mem_cgroup_uncharge_list (31 samples, 0.01%)</title><rect x="47.0375%" y="405" width="0.0124%" height="15" fill="rgb(243,153,54)" fg:x="117334" fg:w="31"/><text x="47.2875%" y="415.50"></text></g><g><title>tlb_finish_mmu (676 samples, 0.27%)</title><rect x="46.7837%" y="453" width="0.2710%" height="15" fill="rgb(251,47,18)" fg:x="116701" fg:w="676"/><text x="47.0337%" y="463.50"></text></g><g><title>free_pages_and_swap_cache (674 samples, 0.27%)</title><rect x="46.7845%" y="437" width="0.2702%" height="15" fill="rgb(242,102,42)" fg:x="116703" fg:w="674"/><text x="47.0345%" y="447.50"></text></g><g><title>release_pages (588 samples, 0.24%)</title><rect x="46.8190%" y="421" width="0.2357%" height="15" fill="rgb(234,31,38)" fg:x="116789" fg:w="588"/><text x="47.0690%" y="431.50"></text></g><g><title>__tlb_remove_page_size (27 samples, 0.01%)</title><rect x="47.3241%" y="373" width="0.0108%" height="15" fill="rgb(221,117,51)" fg:x="118049" fg:w="27"/><text x="47.5741%" y="383.50"></text></g><g><title>__mod_memcg_state.part.0 (34 samples, 0.01%)</title><rect x="47.4568%" y="309" width="0.0136%" height="15" fill="rgb(212,20,18)" fg:x="118380" fg:w="34"/><text x="47.7068%" y="319.50"></text></g><g><title>cgroup_rstat_updated (31 samples, 0.01%)</title><rect x="47.4580%" y="293" width="0.0124%" height="15" fill="rgb(245,133,36)" fg:x="118383" fg:w="31"/><text x="47.7080%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (116 samples, 0.05%)</title><rect x="47.4271%" y="325" width="0.0465%" height="15" fill="rgb(212,6,19)" fg:x="118306" fg:w="116"/><text x="47.6771%" y="335.50"></text></g><g><title>__mod_lruvec_state (185 samples, 0.07%)</title><rect x="47.4179%" y="341" width="0.0742%" height="15" fill="rgb(218,1,36)" fg:x="118283" fg:w="185"/><text x="47.6679%" y="351.50"></text></g><g><title>__mod_node_page_state (25 samples, 0.01%)</title><rect x="47.4820%" y="325" width="0.0100%" height="15" fill="rgb(246,84,54)" fg:x="118443" fg:w="25"/><text x="47.7320%" y="335.50"></text></g><g><title>__mod_lruvec_page_state (250 samples, 0.10%)</title><rect x="47.4067%" y="357" width="0.1002%" height="15" fill="rgb(242,110,6)" fg:x="118255" fg:w="250"/><text x="47.6567%" y="367.50"></text></g><g><title>lock_page_memcg (33 samples, 0.01%)</title><rect x="47.5097%" y="357" width="0.0132%" height="15" fill="rgb(214,47,5)" fg:x="118512" fg:w="33"/><text x="47.7597%" y="367.50"></text></g><g><title>page_remove_rmap (492 samples, 0.20%)</title><rect x="47.3401%" y="373" width="0.1972%" height="15" fill="rgb(218,159,25)" fg:x="118089" fg:w="492"/><text x="47.5901%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (57 samples, 0.02%)</title><rect x="47.6604%" y="309" width="0.0229%" height="15" fill="rgb(215,211,28)" fg:x="118888" fg:w="57"/><text x="47.9104%" y="319.50"></text></g><g><title>__mod_lruvec_state (89 samples, 0.04%)</title><rect x="47.6572%" y="325" width="0.0357%" height="15" fill="rgb(238,59,32)" fg:x="118880" fg:w="89"/><text x="47.9072%" y="335.50"></text></g><g><title>__free_one_page (324 samples, 0.13%)</title><rect x="47.8048%" y="277" width="0.1299%" height="15" fill="rgb(226,82,3)" fg:x="119248" fg:w="324"/><text x="48.0548%" y="287.50"></text></g><g><title>free_unref_page_list (570 samples, 0.23%)</title><rect x="47.7077%" y="325" width="0.2285%" height="15" fill="rgb(240,164,32)" fg:x="119006" fg:w="570"/><text x="47.9577%" y="335.50"></text></g><g><title>free_unref_page_commit (494 samples, 0.20%)</title><rect x="47.7382%" y="309" width="0.1980%" height="15" fill="rgb(232,46,7)" fg:x="119082" fg:w="494"/><text x="47.9882%" y="319.50"></text></g><g><title>free_pcppages_bulk (437 samples, 0.18%)</title><rect x="47.7611%" y="293" width="0.1752%" height="15" fill="rgb(229,129,53)" fg:x="119139" fg:w="437"/><text x="48.0111%" y="303.50"></text></g><g><title>mem_cgroup_uncharge_list (52 samples, 0.02%)</title><rect x="47.9382%" y="325" width="0.0208%" height="15" fill="rgb(234,188,29)" fg:x="119581" fg:w="52"/><text x="48.1882%" y="335.50"></text></g><g><title>uncharge_page (36 samples, 0.01%)</title><rect x="47.9447%" y="309" width="0.0144%" height="15" fill="rgb(246,141,4)" fg:x="119597" fg:w="36"/><text x="48.1947%" y="319.50"></text></g><g><title>tlb_flush_mmu (1,071 samples, 0.43%)</title><rect x="47.5374%" y="373" width="0.4293%" height="15" fill="rgb(229,23,39)" fg:x="118581" fg:w="1071"/><text x="47.7874%" y="383.50"></text></g><g><title>free_pages_and_swap_cache (1,071 samples, 0.43%)</title><rect x="47.5374%" y="357" width="0.4293%" height="15" fill="rgb(206,12,3)" fg:x="118581" fg:w="1071"/><text x="47.7874%" y="367.50"></text></g><g><title>release_pages (953 samples, 0.38%)</title><rect x="47.5847%" y="341" width="0.3820%" height="15" fill="rgb(252,226,20)" fg:x="118699" fg:w="953"/><text x="47.8347%" y="351.50"></text></g><g><title>__free (2,992 samples, 1.20%)</title><rect x="46.7829%" y="581" width="1.1994%" height="15" fill="rgb(216,123,35)" fg:x="116699" fg:w="2992"/><text x="47.0329%" y="591.50"></text></g><g><title>__GI___munmap (2,991 samples, 1.20%)</title><rect x="46.7833%" y="565" width="1.1990%" height="15" fill="rgb(212,68,40)" fg:x="116700" fg:w="2991"/><text x="47.0333%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,990 samples, 1.20%)</title><rect x="46.7837%" y="549" width="1.1986%" height="15" fill="rgb(254,125,32)" fg:x="116701" fg:w="2990"/><text x="47.0337%" y="559.50"></text></g><g><title>do_syscall_64 (2,990 samples, 1.20%)</title><rect x="46.7837%" y="533" width="1.1986%" height="15" fill="rgb(253,97,22)" fg:x="116701" fg:w="2990"/><text x="47.0337%" y="543.50"></text></g><g><title>__x64_sys_munmap (2,990 samples, 1.20%)</title><rect x="46.7837%" y="517" width="1.1986%" height="15" fill="rgb(241,101,14)" fg:x="116701" fg:w="2990"/><text x="47.0337%" y="527.50"></text></g><g><title>__vm_munmap (2,990 samples, 1.20%)</title><rect x="46.7837%" y="501" width="1.1986%" height="15" fill="rgb(238,103,29)" fg:x="116701" fg:w="2990"/><text x="47.0337%" y="511.50"></text></g><g><title>__do_munmap (2,990 samples, 1.20%)</title><rect x="46.7837%" y="485" width="1.1986%" height="15" fill="rgb(233,195,47)" fg:x="116701" fg:w="2990"/><text x="47.0337%" y="495.50"></text></g><g><title>unmap_region (2,990 samples, 1.20%)</title><rect x="46.7837%" y="469" width="1.1986%" height="15" fill="rgb(246,218,30)" fg:x="116701" fg:w="2990"/><text x="47.0337%" y="479.50"></text></g><g><title>unmap_vmas (2,314 samples, 0.93%)</title><rect x="47.0547%" y="453" width="0.9276%" height="15" fill="rgb(219,145,47)" fg:x="117377" fg:w="2314"/><text x="47.3047%" y="463.50"></text></g><g><title>unmap_single_vma (2,314 samples, 0.93%)</title><rect x="47.0547%" y="437" width="0.9276%" height="15" fill="rgb(243,12,26)" fg:x="117377" fg:w="2314"/><text x="47.3047%" y="447.50"></text></g><g><title>unmap_page_range (2,313 samples, 0.93%)</title><rect x="47.0551%" y="421" width="0.9272%" height="15" fill="rgb(214,87,16)" fg:x="117378" fg:w="2313"/><text x="47.3051%" y="431.50"></text></g><g><title>zap_pmd_range.isra.0 (2,312 samples, 0.93%)</title><rect x="47.0555%" y="405" width="0.9268%" height="15" fill="rgb(208,99,42)" fg:x="117379" fg:w="2312"/><text x="47.3055%" y="415.50"></text></g><g><title>zap_pte_range (2,285 samples, 0.92%)</title><rect x="47.0663%" y="389" width="0.9160%" height="15" fill="rgb(253,99,2)" fg:x="117406" fg:w="2285"/><text x="47.3163%" y="399.50"></text></g><g><title>vm_normal_page (25 samples, 0.01%)</title><rect x="47.9723%" y="373" width="0.0100%" height="15" fill="rgb(220,168,23)" fg:x="119666" fg:w="25"/><text x="48.2223%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,993 samples, 1.20%)</title><rect x="46.7829%" y="661" width="1.1998%" height="15" fill="rgb(242,38,24)" fg:x="116699" fg:w="2993"/><text x="47.0329%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,993 samples, 1.20%)</title><rect x="46.7829%" y="645" width="1.1998%" height="15" fill="rgb(225,182,9)" fg:x="116699" fg:w="2993"/><text x="47.0329%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,993 samples, 1.20%)</title><rect x="46.7829%" y="629" width="1.1998%" height="15" fill="rgb(243,178,37)" fg:x="116699" fg:w="2993"/><text x="47.0329%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,993 samples, 1.20%)</title><rect x="46.7829%" y="613" width="1.1998%" height="15" fill="rgb(232,139,19)" fg:x="116699" fg:w="2993"/><text x="47.0329%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (2,993 samples, 1.20%)</title><rect x="46.7829%" y="597" width="1.1998%" height="15" fill="rgb(225,201,24)" fg:x="116699" fg:w="2993"/><text x="47.0329%" y="607.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (27 samples, 0.01%)</title><rect x="47.9827%" y="661" width="0.0108%" height="15" fill="rgb(221,47,46)" fg:x="119692" fg:w="27"/><text x="48.2327%" y="671.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (27 samples, 0.01%)</title><rect x="47.9827%" y="645" width="0.0108%" height="15" fill="rgb(249,23,13)" fg:x="119692" fg:w="27"/><text x="48.2327%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (27 samples, 0.01%)</title><rect x="47.9827%" y="629" width="0.0108%" height="15" fill="rgb(219,9,5)" fg:x="119692" fg:w="27"/><text x="48.2327%" y="639.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (27 samples, 0.01%)</title><rect x="47.9827%" y="613" width="0.0108%" height="15" fill="rgb(254,171,16)" fg:x="119692" fg:w="27"/><text x="48.2327%" y="623.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (27 samples, 0.01%)</title><rect x="47.9827%" y="597" width="0.0108%" height="15" fill="rgb(230,171,20)" fg:x="119692" fg:w="27"/><text x="48.2327%" y="607.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (27 samples, 0.01%)</title><rect x="47.9827%" y="581" width="0.0108%" height="15" fill="rgb(210,71,41)" fg:x="119692" fg:w="27"/><text x="48.2327%" y="591.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (27 samples, 0.01%)</title><rect x="47.9827%" y="565" width="0.0108%" height="15" fill="rgb(206,173,20)" fg:x="119692" fg:w="27"/><text x="48.2327%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (27 samples, 0.01%)</title><rect x="47.9827%" y="549" width="0.0108%" height="15" fill="rgb(233,88,34)" fg:x="119692" fg:w="27"/><text x="48.2327%" y="559.50"></text></g><g><title>nom::combinator::map::{{closure}} (27 samples, 0.01%)</title><rect x="47.9827%" y="533" width="0.0108%" height="15" fill="rgb(223,209,46)" fg:x="119692" fg:w="27"/><text x="48.2327%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (27 samples, 0.01%)</title><rect x="47.9827%" y="517" width="0.0108%" height="15" fill="rgb(250,43,18)" fg:x="119692" fg:w="27"/><text x="48.2327%" y="527.50"></text></g><g><title>nom::multi::count::{{closure}} (27 samples, 0.01%)</title><rect x="47.9827%" y="501" width="0.0108%" height="15" fill="rgb(208,13,10)" fg:x="119692" fg:w="27"/><text x="48.2327%" y="511.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (34 samples, 0.01%)</title><rect x="47.9940%" y="645" width="0.0136%" height="15" fill="rgb(212,200,36)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="655.50"></text></g><g><title>std::io::default_read_exact (34 samples, 0.01%)</title><rect x="47.9940%" y="629" width="0.0136%" height="15" fill="rgb(225,90,30)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="639.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (34 samples, 0.01%)</title><rect x="47.9940%" y="613" width="0.0136%" height="15" fill="rgb(236,182,39)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="623.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (34 samples, 0.01%)</title><rect x="47.9940%" y="597" width="0.0136%" height="15" fill="rgb(212,144,35)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="607.50"></text></g><g><title>std::sys::unix::fs::File::read (34 samples, 0.01%)</title><rect x="47.9940%" y="581" width="0.0136%" height="15" fill="rgb(228,63,44)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="591.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (34 samples, 0.01%)</title><rect x="47.9940%" y="565" width="0.0136%" height="15" fill="rgb(228,109,6)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="575.50"></text></g><g><title>__libc_read (34 samples, 0.01%)</title><rect x="47.9940%" y="549" width="0.0136%" height="15" fill="rgb(238,117,24)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.01%)</title><rect x="47.9940%" y="533" width="0.0136%" height="15" fill="rgb(242,26,26)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="543.50"></text></g><g><title>do_syscall_64 (34 samples, 0.01%)</title><rect x="47.9940%" y="517" width="0.0136%" height="15" fill="rgb(221,92,48)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="527.50"></text></g><g><title>__x64_sys_read (34 samples, 0.01%)</title><rect x="47.9940%" y="501" width="0.0136%" height="15" fill="rgb(209,209,32)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="511.50"></text></g><g><title>ksys_read (34 samples, 0.01%)</title><rect x="47.9940%" y="485" width="0.0136%" height="15" fill="rgb(221,70,22)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="495.50"></text></g><g><title>vfs_read (34 samples, 0.01%)</title><rect x="47.9940%" y="469" width="0.0136%" height="15" fill="rgb(248,145,5)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="479.50"></text></g><g><title>new_sync_read (34 samples, 0.01%)</title><rect x="47.9940%" y="453" width="0.0136%" height="15" fill="rgb(226,116,26)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="463.50"></text></g><g><title>ext4_file_read_iter (34 samples, 0.01%)</title><rect x="47.9940%" y="437" width="0.0136%" height="15" fill="rgb(244,5,17)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="447.50"></text></g><g><title>generic_file_read_iter (34 samples, 0.01%)</title><rect x="47.9940%" y="421" width="0.0136%" height="15" fill="rgb(252,159,33)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="431.50"></text></g><g><title>filemap_read (34 samples, 0.01%)</title><rect x="47.9940%" y="405" width="0.0136%" height="15" fill="rgb(206,71,0)" fg:x="119720" fg:w="34"/><text x="48.2440%" y="415.50"></text></g><g><title>__mod_memcg_lruvec_state (33 samples, 0.01%)</title><rect x="48.1098%" y="373" width="0.0132%" height="15" fill="rgb(233,118,54)" fg:x="120009" fg:w="33"/><text x="48.3598%" y="383.50"></text></g><g><title>__mod_lruvec_state (50 samples, 0.02%)</title><rect x="48.1074%" y="389" width="0.0200%" height="15" fill="rgb(234,83,48)" fg:x="120003" fg:w="50"/><text x="48.3574%" y="399.50"></text></g><g><title>__free_one_page (170 samples, 0.07%)</title><rect x="48.1996%" y="341" width="0.0682%" height="15" fill="rgb(228,3,54)" fg:x="120233" fg:w="170"/><text x="48.4496%" y="351.50"></text></g><g><title>free_unref_page_list (329 samples, 0.13%)</title><rect x="48.1387%" y="389" width="0.1319%" height="15" fill="rgb(226,155,13)" fg:x="120081" fg:w="329"/><text x="48.3887%" y="399.50"></text></g><g><title>free_unref_page_commit (282 samples, 0.11%)</title><rect x="48.1575%" y="373" width="0.1130%" height="15" fill="rgb(241,28,37)" fg:x="120128" fg:w="282"/><text x="48.4075%" y="383.50"></text></g><g><title>free_pcppages_bulk (250 samples, 0.10%)</title><rect x="48.1704%" y="357" width="0.1002%" height="15" fill="rgb(233,93,10)" fg:x="120160" fg:w="250"/><text x="48.4204%" y="367.50"></text></g><g><title>mem_cgroup_uncharge_list (32 samples, 0.01%)</title><rect x="48.2718%" y="389" width="0.0128%" height="15" fill="rgb(225,113,19)" fg:x="120413" fg:w="32"/><text x="48.5218%" y="399.50"></text></g><g><title>uncharge_page (29 samples, 0.01%)</title><rect x="48.2730%" y="373" width="0.0116%" height="15" fill="rgb(241,2,18)" fg:x="120416" fg:w="29"/><text x="48.5230%" y="383.50"></text></g><g><title>tlb_finish_mmu (664 samples, 0.27%)</title><rect x="48.0236%" y="437" width="0.2662%" height="15" fill="rgb(228,207,21)" fg:x="119794" fg:w="664"/><text x="48.2736%" y="447.50"></text></g><g><title>free_pages_and_swap_cache (662 samples, 0.27%)</title><rect x="48.0244%" y="421" width="0.2654%" height="15" fill="rgb(213,211,35)" fg:x="119796" fg:w="662"/><text x="48.2744%" y="431.50"></text></g><g><title>release_pages (586 samples, 0.23%)</title><rect x="48.0549%" y="405" width="0.2349%" height="15" fill="rgb(209,83,10)" fg:x="119872" fg:w="586"/><text x="48.3049%" y="415.50"></text></g><g><title>__tlb_remove_page_size (28 samples, 0.01%)</title><rect x="48.5696%" y="357" width="0.0112%" height="15" fill="rgb(209,164,1)" fg:x="121156" fg:w="28"/><text x="48.8196%" y="367.50"></text></g><g><title>__mod_memcg_state.part.0 (25 samples, 0.01%)</title><rect x="48.7019%" y="293" width="0.0100%" height="15" fill="rgb(213,184,43)" fg:x="121486" fg:w="25"/><text x="48.9519%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (121 samples, 0.05%)</title><rect x="48.6691%" y="309" width="0.0485%" height="15" fill="rgb(231,61,34)" fg:x="121404" fg:w="121"/><text x="48.9191%" y="319.50"></text></g><g><title>__mod_lruvec_state (193 samples, 0.08%)</title><rect x="48.6570%" y="325" width="0.0774%" height="15" fill="rgb(235,75,3)" fg:x="121374" fg:w="193"/><text x="48.9070%" y="335.50"></text></g><g><title>__mod_lruvec_page_state (252 samples, 0.10%)</title><rect x="48.6430%" y="341" width="0.1010%" height="15" fill="rgb(220,106,47)" fg:x="121339" fg:w="252"/><text x="48.8930%" y="351.50"></text></g><g><title>lock_page_memcg (25 samples, 0.01%)</title><rect x="48.7472%" y="341" width="0.0100%" height="15" fill="rgb(210,196,33)" fg:x="121599" fg:w="25"/><text x="48.9972%" y="351.50"></text></g><g><title>page_remove_rmap (469 samples, 0.19%)</title><rect x="48.5841%" y="357" width="0.1880%" height="15" fill="rgb(229,154,42)" fg:x="121192" fg:w="469"/><text x="48.8341%" y="367.50"></text></g><g><title>unlock_page_memcg (27 samples, 0.01%)</title><rect x="48.7613%" y="341" width="0.0108%" height="15" fill="rgb(228,114,26)" fg:x="121634" fg:w="27"/><text x="49.0113%" y="351.50"></text></g><g><title>__mod_memcg_lruvec_state (52 samples, 0.02%)</title><rect x="48.9080%" y="293" width="0.0208%" height="15" fill="rgb(208,144,1)" fg:x="122000" fg:w="52"/><text x="49.1580%" y="303.50"></text></g><g><title>__mod_lruvec_state (99 samples, 0.04%)</title><rect x="48.8992%" y="309" width="0.0397%" height="15" fill="rgb(239,112,37)" fg:x="121978" fg:w="99"/><text x="49.1492%" y="319.50"></text></g><g><title>__free_one_page (289 samples, 0.12%)</title><rect x="49.0507%" y="261" width="0.1159%" height="15" fill="rgb(210,96,50)" fg:x="122356" fg:w="289"/><text x="49.3007%" y="271.50"></text></g><g><title>free_unref_page_list (535 samples, 0.21%)</title><rect x="48.9573%" y="309" width="0.2145%" height="15" fill="rgb(222,178,2)" fg:x="122123" fg:w="535"/><text x="49.2073%" y="319.50"></text></g><g><title>free_unref_page_commit (448 samples, 0.18%)</title><rect x="48.9922%" y="293" width="0.1796%" height="15" fill="rgb(226,74,18)" fg:x="122210" fg:w="448"/><text x="49.2422%" y="303.50"></text></g><g><title>free_pcppages_bulk (406 samples, 0.16%)</title><rect x="49.0090%" y="277" width="0.1628%" height="15" fill="rgb(225,67,54)" fg:x="122252" fg:w="406"/><text x="49.2590%" y="287.50"></text></g><g><title>mem_cgroup_uncharge_list (55 samples, 0.02%)</title><rect x="49.1742%" y="309" width="0.0220%" height="15" fill="rgb(251,92,32)" fg:x="122664" fg:w="55"/><text x="49.4242%" y="319.50"></text></g><g><title>uncharge_page (45 samples, 0.02%)</title><rect x="49.1782%" y="293" width="0.0180%" height="15" fill="rgb(228,149,22)" fg:x="122674" fg:w="45"/><text x="49.4282%" y="303.50"></text></g><g><title>tlb_flush_mmu (1,077 samples, 0.43%)</title><rect x="48.7721%" y="357" width="0.4318%" height="15" fill="rgb(243,54,13)" fg:x="121661" fg:w="1077"/><text x="49.0221%" y="367.50"></text></g><g><title>free_pages_and_swap_cache (1,074 samples, 0.43%)</title><rect x="48.7733%" y="341" width="0.4306%" height="15" fill="rgb(243,180,28)" fg:x="121664" fg:w="1074"/><text x="49.0233%" y="351.50"></text></g><g><title>release_pages (964 samples, 0.39%)</title><rect x="48.8174%" y="325" width="0.3865%" height="15" fill="rgb(208,167,24)" fg:x="121774" fg:w="964"/><text x="49.0674%" y="335.50"></text></g><g><title>unmap_region (2,994 samples, 1.20%)</title><rect x="48.0208%" y="453" width="1.2003%" height="15" fill="rgb(245,73,45)" fg:x="119787" fg:w="2994"/><text x="48.2708%" y="463.50"></text></g><g><title>unmap_vmas (2,323 samples, 0.93%)</title><rect x="48.2898%" y="437" width="0.9313%" height="15" fill="rgb(237,203,48)" fg:x="120458" fg:w="2323"/><text x="48.5398%" y="447.50"></text></g><g><title>unmap_single_vma (2,323 samples, 0.93%)</title><rect x="48.2898%" y="421" width="0.9313%" height="15" fill="rgb(211,197,16)" fg:x="120458" fg:w="2323"/><text x="48.5398%" y="431.50"></text></g><g><title>unmap_page_range (2,323 samples, 0.93%)</title><rect x="48.2898%" y="405" width="0.9313%" height="15" fill="rgb(243,99,51)" fg:x="120458" fg:w="2323"/><text x="48.5398%" y="415.50"></text></g><g><title>zap_pmd_range.isra.0 (2,322 samples, 0.93%)</title><rect x="48.2902%" y="389" width="0.9309%" height="15" fill="rgb(215,123,29)" fg:x="120459" fg:w="2322"/><text x="48.5402%" y="399.50"></text></g><g><title>zap_pte_range (2,294 samples, 0.92%)</title><rect x="48.3014%" y="373" width="0.9196%" height="15" fill="rgb(239,186,37)" fg:x="120487" fg:w="2294"/><text x="48.5514%" y="383.50"></text></g><g><title>vm_normal_page (29 samples, 0.01%)</title><rect x="49.2095%" y="357" width="0.0116%" height="15" fill="rgb(252,136,39)" fg:x="122752" fg:w="29"/><text x="49.4595%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,997 samples, 1.20%)</title><rect x="48.0200%" y="645" width="1.2015%" height="15" fill="rgb(223,213,32)" fg:x="119785" fg:w="2997"/><text x="48.2700%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,997 samples, 1.20%)</title><rect x="48.0200%" y="629" width="1.2015%" height="15" fill="rgb(233,115,5)" fg:x="119785" fg:w="2997"/><text x="48.2700%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,997 samples, 1.20%)</title><rect x="48.0200%" y="613" width="1.2015%" height="15" fill="rgb(207,226,44)" fg:x="119785" fg:w="2997"/><text x="48.2700%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,997 samples, 1.20%)</title><rect x="48.0200%" y="597" width="1.2015%" height="15" fill="rgb(208,126,0)" fg:x="119785" fg:w="2997"/><text x="48.2700%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (2,997 samples, 1.20%)</title><rect x="48.0200%" y="581" width="1.2015%" height="15" fill="rgb(244,66,21)" fg:x="119785" fg:w="2997"/><text x="48.2700%" y="591.50"></text></g><g><title>__free (2,997 samples, 1.20%)</title><rect x="48.0200%" y="565" width="1.2015%" height="15" fill="rgb(222,97,12)" fg:x="119785" fg:w="2997"/><text x="48.2700%" y="575.50"></text></g><g><title>__GI___munmap (2,996 samples, 1.20%)</title><rect x="48.0204%" y="549" width="1.2011%" height="15" fill="rgb(219,213,19)" fg:x="119786" fg:w="2996"/><text x="48.2704%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,996 samples, 1.20%)</title><rect x="48.0204%" y="533" width="1.2011%" height="15" fill="rgb(252,169,30)" fg:x="119786" fg:w="2996"/><text x="48.2704%" y="543.50"></text></g><g><title>do_syscall_64 (2,995 samples, 1.20%)</title><rect x="48.0208%" y="517" width="1.2007%" height="15" fill="rgb(206,32,51)" fg:x="119787" fg:w="2995"/><text x="48.2708%" y="527.50"></text></g><g><title>__x64_sys_munmap (2,995 samples, 1.20%)</title><rect x="48.0208%" y="501" width="1.2007%" height="15" fill="rgb(250,172,42)" fg:x="119787" fg:w="2995"/><text x="48.2708%" y="511.50"></text></g><g><title>__vm_munmap (2,995 samples, 1.20%)</title><rect x="48.0208%" y="485" width="1.2007%" height="15" fill="rgb(209,34,43)" fg:x="119787" fg:w="2995"/><text x="48.2708%" y="495.50"></text></g><g><title>__do_munmap (2,995 samples, 1.20%)</title><rect x="48.0208%" y="469" width="1.2007%" height="15" fill="rgb(223,11,35)" fg:x="119787" fg:w="2995"/><text x="48.2708%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,528 samples, 0.61%)</title><rect x="52.6162%" y="581" width="0.6126%" height="15" fill="rgb(251,219,26)" fg:x="131250" fg:w="1528"/><text x="52.8662%" y="591.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u8 (901 samples, 0.36%)</title><rect x="54.0205%" y="565" width="0.3612%" height="15" fill="rgb(231,119,3)" fg:x="134753" fg:w="901"/><text x="54.2705%" y="575.50"></text></g><g><title>nom::number::streaming::be_u8 (901 samples, 0.36%)</title><rect x="54.0205%" y="549" width="0.3612%" height="15" fill="rgb(216,97,11)" fg:x="134753" fg:w="901"/><text x="54.2705%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (894 samples, 0.36%)</title><rect x="54.0233%" y="533" width="0.3584%" height="15" fill="rgb(223,59,9)" fg:x="134760" fg:w="894"/><text x="54.2733%" y="543.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (894 samples, 0.36%)</title><rect x="54.0233%" y="517" width="0.3584%" height="15" fill="rgb(233,93,31)" fg:x="134760" fg:w="894"/><text x="54.2733%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (514 samples, 0.21%)</title><rect x="54.5865%" y="501" width="0.2061%" height="15" fill="rgb(239,81,33)" fg:x="136165" fg:w="514"/><text x="54.8365%" y="511.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (514 samples, 0.21%)</title><rect x="54.5865%" y="485" width="0.2061%" height="15" fill="rgb(213,120,34)" fg:x="136165" fg:w="514"/><text x="54.8365%" y="495.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (514 samples, 0.21%)</title><rect x="54.5865%" y="469" width="0.2061%" height="15" fill="rgb(243,49,53)" fg:x="136165" fg:w="514"/><text x="54.8365%" y="479.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,023 samples, 0.41%)</title><rect x="54.3829%" y="517" width="0.4101%" height="15" fill="rgb(247,216,33)" fg:x="135657" fg:w="1023"/><text x="54.6329%" y="527.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u32 (1,678 samples, 0.67%)</title><rect x="56.2462%" y="453" width="0.6727%" height="15" fill="rgb(226,26,14)" fg:x="140305" fg:w="1678"/><text x="56.4962%" y="463.50"></text></g><g><title>nom::number::streaming::be_u32 (1,678 samples, 0.67%)</title><rect x="56.2462%" y="437" width="0.6727%" height="15" fill="rgb(215,49,53)" fg:x="140305" fg:w="1678"/><text x="56.4962%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,123 samples, 1.25%)</title><rect x="56.2462%" y="485" width="1.2520%" height="15" fill="rgb(245,162,40)" fg:x="140305" fg:w="3123"/><text x="56.4962%" y="495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,123 samples, 1.25%)</title><rect x="56.2462%" y="469" width="1.2520%" height="15" fill="rgb(229,68,17)" fg:x="140305" fg:w="3123"/><text x="56.4962%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (1,445 samples, 0.58%)</title><rect x="56.9189%" y="453" width="0.5793%" height="15" fill="rgb(213,182,10)" fg:x="141983" fg:w="1445"/><text x="57.1689%" y="463.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (1,445 samples, 0.58%)</title><rect x="56.9189%" y="437" width="0.5793%" height="15" fill="rgb(245,125,30)" fg:x="141983" fg:w="1445"/><text x="57.1689%" y="447.50"></text></g><g><title>nom::number::streaming::be_u64 (1,445 samples, 0.58%)</title><rect x="56.9189%" y="421" width="0.5793%" height="15" fill="rgb(232,202,2)" fg:x="141983" fg:w="1445"/><text x="57.1689%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (7,777 samples, 3.12%)</title><rect x="54.3829%" y="533" width="3.1177%" height="15" fill="rgb(237,140,51)" fg:x="135657" fg:w="7777"/><text x="54.6329%" y="543.50">&lt;F ..</text></g><g><title>nom::sequence::tuple::{{closure}} (6,754 samples, 2.71%)</title><rect x="54.7930%" y="517" width="2.7076%" height="15" fill="rgb(236,157,25)" fg:x="136680" fg:w="6754"/><text x="55.0430%" y="527.50">no..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (6,754 samples, 2.71%)</title><rect x="54.7930%" y="501" width="2.7076%" height="15" fill="rgb(219,209,0)" fg:x="136680" fg:w="6754"/><text x="55.0430%" y="511.50">&lt;(..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,008 samples, 0.40%)</title><rect x="57.5006%" y="533" width="0.4041%" height="15" fill="rgb(240,116,54)" fg:x="143434" fg:w="1008"/><text x="57.7506%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_instance_dump (8,787 samples, 3.52%)</title><rect x="54.3825%" y="565" width="3.5226%" height="15" fill="rgb(216,10,36)" fg:x="135656" fg:w="8787"/><text x="54.6325%" y="575.50">hpr..</text></g><g><title>nom::combinator::flat_map::{{closure}} (8,787 samples, 3.52%)</title><rect x="54.3825%" y="549" width="3.5226%" height="15" fill="rgb(222,72,44)" fg:x="135656" fg:w="8787"/><text x="54.6325%" y="559.50">nom..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (231 samples, 0.09%)</title><rect x="57.9808%" y="469" width="0.0926%" height="15" fill="rgb(232,159,9)" fg:x="144632" fg:w="231"/><text x="58.2308%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (231 samples, 0.09%)</title><rect x="57.9808%" y="453" width="0.0926%" height="15" fill="rgb(210,39,32)" fg:x="144632" fg:w="231"/><text x="58.2308%" y="463.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (231 samples, 0.09%)</title><rect x="57.9808%" y="437" width="0.0926%" height="15" fill="rgb(216,194,45)" fg:x="144632" fg:w="231"/><text x="58.2308%" y="447.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (231 samples, 0.09%)</title><rect x="57.9808%" y="421" width="0.0926%" height="15" fill="rgb(218,18,35)" fg:x="144632" fg:w="231"/><text x="58.2308%" y="431.50"></text></g><g><title>nom::number::streaming::be_u64 (231 samples, 0.09%)</title><rect x="57.9808%" y="405" width="0.0926%" height="15" fill="rgb(207,83,51)" fg:x="144632" fg:w="231"/><text x="58.2308%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (155 samples, 0.06%)</title><rect x="58.0113%" y="389" width="0.0621%" height="15" fill="rgb(225,63,43)" fg:x="144708" fg:w="155"/><text x="58.2613%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (155 samples, 0.06%)</title><rect x="58.0113%" y="373" width="0.0621%" height="15" fill="rgb(207,57,36)" fg:x="144708" fg:w="155"/><text x="58.2613%" y="383.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (155 samples, 0.06%)</title><rect x="58.0113%" y="357" width="0.0621%" height="15" fill="rgb(216,99,33)" fg:x="144708" fg:w="155"/><text x="58.2613%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (121 samples, 0.05%)</title><rect x="58.0734%" y="469" width="0.0485%" height="15" fill="rgb(225,42,16)" fg:x="144863" fg:w="121"/><text x="58.3234%" y="479.50"></text></g><g><title>core::ptr::write (56 samples, 0.02%)</title><rect x="58.0995%" y="453" width="0.0224%" height="15" fill="rgb(220,201,45)" fg:x="144928" fg:w="56"/><text x="58.3495%" y="463.50"></text></g><g><title>__GI___libc_malloc (458 samples, 0.18%)</title><rect x="58.1247%" y="357" width="0.1836%" height="15" fill="rgb(225,33,4)" fg:x="144991" fg:w="458"/><text x="58.3747%" y="367.50"></text></g><g><title>_int_malloc (191 samples, 0.08%)</title><rect x="58.2318%" y="341" width="0.0766%" height="15" fill="rgb(224,33,50)" fg:x="145258" fg:w="191"/><text x="58.4818%" y="351.50"></text></g><g><title>unlink_chunk.constprop.0 (41 samples, 0.02%)</title><rect x="58.2919%" y="325" width="0.0164%" height="15" fill="rgb(246,198,51)" fg:x="145408" fg:w="41"/><text x="58.5419%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (474 samples, 0.19%)</title><rect x="58.1243%" y="405" width="0.1900%" height="15" fill="rgb(205,22,4)" fg:x="144990" fg:w="474"/><text x="58.3743%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (474 samples, 0.19%)</title><rect x="58.1243%" y="389" width="0.1900%" height="15" fill="rgb(206,3,8)" fg:x="144990" fg:w="474"/><text x="58.3743%" y="399.50"></text></g><g><title>alloc::alloc::alloc (474 samples, 0.19%)</title><rect x="58.1243%" y="373" width="0.1900%" height="15" fill="rgb(251,23,15)" fg:x="144990" fg:w="474"/><text x="58.3743%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (488 samples, 0.20%)</title><rect x="58.1219%" y="469" width="0.1956%" height="15" fill="rgb(252,88,28)" fg:x="144984" fg:w="488"/><text x="58.3719%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (488 samples, 0.20%)</title><rect x="58.1219%" y="453" width="0.1956%" height="15" fill="rgb(212,127,14)" fg:x="144984" fg:w="488"/><text x="58.3719%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (485 samples, 0.19%)</title><rect x="58.1231%" y="437" width="0.1944%" height="15" fill="rgb(247,145,37)" fg:x="144987" fg:w="485"/><text x="58.3731%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (485 samples, 0.19%)</title><rect x="58.1231%" y="421" width="0.1944%" height="15" fill="rgb(209,117,53)" fg:x="144987" fg:w="485"/><text x="58.3731%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,028 samples, 0.41%)</title><rect x="57.9079%" y="501" width="0.4121%" height="15" fill="rgb(212,90,42)" fg:x="144450" fg:w="1028"/><text x="58.1579%" y="511.50"></text></g><g><title>nom::multi::count::{{closure}} (1,022 samples, 0.41%)</title><rect x="57.9103%" y="485" width="0.4097%" height="15" fill="rgb(218,164,37)" fg:x="144456" fg:w="1022"/><text x="58.1603%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,070 samples, 0.43%)</title><rect x="57.9051%" y="517" width="0.4289%" height="15" fill="rgb(246,65,34)" fg:x="144443" fg:w="1070"/><text x="58.1551%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,089 samples, 0.44%)</title><rect x="57.9051%" y="533" width="0.4366%" height="15" fill="rgb(231,100,33)" fg:x="144443" fg:w="1089"/><text x="58.1551%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (1,108 samples, 0.44%)</title><rect x="57.9051%" y="565" width="0.4442%" height="15" fill="rgb(228,126,14)" fg:x="144443" fg:w="1108"/><text x="58.1551%" y="575.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (1,108 samples, 0.44%)</title><rect x="57.9051%" y="549" width="0.4442%" height="15" fill="rgb(215,173,21)" fg:x="144443" fg:w="1108"/><text x="58.1551%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (231 samples, 0.09%)</title><rect x="58.4258%" y="501" width="0.0926%" height="15" fill="rgb(210,6,40)" fg:x="145742" fg:w="231"/><text x="58.6758%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (231 samples, 0.09%)</title><rect x="58.4258%" y="485" width="0.0926%" height="15" fill="rgb(212,48,18)" fg:x="145742" fg:w="231"/><text x="58.6758%" y="495.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i8 (213 samples, 0.09%)</title><rect x="58.4330%" y="469" width="0.0854%" height="15" fill="rgb(230,214,11)" fg:x="145760" fg:w="213"/><text x="58.6830%" y="479.50"></text></g><g><title>nom::number::streaming::be_i8 (213 samples, 0.09%)</title><rect x="58.4330%" y="453" width="0.0854%" height="15" fill="rgb(254,105,39)" fg:x="145760" fg:w="213"/><text x="58.6830%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (213 samples, 0.09%)</title><rect x="58.4330%" y="437" width="0.0854%" height="15" fill="rgb(245,158,5)" fg:x="145760" fg:w="213"/><text x="58.6830%" y="447.50"></text></g><g><title>nom::combinator::map::{{closure}} (213 samples, 0.09%)</title><rect x="58.4330%" y="421" width="0.0854%" height="15" fill="rgb(249,208,11)" fg:x="145760" fg:w="213"/><text x="58.6830%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (213 samples, 0.09%)</title><rect x="58.4330%" y="405" width="0.0854%" height="15" fill="rgb(210,39,28)" fg:x="145760" fg:w="213"/><text x="58.6830%" y="415.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (213 samples, 0.09%)</title><rect x="58.4330%" y="389" width="0.0854%" height="15" fill="rgb(211,56,53)" fg:x="145760" fg:w="213"/><text x="58.6830%" y="399.50"></text></g><g><title>nom::number::streaming::be_u8 (213 samples, 0.09%)</title><rect x="58.4330%" y="373" width="0.0854%" height="15" fill="rgb(226,201,30)" fg:x="145760" fg:w="213"/><text x="58.6830%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 0.03%)</title><rect x="58.4883%" y="357" width="0.0301%" height="15" fill="rgb(239,101,34)" fg:x="145898" fg:w="75"/><text x="58.7383%" y="367.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (75 samples, 0.03%)</title><rect x="58.4883%" y="341" width="0.0301%" height="15" fill="rgb(226,209,5)" fg:x="145898" fg:w="75"/><text x="58.7383%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (138 samples, 0.06%)</title><rect x="58.7048%" y="485" width="0.0553%" height="15" fill="rgb(250,105,47)" fg:x="146438" fg:w="138"/><text x="58.9548%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (904 samples, 0.36%)</title><rect x="58.5184%" y="501" width="0.3624%" height="15" fill="rgb(230,72,3)" fg:x="145973" fg:w="904"/><text x="58.7684%" y="511.50"></text></g><g><title>core::ptr::write (301 samples, 0.12%)</title><rect x="58.7601%" y="485" width="0.1207%" height="15" fill="rgb(232,218,39)" fg:x="146576" fg:w="301"/><text x="59.0101%" y="495.50"></text></g><g><title>_int_malloc (426 samples, 0.17%)</title><rect x="59.2039%" y="373" width="0.1708%" height="15" fill="rgb(248,166,6)" fg:x="147683" fg:w="426"/><text x="59.4539%" y="383.50"></text></g><g><title>__GI___libc_malloc (1,204 samples, 0.48%)</title><rect x="58.8928%" y="389" width="0.4827%" height="15" fill="rgb(247,89,20)" fg:x="146907" fg:w="1204"/><text x="59.1428%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,229 samples, 0.49%)</title><rect x="58.8920%" y="437" width="0.4927%" height="15" fill="rgb(248,130,54)" fg:x="146905" fg:w="1229"/><text x="59.1420%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,229 samples, 0.49%)</title><rect x="58.8920%" y="421" width="0.4927%" height="15" fill="rgb(234,196,4)" fg:x="146905" fg:w="1229"/><text x="59.1420%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1,229 samples, 0.49%)</title><rect x="58.8920%" y="405" width="0.4927%" height="15" fill="rgb(250,143,31)" fg:x="146905" fg:w="1229"/><text x="59.1420%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,246 samples, 0.50%)</title><rect x="58.8860%" y="469" width="0.4995%" height="15" fill="rgb(211,110,34)" fg:x="146890" fg:w="1246"/><text x="59.1360%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,246 samples, 0.50%)</title><rect x="58.8860%" y="453" width="0.4995%" height="15" fill="rgb(215,124,48)" fg:x="146890" fg:w="1246"/><text x="59.1360%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,260 samples, 0.51%)</title><rect x="58.8808%" y="501" width="0.5051%" height="15" fill="rgb(216,46,13)" fg:x="146877" fg:w="1260"/><text x="59.1308%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,260 samples, 0.51%)</title><rect x="58.8808%" y="485" width="0.5051%" height="15" fill="rgb(205,184,25)" fg:x="146877" fg:w="1260"/><text x="59.1308%" y="495.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (48 samples, 0.02%)</title><rect x="59.3895%" y="469" width="0.0192%" height="15" fill="rgb(228,1,10)" fg:x="148146" fg:w="48"/><text x="59.6395%" y="479.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (48 samples, 0.02%)</title><rect x="59.3895%" y="453" width="0.0192%" height="15" fill="rgb(213,116,27)" fg:x="148146" fg:w="48"/><text x="59.6395%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,647 samples, 1.06%)</title><rect x="58.3965%" y="533" width="1.0611%" height="15" fill="rgb(241,95,50)" fg:x="145669" fg:w="2647"/><text x="58.6465%" y="543.50"></text></g><g><title>nom::multi::count::{{closure}} (2,629 samples, 1.05%)</title><rect x="58.4038%" y="517" width="1.0539%" height="15" fill="rgb(238,48,32)" fg:x="145687" fg:w="2629"/><text x="58.6538%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (179 samples, 0.07%)</title><rect x="59.3859%" y="501" width="0.0718%" height="15" fill="rgb(235,113,49)" fg:x="148137" fg:w="179"/><text x="59.6359%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (179 samples, 0.07%)</title><rect x="59.3859%" y="485" width="0.0718%" height="15" fill="rgb(205,127,43)" fg:x="148137" fg:w="179"/><text x="59.6359%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (122 samples, 0.05%)</title><rect x="59.4088%" y="469" width="0.0489%" height="15" fill="rgb(250,162,2)" fg:x="148194" fg:w="122"/><text x="59.6588%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (35 samples, 0.01%)</title><rect x="59.4577%" y="533" width="0.0140%" height="15" fill="rgb(220,13,41)" fg:x="148316" fg:w="35"/><text x="59.7077%" y="543.50"></text></g><g><title>nom::combinator::map::{{closure}} (2,683 samples, 1.08%)</title><rect x="58.3965%" y="549" width="1.0756%" height="15" fill="rgb(249,221,25)" fg:x="145669" fg:w="2683"/><text x="58.6465%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (28 samples, 0.01%)</title><rect x="59.4797%" y="453" width="0.0112%" height="15" fill="rgb(215,208,19)" fg:x="148371" fg:w="28"/><text x="59.7297%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (28 samples, 0.01%)</title><rect x="59.4797%" y="437" width="0.0112%" height="15" fill="rgb(236,175,2)" fg:x="148371" fg:w="28"/><text x="59.7297%" y="447.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i8 (28 samples, 0.01%)</title><rect x="59.4797%" y="421" width="0.0112%" height="15" fill="rgb(241,52,2)" fg:x="148371" fg:w="28"/><text x="59.7297%" y="431.50"></text></g><g><title>nom::number::streaming::be_i8 (28 samples, 0.01%)</title><rect x="59.4797%" y="405" width="0.0112%" height="15" fill="rgb(248,140,14)" fg:x="148371" fg:w="28"/><text x="59.7297%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (28 samples, 0.01%)</title><rect x="59.4797%" y="389" width="0.0112%" height="15" fill="rgb(253,22,42)" fg:x="148371" fg:w="28"/><text x="59.7297%" y="399.50"></text></g><g><title>nom::combinator::map::{{closure}} (28 samples, 0.01%)</title><rect x="59.4797%" y="373" width="0.0112%" height="15" fill="rgb(234,61,47)" fg:x="148371" fg:w="28"/><text x="59.7297%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (28 samples, 0.01%)</title><rect x="59.4797%" y="357" width="0.0112%" height="15" fill="rgb(208,226,15)" fg:x="148371" fg:w="28"/><text x="59.7297%" y="367.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (28 samples, 0.01%)</title><rect x="59.4797%" y="341" width="0.0112%" height="15" fill="rgb(217,221,4)" fg:x="148371" fg:w="28"/><text x="59.7297%" y="351.50"></text></g><g><title>nom::number::streaming::be_u8 (28 samples, 0.01%)</title><rect x="59.4797%" y="325" width="0.0112%" height="15" fill="rgb(212,174,34)" fg:x="148371" fg:w="28"/><text x="59.7297%" y="335.50"></text></g><g><title>hprof_slurp::record_parser::parse_field_type (29 samples, 0.01%)</title><rect x="59.4797%" y="485" width="0.0116%" height="15" fill="rgb(253,83,4)" fg:x="148371" fg:w="29"/><text x="59.7297%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (29 samples, 0.01%)</title><rect x="59.4797%" y="469" width="0.0116%" height="15" fill="rgb(250,195,49)" fg:x="148371" fg:w="29"/><text x="59.7297%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (15,629 samples, 6.27%)</title><rect x="53.2311%" y="581" width="6.2654%" height="15" fill="rgb(241,192,25)" fg:x="132784" fg:w="15629"/><text x="53.4811%" y="591.50">hprof_sl..</text></g><g><title>hprof_slurp::record_parser::parse_gc_primitive_array_dump (2,862 samples, 1.15%)</title><rect x="58.3492%" y="565" width="1.1473%" height="15" fill="rgb(208,124,10)" fg:x="145551" fg:w="2862"/><text x="58.5992%" y="575.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (61 samples, 0.02%)</title><rect x="59.4721%" y="549" width="0.0245%" height="15" fill="rgb(222,33,0)" fg:x="148352" fg:w="61"/><text x="59.7221%" y="559.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (61 samples, 0.02%)</title><rect x="59.4721%" y="533" width="0.0245%" height="15" fill="rgb(234,209,28)" fg:x="148352" fg:w="61"/><text x="59.7221%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (61 samples, 0.02%)</title><rect x="59.4721%" y="517" width="0.0245%" height="15" fill="rgb(224,11,23)" fg:x="148352" fg:w="61"/><text x="59.7221%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (61 samples, 0.02%)</title><rect x="59.4721%" y="501" width="0.0245%" height="15" fill="rgb(232,99,1)" fg:x="148352" fg:w="61"/><text x="59.7221%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (24,472 samples, 9.81%)</title><rect x="49.6953%" y="613" width="9.8105%" height="15" fill="rgb(237,95,45)" fg:x="123964" fg:w="24472"/><text x="49.9453%" y="623.50">&lt;F as nom::int..</text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (23,976 samples, 9.61%)</title><rect x="49.8942%" y="597" width="9.6116%" height="15" fill="rgb(208,109,11)" fg:x="124460" fg:w="23976"/><text x="50.1442%" y="607.50">hprof_slurp::r..</text></g><g><title>__memcpy_avx_unaligned_erms (19,665 samples, 7.88%)</title><rect x="59.5058%" y="613" width="7.8834%" height="15" fill="rgb(216,190,48)" fg:x="148436" fg:w="19665"/><text x="59.7558%" y="623.50">__memcpy_av..</text></g><g><title>zap_pmd_range.isra.0 (64 samples, 0.03%)</title><rect x="68.0162%" y="261" width="0.0257%" height="15" fill="rgb(251,171,36)" fg:x="169665" fg:w="64"/><text x="68.2662%" y="271.50"></text></g><g><title>zap_pte_range (62 samples, 0.02%)</title><rect x="68.0170%" y="245" width="0.0249%" height="15" fill="rgb(230,62,22)" fg:x="169667" fg:w="62"/><text x="68.2670%" y="255.50"></text></g><g><title>do_munmap (109 samples, 0.04%)</title><rect x="67.9985%" y="357" width="0.0437%" height="15" fill="rgb(225,114,35)" fg:x="169621" fg:w="109"/><text x="68.2485%" y="367.50"></text></g><g><title>__do_munmap (109 samples, 0.04%)</title><rect x="67.9985%" y="341" width="0.0437%" height="15" fill="rgb(215,118,42)" fg:x="169621" fg:w="109"/><text x="68.2485%" y="351.50"></text></g><g><title>unmap_region (103 samples, 0.04%)</title><rect x="68.0009%" y="325" width="0.0413%" height="15" fill="rgb(243,119,21)" fg:x="169627" fg:w="103"/><text x="68.2509%" y="335.50"></text></g><g><title>unmap_vmas (66 samples, 0.03%)</title><rect x="68.0158%" y="309" width="0.0265%" height="15" fill="rgb(252,177,53)" fg:x="169664" fg:w="66"/><text x="68.2658%" y="319.50"></text></g><g><title>unmap_single_vma (66 samples, 0.03%)</title><rect x="68.0158%" y="293" width="0.0265%" height="15" fill="rgb(237,209,29)" fg:x="169664" fg:w="66"/><text x="68.2658%" y="303.50"></text></g><g><title>unmap_page_range (65 samples, 0.03%)</title><rect x="68.0162%" y="277" width="0.0261%" height="15" fill="rgb(212,65,23)" fg:x="169665" fg:w="65"/><text x="68.2662%" y="287.50"></text></g><g><title>__alloc_pages (42 samples, 0.02%)</title><rect x="68.0454%" y="293" width="0.0168%" height="15" fill="rgb(230,222,46)" fg:x="169738" fg:w="42"/><text x="68.2954%" y="303.50"></text></g><g><title>alloc_pages (43 samples, 0.02%)</title><rect x="68.0454%" y="309" width="0.0172%" height="15" fill="rgb(215,135,32)" fg:x="169738" fg:w="43"/><text x="68.2954%" y="319.50"></text></g><g><title>__pte_alloc (54 samples, 0.02%)</title><rect x="68.0446%" y="341" width="0.0216%" height="15" fill="rgb(246,101,22)" fg:x="169736" fg:w="54"/><text x="68.2946%" y="351.50"></text></g><g><title>pte_alloc_one (53 samples, 0.02%)</title><rect x="68.0450%" y="325" width="0.0212%" height="15" fill="rgb(206,107,13)" fg:x="169737" fg:w="53"/><text x="68.2950%" y="335.50"></text></g><g><title>move_ptes.constprop.0 (578 samples, 0.23%)</title><rect x="68.0739%" y="341" width="0.2317%" height="15" fill="rgb(250,100,44)" fg:x="169809" fg:w="578"/><text x="68.3239%" y="351.50"></text></g><g><title>flush_tlb_mm_range (43 samples, 0.02%)</title><rect x="68.2884%" y="325" width="0.0172%" height="15" fill="rgb(231,147,38)" fg:x="170344" fg:w="43"/><text x="68.5384%" y="335.50"></text></g><g><title>flush_tlb_func (35 samples, 0.01%)</title><rect x="68.2916%" y="309" width="0.0140%" height="15" fill="rgb(229,8,40)" fg:x="170352" fg:w="35"/><text x="68.5416%" y="319.50"></text></g><g><title>move_page_tables (691 samples, 0.28%)</title><rect x="68.0422%" y="357" width="0.2770%" height="15" fill="rgb(221,135,30)" fg:x="169730" fg:w="691"/><text x="68.2922%" y="367.50"></text></g><g><title>native_set_pte (34 samples, 0.01%)</title><rect x="68.3056%" y="341" width="0.0136%" height="15" fill="rgb(249,193,18)" fg:x="170387" fg:w="34"/><text x="68.5556%" y="351.50"></text></g><g><title>move_vma (816 samples, 0.33%)</title><rect x="67.9925%" y="373" width="0.3271%" height="15" fill="rgb(209,133,39)" fg:x="169606" fg:w="816"/><text x="68.2425%" y="383.50"></text></g><g><title>__mremap (827 samples, 0.33%)</title><rect x="67.9889%" y="453" width="0.3315%" height="15" fill="rgb(232,100,14)" fg:x="169597" fg:w="827"/><text x="68.2389%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (825 samples, 0.33%)</title><rect x="67.9897%" y="437" width="0.3307%" height="15" fill="rgb(224,185,1)" fg:x="169599" fg:w="825"/><text x="68.2397%" y="447.50"></text></g><g><title>do_syscall_64 (825 samples, 0.33%)</title><rect x="67.9897%" y="421" width="0.3307%" height="15" fill="rgb(223,139,8)" fg:x="169599" fg:w="825"/><text x="68.2397%" y="431.50"></text></g><g><title>__x64_sys_mremap (825 samples, 0.33%)</title><rect x="67.9897%" y="405" width="0.3307%" height="15" fill="rgb(232,213,38)" fg:x="169599" fg:w="825"/><text x="68.2397%" y="415.50"></text></g><g><title>__do_sys_mremap (825 samples, 0.33%)</title><rect x="67.9897%" y="389" width="0.3307%" height="15" fill="rgb(207,94,22)" fg:x="169599" fg:w="825"/><text x="68.2397%" y="399.50"></text></g><g><title>clear_page_erms (170 samples, 0.07%)</title><rect x="68.8163%" y="261" width="0.0682%" height="15" fill="rgb(219,183,54)" fg:x="171661" fg:w="170"/><text x="69.0663%" y="271.50"></text></g><g><title>get_page_from_freelist (263 samples, 0.11%)</title><rect x="68.8055%" y="277" width="0.1054%" height="15" fill="rgb(216,185,54)" fg:x="171634" fg:w="263"/><text x="69.0555%" y="287.50"></text></g><g><title>rmqueue (61 samples, 0.02%)</title><rect x="68.8865%" y="261" width="0.0245%" height="15" fill="rgb(254,217,39)" fg:x="171836" fg:w="61"/><text x="69.1365%" y="271.50"></text></g><g><title>rmqueue_bulk.constprop.0 (39 samples, 0.02%)</title><rect x="68.8953%" y="245" width="0.0156%" height="15" fill="rgb(240,178,23)" fg:x="171858" fg:w="39"/><text x="69.1453%" y="255.50"></text></g><g><title>__alloc_pages (293 samples, 0.12%)</title><rect x="68.7947%" y="293" width="0.1175%" height="15" fill="rgb(218,11,47)" fg:x="171607" fg:w="293"/><text x="69.0447%" y="303.50"></text></g><g><title>alloc_pages_vma (302 samples, 0.12%)</title><rect x="68.7919%" y="309" width="0.1211%" height="15" fill="rgb(218,51,51)" fg:x="171600" fg:w="302"/><text x="69.0419%" y="319.50"></text></g><g><title>__pagevec_lru_add_fn (66 samples, 0.03%)</title><rect x="68.9282%" y="261" width="0.0265%" height="15" fill="rgb(238,126,27)" fg:x="171940" fg:w="66"/><text x="69.1782%" y="271.50"></text></g><g><title>__pagevec_lru_add (89 samples, 0.04%)</title><rect x="68.9246%" y="277" width="0.0357%" height="15" fill="rgb(249,202,22)" fg:x="171931" fg:w="89"/><text x="69.1746%" y="287.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (102 samples, 0.04%)</title><rect x="68.9198%" y="309" width="0.0409%" height="15" fill="rgb(254,195,49)" fg:x="171919" fg:w="102"/><text x="69.1698%" y="319.50"></text></g><g><title>lru_cache_add (101 samples, 0.04%)</title><rect x="68.9202%" y="293" width="0.0405%" height="15" fill="rgb(208,123,14)" fg:x="171920" fg:w="101"/><text x="69.1702%" y="303.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (51 samples, 0.02%)</title><rect x="68.9691%" y="277" width="0.0204%" height="15" fill="rgb(224,200,8)" fg:x="172042" fg:w="51"/><text x="69.2191%" y="287.50"></text></g><g><title>__mem_cgroup_charge (102 samples, 0.04%)</title><rect x="68.9623%" y="293" width="0.0409%" height="15" fill="rgb(217,61,36)" fg:x="172025" fg:w="102"/><text x="69.2123%" y="303.50"></text></g><g><title>try_charge (33 samples, 0.01%)</title><rect x="68.9899%" y="277" width="0.0132%" height="15" fill="rgb(206,35,45)" fg:x="172094" fg:w="33"/><text x="69.2399%" y="287.50"></text></g><g><title>mem_cgroup_charge (128 samples, 0.05%)</title><rect x="68.9607%" y="309" width="0.0513%" height="15" fill="rgb(217,65,33)" fg:x="172021" fg:w="128"/><text x="69.2107%" y="319.50"></text></g><g><title>__mod_lruvec_page_state (25 samples, 0.01%)</title><rect x="69.0140%" y="293" width="0.0100%" height="15" fill="rgb(222,158,48)" fg:x="172154" fg:w="25"/><text x="69.2640%" y="303.50"></text></g><g><title>page_add_new_anon_rmap (31 samples, 0.01%)</title><rect x="69.0120%" y="309" width="0.0124%" height="15" fill="rgb(254,2,54)" fg:x="172149" fg:w="31"/><text x="69.2620%" y="319.50"></text></g><g><title>do_anonymous_page (620 samples, 0.25%)</title><rect x="68.7791%" y="325" width="0.2485%" height="15" fill="rgb(250,143,38)" fg:x="171568" fg:w="620"/><text x="69.0291%" y="335.50"></text></g><g><title>handle_pte_fault (640 samples, 0.26%)</title><rect x="68.7743%" y="341" width="0.2566%" height="15" fill="rgb(248,25,0)" fg:x="171556" fg:w="640"/><text x="69.0243%" y="351.50"></text></g><g><title>__handle_mm_fault (677 samples, 0.27%)</title><rect x="68.7606%" y="357" width="0.2714%" height="15" fill="rgb(206,152,27)" fg:x="171522" fg:w="677"/><text x="69.0106%" y="367.50"></text></g><g><title>handle_mm_fault (696 samples, 0.28%)</title><rect x="68.7554%" y="373" width="0.2790%" height="15" fill="rgb(240,77,30)" fg:x="171509" fg:w="696"/><text x="69.0054%" y="383.50"></text></g><g><title>do_user_addr_fault (737 samples, 0.30%)</title><rect x="68.7450%" y="389" width="0.2955%" height="15" fill="rgb(231,5,3)" fg:x="171483" fg:w="737"/><text x="68.9950%" y="399.50"></text></g><g><title>exc_page_fault (771 samples, 0.31%)</title><rect x="68.7406%" y="405" width="0.3091%" height="15" fill="rgb(207,226,32)" fg:x="171472" fg:w="771"/><text x="68.9906%" y="415.50"></text></g><g><title>asm_exc_page_fault (781 samples, 0.31%)</title><rect x="68.7370%" y="421" width="0.3131%" height="15" fill="rgb(222,207,47)" fg:x="171463" fg:w="781"/><text x="68.9870%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,931 samples, 0.77%)</title><rect x="68.3209%" y="437" width="0.7741%" height="15" fill="rgb(229,115,45)" fg:x="170425" fg:w="1931"/><text x="68.5709%" y="447.50"></text></g><g><title>sync_regs (95 samples, 0.04%)</title><rect x="69.0569%" y="421" width="0.0381%" height="15" fill="rgb(224,191,6)" fg:x="172261" fg:w="95"/><text x="69.3069%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,798 samples, 1.12%)</title><rect x="67.9865%" y="597" width="1.1217%" height="15" fill="rgb(230,227,24)" fg:x="169591" fg:w="2798"/><text x="68.2365%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,798 samples, 1.12%)</title><rect x="67.9865%" y="581" width="1.1217%" height="15" fill="rgb(228,80,19)" fg:x="169591" fg:w="2798"/><text x="68.2365%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,798 samples, 1.12%)</title><rect x="67.9865%" y="565" width="1.1217%" height="15" fill="rgb(247,229,0)" fg:x="169591" fg:w="2798"/><text x="68.2365%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,798 samples, 1.12%)</title><rect x="67.9865%" y="549" width="1.1217%" height="15" fill="rgb(237,194,15)" fg:x="169591" fg:w="2798"/><text x="68.2365%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,798 samples, 1.12%)</title><rect x="67.9865%" y="533" width="1.1217%" height="15" fill="rgb(219,203,20)" fg:x="169591" fg:w="2798"/><text x="68.2365%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,798 samples, 1.12%)</title><rect x="67.9865%" y="517" width="1.1217%" height="15" fill="rgb(234,128,8)" fg:x="169591" fg:w="2798"/><text x="68.2365%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,798 samples, 1.12%)</title><rect x="67.9865%" y="501" width="1.1217%" height="15" fill="rgb(248,202,8)" fg:x="169591" fg:w="2798"/><text x="68.2365%" y="511.50"></text></g><g><title>alloc::alloc::realloc (2,798 samples, 1.12%)</title><rect x="67.9865%" y="485" width="1.1217%" height="15" fill="rgb(206,104,37)" fg:x="169591" fg:w="2798"/><text x="68.2365%" y="495.50"></text></g><g><title>__realloc (2,798 samples, 1.12%)</title><rect x="67.9865%" y="469" width="1.1217%" height="15" fill="rgb(223,8,27)" fg:x="169591" fg:w="2798"/><text x="68.2365%" y="479.50"></text></g><g><title>_int_realloc (1,965 samples, 0.79%)</title><rect x="68.3205%" y="453" width="0.7877%" height="15" fill="rgb(216,217,28)" fg:x="170424" fg:w="1965"/><text x="68.5705%" y="463.50"></text></g><g><title>_int_malloc (31 samples, 0.01%)</title><rect x="69.0958%" y="437" width="0.0124%" height="15" fill="rgb(249,199,1)" fg:x="172358" fg:w="31"/><text x="69.3458%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (530 samples, 0.21%)</title><rect x="69.1086%" y="597" width="0.2125%" height="15" fill="rgb(240,85,17)" fg:x="172390" fg:w="530"/><text x="69.3586%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (530 samples, 0.21%)</title><rect x="69.1086%" y="581" width="0.2125%" height="15" fill="rgb(206,108,45)" fg:x="172390" fg:w="530"/><text x="69.3586%" y="591.50"></text></g><g><title>__irqentry_text_end (207 samples, 0.08%)</title><rect x="77.8972%" y="565" width="0.0830%" height="15" fill="rgb(245,210,41)" fg:x="194313" fg:w="207"/><text x="78.1472%" y="575.50"></text></g><g><title>__cond_resched (36 samples, 0.01%)</title><rect x="78.3386%" y="533" width="0.0144%" height="15" fill="rgb(206,13,37)" fg:x="195414" fg:w="36"/><text x="78.5886%" y="543.50"></text></g><g><title>__cond_resched (50 samples, 0.02%)</title><rect x="78.5647%" y="517" width="0.0200%" height="15" fill="rgb(250,61,18)" fg:x="195978" fg:w="50"/><text x="78.8147%" y="527.50"></text></g><g><title>__count_memcg_events (56 samples, 0.02%)</title><rect x="78.5847%" y="517" width="0.0224%" height="15" fill="rgb(235,172,48)" fg:x="196028" fg:w="56"/><text x="78.8347%" y="527.50"></text></g><g><title>down_read_trylock (380 samples, 0.15%)</title><rect x="78.6204%" y="517" width="0.1523%" height="15" fill="rgb(249,201,17)" fg:x="196117" fg:w="380"/><text x="78.8704%" y="527.50"></text></g><g><title>find_vma (259 samples, 0.10%)</title><rect x="78.7727%" y="517" width="0.1038%" height="15" fill="rgb(219,208,6)" fg:x="196497" fg:w="259"/><text x="79.0227%" y="527.50"></text></g><g><title>vmacache_find (187 samples, 0.07%)</title><rect x="78.8016%" y="501" width="0.0750%" height="15" fill="rgb(248,31,23)" fg:x="196569" fg:w="187"/><text x="79.0516%" y="511.50"></text></g><g><title>__count_memcg_events (151 samples, 0.06%)</title><rect x="79.1504%" y="501" width="0.0605%" height="15" fill="rgb(245,15,42)" fg:x="197439" fg:w="151"/><text x="79.4004%" y="511.50"></text></g><g><title>cgroup_rstat_updated (85 samples, 0.03%)</title><rect x="79.1768%" y="485" width="0.0341%" height="15" fill="rgb(222,217,39)" fg:x="197505" fg:w="85"/><text x="79.4268%" y="495.50"></text></g><g><title>_raw_spin_lock (352 samples, 0.14%)</title><rect x="79.9008%" y="469" width="0.1411%" height="15" fill="rgb(210,219,27)" fg:x="199311" fg:w="352"/><text x="80.1508%" y="479.50"></text></g><g><title>add_mm_counter_fast (39 samples, 0.02%)</title><rect x="80.0419%" y="469" width="0.0156%" height="15" fill="rgb(252,166,36)" fg:x="199663" fg:w="39"/><text x="80.2919%" y="479.50"></text></g><g><title>alloc_pages_vma (35 samples, 0.01%)</title><rect x="80.0576%" y="469" width="0.0140%" height="15" fill="rgb(245,132,34)" fg:x="199702" fg:w="35"/><text x="80.3076%" y="479.50"></text></g><g><title>__get_vma_policy (60 samples, 0.02%)</title><rect x="80.3286%" y="453" width="0.0241%" height="15" fill="rgb(236,54,3)" fg:x="200378" fg:w="60"/><text x="80.5786%" y="463.50"></text></g><g><title>__mem_cgroup_charge (38 samples, 0.02%)</title><rect x="80.3526%" y="453" width="0.0152%" height="15" fill="rgb(241,173,43)" fg:x="200438" fg:w="38"/><text x="80.6026%" y="463.50"></text></g><g><title>__page_set_anon_rmap (53 samples, 0.02%)</title><rect x="80.3775%" y="453" width="0.0212%" height="15" fill="rgb(215,190,9)" fg:x="200500" fg:w="53"/><text x="80.6275%" y="463.50"></text></g><g><title>__alloc_pages (31 samples, 0.01%)</title><rect x="80.3995%" y="405" width="0.0124%" height="15" fill="rgb(242,101,16)" fg:x="200555" fg:w="31"/><text x="80.6495%" y="415.50"></text></g><g><title>alloc_pages (35 samples, 0.01%)</title><rect x="80.3991%" y="421" width="0.0140%" height="15" fill="rgb(223,190,21)" fg:x="200554" fg:w="35"/><text x="80.6491%" y="431.50"></text></g><g><title>__pte_alloc (43 samples, 0.02%)</title><rect x="80.3987%" y="453" width="0.0172%" height="15" fill="rgb(215,228,25)" fg:x="200553" fg:w="43"/><text x="80.6487%" y="463.50"></text></g><g><title>pte_alloc_one (42 samples, 0.02%)</title><rect x="80.3991%" y="437" width="0.0168%" height="15" fill="rgb(225,36,22)" fg:x="200554" fg:w="42"/><text x="80.6491%" y="447.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (32 samples, 0.01%)</title><rect x="80.8337%" y="421" width="0.0128%" height="15" fill="rgb(251,106,46)" fg:x="201638" fg:w="32"/><text x="81.0837%" y="431.50"></text></g><g><title>__cond_resched (62 samples, 0.02%)</title><rect x="80.8465%" y="421" width="0.0249%" height="15" fill="rgb(208,90,1)" fg:x="201670" fg:w="62"/><text x="81.0965%" y="431.50"></text></g><g><title>__next_zones_zonelist (321 samples, 0.13%)</title><rect x="80.8714%" y="421" width="0.1287%" height="15" fill="rgb(243,10,4)" fg:x="201732" fg:w="321"/><text x="81.1214%" y="431.50"></text></g><g><title>__zone_watermark_ok (43 samples, 0.02%)</title><rect x="81.0000%" y="421" width="0.0172%" height="15" fill="rgb(212,137,27)" fg:x="202053" fg:w="43"/><text x="81.2500%" y="431.50"></text></g><g><title>__inc_numa_state (140 samples, 0.06%)</title><rect x="81.4390%" y="405" width="0.0561%" height="15" fill="rgb(231,220,49)" fg:x="203148" fg:w="140"/><text x="81.6890%" y="415.50"></text></g><g><title>__next_zones_zonelist (160 samples, 0.06%)</title><rect x="81.4951%" y="405" width="0.0641%" height="15" fill="rgb(237,96,20)" fg:x="203288" fg:w="160"/><text x="81.7451%" y="415.50"></text></g><g><title>clear_page_erms (7,012 samples, 2.81%)</title><rect x="81.5701%" y="405" width="2.8110%" height="15" fill="rgb(239,229,30)" fg:x="203475" fg:w="7012"/><text x="81.8201%" y="415.50">cl..</text></g><g><title>kernel_init_free_pages (155 samples, 0.06%)</title><rect x="84.3811%" y="405" width="0.0621%" height="15" fill="rgb(219,65,33)" fg:x="210487" fg:w="155"/><text x="84.6311%" y="415.50"></text></g><g><title>rmqueue (2,280 samples, 0.91%)</title><rect x="84.4433%" y="405" width="0.9140%" height="15" fill="rgb(243,134,7)" fg:x="210642" fg:w="2280"/><text x="84.6933%" y="415.50"></text></g><g><title>rmqueue_bulk.constprop.0 (1,425 samples, 0.57%)</title><rect x="84.7860%" y="389" width="0.5713%" height="15" fill="rgb(216,177,54)" fg:x="211497" fg:w="1425"/><text x="85.0360%" y="399.50"></text></g><g><title>get_page_from_freelist (10,828 samples, 4.34%)</title><rect x="81.0181%" y="421" width="4.3408%" height="15" fill="rgb(211,160,20)" fg:x="202098" fg:w="10828"/><text x="81.2681%" y="431.50">get_p..</text></g><g><title>kernel_init_free_pages (42 samples, 0.02%)</title><rect x="85.3589%" y="421" width="0.0168%" height="15" fill="rgb(239,85,39)" fg:x="212926" fg:w="42"/><text x="85.6089%" y="431.50"></text></g><g><title>rcu_all_qs (35 samples, 0.01%)</title><rect x="85.3757%" y="421" width="0.0140%" height="15" fill="rgb(232,125,22)" fg:x="212968" fg:w="35"/><text x="85.6257%" y="431.50"></text></g><g><title>__alloc_pages (12,023 samples, 4.82%)</title><rect x="80.5759%" y="437" width="4.8198%" height="15" fill="rgb(244,57,34)" fg:x="200995" fg:w="12023"/><text x="80.8259%" y="447.50">__allo..</text></g><g><title>__cond_resched (46 samples, 0.02%)</title><rect x="85.3958%" y="437" width="0.0184%" height="15" fill="rgb(214,203,32)" fg:x="213018" fg:w="46"/><text x="85.6458%" y="447.50"></text></g><g><title>__next_zones_zonelist (89 samples, 0.04%)</title><rect x="85.4142%" y="437" width="0.0357%" height="15" fill="rgb(207,58,43)" fg:x="213064" fg:w="89"/><text x="85.6642%" y="447.50"></text></g><g><title>get_page_from_freelist (28 samples, 0.01%)</title><rect x="85.4499%" y="437" width="0.0112%" height="15" fill="rgb(215,193,15)" fg:x="213153" fg:w="28"/><text x="85.6999%" y="447.50"></text></g><g><title>policy_nodemask (53 samples, 0.02%)</title><rect x="85.4699%" y="437" width="0.0212%" height="15" fill="rgb(232,15,44)" fg:x="213203" fg:w="53"/><text x="85.7199%" y="447.50"></text></g><g><title>alloc_pages_vma (12,700 samples, 5.09%)</title><rect x="80.4164%" y="453" width="5.0912%" height="15" fill="rgb(212,3,48)" fg:x="200597" fg:w="12700"/><text x="80.6664%" y="463.50">alloc_..</text></g><g><title>should_fail_alloc_page (41 samples, 0.02%)</title><rect x="85.4912%" y="437" width="0.0164%" height="15" fill="rgb(218,128,7)" fg:x="213256" fg:w="41"/><text x="85.7412%" y="447.50"></text></g><g><title>cgroup_throttle_swaprate (463 samples, 0.19%)</title><rect x="85.5076%" y="453" width="0.1856%" height="15" fill="rgb(226,216,39)" fg:x="213297" fg:w="463"/><text x="85.7576%" y="463.50"></text></g><g><title>get_mem_cgroup_from_mm (48 samples, 0.02%)</title><rect x="85.6932%" y="453" width="0.0192%" height="15" fill="rgb(243,47,51)" fg:x="213760" fg:w="48"/><text x="85.9432%" y="463.50"></text></g><g><title>kthread_blkcg (34 samples, 0.01%)</title><rect x="85.7125%" y="453" width="0.0136%" height="15" fill="rgb(241,183,40)" fg:x="213808" fg:w="34"/><text x="85.9625%" y="463.50"></text></g><g><title>lru_cache_add (25 samples, 0.01%)</title><rect x="85.7261%" y="453" width="0.0100%" height="15" fill="rgb(231,217,32)" fg:x="213842" fg:w="25"/><text x="85.9761%" y="463.50"></text></g><g><title>__mod_lruvec_state (37 samples, 0.01%)</title><rect x="86.0003%" y="405" width="0.0148%" height="15" fill="rgb(229,61,38)" fg:x="214526" fg:w="37"/><text x="86.2503%" y="415.50"></text></g><g><title>__mod_zone_page_state (51 samples, 0.02%)</title><rect x="86.0151%" y="405" width="0.0204%" height="15" fill="rgb(225,210,5)" fg:x="214563" fg:w="51"/><text x="86.2651%" y="415.50"></text></g><g><title>__mod_memcg_state.part.0 (90 samples, 0.04%)</title><rect x="86.7151%" y="357" width="0.0361%" height="15" fill="rgb(231,79,45)" fg:x="216309" fg:w="90"/><text x="86.9651%" y="367.50"></text></g><g><title>cgroup_rstat_updated (73 samples, 0.03%)</title><rect x="86.7219%" y="341" width="0.0293%" height="15" fill="rgb(224,100,7)" fg:x="216326" fg:w="73"/><text x="86.9719%" y="351.50"></text></g><g><title>__mod_memcg_lruvec_state (311 samples, 0.12%)</title><rect x="86.6305%" y="373" width="0.1247%" height="15" fill="rgb(241,198,18)" fg:x="216098" fg:w="311"/><text x="86.8805%" y="383.50"></text></g><g><title>__mod_memcg_state.part.0 (51 samples, 0.02%)</title><rect x="86.7552%" y="373" width="0.0204%" height="15" fill="rgb(252,97,53)" fg:x="216409" fg:w="51"/><text x="87.0052%" y="383.50"></text></g><g><title>__mod_lruvec_state (489 samples, 0.20%)</title><rect x="86.6068%" y="389" width="0.1960%" height="15" fill="rgb(220,88,7)" fg:x="216039" fg:w="489"/><text x="86.8568%" y="399.50"></text></g><g><title>__mod_node_page_state (68 samples, 0.03%)</title><rect x="86.7756%" y="373" width="0.0273%" height="15" fill="rgb(213,176,14)" fg:x="216460" fg:w="68"/><text x="87.0256%" y="383.50"></text></g><g><title>__mod_node_page_state (67 samples, 0.03%)</title><rect x="86.8097%" y="389" width="0.0269%" height="15" fill="rgb(246,73,7)" fg:x="216545" fg:w="67"/><text x="87.0597%" y="399.50"></text></g><g><title>__mod_zone_page_state (59 samples, 0.02%)</title><rect x="86.8365%" y="389" width="0.0237%" height="15" fill="rgb(245,64,36)" fg:x="216612" fg:w="59"/><text x="87.0865%" y="399.50"></text></g><g><title>mem_cgroup_update_lru_size (95 samples, 0.04%)</title><rect x="86.8602%" y="389" width="0.0381%" height="15" fill="rgb(245,80,10)" fg:x="216671" fg:w="95"/><text x="87.1102%" y="399.50"></text></g><g><title>__pagevec_lru_add_fn (2,455 samples, 0.98%)</title><rect x="86.0356%" y="405" width="0.9842%" height="15" fill="rgb(232,107,50)" fg:x="214614" fg:w="2455"/><text x="86.2856%" y="415.50"></text></g><g><title>page_mapping (303 samples, 0.12%)</title><rect x="86.8983%" y="389" width="0.1215%" height="15" fill="rgb(253,3,0)" fg:x="216766" fg:w="303"/><text x="87.1483%" y="399.50"></text></g><g><title>lock_page_lruvec_irqsave (97 samples, 0.04%)</title><rect x="87.0209%" y="405" width="0.0389%" height="15" fill="rgb(212,99,53)" fg:x="217072" fg:w="97"/><text x="87.2709%" y="415.50"></text></g><g><title>_raw_spin_lock_irqsave (74 samples, 0.03%)</title><rect x="87.0302%" y="389" width="0.0297%" height="15" fill="rgb(249,111,54)" fg:x="217095" fg:w="74"/><text x="87.2802%" y="399.50"></text></g><g><title>mem_cgroup_update_lru_size (25 samples, 0.01%)</title><rect x="87.0598%" y="405" width="0.0100%" height="15" fill="rgb(249,55,30)" fg:x="217169" fg:w="25"/><text x="87.3098%" y="415.50"></text></g><g><title>page_mapping (41 samples, 0.02%)</title><rect x="87.0699%" y="405" width="0.0164%" height="15" fill="rgb(237,47,42)" fg:x="217194" fg:w="41"/><text x="87.3199%" y="415.50"></text></g><g><title>free_unref_page_list (27 samples, 0.01%)</title><rect x="87.2482%" y="389" width="0.0108%" height="15" fill="rgb(211,20,18)" fg:x="217639" fg:w="27"/><text x="87.4982%" y="399.50"></text></g><g><title>__pagevec_lru_add (3,294 samples, 1.32%)</title><rect x="85.9414%" y="421" width="1.3205%" height="15" fill="rgb(231,203,46)" fg:x="214379" fg:w="3294"/><text x="86.1914%" y="431.50"></text></g><g><title>release_pages (431 samples, 0.17%)</title><rect x="87.0891%" y="405" width="0.1728%" height="15" fill="rgb(237,142,3)" fg:x="217242" fg:w="431"/><text x="87.3391%" y="415.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (3,835 samples, 1.54%)</title><rect x="85.7361%" y="453" width="1.5374%" height="15" fill="rgb(241,107,1)" fg:x="213867" fg:w="3835"/><text x="85.9861%" y="463.50"></text></g><g><title>lru_cache_add (3,792 samples, 1.52%)</title><rect x="85.7533%" y="437" width="1.5202%" height="15" fill="rgb(229,83,13)" fg:x="213910" fg:w="3792"/><text x="86.0033%" y="447.50"></text></g><g><title>arch_local_irq_enable (41 samples, 0.02%)</title><rect x="87.5036%" y="421" width="0.0164%" height="15" fill="rgb(241,91,40)" fg:x="218276" fg:w="41"/><text x="87.7536%" y="431.50"></text></g><g><title>cgroup_rstat_updated (56 samples, 0.02%)</title><rect x="87.5220%" y="421" width="0.0224%" height="15" fill="rgb(225,3,45)" fg:x="218322" fg:w="56"/><text x="87.7720%" y="431.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (2,306 samples, 0.92%)</title><rect x="87.5445%" y="421" width="0.9244%" height="15" fill="rgb(244,223,14)" fg:x="218378" fg:w="2306"/><text x="87.7945%" y="431.50"></text></g><g><title>cgroup_rstat_updated (194 samples, 0.08%)</title><rect x="88.3912%" y="405" width="0.0778%" height="15" fill="rgb(224,124,37)" fg:x="220490" fg:w="194"/><text x="88.6412%" y="415.50"></text></g><g><title>arch_local_irq_enable (69 samples, 0.03%)</title><rect x="88.9227%" y="405" width="0.0277%" height="15" fill="rgb(251,171,30)" fg:x="221816" fg:w="69"/><text x="89.1727%" y="415.50"></text></g><g><title>page_counter_try_charge (184 samples, 0.07%)</title><rect x="88.9504%" y="405" width="0.0738%" height="15" fill="rgb(236,46,54)" fg:x="221885" fg:w="184"/><text x="89.2004%" y="415.50"></text></g><g><title>__mem_cgroup_charge (4,196 samples, 1.68%)</title><rect x="87.3485%" y="437" width="1.6821%" height="15" fill="rgb(245,213,5)" fg:x="217889" fg:w="4196"/><text x="87.5985%" y="447.50"></text></g><g><title>try_charge (1,375 samples, 0.55%)</title><rect x="88.4794%" y="421" width="0.5512%" height="15" fill="rgb(230,144,27)" fg:x="220710" fg:w="1375"/><text x="88.7294%" y="431.50"></text></g><g><title>get_mem_cgroup_from_mm (542 samples, 0.22%)</title><rect x="89.0306%" y="437" width="0.2173%" height="15" fill="rgb(220,86,6)" fg:x="222085" fg:w="542"/><text x="89.2806%" y="447.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (25 samples, 0.01%)</title><rect x="89.2479%" y="437" width="0.0100%" height="15" fill="rgb(240,20,13)" fg:x="222627" fg:w="25"/><text x="89.4979%" y="447.50"></text></g><g><title>memcg_check_events (109 samples, 0.04%)</title><rect x="89.2579%" y="437" width="0.0437%" height="15" fill="rgb(217,89,34)" fg:x="222652" fg:w="109"/><text x="89.5079%" y="447.50"></text></g><g><title>rcu_read_unlock_strict (103 samples, 0.04%)</title><rect x="89.3016%" y="437" width="0.0413%" height="15" fill="rgb(229,13,5)" fg:x="222761" fg:w="103"/><text x="89.5516%" y="447.50"></text></g><g><title>mem_cgroup_charge (5,200 samples, 2.08%)</title><rect x="87.2735%" y="453" width="2.0846%" height="15" fill="rgb(244,67,35)" fg:x="217702" fg:w="5200"/><text x="87.5235%" y="463.50">m..</text></g><g><title>try_charge (38 samples, 0.02%)</title><rect x="89.3429%" y="437" width="0.0152%" height="15" fill="rgb(221,40,2)" fg:x="222864" fg:w="38"/><text x="89.5929%" y="447.50"></text></g><g><title>__mod_memcg_state.part.0 (71 samples, 0.03%)</title><rect x="89.6351%" y="389" width="0.0285%" height="15" fill="rgb(237,157,21)" fg:x="223593" fg:w="71"/><text x="89.8851%" y="399.50"></text></g><g><title>cgroup_rstat_updated (52 samples, 0.02%)</title><rect x="89.6427%" y="373" width="0.0208%" height="15" fill="rgb(222,94,11)" fg:x="223612" fg:w="52"/><text x="89.8927%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (371 samples, 0.15%)</title><rect x="89.5265%" y="405" width="0.1487%" height="15" fill="rgb(249,113,6)" fg:x="223322" fg:w="371"/><text x="89.7765%" y="415.50"></text></g><g><title>cgroup_rstat_updated (29 samples, 0.01%)</title><rect x="89.6636%" y="389" width="0.0116%" height="15" fill="rgb(238,137,36)" fg:x="223664" fg:w="29"/><text x="89.9136%" y="399.50"></text></g><g><title>__mod_memcg_state.part.0 (58 samples, 0.02%)</title><rect x="89.6752%" y="405" width="0.0233%" height="15" fill="rgb(210,102,26)" fg:x="223693" fg:w="58"/><text x="89.9252%" y="415.50"></text></g><g><title>__mod_lruvec_state (741 samples, 0.30%)</title><rect x="89.4904%" y="421" width="0.2971%" height="15" fill="rgb(218,30,30)" fg:x="223232" fg:w="741"/><text x="89.7404%" y="431.50"></text></g><g><title>__mod_node_page_state (222 samples, 0.09%)</title><rect x="89.6985%" y="405" width="0.0890%" height="15" fill="rgb(214,67,26)" fg:x="223751" fg:w="222"/><text x="89.9485%" y="415.50"></text></g><g><title>__mod_node_page_state (86 samples, 0.03%)</title><rect x="89.7939%" y="421" width="0.0345%" height="15" fill="rgb(251,9,53)" fg:x="223989" fg:w="86"/><text x="90.0439%" y="431.50"></text></g><g><title>__mod_lruvec_page_state (1,046 samples, 0.42%)</title><rect x="89.4166%" y="437" width="0.4193%" height="15" fill="rgb(228,204,25)" fg:x="223048" fg:w="1046"/><text x="89.6666%" y="447.50"></text></g><g><title>__page_set_anon_rmap (73 samples, 0.03%)</title><rect x="89.8416%" y="437" width="0.0293%" height="15" fill="rgb(207,153,8)" fg:x="224108" fg:w="73"/><text x="90.0916%" y="447.50"></text></g><g><title>page_add_new_anon_rmap (1,270 samples, 0.51%)</title><rect x="89.3677%" y="453" width="0.5091%" height="15" fill="rgb(242,9,16)" fg:x="222926" fg:w="1270"/><text x="89.6177%" y="463.50"></text></g><g><title>pfn_pte (31 samples, 0.01%)</title><rect x="89.8768%" y="453" width="0.0124%" height="15" fill="rgb(217,211,10)" fg:x="224196" fg:w="31"/><text x="90.1268%" y="463.50"></text></g><g><title>pmd_page_vaddr (86 samples, 0.03%)</title><rect x="89.8893%" y="453" width="0.0345%" height="15" fill="rgb(219,228,52)" fg:x="224227" fg:w="86"/><text x="90.1393%" y="463.50"></text></g><g><title>pmd_pfn (107 samples, 0.04%)</title><rect x="89.9238%" y="453" width="0.0429%" height="15" fill="rgb(231,92,29)" fg:x="224313" fg:w="107"/><text x="90.1738%" y="463.50"></text></g><g><title>pmd_val (26 samples, 0.01%)</title><rect x="89.9562%" y="437" width="0.0104%" height="15" fill="rgb(232,8,23)" fg:x="224394" fg:w="26"/><text x="90.2062%" y="447.50"></text></g><g><title>pmd_val (40 samples, 0.02%)</title><rect x="89.9666%" y="453" width="0.0160%" height="15" fill="rgb(216,211,34)" fg:x="224420" fg:w="40"/><text x="90.2166%" y="463.50"></text></g><g><title>policy_node (32 samples, 0.01%)</title><rect x="89.9827%" y="453" width="0.0128%" height="15" fill="rgb(236,151,0)" fg:x="224460" fg:w="32"/><text x="90.2327%" y="463.50"></text></g><g><title>rcu_read_unlock_strict (39 samples, 0.02%)</title><rect x="90.0107%" y="453" width="0.0156%" height="15" fill="rgb(209,168,3)" fg:x="224530" fg:w="39"/><text x="90.2607%" y="463.50"></text></g><g><title>do_anonymous_page (24,831 samples, 9.95%)</title><rect x="80.0796%" y="469" width="9.9544%" height="15" fill="rgb(208,129,28)" fg:x="199757" fg:w="24831"/><text x="80.3296%" y="479.50">do_anonymous_p..</text></g><g><title>pfn_pte (47 samples, 0.02%)</title><rect x="90.0593%" y="469" width="0.0188%" height="15" fill="rgb(229,78,22)" fg:x="224651" fg:w="47"/><text x="90.3093%" y="479.50"></text></g><g><title>pmd_page_vaddr (132 samples, 0.05%)</title><rect x="90.0781%" y="469" width="0.0529%" height="15" fill="rgb(228,187,13)" fg:x="224698" fg:w="132"/><text x="90.3281%" y="479.50"></text></g><g><title>pmd_pfn (33 samples, 0.01%)</title><rect x="90.1310%" y="469" width="0.0132%" height="15" fill="rgb(240,119,24)" fg:x="224830" fg:w="33"/><text x="90.3810%" y="479.50"></text></g><g><title>pmd_val (108 samples, 0.04%)</title><rect x="90.1442%" y="469" width="0.0433%" height="15" fill="rgb(209,194,42)" fg:x="224863" fg:w="108"/><text x="90.3942%" y="479.50"></text></g><g><title>handle_pte_fault (26,069 samples, 10.45%)</title><rect x="79.7453%" y="485" width="10.4507%" height="15" fill="rgb(247,200,46)" fg:x="198923" fg:w="26069"/><text x="79.9953%" y="495.50">handle_pte_fault</text></g><g><title>pmd_val (78 samples, 0.03%)</title><rect x="90.1984%" y="485" width="0.0313%" height="15" fill="rgb(218,76,16)" fg:x="224998" fg:w="78"/><text x="90.4484%" y="495.50"></text></g><g><title>__handle_mm_fault (27,565 samples, 11.05%)</title><rect x="79.2109%" y="501" width="11.0504%" height="15" fill="rgb(225,21,48)" fg:x="197590" fg:w="27565"/><text x="79.4609%" y="511.50">__handle_mm_fault</text></g><g><title>pud_val (79 samples, 0.03%)</title><rect x="90.2296%" y="485" width="0.0317%" height="15" fill="rgb(239,223,50)" fg:x="225076" fg:w="79"/><text x="90.4796%" y="495.50"></text></g><g><title>handle_pte_fault (30 samples, 0.01%)</title><rect x="90.2697%" y="501" width="0.0120%" height="15" fill="rgb(244,45,21)" fg:x="225176" fg:w="30"/><text x="90.5197%" y="511.50"></text></g><g><title>p4d_offset (42 samples, 0.02%)</title><rect x="90.2902%" y="501" width="0.0168%" height="15" fill="rgb(232,33,43)" fg:x="225227" fg:w="42"/><text x="90.5402%" y="511.50"></text></g><g><title>pud_val (103 samples, 0.04%)</title><rect x="90.3186%" y="501" width="0.0413%" height="15" fill="rgb(209,8,3)" fg:x="225298" fg:w="103"/><text x="90.5686%" y="511.50"></text></g><g><title>handle_mm_fault (28,678 samples, 11.50%)</title><rect x="78.8766%" y="517" width="11.4966%" height="15" fill="rgb(214,25,53)" fg:x="196756" fg:w="28678"/><text x="79.1266%" y="527.50">handle_mm_fault</text></g><g><title>mem_cgroup_from_task (77 samples, 0.03%)</title><rect x="90.3731%" y="517" width="0.0309%" height="15" fill="rgb(254,186,54)" fg:x="225434" fg:w="77"/><text x="90.6231%" y="527.50"></text></g><g><title>rcu_all_qs (33 samples, 0.01%)</title><rect x="90.4040%" y="517" width="0.0132%" height="15" fill="rgb(208,174,49)" fg:x="225511" fg:w="33"/><text x="90.6540%" y="527.50"></text></g><g><title>up_read (453 samples, 0.18%)</title><rect x="90.4241%" y="517" width="0.1816%" height="15" fill="rgb(233,191,51)" fg:x="225561" fg:w="453"/><text x="90.6741%" y="527.50"></text></g><g><title>do_user_addr_fault (30,589 samples, 12.26%)</title><rect x="78.3530%" y="533" width="12.2627%" height="15" fill="rgb(222,134,10)" fg:x="195450" fg:w="30589"/><text x="78.6030%" y="543.50">do_user_addr_fault</text></g><g><title>vmacache_find (25 samples, 0.01%)</title><rect x="90.6057%" y="517" width="0.0100%" height="15" fill="rgb(230,226,20)" fg:x="226014" fg:w="25"/><text x="90.8557%" y="527.50"></text></g><g><title>down_read_trylock (39 samples, 0.02%)</title><rect x="90.6157%" y="533" width="0.0156%" height="15" fill="rgb(251,111,25)" fg:x="226039" fg:w="39"/><text x="90.8657%" y="543.50"></text></g><g><title>find_vma (26 samples, 0.01%)</title><rect x="90.6313%" y="533" width="0.0104%" height="15" fill="rgb(224,40,46)" fg:x="226078" fg:w="26"/><text x="90.8813%" y="543.50"></text></g><g><title>handle_mm_fault (35 samples, 0.01%)</title><rect x="90.6417%" y="533" width="0.0140%" height="15" fill="rgb(236,108,47)" fg:x="226104" fg:w="35"/><text x="90.8917%" y="543.50"></text></g><g><title>irqentry_enter (38 samples, 0.02%)</title><rect x="90.6558%" y="533" width="0.0152%" height="15" fill="rgb(234,93,0)" fg:x="226139" fg:w="38"/><text x="90.9058%" y="543.50"></text></g><g><title>exit_to_user_mode_prepare (63 samples, 0.03%)</title><rect x="90.6926%" y="517" width="0.0253%" height="15" fill="rgb(224,213,32)" fg:x="226231" fg:w="63"/><text x="90.9426%" y="527.50"></text></g><g><title>exit_to_user_mode_prepare (440 samples, 0.18%)</title><rect x="90.7251%" y="501" width="0.1764%" height="15" fill="rgb(251,11,48)" fg:x="226312" fg:w="440"/><text x="90.9751%" y="511.50"></text></g><g><title>fpregs_assert_state_consistent (58 samples, 0.02%)</title><rect x="90.8783%" y="485" width="0.0233%" height="15" fill="rgb(236,173,5)" fg:x="226694" fg:w="58"/><text x="91.1283%" y="495.50"></text></g><g><title>irqentry_exit (582 samples, 0.23%)</title><rect x="90.6790%" y="533" width="0.2333%" height="15" fill="rgb(230,95,12)" fg:x="226197" fg:w="582"/><text x="90.9290%" y="543.50"></text></g><g><title>irqentry_exit_to_user_mode (485 samples, 0.19%)</title><rect x="90.7179%" y="517" width="0.1944%" height="15" fill="rgb(232,209,1)" fg:x="226294" fg:w="485"/><text x="90.9679%" y="527.50"></text></g><g><title>fpregs_assert_state_consistent (27 samples, 0.01%)</title><rect x="90.9015%" y="501" width="0.0108%" height="15" fill="rgb(232,6,1)" fg:x="226752" fg:w="27"/><text x="91.1515%" y="511.50"></text></g><g><title>exc_page_fault (31,699 samples, 12.71%)</title><rect x="78.2187%" y="549" width="12.7077%" height="15" fill="rgb(210,224,50)" fg:x="195115" fg:w="31699"/><text x="78.4687%" y="559.50">exc_page_fault</text></g><g><title>asm_exc_page_fault (32,331 samples, 12.96%)</title><rect x="77.9802%" y="565" width="12.9610%" height="15" fill="rgb(228,127,35)" fg:x="194520" fg:w="32331"/><text x="78.2302%" y="575.50">asm_exc_page_fault</text></g><g><title>error_entry (898 samples, 0.36%)</title><rect x="90.9484%" y="565" width="0.3600%" height="15" fill="rgb(245,102,45)" fg:x="226869" fg:w="898"/><text x="91.1984%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (63,712 samples, 25.54%)</title><rect x="67.3892%" y="613" width="25.5412%" height="15" fill="rgb(214,1,49)" fg:x="168101" fg:w="63712"/><text x="67.6392%" y="623.50">alloc::vec::Vec&lt;T,A&gt;::push</text></g><g><title>core::ptr::write (58,893 samples, 23.61%)</title><rect x="69.3211%" y="597" width="23.6093%" height="15" fill="rgb(226,163,40)" fg:x="172920" fg:w="58893"/><text x="69.5711%" y="607.50">core::ptr::write</text></g><g><title>__memcpy_avx_unaligned_erms (58,763 samples, 23.56%)</title><rect x="69.3732%" y="581" width="23.5572%" height="15" fill="rgb(239,212,28)" fg:x="173050" fg:w="58763"/><text x="69.6232%" y="591.50">__memcpy_avx_unaligned_erms</text></g><g><title>sync_regs (4,015 samples, 1.61%)</title><rect x="91.3208%" y="565" width="1.6096%" height="15" fill="rgb(220,20,13)" fg:x="227798" fg:w="4015"/><text x="91.5708%" y="575.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (109,566 samples, 43.92%)</title><rect x="49.2215%" y="645" width="43.9234%" height="15" fill="rgb(210,164,35)" fg:x="122782" fg:w="109566"/><text x="49.4715%" y="655.50">hprof_slurp::record_parser::HprofRecordParser::parse_streaming</text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (109,566 samples, 43.92%)</title><rect x="49.2215%" y="629" width="43.9234%" height="15" fill="rgb(248,109,41)" fg:x="122782" fg:w="109566"/><text x="49.4715%" y="639.50">hprof_slurp::record_parser::lazy_many1::{{closure}}</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (534 samples, 0.21%)</title><rect x="92.9308%" y="613" width="0.2141%" height="15" fill="rgb(238,23,50)" fg:x="231814" fg:w="534"/><text x="93.1808%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (534 samples, 0.21%)</title><rect x="92.9308%" y="597" width="0.2141%" height="15" fill="rgb(211,48,49)" fg:x="231814" fg:w="534"/><text x="93.1808%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (534 samples, 0.21%)</title><rect x="92.9308%" y="581" width="0.2141%" height="15" fill="rgb(223,36,21)" fg:x="231814" fg:w="534"/><text x="93.1808%" y="591.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (35 samples, 0.01%)</title><rect x="93.1449%" y="629" width="0.0140%" height="15" fill="rgb(207,123,46)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="639.50"></text></g><g><title>std::io::default_read_exact (35 samples, 0.01%)</title><rect x="93.1449%" y="613" width="0.0140%" height="15" fill="rgb(240,218,32)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="623.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (35 samples, 0.01%)</title><rect x="93.1449%" y="597" width="0.0140%" height="15" fill="rgb(252,5,43)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="607.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (35 samples, 0.01%)</title><rect x="93.1449%" y="581" width="0.0140%" height="15" fill="rgb(252,84,19)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::read (35 samples, 0.01%)</title><rect x="93.1449%" y="565" width="0.0140%" height="15" fill="rgb(243,152,39)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="575.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (35 samples, 0.01%)</title><rect x="93.1449%" y="549" width="0.0140%" height="15" fill="rgb(234,160,15)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="559.50"></text></g><g><title>__libc_read (35 samples, 0.01%)</title><rect x="93.1449%" y="533" width="0.0140%" height="15" fill="rgb(237,34,20)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (35 samples, 0.01%)</title><rect x="93.1449%" y="517" width="0.0140%" height="15" fill="rgb(229,97,13)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="527.50"></text></g><g><title>do_syscall_64 (35 samples, 0.01%)</title><rect x="93.1449%" y="501" width="0.0140%" height="15" fill="rgb(234,71,50)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="511.50"></text></g><g><title>__x64_sys_read (35 samples, 0.01%)</title><rect x="93.1449%" y="485" width="0.0140%" height="15" fill="rgb(253,155,4)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="495.50"></text></g><g><title>ksys_read (35 samples, 0.01%)</title><rect x="93.1449%" y="469" width="0.0140%" height="15" fill="rgb(222,185,37)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="479.50"></text></g><g><title>vfs_read (35 samples, 0.01%)</title><rect x="93.1449%" y="453" width="0.0140%" height="15" fill="rgb(251,177,13)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="463.50"></text></g><g><title>new_sync_read (35 samples, 0.01%)</title><rect x="93.1449%" y="437" width="0.0140%" height="15" fill="rgb(250,179,40)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="447.50"></text></g><g><title>ext4_file_read_iter (35 samples, 0.01%)</title><rect x="93.1449%" y="421" width="0.0140%" height="15" fill="rgb(242,44,2)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="431.50"></text></g><g><title>generic_file_read_iter (35 samples, 0.01%)</title><rect x="93.1449%" y="405" width="0.0140%" height="15" fill="rgb(216,177,13)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="415.50"></text></g><g><title>filemap_read (35 samples, 0.01%)</title><rect x="93.1449%" y="389" width="0.0140%" height="15" fill="rgb(216,106,43)" fg:x="232348" fg:w="35"/><text x="93.3949%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (34 samples, 0.01%)</title><rect x="93.1757%" y="453" width="0.0136%" height="15" fill="rgb(216,183,2)" fg:x="232425" fg:w="34"/><text x="93.4257%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (34 samples, 0.01%)</title><rect x="93.1757%" y="437" width="0.0136%" height="15" fill="rgb(249,75,3)" fg:x="232425" fg:w="34"/><text x="93.4257%" y="447.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (34 samples, 0.01%)</title><rect x="93.1757%" y="421" width="0.0136%" height="15" fill="rgb(219,67,39)" fg:x="232425" fg:w="34"/><text x="93.4257%" y="431.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (34 samples, 0.01%)</title><rect x="93.1757%" y="405" width="0.0136%" height="15" fill="rgb(253,228,2)" fg:x="232425" fg:w="34"/><text x="93.4257%" y="415.50"></text></g><g><title>nom::number::streaming::be_u64 (34 samples, 0.01%)</title><rect x="93.1757%" y="389" width="0.0136%" height="15" fill="rgb(235,138,27)" fg:x="232425" fg:w="34"/><text x="93.4257%" y="399.50"></text></g><g><title>handle_pte_fault (26 samples, 0.01%)</title><rect x="93.1954%" y="341" width="0.0104%" height="15" fill="rgb(236,97,51)" fg:x="232474" fg:w="26"/><text x="93.4454%" y="351.50"></text></g><g><title>__handle_mm_fault (28 samples, 0.01%)</title><rect x="93.1950%" y="357" width="0.0112%" height="15" fill="rgb(240,80,30)" fg:x="232473" fg:w="28"/><text x="93.4450%" y="367.50"></text></g><g><title>handle_mm_fault (29 samples, 0.01%)</title><rect x="93.1950%" y="373" width="0.0116%" height="15" fill="rgb(230,178,19)" fg:x="232473" fg:w="29"/><text x="93.4450%" y="383.50"></text></g><g><title>asm_exc_page_fault (32 samples, 0.01%)</title><rect x="93.1942%" y="421" width="0.0128%" height="15" fill="rgb(210,190,27)" fg:x="232471" fg:w="32"/><text x="93.4442%" y="431.50"></text></g><g><title>exc_page_fault (32 samples, 0.01%)</title><rect x="93.1942%" y="405" width="0.0128%" height="15" fill="rgb(222,107,31)" fg:x="232471" fg:w="32"/><text x="93.4442%" y="415.50"></text></g><g><title>do_user_addr_fault (31 samples, 0.01%)</title><rect x="93.1946%" y="389" width="0.0124%" height="15" fill="rgb(216,127,34)" fg:x="232472" fg:w="31"/><text x="93.4446%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (46 samples, 0.02%)</title><rect x="93.1894%" y="453" width="0.0184%" height="15" fill="rgb(234,116,52)" fg:x="232459" fg:w="46"/><text x="93.4394%" y="463.50"></text></g><g><title>core::ptr::write (38 samples, 0.02%)</title><rect x="93.1926%" y="437" width="0.0152%" height="15" fill="rgb(222,124,15)" fg:x="232467" fg:w="38"/><text x="93.4426%" y="447.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (104 samples, 0.04%)</title><rect x="93.1685%" y="629" width="0.0417%" height="15" fill="rgb(231,179,28)" fg:x="232407" fg:w="104"/><text x="93.4185%" y="639.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (104 samples, 0.04%)</title><rect x="93.1685%" y="613" width="0.0417%" height="15" fill="rgb(226,93,45)" fg:x="232407" fg:w="104"/><text x="93.4185%" y="623.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (104 samples, 0.04%)</title><rect x="93.1685%" y="597" width="0.0417%" height="15" fill="rgb(215,8,51)" fg:x="232407" fg:w="104"/><text x="93.4185%" y="607.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (104 samples, 0.04%)</title><rect x="93.1685%" y="581" width="0.0417%" height="15" fill="rgb(223,106,5)" fg:x="232407" fg:w="104"/><text x="93.4185%" y="591.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (104 samples, 0.04%)</title><rect x="93.1685%" y="565" width="0.0417%" height="15" fill="rgb(250,191,5)" fg:x="232407" fg:w="104"/><text x="93.4185%" y="575.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (104 samples, 0.04%)</title><rect x="93.1685%" y="549" width="0.0417%" height="15" fill="rgb(242,132,44)" fg:x="232407" fg:w="104"/><text x="93.4185%" y="559.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (104 samples, 0.04%)</title><rect x="93.1685%" y="533" width="0.0417%" height="15" fill="rgb(251,152,29)" fg:x="232407" fg:w="104"/><text x="93.4185%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (104 samples, 0.04%)</title><rect x="93.1685%" y="517" width="0.0417%" height="15" fill="rgb(218,179,5)" fg:x="232407" fg:w="104"/><text x="93.4185%" y="527.50"></text></g><g><title>nom::combinator::map::{{closure}} (104 samples, 0.04%)</title><rect x="93.1685%" y="501" width="0.0417%" height="15" fill="rgb(227,67,19)" fg:x="232407" fg:w="104"/><text x="93.4185%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (104 samples, 0.04%)</title><rect x="93.1685%" y="485" width="0.0417%" height="15" fill="rgb(233,119,31)" fg:x="232407" fg:w="104"/><text x="93.4185%" y="495.50"></text></g><g><title>nom::multi::count::{{closure}} (104 samples, 0.04%)</title><rect x="93.1685%" y="469" width="0.0417%" height="15" fill="rgb(241,120,22)" fg:x="232407" fg:w="104"/><text x="93.4185%" y="479.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (34 samples, 0.01%)</title><rect x="93.2102%" y="613" width="0.0136%" height="15" fill="rgb(224,102,30)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="623.50"></text></g><g><title>std::io::default_read_exact (34 samples, 0.01%)</title><rect x="93.2102%" y="597" width="0.0136%" height="15" fill="rgb(210,164,37)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="607.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (34 samples, 0.01%)</title><rect x="93.2102%" y="581" width="0.0136%" height="15" fill="rgb(226,191,16)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="591.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (34 samples, 0.01%)</title><rect x="93.2102%" y="565" width="0.0136%" height="15" fill="rgb(214,40,45)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="575.50"></text></g><g><title>std::sys::unix::fs::File::read (34 samples, 0.01%)</title><rect x="93.2102%" y="549" width="0.0136%" height="15" fill="rgb(244,29,26)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="559.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (34 samples, 0.01%)</title><rect x="93.2102%" y="533" width="0.0136%" height="15" fill="rgb(216,16,5)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="543.50"></text></g><g><title>__libc_read (34 samples, 0.01%)</title><rect x="93.2102%" y="517" width="0.0136%" height="15" fill="rgb(249,76,35)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.01%)</title><rect x="93.2102%" y="501" width="0.0136%" height="15" fill="rgb(207,11,44)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="511.50"></text></g><g><title>do_syscall_64 (34 samples, 0.01%)</title><rect x="93.2102%" y="485" width="0.0136%" height="15" fill="rgb(228,190,49)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="495.50"></text></g><g><title>__x64_sys_read (34 samples, 0.01%)</title><rect x="93.2102%" y="469" width="0.0136%" height="15" fill="rgb(214,173,12)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="479.50"></text></g><g><title>ksys_read (34 samples, 0.01%)</title><rect x="93.2102%" y="453" width="0.0136%" height="15" fill="rgb(218,26,35)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="463.50"></text></g><g><title>vfs_read (34 samples, 0.01%)</title><rect x="93.2102%" y="437" width="0.0136%" height="15" fill="rgb(220,200,19)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="447.50"></text></g><g><title>new_sync_read (34 samples, 0.01%)</title><rect x="93.2102%" y="421" width="0.0136%" height="15" fill="rgb(239,95,49)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="431.50"></text></g><g><title>ext4_file_read_iter (34 samples, 0.01%)</title><rect x="93.2102%" y="405" width="0.0136%" height="15" fill="rgb(235,85,53)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="415.50"></text></g><g><title>generic_file_read_iter (34 samples, 0.01%)</title><rect x="93.2102%" y="389" width="0.0136%" height="15" fill="rgb(233,133,31)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="399.50"></text></g><g><title>filemap_read (34 samples, 0.01%)</title><rect x="93.2102%" y="373" width="0.0136%" height="15" fill="rgb(218,25,20)" fg:x="232511" fg:w="34"/><text x="93.4602%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (49 samples, 0.02%)</title><rect x="93.2447%" y="437" width="0.0196%" height="15" fill="rgb(252,210,38)" fg:x="232597" fg:w="49"/><text x="93.4947%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (49 samples, 0.02%)</title><rect x="93.2447%" y="421" width="0.0196%" height="15" fill="rgb(242,134,21)" fg:x="232597" fg:w="49"/><text x="93.4947%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (49 samples, 0.02%)</title><rect x="93.2447%" y="405" width="0.0196%" height="15" fill="rgb(213,28,48)" fg:x="232597" fg:w="49"/><text x="93.4947%" y="415.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (49 samples, 0.02%)</title><rect x="93.2447%" y="389" width="0.0196%" height="15" fill="rgb(250,196,2)" fg:x="232597" fg:w="49"/><text x="93.4947%" y="399.50"></text></g><g><title>nom::number::streaming::be_u64 (49 samples, 0.02%)</title><rect x="93.2447%" y="373" width="0.0196%" height="15" fill="rgb(227,5,17)" fg:x="232597" fg:w="49"/><text x="93.4947%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.01%)</title><rect x="93.2495%" y="357" width="0.0148%" height="15" fill="rgb(221,226,24)" fg:x="232609" fg:w="37"/><text x="93.4995%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.01%)</title><rect x="93.2495%" y="341" width="0.0148%" height="15" fill="rgb(211,5,48)" fg:x="232609" fg:w="37"/><text x="93.4995%" y="351.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (37 samples, 0.01%)</title><rect x="93.2495%" y="325" width="0.0148%" height="15" fill="rgb(219,150,6)" fg:x="232609" fg:w="37"/><text x="93.4995%" y="335.50"></text></g><g><title>handle_mm_fault (25 samples, 0.01%)</title><rect x="93.2743%" y="357" width="0.0100%" height="15" fill="rgb(251,46,16)" fg:x="232671" fg:w="25"/><text x="93.5243%" y="367.50"></text></g><g><title>do_user_addr_fault (27 samples, 0.01%)</title><rect x="93.2739%" y="373" width="0.0108%" height="15" fill="rgb(220,204,40)" fg:x="232670" fg:w="27"/><text x="93.5239%" y="383.50"></text></g><g><title>asm_exc_page_fault (28 samples, 0.01%)</title><rect x="93.2739%" y="405" width="0.0112%" height="15" fill="rgb(211,85,2)" fg:x="232670" fg:w="28"/><text x="93.5239%" y="415.50"></text></g><g><title>exc_page_fault (28 samples, 0.01%)</title><rect x="93.2739%" y="389" width="0.0112%" height="15" fill="rgb(229,17,7)" fg:x="232670" fg:w="28"/><text x="93.5239%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (56 samples, 0.02%)</title><rect x="93.2643%" y="437" width="0.0224%" height="15" fill="rgb(239,72,28)" fg:x="232646" fg:w="56"/><text x="93.5143%" y="447.50"></text></g><g><title>core::ptr::write (43 samples, 0.02%)</title><rect x="93.2695%" y="421" width="0.0172%" height="15" fill="rgb(230,47,54)" fg:x="232659" fg:w="43"/><text x="93.5195%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (148 samples, 0.06%)</title><rect x="93.2311%" y="613" width="0.0593%" height="15" fill="rgb(214,50,8)" fg:x="232563" fg:w="148"/><text x="93.4811%" y="623.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (148 samples, 0.06%)</title><rect x="93.2311%" y="597" width="0.0593%" height="15" fill="rgb(216,198,43)" fg:x="232563" fg:w="148"/><text x="93.4811%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (148 samples, 0.06%)</title><rect x="93.2311%" y="581" width="0.0593%" height="15" fill="rgb(234,20,35)" fg:x="232563" fg:w="148"/><text x="93.4811%" y="591.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (148 samples, 0.06%)</title><rect x="93.2311%" y="565" width="0.0593%" height="15" fill="rgb(254,45,19)" fg:x="232563" fg:w="148"/><text x="93.4811%" y="575.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (148 samples, 0.06%)</title><rect x="93.2311%" y="549" width="0.0593%" height="15" fill="rgb(219,14,44)" fg:x="232563" fg:w="148"/><text x="93.4811%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (148 samples, 0.06%)</title><rect x="93.2311%" y="533" width="0.0593%" height="15" fill="rgb(217,220,26)" fg:x="232563" fg:w="148"/><text x="93.4811%" y="543.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (148 samples, 0.06%)</title><rect x="93.2311%" y="517" width="0.0593%" height="15" fill="rgb(213,158,28)" fg:x="232563" fg:w="148"/><text x="93.4811%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (148 samples, 0.06%)</title><rect x="93.2311%" y="501" width="0.0593%" height="15" fill="rgb(252,51,52)" fg:x="232563" fg:w="148"/><text x="93.4811%" y="511.50"></text></g><g><title>nom::combinator::map::{{closure}} (148 samples, 0.06%)</title><rect x="93.2311%" y="485" width="0.0593%" height="15" fill="rgb(246,89,16)" fg:x="232563" fg:w="148"/><text x="93.4811%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (148 samples, 0.06%)</title><rect x="93.2311%" y="469" width="0.0593%" height="15" fill="rgb(216,158,49)" fg:x="232563" fg:w="148"/><text x="93.4811%" y="479.50"></text></g><g><title>nom::multi::count::{{closure}} (148 samples, 0.06%)</title><rect x="93.2311%" y="453" width="0.0593%" height="15" fill="rgb(236,107,19)" fg:x="232563" fg:w="148"/><text x="93.4811%" y="463.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (34 samples, 0.01%)</title><rect x="93.2904%" y="597" width="0.0136%" height="15" fill="rgb(228,185,30)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="607.50"></text></g><g><title>std::io::default_read_exact (34 samples, 0.01%)</title><rect x="93.2904%" y="581" width="0.0136%" height="15" fill="rgb(246,134,8)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="591.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (34 samples, 0.01%)</title><rect x="93.2904%" y="565" width="0.0136%" height="15" fill="rgb(214,143,50)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="575.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (34 samples, 0.01%)</title><rect x="93.2904%" y="549" width="0.0136%" height="15" fill="rgb(228,75,8)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::read (34 samples, 0.01%)</title><rect x="93.2904%" y="533" width="0.0136%" height="15" fill="rgb(207,175,4)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="543.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (34 samples, 0.01%)</title><rect x="93.2904%" y="517" width="0.0136%" height="15" fill="rgb(205,108,24)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="527.50"></text></g><g><title>__libc_read (34 samples, 0.01%)</title><rect x="93.2904%" y="501" width="0.0136%" height="15" fill="rgb(244,120,49)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.01%)</title><rect x="93.2904%" y="485" width="0.0136%" height="15" fill="rgb(223,47,38)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="495.50"></text></g><g><title>do_syscall_64 (34 samples, 0.01%)</title><rect x="93.2904%" y="469" width="0.0136%" height="15" fill="rgb(229,179,11)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="479.50"></text></g><g><title>__x64_sys_read (34 samples, 0.01%)</title><rect x="93.2904%" y="453" width="0.0136%" height="15" fill="rgb(231,122,1)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="463.50"></text></g><g><title>ksys_read (34 samples, 0.01%)</title><rect x="93.2904%" y="437" width="0.0136%" height="15" fill="rgb(245,119,9)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="447.50"></text></g><g><title>vfs_read (34 samples, 0.01%)</title><rect x="93.2904%" y="421" width="0.0136%" height="15" fill="rgb(241,163,25)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="431.50"></text></g><g><title>new_sync_read (34 samples, 0.01%)</title><rect x="93.2904%" y="405" width="0.0136%" height="15" fill="rgb(217,214,3)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="415.50"></text></g><g><title>ext4_file_read_iter (34 samples, 0.01%)</title><rect x="93.2904%" y="389" width="0.0136%" height="15" fill="rgb(240,86,28)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="399.50"></text></g><g><title>generic_file_read_iter (34 samples, 0.01%)</title><rect x="93.2904%" y="373" width="0.0136%" height="15" fill="rgb(215,47,9)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="383.50"></text></g><g><title>filemap_read (34 samples, 0.01%)</title><rect x="93.2904%" y="357" width="0.0136%" height="15" fill="rgb(252,25,45)" fg:x="232711" fg:w="34"/><text x="93.5404%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (25 samples, 0.01%)</title><rect x="93.3040%" y="597" width="0.0100%" height="15" fill="rgb(251,164,9)" fg:x="232745" fg:w="25"/><text x="93.5540%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (25 samples, 0.01%)</title><rect x="93.3040%" y="581" width="0.0100%" height="15" fill="rgb(233,194,0)" fg:x="232745" fg:w="25"/><text x="93.5540%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (25 samples, 0.01%)</title><rect x="93.3040%" y="565" width="0.0100%" height="15" fill="rgb(249,111,24)" fg:x="232745" fg:w="25"/><text x="93.5540%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (62 samples, 0.02%)</title><rect x="93.3321%" y="421" width="0.0249%" height="15" fill="rgb(250,223,3)" fg:x="232815" fg:w="62"/><text x="93.5821%" y="431.50"></text></g><g><title>core::ops::function::FnMut::call_mut (62 samples, 0.02%)</title><rect x="93.3321%" y="405" width="0.0249%" height="15" fill="rgb(236,178,37)" fg:x="232815" fg:w="62"/><text x="93.5821%" y="415.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (62 samples, 0.02%)</title><rect x="93.3321%" y="389" width="0.0249%" height="15" fill="rgb(241,158,50)" fg:x="232815" fg:w="62"/><text x="93.5821%" y="399.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (62 samples, 0.02%)</title><rect x="93.3321%" y="373" width="0.0249%" height="15" fill="rgb(213,121,41)" fg:x="232815" fg:w="62"/><text x="93.5821%" y="383.50"></text></g><g><title>nom::number::streaming::be_u64 (62 samples, 0.02%)</title><rect x="93.3321%" y="357" width="0.0249%" height="15" fill="rgb(240,92,3)" fg:x="232815" fg:w="62"/><text x="93.5821%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.02%)</title><rect x="93.3385%" y="341" width="0.0184%" height="15" fill="rgb(205,123,3)" fg:x="232831" fg:w="46"/><text x="93.5885%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.02%)</title><rect x="93.3385%" y="325" width="0.0184%" height="15" fill="rgb(205,97,47)" fg:x="232831" fg:w="46"/><text x="93.5885%" y="335.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (46 samples, 0.02%)</title><rect x="93.3385%" y="309" width="0.0184%" height="15" fill="rgb(247,152,14)" fg:x="232831" fg:w="46"/><text x="93.5885%" y="319.50"></text></g><g><title>do_anonymous_page (31 samples, 0.01%)</title><rect x="93.3710%" y="293" width="0.0124%" height="15" fill="rgb(248,195,53)" fg:x="232912" fg:w="31"/><text x="93.6210%" y="303.50"></text></g><g><title>do_user_addr_fault (38 samples, 0.02%)</title><rect x="93.3686%" y="357" width="0.0152%" height="15" fill="rgb(226,201,16)" fg:x="232906" fg:w="38"/><text x="93.6186%" y="367.50"></text></g><g><title>handle_mm_fault (36 samples, 0.01%)</title><rect x="93.3694%" y="341" width="0.0144%" height="15" fill="rgb(205,98,0)" fg:x="232908" fg:w="36"/><text x="93.6194%" y="351.50"></text></g><g><title>__handle_mm_fault (35 samples, 0.01%)</title><rect x="93.3698%" y="325" width="0.0140%" height="15" fill="rgb(214,191,48)" fg:x="232909" fg:w="35"/><text x="93.6198%" y="335.50"></text></g><g><title>handle_pte_fault (34 samples, 0.01%)</title><rect x="93.3702%" y="309" width="0.0136%" height="15" fill="rgb(237,112,39)" fg:x="232910" fg:w="34"/><text x="93.6202%" y="319.50"></text></g><g><title>asm_exc_page_fault (39 samples, 0.02%)</title><rect x="93.3686%" y="389" width="0.0156%" height="15" fill="rgb(247,203,27)" fg:x="232906" fg:w="39"/><text x="93.6186%" y="399.50"></text></g><g><title>exc_page_fault (39 samples, 0.02%)</title><rect x="93.3686%" y="373" width="0.0156%" height="15" fill="rgb(235,124,28)" fg:x="232906" fg:w="39"/><text x="93.6186%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (71 samples, 0.03%)</title><rect x="93.3569%" y="421" width="0.0285%" height="15" fill="rgb(208,207,46)" fg:x="232877" fg:w="71"/><text x="93.6069%" y="431.50"></text></g><g><title>core::ptr::write (61 samples, 0.02%)</title><rect x="93.3609%" y="405" width="0.0245%" height="15" fill="rgb(234,176,4)" fg:x="232887" fg:w="61"/><text x="93.6109%" y="415.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (187 samples, 0.07%)</title><rect x="93.3152%" y="597" width="0.0750%" height="15" fill="rgb(230,133,28)" fg:x="232773" fg:w="187"/><text x="93.5652%" y="607.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (187 samples, 0.07%)</title><rect x="93.3152%" y="581" width="0.0750%" height="15" fill="rgb(211,137,40)" fg:x="232773" fg:w="187"/><text x="93.5652%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (187 samples, 0.07%)</title><rect x="93.3152%" y="565" width="0.0750%" height="15" fill="rgb(254,35,13)" fg:x="232773" fg:w="187"/><text x="93.5652%" y="575.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (187 samples, 0.07%)</title><rect x="93.3152%" y="549" width="0.0750%" height="15" fill="rgb(225,49,51)" fg:x="232773" fg:w="187"/><text x="93.5652%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (187 samples, 0.07%)</title><rect x="93.3152%" y="533" width="0.0750%" height="15" fill="rgb(251,10,15)" fg:x="232773" fg:w="187"/><text x="93.5652%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (187 samples, 0.07%)</title><rect x="93.3152%" y="517" width="0.0750%" height="15" fill="rgb(228,207,15)" fg:x="232773" fg:w="187"/><text x="93.5652%" y="527.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (187 samples, 0.07%)</title><rect x="93.3152%" y="501" width="0.0750%" height="15" fill="rgb(241,99,19)" fg:x="232773" fg:w="187"/><text x="93.5652%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (187 samples, 0.07%)</title><rect x="93.3152%" y="485" width="0.0750%" height="15" fill="rgb(207,104,49)" fg:x="232773" fg:w="187"/><text x="93.5652%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (187 samples, 0.07%)</title><rect x="93.3152%" y="469" width="0.0750%" height="15" fill="rgb(234,99,18)" fg:x="232773" fg:w="187"/><text x="93.5652%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (187 samples, 0.07%)</title><rect x="93.3152%" y="453" width="0.0750%" height="15" fill="rgb(213,191,49)" fg:x="232773" fg:w="187"/><text x="93.5652%" y="463.50"></text></g><g><title>nom::multi::count::{{closure}} (187 samples, 0.07%)</title><rect x="93.3152%" y="437" width="0.0750%" height="15" fill="rgb(210,226,19)" fg:x="232773" fg:w="187"/><text x="93.5652%" y="447.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (34 samples, 0.01%)</title><rect x="93.3902%" y="581" width="0.0136%" height="15" fill="rgb(229,97,18)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="591.50"></text></g><g><title>std::io::default_read_exact (34 samples, 0.01%)</title><rect x="93.3902%" y="565" width="0.0136%" height="15" fill="rgb(211,167,15)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="575.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (34 samples, 0.01%)</title><rect x="93.3902%" y="549" width="0.0136%" height="15" fill="rgb(210,169,34)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="559.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (34 samples, 0.01%)</title><rect x="93.3902%" y="533" width="0.0136%" height="15" fill="rgb(241,121,31)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::read (34 samples, 0.01%)</title><rect x="93.3902%" y="517" width="0.0136%" height="15" fill="rgb(232,40,11)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (34 samples, 0.01%)</title><rect x="93.3902%" y="501" width="0.0136%" height="15" fill="rgb(205,86,26)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="511.50"></text></g><g><title>__libc_read (34 samples, 0.01%)</title><rect x="93.3902%" y="485" width="0.0136%" height="15" fill="rgb(231,126,28)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.01%)</title><rect x="93.3902%" y="469" width="0.0136%" height="15" fill="rgb(219,221,18)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="479.50"></text></g><g><title>do_syscall_64 (34 samples, 0.01%)</title><rect x="93.3902%" y="453" width="0.0136%" height="15" fill="rgb(211,40,0)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="463.50"></text></g><g><title>__x64_sys_read (34 samples, 0.01%)</title><rect x="93.3902%" y="437" width="0.0136%" height="15" fill="rgb(239,85,43)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="447.50"></text></g><g><title>ksys_read (34 samples, 0.01%)</title><rect x="93.3902%" y="421" width="0.0136%" height="15" fill="rgb(231,55,21)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="431.50"></text></g><g><title>vfs_read (34 samples, 0.01%)</title><rect x="93.3902%" y="405" width="0.0136%" height="15" fill="rgb(225,184,43)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="415.50"></text></g><g><title>new_sync_read (34 samples, 0.01%)</title><rect x="93.3902%" y="389" width="0.0136%" height="15" fill="rgb(251,158,41)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="399.50"></text></g><g><title>ext4_file_read_iter (34 samples, 0.01%)</title><rect x="93.3902%" y="373" width="0.0136%" height="15" fill="rgb(234,159,37)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="383.50"></text></g><g><title>generic_file_read_iter (34 samples, 0.01%)</title><rect x="93.3902%" y="357" width="0.0136%" height="15" fill="rgb(216,204,22)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="367.50"></text></g><g><title>filemap_read (34 samples, 0.01%)</title><rect x="93.3902%" y="341" width="0.0136%" height="15" fill="rgb(214,17,3)" fg:x="232960" fg:w="34"/><text x="93.6402%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (61 samples, 0.02%)</title><rect x="93.4371%" y="405" width="0.0245%" height="15" fill="rgb(212,111,17)" fg:x="233077" fg:w="61"/><text x="93.6871%" y="415.50"></text></g><g><title>core::ops::function::FnMut::call_mut (61 samples, 0.02%)</title><rect x="93.4371%" y="389" width="0.0245%" height="15" fill="rgb(221,157,24)" fg:x="233077" fg:w="61"/><text x="93.6871%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (61 samples, 0.02%)</title><rect x="93.4371%" y="373" width="0.0245%" height="15" fill="rgb(252,16,13)" fg:x="233077" fg:w="61"/><text x="93.6871%" y="383.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (61 samples, 0.02%)</title><rect x="93.4371%" y="357" width="0.0245%" height="15" fill="rgb(221,62,2)" fg:x="233077" fg:w="61"/><text x="93.6871%" y="367.50"></text></g><g><title>nom::number::streaming::be_u64 (61 samples, 0.02%)</title><rect x="93.4371%" y="341" width="0.0245%" height="15" fill="rgb(247,87,22)" fg:x="233077" fg:w="61"/><text x="93.6871%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.02%)</title><rect x="93.4447%" y="325" width="0.0168%" height="15" fill="rgb(215,73,9)" fg:x="233096" fg:w="42"/><text x="93.6947%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.02%)</title><rect x="93.4447%" y="309" width="0.0168%" height="15" fill="rgb(207,175,33)" fg:x="233096" fg:w="42"/><text x="93.6947%" y="319.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (42 samples, 0.02%)</title><rect x="93.4447%" y="293" width="0.0168%" height="15" fill="rgb(243,129,54)" fg:x="233096" fg:w="42"/><text x="93.6947%" y="303.50"></text></g><g><title>asm_exc_page_fault (54 samples, 0.02%)</title><rect x="93.4736%" y="373" width="0.0216%" height="15" fill="rgb(227,119,45)" fg:x="233168" fg:w="54"/><text x="93.7236%" y="383.50"></text></g><g><title>exc_page_fault (53 samples, 0.02%)</title><rect x="93.4740%" y="357" width="0.0212%" height="15" fill="rgb(205,109,36)" fg:x="233169" fg:w="53"/><text x="93.7240%" y="367.50"></text></g><g><title>do_user_addr_fault (53 samples, 0.02%)</title><rect x="93.4740%" y="341" width="0.0212%" height="15" fill="rgb(205,6,39)" fg:x="233169" fg:w="53"/><text x="93.7240%" y="351.50"></text></g><g><title>handle_mm_fault (50 samples, 0.02%)</title><rect x="93.4752%" y="325" width="0.0200%" height="15" fill="rgb(221,32,16)" fg:x="233172" fg:w="50"/><text x="93.7252%" y="335.50"></text></g><g><title>__handle_mm_fault (50 samples, 0.02%)</title><rect x="93.4752%" y="309" width="0.0200%" height="15" fill="rgb(228,144,50)" fg:x="233172" fg:w="50"/><text x="93.7252%" y="319.50"></text></g><g><title>handle_pte_fault (46 samples, 0.02%)</title><rect x="93.4768%" y="293" width="0.0184%" height="15" fill="rgb(229,201,53)" fg:x="233176" fg:w="46"/><text x="93.7268%" y="303.50"></text></g><g><title>do_anonymous_page (45 samples, 0.02%)</title><rect x="93.4772%" y="277" width="0.0180%" height="15" fill="rgb(249,153,27)" fg:x="233177" fg:w="45"/><text x="93.7272%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (88 samples, 0.04%)</title><rect x="93.4616%" y="405" width="0.0353%" height="15" fill="rgb(227,106,25)" fg:x="233138" fg:w="88"/><text x="93.7116%" y="415.50"></text></g><g><title>core::ptr::write (72 samples, 0.03%)</title><rect x="93.4680%" y="389" width="0.0289%" height="15" fill="rgb(230,65,29)" fg:x="233154" fg:w="72"/><text x="93.7180%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (223 samples, 0.09%)</title><rect x="93.4131%" y="581" width="0.0894%" height="15" fill="rgb(221,57,46)" fg:x="233017" fg:w="223"/><text x="93.6631%" y="591.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (223 samples, 0.09%)</title><rect x="93.4131%" y="565" width="0.0894%" height="15" fill="rgb(229,161,17)" fg:x="233017" fg:w="223"/><text x="93.6631%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (223 samples, 0.09%)</title><rect x="93.4131%" y="549" width="0.0894%" height="15" fill="rgb(222,213,11)" fg:x="233017" fg:w="223"/><text x="93.6631%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (223 samples, 0.09%)</title><rect x="93.4131%" y="533" width="0.0894%" height="15" fill="rgb(235,35,13)" fg:x="233017" fg:w="223"/><text x="93.6631%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (223 samples, 0.09%)</title><rect x="93.4131%" y="517" width="0.0894%" height="15" fill="rgb(233,158,34)" fg:x="233017" fg:w="223"/><text x="93.6631%" y="527.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (223 samples, 0.09%)</title><rect x="93.4131%" y="501" width="0.0894%" height="15" fill="rgb(215,151,48)" fg:x="233017" fg:w="223"/><text x="93.6631%" y="511.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (223 samples, 0.09%)</title><rect x="93.4131%" y="485" width="0.0894%" height="15" fill="rgb(229,84,14)" fg:x="233017" fg:w="223"/><text x="93.6631%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (223 samples, 0.09%)</title><rect x="93.4131%" y="469" width="0.0894%" height="15" fill="rgb(229,68,14)" fg:x="233017" fg:w="223"/><text x="93.6631%" y="479.50"></text></g><g><title>nom::combinator::map::{{closure}} (223 samples, 0.09%)</title><rect x="93.4131%" y="453" width="0.0894%" height="15" fill="rgb(243,106,26)" fg:x="233017" fg:w="223"/><text x="93.6631%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (223 samples, 0.09%)</title><rect x="93.4131%" y="437" width="0.0894%" height="15" fill="rgb(206,45,38)" fg:x="233017" fg:w="223"/><text x="93.6631%" y="447.50"></text></g><g><title>nom::multi::count::{{closure}} (223 samples, 0.09%)</title><rect x="93.4131%" y="421" width="0.0894%" height="15" fill="rgb(226,6,15)" fg:x="233017" fg:w="223"/><text x="93.6631%" y="431.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (34 samples, 0.01%)</title><rect x="93.5025%" y="565" width="0.0136%" height="15" fill="rgb(232,22,54)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="575.50"></text></g><g><title>std::io::default_read_exact (34 samples, 0.01%)</title><rect x="93.5025%" y="549" width="0.0136%" height="15" fill="rgb(229,222,32)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="559.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (34 samples, 0.01%)</title><rect x="93.5025%" y="533" width="0.0136%" height="15" fill="rgb(228,62,29)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="543.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (34 samples, 0.01%)</title><rect x="93.5025%" y="517" width="0.0136%" height="15" fill="rgb(251,103,34)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="527.50"></text></g><g><title>std::sys::unix::fs::File::read (34 samples, 0.01%)</title><rect x="93.5025%" y="501" width="0.0136%" height="15" fill="rgb(233,12,30)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="511.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (34 samples, 0.01%)</title><rect x="93.5025%" y="485" width="0.0136%" height="15" fill="rgb(238,52,0)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="495.50"></text></g><g><title>__libc_read (34 samples, 0.01%)</title><rect x="93.5025%" y="469" width="0.0136%" height="15" fill="rgb(223,98,5)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.01%)</title><rect x="93.5025%" y="453" width="0.0136%" height="15" fill="rgb(228,75,37)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="463.50"></text></g><g><title>do_syscall_64 (34 samples, 0.01%)</title><rect x="93.5025%" y="437" width="0.0136%" height="15" fill="rgb(205,115,49)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="447.50"></text></g><g><title>__x64_sys_read (34 samples, 0.01%)</title><rect x="93.5025%" y="421" width="0.0136%" height="15" fill="rgb(250,154,43)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="431.50"></text></g><g><title>ksys_read (34 samples, 0.01%)</title><rect x="93.5025%" y="405" width="0.0136%" height="15" fill="rgb(226,43,29)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="415.50"></text></g><g><title>vfs_read (34 samples, 0.01%)</title><rect x="93.5025%" y="389" width="0.0136%" height="15" fill="rgb(249,228,39)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="399.50"></text></g><g><title>new_sync_read (34 samples, 0.01%)</title><rect x="93.5025%" y="373" width="0.0136%" height="15" fill="rgb(216,79,43)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="383.50"></text></g><g><title>ext4_file_read_iter (34 samples, 0.01%)</title><rect x="93.5025%" y="357" width="0.0136%" height="15" fill="rgb(228,95,12)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="367.50"></text></g><g><title>generic_file_read_iter (34 samples, 0.01%)</title><rect x="93.5025%" y="341" width="0.0136%" height="15" fill="rgb(249,221,15)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="351.50"></text></g><g><title>filemap_read (34 samples, 0.01%)</title><rect x="93.5025%" y="325" width="0.0136%" height="15" fill="rgb(233,34,13)" fg:x="233240" fg:w="34"/><text x="93.7525%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (92 samples, 0.04%)</title><rect x="93.5433%" y="389" width="0.0369%" height="15" fill="rgb(214,103,39)" fg:x="233342" fg:w="92"/><text x="93.7933%" y="399.50"></text></g><g><title>core::ops::function::FnMut::call_mut (92 samples, 0.04%)</title><rect x="93.5433%" y="373" width="0.0369%" height="15" fill="rgb(251,126,39)" fg:x="233342" fg:w="92"/><text x="93.7933%" y="383.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (92 samples, 0.04%)</title><rect x="93.5433%" y="357" width="0.0369%" height="15" fill="rgb(214,216,36)" fg:x="233342" fg:w="92"/><text x="93.7933%" y="367.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (92 samples, 0.04%)</title><rect x="93.5433%" y="341" width="0.0369%" height="15" fill="rgb(220,221,8)" fg:x="233342" fg:w="92"/><text x="93.7933%" y="351.50"></text></g><g><title>nom::number::streaming::be_u64 (92 samples, 0.04%)</title><rect x="93.5433%" y="325" width="0.0369%" height="15" fill="rgb(240,216,3)" fg:x="233342" fg:w="92"/><text x="93.7933%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.03%)</title><rect x="93.5550%" y="309" width="0.0253%" height="15" fill="rgb(232,218,17)" fg:x="233371" fg:w="63"/><text x="93.8050%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.03%)</title><rect x="93.5550%" y="293" width="0.0253%" height="15" fill="rgb(229,163,45)" fg:x="233371" fg:w="63"/><text x="93.8050%" y="303.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (63 samples, 0.03%)</title><rect x="93.5550%" y="277" width="0.0253%" height="15" fill="rgb(231,110,42)" fg:x="233371" fg:w="63"/><text x="93.8050%" y="287.50"></text></g><g><title>do_anonymous_page (44 samples, 0.02%)</title><rect x="93.6023%" y="261" width="0.0176%" height="15" fill="rgb(208,170,48)" fg:x="233489" fg:w="44"/><text x="93.8523%" y="271.50"></text></g><g><title>handle_pte_fault (48 samples, 0.02%)</title><rect x="93.6015%" y="277" width="0.0192%" height="15" fill="rgb(239,116,25)" fg:x="233487" fg:w="48"/><text x="93.8515%" y="287.50"></text></g><g><title>__handle_mm_fault (53 samples, 0.02%)</title><rect x="93.5999%" y="293" width="0.0212%" height="15" fill="rgb(219,200,50)" fg:x="233483" fg:w="53"/><text x="93.8499%" y="303.50"></text></g><g><title>handle_mm_fault (56 samples, 0.02%)</title><rect x="93.5991%" y="309" width="0.0224%" height="15" fill="rgb(245,200,0)" fg:x="233481" fg:w="56"/><text x="93.8491%" y="319.50"></text></g><g><title>do_user_addr_fault (62 samples, 0.02%)</title><rect x="93.5979%" y="325" width="0.0249%" height="15" fill="rgb(245,119,33)" fg:x="233478" fg:w="62"/><text x="93.8479%" y="335.50"></text></g><g><title>asm_exc_page_fault (64 samples, 0.03%)</title><rect x="93.5979%" y="357" width="0.0257%" height="15" fill="rgb(231,125,12)" fg:x="233478" fg:w="64"/><text x="93.8479%" y="367.50"></text></g><g><title>exc_page_fault (64 samples, 0.03%)</title><rect x="93.5979%" y="341" width="0.0257%" height="15" fill="rgb(216,96,41)" fg:x="233478" fg:w="64"/><text x="93.8479%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (116 samples, 0.05%)</title><rect x="93.5802%" y="389" width="0.0465%" height="15" fill="rgb(248,43,45)" fg:x="233434" fg:w="116"/><text x="93.8302%" y="399.50"></text></g><g><title>core::ptr::write (91 samples, 0.04%)</title><rect x="93.5902%" y="373" width="0.0365%" height="15" fill="rgb(217,222,7)" fg:x="233459" fg:w="91"/><text x="93.8402%" y="383.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (271 samples, 0.11%)</title><rect x="93.5245%" y="565" width="0.1086%" height="15" fill="rgb(233,28,6)" fg:x="233295" fg:w="271"/><text x="93.7745%" y="575.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (271 samples, 0.11%)</title><rect x="93.5245%" y="549" width="0.1086%" height="15" fill="rgb(231,218,15)" fg:x="233295" fg:w="271"/><text x="93.7745%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (271 samples, 0.11%)</title><rect x="93.5245%" y="533" width="0.1086%" height="15" fill="rgb(226,171,48)" fg:x="233295" fg:w="271"/><text x="93.7745%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (271 samples, 0.11%)</title><rect x="93.5245%" y="517" width="0.1086%" height="15" fill="rgb(235,201,9)" fg:x="233295" fg:w="271"/><text x="93.7745%" y="527.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (271 samples, 0.11%)</title><rect x="93.5245%" y="501" width="0.1086%" height="15" fill="rgb(217,80,15)" fg:x="233295" fg:w="271"/><text x="93.7745%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (271 samples, 0.11%)</title><rect x="93.5245%" y="485" width="0.1086%" height="15" fill="rgb(219,152,8)" fg:x="233295" fg:w="271"/><text x="93.7745%" y="495.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (271 samples, 0.11%)</title><rect x="93.5245%" y="469" width="0.1086%" height="15" fill="rgb(243,107,38)" fg:x="233295" fg:w="271"/><text x="93.7745%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (271 samples, 0.11%)</title><rect x="93.5245%" y="453" width="0.1086%" height="15" fill="rgb(231,17,5)" fg:x="233295" fg:w="271"/><text x="93.7745%" y="463.50"></text></g><g><title>nom::combinator::map::{{closure}} (271 samples, 0.11%)</title><rect x="93.5245%" y="437" width="0.1086%" height="15" fill="rgb(209,25,54)" fg:x="233295" fg:w="271"/><text x="93.7745%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (271 samples, 0.11%)</title><rect x="93.5245%" y="421" width="0.1086%" height="15" fill="rgb(219,0,2)" fg:x="233295" fg:w="271"/><text x="93.7745%" y="431.50"></text></g><g><title>nom::multi::count::{{closure}} (271 samples, 0.11%)</title><rect x="93.5245%" y="405" width="0.1086%" height="15" fill="rgb(246,9,5)" fg:x="233295" fg:w="271"/><text x="93.7745%" y="415.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (33 samples, 0.01%)</title><rect x="93.6331%" y="549" width="0.0132%" height="15" fill="rgb(226,159,4)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="559.50"></text></g><g><title>std::io::default_read_exact (33 samples, 0.01%)</title><rect x="93.6331%" y="533" width="0.0132%" height="15" fill="rgb(219,175,34)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="543.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (33 samples, 0.01%)</title><rect x="93.6331%" y="517" width="0.0132%" height="15" fill="rgb(236,10,46)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="527.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (33 samples, 0.01%)</title><rect x="93.6331%" y="501" width="0.0132%" height="15" fill="rgb(240,211,16)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::read (33 samples, 0.01%)</title><rect x="93.6331%" y="485" width="0.0132%" height="15" fill="rgb(205,3,43)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (33 samples, 0.01%)</title><rect x="93.6331%" y="469" width="0.0132%" height="15" fill="rgb(245,7,22)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="479.50"></text></g><g><title>__libc_read (33 samples, 0.01%)</title><rect x="93.6331%" y="453" width="0.0132%" height="15" fill="rgb(239,132,32)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.01%)</title><rect x="93.6331%" y="437" width="0.0132%" height="15" fill="rgb(228,202,34)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="447.50"></text></g><g><title>do_syscall_64 (33 samples, 0.01%)</title><rect x="93.6331%" y="421" width="0.0132%" height="15" fill="rgb(254,200,22)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="431.50"></text></g><g><title>__x64_sys_read (33 samples, 0.01%)</title><rect x="93.6331%" y="405" width="0.0132%" height="15" fill="rgb(219,10,39)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="415.50"></text></g><g><title>ksys_read (33 samples, 0.01%)</title><rect x="93.6331%" y="389" width="0.0132%" height="15" fill="rgb(226,210,39)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="399.50"></text></g><g><title>vfs_read (33 samples, 0.01%)</title><rect x="93.6331%" y="373" width="0.0132%" height="15" fill="rgb(208,219,16)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="383.50"></text></g><g><title>new_sync_read (33 samples, 0.01%)</title><rect x="93.6331%" y="357" width="0.0132%" height="15" fill="rgb(216,158,51)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="367.50"></text></g><g><title>ext4_file_read_iter (33 samples, 0.01%)</title><rect x="93.6331%" y="341" width="0.0132%" height="15" fill="rgb(233,14,44)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="351.50"></text></g><g><title>generic_file_read_iter (33 samples, 0.01%)</title><rect x="93.6331%" y="325" width="0.0132%" height="15" fill="rgb(237,97,39)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="335.50"></text></g><g><title>filemap_read (33 samples, 0.01%)</title><rect x="93.6331%" y="309" width="0.0132%" height="15" fill="rgb(218,198,43)" fg:x="233566" fg:w="33"/><text x="93.8831%" y="319.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (102 samples, 0.04%)</title><rect x="93.6796%" y="373" width="0.0409%" height="15" fill="rgb(231,104,20)" fg:x="233682" fg:w="102"/><text x="93.9296%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (102 samples, 0.04%)</title><rect x="93.6796%" y="357" width="0.0409%" height="15" fill="rgb(254,36,13)" fg:x="233682" fg:w="102"/><text x="93.9296%" y="367.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (102 samples, 0.04%)</title><rect x="93.6796%" y="341" width="0.0409%" height="15" fill="rgb(248,14,50)" fg:x="233682" fg:w="102"/><text x="93.9296%" y="351.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (102 samples, 0.04%)</title><rect x="93.6796%" y="325" width="0.0409%" height="15" fill="rgb(217,107,29)" fg:x="233682" fg:w="102"/><text x="93.9296%" y="335.50"></text></g><g><title>nom::number::streaming::be_u64 (102 samples, 0.04%)</title><rect x="93.6796%" y="309" width="0.0409%" height="15" fill="rgb(251,169,33)" fg:x="233682" fg:w="102"/><text x="93.9296%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.02%)</title><rect x="93.6961%" y="293" width="0.0245%" height="15" fill="rgb(217,108,32)" fg:x="233723" fg:w="61"/><text x="93.9461%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (61 samples, 0.02%)</title><rect x="93.6961%" y="277" width="0.0245%" height="15" fill="rgb(219,66,42)" fg:x="233723" fg:w="61"/><text x="93.9461%" y="287.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (61 samples, 0.02%)</title><rect x="93.6961%" y="261" width="0.0245%" height="15" fill="rgb(206,180,7)" fg:x="233723" fg:w="61"/><text x="93.9461%" y="271.50"></text></g><g><title>__alloc_pages (26 samples, 0.01%)</title><rect x="93.7462%" y="213" width="0.0104%" height="15" fill="rgb(208,226,31)" fg:x="233848" fg:w="26"/><text x="93.9962%" y="223.50"></text></g><g><title>alloc_pages_vma (29 samples, 0.01%)</title><rect x="93.7454%" y="229" width="0.0116%" height="15" fill="rgb(218,26,49)" fg:x="233846" fg:w="29"/><text x="93.9954%" y="239.50"></text></g><g><title>do_anonymous_page (51 samples, 0.02%)</title><rect x="93.7442%" y="245" width="0.0204%" height="15" fill="rgb(233,197,48)" fg:x="233843" fg:w="51"/><text x="93.9942%" y="255.50"></text></g><g><title>handle_mm_fault (61 samples, 0.02%)</title><rect x="93.7406%" y="293" width="0.0245%" height="15" fill="rgb(252,181,51)" fg:x="233834" fg:w="61"/><text x="93.9906%" y="303.50"></text></g><g><title>__handle_mm_fault (57 samples, 0.02%)</title><rect x="93.7422%" y="277" width="0.0229%" height="15" fill="rgb(253,90,19)" fg:x="233838" fg:w="57"/><text x="93.9922%" y="287.50"></text></g><g><title>handle_pte_fault (54 samples, 0.02%)</title><rect x="93.7434%" y="261" width="0.0216%" height="15" fill="rgb(215,171,30)" fg:x="233841" fg:w="54"/><text x="93.9934%" y="271.50"></text></g><g><title>do_user_addr_fault (64 samples, 0.03%)</title><rect x="93.7398%" y="309" width="0.0257%" height="15" fill="rgb(214,222,9)" fg:x="233832" fg:w="64"/><text x="93.9898%" y="319.50"></text></g><g><title>asm_exc_page_fault (67 samples, 0.03%)</title><rect x="93.7390%" y="341" width="0.0269%" height="15" fill="rgb(223,3,22)" fg:x="233830" fg:w="67"/><text x="93.9890%" y="351.50"></text></g><g><title>exc_page_fault (67 samples, 0.03%)</title><rect x="93.7390%" y="325" width="0.0269%" height="15" fill="rgb(225,196,46)" fg:x="233830" fg:w="67"/><text x="93.9890%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (124 samples, 0.05%)</title><rect x="93.7205%" y="373" width="0.0497%" height="15" fill="rgb(209,110,37)" fg:x="233784" fg:w="124"/><text x="93.9705%" y="383.50"></text></g><g><title>core::ptr::write (99 samples, 0.04%)</title><rect x="93.7306%" y="357" width="0.0397%" height="15" fill="rgb(249,89,12)" fg:x="233809" fg:w="99"/><text x="93.9806%" y="367.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (304 samples, 0.12%)</title><rect x="93.6552%" y="549" width="0.1219%" height="15" fill="rgb(226,27,33)" fg:x="233621" fg:w="304"/><text x="93.9052%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (304 samples, 0.12%)</title><rect x="93.6552%" y="533" width="0.1219%" height="15" fill="rgb(213,82,22)" fg:x="233621" fg:w="304"/><text x="93.9052%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (304 samples, 0.12%)</title><rect x="93.6552%" y="517" width="0.1219%" height="15" fill="rgb(248,140,0)" fg:x="233621" fg:w="304"/><text x="93.9052%" y="527.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (304 samples, 0.12%)</title><rect x="93.6552%" y="501" width="0.1219%" height="15" fill="rgb(228,106,3)" fg:x="233621" fg:w="304"/><text x="93.9052%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (304 samples, 0.12%)</title><rect x="93.6552%" y="485" width="0.1219%" height="15" fill="rgb(209,23,37)" fg:x="233621" fg:w="304"/><text x="93.9052%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (304 samples, 0.12%)</title><rect x="93.6552%" y="469" width="0.1219%" height="15" fill="rgb(241,93,50)" fg:x="233621" fg:w="304"/><text x="93.9052%" y="479.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (304 samples, 0.12%)</title><rect x="93.6552%" y="453" width="0.1219%" height="15" fill="rgb(253,46,43)" fg:x="233621" fg:w="304"/><text x="93.9052%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (304 samples, 0.12%)</title><rect x="93.6552%" y="437" width="0.1219%" height="15" fill="rgb(226,206,43)" fg:x="233621" fg:w="304"/><text x="93.9052%" y="447.50"></text></g><g><title>nom::combinator::map::{{closure}} (304 samples, 0.12%)</title><rect x="93.6552%" y="421" width="0.1219%" height="15" fill="rgb(217,54,7)" fg:x="233621" fg:w="304"/><text x="93.9052%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (304 samples, 0.12%)</title><rect x="93.6552%" y="405" width="0.1219%" height="15" fill="rgb(223,5,52)" fg:x="233621" fg:w="304"/><text x="93.9052%" y="415.50"></text></g><g><title>nom::multi::count::{{closure}} (304 samples, 0.12%)</title><rect x="93.6552%" y="389" width="0.1219%" height="15" fill="rgb(206,52,46)" fg:x="233621" fg:w="304"/><text x="93.9052%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (122 samples, 0.05%)</title><rect x="93.8220%" y="357" width="0.0489%" height="15" fill="rgb(253,136,11)" fg:x="234037" fg:w="122"/><text x="94.0720%" y="367.50"></text></g><g><title>core::ops::function::FnMut::call_mut (122 samples, 0.05%)</title><rect x="93.8220%" y="341" width="0.0489%" height="15" fill="rgb(208,106,33)" fg:x="234037" fg:w="122"/><text x="94.0720%" y="351.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (122 samples, 0.05%)</title><rect x="93.8220%" y="325" width="0.0489%" height="15" fill="rgb(206,54,4)" fg:x="234037" fg:w="122"/><text x="94.0720%" y="335.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (122 samples, 0.05%)</title><rect x="93.8220%" y="309" width="0.0489%" height="15" fill="rgb(213,3,15)" fg:x="234037" fg:w="122"/><text x="94.0720%" y="319.50"></text></g><g><title>nom::number::streaming::be_u64 (122 samples, 0.05%)</title><rect x="93.8220%" y="293" width="0.0489%" height="15" fill="rgb(252,211,39)" fg:x="234037" fg:w="122"/><text x="94.0720%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.04%)</title><rect x="93.8356%" y="277" width="0.0353%" height="15" fill="rgb(223,6,36)" fg:x="234071" fg:w="88"/><text x="94.0856%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.04%)</title><rect x="93.8356%" y="261" width="0.0353%" height="15" fill="rgb(252,169,45)" fg:x="234071" fg:w="88"/><text x="94.0856%" y="271.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (88 samples, 0.04%)</title><rect x="93.8356%" y="245" width="0.0353%" height="15" fill="rgb(212,48,26)" fg:x="234071" fg:w="88"/><text x="94.0856%" y="255.50"></text></g><g><title>do_anonymous_page (53 samples, 0.02%)</title><rect x="93.8993%" y="229" width="0.0212%" height="15" fill="rgb(251,102,48)" fg:x="234230" fg:w="53"/><text x="94.1493%" y="239.50"></text></g><g><title>__handle_mm_fault (60 samples, 0.02%)</title><rect x="93.8969%" y="261" width="0.0241%" height="15" fill="rgb(243,208,16)" fg:x="234224" fg:w="60"/><text x="94.1469%" y="271.50"></text></g><g><title>handle_pte_fault (55 samples, 0.02%)</title><rect x="93.8989%" y="245" width="0.0220%" height="15" fill="rgb(219,96,24)" fg:x="234229" fg:w="55"/><text x="94.1489%" y="255.50"></text></g><g><title>do_user_addr_fault (67 samples, 0.03%)</title><rect x="93.8945%" y="293" width="0.0269%" height="15" fill="rgb(219,33,29)" fg:x="234218" fg:w="67"/><text x="94.1445%" y="303.50"></text></g><g><title>handle_mm_fault (63 samples, 0.03%)</title><rect x="93.8961%" y="277" width="0.0253%" height="15" fill="rgb(223,176,5)" fg:x="234222" fg:w="63"/><text x="94.1461%" y="287.50"></text></g><g><title>asm_exc_page_fault (71 samples, 0.03%)</title><rect x="93.8933%" y="325" width="0.0285%" height="15" fill="rgb(228,140,14)" fg:x="234215" fg:w="71"/><text x="94.1433%" y="335.50"></text></g><g><title>exc_page_fault (69 samples, 0.03%)</title><rect x="93.8941%" y="309" width="0.0277%" height="15" fill="rgb(217,179,31)" fg:x="234217" fg:w="69"/><text x="94.1441%" y="319.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (350 samples, 0.14%)</title><rect x="93.7859%" y="501" width="0.1403%" height="15" fill="rgb(230,9,30)" fg:x="233947" fg:w="350"/><text x="94.0359%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (350 samples, 0.14%)</title><rect x="93.7859%" y="485" width="0.1403%" height="15" fill="rgb(230,136,20)" fg:x="233947" fg:w="350"/><text x="94.0359%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (349 samples, 0.14%)</title><rect x="93.7863%" y="469" width="0.1399%" height="15" fill="rgb(215,210,22)" fg:x="233948" fg:w="349"/><text x="94.0363%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (347 samples, 0.14%)</title><rect x="93.7871%" y="453" width="0.1391%" height="15" fill="rgb(218,43,5)" fg:x="233950" fg:w="347"/><text x="94.0371%" y="463.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (347 samples, 0.14%)</title><rect x="93.7871%" y="437" width="0.1391%" height="15" fill="rgb(216,11,5)" fg:x="233950" fg:w="347"/><text x="94.0371%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (347 samples, 0.14%)</title><rect x="93.7871%" y="421" width="0.1391%" height="15" fill="rgb(209,82,29)" fg:x="233950" fg:w="347"/><text x="94.0371%" y="431.50"></text></g><g><title>nom::combinator::map::{{closure}} (347 samples, 0.14%)</title><rect x="93.7871%" y="405" width="0.1391%" height="15" fill="rgb(244,115,12)" fg:x="233950" fg:w="347"/><text x="94.0371%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (347 samples, 0.14%)</title><rect x="93.7871%" y="389" width="0.1391%" height="15" fill="rgb(222,82,18)" fg:x="233950" fg:w="347"/><text x="94.0371%" y="399.50"></text></g><g><title>nom::multi::count::{{closure}} (347 samples, 0.14%)</title><rect x="93.7871%" y="373" width="0.1391%" height="15" fill="rgb(249,227,8)" fg:x="233950" fg:w="347"/><text x="94.0371%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (138 samples, 0.06%)</title><rect x="93.8709%" y="357" width="0.0553%" height="15" fill="rgb(253,141,45)" fg:x="234159" fg:w="138"/><text x="94.1209%" y="367.50"></text></g><g><title>core::ptr::write (116 samples, 0.05%)</title><rect x="93.8797%" y="341" width="0.0465%" height="15" fill="rgb(234,184,4)" fg:x="234181" fg:w="116"/><text x="94.1297%" y="351.50"></text></g><g><title>&lt;hprof_slurp::record_parser_iter::HprofRecordParserIter as core::iter::traits::iterator::Iterator&gt;::next (182,127 samples, 73.01%)</title><rect x="20.9194%" y="693" width="73.0120%" height="15" fill="rgb(218,194,23)" fg:x="52183" fg:w="182127"/><text x="21.1694%" y="703.50">&lt;hprof_slurp::record_parser_iter::HprofRecordParserIter as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (182,127 samples, 73.01%)</title><rect x="20.9194%" y="677" width="73.0120%" height="15" fill="rgb(235,66,41)" fg:x="52183" fg:w="182127"/><text x="21.1694%" y="687.50">hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next</text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (114,591 samples, 45.94%)</title><rect x="47.9936%" y="661" width="45.9378%" height="15" fill="rgb(245,217,1)" fg:x="119719" fg:w="114591"/><text x="48.2436%" y="671.50">hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next</text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,962 samples, 0.79%)</title><rect x="93.1449%" y="645" width="0.7865%" height="15" fill="rgb(229,91,1)" fg:x="232348" fg:w="1962"/><text x="93.3949%" y="655.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,799 samples, 0.72%)</title><rect x="93.2102%" y="629" width="0.7212%" height="15" fill="rgb(207,101,30)" fg:x="232511" fg:w="1799"/><text x="93.4602%" y="639.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,599 samples, 0.64%)</title><rect x="93.2904%" y="613" width="0.6410%" height="15" fill="rgb(223,82,49)" fg:x="232711" fg:w="1599"/><text x="93.5404%" y="623.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,350 samples, 0.54%)</title><rect x="93.3902%" y="597" width="0.5412%" height="15" fill="rgb(218,167,17)" fg:x="232960" fg:w="1350"/><text x="93.6402%" y="607.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,070 samples, 0.43%)</title><rect x="93.5025%" y="581" width="0.4289%" height="15" fill="rgb(208,103,14)" fg:x="233240" fg:w="1070"/><text x="93.7525%" y="591.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (744 samples, 0.30%)</title><rect x="93.6331%" y="565" width="0.2983%" height="15" fill="rgb(238,20,8)" fg:x="233566" fg:w="744"/><text x="93.8831%" y="575.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (385 samples, 0.15%)</title><rect x="93.7771%" y="549" width="0.1543%" height="15" fill="rgb(218,80,54)" fg:x="233925" fg:w="385"/><text x="94.0271%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (363 samples, 0.15%)</title><rect x="93.7859%" y="533" width="0.1455%" height="15" fill="rgb(240,144,17)" fg:x="233947" fg:w="363"/><text x="94.0359%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (363 samples, 0.15%)</title><rect x="93.7859%" y="517" width="0.1455%" height="15" fill="rgb(245,27,50)" fg:x="233947" fg:w="363"/><text x="94.0359%" y="527.50"></text></g><g><title>indicatif::state::ProgressState::draw (26 samples, 0.01%)</title><rect x="93.9314%" y="613" width="0.0104%" height="15" fill="rgb(251,51,7)" fg:x="234310" fg:w="26"/><text x="94.1814%" y="623.50"></text></g><g><title>indicatif::state::ProgressState::update_and_draw (27 samples, 0.01%)</title><rect x="93.9314%" y="629" width="0.0108%" height="15" fill="rgb(245,217,29)" fg:x="234310" fg:w="27"/><text x="94.1814%" y="639.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::set_position (28 samples, 0.01%)</title><rect x="93.9314%" y="661" width="0.0112%" height="15" fill="rgb(221,176,29)" fg:x="234310" fg:w="28"/><text x="94.1814%" y="671.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::update_and_draw (28 samples, 0.01%)</title><rect x="93.9314%" y="645" width="0.0112%" height="15" fill="rgb(212,180,24)" fg:x="234310" fg:w="28"/><text x="94.1814%" y="655.50"></text></g><g><title>_start (182,159 samples, 73.02%)</title><rect x="20.9194%" y="1013" width="73.0248%" height="15" fill="rgb(254,24,2)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="1023.50">_start</text></g><g><title>__libc_start_main_alias_2 (182,159 samples, 73.02%)</title><rect x="20.9194%" y="997" width="73.0248%" height="15" fill="rgb(230,100,2)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="1007.50">__libc_start_main_alias_2</text></g><g><title>__libc_start_call_main (182,159 samples, 73.02%)</title><rect x="20.9194%" y="981" width="73.0248%" height="15" fill="rgb(219,142,25)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="991.50">__libc_start_call_main</text></g><g><title>main (182,159 samples, 73.02%)</title><rect x="20.9194%" y="965" width="73.0248%" height="15" fill="rgb(240,73,43)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="975.50">main</text></g><g><title>std::rt::lang_start_internal (182,159 samples, 73.02%)</title><rect x="20.9194%" y="949" width="73.0248%" height="15" fill="rgb(214,114,15)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="959.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (182,159 samples, 73.02%)</title><rect x="20.9194%" y="933" width="73.0248%" height="15" fill="rgb(207,130,4)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="943.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (182,159 samples, 73.02%)</title><rect x="20.9194%" y="917" width="73.0248%" height="15" fill="rgb(221,25,40)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="927.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (182,159 samples, 73.02%)</title><rect x="20.9194%" y="901" width="73.0248%" height="15" fill="rgb(241,184,7)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="911.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (182,159 samples, 73.02%)</title><rect x="20.9194%" y="885" width="73.0248%" height="15" fill="rgb(235,159,4)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="895.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (182,159 samples, 73.02%)</title><rect x="20.9194%" y="869" width="73.0248%" height="15" fill="rgb(214,87,48)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (182,159 samples, 73.02%)</title><rect x="20.9194%" y="853" width="73.0248%" height="15" fill="rgb(246,198,24)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (182,159 samples, 73.02%)</title><rect x="20.9194%" y="837" width="73.0248%" height="15" fill="rgb(209,66,40)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="847.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (182,159 samples, 73.02%)</title><rect x="20.9194%" y="821" width="73.0248%" height="15" fill="rgb(233,147,39)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="831.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (182,159 samples, 73.02%)</title><rect x="20.9194%" y="805" width="73.0248%" height="15" fill="rgb(231,145,52)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="815.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (182,159 samples, 73.02%)</title><rect x="20.9194%" y="789" width="73.0248%" height="15" fill="rgb(206,20,26)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="799.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (182,159 samples, 73.02%)</title><rect x="20.9194%" y="773" width="73.0248%" height="15" fill="rgb(238,220,4)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="783.50">core::ops::function::FnOnce::call_once</text></g><g><title>hprof_slurp::main (182,159 samples, 73.02%)</title><rect x="20.9194%" y="757" width="73.0248%" height="15" fill="rgb(252,195,42)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="767.50">hprof_slurp::main</text></g><g><title>hprof_slurp::slurp::slurp_file (182,159 samples, 73.02%)</title><rect x="20.9194%" y="741" width="73.0248%" height="15" fill="rgb(209,10,6)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="751.50">hprof_slurp::slurp::slurp_file</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (182,159 samples, 73.02%)</title><rect x="20.9194%" y="725" width="73.0248%" height="15" fill="rgb(229,3,52)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="735.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>core::iter::traits::iterator::Iterator::fold (182,159 samples, 73.02%)</title><rect x="20.9194%" y="709" width="73.0248%" height="15" fill="rgb(253,49,37)" fg:x="52183" fg:w="182159"/><text x="21.1694%" y="719.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (32 samples, 0.01%)</title><rect x="93.9314%" y="693" width="0.0128%" height="15" fill="rgb(240,103,49)" fg:x="234310" fg:w="32"/><text x="94.1814%" y="703.50"></text></g><g><title>hprof_slurp::slurp::slurp_file::{{closure}} (32 samples, 0.01%)</title><rect x="93.9314%" y="677" width="0.0128%" height="15" fill="rgb(250,182,30)" fg:x="234310" fg:w="32"/><text x="94.1814%" y="687.50"></text></g><g><title>exc_page_fault (26 samples, 0.01%)</title><rect x="99.9379%" y="997" width="0.0104%" height="15" fill="rgb(248,8,30)" fg:x="249293" fg:w="26"/><text x="100.1879%" y="1007.50"></text></g><g><title>asm_exc_page_fault (14,978 samples, 6.00%)</title><rect x="93.9442%" y="1013" width="6.0045%" height="15" fill="rgb(237,120,30)" fg:x="234342" fg:w="14978"/><text x="94.1942%" y="1023.50">asm_exc_..</text></g><g><title>do_user_addr_fault (26 samples, 0.01%)</title><rect x="99.9667%" y="821" width="0.0104%" height="15" fill="rgb(221,146,34)" fg:x="249365" fg:w="26"/><text x="100.2167%" y="831.50"></text></g><g><title>copy_user_enhanced_fast_string (44 samples, 0.02%)</title><rect x="99.9599%" y="869" width="0.0176%" height="15" fill="rgb(242,55,13)" fg:x="249348" fg:w="44"/><text x="100.2099%" y="879.50"></text></g><g><title>asm_exc_page_fault (28 samples, 0.01%)</title><rect x="99.9663%" y="853" width="0.0112%" height="15" fill="rgb(242,112,31)" fg:x="249364" fg:w="28"/><text x="100.2163%" y="863.50"></text></g><g><title>exc_page_fault (28 samples, 0.01%)</title><rect x="99.9663%" y="837" width="0.0112%" height="15" fill="rgb(249,192,27)" fg:x="249364" fg:w="28"/><text x="100.2163%" y="847.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (87 samples, 0.03%)</title><rect x="99.9523%" y="1013" width="0.0349%" height="15" fill="rgb(208,204,44)" fg:x="249329" fg:w="87"/><text x="100.2023%" y="1023.50"></text></g><g><title>do_syscall_64 (87 samples, 0.03%)</title><rect x="99.9523%" y="997" width="0.0349%" height="15" fill="rgb(208,93,54)" fg:x="249329" fg:w="87"/><text x="100.2023%" y="1007.50"></text></g><g><title>__x64_sys_read (83 samples, 0.03%)</title><rect x="99.9539%" y="981" width="0.0333%" height="15" fill="rgb(242,1,31)" fg:x="249333" fg:w="83"/><text x="100.2039%" y="991.50"></text></g><g><title>ksys_read (83 samples, 0.03%)</title><rect x="99.9539%" y="965" width="0.0333%" height="15" fill="rgb(241,83,25)" fg:x="249333" fg:w="83"/><text x="100.2039%" y="975.50"></text></g><g><title>vfs_read (83 samples, 0.03%)</title><rect x="99.9539%" y="949" width="0.0333%" height="15" fill="rgb(205,169,50)" fg:x="249333" fg:w="83"/><text x="100.2039%" y="959.50"></text></g><g><title>new_sync_read (83 samples, 0.03%)</title><rect x="99.9539%" y="933" width="0.0333%" height="15" fill="rgb(239,186,37)" fg:x="249333" fg:w="83"/><text x="100.2039%" y="943.50"></text></g><g><title>ext4_file_read_iter (83 samples, 0.03%)</title><rect x="99.9539%" y="917" width="0.0333%" height="15" fill="rgb(205,221,10)" fg:x="249333" fg:w="83"/><text x="100.2039%" y="927.50"></text></g><g><title>generic_file_read_iter (83 samples, 0.03%)</title><rect x="99.9539%" y="901" width="0.0333%" height="15" fill="rgb(218,196,15)" fg:x="249333" fg:w="83"/><text x="100.2039%" y="911.50"></text></g><g><title>filemap_read (83 samples, 0.03%)</title><rect x="99.9539%" y="885" width="0.0333%" height="15" fill="rgb(218,196,35)" fg:x="249333" fg:w="83"/><text x="100.2039%" y="895.50"></text></g><g><title>hprof-slurp (249,443 samples, 100.00%)</title><rect x="0.0000%" y="1029" width="99.9980%" height="15" fill="rgb(233,63,24)" fg:x="0" fg:w="249443"/><text x="0.2500%" y="1039.50">hprof-slurp</text></g><g><title>all (249,448 samples, 100%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(225,8,4)" fg:x="0" fg:w="249448"/><text x="0.2500%" y="1055.50"></text></g></svg></svg>