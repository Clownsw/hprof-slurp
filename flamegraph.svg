<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1062" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1045.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1045.00"> </text><svg id="frames" x="10" width="1180" total_samples="186634"><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,383 samples, 0.74%)</title><rect x="0.0016%" y="965" width="0.7410%" height="15" fill="rgb(227,0,7)" fg:x="3" fg:w="1383"/><text x="0.2516%" y="975.50"></text></g><g><title>nom::multi::count::{{closure}} (89 samples, 0.05%)</title><rect x="0.6949%" y="949" width="0.0477%" height="15" fill="rgb(217,0,24)" fg:x="1297" fg:w="89"/><text x="0.9449%" y="959.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (89 samples, 0.05%)</title><rect x="0.6949%" y="933" width="0.0477%" height="15" fill="rgb(221,193,54)" fg:x="1297" fg:w="89"/><text x="0.9449%" y="943.50"></text></g><g><title>core::ops::function::FnMut::call_mut (89 samples, 0.05%)</title><rect x="0.6949%" y="917" width="0.0477%" height="15" fill="rgb(248,212,6)" fg:x="1297" fg:w="89"/><text x="0.9449%" y="927.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (89 samples, 0.05%)</title><rect x="0.6949%" y="901" width="0.0477%" height="15" fill="rgb(208,68,35)" fg:x="1297" fg:w="89"/><text x="0.9449%" y="911.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (33 samples, 0.02%)</title><rect x="0.7533%" y="965" width="0.0177%" height="15" fill="rgb(232,128,0)" fg:x="1406" fg:w="33"/><text x="1.0033%" y="975.50"></text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (33 samples, 0.02%)</title><rect x="0.7533%" y="949" width="0.0177%" height="15" fill="rgb(207,160,47)" fg:x="1406" fg:w="33"/><text x="1.0033%" y="959.50"></text></g><g><title>[anon] (1,450 samples, 0.78%)</title><rect x="0.0000%" y="981" width="0.7769%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1450"/><text x="0.2500%" y="991.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (2,001 samples, 1.07%)</title><rect x="0.7817%" y="965" width="1.0722%" height="15" fill="rgb(218,30,26)" fg:x="1459" fg:w="2001"/><text x="1.0317%" y="975.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (25 samples, 0.01%)</title><rect x="2.2145%" y="933" width="0.0134%" height="15" fill="rgb(220,122,19)" fg:x="4133" fg:w="25"/><text x="2.4645%" y="943.50"></text></g><g><title>core::ops::function::FnMut::call_mut (25 samples, 0.01%)</title><rect x="2.2145%" y="917" width="0.0134%" height="15" fill="rgb(250,228,42)" fg:x="4133" fg:w="25"/><text x="2.4645%" y="927.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (25 samples, 0.01%)</title><rect x="2.2145%" y="901" width="0.0134%" height="15" fill="rgb(240,193,28)" fg:x="4133" fg:w="25"/><text x="2.4645%" y="911.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (723 samples, 0.39%)</title><rect x="1.8539%" y="965" width="0.3874%" height="15" fill="rgb(216,20,37)" fg:x="3460" fg:w="723"/><text x="2.1039%" y="975.50"></text></g><g><title>nom::multi::count::{{closure}} (50 samples, 0.03%)</title><rect x="2.2145%" y="949" width="0.0268%" height="15" fill="rgb(206,188,39)" fg:x="4133" fg:w="50"/><text x="2.4645%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (25 samples, 0.01%)</title><rect x="2.2279%" y="933" width="0.0134%" height="15" fill="rgb(217,207,13)" fg:x="4158" fg:w="25"/><text x="2.4779%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (25 samples, 0.01%)</title><rect x="2.2279%" y="917" width="0.0134%" height="15" fill="rgb(231,73,38)" fg:x="4158" fg:w="25"/><text x="2.4779%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 0.01%)</title><rect x="2.2279%" y="901" width="0.0134%" height="15" fill="rgb(225,20,46)" fg:x="4158" fg:w="25"/><text x="2.4779%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (25 samples, 0.01%)</title><rect x="2.2279%" y="885" width="0.0134%" height="15" fill="rgb(210,31,41)" fg:x="4158" fg:w="25"/><text x="2.4779%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (25 samples, 0.01%)</title><rect x="2.2279%" y="869" width="0.0134%" height="15" fill="rgb(221,200,47)" fg:x="4158" fg:w="25"/><text x="2.4779%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.01%)</title><rect x="2.2279%" y="853" width="0.0134%" height="15" fill="rgb(226,26,5)" fg:x="4158" fg:w="25"/><text x="2.4779%" y="863.50"></text></g><g><title>alloc::alloc::alloc (25 samples, 0.01%)</title><rect x="2.2279%" y="837" width="0.0134%" height="15" fill="rgb(249,33,26)" fg:x="4158" fg:w="25"/><text x="2.4779%" y="847.50"></text></g><g><title>_int_malloc (44 samples, 0.02%)</title><rect x="2.2509%" y="965" width="0.0236%" height="15" fill="rgb(235,183,28)" fg:x="4201" fg:w="44"/><text x="2.5009%" y="975.50"></text></g><g><title>hprof_slurp::parser::gc_record::FieldType::from_value (19 samples, 0.01%)</title><rect x="2.2745%" y="965" width="0.0102%" height="15" fill="rgb(221,5,38)" fg:x="4245" fg:w="19"/><text x="2.5245%" y="975.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (122 samples, 0.07%)</title><rect x="2.2847%" y="965" width="0.0654%" height="15" fill="rgb(247,18,42)" fg:x="4264" fg:w="122"/><text x="2.5347%" y="975.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (1,208 samples, 0.65%)</title><rect x="2.3501%" y="965" width="0.6473%" height="15" fill="rgb(241,131,45)" fg:x="4386" fg:w="1208"/><text x="2.6001%" y="975.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (81 samples, 0.04%)</title><rect x="2.9989%" y="965" width="0.0434%" height="15" fill="rgb(249,31,29)" fg:x="5597" fg:w="81"/><text x="3.2489%" y="975.50"></text></g><g><title>[unknown] (4,235 samples, 2.27%)</title><rect x="0.7817%" y="981" width="2.2691%" height="15" fill="rgb(225,111,53)" fg:x="1459" fg:w="4235"/><text x="1.0317%" y="991.50">[..</text></g><g><title>clear_page_erms (24 samples, 0.01%)</title><rect x="6.9944%" y="533" width="0.0129%" height="15" fill="rgb(238,160,17)" fg:x="13054" fg:w="24"/><text x="7.2444%" y="543.50"></text></g><g><title>alloc_pages_vma (37 samples, 0.02%)</title><rect x="6.9923%" y="581" width="0.0198%" height="15" fill="rgb(214,148,48)" fg:x="13050" fg:w="37"/><text x="7.2423%" y="591.50"></text></g><g><title>__alloc_pages (36 samples, 0.02%)</title><rect x="6.9928%" y="565" width="0.0193%" height="15" fill="rgb(232,36,49)" fg:x="13051" fg:w="36"/><text x="7.2428%" y="575.50"></text></g><g><title>get_page_from_freelist (35 samples, 0.02%)</title><rect x="6.9934%" y="549" width="0.0188%" height="15" fill="rgb(209,103,24)" fg:x="13052" fg:w="35"/><text x="7.2434%" y="559.50"></text></g><g><title>__handle_mm_fault (75 samples, 0.04%)</title><rect x="6.9784%" y="629" width="0.0402%" height="15" fill="rgb(229,88,8)" fg:x="13024" fg:w="75"/><text x="7.2284%" y="639.50"></text></g><g><title>handle_pte_fault (69 samples, 0.04%)</title><rect x="6.9816%" y="613" width="0.0370%" height="15" fill="rgb(213,181,19)" fg:x="13030" fg:w="69"/><text x="7.2316%" y="623.50"></text></g><g><title>do_anonymous_page (68 samples, 0.04%)</title><rect x="6.9821%" y="597" width="0.0364%" height="15" fill="rgb(254,191,54)" fg:x="13031" fg:w="68"/><text x="7.2321%" y="607.50"></text></g><g><title>do_user_addr_fault (79 samples, 0.04%)</title><rect x="6.9768%" y="661" width="0.0423%" height="15" fill="rgb(241,83,37)" fg:x="13021" fg:w="79"/><text x="7.2268%" y="671.50"></text></g><g><title>handle_mm_fault (76 samples, 0.04%)</title><rect x="6.9784%" y="645" width="0.0407%" height="15" fill="rgb(233,36,39)" fg:x="13024" fg:w="76"/><text x="7.2284%" y="655.50"></text></g><g><title>asm_exc_page_fault (86 samples, 0.05%)</title><rect x="6.9751%" y="693" width="0.0461%" height="15" fill="rgb(226,3,54)" fg:x="13018" fg:w="86"/><text x="7.2251%" y="703.50"></text></g><g><title>exc_page_fault (85 samples, 0.05%)</title><rect x="6.9757%" y="677" width="0.0455%" height="15" fill="rgb(245,192,40)" fg:x="13019" fg:w="85"/><text x="7.2257%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (7,420 samples, 3.98%)</title><rect x="3.0546%" y="757" width="3.9757%" height="15" fill="rgb(238,167,29)" fg:x="5701" fg:w="7420"/><text x="3.3046%" y="767.50">allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7,420 samples, 3.98%)</title><rect x="3.0546%" y="741" width="3.9757%" height="15" fill="rgb(232,182,51)" fg:x="5701" fg:w="7420"/><text x="3.3046%" y="751.50">allo..</text></g><g><title>core::intrinsics::copy_nonoverlapping (7,417 samples, 3.97%)</title><rect x="3.0562%" y="725" width="3.9741%" height="15" fill="rgb(231,60,39)" fg:x="5704" fg:w="7417"/><text x="3.3062%" y="735.50">core..</text></g><g><title>__memcpy_avx_unaligned_erms (7,417 samples, 3.97%)</title><rect x="3.0562%" y="709" width="3.9741%" height="15" fill="rgb(208,69,12)" fg:x="5704" fg:w="7417"/><text x="3.3062%" y="719.50">__me..</text></g><g><title>free_pages_and_swap_cache (19 samples, 0.01%)</title><rect x="7.0464%" y="437" width="0.0102%" height="15" fill="rgb(235,93,37)" fg:x="13151" fg:w="19"/><text x="7.2964%" y="447.50"></text></g><g><title>release_pages (19 samples, 0.01%)</title><rect x="7.0464%" y="421" width="0.0102%" height="15" fill="rgb(213,116,39)" fg:x="13151" fg:w="19"/><text x="7.2964%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (37 samples, 0.02%)</title><rect x="7.0373%" y="741" width="0.0198%" height="15" fill="rgb(222,207,29)" fg:x="13134" fg:w="37"/><text x="7.2873%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (37 samples, 0.02%)</title><rect x="7.0373%" y="725" width="0.0198%" height="15" fill="rgb(206,96,30)" fg:x="13134" fg:w="37"/><text x="7.2873%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.02%)</title><rect x="7.0373%" y="709" width="0.0198%" height="15" fill="rgb(218,138,4)" fg:x="13134" fg:w="37"/><text x="7.2873%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 0.02%)</title><rect x="7.0373%" y="693" width="0.0198%" height="15" fill="rgb(250,191,14)" fg:x="13134" fg:w="37"/><text x="7.2873%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (37 samples, 0.02%)</title><rect x="7.0373%" y="677" width="0.0198%" height="15" fill="rgb(239,60,40)" fg:x="13134" fg:w="37"/><text x="7.2873%" y="687.50"></text></g><g><title>__GI___libc_free (37 samples, 0.02%)</title><rect x="7.0373%" y="661" width="0.0198%" height="15" fill="rgb(206,27,48)" fg:x="13134" fg:w="37"/><text x="7.2873%" y="671.50"></text></g><g><title>__GI___munmap (37 samples, 0.02%)</title><rect x="7.0373%" y="645" width="0.0198%" height="15" fill="rgb(225,35,8)" fg:x="13134" fg:w="37"/><text x="7.2873%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (37 samples, 0.02%)</title><rect x="7.0373%" y="629" width="0.0198%" height="15" fill="rgb(250,213,24)" fg:x="13134" fg:w="37"/><text x="7.2873%" y="639.50"></text></g><g><title>do_syscall_64 (37 samples, 0.02%)</title><rect x="7.0373%" y="613" width="0.0198%" height="15" fill="rgb(247,123,22)" fg:x="13134" fg:w="37"/><text x="7.2873%" y="623.50"></text></g><g><title>__x64_sys_munmap (37 samples, 0.02%)</title><rect x="7.0373%" y="597" width="0.0198%" height="15" fill="rgb(231,138,38)" fg:x="13134" fg:w="37"/><text x="7.2873%" y="607.50"></text></g><g><title>__vm_munmap (37 samples, 0.02%)</title><rect x="7.0373%" y="581" width="0.0198%" height="15" fill="rgb(231,145,46)" fg:x="13134" fg:w="37"/><text x="7.2873%" y="591.50"></text></g><g><title>__do_munmap (37 samples, 0.02%)</title><rect x="7.0373%" y="565" width="0.0198%" height="15" fill="rgb(251,118,11)" fg:x="13134" fg:w="37"/><text x="7.2873%" y="575.50"></text></g><g><title>unmap_region (37 samples, 0.02%)</title><rect x="7.0373%" y="549" width="0.0198%" height="15" fill="rgb(217,147,25)" fg:x="13134" fg:w="37"/><text x="7.2873%" y="559.50"></text></g><g><title>unmap_vmas (36 samples, 0.02%)</title><rect x="7.0378%" y="533" width="0.0193%" height="15" fill="rgb(247,81,37)" fg:x="13135" fg:w="36"/><text x="7.2878%" y="543.50"></text></g><g><title>unmap_single_vma (36 samples, 0.02%)</title><rect x="7.0378%" y="517" width="0.0193%" height="15" fill="rgb(209,12,38)" fg:x="13135" fg:w="36"/><text x="7.2878%" y="527.50"></text></g><g><title>unmap_page_range (36 samples, 0.02%)</title><rect x="7.0378%" y="501" width="0.0193%" height="15" fill="rgb(227,1,9)" fg:x="13135" fg:w="36"/><text x="7.2878%" y="511.50"></text></g><g><title>zap_pmd_range.isra.0 (36 samples, 0.02%)</title><rect x="7.0378%" y="485" width="0.0193%" height="15" fill="rgb(248,47,43)" fg:x="13135" fg:w="36"/><text x="7.2878%" y="495.50"></text></g><g><title>zap_pte_range (36 samples, 0.02%)</title><rect x="7.0378%" y="469" width="0.0193%" height="15" fill="rgb(221,10,30)" fg:x="13135" fg:w="36"/><text x="7.2878%" y="479.50"></text></g><g><title>tlb_flush_mmu (20 samples, 0.01%)</title><rect x="7.0464%" y="453" width="0.0107%" height="15" fill="rgb(210,229,1)" fg:x="13151" fg:w="20"/><text x="7.2964%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}}&gt; (56 samples, 0.03%)</title><rect x="7.0319%" y="757" width="0.0300%" height="15" fill="rgb(222,148,37)" fg:x="13124" fg:w="56"/><text x="7.2819%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (26 samples, 0.01%)</title><rect x="15.6783%" y="693" width="0.0139%" height="15" fill="rgb(234,67,33)" fg:x="29261" fg:w="26"/><text x="15.9283%" y="703.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}}::{{closure}} (26 samples, 0.01%)</title><rect x="15.6783%" y="677" width="0.0139%" height="15" fill="rgb(247,98,35)" fg:x="29261" fg:w="26"/><text x="15.9283%" y="687.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_utf8_string (25 samples, 0.01%)</title><rect x="15.6788%" y="661" width="0.0134%" height="15" fill="rgb(247,138,52)" fg:x="29262" fg:w="25"/><text x="15.9288%" y="671.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (25 samples, 0.01%)</title><rect x="15.6788%" y="645" width="0.0134%" height="15" fill="rgb(213,79,30)" fg:x="29262" fg:w="25"/><text x="15.9288%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (25 samples, 0.01%)</title><rect x="15.6788%" y="629" width="0.0134%" height="15" fill="rgb(246,177,23)" fg:x="29262" fg:w="25"/><text x="15.9288%" y="639.50"></text></g><g><title>nom::combinator::map::{{closure}} (24 samples, 0.01%)</title><rect x="15.6794%" y="613" width="0.0129%" height="15" fill="rgb(230,62,27)" fg:x="29263" fg:w="24"/><text x="15.9294%" y="623.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_utf8_string::{{closure}}::{{closure}} (24 samples, 0.01%)</title><rect x="15.6794%" y="597" width="0.0129%" height="15" fill="rgb(216,154,8)" fg:x="29263" fg:w="24"/><text x="15.9294%" y="607.50"></text></g><g><title>__hrtimer_run_queues (35 samples, 0.02%)</title><rect x="34.5162%" y="597" width="0.0188%" height="15" fill="rgb(244,35,45)" fg:x="64419" fg:w="35"/><text x="34.7662%" y="607.50"></text></g><g><title>tick_sched_timer (33 samples, 0.02%)</title><rect x="34.5173%" y="581" width="0.0177%" height="15" fill="rgb(251,115,12)" fg:x="64421" fg:w="33"/><text x="34.7673%" y="591.50"></text></g><g><title>__sysvec_apic_timer_interrupt (37 samples, 0.02%)</title><rect x="34.5157%" y="629" width="0.0198%" height="15" fill="rgb(240,54,50)" fg:x="64418" fg:w="37"/><text x="34.7657%" y="639.50"></text></g><g><title>hrtimer_interrupt (36 samples, 0.02%)</title><rect x="34.5162%" y="613" width="0.0193%" height="15" fill="rgb(233,84,52)" fg:x="64419" fg:w="36"/><text x="34.7662%" y="623.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (44 samples, 0.02%)</title><rect x="34.5151%" y="661" width="0.0236%" height="15" fill="rgb(207,117,47)" fg:x="64417" fg:w="44"/><text x="34.7651%" y="671.50"></text></g><g><title>sysvec_apic_timer_interrupt (44 samples, 0.02%)</title><rect x="34.5151%" y="645" width="0.0236%" height="15" fill="rgb(249,43,39)" fg:x="64417" fg:w="44"/><text x="34.7651%" y="655.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}}::{{closure}} (23,956 samples, 12.84%)</title><rect x="21.7040%" y="677" width="12.8358%" height="15" fill="rgb(209,38,44)" fg:x="40507" fg:w="23956"/><text x="21.9540%" y="687.50">hprof_slurp::parser..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (35,177 samples, 18.85%)</title><rect x="15.6922%" y="693" width="18.8481%" height="15" fill="rgb(236,212,23)" fg:x="29287" fg:w="35177"/><text x="15.9422%" y="703.50">core::result::Result&lt;T,E&gt;::map</text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u8 (1,722 samples, 0.92%)</title><rect x="34.9320%" y="629" width="0.9227%" height="15" fill="rgb(242,79,21)" fg:x="65195" fg:w="1722"/><text x="35.1820%" y="639.50"></text></g><g><title>nom::number::streaming::be_u8 (1,722 samples, 0.92%)</title><rect x="34.9320%" y="613" width="0.9227%" height="15" fill="rgb(211,96,35)" fg:x="65195" fg:w="1722"/><text x="35.1820%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,721 samples, 0.92%)</title><rect x="34.9325%" y="597" width="0.9221%" height="15" fill="rgb(253,215,40)" fg:x="65196" fg:w="1721"/><text x="35.1825%" y="607.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1,721 samples, 0.92%)</title><rect x="34.9325%" y="581" width="0.9221%" height="15" fill="rgb(211,81,21)" fg:x="65196" fg:w="1721"/><text x="35.1825%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (605 samples, 0.32%)</title><rect x="42.4381%" y="565" width="0.3242%" height="15" fill="rgb(208,190,38)" fg:x="79204" fg:w="605"/><text x="42.6881%" y="575.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (605 samples, 0.32%)</title><rect x="42.4381%" y="549" width="0.3242%" height="15" fill="rgb(235,213,38)" fg:x="79204" fg:w="605"/><text x="42.6881%" y="559.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (605 samples, 0.32%)</title><rect x="42.4381%" y="533" width="0.3242%" height="15" fill="rgb(237,122,38)" fg:x="79204" fg:w="605"/><text x="42.6881%" y="543.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,774 samples, 0.95%)</title><rect x="41.8134%" y="581" width="0.9505%" height="15" fill="rgb(244,218,35)" fg:x="78038" fg:w="1774"/><text x="42.0634%" y="591.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (1,594 samples, 0.85%)</title><rect x="44.5771%" y="517" width="0.8541%" height="15" fill="rgb(240,68,47)" fg:x="83196" fg:w="1594"/><text x="44.8271%" y="527.50"></text></g><g><title>nom::number::streaming::be_u32 (1,594 samples, 0.85%)</title><rect x="44.5771%" y="501" width="0.8541%" height="15" fill="rgb(210,16,53)" fg:x="83196" fg:w="1594"/><text x="44.8271%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5,477 samples, 2.93%)</title><rect x="44.5771%" y="549" width="2.9346%" height="15" fill="rgb(235,124,12)" fg:x="83196" fg:w="5477"/><text x="44.8271%" y="559.50">&lt;F..</text></g><g><title>core::ops::function::FnMut::call_mut (5,477 samples, 2.93%)</title><rect x="44.5771%" y="533" width="2.9346%" height="15" fill="rgb(224,169,11)" fg:x="83196" fg:w="5477"/><text x="44.8271%" y="543.50">co..</text></g><g><title>hprof_slurp::parser::record_parser::parse_id (3,883 samples, 2.08%)</title><rect x="45.4312%" y="517" width="2.0805%" height="15" fill="rgb(250,166,2)" fg:x="84790" fg:w="3883"/><text x="45.6812%" y="527.50">h..</text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (3,883 samples, 2.08%)</title><rect x="45.4312%" y="501" width="2.0805%" height="15" fill="rgb(242,216,29)" fg:x="84790" fg:w="3883"/><text x="45.6812%" y="511.50">h..</text></g><g><title>nom::number::streaming::be_u64 (3,883 samples, 2.08%)</title><rect x="45.4312%" y="485" width="2.0805%" height="15" fill="rgb(230,116,27)" fg:x="84790" fg:w="3883"/><text x="45.6812%" y="495.50">n..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (8,867 samples, 4.75%)</title><rect x="42.7639%" y="565" width="4.7510%" height="15" fill="rgb(228,99,48)" fg:x="79812" fg:w="8867"/><text x="43.0139%" y="575.50">&lt;(FnA,..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (10,642 samples, 5.70%)</title><rect x="41.8134%" y="597" width="5.7021%" height="15" fill="rgb(253,11,6)" fg:x="78038" fg:w="10642"/><text x="42.0634%" y="607.50">&lt;F as n..</text></g><g><title>nom::sequence::tuple::{{closure}} (8,868 samples, 4.75%)</title><rect x="42.7639%" y="581" width="4.7515%" height="15" fill="rgb(247,143,39)" fg:x="79812" fg:w="8868"/><text x="43.0139%" y="591.50">nom::s..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (615 samples, 0.33%)</title><rect x="47.5155%" y="597" width="0.3295%" height="15" fill="rgb(236,97,10)" fg:x="88680" fg:w="615"/><text x="47.7655%" y="607.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (20,479 samples, 10.97%)</title><rect x="36.8797%" y="613" width="10.9728%" height="15" fill="rgb(233,208,19)" fg:x="68830" fg:w="20479"/><text x="37.1297%" y="623.50">nom::combinator:..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (22,388 samples, 12.00%)</title><rect x="35.8573%" y="629" width="11.9957%" height="15" fill="rgb(216,164,2)" fg:x="66922" fg:w="22388"/><text x="36.1073%" y="639.50">hprof_slurp::parse..</text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (124 samples, 0.07%)</title><rect x="48.4472%" y="453" width="0.0664%" height="15" fill="rgb(220,129,5)" fg:x="90419" fg:w="124"/><text x="48.6972%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (124 samples, 0.07%)</title><rect x="48.4472%" y="437" width="0.0664%" height="15" fill="rgb(242,17,10)" fg:x="90419" fg:w="124"/><text x="48.6972%" y="447.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (124 samples, 0.07%)</title><rect x="48.4472%" y="421" width="0.0664%" height="15" fill="rgb(242,107,0)" fg:x="90419" fg:w="124"/><text x="48.6972%" y="431.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (124 samples, 0.07%)</title><rect x="48.4472%" y="405" width="0.0664%" height="15" fill="rgb(251,28,31)" fg:x="90419" fg:w="124"/><text x="48.6972%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (124 samples, 0.07%)</title><rect x="48.4472%" y="389" width="0.0664%" height="15" fill="rgb(233,223,10)" fg:x="90419" fg:w="124"/><text x="48.6972%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (353 samples, 0.19%)</title><rect x="48.5137%" y="453" width="0.1891%" height="15" fill="rgb(215,21,27)" fg:x="90543" fg:w="353"/><text x="48.7637%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (353 samples, 0.19%)</title><rect x="48.5137%" y="437" width="0.1891%" height="15" fill="rgb(232,23,21)" fg:x="90543" fg:w="353"/><text x="48.7637%" y="447.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (353 samples, 0.19%)</title><rect x="48.5137%" y="421" width="0.1891%" height="15" fill="rgb(244,5,23)" fg:x="90543" fg:w="353"/><text x="48.7637%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,381 samples, 0.74%)</title><rect x="47.9634%" y="533" width="0.7400%" height="15" fill="rgb(226,81,46)" fg:x="89516" fg:w="1381"/><text x="48.2134%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,381 samples, 0.74%)</title><rect x="47.9634%" y="517" width="0.7400%" height="15" fill="rgb(247,70,30)" fg:x="89516" fg:w="1381"/><text x="48.2134%" y="527.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (1,381 samples, 0.74%)</title><rect x="47.9634%" y="501" width="0.7400%" height="15" fill="rgb(212,68,19)" fg:x="89516" fg:w="1381"/><text x="48.2134%" y="511.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (1,244 samples, 0.67%)</title><rect x="48.0368%" y="485" width="0.6665%" height="15" fill="rgb(240,187,13)" fg:x="89653" fg:w="1244"/><text x="48.2868%" y="495.50"></text></g><g><title>nom::number::streaming::be_u64 (1,221 samples, 0.65%)</title><rect x="48.0491%" y="469" width="0.6542%" height="15" fill="rgb(223,113,26)" fg:x="89676" fg:w="1221"/><text x="48.2991%" y="479.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (27 samples, 0.01%)</title><rect x="49.0168%" y="357" width="0.0145%" height="15" fill="rgb(206,192,2)" fg:x="91482" fg:w="27"/><text x="49.2668%" y="367.50"></text></g><g><title>charge_memcg (39 samples, 0.02%)</title><rect x="49.0141%" y="373" width="0.0209%" height="15" fill="rgb(241,108,4)" fg:x="91477" fg:w="39"/><text x="49.2641%" y="383.50"></text></g><g><title>__mem_cgroup_charge (47 samples, 0.03%)</title><rect x="49.0130%" y="389" width="0.0252%" height="15" fill="rgb(247,173,49)" fg:x="91475" fg:w="47"/><text x="49.2630%" y="399.50"></text></g><g><title>clear_page_erms (88 samples, 0.05%)</title><rect x="49.0543%" y="341" width="0.0472%" height="15" fill="rgb(224,114,35)" fg:x="91552" fg:w="88"/><text x="49.3043%" y="351.50"></text></g><g><title>__alloc_pages (153 samples, 0.08%)</title><rect x="49.0420%" y="373" width="0.0820%" height="15" fill="rgb(245,159,27)" fg:x="91529" fg:w="153"/><text x="49.2920%" y="383.50"></text></g><g><title>get_page_from_freelist (144 samples, 0.08%)</title><rect x="49.0468%" y="357" width="0.0772%" height="15" fill="rgb(245,172,44)" fg:x="91538" fg:w="144"/><text x="49.2968%" y="367.50"></text></g><g><title>rmqueue (38 samples, 0.02%)</title><rect x="49.1036%" y="341" width="0.0204%" height="15" fill="rgb(236,23,11)" fg:x="91644" fg:w="38"/><text x="49.3536%" y="351.50"></text></g><g><title>rmqueue_bulk (28 samples, 0.02%)</title><rect x="49.1090%" y="325" width="0.0150%" height="15" fill="rgb(205,117,38)" fg:x="91654" fg:w="28"/><text x="49.3590%" y="335.50"></text></g><g><title>alloc_pages_vma (162 samples, 0.09%)</title><rect x="49.0393%" y="389" width="0.0868%" height="15" fill="rgb(237,72,25)" fg:x="91524" fg:w="162"/><text x="49.2893%" y="399.50"></text></g><g><title>__pagevec_lru_add_fn (32 samples, 0.02%)</title><rect x="49.1357%" y="341" width="0.0171%" height="15" fill="rgb(244,70,9)" fg:x="91704" fg:w="32"/><text x="49.3857%" y="351.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (52 samples, 0.03%)</title><rect x="49.1282%" y="389" width="0.0279%" height="15" fill="rgb(217,125,39)" fg:x="91690" fg:w="52"/><text x="49.3782%" y="399.50"></text></g><g><title>lru_cache_add (51 samples, 0.03%)</title><rect x="49.1288%" y="373" width="0.0273%" height="15" fill="rgb(235,36,10)" fg:x="91691" fg:w="51"/><text x="49.3788%" y="383.50"></text></g><g><title>__pagevec_lru_add (44 samples, 0.02%)</title><rect x="49.1325%" y="357" width="0.0236%" height="15" fill="rgb(251,123,47)" fg:x="91698" fg:w="44"/><text x="49.3825%" y="367.50"></text></g><g><title>do_anonymous_page (296 samples, 0.16%)</title><rect x="49.0066%" y="405" width="0.1586%" height="15" fill="rgb(221,13,13)" fg:x="91463" fg:w="296"/><text x="49.2566%" y="415.50"></text></g><g><title>handle_pte_fault (311 samples, 0.17%)</title><rect x="49.0018%" y="421" width="0.1666%" height="15" fill="rgb(238,131,9)" fg:x="91454" fg:w="311"/><text x="49.2518%" y="431.50"></text></g><g><title>__handle_mm_fault (330 samples, 0.18%)</title><rect x="48.9921%" y="437" width="0.1768%" height="15" fill="rgb(211,50,8)" fg:x="91436" fg:w="330"/><text x="49.2421%" y="447.50"></text></g><g><title>handle_mm_fault (351 samples, 0.19%)</title><rect x="48.9857%" y="453" width="0.1881%" height="15" fill="rgb(245,182,24)" fg:x="91424" fg:w="351"/><text x="49.2357%" y="463.50"></text></g><g><title>do_user_addr_fault (372 samples, 0.20%)</title><rect x="48.9766%" y="469" width="0.1993%" height="15" fill="rgb(242,14,37)" fg:x="91407" fg:w="372"/><text x="49.2266%" y="479.50"></text></g><g><title>exc_page_fault (387 samples, 0.21%)</title><rect x="48.9729%" y="485" width="0.2074%" height="15" fill="rgb(246,228,12)" fg:x="91400" fg:w="387"/><text x="49.2229%" y="495.50"></text></g><g><title>asm_exc_page_fault (393 samples, 0.21%)</title><rect x="48.9702%" y="501" width="0.2106%" height="15" fill="rgb(213,55,15)" fg:x="91395" fg:w="393"/><text x="49.2202%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (952 samples, 0.51%)</title><rect x="48.7033%" y="533" width="0.5101%" height="15" fill="rgb(209,9,3)" fg:x="90897" fg:w="952"/><text x="48.9533%" y="543.50"></text></g><g><title>core::ptr::write (777 samples, 0.42%)</title><rect x="48.7971%" y="517" width="0.4163%" height="15" fill="rgb(230,59,30)" fg:x="91072" fg:w="777"/><text x="49.0471%" y="527.50"></text></g><g><title>sync_regs (55 samples, 0.03%)</title><rect x="49.1840%" y="501" width="0.0295%" height="15" fill="rgb(209,121,21)" fg:x="91794" fg:w="55"/><text x="49.4340%" y="511.50"></text></g><g><title>malloc_consolidate (318 samples, 0.17%)</title><rect x="49.7150%" y="389" width="0.1704%" height="15" fill="rgb(220,109,13)" fg:x="92785" fg:w="318"/><text x="49.9650%" y="399.50"></text></g><g><title>unlink_chunk (74 samples, 0.04%)</title><rect x="49.8457%" y="373" width="0.0396%" height="15" fill="rgb(232,18,1)" fg:x="93029" fg:w="74"/><text x="50.0957%" y="383.50"></text></g><g><title>_int_malloc (1,120 samples, 0.60%)</title><rect x="49.3345%" y="405" width="0.6001%" height="15" fill="rgb(215,41,42)" fg:x="92075" fg:w="1120"/><text x="49.5845%" y="415.50"></text></g><g><title>unlink_chunk (83 samples, 0.04%)</title><rect x="49.8902%" y="389" width="0.0445%" height="15" fill="rgb(224,123,36)" fg:x="93112" fg:w="83"/><text x="50.1402%" y="399.50"></text></g><g><title>__GI___libc_malloc (1,435 samples, 0.77%)</title><rect x="49.2177%" y="421" width="0.7689%" height="15" fill="rgb(240,125,3)" fg:x="91857" fg:w="1435"/><text x="49.4677%" y="431.50"></text></g><g><title>tcache_get (87 samples, 0.05%)</title><rect x="49.9400%" y="405" width="0.0466%" height="15" fill="rgb(205,98,50)" fg:x="93205" fg:w="87"/><text x="50.1900%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,456 samples, 0.78%)</title><rect x="49.2172%" y="469" width="0.7801%" height="15" fill="rgb(205,185,37)" fg:x="91856" fg:w="1456"/><text x="49.4672%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,456 samples, 0.78%)</title><rect x="49.2172%" y="453" width="0.7801%" height="15" fill="rgb(238,207,15)" fg:x="91856" fg:w="1456"/><text x="49.4672%" y="463.50"></text></g><g><title>alloc::alloc::alloc (1,455 samples, 0.78%)</title><rect x="49.2177%" y="437" width="0.7796%" height="15" fill="rgb(213,199,42)" fg:x="91857" fg:w="1455"/><text x="49.4677%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,470 samples, 0.79%)</title><rect x="49.2134%" y="533" width="0.7876%" height="15" fill="rgb(235,201,11)" fg:x="91849" fg:w="1470"/><text x="49.4634%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,470 samples, 0.79%)</title><rect x="49.2134%" y="517" width="0.7876%" height="15" fill="rgb(207,46,11)" fg:x="91849" fg:w="1470"/><text x="49.4634%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,466 samples, 0.79%)</title><rect x="49.2156%" y="501" width="0.7855%" height="15" fill="rgb(241,35,35)" fg:x="91853" fg:w="1466"/><text x="49.4656%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,466 samples, 0.79%)</title><rect x="49.2156%" y="485" width="0.7855%" height="15" fill="rgb(243,32,47)" fg:x="91853" fg:w="1466"/><text x="49.4656%" y="495.50"></text></g><g><title>free_unref_page_list (36 samples, 0.02%)</title><rect x="50.0348%" y="197" width="0.0193%" height="15" fill="rgb(247,202,23)" fg:x="93382" fg:w="36"/><text x="50.2848%" y="207.50"></text></g><g><title>free_unref_page_commit.constprop.0 (32 samples, 0.02%)</title><rect x="50.0370%" y="181" width="0.0171%" height="15" fill="rgb(219,102,11)" fg:x="93386" fg:w="32"/><text x="50.2870%" y="191.50"></text></g><g><title>free_pcppages_bulk (31 samples, 0.02%)</title><rect x="50.0375%" y="165" width="0.0166%" height="15" fill="rgb(243,110,44)" fg:x="93387" fg:w="31"/><text x="50.2875%" y="175.50"></text></g><g><title>__free_one_page (19 samples, 0.01%)</title><rect x="50.0439%" y="149" width="0.0102%" height="15" fill="rgb(222,74,54)" fg:x="93399" fg:w="19"/><text x="50.2939%" y="159.50"></text></g><g><title>free_pages_and_swap_cache (58 samples, 0.03%)</title><rect x="50.0241%" y="229" width="0.0311%" height="15" fill="rgb(216,99,12)" fg:x="93362" fg:w="58"/><text x="50.2741%" y="239.50"></text></g><g><title>release_pages (57 samples, 0.03%)</title><rect x="50.0246%" y="213" width="0.0305%" height="15" fill="rgb(226,22,26)" fg:x="93363" fg:w="57"/><text x="50.2746%" y="223.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,093 samples, 2.19%)</title><rect x="47.8632%" y="565" width="2.1931%" height="15" fill="rgb(217,163,10)" fg:x="89329" fg:w="4093"/><text x="48.1132%" y="575.50">&lt;..</text></g><g><title>nom::multi::count::{{closure}} (4,087 samples, 2.19%)</title><rect x="47.8664%" y="549" width="2.1898%" height="15" fill="rgb(213,25,53)" fg:x="89335" fg:w="4087"/><text x="48.1164%" y="559.50">n..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (100 samples, 0.05%)</title><rect x="50.0027%" y="533" width="0.0536%" height="15" fill="rgb(252,105,26)" fg:x="93322" fg:w="100"/><text x="50.2527%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (100 samples, 0.05%)</title><rect x="50.0027%" y="517" width="0.0536%" height="15" fill="rgb(220,39,43)" fg:x="93322" fg:w="100"/><text x="50.2527%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (100 samples, 0.05%)</title><rect x="50.0027%" y="501" width="0.0536%" height="15" fill="rgb(229,68,48)" fg:x="93322" fg:w="100"/><text x="50.2527%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (100 samples, 0.05%)</title><rect x="50.0027%" y="485" width="0.0536%" height="15" fill="rgb(252,8,32)" fg:x="93322" fg:w="100"/><text x="50.2527%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (100 samples, 0.05%)</title><rect x="50.0027%" y="469" width="0.0536%" height="15" fill="rgb(223,20,43)" fg:x="93322" fg:w="100"/><text x="50.2527%" y="479.50"></text></g><g><title>__GI___libc_free (100 samples, 0.05%)</title><rect x="50.0027%" y="453" width="0.0536%" height="15" fill="rgb(229,81,49)" fg:x="93322" fg:w="100"/><text x="50.2527%" y="463.50"></text></g><g><title>__GI___munmap (100 samples, 0.05%)</title><rect x="50.0027%" y="437" width="0.0536%" height="15" fill="rgb(236,28,36)" fg:x="93322" fg:w="100"/><text x="50.2527%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (100 samples, 0.05%)</title><rect x="50.0027%" y="421" width="0.0536%" height="15" fill="rgb(249,185,26)" fg:x="93322" fg:w="100"/><text x="50.2527%" y="431.50"></text></g><g><title>do_syscall_64 (100 samples, 0.05%)</title><rect x="50.0027%" y="405" width="0.0536%" height="15" fill="rgb(249,174,33)" fg:x="93322" fg:w="100"/><text x="50.2527%" y="415.50"></text></g><g><title>__x64_sys_munmap (100 samples, 0.05%)</title><rect x="50.0027%" y="389" width="0.0536%" height="15" fill="rgb(233,201,37)" fg:x="93322" fg:w="100"/><text x="50.2527%" y="399.50"></text></g><g><title>__vm_munmap (100 samples, 0.05%)</title><rect x="50.0027%" y="373" width="0.0536%" height="15" fill="rgb(221,78,26)" fg:x="93322" fg:w="100"/><text x="50.2527%" y="383.50"></text></g><g><title>__do_munmap (100 samples, 0.05%)</title><rect x="50.0027%" y="357" width="0.0536%" height="15" fill="rgb(250,127,30)" fg:x="93322" fg:w="100"/><text x="50.2527%" y="367.50"></text></g><g><title>unmap_region (100 samples, 0.05%)</title><rect x="50.0027%" y="341" width="0.0536%" height="15" fill="rgb(230,49,44)" fg:x="93322" fg:w="100"/><text x="50.2527%" y="351.50"></text></g><g><title>unmap_vmas (94 samples, 0.05%)</title><rect x="50.0059%" y="325" width="0.0504%" height="15" fill="rgb(229,67,23)" fg:x="93328" fg:w="94"/><text x="50.2559%" y="335.50"></text></g><g><title>unmap_single_vma (94 samples, 0.05%)</title><rect x="50.0059%" y="309" width="0.0504%" height="15" fill="rgb(249,83,47)" fg:x="93328" fg:w="94"/><text x="50.2559%" y="319.50"></text></g><g><title>unmap_page_range (94 samples, 0.05%)</title><rect x="50.0059%" y="293" width="0.0504%" height="15" fill="rgb(215,43,3)" fg:x="93328" fg:w="94"/><text x="50.2559%" y="303.50"></text></g><g><title>zap_pmd_range.isra.0 (94 samples, 0.05%)</title><rect x="50.0059%" y="277" width="0.0504%" height="15" fill="rgb(238,154,13)" fg:x="93328" fg:w="94"/><text x="50.2559%" y="287.50"></text></g><g><title>zap_pte_range (94 samples, 0.05%)</title><rect x="50.0059%" y="261" width="0.0504%" height="15" fill="rgb(219,56,2)" fg:x="93328" fg:w="94"/><text x="50.2559%" y="271.50"></text></g><g><title>tlb_flush_mmu (60 samples, 0.03%)</title><rect x="50.0241%" y="245" width="0.0321%" height="15" fill="rgb(233,0,4)" fg:x="93362" fg:w="60"/><text x="50.2741%" y="255.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (82 samples, 0.04%)</title><rect x="50.0563%" y="565" width="0.0439%" height="15" fill="rgb(235,30,7)" fg:x="93422" fg:w="82"/><text x="50.3063%" y="575.50"></text></g><g><title>nom::combinator::map::{{closure}} (4,187 samples, 2.24%)</title><rect x="47.8573%" y="581" width="2.2434%" height="15" fill="rgb(250,79,13)" fg:x="89318" fg:w="4187"/><text x="48.1073%" y="591.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,226 samples, 2.26%)</title><rect x="47.8573%" y="597" width="2.2643%" height="15" fill="rgb(211,146,34)" fg:x="89318" fg:w="4226"/><text x="48.1073%" y="607.50">&lt;..</text></g><g><title>nom::sequence::tuple::{{closure}} (39 samples, 0.02%)</title><rect x="50.1007%" y="581" width="0.0209%" height="15" fill="rgb(228,22,38)" fg:x="93505" fg:w="39"/><text x="50.3507%" y="591.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (39 samples, 0.02%)</title><rect x="50.1007%" y="565" width="0.0209%" height="15" fill="rgb(235,168,5)" fg:x="93505" fg:w="39"/><text x="50.3507%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (32 samples, 0.02%)</title><rect x="50.1045%" y="549" width="0.0171%" height="15" fill="rgb(221,155,16)" fg:x="93512" fg:w="32"/><text x="50.3545%" y="559.50"></text></g><g><title>core::ops::function::FnMut::call_mut (32 samples, 0.02%)</title><rect x="50.1045%" y="533" width="0.0171%" height="15" fill="rgb(215,215,53)" fg:x="93512" fg:w="32"/><text x="50.3545%" y="543.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_object_array_dump (4,246 samples, 2.28%)</title><rect x="47.8530%" y="629" width="2.2750%" height="15" fill="rgb(223,4,10)" fg:x="89310" fg:w="4246"/><text x="48.1030%" y="639.50">h..</text></g><g><title>nom::combinator::flat_map::{{closure}} (4,238 samples, 2.27%)</title><rect x="47.8573%" y="613" width="2.2708%" height="15" fill="rgb(234,103,6)" fg:x="89318" fg:w="4238"/><text x="48.1073%" y="623.50">n..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (115 samples, 0.06%)</title><rect x="50.1720%" y="581" width="0.0616%" height="15" fill="rgb(227,97,0)" fg:x="93638" fg:w="115"/><text x="50.4220%" y="591.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_i32 (20 samples, 0.01%)</title><rect x="50.2979%" y="501" width="0.0107%" height="15" fill="rgb(234,150,53)" fg:x="93873" fg:w="20"/><text x="50.5479%" y="511.50"></text></g><g><title>nom::number::streaming::be_i32 (20 samples, 0.01%)</title><rect x="50.2979%" y="485" width="0.0107%" height="15" fill="rgb(228,201,54)" fg:x="93873" fg:w="20"/><text x="50.5479%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (20 samples, 0.01%)</title><rect x="50.2979%" y="469" width="0.0107%" height="15" fill="rgb(222,22,37)" fg:x="93873" fg:w="20"/><text x="50.5479%" y="479.50"></text></g><g><title>nom::combinator::map::{{closure}} (20 samples, 0.01%)</title><rect x="50.2979%" y="453" width="0.0107%" height="15" fill="rgb(237,53,32)" fg:x="93873" fg:w="20"/><text x="50.5479%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (20 samples, 0.01%)</title><rect x="50.2979%" y="437" width="0.0107%" height="15" fill="rgb(233,25,53)" fg:x="93873" fg:w="20"/><text x="50.5479%" y="447.50"></text></g><g><title>nom::number::streaming::be_i32::{{closure}} (20 samples, 0.01%)</title><rect x="50.2979%" y="421" width="0.0107%" height="15" fill="rgb(210,40,34)" fg:x="93873" fg:w="20"/><text x="50.5479%" y="431.50"></text></g><g><title>nom::number::streaming::be_u32 (20 samples, 0.01%)</title><rect x="50.2979%" y="405" width="0.0107%" height="15" fill="rgb(241,220,44)" fg:x="93873" fg:w="20"/><text x="50.5479%" y="415.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_i8 (281 samples, 0.15%)</title><rect x="50.3086%" y="501" width="0.1506%" height="15" fill="rgb(235,28,35)" fg:x="93893" fg:w="281"/><text x="50.5586%" y="511.50"></text></g><g><title>nom::number::streaming::be_i8 (281 samples, 0.15%)</title><rect x="50.3086%" y="485" width="0.1506%" height="15" fill="rgb(210,56,17)" fg:x="93893" fg:w="281"/><text x="50.5586%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (281 samples, 0.15%)</title><rect x="50.3086%" y="469" width="0.1506%" height="15" fill="rgb(224,130,29)" fg:x="93893" fg:w="281"/><text x="50.5586%" y="479.50"></text></g><g><title>nom::combinator::map::{{closure}} (281 samples, 0.15%)</title><rect x="50.3086%" y="453" width="0.1506%" height="15" fill="rgb(235,212,8)" fg:x="93893" fg:w="281"/><text x="50.5586%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (281 samples, 0.15%)</title><rect x="50.3086%" y="437" width="0.1506%" height="15" fill="rgb(223,33,50)" fg:x="93893" fg:w="281"/><text x="50.5586%" y="447.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (281 samples, 0.15%)</title><rect x="50.3086%" y="421" width="0.1506%" height="15" fill="rgb(219,149,13)" fg:x="93893" fg:w="281"/><text x="50.5586%" y="431.50"></text></g><g><title>nom::number::streaming::be_u8 (281 samples, 0.15%)</title><rect x="50.3086%" y="405" width="0.1506%" height="15" fill="rgb(250,156,29)" fg:x="93893" fg:w="281"/><text x="50.5586%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (101 samples, 0.05%)</title><rect x="50.4051%" y="389" width="0.0541%" height="15" fill="rgb(216,193,19)" fg:x="94073" fg:w="101"/><text x="50.6551%" y="399.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (101 samples, 0.05%)</title><rect x="50.4051%" y="373" width="0.0541%" height="15" fill="rgb(216,135,14)" fg:x="94073" fg:w="101"/><text x="50.6551%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (302 samples, 0.16%)</title><rect x="50.2979%" y="533" width="0.1618%" height="15" fill="rgb(241,47,5)" fg:x="93873" fg:w="302"/><text x="50.5479%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (302 samples, 0.16%)</title><rect x="50.2979%" y="517" width="0.1618%" height="15" fill="rgb(233,42,35)" fg:x="93873" fg:w="302"/><text x="50.5479%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (123 samples, 0.07%)</title><rect x="50.8080%" y="517" width="0.0659%" height="15" fill="rgb(231,13,6)" fg:x="94825" fg:w="123"/><text x="51.0580%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,250 samples, 0.67%)</title><rect x="50.4597%" y="533" width="0.6698%" height="15" fill="rgb(207,181,40)" fg:x="94175" fg:w="1250"/><text x="50.7097%" y="543.50"></text></g><g><title>core::ptr::write (477 samples, 0.26%)</title><rect x="50.8739%" y="517" width="0.2556%" height="15" fill="rgb(254,173,49)" fg:x="94948" fg:w="477"/><text x="51.1239%" y="527.50"></text></g><g><title>__GI___lll_lock_wait_private (22 samples, 0.01%)</title><rect x="51.4638%" y="405" width="0.0118%" height="15" fill="rgb(221,1,38)" fg:x="96049" fg:w="22"/><text x="51.7138%" y="415.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (29 samples, 0.02%)</title><rect x="51.4762%" y="389" width="0.0155%" height="15" fill="rgb(206,124,46)" fg:x="96072" fg:w="29"/><text x="51.7262%" y="399.50"></text></g><g><title>do_syscall_64 (28 samples, 0.02%)</title><rect x="51.4767%" y="373" width="0.0150%" height="15" fill="rgb(249,21,11)" fg:x="96073" fg:w="28"/><text x="51.7267%" y="383.50"></text></g><g><title>__x64_sys_futex (28 samples, 0.02%)</title><rect x="51.4767%" y="357" width="0.0150%" height="15" fill="rgb(222,201,40)" fg:x="96073" fg:w="28"/><text x="51.7267%" y="367.50"></text></g><g><title>do_futex (27 samples, 0.01%)</title><rect x="51.4772%" y="341" width="0.0145%" height="15" fill="rgb(235,61,29)" fg:x="96074" fg:w="27"/><text x="51.7272%" y="351.50"></text></g><g><title>futex_wake (25 samples, 0.01%)</title><rect x="51.4783%" y="325" width="0.0134%" height="15" fill="rgb(219,207,3)" fg:x="96076" fg:w="25"/><text x="51.7283%" y="335.50"></text></g><g><title>__GI___lll_lock_wake_private (33 samples, 0.02%)</title><rect x="51.4756%" y="405" width="0.0177%" height="15" fill="rgb(222,56,46)" fg:x="96071" fg:w="33"/><text x="51.7256%" y="415.50"></text></g><g><title>malloc_consolidate (239 samples, 0.13%)</title><rect x="52.2836%" y="389" width="0.1281%" height="15" fill="rgb(239,76,54)" fg:x="97579" fg:w="239"/><text x="52.5336%" y="399.50"></text></g><g><title>unlink_chunk (60 samples, 0.03%)</title><rect x="52.3795%" y="373" width="0.0321%" height="15" fill="rgb(231,124,27)" fg:x="97758" fg:w="60"/><text x="52.6295%" y="383.50"></text></g><g><title>tcache_put (32 samples, 0.02%)</title><rect x="52.4176%" y="389" width="0.0171%" height="15" fill="rgb(249,195,6)" fg:x="97829" fg:w="32"/><text x="52.6676%" y="399.50"></text></g><g><title>_int_malloc (1,878 samples, 1.01%)</title><rect x="51.4933%" y="405" width="1.0062%" height="15" fill="rgb(237,174,47)" fg:x="96104" fg:w="1878"/><text x="51.7433%" y="415.50"></text></g><g><title>unlink_chunk (121 samples, 0.06%)</title><rect x="52.4347%" y="389" width="0.0648%" height="15" fill="rgb(206,201,31)" fg:x="97861" fg:w="121"/><text x="52.6847%" y="399.50"></text></g><g><title>arena_for_chunk (28 samples, 0.02%)</title><rect x="52.4995%" y="405" width="0.0150%" height="15" fill="rgb(231,57,52)" fg:x="97982" fg:w="28"/><text x="52.7495%" y="415.50"></text></g><g><title>__GI___libc_malloc (2,677 samples, 1.43%)</title><rect x="51.1375%" y="421" width="1.4344%" height="15" fill="rgb(248,177,22)" fg:x="95440" fg:w="2677"/><text x="51.3875%" y="431.50"></text></g><g><title>tcache_get (93 samples, 0.05%)</title><rect x="52.5220%" y="405" width="0.0498%" height="15" fill="rgb(215,211,37)" fg:x="98024" fg:w="93"/><text x="52.7720%" y="415.50"></text></g><g><title>__rdl_alloc (25 samples, 0.01%)</title><rect x="52.5719%" y="421" width="0.0134%" height="15" fill="rgb(241,128,51)" fg:x="98117" fg:w="25"/><text x="52.8219%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (25 samples, 0.01%)</title><rect x="52.5719%" y="405" width="0.0134%" height="15" fill="rgb(227,165,31)" fg:x="98117" fg:w="25"/><text x="52.8219%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,724 samples, 1.46%)</title><rect x="51.1359%" y="469" width="1.4595%" height="15" fill="rgb(228,167,24)" fg:x="95437" fg:w="2724"/><text x="51.3859%" y="479.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,724 samples, 1.46%)</title><rect x="51.1359%" y="453" width="1.4595%" height="15" fill="rgb(228,143,12)" fg:x="95437" fg:w="2724"/><text x="51.3859%" y="463.50"></text></g><g><title>alloc::alloc::alloc (2,724 samples, 1.46%)</title><rect x="51.1359%" y="437" width="1.4595%" height="15" fill="rgb(249,149,8)" fg:x="95437" fg:w="2724"/><text x="51.3859%" y="447.50"></text></g><g><title>__rust_alloc (19 samples, 0.01%)</title><rect x="52.5853%" y="421" width="0.0102%" height="15" fill="rgb(243,35,44)" fg:x="98142" fg:w="19"/><text x="52.8353%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,738 samples, 1.47%)</title><rect x="51.1295%" y="533" width="1.4670%" height="15" fill="rgb(246,89,9)" fg:x="95425" fg:w="2738"/><text x="51.3795%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,738 samples, 1.47%)</title><rect x="51.1295%" y="517" width="1.4670%" height="15" fill="rgb(233,213,13)" fg:x="95425" fg:w="2738"/><text x="51.3795%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,726 samples, 1.46%)</title><rect x="51.1359%" y="501" width="1.4606%" height="15" fill="rgb(233,141,41)" fg:x="95437" fg:w="2726"/><text x="51.3859%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,726 samples, 1.46%)</title><rect x="51.1359%" y="485" width="1.4606%" height="15" fill="rgb(239,167,4)" fg:x="95437" fg:w="2726"/><text x="51.3859%" y="495.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (32 samples, 0.02%)</title><rect x="52.6003%" y="501" width="0.0171%" height="15" fill="rgb(209,217,16)" fg:x="98170" fg:w="32"/><text x="52.8503%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (32 samples, 0.02%)</title><rect x="52.6003%" y="485" width="0.0171%" height="15" fill="rgb(219,88,35)" fg:x="98170" fg:w="32"/><text x="52.8503%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,578 samples, 2.45%)</title><rect x="50.2336%" y="565" width="2.4529%" height="15" fill="rgb(220,193,23)" fg:x="93753" fg:w="4578"/><text x="50.4836%" y="575.50">&lt;F..</text></g><g><title>nom::multi::count::{{closure}} (4,565 samples, 2.45%)</title><rect x="50.2406%" y="549" width="2.4460%" height="15" fill="rgb(230,90,52)" fg:x="93766" fg:w="4565"/><text x="50.4906%" y="559.50">no..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (168 samples, 0.09%)</title><rect x="52.5965%" y="533" width="0.0900%" height="15" fill="rgb(252,106,19)" fg:x="98163" fg:w="168"/><text x="52.8465%" y="543.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (168 samples, 0.09%)</title><rect x="52.5965%" y="517" width="0.0900%" height="15" fill="rgb(206,74,20)" fg:x="98163" fg:w="168"/><text x="52.8465%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (129 samples, 0.07%)</title><rect x="52.6174%" y="501" width="0.0691%" height="15" fill="rgb(230,138,44)" fg:x="98202" fg:w="129"/><text x="52.8674%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4,797 samples, 2.57%)</title><rect x="50.1388%" y="613" width="2.5703%" height="15" fill="rgb(235,182,43)" fg:x="93576" fg:w="4797"/><text x="50.3888%" y="623.50">co..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump::{{closure}} (4,795 samples, 2.57%)</title><rect x="50.1398%" y="597" width="2.5692%" height="15" fill="rgb(242,16,51)" fg:x="93578" fg:w="4795"/><text x="50.3898%" y="607.50">hp..</text></g><g><title>nom::combinator::map::{{closure}} (4,620 samples, 2.48%)</title><rect x="50.2336%" y="581" width="2.4754%" height="15" fill="rgb(248,9,4)" fg:x="93753" fg:w="4620"/><text x="50.4836%" y="591.50">no..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (42 samples, 0.02%)</title><rect x="52.6865%" y="565" width="0.0225%" height="15" fill="rgb(210,31,22)" fg:x="98331" fg:w="42"/><text x="52.9365%" y="575.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (51 samples, 0.03%)</title><rect x="52.7155%" y="549" width="0.0273%" height="15" fill="rgb(239,54,39)" fg:x="98385" fg:w="51"/><text x="52.9655%" y="559.50"></text></g><g><title>nom::number::streaming::be_u32 (51 samples, 0.03%)</title><rect x="52.7155%" y="533" width="0.0273%" height="15" fill="rgb(230,99,41)" fg:x="98385" fg:w="51"/><text x="52.9655%" y="543.50"></text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (20 samples, 0.01%)</title><rect x="52.7321%" y="517" width="0.0107%" height="15" fill="rgb(253,106,12)" fg:x="98416" fg:w="20"/><text x="52.9821%" y="527.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (20 samples, 0.01%)</title><rect x="52.7321%" y="501" width="0.0107%" height="15" fill="rgb(213,46,41)" fg:x="98416" fg:w="20"/><text x="52.9821%" y="511.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (20 samples, 0.01%)</title><rect x="52.7321%" y="485" width="0.0107%" height="15" fill="rgb(215,133,35)" fg:x="98416" fg:w="20"/><text x="52.9821%" y="495.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (20 samples, 0.01%)</title><rect x="52.7321%" y="469" width="0.0107%" height="15" fill="rgb(213,28,5)" fg:x="98416" fg:w="20"/><text x="52.9821%" y="479.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (20 samples, 0.01%)</title><rect x="52.7321%" y="453" width="0.0107%" height="15" fill="rgb(215,77,49)" fg:x="98416" fg:w="20"/><text x="52.9821%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (25 samples, 0.01%)</title><rect x="52.7428%" y="421" width="0.0134%" height="15" fill="rgb(248,100,22)" fg:x="98436" fg:w="25"/><text x="52.9928%" y="431.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (25 samples, 0.01%)</title><rect x="52.7428%" y="405" width="0.0134%" height="15" fill="rgb(208,67,9)" fg:x="98436" fg:w="25"/><text x="52.9928%" y="415.50"></text></g><g><title>nom::number::streaming::be_u8 (25 samples, 0.01%)</title><rect x="52.7428%" y="389" width="0.0134%" height="15" fill="rgb(219,133,21)" fg:x="98436" fg:w="25"/><text x="52.9928%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (43 samples, 0.02%)</title><rect x="52.7428%" y="517" width="0.0230%" height="15" fill="rgb(246,46,29)" fg:x="98436" fg:w="43"/><text x="52.9928%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (43 samples, 0.02%)</title><rect x="52.7428%" y="501" width="0.0230%" height="15" fill="rgb(246,185,52)" fg:x="98436" fg:w="43"/><text x="52.9928%" y="511.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_i8 (43 samples, 0.02%)</title><rect x="52.7428%" y="485" width="0.0230%" height="15" fill="rgb(252,136,11)" fg:x="98436" fg:w="43"/><text x="52.9928%" y="495.50"></text></g><g><title>nom::number::streaming::be_i8 (43 samples, 0.02%)</title><rect x="52.7428%" y="469" width="0.0230%" height="15" fill="rgb(219,138,53)" fg:x="98436" fg:w="43"/><text x="52.9928%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (43 samples, 0.02%)</title><rect x="52.7428%" y="453" width="0.0230%" height="15" fill="rgb(211,51,23)" fg:x="98436" fg:w="43"/><text x="52.9928%" y="463.50"></text></g><g><title>nom::combinator::map::{{closure}} (43 samples, 0.02%)</title><rect x="52.7428%" y="437" width="0.0230%" height="15" fill="rgb(247,221,28)" fg:x="98436" fg:w="43"/><text x="52.9928%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (33,950 samples, 18.19%)</title><rect x="34.5934%" y="661" width="18.1907%" height="15" fill="rgb(251,222,45)" fg:x="64563" fg:w="33950"/><text x="34.8434%" y="671.50">&lt;F as nom::internal::Parser&lt;..</text></g><g><title>core::ops::function::FnMut::call_mut (33,950 samples, 18.19%)</title><rect x="34.5934%" y="645" width="18.1907%" height="15" fill="rgb(217,162,53)" fg:x="64563" fg:w="33950"/><text x="34.8434%" y="655.50">core::ops::function::FnMut::..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (4,957 samples, 2.66%)</title><rect x="50.1281%" y="629" width="2.6560%" height="15" fill="rgb(229,93,14)" fg:x="93556" fg:w="4957"/><text x="50.3781%" y="639.50">hp..</text></g><g><title>nom::sequence::tuple::{{closure}} (140 samples, 0.08%)</title><rect x="52.7090%" y="613" width="0.0750%" height="15" fill="rgb(209,67,49)" fg:x="98373" fg:w="140"/><text x="52.9590%" y="623.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (140 samples, 0.08%)</title><rect x="52.7090%" y="597" width="0.0750%" height="15" fill="rgb(213,87,29)" fg:x="98373" fg:w="140"/><text x="52.9590%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (128 samples, 0.07%)</title><rect x="52.7155%" y="581" width="0.0686%" height="15" fill="rgb(205,151,52)" fg:x="98385" fg:w="128"/><text x="52.9655%" y="591.50"></text></g><g><title>core::ops::function::FnMut::call_mut (128 samples, 0.07%)</title><rect x="52.7155%" y="565" width="0.0686%" height="15" fill="rgb(253,215,39)" fg:x="98385" fg:w="128"/><text x="52.9655%" y="575.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_field_type (77 samples, 0.04%)</title><rect x="52.7428%" y="549" width="0.0413%" height="15" fill="rgb(221,220,41)" fg:x="98436" fg:w="77"/><text x="52.9928%" y="559.50"></text></g><g><title>nom::combinator::map::{{closure}} (77 samples, 0.04%)</title><rect x="52.7428%" y="533" width="0.0413%" height="15" fill="rgb(218,133,21)" fg:x="98436" fg:w="77"/><text x="52.9928%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (34 samples, 0.02%)</title><rect x="52.7658%" y="517" width="0.0182%" height="15" fill="rgb(221,193,43)" fg:x="98479" fg:w="34"/><text x="53.0158%" y="527.50"></text></g><g><title>hprof_slurp::parser::gc_record::FieldType::from_value (31 samples, 0.02%)</title><rect x="52.7674%" y="501" width="0.0166%" height="15" fill="rgb(240,128,52)" fg:x="98482" fg:w="31"/><text x="53.0174%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (72,429 samples, 38.81%)</title><rect x="14.0055%" y="725" width="38.8080%" height="15" fill="rgb(253,114,12)" fg:x="26139" fg:w="72429"/><text x="14.2555%" y="735.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (71,855 samples, 38.50%)</title><rect x="14.3130%" y="709" width="38.5005%" height="15" fill="rgb(215,223,47)" fg:x="26713" fg:w="71855"/><text x="14.5630%" y="719.50">hprof_slurp::parser::record_parser::HprofRecordParser::parse_hp..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record (34,104 samples, 18.27%)</title><rect x="34.5403%" y="693" width="18.2732%" height="15" fill="rgb(248,225,23)" fg:x="64464" fg:w="34104"/><text x="34.7903%" y="703.50">hprof_slurp::parser::record_..</text></g><g><title>nom::combinator::flat_map::{{closure}} (34,104 samples, 18.27%)</title><rect x="34.5403%" y="677" width="18.2732%" height="15" fill="rgb(250,108,0)" fg:x="64464" fg:w="34104"/><text x="34.7903%" y="687.50">nom::combinator::flat_map::{..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record::{{closure}} (55 samples, 0.03%)</title><rect x="52.7841%" y="661" width="0.0295%" height="15" fill="rgb(228,208,7)" fg:x="98513" fg:w="55"/><text x="53.0341%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (392 samples, 0.21%)</title><rect x="52.8328%" y="709" width="0.2100%" height="15" fill="rgb(244,45,10)" fg:x="98604" fg:w="392"/><text x="53.0828%" y="719.50"></text></g><g><title>alloc_pages_vma (19 samples, 0.01%)</title><rect x="54.1707%" y="581" width="0.0102%" height="15" fill="rgb(207,125,25)" fg:x="101101" fg:w="19"/><text x="54.4207%" y="591.50"></text></g><g><title>do_anonymous_page (35 samples, 0.02%)</title><rect x="54.1670%" y="597" width="0.0188%" height="15" fill="rgb(210,195,18)" fg:x="101094" fg:w="35"/><text x="54.4170%" y="607.50"></text></g><g><title>do_user_addr_fault (47 samples, 0.03%)</title><rect x="54.1611%" y="661" width="0.0252%" height="15" fill="rgb(249,80,12)" fg:x="101083" fg:w="47"/><text x="54.4111%" y="671.50"></text></g><g><title>handle_mm_fault (46 samples, 0.02%)</title><rect x="54.1616%" y="645" width="0.0246%" height="15" fill="rgb(221,65,9)" fg:x="101084" fg:w="46"/><text x="54.4116%" y="655.50"></text></g><g><title>__handle_mm_fault (41 samples, 0.02%)</title><rect x="54.1643%" y="629" width="0.0220%" height="15" fill="rgb(235,49,36)" fg:x="101089" fg:w="41"/><text x="54.4143%" y="639.50"></text></g><g><title>handle_pte_fault (38 samples, 0.02%)</title><rect x="54.1659%" y="613" width="0.0204%" height="15" fill="rgb(225,32,20)" fg:x="101092" fg:w="38"/><text x="54.4159%" y="623.50"></text></g><g><title>asm_exc_page_fault (51 samples, 0.03%)</title><rect x="54.1605%" y="693" width="0.0273%" height="15" fill="rgb(215,141,46)" fg:x="101082" fg:w="51"/><text x="54.4105%" y="703.50"></text></g><g><title>exc_page_fault (51 samples, 0.03%)</title><rect x="54.1605%" y="677" width="0.0273%" height="15" fill="rgb(250,160,47)" fg:x="101082" fg:w="51"/><text x="54.4105%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,574 samples, 1.38%)</title><rect x="52.8141%" y="725" width="1.3792%" height="15" fill="rgb(216,222,40)" fg:x="98569" fg:w="2574"/><text x="53.0641%" y="735.50"></text></g><g><title>core::ptr::write (2,139 samples, 1.15%)</title><rect x="53.0471%" y="709" width="1.1461%" height="15" fill="rgb(234,217,39)" fg:x="99004" fg:w="2139"/><text x="53.2971%" y="719.50"></text></g><g><title>__sysvec_apic_timer_interrupt (23 samples, 0.01%)</title><rect x="54.1938%" y="693" width="0.0123%" height="15" fill="rgb(207,178,40)" fg:x="101144" fg:w="23"/><text x="54.4438%" y="703.50"></text></g><g><title>hrtimer_interrupt (23 samples, 0.01%)</title><rect x="54.1938%" y="677" width="0.0123%" height="15" fill="rgb(221,136,13)" fg:x="101144" fg:w="23"/><text x="54.4438%" y="687.50"></text></g><g><title>__hrtimer_run_queues (22 samples, 0.01%)</title><rect x="54.1943%" y="661" width="0.0118%" height="15" fill="rgb(249,199,10)" fg:x="101145" fg:w="22"/><text x="54.4443%" y="671.50"></text></g><g><title>tick_sched_timer (20 samples, 0.01%)</title><rect x="54.1954%" y="645" width="0.0107%" height="15" fill="rgb(249,222,13)" fg:x="101147" fg:w="20"/><text x="54.4454%" y="655.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (28 samples, 0.02%)</title><rect x="54.1938%" y="725" width="0.0150%" height="15" fill="rgb(244,185,38)" fg:x="101144" fg:w="28"/><text x="54.4438%" y="735.50"></text></g><g><title>sysvec_apic_timer_interrupt (28 samples, 0.02%)</title><rect x="54.1938%" y="709" width="0.0150%" height="15" fill="rgb(236,202,9)" fg:x="101144" fg:w="28"/><text x="54.4438%" y="719.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (87,985 samples, 47.14%)</title><rect x="7.0673%" y="757" width="47.1431%" height="15" fill="rgb(250,229,37)" fg:x="13190" fg:w="87985"/><text x="7.3173%" y="767.50">hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming</text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (87,985 samples, 47.14%)</title><rect x="7.0673%" y="741" width="47.1431%" height="15" fill="rgb(206,174,23)" fg:x="13190" fg:w="87985"/><text x="7.3173%" y="751.50">hprof_slurp::parser::record_parser::lazy_many1::{{closure}}</text></g><g><title>__clone3 (95,495 samples, 51.17%)</title><rect x="3.0546%" y="981" width="51.1670%" height="15" fill="rgb(211,33,43)" fg:x="5701" fg:w="95495"/><text x="3.3046%" y="991.50">__clone3</text></g><g><title>start_thread (95,495 samples, 51.17%)</title><rect x="3.0546%" y="965" width="51.1670%" height="15" fill="rgb(245,58,50)" fg:x="5701" fg:w="95495"/><text x="3.3046%" y="975.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (95,495 samples, 51.17%)</title><rect x="3.0546%" y="949" width="51.1670%" height="15" fill="rgb(244,68,36)" fg:x="5701" fg:w="95495"/><text x="3.3046%" y="959.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (95,495 samples, 51.17%)</title><rect x="3.0546%" y="933" width="51.1670%" height="15" fill="rgb(232,229,15)" fg:x="5701" fg:w="95495"/><text x="3.3046%" y="943.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (95,495 samples, 51.17%)</title><rect x="3.0546%" y="917" width="51.1670%" height="15" fill="rgb(254,30,23)" fg:x="5701" fg:w="95495"/><text x="3.3046%" y="927.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (95,495 samples, 51.17%)</title><rect x="3.0546%" y="901" width="51.1670%" height="15" fill="rgb(235,160,14)" fg:x="5701" fg:w="95495"/><text x="3.3046%" y="911.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (95,495 samples, 51.17%)</title><rect x="3.0546%" y="885" width="51.1670%" height="15" fill="rgb(212,155,44)" fg:x="5701" fg:w="95495"/><text x="3.3046%" y="895.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (95,495 samples, 51.17%)</title><rect x="3.0546%" y="869" width="51.1670%" height="15" fill="rgb(226,2,50)" fg:x="5701" fg:w="95495"/><text x="3.3046%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (95,495 samples, 51.17%)</title><rect x="3.0546%" y="853" width="51.1670%" height="15" fill="rgb(234,177,6)" fg:x="5701" fg:w="95495"/><text x="3.3046%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (95,495 samples, 51.17%)</title><rect x="3.0546%" y="837" width="51.1670%" height="15" fill="rgb(217,24,9)" fg:x="5701" fg:w="95495"/><text x="3.3046%" y="847.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (95,495 samples, 51.17%)</title><rect x="3.0546%" y="821" width="51.1670%" height="15" fill="rgb(220,13,46)" fg:x="5701" fg:w="95495"/><text x="3.3046%" y="831.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (95,495 samples, 51.17%)</title><rect x="3.0546%" y="805" width="51.1670%" height="15" fill="rgb(239,221,27)" fg:x="5701" fg:w="95495"/><text x="3.3046%" y="815.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (95,495 samples, 51.17%)</title><rect x="3.0546%" y="789" width="51.1670%" height="15" fill="rgb(222,198,25)" fg:x="5701" fg:w="95495"/><text x="3.3046%" y="799.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}} (95,495 samples, 51.17%)</title><rect x="3.0546%" y="773" width="51.1670%" height="15" fill="rgb(211,99,13)" fg:x="5701" fg:w="95495"/><text x="3.3046%" y="783.50">hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure..</text></g><g><title>std::sync::mpsc::Sender&lt;T&gt;::send (19 samples, 0.01%)</title><rect x="54.2115%" y="757" width="0.0102%" height="15" fill="rgb(232,111,31)" fg:x="101177" fg:w="19"/><text x="54.4615%" y="767.50"></text></g><g><title>asm_exc_page_fault (166 samples, 0.09%)</title><rect x="54.2243%" y="981" width="0.0889%" height="15" fill="rgb(245,82,37)" fg:x="101201" fg:w="166"/><text x="54.4743%" y="991.50"></text></g><g><title>hprof-parser (101,375 samples, 54.32%)</title><rect x="0.0000%" y="997" width="54.3175%" height="15" fill="rgb(227,149,46)" fg:x="0" fg:w="101375"/><text x="0.2500%" y="1007.50">hprof-parser</text></g><g><title>__cond_resched (21 samples, 0.01%)</title><rect x="54.6744%" y="517" width="0.0113%" height="15" fill="rgb(218,36,50)" fg:x="102041" fg:w="21"/><text x="54.9244%" y="527.50"></text></g><g><title>__irqentry_text_start (23 samples, 0.01%)</title><rect x="54.6856%" y="517" width="0.0123%" height="15" fill="rgb(226,80,48)" fg:x="102062" fg:w="23"/><text x="54.9356%" y="527.50"></text></g><g><title>copy_page_to_iter (382 samples, 0.20%)</title><rect x="54.7076%" y="517" width="0.2047%" height="15" fill="rgb(238,224,15)" fg:x="102103" fg:w="382"/><text x="54.9576%" y="527.50"></text></g><g><title>rcu_all_qs (20 samples, 0.01%)</title><rect x="54.9016%" y="501" width="0.0107%" height="15" fill="rgb(241,136,10)" fg:x="102465" fg:w="20"/><text x="55.1516%" y="511.50"></text></g><g><title>blk_mq_end_request (47 samples, 0.03%)</title><rect x="61.3886%" y="341" width="0.0252%" height="15" fill="rgb(208,32,45)" fg:x="114572" fg:w="47"/><text x="61.6386%" y="351.50"></text></g><g><title>blk_update_request (40 samples, 0.02%)</title><rect x="61.3924%" y="325" width="0.0214%" height="15" fill="rgb(207,135,9)" fg:x="114579" fg:w="40"/><text x="61.6424%" y="335.50"></text></g><g><title>bio_endio (30 samples, 0.02%)</title><rect x="61.3977%" y="309" width="0.0161%" height="15" fill="rgb(206,86,44)" fg:x="114589" fg:w="30"/><text x="61.6477%" y="319.50"></text></g><g><title>mpage_end_io (22 samples, 0.01%)</title><rect x="61.4020%" y="293" width="0.0118%" height="15" fill="rgb(245,177,15)" fg:x="114597" fg:w="22"/><text x="61.6520%" y="303.50"></text></g><g><title>nvme_complete_rq (48 samples, 0.03%)</title><rect x="61.3886%" y="357" width="0.0257%" height="15" fill="rgb(206,64,50)" fg:x="114572" fg:w="48"/><text x="61.6386%" y="367.50"></text></g><g><title>domain_unmap (19 samples, 0.01%)</title><rect x="61.4181%" y="229" width="0.0102%" height="15" fill="rgb(234,36,40)" fg:x="114627" fg:w="19"/><text x="61.6681%" y="239.50"></text></g><g><title>dma_pte_clear_level (19 samples, 0.01%)</title><rect x="61.4181%" y="213" width="0.0102%" height="15" fill="rgb(213,64,8)" fg:x="114627" fg:w="19"/><text x="61.6681%" y="223.50"></text></g><g><title>dma_pte_clear_level (19 samples, 0.01%)</title><rect x="61.4181%" y="197" width="0.0102%" height="15" fill="rgb(210,75,36)" fg:x="114627" fg:w="19"/><text x="61.6681%" y="207.50"></text></g><g><title>dma_pte_clear_level (19 samples, 0.01%)</title><rect x="61.4181%" y="181" width="0.0102%" height="15" fill="rgb(229,88,21)" fg:x="114627" fg:w="19"/><text x="61.6681%" y="191.50"></text></g><g><title>dma_pte_clear_level (19 samples, 0.01%)</title><rect x="61.4181%" y="165" width="0.0102%" height="15" fill="rgb(252,204,47)" fg:x="114627" fg:w="19"/><text x="61.6681%" y="175.50"></text></g><g><title>__iommu_dma_unmap (27 samples, 0.01%)</title><rect x="61.4159%" y="309" width="0.0145%" height="15" fill="rgb(208,77,27)" fg:x="114623" fg:w="27"/><text x="61.6659%" y="319.50"></text></g><g><title>iommu_unmap_fast (25 samples, 0.01%)</title><rect x="61.4170%" y="293" width="0.0134%" height="15" fill="rgb(221,76,26)" fg:x="114625" fg:w="25"/><text x="61.6670%" y="303.50"></text></g><g><title>__iommu_unmap (25 samples, 0.01%)</title><rect x="61.4170%" y="277" width="0.0134%" height="15" fill="rgb(225,139,18)" fg:x="114625" fg:w="25"/><text x="61.6670%" y="287.50"></text></g><g><title>intel_iommu_unmap_pages (24 samples, 0.01%)</title><rect x="61.4175%" y="261" width="0.0129%" height="15" fill="rgb(230,137,11)" fg:x="114626" fg:w="24"/><text x="61.6675%" y="271.50"></text></g><g><title>intel_iommu_unmap (23 samples, 0.01%)</title><rect x="61.4181%" y="245" width="0.0123%" height="15" fill="rgb(212,28,1)" fg:x="114627" fg:w="23"/><text x="61.6681%" y="255.50"></text></g><g><title>dma_unmap_sg_attrs (29 samples, 0.02%)</title><rect x="61.4154%" y="341" width="0.0155%" height="15" fill="rgb(248,164,17)" fg:x="114622" fg:w="29"/><text x="61.6654%" y="351.50"></text></g><g><title>iommu_dma_unmap_sg (28 samples, 0.02%)</title><rect x="61.4159%" y="325" width="0.0150%" height="15" fill="rgb(222,171,42)" fg:x="114623" fg:w="28"/><text x="61.6659%" y="335.50"></text></g><g><title>__handle_irq_event_percpu (94 samples, 0.05%)</title><rect x="61.3827%" y="421" width="0.0504%" height="15" fill="rgb(243,84,45)" fg:x="114561" fg:w="94"/><text x="61.6327%" y="431.50"></text></g><g><title>nvme_irq (93 samples, 0.05%)</title><rect x="61.3832%" y="405" width="0.0498%" height="15" fill="rgb(252,49,23)" fg:x="114562" fg:w="93"/><text x="61.6332%" y="415.50"></text></g><g><title>nvme_process_cq (93 samples, 0.05%)</title><rect x="61.3832%" y="389" width="0.0498%" height="15" fill="rgb(215,19,7)" fg:x="114562" fg:w="93"/><text x="61.6332%" y="399.50"></text></g><g><title>nvme_pci_complete_rq (84 samples, 0.05%)</title><rect x="61.3881%" y="373" width="0.0450%" height="15" fill="rgb(238,81,41)" fg:x="114571" fg:w="84"/><text x="61.6381%" y="383.50"></text></g><g><title>nvme_unmap_data (35 samples, 0.02%)</title><rect x="61.4143%" y="357" width="0.0188%" height="15" fill="rgb(210,199,37)" fg:x="114620" fg:w="35"/><text x="61.6643%" y="367.50"></text></g><g><title>handle_irq_event (98 samples, 0.05%)</title><rect x="61.3827%" y="437" width="0.0525%" height="15" fill="rgb(244,192,49)" fg:x="114561" fg:w="98"/><text x="61.6327%" y="447.50"></text></g><g><title>__common_interrupt (105 samples, 0.06%)</title><rect x="61.3806%" y="469" width="0.0563%" height="15" fill="rgb(226,211,11)" fg:x="114557" fg:w="105"/><text x="61.6306%" y="479.50"></text></g><g><title>handle_edge_irq (104 samples, 0.06%)</title><rect x="61.3811%" y="453" width="0.0557%" height="15" fill="rgb(236,162,54)" fg:x="114558" fg:w="104"/><text x="61.6311%" y="463.50"></text></g><g><title>asm_common_interrupt (106 samples, 0.06%)</title><rect x="61.3806%" y="501" width="0.0568%" height="15" fill="rgb(220,229,9)" fg:x="114557" fg:w="106"/><text x="61.6306%" y="511.50"></text></g><g><title>common_interrupt (106 samples, 0.06%)</title><rect x="61.3806%" y="485" width="0.0568%" height="15" fill="rgb(250,87,22)" fg:x="114557" fg:w="106"/><text x="61.6306%" y="495.50"></text></g><g><title>__sysvec_apic_timer_interrupt (19 samples, 0.01%)</title><rect x="61.4374%" y="469" width="0.0102%" height="15" fill="rgb(239,43,17)" fg:x="114663" fg:w="19"/><text x="61.6874%" y="479.50"></text></g><g><title>copy_user_enhanced_fast_string (12,208 samples, 6.54%)</title><rect x="54.9123%" y="517" width="6.5411%" height="15" fill="rgb(231,177,25)" fg:x="102485" fg:w="12208"/><text x="55.1623%" y="527.50">copy_user..</text></g><g><title>asm_sysvec_apic_timer_interrupt (30 samples, 0.02%)</title><rect x="61.4374%" y="501" width="0.0161%" height="15" fill="rgb(219,179,1)" fg:x="114663" fg:w="30"/><text x="61.6874%" y="511.50"></text></g><g><title>sysvec_apic_timer_interrupt (30 samples, 0.02%)</title><rect x="61.4374%" y="485" width="0.0161%" height="15" fill="rgb(238,219,53)" fg:x="114663" fg:w="30"/><text x="61.6874%" y="495.50"></text></g><g><title>xas_load (53 samples, 0.03%)</title><rect x="61.7862%" y="485" width="0.0284%" height="15" fill="rgb(232,167,36)" fg:x="115314" fg:w="53"/><text x="62.0362%" y="495.50"></text></g><g><title>filemap_get_read_batch (643 samples, 0.34%)</title><rect x="61.4706%" y="501" width="0.3445%" height="15" fill="rgb(244,19,51)" fg:x="114725" fg:w="643"/><text x="61.7206%" y="511.50"></text></g><g><title>filemap_update_page (19 samples, 0.01%)</title><rect x="61.8151%" y="501" width="0.0102%" height="15" fill="rgb(224,6,22)" fg:x="115368" fg:w="19"/><text x="62.0651%" y="511.50"></text></g><g><title>wait_on_page_bit_common (19 samples, 0.01%)</title><rect x="61.8151%" y="485" width="0.0102%" height="15" fill="rgb(224,145,5)" fg:x="115368" fg:w="19"/><text x="62.0651%" y="495.50"></text></g><g><title>_find_first_bit (24 samples, 0.01%)</title><rect x="61.9983%" y="437" width="0.0129%" height="15" fill="rgb(234,130,49)" fg:x="115710" fg:w="24"/><text x="62.2483%" y="447.50"></text></g><g><title>clear_page_erms (69 samples, 0.04%)</title><rect x="62.2014%" y="373" width="0.0370%" height="15" fill="rgb(254,6,2)" fg:x="116089" fg:w="69"/><text x="62.4514%" y="383.50"></text></g><g><title>get_page_from_freelist (95 samples, 0.05%)</title><rect x="62.1987%" y="389" width="0.0509%" height="15" fill="rgb(208,96,46)" fg:x="116084" fg:w="95"/><text x="62.4487%" y="399.50"></text></g><g><title>rmqueue (20 samples, 0.01%)</title><rect x="62.2389%" y="373" width="0.0107%" height="15" fill="rgb(239,3,39)" fg:x="116159" fg:w="20"/><text x="62.4889%" y="383.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (111 samples, 0.06%)</title><rect x="62.1977%" y="405" width="0.0595%" height="15" fill="rgb(233,210,1)" fg:x="116082" fg:w="111"/><text x="62.4477%" y="415.50"></text></g><g><title>__next_zones_zonelist (70 samples, 0.04%)</title><rect x="62.2663%" y="405" width="0.0375%" height="15" fill="rgb(244,137,37)" fg:x="116210" fg:w="70"/><text x="62.5163%" y="415.50"></text></g><g><title>__read_end_io (50 samples, 0.03%)</title><rect x="63.8640%" y="149" width="0.0268%" height="15" fill="rgb(240,136,2)" fg:x="119192" fg:w="50"/><text x="64.1140%" y="159.50"></text></g><g><title>nvme_complete_rq (77 samples, 0.04%)</title><rect x="63.8608%" y="229" width="0.0413%" height="15" fill="rgb(239,18,37)" fg:x="119186" fg:w="77"/><text x="64.1108%" y="239.50"></text></g><g><title>blk_mq_end_request (77 samples, 0.04%)</title><rect x="63.8608%" y="213" width="0.0413%" height="15" fill="rgb(218,185,22)" fg:x="119186" fg:w="77"/><text x="64.1108%" y="223.50"></text></g><g><title>blk_update_request (75 samples, 0.04%)</title><rect x="63.8619%" y="197" width="0.0402%" height="15" fill="rgb(225,218,4)" fg:x="119188" fg:w="75"/><text x="64.1119%" y="207.50"></text></g><g><title>bio_endio (71 samples, 0.04%)</title><rect x="63.8640%" y="181" width="0.0380%" height="15" fill="rgb(230,182,32)" fg:x="119192" fg:w="71"/><text x="64.1140%" y="191.50"></text></g><g><title>mpage_end_io (71 samples, 0.04%)</title><rect x="63.8640%" y="165" width="0.0380%" height="15" fill="rgb(242,56,43)" fg:x="119192" fg:w="71"/><text x="64.1140%" y="175.50"></text></g><g><title>unlock_page (21 samples, 0.01%)</title><rect x="63.8908%" y="149" width="0.0113%" height="15" fill="rgb(233,99,24)" fg:x="119242" fg:w="21"/><text x="64.1408%" y="159.50"></text></g><g><title>domain_unmap (19 samples, 0.01%)</title><rect x="63.9048%" y="101" width="0.0102%" height="15" fill="rgb(234,209,42)" fg:x="119268" fg:w="19"/><text x="64.1548%" y="111.50"></text></g><g><title>dma_pte_clear_level (19 samples, 0.01%)</title><rect x="63.9048%" y="85" width="0.0102%" height="15" fill="rgb(227,7,12)" fg:x="119268" fg:w="19"/><text x="64.1548%" y="95.50"></text></g><g><title>dma_pte_clear_level (19 samples, 0.01%)</title><rect x="63.9048%" y="69" width="0.0102%" height="15" fill="rgb(245,203,43)" fg:x="119268" fg:w="19"/><text x="64.1548%" y="79.50"></text></g><g><title>dma_pte_clear_level (19 samples, 0.01%)</title><rect x="63.9048%" y="53" width="0.0102%" height="15" fill="rgb(238,205,33)" fg:x="119268" fg:w="19"/><text x="64.1548%" y="63.50"></text></g><g><title>dma_pte_clear_level (19 samples, 0.01%)</title><rect x="63.9048%" y="37" width="0.0102%" height="15" fill="rgb(231,56,7)" fg:x="119268" fg:w="19"/><text x="64.1548%" y="47.50"></text></g><g><title>dma_unmap_sg_attrs (26 samples, 0.01%)</title><rect x="63.9021%" y="213" width="0.0139%" height="15" fill="rgb(244,186,29)" fg:x="119263" fg:w="26"/><text x="64.1521%" y="223.50"></text></g><g><title>iommu_dma_unmap_sg (26 samples, 0.01%)</title><rect x="63.9021%" y="197" width="0.0139%" height="15" fill="rgb(234,111,31)" fg:x="119263" fg:w="26"/><text x="64.1521%" y="207.50"></text></g><g><title>__iommu_dma_unmap (26 samples, 0.01%)</title><rect x="63.9021%" y="181" width="0.0139%" height="15" fill="rgb(241,149,10)" fg:x="119263" fg:w="26"/><text x="64.1521%" y="191.50"></text></g><g><title>iommu_unmap_fast (21 samples, 0.01%)</title><rect x="63.9048%" y="165" width="0.0113%" height="15" fill="rgb(249,206,44)" fg:x="119268" fg:w="21"/><text x="64.1548%" y="175.50"></text></g><g><title>__iommu_unmap (21 samples, 0.01%)</title><rect x="63.9048%" y="149" width="0.0113%" height="15" fill="rgb(251,153,30)" fg:x="119268" fg:w="21"/><text x="64.1548%" y="159.50"></text></g><g><title>intel_iommu_unmap_pages (21 samples, 0.01%)</title><rect x="63.9048%" y="133" width="0.0113%" height="15" fill="rgb(239,152,38)" fg:x="119268" fg:w="21"/><text x="64.1548%" y="143.50"></text></g><g><title>intel_iommu_unmap (21 samples, 0.01%)</title><rect x="63.9048%" y="117" width="0.0113%" height="15" fill="rgb(249,139,47)" fg:x="119268" fg:w="21"/><text x="64.1548%" y="127.50"></text></g><g><title>__handle_irq_event_percpu (112 samples, 0.06%)</title><rect x="63.8581%" y="293" width="0.0600%" height="15" fill="rgb(244,64,35)" fg:x="119181" fg:w="112"/><text x="64.1081%" y="303.50"></text></g><g><title>nvme_irq (112 samples, 0.06%)</title><rect x="63.8581%" y="277" width="0.0600%" height="15" fill="rgb(216,46,15)" fg:x="119181" fg:w="112"/><text x="64.1081%" y="287.50"></text></g><g><title>nvme_process_cq (112 samples, 0.06%)</title><rect x="63.8581%" y="261" width="0.0600%" height="15" fill="rgb(250,74,19)" fg:x="119181" fg:w="112"/><text x="64.1081%" y="271.50"></text></g><g><title>nvme_pci_complete_rq (107 samples, 0.06%)</title><rect x="63.8608%" y="245" width="0.0573%" height="15" fill="rgb(249,42,33)" fg:x="119186" fg:w="107"/><text x="64.1108%" y="255.50"></text></g><g><title>nvme_unmap_data (30 samples, 0.02%)</title><rect x="63.9021%" y="229" width="0.0161%" height="15" fill="rgb(242,149,17)" fg:x="119263" fg:w="30"/><text x="64.1521%" y="239.50"></text></g><g><title>__common_interrupt (114 samples, 0.06%)</title><rect x="63.8576%" y="341" width="0.0611%" height="15" fill="rgb(244,29,21)" fg:x="119180" fg:w="114"/><text x="64.1076%" y="351.50"></text></g><g><title>handle_edge_irq (114 samples, 0.06%)</title><rect x="63.8576%" y="325" width="0.0611%" height="15" fill="rgb(220,130,37)" fg:x="119180" fg:w="114"/><text x="64.1076%" y="335.50"></text></g><g><title>handle_irq_event (114 samples, 0.06%)</title><rect x="63.8576%" y="309" width="0.0611%" height="15" fill="rgb(211,67,2)" fg:x="119180" fg:w="114"/><text x="64.1076%" y="319.50"></text></g><g><title>asm_common_interrupt (115 samples, 0.06%)</title><rect x="63.8576%" y="373" width="0.0616%" height="15" fill="rgb(235,68,52)" fg:x="119180" fg:w="115"/><text x="64.1076%" y="383.50"></text></g><g><title>common_interrupt (115 samples, 0.06%)</title><rect x="63.8576%" y="357" width="0.0616%" height="15" fill="rgb(246,142,3)" fg:x="119180" fg:w="115"/><text x="64.1076%" y="367.50"></text></g><g><title>clear_page_erms (2,738 samples, 1.47%)</title><rect x="62.4559%" y="389" width="1.4670%" height="15" fill="rgb(241,25,7)" fg:x="116564" fg:w="2738"/><text x="62.7059%" y="399.50"></text></g><g><title>kernel_init_free_pages.part.0 (48 samples, 0.03%)</title><rect x="63.9235%" y="389" width="0.0257%" height="15" fill="rgb(242,119,39)" fg:x="119303" fg:w="48"/><text x="64.1735%" y="399.50"></text></g><g><title>nvme_complete_rq (31 samples, 0.02%)</title><rect x="64.1084%" y="229" width="0.0166%" height="15" fill="rgb(241,98,45)" fg:x="119648" fg:w="31"/><text x="64.3584%" y="239.50"></text></g><g><title>blk_mq_end_request (31 samples, 0.02%)</title><rect x="64.1084%" y="213" width="0.0166%" height="15" fill="rgb(254,28,30)" fg:x="119648" fg:w="31"/><text x="64.3584%" y="223.50"></text></g><g><title>blk_update_request (30 samples, 0.02%)</title><rect x="64.1089%" y="197" width="0.0161%" height="15" fill="rgb(241,142,54)" fg:x="119649" fg:w="30"/><text x="64.3589%" y="207.50"></text></g><g><title>bio_endio (29 samples, 0.02%)</title><rect x="64.1094%" y="181" width="0.0155%" height="15" fill="rgb(222,85,15)" fg:x="119650" fg:w="29"/><text x="64.3594%" y="191.50"></text></g><g><title>mpage_end_io (29 samples, 0.02%)</title><rect x="64.1094%" y="165" width="0.0155%" height="15" fill="rgb(210,85,47)" fg:x="119650" fg:w="29"/><text x="64.3594%" y="175.50"></text></g><g><title>handle_irq_event (46 samples, 0.02%)</title><rect x="64.1057%" y="309" width="0.0246%" height="15" fill="rgb(224,206,25)" fg:x="119643" fg:w="46"/><text x="64.3557%" y="319.50"></text></g><g><title>__handle_irq_event_percpu (44 samples, 0.02%)</title><rect x="64.1068%" y="293" width="0.0236%" height="15" fill="rgb(243,201,19)" fg:x="119645" fg:w="44"/><text x="64.3568%" y="303.50"></text></g><g><title>nvme_irq (44 samples, 0.02%)</title><rect x="64.1068%" y="277" width="0.0236%" height="15" fill="rgb(236,59,4)" fg:x="119645" fg:w="44"/><text x="64.3568%" y="287.50"></text></g><g><title>nvme_process_cq (44 samples, 0.02%)</title><rect x="64.1068%" y="261" width="0.0236%" height="15" fill="rgb(254,179,45)" fg:x="119645" fg:w="44"/><text x="64.3568%" y="271.50"></text></g><g><title>nvme_pci_complete_rq (41 samples, 0.02%)</title><rect x="64.1084%" y="245" width="0.0220%" height="15" fill="rgb(226,14,10)" fg:x="119648" fg:w="41"/><text x="64.3584%" y="255.50"></text></g><g><title>asm_common_interrupt (47 samples, 0.03%)</title><rect x="64.1057%" y="373" width="0.0252%" height="15" fill="rgb(244,27,41)" fg:x="119643" fg:w="47"/><text x="64.3557%" y="383.50"></text></g><g><title>common_interrupt (47 samples, 0.03%)</title><rect x="64.1057%" y="357" width="0.0252%" height="15" fill="rgb(235,35,32)" fg:x="119643" fg:w="47"/><text x="64.3557%" y="367.50"></text></g><g><title>__common_interrupt (47 samples, 0.03%)</title><rect x="64.1057%" y="341" width="0.0252%" height="15" fill="rgb(218,68,31)" fg:x="119643" fg:w="47"/><text x="64.3557%" y="351.50"></text></g><g><title>handle_edge_irq (47 samples, 0.03%)</title><rect x="64.1057%" y="325" width="0.0252%" height="15" fill="rgb(207,120,37)" fg:x="119643" fg:w="47"/><text x="64.3557%" y="335.50"></text></g><g><title>rmqueue_bulk (860 samples, 0.46%)</title><rect x="64.1335%" y="373" width="0.4608%" height="15" fill="rgb(227,98,0)" fg:x="119695" fg:w="860"/><text x="64.3835%" y="383.50"></text></g><g><title>_raw_spin_lock (23 samples, 0.01%)</title><rect x="64.5820%" y="357" width="0.0123%" height="15" fill="rgb(207,7,3)" fg:x="120532" fg:w="23"/><text x="64.8320%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath (23 samples, 0.01%)</title><rect x="64.5820%" y="341" width="0.0123%" height="15" fill="rgb(206,98,19)" fg:x="120532" fg:w="23"/><text x="64.8320%" y="351.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (23 samples, 0.01%)</title><rect x="64.5820%" y="325" width="0.0123%" height="15" fill="rgb(217,5,26)" fg:x="120532" fg:w="23"/><text x="64.8320%" y="335.50"></text></g><g><title>get_page_from_freelist (4,264 samples, 2.28%)</title><rect x="62.3102%" y="405" width="2.2847%" height="15" fill="rgb(235,190,38)" fg:x="116292" fg:w="4264"/><text x="62.5602%" y="415.50">g..</text></g><g><title>rmqueue (1,205 samples, 0.65%)</title><rect x="63.9492%" y="389" width="0.6456%" height="15" fill="rgb(247,86,24)" fg:x="119351" fg:w="1205"/><text x="64.1992%" y="399.50"></text></g><g><title>__alloc_pages (4,759 samples, 2.55%)</title><rect x="62.0610%" y="421" width="2.5499%" height="15" fill="rgb(205,101,16)" fg:x="115827" fg:w="4759"/><text x="62.3110%" y="431.50">__..</text></g><g><title>__next_zones_zonelist (27 samples, 0.01%)</title><rect x="64.6185%" y="421" width="0.0145%" height="15" fill="rgb(246,168,33)" fg:x="120600" fg:w="27"/><text x="64.8685%" y="431.50"></text></g><g><title>policy_nodemask (28 samples, 0.02%)</title><rect x="64.6442%" y="421" width="0.0150%" height="15" fill="rgb(231,114,1)" fg:x="120648" fg:w="28"/><text x="64.8942%" y="431.50"></text></g><g><title>alloc_pages (4,963 samples, 2.66%)</title><rect x="62.0112%" y="437" width="2.6592%" height="15" fill="rgb(207,184,53)" fg:x="115734" fg:w="4963"/><text x="62.2612%" y="447.50">al..</text></g><g><title>should_fail_alloc_page (21 samples, 0.01%)</title><rect x="64.6592%" y="421" width="0.0113%" height="15" fill="rgb(224,95,51)" fg:x="120676" fg:w="21"/><text x="64.9092%" y="431.50"></text></g><g><title>__page_cache_alloc (5,046 samples, 2.70%)</title><rect x="61.9710%" y="453" width="2.7037%" height="15" fill="rgb(212,188,45)" fg:x="115659" fg:w="5046"/><text x="62.2210%" y="463.50">__..</text></g><g><title>PageHuge (43 samples, 0.02%)</title><rect x="64.7283%" y="437" width="0.0230%" height="15" fill="rgb(223,154,38)" fg:x="120805" fg:w="43"/><text x="64.9783%" y="447.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (110 samples, 0.06%)</title><rect x="65.8138%" y="389" width="0.0589%" height="15" fill="rgb(251,22,52)" fg:x="122831" fg:w="110"/><text x="66.0638%" y="399.50"></text></g><g><title>cgroup_rstat_updated (56 samples, 0.03%)</title><rect x="65.8428%" y="373" width="0.0300%" height="15" fill="rgb(229,209,22)" fg:x="122885" fg:w="56"/><text x="66.0928%" y="383.50"></text></g><g><title>page_counter_try_charge (47 samples, 0.03%)</title><rect x="65.9515%" y="373" width="0.0252%" height="15" fill="rgb(234,138,34)" fg:x="123088" fg:w="47"/><text x="66.2015%" y="383.50"></text></g><g><title>charge_memcg (429 samples, 0.23%)</title><rect x="65.7495%" y="405" width="0.2299%" height="15" fill="rgb(212,95,11)" fg:x="122711" fg:w="429"/><text x="65.9995%" y="415.50"></text></g><g><title>try_charge_memcg (182 samples, 0.10%)</title><rect x="65.8819%" y="389" width="0.0975%" height="15" fill="rgb(240,179,47)" fg:x="122958" fg:w="182"/><text x="66.1319%" y="399.50"></text></g><g><title>get_mem_cgroup_from_mm (105 samples, 0.06%)</title><rect x="65.9794%" y="405" width="0.0563%" height="15" fill="rgb(240,163,11)" fg:x="123140" fg:w="105"/><text x="66.2294%" y="415.50"></text></g><g><title>__mem_cgroup_charge (623 samples, 0.33%)</title><rect x="65.7249%" y="421" width="0.3338%" height="15" fill="rgb(236,37,12)" fg:x="122665" fg:w="623"/><text x="65.9749%" y="431.50"></text></g><g><title>__mod_memcg_lruvec_state (125 samples, 0.07%)</title><rect x="66.1251%" y="389" width="0.0670%" height="15" fill="rgb(232,164,16)" fg:x="123412" fg:w="125"/><text x="66.3751%" y="399.50"></text></g><g><title>cgroup_rstat_updated (41 samples, 0.02%)</title><rect x="66.1702%" y="373" width="0.0220%" height="15" fill="rgb(244,205,15)" fg:x="123496" fg:w="41"/><text x="66.4202%" y="383.50"></text></g><g><title>__mod_node_page_state (120 samples, 0.06%)</title><rect x="66.1921%" y="389" width="0.0643%" height="15" fill="rgb(223,117,47)" fg:x="123537" fg:w="120"/><text x="66.4421%" y="399.50"></text></g><g><title>__mod_lruvec_state (276 samples, 0.15%)</title><rect x="66.1117%" y="405" width="0.1479%" height="15" fill="rgb(244,107,35)" fg:x="123387" fg:w="276"/><text x="66.3617%" y="415.50"></text></g><g><title>__mod_node_page_state (21 samples, 0.01%)</title><rect x="66.2639%" y="405" width="0.0113%" height="15" fill="rgb(205,140,8)" fg:x="123671" fg:w="21"/><text x="66.5139%" y="415.50"></text></g><g><title>__mod_lruvec_page_state (410 samples, 0.22%)</title><rect x="66.0587%" y="421" width="0.2197%" height="15" fill="rgb(228,84,46)" fg:x="123288" fg:w="410"/><text x="66.3087%" y="431.50"></text></g><g><title>_raw_spin_lock_irq (395 samples, 0.21%)</title><rect x="66.2827%" y="421" width="0.2116%" height="15" fill="rgb(254,188,9)" fg:x="123706" fg:w="395"/><text x="66.5327%" y="431.50"></text></g><g><title>native_queued_spin_lock_slowpath (200 samples, 0.11%)</title><rect x="66.3872%" y="405" width="0.1072%" height="15" fill="rgb(206,112,54)" fg:x="123901" fg:w="200"/><text x="66.6372%" y="415.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (200 samples, 0.11%)</title><rect x="66.3872%" y="389" width="0.1072%" height="15" fill="rgb(216,84,49)" fg:x="123901" fg:w="200"/><text x="66.6372%" y="399.50"></text></g><g><title>__read_end_io (56 samples, 0.03%)</title><rect x="66.5029%" y="197" width="0.0300%" height="15" fill="rgb(214,194,35)" fg:x="124117" fg:w="56"/><text x="66.7529%" y="207.50"></text></g><g><title>blk_update_request (88 samples, 0.05%)</title><rect x="66.5002%" y="245" width="0.0472%" height="15" fill="rgb(249,28,3)" fg:x="124112" fg:w="88"/><text x="66.7502%" y="255.50"></text></g><g><title>bio_endio (84 samples, 0.05%)</title><rect x="66.5024%" y="229" width="0.0450%" height="15" fill="rgb(222,56,52)" fg:x="124116" fg:w="84"/><text x="66.7524%" y="239.50"></text></g><g><title>mpage_end_io (83 samples, 0.04%)</title><rect x="66.5029%" y="213" width="0.0445%" height="15" fill="rgb(245,217,50)" fg:x="124117" fg:w="83"/><text x="66.7529%" y="223.50"></text></g><g><title>unlock_page (27 samples, 0.01%)</title><rect x="66.5329%" y="197" width="0.0145%" height="15" fill="rgb(213,201,24)" fg:x="124173" fg:w="27"/><text x="66.7829%" y="207.50"></text></g><g><title>nvme_complete_rq (93 samples, 0.05%)</title><rect x="66.4981%" y="277" width="0.0498%" height="15" fill="rgb(248,116,28)" fg:x="124108" fg:w="93"/><text x="66.7481%" y="287.50"></text></g><g><title>blk_mq_end_request (92 samples, 0.05%)</title><rect x="66.4986%" y="261" width="0.0493%" height="15" fill="rgb(219,72,43)" fg:x="124109" fg:w="92"/><text x="66.7486%" y="271.50"></text></g><g><title>domain_unmap (23 samples, 0.01%)</title><rect x="66.5490%" y="149" width="0.0123%" height="15" fill="rgb(209,138,14)" fg:x="124203" fg:w="23"/><text x="66.7990%" y="159.50"></text></g><g><title>dma_pte_clear_level (23 samples, 0.01%)</title><rect x="66.5490%" y="133" width="0.0123%" height="15" fill="rgb(222,18,33)" fg:x="124203" fg:w="23"/><text x="66.7990%" y="143.50"></text></g><g><title>dma_pte_clear_level (23 samples, 0.01%)</title><rect x="66.5490%" y="117" width="0.0123%" height="15" fill="rgb(213,199,7)" fg:x="124203" fg:w="23"/><text x="66.7990%" y="127.50"></text></g><g><title>dma_pte_clear_level (22 samples, 0.01%)</title><rect x="66.5495%" y="101" width="0.0118%" height="15" fill="rgb(250,110,10)" fg:x="124204" fg:w="22"/><text x="66.7995%" y="111.50"></text></g><g><title>dma_pte_clear_level (21 samples, 0.01%)</title><rect x="66.5500%" y="85" width="0.0113%" height="15" fill="rgb(248,123,6)" fg:x="124205" fg:w="21"/><text x="66.8000%" y="95.50"></text></g><g><title>intel_iommu_unmap (26 samples, 0.01%)</title><rect x="66.5490%" y="165" width="0.0139%" height="15" fill="rgb(206,91,31)" fg:x="124203" fg:w="26"/><text x="66.7990%" y="175.50"></text></g><g><title>__iommu_dma_unmap (29 samples, 0.02%)</title><rect x="66.5479%" y="229" width="0.0155%" height="15" fill="rgb(211,154,13)" fg:x="124201" fg:w="29"/><text x="66.7979%" y="239.50"></text></g><g><title>iommu_unmap_fast (27 samples, 0.01%)</title><rect x="66.5490%" y="213" width="0.0145%" height="15" fill="rgb(225,148,7)" fg:x="124203" fg:w="27"/><text x="66.7990%" y="223.50"></text></g><g><title>__iommu_unmap (27 samples, 0.01%)</title><rect x="66.5490%" y="197" width="0.0145%" height="15" fill="rgb(220,160,43)" fg:x="124203" fg:w="27"/><text x="66.7990%" y="207.50"></text></g><g><title>intel_iommu_unmap_pages (27 samples, 0.01%)</title><rect x="66.5490%" y="181" width="0.0145%" height="15" fill="rgb(213,52,39)" fg:x="124203" fg:w="27"/><text x="66.7990%" y="191.50"></text></g><g><title>dma_unmap_sg_attrs (30 samples, 0.02%)</title><rect x="66.5479%" y="261" width="0.0161%" height="15" fill="rgb(243,137,7)" fg:x="124201" fg:w="30"/><text x="66.7979%" y="271.50"></text></g><g><title>iommu_dma_unmap_sg (30 samples, 0.02%)</title><rect x="66.5479%" y="245" width="0.0161%" height="15" fill="rgb(230,79,13)" fg:x="124201" fg:w="30"/><text x="66.7979%" y="255.50"></text></g><g><title>__handle_irq_event_percpu (132 samples, 0.07%)</title><rect x="66.4954%" y="341" width="0.0707%" height="15" fill="rgb(247,105,23)" fg:x="124103" fg:w="132"/><text x="66.7454%" y="351.50"></text></g><g><title>nvme_irq (132 samples, 0.07%)</title><rect x="66.4954%" y="325" width="0.0707%" height="15" fill="rgb(223,179,41)" fg:x="124103" fg:w="132"/><text x="66.7454%" y="335.50"></text></g><g><title>nvme_process_cq (132 samples, 0.07%)</title><rect x="66.4954%" y="309" width="0.0707%" height="15" fill="rgb(218,9,34)" fg:x="124103" fg:w="132"/><text x="66.7454%" y="319.50"></text></g><g><title>nvme_pci_complete_rq (127 samples, 0.07%)</title><rect x="66.4981%" y="293" width="0.0680%" height="15" fill="rgb(222,106,8)" fg:x="124108" fg:w="127"/><text x="66.7481%" y="303.50"></text></g><g><title>nvme_unmap_data (34 samples, 0.02%)</title><rect x="66.5479%" y="277" width="0.0182%" height="15" fill="rgb(211,220,0)" fg:x="124201" fg:w="34"/><text x="66.7979%" y="287.50"></text></g><g><title>handle_irq_event (135 samples, 0.07%)</title><rect x="66.4954%" y="357" width="0.0723%" height="15" fill="rgb(229,52,16)" fg:x="124103" fg:w="135"/><text x="66.7454%" y="367.50"></text></g><g><title>handle_edge_irq (139 samples, 0.07%)</title><rect x="66.4949%" y="373" width="0.0745%" height="15" fill="rgb(212,155,18)" fg:x="124102" fg:w="139"/><text x="66.7449%" y="383.50"></text></g><g><title>asm_common_interrupt (141 samples, 0.08%)</title><rect x="66.4943%" y="421" width="0.0755%" height="15" fill="rgb(242,21,14)" fg:x="124101" fg:w="141"/><text x="66.7443%" y="431.50"></text></g><g><title>common_interrupt (141 samples, 0.08%)</title><rect x="66.4943%" y="405" width="0.0755%" height="15" fill="rgb(222,19,48)" fg:x="124101" fg:w="141"/><text x="66.7443%" y="415.50"></text></g><g><title>__common_interrupt (141 samples, 0.08%)</title><rect x="66.4943%" y="389" width="0.0755%" height="15" fill="rgb(232,45,27)" fg:x="124101" fg:w="141"/><text x="66.7443%" y="399.50"></text></g><g><title>rcu_read_unlock_strict (27 samples, 0.01%)</title><rect x="66.5875%" y="421" width="0.0145%" height="15" fill="rgb(249,103,42)" fg:x="124275" fg:w="27"/><text x="66.8375%" y="431.50"></text></g><g><title>xas_load (946 samples, 0.51%)</title><rect x="66.7451%" y="405" width="0.5069%" height="15" fill="rgb(246,81,33)" fg:x="124569" fg:w="946"/><text x="66.9951%" y="415.50"></text></g><g><title>xas_start (175 samples, 0.09%)</title><rect x="67.1582%" y="389" width="0.0938%" height="15" fill="rgb(252,33,42)" fg:x="125340" fg:w="175"/><text x="67.4082%" y="399.50"></text></g><g><title>xa_get_order (1,221 samples, 0.65%)</title><rect x="66.6058%" y="421" width="0.6542%" height="15" fill="rgb(209,212,41)" fg:x="124309" fg:w="1221"/><text x="66.8558%" y="431.50"></text></g><g><title>xas_descend (41 samples, 0.02%)</title><rect x="67.2637%" y="421" width="0.0220%" height="15" fill="rgb(207,154,6)" fg:x="125537" fg:w="41"/><text x="67.5137%" y="431.50"></text></g><g><title>xas_descend (308 samples, 0.17%)</title><rect x="67.3693%" y="405" width="0.1650%" height="15" fill="rgb(223,64,47)" fg:x="125734" fg:w="308"/><text x="67.6193%" y="415.50"></text></g><g><title>xas_find_conflict (533 samples, 0.29%)</title><rect x="67.2857%" y="421" width="0.2856%" height="15" fill="rgb(211,161,38)" fg:x="125578" fg:w="533"/><text x="67.5357%" y="431.50"></text></g><g><title>xas_start (69 samples, 0.04%)</title><rect x="67.5343%" y="405" width="0.0370%" height="15" fill="rgb(219,138,40)" fg:x="126042" fg:w="69"/><text x="67.7843%" y="415.50"></text></g><g><title>list_lru_del (33 samples, 0.02%)</title><rect x="67.6779%" y="389" width="0.0177%" height="15" fill="rgb(241,228,46)" fg:x="126310" fg:w="33"/><text x="67.9279%" y="399.50"></text></g><g><title>workingset_update_node (50 samples, 0.03%)</title><rect x="67.6693%" y="405" width="0.0268%" height="15" fill="rgb(223,209,38)" fg:x="126294" fg:w="50"/><text x="67.9193%" y="415.50"></text></g><g><title>__add_to_page_cache_locked (5,546 samples, 2.97%)</title><rect x="64.7513%" y="437" width="2.9716%" height="15" fill="rgb(236,164,45)" fg:x="120848" fg:w="5546"/><text x="65.0013%" y="447.50">__a..</text></g><g><title>xas_store (250 samples, 0.13%)</title><rect x="67.5890%" y="421" width="0.1340%" height="15" fill="rgb(231,15,5)" fg:x="126144" fg:w="250"/><text x="67.8390%" y="431.50"></text></g><g><title>xas_create (50 samples, 0.03%)</title><rect x="67.6961%" y="405" width="0.0268%" height="15" fill="rgb(252,35,15)" fg:x="126344" fg:w="50"/><text x="67.9461%" y="415.50"></text></g><g><title>_raw_spin_lock_irq (19 samples, 0.01%)</title><rect x="67.7358%" y="437" width="0.0102%" height="15" fill="rgb(248,181,18)" fg:x="126418" fg:w="19"/><text x="67.9858%" y="447.50"></text></g><g><title>blk_update_request (21 samples, 0.01%)</title><rect x="67.8746%" y="213" width="0.0113%" height="15" fill="rgb(233,39,42)" fg:x="126677" fg:w="21"/><text x="68.1246%" y="223.50"></text></g><g><title>bio_endio (21 samples, 0.01%)</title><rect x="67.8746%" y="197" width="0.0113%" height="15" fill="rgb(238,110,33)" fg:x="126677" fg:w="21"/><text x="68.1246%" y="207.50"></text></g><g><title>mpage_end_io (19 samples, 0.01%)</title><rect x="67.8756%" y="181" width="0.0102%" height="15" fill="rgb(233,195,10)" fg:x="126679" fg:w="19"/><text x="68.1256%" y="191.50"></text></g><g><title>nvme_complete_rq (24 samples, 0.01%)</title><rect x="67.8735%" y="245" width="0.0129%" height="15" fill="rgb(254,105,3)" fg:x="126675" fg:w="24"/><text x="68.1235%" y="255.50"></text></g><g><title>blk_mq_end_request (24 samples, 0.01%)</title><rect x="67.8735%" y="229" width="0.0129%" height="15" fill="rgb(221,225,9)" fg:x="126675" fg:w="24"/><text x="68.1235%" y="239.50"></text></g><g><title>asm_common_interrupt (38 samples, 0.02%)</title><rect x="67.8719%" y="389" width="0.0204%" height="15" fill="rgb(224,227,45)" fg:x="126672" fg:w="38"/><text x="68.1219%" y="399.50"></text></g><g><title>common_interrupt (38 samples, 0.02%)</title><rect x="67.8719%" y="373" width="0.0204%" height="15" fill="rgb(229,198,43)" fg:x="126672" fg:w="38"/><text x="68.1219%" y="383.50"></text></g><g><title>__common_interrupt (38 samples, 0.02%)</title><rect x="67.8719%" y="357" width="0.0204%" height="15" fill="rgb(206,209,35)" fg:x="126672" fg:w="38"/><text x="68.1219%" y="367.50"></text></g><g><title>handle_edge_irq (38 samples, 0.02%)</title><rect x="67.8719%" y="341" width="0.0204%" height="15" fill="rgb(245,195,53)" fg:x="126672" fg:w="38"/><text x="68.1219%" y="351.50"></text></g><g><title>handle_irq_event (38 samples, 0.02%)</title><rect x="67.8719%" y="325" width="0.0204%" height="15" fill="rgb(240,92,26)" fg:x="126672" fg:w="38"/><text x="68.1219%" y="335.50"></text></g><g><title>__handle_irq_event_percpu (38 samples, 0.02%)</title><rect x="67.8719%" y="309" width="0.0204%" height="15" fill="rgb(207,40,23)" fg:x="126672" fg:w="38"/><text x="68.1219%" y="319.50"></text></g><g><title>nvme_irq (38 samples, 0.02%)</title><rect x="67.8719%" y="293" width="0.0204%" height="15" fill="rgb(223,111,35)" fg:x="126672" fg:w="38"/><text x="68.1219%" y="303.50"></text></g><g><title>nvme_process_cq (38 samples, 0.02%)</title><rect x="67.8719%" y="277" width="0.0204%" height="15" fill="rgb(229,147,28)" fg:x="126672" fg:w="38"/><text x="68.1219%" y="287.50"></text></g><g><title>nvme_pci_complete_rq (35 samples, 0.02%)</title><rect x="67.8735%" y="261" width="0.0188%" height="15" fill="rgb(211,29,28)" fg:x="126675" fg:w="35"/><text x="68.1235%" y="271.50"></text></g><g><title>__lock_text_start (44 samples, 0.02%)</title><rect x="67.8708%" y="405" width="0.0236%" height="15" fill="rgb(228,72,33)" fg:x="126670" fg:w="44"/><text x="68.1208%" y="415.50"></text></g><g><title>__mod_memcg_lruvec_state (121 samples, 0.06%)</title><rect x="68.2009%" y="373" width="0.0648%" height="15" fill="rgb(205,214,31)" fg:x="127286" fg:w="121"/><text x="68.4509%" y="383.50"></text></g><g><title>cgroup_rstat_updated (34 samples, 0.02%)</title><rect x="68.2475%" y="357" width="0.0182%" height="15" fill="rgb(224,111,15)" fg:x="127373" fg:w="34"/><text x="68.4975%" y="367.50"></text></g><g><title>__mod_node_page_state (45 samples, 0.02%)</title><rect x="68.2657%" y="373" width="0.0241%" height="15" fill="rgb(253,21,26)" fg:x="127407" fg:w="45"/><text x="68.5157%" y="383.50"></text></g><g><title>__mod_lruvec_state (196 samples, 0.11%)</title><rect x="68.1869%" y="389" width="0.1050%" height="15" fill="rgb(245,139,43)" fg:x="127260" fg:w="196"/><text x="68.4369%" y="399.50"></text></g><g><title>__mod_node_page_state (20 samples, 0.01%)</title><rect x="68.2957%" y="389" width="0.0107%" height="15" fill="rgb(252,170,7)" fg:x="127463" fg:w="20"/><text x="68.5457%" y="399.50"></text></g><g><title>__mod_zone_page_state (58 samples, 0.03%)</title><rect x="68.3064%" y="389" width="0.0311%" height="15" fill="rgb(231,118,14)" fg:x="127483" fg:w="58"/><text x="68.5564%" y="399.50"></text></g><g><title>mem_cgroup_update_lru_size (48 samples, 0.03%)</title><rect x="68.3375%" y="389" width="0.0257%" height="15" fill="rgb(238,83,0)" fg:x="127541" fg:w="48"/><text x="68.5875%" y="399.50"></text></g><g><title>__pagevec_lru_add_fn (965 samples, 0.52%)</title><rect x="67.9051%" y="405" width="0.5171%" height="15" fill="rgb(221,39,39)" fg:x="126734" fg:w="965"/><text x="68.1551%" y="415.50"></text></g><g><title>page_mapping (110 samples, 0.06%)</title><rect x="68.3632%" y="389" width="0.0589%" height="15" fill="rgb(222,119,46)" fg:x="127589" fg:w="110"/><text x="68.6132%" y="399.50"></text></g><g><title>_raw_spin_lock_irqsave (67 samples, 0.04%)</title><rect x="68.4339%" y="389" width="0.0359%" height="15" fill="rgb(222,165,49)" fg:x="127721" fg:w="67"/><text x="68.6839%" y="399.50"></text></g><g><title>native_queued_spin_lock_slowpath (38 samples, 0.02%)</title><rect x="68.4495%" y="373" width="0.0204%" height="15" fill="rgb(219,113,52)" fg:x="127750" fg:w="38"/><text x="68.6995%" y="383.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (38 samples, 0.02%)</title><rect x="68.4495%" y="357" width="0.0204%" height="15" fill="rgb(214,7,15)" fg:x="127750" fg:w="38"/><text x="68.6995%" y="367.50"></text></g><g><title>lock_page_lruvec_irqsave (88 samples, 0.05%)</title><rect x="68.4232%" y="405" width="0.0472%" height="15" fill="rgb(235,32,4)" fg:x="127701" fg:w="88"/><text x="68.6732%" y="415.50"></text></g><g><title>page_mapping (20 samples, 0.01%)</title><rect x="68.4773%" y="405" width="0.0107%" height="15" fill="rgb(238,90,54)" fg:x="127802" fg:w="20"/><text x="68.7273%" y="415.50"></text></g><g><title>__pagevec_lru_add (1,375 samples, 0.74%)</title><rect x="67.8344%" y="421" width="0.7367%" height="15" fill="rgb(213,208,19)" fg:x="126602" fg:w="1375"/><text x="68.0844%" y="431.50"></text></g><g><title>release_pages (151 samples, 0.08%)</title><rect x="68.4902%" y="405" width="0.0809%" height="15" fill="rgb(233,156,4)" fg:x="127826" fg:w="151"/><text x="68.7402%" y="415.50"></text></g><g><title>lru_cache_add (1,554 samples, 0.83%)</title><rect x="67.7481%" y="437" width="0.8326%" height="15" fill="rgb(207,194,5)" fg:x="126441" fg:w="1554"/><text x="67.9981%" y="447.50"></text></g><g><title>mem_cgroup_flush_stats (24 samples, 0.01%)</title><rect x="68.5808%" y="437" width="0.0129%" height="15" fill="rgb(206,111,30)" fg:x="127995" fg:w="24"/><text x="68.8308%" y="447.50"></text></g><g><title>__read_end_io (20 samples, 0.01%)</title><rect x="68.7736%" y="149" width="0.0107%" height="15" fill="rgb(243,70,54)" fg:x="128355" fg:w="20"/><text x="69.0236%" y="159.50"></text></g><g><title>blk_update_request (32 samples, 0.02%)</title><rect x="68.7715%" y="197" width="0.0171%" height="15" fill="rgb(242,28,8)" fg:x="128351" fg:w="32"/><text x="69.0215%" y="207.50"></text></g><g><title>bio_endio (29 samples, 0.02%)</title><rect x="68.7731%" y="181" width="0.0155%" height="15" fill="rgb(219,106,18)" fg:x="128354" fg:w="29"/><text x="69.0231%" y="191.50"></text></g><g><title>mpage_end_io (28 samples, 0.02%)</title><rect x="68.7736%" y="165" width="0.0150%" height="15" fill="rgb(244,222,10)" fg:x="128355" fg:w="28"/><text x="69.0236%" y="175.50"></text></g><g><title>nvme_complete_rq (33 samples, 0.02%)</title><rect x="68.7715%" y="229" width="0.0177%" height="15" fill="rgb(236,179,52)" fg:x="128351" fg:w="33"/><text x="69.0215%" y="239.50"></text></g><g><title>blk_mq_end_request (33 samples, 0.02%)</title><rect x="68.7715%" y="213" width="0.0177%" height="15" fill="rgb(213,23,39)" fg:x="128351" fg:w="33"/><text x="69.0215%" y="223.50"></text></g><g><title>nvme_irq (50 samples, 0.03%)</title><rect x="68.7704%" y="277" width="0.0268%" height="15" fill="rgb(238,48,10)" fg:x="128349" fg:w="50"/><text x="69.0204%" y="287.50"></text></g><g><title>nvme_process_cq (50 samples, 0.03%)</title><rect x="68.7704%" y="261" width="0.0268%" height="15" fill="rgb(251,196,23)" fg:x="128349" fg:w="50"/><text x="69.0204%" y="271.50"></text></g><g><title>nvme_pci_complete_rq (48 samples, 0.03%)</title><rect x="68.7715%" y="245" width="0.0257%" height="15" fill="rgb(250,152,24)" fg:x="128351" fg:w="48"/><text x="69.0215%" y="255.50"></text></g><g><title>asm_common_interrupt (52 samples, 0.03%)</title><rect x="68.7699%" y="373" width="0.0279%" height="15" fill="rgb(209,150,17)" fg:x="128348" fg:w="52"/><text x="69.0199%" y="383.50"></text></g><g><title>common_interrupt (52 samples, 0.03%)</title><rect x="68.7699%" y="357" width="0.0279%" height="15" fill="rgb(234,202,34)" fg:x="128348" fg:w="52"/><text x="69.0199%" y="367.50"></text></g><g><title>__common_interrupt (52 samples, 0.03%)</title><rect x="68.7699%" y="341" width="0.0279%" height="15" fill="rgb(253,148,53)" fg:x="128348" fg:w="52"/><text x="69.0199%" y="351.50"></text></g><g><title>handle_edge_irq (51 samples, 0.03%)</title><rect x="68.7704%" y="325" width="0.0273%" height="15" fill="rgb(218,129,16)" fg:x="128349" fg:w="51"/><text x="69.0204%" y="335.50"></text></g><g><title>handle_irq_event (51 samples, 0.03%)</title><rect x="68.7704%" y="309" width="0.0273%" height="15" fill="rgb(216,85,19)" fg:x="128349" fg:w="51"/><text x="69.0204%" y="319.50"></text></g><g><title>__handle_irq_event_percpu (51 samples, 0.03%)</title><rect x="68.7704%" y="293" width="0.0273%" height="15" fill="rgb(235,228,7)" fg:x="128349" fg:w="51"/><text x="69.0204%" y="303.50"></text></g><g><title>__lock_text_start (56 samples, 0.03%)</title><rect x="68.7688%" y="389" width="0.0300%" height="15" fill="rgb(245,175,0)" fg:x="128346" fg:w="56"/><text x="69.0188%" y="399.50"></text></g><g><title>_raw_spin_lock (57 samples, 0.03%)</title><rect x="68.8020%" y="373" width="0.0305%" height="15" fill="rgb(208,168,36)" fg:x="128408" fg:w="57"/><text x="69.0520%" y="383.50"></text></g><g><title>_find_first_bit (22 samples, 0.01%)</title><rect x="68.9012%" y="357" width="0.0118%" height="15" fill="rgb(246,171,24)" fg:x="128593" fg:w="22"/><text x="69.1512%" y="367.50"></text></g><g><title>_find_next_bit (84 samples, 0.05%)</title><rect x="68.9130%" y="357" width="0.0450%" height="15" fill="rgb(215,142,24)" fg:x="128615" fg:w="84"/><text x="69.1630%" y="367.50"></text></g><g><title>blkcg_rstat_flush (45 samples, 0.02%)</title><rect x="68.9580%" y="357" width="0.0241%" height="15" fill="rgb(250,187,7)" fg:x="128699" fg:w="45"/><text x="69.2080%" y="367.50"></text></g><g><title>mem_cgroup_css_rstat_flush (944 samples, 0.51%)</title><rect x="68.9821%" y="357" width="0.5058%" height="15" fill="rgb(228,66,33)" fg:x="128744" fg:w="944"/><text x="69.2321%" y="367.50"></text></g><g><title>cgroup_rstat_flush_locked (1,216 samples, 0.65%)</title><rect x="68.8369%" y="373" width="0.6515%" height="15" fill="rgb(234,215,21)" fg:x="128473" fg:w="1216"/><text x="69.0869%" y="383.50"></text></g><g><title>cgroup_rstat_flush_irqsafe (1,290 samples, 0.69%)</title><rect x="68.8020%" y="389" width="0.6912%" height="15" fill="rgb(222,191,20)" fg:x="128408" fg:w="1290"/><text x="69.0520%" y="399.50"></text></g><g><title>__mem_cgroup_flush_stats (1,361 samples, 0.73%)</title><rect x="68.7645%" y="405" width="0.7292%" height="15" fill="rgb(245,79,54)" fg:x="128338" fg:w="1361"/><text x="69.0145%" y="415.50"></text></g><g><title>mem_cgroup_flush_stats (1,362 samples, 0.73%)</title><rect x="68.7645%" y="421" width="0.7298%" height="15" fill="rgb(240,10,37)" fg:x="128338" fg:w="1362"/><text x="69.0145%" y="431.50"></text></g><g><title>idr_find (268 samples, 0.14%)</title><rect x="69.4986%" y="405" width="0.1436%" height="15" fill="rgb(214,192,32)" fg:x="129708" fg:w="268"/><text x="69.7486%" y="415.50"></text></g><g><title>radix_tree_lookup (245 samples, 0.13%)</title><rect x="69.5109%" y="389" width="0.1313%" height="15" fill="rgb(209,36,54)" fg:x="129731" fg:w="245"/><text x="69.7609%" y="399.50"></text></g><g><title>__radix_tree_lookup (239 samples, 0.13%)</title><rect x="69.5141%" y="373" width="0.1281%" height="15" fill="rgb(220,10,11)" fg:x="129737" fg:w="239"/><text x="69.7641%" y="383.50"></text></g><g><title>mem_cgroup_from_id (287 samples, 0.15%)</title><rect x="69.4943%" y="421" width="0.1538%" height="15" fill="rgb(221,106,17)" fg:x="129700" fg:w="287"/><text x="69.7443%" y="431.50"></text></g><g><title>mem_cgroup_get_nr_swap_pages (101 samples, 0.05%)</title><rect x="69.6481%" y="421" width="0.0541%" height="15" fill="rgb(251,142,44)" fg:x="129987" fg:w="101"/><text x="69.8981%" y="431.50"></text></g><g><title>__mod_memcg_lruvec_state (129 samples, 0.07%)</title><rect x="69.7504%" y="389" width="0.0691%" height="15" fill="rgb(238,13,15)" fg:x="130178" fg:w="129"/><text x="70.0004%" y="399.50"></text></g><g><title>cgroup_rstat_updated (37 samples, 0.02%)</title><rect x="69.7997%" y="373" width="0.0198%" height="15" fill="rgb(208,107,27)" fg:x="130270" fg:w="37"/><text x="70.0497%" y="383.50"></text></g><g><title>__mod_node_page_state (57 samples, 0.03%)</title><rect x="69.8195%" y="389" width="0.0305%" height="15" fill="rgb(205,136,37)" fg:x="130307" fg:w="57"/><text x="70.0695%" y="399.50"></text></g><g><title>__mod_lruvec_state (221 samples, 0.12%)</title><rect x="69.7365%" y="405" width="0.1184%" height="15" fill="rgb(250,205,27)" fg:x="130152" fg:w="221"/><text x="69.9865%" y="415.50"></text></g><g><title>mod_lruvec_state.constprop.0 (318 samples, 0.17%)</title><rect x="69.7022%" y="421" width="0.1704%" height="15" fill="rgb(210,80,43)" fg:x="130088" fg:w="318"/><text x="69.9522%" y="431.50"></text></g><g><title>workingset_refault (2,364 samples, 1.27%)</title><rect x="68.6156%" y="437" width="1.2667%" height="15" fill="rgb(247,160,36)" fg:x="128060" fg:w="2364"/><text x="68.8656%" y="447.50"></text></g><g><title>xa_get_order (25 samples, 0.01%)</title><rect x="69.8822%" y="437" width="0.0134%" height="15" fill="rgb(234,13,49)" fg:x="130424" fg:w="25"/><text x="70.1322%" y="447.50"></text></g><g><title>add_to_page_cache_lru (9,784 samples, 5.24%)</title><rect x="64.6747%" y="453" width="5.2423%" height="15" fill="rgb(234,122,0)" fg:x="120705" fg:w="9784"/><text x="64.9247%" y="463.50">add_to..</text></g><g><title>__blk_bios_map_sg (34 samples, 0.02%)</title><rect x="69.9503%" y="293" width="0.0182%" height="15" fill="rgb(207,146,38)" fg:x="130551" fg:w="34"/><text x="70.2003%" y="303.50"></text></g><g><title>__blk_rq_map_sg (40 samples, 0.02%)</title><rect x="69.9497%" y="309" width="0.0214%" height="15" fill="rgb(207,177,25)" fg:x="130550" fg:w="40"/><text x="70.1997%" y="319.50"></text></g><g><title>iommu_dma_alloc_iova (34 samples, 0.02%)</title><rect x="69.9883%" y="261" width="0.0182%" height="15" fill="rgb(211,178,42)" fg:x="130622" fg:w="34"/><text x="70.2383%" y="271.50"></text></g><g><title>alloc_iova_fast (31 samples, 0.02%)</title><rect x="69.9899%" y="245" width="0.0166%" height="15" fill="rgb(230,69,54)" fg:x="130625" fg:w="31"/><text x="70.2399%" y="255.50"></text></g><g><title>alloc_iova (26 samples, 0.01%)</title><rect x="69.9926%" y="229" width="0.0139%" height="15" fill="rgb(214,135,41)" fg:x="130630" fg:w="26"/><text x="70.2426%" y="239.50"></text></g><g><title>clflush_cache_range (249 samples, 0.13%)</title><rect x="70.1769%" y="181" width="0.1334%" height="15" fill="rgb(237,67,25)" fg:x="130974" fg:w="249"/><text x="70.4269%" y="191.50"></text></g><g><title>__domain_mapping (535 samples, 0.29%)</title><rect x="70.0435%" y="197" width="0.2867%" height="15" fill="rgb(222,189,50)" fg:x="130725" fg:w="535"/><text x="70.2935%" y="207.50"></text></g><g><title>pfn_to_dma_pte (37 samples, 0.02%)</title><rect x="70.3103%" y="181" width="0.0198%" height="15" fill="rgb(245,148,34)" fg:x="131223" fg:w="37"/><text x="70.5603%" y="191.50"></text></g><g><title>intel_iommu_map_pages (565 samples, 0.30%)</title><rect x="70.0344%" y="213" width="0.3027%" height="15" fill="rgb(222,29,6)" fg:x="130708" fg:w="565"/><text x="70.2844%" y="223.50"></text></g><g><title>__iommu_map (621 samples, 0.33%)</title><rect x="70.0135%" y="229" width="0.3327%" height="15" fill="rgb(221,189,43)" fg:x="130669" fg:w="621"/><text x="70.2635%" y="239.50"></text></g><g><title>__iommu_map_sg (641 samples, 0.34%)</title><rect x="70.0076%" y="245" width="0.3435%" height="15" fill="rgb(207,36,27)" fg:x="130658" fg:w="641"/><text x="70.2576%" y="255.50"></text></g><g><title>iommu_dma_map_sg (703 samples, 0.38%)</title><rect x="69.9755%" y="277" width="0.3767%" height="15" fill="rgb(217,90,24)" fg:x="130598" fg:w="703"/><text x="70.2255%" y="287.50"></text></g><g><title>iommu_map_sg_atomic (644 samples, 0.35%)</title><rect x="70.0071%" y="261" width="0.3451%" height="15" fill="rgb(224,66,35)" fg:x="130657" fg:w="644"/><text x="70.2571%" y="271.50"></text></g><g><title>__dma_map_sg_attrs (710 samples, 0.38%)</title><rect x="69.9749%" y="293" width="0.3804%" height="15" fill="rgb(221,13,50)" fg:x="130597" fg:w="710"/><text x="70.2249%" y="303.50"></text></g><g><title>dma_map_sg_attrs (711 samples, 0.38%)</title><rect x="69.9749%" y="309" width="0.3810%" height="15" fill="rgb(236,68,49)" fg:x="130597" fg:w="711"/><text x="70.2249%" y="319.50"></text></g><g><title>nvme_pci_setup_prps (41 samples, 0.02%)</title><rect x="70.3634%" y="309" width="0.0220%" height="15" fill="rgb(229,146,28)" fg:x="131322" fg:w="41"/><text x="70.6134%" y="319.50"></text></g><g><title>nvme_map_data (817 samples, 0.44%)</title><rect x="69.9481%" y="325" width="0.4378%" height="15" fill="rgb(225,31,38)" fg:x="130547" fg:w="817"/><text x="70.1981%" y="335.50"></text></g><g><title>blk_mq_try_issue_list_directly (833 samples, 0.45%)</title><rect x="69.9433%" y="373" width="0.4463%" height="15" fill="rgb(250,208,3)" fg:x="130538" fg:w="833"/><text x="70.1933%" y="383.50"></text></g><g><title>__blk_mq_try_issue_directly (830 samples, 0.44%)</title><rect x="69.9449%" y="357" width="0.4447%" height="15" fill="rgb(246,54,23)" fg:x="130541" fg:w="830"/><text x="70.1949%" y="367.50"></text></g><g><title>nvme_queue_rq (829 samples, 0.44%)</title><rect x="69.9455%" y="341" width="0.4442%" height="15" fill="rgb(243,76,11)" fg:x="130542" fg:w="829"/><text x="70.1955%" y="351.50"></text></g><g><title>blk_flush_plug_list (836 samples, 0.45%)</title><rect x="69.9433%" y="421" width="0.4479%" height="15" fill="rgb(245,21,50)" fg:x="130538" fg:w="836"/><text x="70.1933%" y="431.50"></text></g><g><title>blk_mq_flush_plug_list (836 samples, 0.45%)</title><rect x="69.9433%" y="405" width="0.4479%" height="15" fill="rgb(228,9,43)" fg:x="130538" fg:w="836"/><text x="70.1933%" y="415.50"></text></g><g><title>blk_mq_sched_insert_requests (836 samples, 0.45%)</title><rect x="69.9433%" y="389" width="0.4479%" height="15" fill="rgb(208,100,47)" fg:x="130538" fg:w="836"/><text x="70.1933%" y="399.50"></text></g><g><title>blk_finish_plug (837 samples, 0.45%)</title><rect x="69.9433%" y="437" width="0.4485%" height="15" fill="rgb(232,26,8)" fg:x="130538" fg:w="837"/><text x="70.1933%" y="447.50"></text></g><g><title>bio_add_page (167 samples, 0.09%)</title><rect x="70.8285%" y="405" width="0.0895%" height="15" fill="rgb(216,166,38)" fg:x="132190" fg:w="167"/><text x="71.0785%" y="415.50"></text></g><g><title>__bio_try_merge_page (92 samples, 0.05%)</title><rect x="70.8687%" y="389" width="0.0493%" height="15" fill="rgb(251,202,51)" fg:x="132265" fg:w="92"/><text x="71.1187%" y="399.50"></text></g><g><title>bio_alloc_bioset (31 samples, 0.02%)</title><rect x="70.9179%" y="405" width="0.0166%" height="15" fill="rgb(254,216,34)" fg:x="132357" fg:w="31"/><text x="71.1679%" y="415.50"></text></g><g><title>__check_block_validity.constprop.0 (20 samples, 0.01%)</title><rect x="70.9453%" y="389" width="0.0107%" height="15" fill="rgb(251,32,27)" fg:x="132408" fg:w="20"/><text x="71.1953%" y="399.50"></text></g><g><title>ext4_es_lookup_extent (42 samples, 0.02%)</title><rect x="70.9640%" y="389" width="0.0225%" height="15" fill="rgb(208,127,28)" fg:x="132443" fg:w="42"/><text x="71.2140%" y="399.50"></text></g><g><title>ext4_map_blocks (99 samples, 0.05%)</title><rect x="70.9399%" y="405" width="0.0530%" height="15" fill="rgb(224,137,22)" fg:x="132398" fg:w="99"/><text x="71.1899%" y="415.50"></text></g><g><title>fscrypt_mergeable_bio (66 samples, 0.04%)</title><rect x="70.9930%" y="405" width="0.0354%" height="15" fill="rgb(254,70,32)" fg:x="132497" fg:w="66"/><text x="71.2430%" y="415.50"></text></g><g><title>blk_bio_segment_split (111 samples, 0.06%)</title><rect x="71.0519%" y="325" width="0.0595%" height="15" fill="rgb(229,75,37)" fg:x="132607" fg:w="111"/><text x="71.3019%" y="335.50"></text></g><g><title>__blk_queue_split (116 samples, 0.06%)</title><rect x="71.0503%" y="341" width="0.0622%" height="15" fill="rgb(252,64,23)" fg:x="132604" fg:w="116"/><text x="71.3003%" y="351.50"></text></g><g><title>__blk_bios_map_sg (65 samples, 0.03%)</title><rect x="71.1424%" y="213" width="0.0348%" height="15" fill="rgb(232,162,48)" fg:x="132776" fg:w="65"/><text x="71.3924%" y="223.50"></text></g><g><title>__blk_rq_map_sg (72 samples, 0.04%)</title><rect x="71.1424%" y="229" width="0.0386%" height="15" fill="rgb(246,160,12)" fg:x="132776" fg:w="72"/><text x="71.3924%" y="239.50"></text></g><g><title>iommu_dma_alloc_iova (27 samples, 0.01%)</title><rect x="71.2019%" y="181" width="0.0145%" height="15" fill="rgb(247,166,0)" fg:x="132887" fg:w="27"/><text x="71.4519%" y="191.50"></text></g><g><title>alloc_iova_fast (24 samples, 0.01%)</title><rect x="71.2035%" y="165" width="0.0129%" height="15" fill="rgb(249,219,21)" fg:x="132890" fg:w="24"/><text x="71.4535%" y="175.50"></text></g><g><title>alloc_iova (24 samples, 0.01%)</title><rect x="71.2035%" y="149" width="0.0129%" height="15" fill="rgb(205,209,3)" fg:x="132890" fg:w="24"/><text x="71.4535%" y="159.50"></text></g><g><title>clflush_cache_range (712 samples, 0.38%)</title><rect x="71.5941%" y="101" width="0.3815%" height="15" fill="rgb(243,44,1)" fg:x="133619" fg:w="712"/><text x="71.8441%" y="111.50"></text></g><g><title>__domain_mapping (1,347 samples, 0.72%)</title><rect x="71.3005%" y="117" width="0.7217%" height="15" fill="rgb(206,159,16)" fg:x="133071" fg:w="1347"/><text x="71.5505%" y="127.50"></text></g><g><title>pfn_to_dma_pte (87 samples, 0.05%)</title><rect x="71.9756%" y="101" width="0.0466%" height="15" fill="rgb(244,77,30)" fg:x="134331" fg:w="87"/><text x="72.2256%" y="111.50"></text></g><g><title>clflush_cache_range (38 samples, 0.02%)</title><rect x="72.0222%" y="117" width="0.0204%" height="15" fill="rgb(218,69,12)" fg:x="134418" fg:w="38"/><text x="72.2722%" y="127.50"></text></g><g><title>intel_iommu_map_pages (1,423 samples, 0.76%)</title><rect x="71.2828%" y="133" width="0.7625%" height="15" fill="rgb(212,87,7)" fg:x="133038" fg:w="1423"/><text x="71.5328%" y="143.50"></text></g><g><title>__iommu_map (1,548 samples, 0.83%)</title><rect x="71.2357%" y="149" width="0.8294%" height="15" fill="rgb(245,114,25)" fg:x="132950" fg:w="1548"/><text x="71.4857%" y="159.50"></text></g><g><title>iommu_pgsize (37 samples, 0.02%)</title><rect x="72.0453%" y="133" width="0.0198%" height="15" fill="rgb(210,61,42)" fg:x="134461" fg:w="37"/><text x="72.2953%" y="143.50"></text></g><g><title>__iommu_map_sg (1,599 samples, 0.86%)</title><rect x="71.2185%" y="165" width="0.8568%" height="15" fill="rgb(211,52,33)" fg:x="132918" fg:w="1599"/><text x="71.4685%" y="175.50"></text></g><g><title>iommu_dma_map_sg (1,671 samples, 0.90%)</title><rect x="71.1826%" y="197" width="0.8953%" height="15" fill="rgb(234,58,33)" fg:x="132851" fg:w="1671"/><text x="71.4326%" y="207.50"></text></g><g><title>iommu_map_sg_atomic (1,607 samples, 0.86%)</title><rect x="71.2169%" y="181" width="0.8610%" height="15" fill="rgb(220,115,36)" fg:x="132915" fg:w="1607"/><text x="71.4669%" y="191.50"></text></g><g><title>dma_map_sg_attrs (1,689 samples, 0.90%)</title><rect x="71.1821%" y="229" width="0.9050%" height="15" fill="rgb(243,153,54)" fg:x="132850" fg:w="1689"/><text x="71.4321%" y="239.50"></text></g><g><title>__dma_map_sg_attrs (1,689 samples, 0.90%)</title><rect x="71.1821%" y="213" width="0.9050%" height="15" fill="rgb(251,47,18)" fg:x="132850" fg:w="1689"/><text x="71.4321%" y="223.50"></text></g><g><title>nvme_map_data (1,806 samples, 0.97%)</title><rect x="71.1398%" y="245" width="0.9677%" height="15" fill="rgb(242,102,42)" fg:x="132771" fg:w="1806"/><text x="71.3898%" y="255.50"></text></g><g><title>nvme_pci_setup_prps (24 samples, 0.01%)</title><rect x="72.0946%" y="229" width="0.0129%" height="15" fill="rgb(234,31,38)" fg:x="134553" fg:w="24"/><text x="72.3446%" y="239.50"></text></g><g><title>__blk_mq_try_issue_directly (1,829 samples, 0.98%)</title><rect x="71.1323%" y="277" width="0.9800%" height="15" fill="rgb(221,117,51)" fg:x="132757" fg:w="1829"/><text x="71.3823%" y="287.50"></text></g><g><title>nvme_queue_rq (1,825 samples, 0.98%)</title><rect x="71.1344%" y="261" width="0.9778%" height="15" fill="rgb(212,20,18)" fg:x="132761" fg:w="1825"/><text x="71.3844%" y="271.50"></text></g><g><title>blk_flush_plug_list (1,833 samples, 0.98%)</title><rect x="71.1312%" y="341" width="0.9821%" height="15" fill="rgb(245,133,36)" fg:x="132755" fg:w="1833"/><text x="71.3812%" y="351.50"></text></g><g><title>blk_mq_flush_plug_list (1,833 samples, 0.98%)</title><rect x="71.1312%" y="325" width="0.9821%" height="15" fill="rgb(212,6,19)" fg:x="132755" fg:w="1833"/><text x="71.3812%" y="335.50"></text></g><g><title>blk_mq_sched_insert_requests (1,832 samples, 0.98%)</title><rect x="71.1317%" y="309" width="0.9816%" height="15" fill="rgb(218,1,36)" fg:x="132756" fg:w="1832"/><text x="71.3817%" y="319.50"></text></g><g><title>blk_mq_try_issue_list_directly (1,832 samples, 0.98%)</title><rect x="71.1317%" y="293" width="0.9816%" height="15" fill="rgb(246,84,54)" fg:x="132756" fg:w="1832"/><text x="71.3817%" y="303.50"></text></g><g><title>blk_mq_submit_bio (2,008 samples, 1.08%)</title><rect x="71.0390%" y="357" width="1.0759%" height="15" fill="rgb(242,110,6)" fg:x="132583" fg:w="2008"/><text x="71.2890%" y="367.50"></text></g><g><title>__submit_bio (2,029 samples, 1.09%)</title><rect x="71.0369%" y="373" width="1.0872%" height="15" fill="rgb(214,47,5)" fg:x="132579" fg:w="2029"/><text x="71.2869%" y="383.50"></text></g><g><title>submit_bio (2,040 samples, 1.09%)</title><rect x="71.0315%" y="405" width="1.0930%" height="15" fill="rgb(218,159,25)" fg:x="132569" fg:w="2040"/><text x="71.2815%" y="415.50"></text></g><g><title>submit_bio_noacct (2,036 samples, 1.09%)</title><rect x="71.0337%" y="389" width="1.0909%" height="15" fill="rgb(215,211,28)" fg:x="132573" fg:w="2036"/><text x="71.2837%" y="399.50"></text></g><g><title>xas_load (307 samples, 0.16%)</title><rect x="72.1503%" y="389" width="0.1645%" height="15" fill="rgb(238,59,32)" fg:x="134657" fg:w="307"/><text x="72.4003%" y="399.50"></text></g><g><title>xas_start (80 samples, 0.04%)</title><rect x="72.2719%" y="373" width="0.0429%" height="15" fill="rgb(226,82,3)" fg:x="134884" fg:w="80"/><text x="72.5219%" y="383.50"></text></g><g><title>xa_load (359 samples, 0.19%)</title><rect x="72.1251%" y="405" width="0.1924%" height="15" fill="rgb(240,164,32)" fg:x="134610" fg:w="359"/><text x="72.3751%" y="415.50"></text></g><g><title>ext4_mpage_readpages (3,593 samples, 1.93%)</title><rect x="70.3971%" y="421" width="1.9252%" height="15" fill="rgb(232,46,7)" fg:x="131385" fg:w="3593"/><text x="70.6471%" y="431.50">e..</text></g><g><title>read_pages (4,457 samples, 2.39%)</title><rect x="69.9428%" y="453" width="2.3881%" height="15" fill="rgb(229,129,53)" fg:x="130537" fg:w="4457"/><text x="70.1928%" y="463.50">re..</text></g><g><title>ext4_readahead (3,617 samples, 1.94%)</title><rect x="70.3929%" y="437" width="1.9380%" height="15" fill="rgb(234,188,29)" fg:x="131377" fg:w="3617"/><text x="70.6429%" y="447.50">e..</text></g><g><title>xas_load (573 samples, 0.31%)</title><rect x="72.3636%" y="437" width="0.3070%" height="15" fill="rgb(246,141,4)" fg:x="135055" fg:w="573"/><text x="72.6136%" y="447.50"></text></g><g><title>xas_start (100 samples, 0.05%)</title><rect x="72.6170%" y="421" width="0.0536%" height="15" fill="rgb(229,23,39)" fg:x="135528" fg:w="100"/><text x="72.8670%" y="431.50"></text></g><g><title>xa_load (639 samples, 0.34%)</title><rect x="72.3325%" y="453" width="0.3424%" height="15" fill="rgb(206,12,3)" fg:x="134997" fg:w="639"/><text x="72.5825%" y="463.50"></text></g><g><title>page_cache_ra_unbounded (20,231 samples, 10.84%)</title><rect x="61.8387%" y="469" width="10.8399%" height="15" fill="rgb(252,226,20)" fg:x="115412" fg:w="20231"/><text x="62.0887%" y="479.50">page_cache_ra_un..</text></g><g><title>page_cache_async_ra (20,265 samples, 10.86%)</title><rect x="61.8253%" y="501" width="10.8582%" height="15" fill="rgb(216,123,35)" fg:x="115387" fg:w="20265"/><text x="62.0753%" y="511.50">page_cache_async..</text></g><g><title>ondemand_readahead (20,262 samples, 10.86%)</title><rect x="61.8269%" y="485" width="10.8565%" height="15" fill="rgb(212,68,40)" fg:x="115390" fg:w="20262"/><text x="62.0769%" y="495.50">ondemand_readahe..</text></g><g><title>__alloc_pages (27 samples, 0.01%)</title><rect x="72.6840%" y="421" width="0.0145%" height="15" fill="rgb(254,125,32)" fg:x="135653" fg:w="27"/><text x="72.9340%" y="431.50"></text></g><g><title>get_page_from_freelist (25 samples, 0.01%)</title><rect x="72.6850%" y="405" width="0.0134%" height="15" fill="rgb(253,97,22)" fg:x="135655" fg:w="25"/><text x="72.9350%" y="415.50"></text></g><g><title>__page_cache_alloc (28 samples, 0.02%)</title><rect x="72.6840%" y="453" width="0.0150%" height="15" fill="rgb(241,101,14)" fg:x="135653" fg:w="28"/><text x="72.9340%" y="463.50"></text></g><g><title>alloc_pages (28 samples, 0.02%)</title><rect x="72.6840%" y="437" width="0.0150%" height="15" fill="rgb(238,103,29)" fg:x="135653" fg:w="28"/><text x="72.9340%" y="447.50"></text></g><g><title>__add_to_page_cache_locked (33 samples, 0.02%)</title><rect x="72.6990%" y="437" width="0.0177%" height="15" fill="rgb(233,195,47)" fg:x="135681" fg:w="33"/><text x="72.9490%" y="447.50"></text></g><g><title>add_to_page_cache_lru (64 samples, 0.03%)</title><rect x="72.6990%" y="453" width="0.0343%" height="15" fill="rgb(246,218,30)" fg:x="135681" fg:w="64"/><text x="72.9490%" y="463.50"></text></g><g><title>nvme_map_data (20 samples, 0.01%)</title><rect x="72.7365%" y="325" width="0.0107%" height="15" fill="rgb(219,145,47)" fg:x="135751" fg:w="20"/><text x="72.9865%" y="335.50"></text></g><g><title>blk_finish_plug (26 samples, 0.01%)</title><rect x="72.7338%" y="437" width="0.0139%" height="15" fill="rgb(243,12,26)" fg:x="135746" fg:w="26"/><text x="72.9838%" y="447.50"></text></g><g><title>blk_flush_plug_list (26 samples, 0.01%)</title><rect x="72.7338%" y="421" width="0.0139%" height="15" fill="rgb(214,87,16)" fg:x="135746" fg:w="26"/><text x="72.9838%" y="431.50"></text></g><g><title>blk_mq_flush_plug_list (26 samples, 0.01%)</title><rect x="72.7338%" y="405" width="0.0139%" height="15" fill="rgb(208,99,42)" fg:x="135746" fg:w="26"/><text x="72.9838%" y="415.50"></text></g><g><title>blk_mq_sched_insert_requests (26 samples, 0.01%)</title><rect x="72.7338%" y="389" width="0.0139%" height="15" fill="rgb(253,99,2)" fg:x="135746" fg:w="26"/><text x="72.9838%" y="399.50"></text></g><g><title>blk_mq_try_issue_list_directly (26 samples, 0.01%)</title><rect x="72.7338%" y="373" width="0.0139%" height="15" fill="rgb(220,168,23)" fg:x="135746" fg:w="26"/><text x="72.9838%" y="383.50"></text></g><g><title>__blk_mq_try_issue_directly (26 samples, 0.01%)</title><rect x="72.7338%" y="357" width="0.0139%" height="15" fill="rgb(242,38,24)" fg:x="135746" fg:w="26"/><text x="72.9838%" y="367.50"></text></g><g><title>nvme_queue_rq (26 samples, 0.01%)</title><rect x="72.7338%" y="341" width="0.0139%" height="15" fill="rgb(225,182,9)" fg:x="135746" fg:w="26"/><text x="72.9838%" y="351.50"></text></g><g><title>read_pages (66 samples, 0.04%)</title><rect x="72.7333%" y="453" width="0.0354%" height="15" fill="rgb(243,178,37)" fg:x="135745" fg:w="66"/><text x="72.9833%" y="463.50"></text></g><g><title>ext4_readahead (39 samples, 0.02%)</title><rect x="72.7477%" y="437" width="0.0209%" height="15" fill="rgb(232,139,19)" fg:x="135772" fg:w="39"/><text x="72.9977%" y="447.50"></text></g><g><title>ext4_mpage_readpages (39 samples, 0.02%)</title><rect x="72.7477%" y="421" width="0.0209%" height="15" fill="rgb(225,201,24)" fg:x="135772" fg:w="39"/><text x="72.9977%" y="431.50"></text></g><g><title>page_cache_ra_unbounded (168 samples, 0.09%)</title><rect x="72.6834%" y="469" width="0.0900%" height="15" fill="rgb(221,47,46)" fg:x="135652" fg:w="168"/><text x="72.9334%" y="479.50"></text></g><g><title>page_cache_sync_ra (169 samples, 0.09%)</title><rect x="72.6834%" y="501" width="0.0906%" height="15" fill="rgb(249,23,13)" fg:x="135652" fg:w="169"/><text x="72.9334%" y="511.50"></text></g><g><title>ondemand_readahead (169 samples, 0.09%)</title><rect x="72.6834%" y="485" width="0.0906%" height="15" fill="rgb(219,9,5)" fg:x="135652" fg:w="169"/><text x="72.9334%" y="495.50"></text></g><g><title>filemap_get_pages (21,128 samples, 11.32%)</title><rect x="61.4540%" y="517" width="11.3206%" height="15" fill="rgb(254,171,16)" fg:x="114694" fg:w="21128"/><text x="61.7040%" y="527.50">filemap_get_pages</text></g><g><title>__count_memcg_events (19 samples, 0.01%)</title><rect x="74.0460%" y="453" width="0.0102%" height="15" fill="rgb(230,171,20)" fg:x="138195" fg:w="19"/><text x="74.2960%" y="463.50"></text></g><g><title>__mod_memcg_lruvec_state (32 samples, 0.02%)</title><rect x="74.0583%" y="437" width="0.0171%" height="15" fill="rgb(210,71,41)" fg:x="138218" fg:w="32"/><text x="74.3083%" y="447.50"></text></g><g><title>__mod_lruvec_state (45 samples, 0.02%)</title><rect x="74.0562%" y="453" width="0.0241%" height="15" fill="rgb(206,173,20)" fg:x="138214" fg:w="45"/><text x="74.3062%" y="463.50"></text></g><g><title>__activate_page.part.0 (138 samples, 0.07%)</title><rect x="74.0224%" y="469" width="0.0739%" height="15" fill="rgb(233,88,34)" fg:x="138151" fg:w="138"/><text x="74.2724%" y="479.50"></text></g><g><title>__activate_page (146 samples, 0.08%)</title><rect x="74.0224%" y="485" width="0.0782%" height="15" fill="rgb(223,209,46)" fg:x="138151" fg:w="146"/><text x="74.2724%" y="495.50"></text></g><g><title>pagevec_lru_move_fn (228 samples, 0.12%)</title><rect x="73.9919%" y="501" width="0.1222%" height="15" fill="rgb(250,43,18)" fg:x="138094" fg:w="228"/><text x="74.2419%" y="511.50"></text></g><g><title>workingset_activation (119 samples, 0.06%)</title><rect x="74.1146%" y="501" width="0.0638%" height="15" fill="rgb(208,13,10)" fg:x="138323" fg:w="119"/><text x="74.3646%" y="511.50"></text></g><g><title>workingset_age_nonresident (80 samples, 0.04%)</title><rect x="74.1355%" y="485" width="0.0429%" height="15" fill="rgb(212,200,36)" fg:x="138362" fg:w="80"/><text x="74.3855%" y="495.50"></text></g><g><title>mark_page_accessed (2,621 samples, 1.40%)</title><rect x="72.7751%" y="517" width="1.4044%" height="15" fill="rgb(225,90,30)" fg:x="135823" fg:w="2621"/><text x="73.0251%" y="527.50"></text></g><g><title>filemap_read (37,052 samples, 19.85%)</title><rect x="54.3299%" y="533" width="19.8528%" height="15" fill="rgb(236,182,39)" fg:x="101398" fg:w="37052"/><text x="54.5799%" y="543.50">filemap_read</text></g><g><title>__x64_sys_read (37,072 samples, 19.86%)</title><rect x="54.3218%" y="629" width="19.8635%" height="15" fill="rgb(212,144,35)" fg:x="101383" fg:w="37072"/><text x="54.5718%" y="639.50">__x64_sys_read</text></g><g><title>ksys_read (37,071 samples, 19.86%)</title><rect x="54.3224%" y="613" width="19.8629%" height="15" fill="rgb(228,63,44)" fg:x="101384" fg:w="37071"/><text x="54.5724%" y="623.50">ksys_read</text></g><g><title>vfs_read (37,069 samples, 19.86%)</title><rect x="54.3234%" y="597" width="19.8619%" height="15" fill="rgb(228,109,6)" fg:x="101386" fg:w="37069"/><text x="54.5734%" y="607.50">vfs_read</text></g><g><title>new_sync_read (37,069 samples, 19.86%)</title><rect x="54.3234%" y="581" width="19.8619%" height="15" fill="rgb(238,117,24)" fg:x="101386" fg:w="37069"/><text x="54.5734%" y="591.50">new_sync_read</text></g><g><title>ext4_file_read_iter (37,069 samples, 19.86%)</title><rect x="54.3234%" y="565" width="19.8619%" height="15" fill="rgb(242,26,26)" fg:x="101386" fg:w="37069"/><text x="54.5734%" y="575.50">ext4_file_read_iter</text></g><g><title>generic_file_read_iter (37,069 samples, 19.86%)</title><rect x="54.3234%" y="549" width="19.8619%" height="15" fill="rgb(221,92,48)" fg:x="101386" fg:w="37069"/><text x="54.5734%" y="559.50">generic_file_read_iter</text></g><g><title>entry_SYSCALL_64_after_hwframe (37,073 samples, 19.86%)</title><rect x="54.3218%" y="661" width="19.8640%" height="15" fill="rgb(209,209,32)" fg:x="101383" fg:w="37073"/><text x="54.5718%" y="671.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (37,073 samples, 19.86%)</title><rect x="54.3218%" y="645" width="19.8640%" height="15" fill="rgb(221,70,22)" fg:x="101383" fg:w="37073"/><text x="54.5718%" y="655.50">do_syscall_64</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (37,081 samples, 19.87%)</title><rect x="54.3208%" y="757" width="19.8683%" height="15" fill="rgb(248,145,5)" fg:x="101381" fg:w="37081"/><text x="54.5708%" y="767.50">&lt;std::io::buffered::bufreader::..</text></g><g><title>std::io::default_read_exact (37,081 samples, 19.87%)</title><rect x="54.3208%" y="741" width="19.8683%" height="15" fill="rgb(226,116,26)" fg:x="101381" fg:w="37081"/><text x="54.5708%" y="751.50">std::io::default_read_exact</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (37,081 samples, 19.87%)</title><rect x="54.3208%" y="725" width="19.8683%" height="15" fill="rgb(244,5,17)" fg:x="101381" fg:w="37081"/><text x="54.5708%" y="735.50">&lt;std::io::buffered::bufreader::..</text></g><g><title>std::sys::unix::fd::FileDesc::read (37,081 samples, 19.87%)</title><rect x="54.3208%" y="709" width="19.8683%" height="15" fill="rgb(252,159,33)" fg:x="101381" fg:w="37081"/><text x="54.5708%" y="719.50">std::sys::unix::fd::FileDesc::r..</text></g><g><title>__GI___libc_read (37,081 samples, 19.87%)</title><rect x="54.3208%" y="693" width="19.8683%" height="15" fill="rgb(206,71,0)" fg:x="101381" fg:w="37081"/><text x="54.5708%" y="703.50">__GI___libc_read</text></g><g><title>__GI___libc_read (37,081 samples, 19.87%)</title><rect x="54.3208%" y="677" width="19.8683%" height="15" fill="rgb(233,118,54)" fg:x="101381" fg:w="37081"/><text x="54.5708%" y="687.50">__GI___libc_read</text></g><g><title>do_anonymous_page (19 samples, 0.01%)</title><rect x="74.6429%" y="597" width="0.0102%" height="15" fill="rgb(234,83,48)" fg:x="139309" fg:w="19"/><text x="74.8929%" y="607.50"></text></g><g><title>__handle_mm_fault (22 samples, 0.01%)</title><rect x="74.6418%" y="629" width="0.0118%" height="15" fill="rgb(228,3,54)" fg:x="139307" fg:w="22"/><text x="74.8918%" y="639.50"></text></g><g><title>handle_pte_fault (21 samples, 0.01%)</title><rect x="74.6423%" y="613" width="0.0113%" height="15" fill="rgb(226,155,13)" fg:x="139308" fg:w="21"/><text x="74.8923%" y="623.50"></text></g><g><title>asm_exc_page_fault (26 samples, 0.01%)</title><rect x="74.6402%" y="693" width="0.0139%" height="15" fill="rgb(241,28,37)" fg:x="139304" fg:w="26"/><text x="74.8902%" y="703.50"></text></g><g><title>exc_page_fault (26 samples, 0.01%)</title><rect x="74.6402%" y="677" width="0.0139%" height="15" fill="rgb(233,93,10)" fg:x="139304" fg:w="26"/><text x="74.8902%" y="687.50"></text></g><g><title>do_user_addr_fault (26 samples, 0.01%)</title><rect x="74.6402%" y="661" width="0.0139%" height="15" fill="rgb(225,113,19)" fg:x="139304" fg:w="26"/><text x="74.8902%" y="671.50"></text></g><g><title>handle_mm_fault (24 samples, 0.01%)</title><rect x="74.6413%" y="645" width="0.0129%" height="15" fill="rgb(241,2,18)" fg:x="139306" fg:w="24"/><text x="74.8913%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (876 samples, 0.47%)</title><rect x="74.1891%" y="757" width="0.4694%" height="15" fill="rgb(228,207,21)" fg:x="138462" fg:w="876"/><text x="74.4391%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (876 samples, 0.47%)</title><rect x="74.1891%" y="741" width="0.4694%" height="15" fill="rgb(213,211,35)" fg:x="138462" fg:w="876"/><text x="74.4391%" y="751.50"></text></g><g><title>core::ptr::write (876 samples, 0.47%)</title><rect x="74.1891%" y="725" width="0.4694%" height="15" fill="rgb(209,83,10)" fg:x="138462" fg:w="876"/><text x="74.4391%" y="735.50"></text></g><g><title>__memset_avx2_unaligned_erms (876 samples, 0.47%)</title><rect x="74.1891%" y="709" width="0.4694%" height="15" fill="rgb(209,164,1)" fg:x="138462" fg:w="876"/><text x="74.4391%" y="719.50"></text></g><g><title>__clone3 (37,976 samples, 20.35%)</title><rect x="54.3208%" y="981" width="20.3478%" height="15" fill="rgb(213,184,43)" fg:x="101381" fg:w="37976"/><text x="54.5708%" y="991.50">__clone3</text></g><g><title>start_thread (37,976 samples, 20.35%)</title><rect x="54.3208%" y="965" width="20.3478%" height="15" fill="rgb(231,61,34)" fg:x="101381" fg:w="37976"/><text x="54.5708%" y="975.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (37,976 samples, 20.35%)</title><rect x="54.3208%" y="949" width="20.3478%" height="15" fill="rgb(235,75,3)" fg:x="101381" fg:w="37976"/><text x="54.5708%" y="959.50">std::sys::unix::thread::Thread::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (37,976 samples, 20.35%)</title><rect x="54.3208%" y="933" width="20.3478%" height="15" fill="rgb(220,106,47)" fg:x="101381" fg:w="37976"/><text x="54.5708%" y="943.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (37,976 samples, 20.35%)</title><rect x="54.3208%" y="917" width="20.3478%" height="15" fill="rgb(210,196,33)" fg:x="101381" fg:w="37976"/><text x="54.5708%" y="927.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (37,976 samples, 20.35%)</title><rect x="54.3208%" y="901" width="20.3478%" height="15" fill="rgb(229,154,42)" fg:x="101381" fg:w="37976"/><text x="54.5708%" y="911.50">core::ops::function::FnOnce::cal..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (37,976 samples, 20.35%)</title><rect x="54.3208%" y="885" width="20.3478%" height="15" fill="rgb(228,114,26)" fg:x="101381" fg:w="37976"/><text x="54.5708%" y="895.50">std::thread::Builder::spawn_unch..</text></g><g><title>std::panic::catch_unwind (37,976 samples, 20.35%)</title><rect x="54.3208%" y="869" width="20.3478%" height="15" fill="rgb(208,144,1)" fg:x="101381" fg:w="37976"/><text x="54.5708%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (37,976 samples, 20.35%)</title><rect x="54.3208%" y="853" width="20.3478%" height="15" fill="rgb(239,112,37)" fg:x="101381" fg:w="37976"/><text x="54.5708%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (37,976 samples, 20.35%)</title><rect x="54.3208%" y="837" width="20.3478%" height="15" fill="rgb(210,96,50)" fg:x="101381" fg:w="37976"/><text x="54.5708%" y="847.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (37,976 samples, 20.35%)</title><rect x="54.3208%" y="821" width="20.3478%" height="15" fill="rgb(222,178,2)" fg:x="101381" fg:w="37976"/><text x="54.5708%" y="831.50">&lt;core::panic::unwind_safe::Asser..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (37,976 samples, 20.35%)</title><rect x="54.3208%" y="805" width="20.3478%" height="15" fill="rgb(226,74,18)" fg:x="101381" fg:w="37976"/><text x="54.5708%" y="815.50">std::thread::Builder::spawn_unch..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (37,976 samples, 20.35%)</title><rect x="54.3208%" y="789" width="20.3478%" height="15" fill="rgb(225,67,54)" fg:x="101381" fg:w="37976"/><text x="54.5708%" y="799.50">std::sys_common::backtrace::__ru..</text></g><g><title>hprof_slurp::prefetch_reader::PrefetchReader::start::{{closure}} (37,976 samples, 20.35%)</title><rect x="54.3208%" y="773" width="20.3478%" height="15" fill="rgb(251,92,32)" fg:x="101381" fg:w="37976"/><text x="54.5708%" y="783.50">hprof_slurp::prefetch_reader::Pr..</text></g><g><title>asm_sysvec_apic_timer_interrupt (1,033 samples, 0.55%)</title><rect x="74.6772%" y="981" width="0.5535%" height="15" fill="rgb(228,149,22)" fg:x="139373" fg:w="1033"/><text x="74.9272%" y="991.50"></text></g><g><title>__x64_sys_read (24 samples, 0.01%)</title><rect x="75.2376%" y="949" width="0.0129%" height="15" fill="rgb(243,54,13)" fg:x="140419" fg:w="24"/><text x="75.4876%" y="959.50"></text></g><g><title>ksys_read (24 samples, 0.01%)</title><rect x="75.2376%" y="933" width="0.0129%" height="15" fill="rgb(243,180,28)" fg:x="140419" fg:w="24"/><text x="75.4876%" y="943.50"></text></g><g><title>vfs_read (24 samples, 0.01%)</title><rect x="75.2376%" y="917" width="0.0129%" height="15" fill="rgb(208,167,24)" fg:x="140419" fg:w="24"/><text x="75.4876%" y="927.50"></text></g><g><title>new_sync_read (24 samples, 0.01%)</title><rect x="75.2376%" y="901" width="0.0129%" height="15" fill="rgb(245,73,45)" fg:x="140419" fg:w="24"/><text x="75.4876%" y="911.50"></text></g><g><title>ext4_file_read_iter (24 samples, 0.01%)</title><rect x="75.2376%" y="885" width="0.0129%" height="15" fill="rgb(237,203,48)" fg:x="140419" fg:w="24"/><text x="75.4876%" y="895.50"></text></g><g><title>generic_file_read_iter (24 samples, 0.01%)</title><rect x="75.2376%" y="869" width="0.0129%" height="15" fill="rgb(211,197,16)" fg:x="140419" fg:w="24"/><text x="75.4876%" y="879.50"></text></g><g><title>filemap_read (24 samples, 0.01%)</title><rect x="75.2376%" y="853" width="0.0129%" height="15" fill="rgb(243,99,51)" fg:x="140419" fg:w="24"/><text x="75.4876%" y="863.50"></text></g><g><title>hprof-prefetch (39,069 samples, 20.93%)</title><rect x="54.3175%" y="997" width="20.9335%" height="15" fill="rgb(215,123,29)" fg:x="101375" fg:w="39069"/><text x="54.5675%" y="1007.50">hprof-prefetch</text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.01%)</title><rect x="75.2376%" y="981" width="0.0134%" height="15" fill="rgb(239,186,37)" fg:x="140419" fg:w="25"/><text x="75.4876%" y="991.50"></text></g><g><title>do_syscall_64 (25 samples, 0.01%)</title><rect x="75.2376%" y="965" width="0.0134%" height="15" fill="rgb(252,136,39)" fg:x="140419" fg:w="25"/><text x="75.4876%" y="975.50"></text></g><g><title>_int_free (28 samples, 0.02%)</title><rect x="75.2510%" y="965" width="0.0150%" height="15" fill="rgb(223,213,32)" fg:x="140444" fg:w="28"/><text x="75.5010%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (710 samples, 0.38%)</title><rect x="75.2660%" y="965" width="0.3804%" height="15" fill="rgb(233,115,5)" fg:x="140472" fg:w="710"/><text x="75.5160%" y="975.50"></text></g><g><title>[anon] (745 samples, 0.40%)</title><rect x="75.2510%" y="981" width="0.3992%" height="15" fill="rgb(207,226,44)" fg:x="140444" fg:w="745"/><text x="75.5010%" y="991.50"></text></g><g><title>[hprof-slurp] (21 samples, 0.01%)</title><rect x="75.6502%" y="981" width="0.0113%" height="15" fill="rgb(208,126,0)" fg:x="141189" fg:w="21"/><text x="75.9002%" y="991.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (21 samples, 0.01%)</title><rect x="75.6502%" y="965" width="0.0113%" height="15" fill="rgb(244,66,21)" fg:x="141189" fg:w="21"/><text x="75.9002%" y="975.50"></text></g><g><title>__GI___libc_free (25 samples, 0.01%)</title><rect x="75.6615%" y="965" width="0.0134%" height="15" fill="rgb(222,97,12)" fg:x="141210" fg:w="25"/><text x="75.9115%" y="975.50"></text></g><g><title>_int_free (30 samples, 0.02%)</title><rect x="75.6749%" y="965" width="0.0161%" height="15" fill="rgb(219,213,19)" fg:x="141235" fg:w="30"/><text x="75.9249%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (691 samples, 0.37%)</title><rect x="75.6909%" y="965" width="0.3702%" height="15" fill="rgb(252,169,30)" fg:x="141265" fg:w="691"/><text x="75.9409%" y="975.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (24 samples, 0.01%)</title><rect x="76.0612%" y="965" width="0.0129%" height="15" fill="rgb(206,32,51)" fg:x="141956" fg:w="24"/><text x="76.3112%" y="975.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (639 samples, 0.34%)</title><rect x="76.0767%" y="965" width="0.3424%" height="15" fill="rgb(250,172,42)" fg:x="141985" fg:w="639"/><text x="76.3267%" y="975.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (639 samples, 0.34%)</title><rect x="76.0767%" y="949" width="0.3424%" height="15" fill="rgb(209,34,43)" fg:x="141985" fg:w="639"/><text x="76.3267%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (639 samples, 0.34%)</title><rect x="76.0767%" y="933" width="0.3424%" height="15" fill="rgb(223,11,35)" fg:x="141985" fg:w="639"/><text x="76.3267%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (639 samples, 0.34%)</title><rect x="76.0767%" y="917" width="0.3424%" height="15" fill="rgb(251,219,26)" fg:x="141985" fg:w="639"/><text x="76.3267%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (639 samples, 0.34%)</title><rect x="76.0767%" y="901" width="0.3424%" height="15" fill="rgb(231,119,3)" fg:x="141985" fg:w="639"/><text x="76.3267%" y="911.50"></text></g><g><title>[unknown] (1,423 samples, 0.76%)</title><rect x="75.6615%" y="981" width="0.7625%" height="15" fill="rgb(216,97,11)" fg:x="141210" fg:w="1423"/><text x="75.9115%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (51 samples, 0.03%)</title><rect x="76.7743%" y="709" width="0.0273%" height="15" fill="rgb(223,59,9)" fg:x="143287" fg:w="51"/><text x="77.0243%" y="719.50"></text></g><g><title>__GI___lll_lock_wake_private (20 samples, 0.01%)</title><rect x="77.3278%" y="693" width="0.0107%" height="15" fill="rgb(233,93,31)" fg:x="144320" fg:w="20"/><text x="77.5778%" y="703.50"></text></g><g><title>__GI___munmap (38 samples, 0.02%)</title><rect x="77.3385%" y="693" width="0.0204%" height="15" fill="rgb(239,81,33)" fg:x="144340" fg:w="38"/><text x="77.5885%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (38 samples, 0.02%)</title><rect x="77.3385%" y="677" width="0.0204%" height="15" fill="rgb(213,120,34)" fg:x="144340" fg:w="38"/><text x="77.5885%" y="687.50"></text></g><g><title>do_syscall_64 (38 samples, 0.02%)</title><rect x="77.3385%" y="661" width="0.0204%" height="15" fill="rgb(243,49,53)" fg:x="144340" fg:w="38"/><text x="77.5885%" y="671.50"></text></g><g><title>__x64_sys_munmap (38 samples, 0.02%)</title><rect x="77.3385%" y="645" width="0.0204%" height="15" fill="rgb(247,216,33)" fg:x="144340" fg:w="38"/><text x="77.5885%" y="655.50"></text></g><g><title>__vm_munmap (38 samples, 0.02%)</title><rect x="77.3385%" y="629" width="0.0204%" height="15" fill="rgb(226,26,14)" fg:x="144340" fg:w="38"/><text x="77.5885%" y="639.50"></text></g><g><title>__do_munmap (38 samples, 0.02%)</title><rect x="77.3385%" y="613" width="0.0204%" height="15" fill="rgb(215,49,53)" fg:x="144340" fg:w="38"/><text x="77.5885%" y="623.50"></text></g><g><title>unmap_region (38 samples, 0.02%)</title><rect x="77.3385%" y="597" width="0.0204%" height="15" fill="rgb(245,162,40)" fg:x="144340" fg:w="38"/><text x="77.5885%" y="607.50"></text></g><g><title>unmap_vmas (34 samples, 0.02%)</title><rect x="77.3407%" y="581" width="0.0182%" height="15" fill="rgb(229,68,17)" fg:x="144344" fg:w="34"/><text x="77.5907%" y="591.50"></text></g><g><title>unmap_single_vma (34 samples, 0.02%)</title><rect x="77.3407%" y="565" width="0.0182%" height="15" fill="rgb(213,182,10)" fg:x="144344" fg:w="34"/><text x="77.5907%" y="575.50"></text></g><g><title>unmap_page_range (34 samples, 0.02%)</title><rect x="77.3407%" y="549" width="0.0182%" height="15" fill="rgb(245,125,30)" fg:x="144344" fg:w="34"/><text x="77.5907%" y="559.50"></text></g><g><title>zap_pmd_range.isra.0 (34 samples, 0.02%)</title><rect x="77.3407%" y="533" width="0.0182%" height="15" fill="rgb(232,202,2)" fg:x="144344" fg:w="34"/><text x="77.5907%" y="543.50"></text></g><g><title>zap_pte_range (34 samples, 0.02%)</title><rect x="77.3407%" y="517" width="0.0182%" height="15" fill="rgb(237,140,51)" fg:x="144344" fg:w="34"/><text x="77.5907%" y="527.50"></text></g><g><title>tlb_flush_mmu (23 samples, 0.01%)</title><rect x="77.3466%" y="501" width="0.0123%" height="15" fill="rgb(236,157,25)" fg:x="144355" fg:w="23"/><text x="77.5966%" y="511.50"></text></g><g><title>free_pages_and_swap_cache (23 samples, 0.01%)</title><rect x="77.3466%" y="485" width="0.0123%" height="15" fill="rgb(219,209,0)" fg:x="144355" fg:w="23"/><text x="77.5966%" y="495.50"></text></g><g><title>release_pages (23 samples, 0.01%)</title><rect x="77.3466%" y="469" width="0.0123%" height="15" fill="rgb(240,116,54)" fg:x="144355" fg:w="23"/><text x="77.5966%" y="479.50"></text></g><g><title>futex_wait_queue_me (67 samples, 0.04%)</title><rect x="78.2376%" y="565" width="0.0359%" height="15" fill="rgb(216,10,36)" fg:x="146018" fg:w="67"/><text x="78.4876%" y="575.50"></text></g><g><title>schedule (61 samples, 0.03%)</title><rect x="78.2408%" y="549" width="0.0327%" height="15" fill="rgb(222,72,44)" fg:x="146024" fg:w="61"/><text x="78.4908%" y="559.50"></text></g><g><title>__schedule (59 samples, 0.03%)</title><rect x="78.2419%" y="533" width="0.0316%" height="15" fill="rgb(232,159,9)" fg:x="146026" fg:w="59"/><text x="78.4919%" y="543.50"></text></g><g><title>do_futex (88 samples, 0.05%)</title><rect x="78.2323%" y="597" width="0.0472%" height="15" fill="rgb(210,39,32)" fg:x="146008" fg:w="88"/><text x="78.4823%" y="607.50"></text></g><g><title>futex_wait (87 samples, 0.05%)</title><rect x="78.2328%" y="581" width="0.0466%" height="15" fill="rgb(216,194,45)" fg:x="146009" fg:w="87"/><text x="78.4828%" y="591.50"></text></g><g><title>__x64_sys_futex (89 samples, 0.05%)</title><rect x="78.2323%" y="613" width="0.0477%" height="15" fill="rgb(218,18,35)" fg:x="146008" fg:w="89"/><text x="78.4823%" y="623.50"></text></g><g><title>do_syscall_64 (102 samples, 0.05%)</title><rect x="78.2323%" y="629" width="0.0547%" height="15" fill="rgb(207,83,51)" fg:x="146008" fg:w="102"/><text x="78.4823%" y="639.50"></text></g><g><title>__GI___lll_lock_wait_private (120 samples, 0.06%)</title><rect x="78.2237%" y="677" width="0.0643%" height="15" fill="rgb(225,63,43)" fg:x="145992" fg:w="120"/><text x="78.4737%" y="687.50"></text></g><g><title>futex_wait (111 samples, 0.06%)</title><rect x="78.2285%" y="661" width="0.0595%" height="15" fill="rgb(207,57,36)" fg:x="146001" fg:w="111"/><text x="78.4785%" y="671.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (106 samples, 0.06%)</title><rect x="78.2312%" y="645" width="0.0568%" height="15" fill="rgb(216,99,33)" fg:x="146006" fg:w="106"/><text x="78.4812%" y="655.50"></text></g><g><title>malloc_consolidate (324 samples, 0.17%)</title><rect x="78.2966%" y="677" width="0.1736%" height="15" fill="rgb(225,42,16)" fg:x="146128" fg:w="324"/><text x="78.5466%" y="687.50"></text></g><g><title>unlink_chunk (75 samples, 0.04%)</title><rect x="78.4300%" y="661" width="0.0402%" height="15" fill="rgb(220,201,45)" fg:x="146377" fg:w="75"/><text x="78.6800%" y="671.50"></text></g><g><title>_int_free (2,105 samples, 1.13%)</title><rect x="77.3589%" y="693" width="1.1279%" height="15" fill="rgb(225,33,4)" fg:x="144378" fg:w="2105"/><text x="77.6089%" y="703.50"></text></g><g><title>unlink_chunk (31 samples, 0.02%)</title><rect x="78.4702%" y="677" width="0.0166%" height="15" fill="rgb(224,33,50)" fg:x="146452" fg:w="31"/><text x="78.7202%" y="687.50"></text></g><g><title>arena_for_chunk (161 samples, 0.09%)</title><rect x="78.4868%" y="693" width="0.0863%" height="15" fill="rgb(246,198,51)" fg:x="146483" fg:w="161"/><text x="78.7368%" y="703.50"></text></g><g><title>arena_for_chunk (142 samples, 0.08%)</title><rect x="78.4970%" y="677" width="0.0761%" height="15" fill="rgb(205,22,4)" fg:x="146502" fg:w="142"/><text x="78.7470%" y="687.50"></text></g><g><title>__GI___libc_free (3,308 samples, 1.77%)</title><rect x="76.8017%" y="709" width="1.7725%" height="15" fill="rgb(206,3,8)" fg:x="143338" fg:w="3308"/><text x="77.0517%" y="719.50">_..</text></g><g><title>__rdl_dealloc (20 samples, 0.01%)</title><rect x="78.5741%" y="709" width="0.0107%" height="15" fill="rgb(251,23,15)" fg:x="146646" fg:w="20"/><text x="78.8241%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (20 samples, 0.01%)</title><rect x="78.5741%" y="693" width="0.0107%" height="15" fill="rgb(252,88,28)" fg:x="146646" fg:w="20"/><text x="78.8241%" y="703.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (20 samples, 0.01%)</title><rect x="83.8379%" y="693" width="0.0107%" height="15" fill="rgb(212,127,14)" fg:x="156470" fg:w="20"/><text x="84.0879%" y="703.50"></text></g><g><title>sysvec_apic_timer_interrupt (19 samples, 0.01%)</title><rect x="83.8384%" y="677" width="0.0102%" height="15" fill="rgb(247,145,37)" fg:x="156471" fg:w="19"/><text x="84.0884%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::gc_record::GcRecord&gt; (2,202 samples, 1.18%)</title><rect x="83.8486%" y="693" width="1.1798%" height="15" fill="rgb(209,117,53)" fg:x="156490" fg:w="2202"/><text x="84.0986%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::gc_record::ArrayValue&gt; (118 samples, 0.06%)</title><rect x="84.9652%" y="677" width="0.0632%" height="15" fill="rgb(212,90,42)" fg:x="158574" fg:w="118"/><text x="85.2152%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (16,060 samples, 8.61%)</title><rect x="76.4239%" y="757" width="8.6051%" height="15" fill="rgb(218,164,37)" fg:x="142633" fg:w="16060"/><text x="76.6739%" y="767.50">alloc::vec::..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (16,060 samples, 8.61%)</title><rect x="76.4239%" y="741" width="8.6051%" height="15" fill="rgb(246,65,34)" fg:x="142633" fg:w="16060"/><text x="76.6739%" y="751.50">alloc::vec::..</text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (16,060 samples, 8.61%)</title><rect x="76.4239%" y="725" width="8.6051%" height="15" fill="rgb(231,100,33)" fg:x="142633" fg:w="16060"/><text x="76.6739%" y="735.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (12,011 samples, 6.44%)</title><rect x="78.5934%" y="709" width="6.4356%" height="15" fill="rgb(228,126,14)" fg:x="146682" fg:w="12011"/><text x="78.8434%" y="719.50">core::pt..</text></g><g><title>__GI___libc_free (20 samples, 0.01%)</title><rect x="85.0290%" y="485" width="0.0107%" height="15" fill="rgb(215,173,21)" fg:x="158693" fg:w="20"/><text x="85.2790%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.01%)</title><rect x="85.0290%" y="661" width="0.0113%" height="15" fill="rgb(210,6,40)" fg:x="158693" fg:w="21"/><text x="85.2790%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (21 samples, 0.01%)</title><rect x="85.0290%" y="645" width="0.0113%" height="15" fill="rgb(212,48,18)" fg:x="158693" fg:w="21"/><text x="85.2790%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (21 samples, 0.01%)</title><rect x="85.0290%" y="629" width="0.0113%" height="15" fill="rgb(230,214,11)" fg:x="158693" fg:w="21"/><text x="85.2790%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (21 samples, 0.01%)</title><rect x="85.0290%" y="613" width="0.0113%" height="15" fill="rgb(254,105,39)" fg:x="158693" fg:w="21"/><text x="85.2790%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,alloc::string::String)&gt; (21 samples, 0.01%)</title><rect x="85.0290%" y="597" width="0.0113%" height="15" fill="rgb(245,158,5)" fg:x="158693" fg:w="21"/><text x="85.2790%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (21 samples, 0.01%)</title><rect x="85.0290%" y="581" width="0.0113%" height="15" fill="rgb(249,208,11)" fg:x="158693" fg:w="21"/><text x="85.2790%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (21 samples, 0.01%)</title><rect x="85.0290%" y="565" width="0.0113%" height="15" fill="rgb(210,39,28)" fg:x="158693" fg:w="21"/><text x="85.2790%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (21 samples, 0.01%)</title><rect x="85.0290%" y="549" width="0.0113%" height="15" fill="rgb(211,56,53)" fg:x="158693" fg:w="21"/><text x="85.2790%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.01%)</title><rect x="85.0290%" y="533" width="0.0113%" height="15" fill="rgb(226,201,30)" fg:x="158693" fg:w="21"/><text x="85.2790%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.01%)</title><rect x="85.0290%" y="517" width="0.0113%" height="15" fill="rgb(239,101,34)" fg:x="158693" fg:w="21"/><text x="85.2790%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.01%)</title><rect x="85.0290%" y="501" width="0.0113%" height="15" fill="rgb(226,209,5)" fg:x="158693" fg:w="21"/><text x="85.2790%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;ahash::hash_map::AHashMap&lt;u64,alloc::string::String&gt;&gt; (23 samples, 0.01%)</title><rect x="85.0290%" y="725" width="0.0123%" height="15" fill="rgb(250,105,47)" fg:x="158693" fg:w="23"/><text x="85.2790%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (23 samples, 0.01%)</title><rect x="85.0290%" y="709" width="0.0123%" height="15" fill="rgb(230,72,3)" fg:x="158693" fg:w="23"/><text x="85.2790%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (23 samples, 0.01%)</title><rect x="85.0290%" y="693" width="0.0123%" height="15" fill="rgb(232,218,39)" fg:x="158693" fg:w="23"/><text x="85.2790%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (23 samples, 0.01%)</title><rect x="85.0290%" y="677" width="0.0123%" height="15" fill="rgb(248,166,6)" fg:x="158693" fg:w="23"/><text x="85.2790%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder::start::{{closure}}&gt; (40 samples, 0.02%)</title><rect x="85.0290%" y="757" width="0.0214%" height="15" fill="rgb(247,89,20)" fg:x="158693" fg:w="40"/><text x="85.2790%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder&gt; (40 samples, 0.02%)</title><rect x="85.0290%" y="741" width="0.0214%" height="15" fill="rgb(248,130,54)" fg:x="158693" fg:w="40"/><text x="85.2790%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (539 samples, 0.29%)</title><rect x="85.0504%" y="725" width="0.2888%" height="15" fill="rgb(234,196,4)" fg:x="158733" fg:w="539"/><text x="85.3004%" y="735.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (48 samples, 0.03%)</title><rect x="85.3135%" y="709" width="0.0257%" height="15" fill="rgb(250,143,31)" fg:x="159224" fg:w="48"/><text x="85.5635%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (48 samples, 0.03%)</title><rect x="85.3135%" y="693" width="0.0257%" height="15" fill="rgb(211,110,34)" fg:x="159224" fg:w="48"/><text x="85.5635%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (20 samples, 0.01%)</title><rect x="92.1681%" y="709" width="0.0107%" height="15" fill="rgb(215,124,48)" fg:x="172017" fg:w="20"/><text x="92.4181%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.01%)</title><rect x="92.1681%" y="693" width="0.0107%" height="15" fill="rgb(216,46,13)" fg:x="172017" fg:w="20"/><text x="92.4181%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.01%)</title><rect x="92.1681%" y="677" width="0.0107%" height="15" fill="rgb(205,184,25)" fg:x="172017" fg:w="20"/><text x="92.4181%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.01%)</title><rect x="92.1681%" y="661" width="0.0107%" height="15" fill="rgb(228,1,10)" fg:x="172017" fg:w="20"/><text x="92.4181%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.01%)</title><rect x="92.1681%" y="645" width="0.0107%" height="15" fill="rgb(213,116,27)" fg:x="172017" fg:w="20"/><text x="92.4181%" y="655.50"></text></g><g><title>__hrtimer_run_queues (25 samples, 0.01%)</title><rect x="92.1890%" y="645" width="0.0134%" height="15" fill="rgb(241,95,50)" fg:x="172056" fg:w="25"/><text x="92.4390%" y="655.50"></text></g><g><title>__sysvec_apic_timer_interrupt (29 samples, 0.02%)</title><rect x="92.1879%" y="677" width="0.0155%" height="15" fill="rgb(238,48,32)" fg:x="172054" fg:w="29"/><text x="92.4379%" y="687.50"></text></g><g><title>hrtimer_interrupt (27 samples, 0.01%)</title><rect x="92.1890%" y="661" width="0.0145%" height="15" fill="rgb(235,113,49)" fg:x="172056" fg:w="27"/><text x="92.4390%" y="671.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (32 samples, 0.02%)</title><rect x="92.1874%" y="709" width="0.0171%" height="15" fill="rgb(205,127,43)" fg:x="172053" fg:w="32"/><text x="92.4374%" y="719.50"></text></g><g><title>sysvec_apic_timer_interrupt (31 samples, 0.02%)</title><rect x="92.1879%" y="693" width="0.0166%" height="15" fill="rgb(250,162,2)" fg:x="172054" fg:w="31"/><text x="92.4379%" y="703.50"></text></g><g><title>hprof_slurp::result_recorder::ArrayCounter::add_elements_from_array (59 samples, 0.03%)</title><rect x="92.2072%" y="709" width="0.0316%" height="15" fill="rgb(220,13,41)" fg:x="172090" fg:w="59"/><text x="92.4572%" y="719.50"></text></g><g><title>hprof_slurp::result_recorder::ClassInstanceCounter::add_instance (2,208 samples, 1.18%)</title><rect x="92.2388%" y="709" width="1.1831%" height="15" fill="rgb(249,221,25)" fg:x="172149" fg:w="2208"/><text x="92.4888%" y="719.50"></text></g><g><title>ahash::operations::folded_multiply (938 samples, 0.50%)</title><rect x="93.4417%" y="629" width="0.5026%" height="15" fill="rgb(215,208,19)" fg:x="174394" fg:w="938"/><text x="93.6917%" y="639.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (743 samples, 0.40%)</title><rect x="93.5462%" y="613" width="0.3981%" height="15" fill="rgb(236,175,2)" fg:x="174589" fg:w="743"/><text x="93.7962%" y="623.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1,532 samples, 0.82%)</title><rect x="93.4417%" y="645" width="0.8209%" height="15" fill="rgb(241,52,2)" fg:x="174394" fg:w="1532"/><text x="93.6917%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (594 samples, 0.32%)</title><rect x="93.9443%" y="629" width="0.3183%" height="15" fill="rgb(248,140,14)" fg:x="175332" fg:w="594"/><text x="94.1943%" y="639.50"></text></g><g><title>&lt;hprof_slurp::parser::gc_record::FieldType as core::hash::Hash&gt;::hash (26 samples, 0.01%)</title><rect x="94.2626%" y="629" width="0.0139%" height="15" fill="rgb(253,22,42)" fg:x="175926" fg:w="26"/><text x="94.5126%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (20 samples, 0.01%)</title><rect x="94.2658%" y="613" width="0.0107%" height="15" fill="rgb(234,61,47)" fg:x="175932" fg:w="20"/><text x="94.5158%" y="623.50"></text></g><g><title>core::hash::Hasher::write_isize (20 samples, 0.01%)</title><rect x="94.2658%" y="597" width="0.0107%" height="15" fill="rgb(208,226,15)" fg:x="175932" fg:w="20"/><text x="94.5158%" y="607.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (20 samples, 0.01%)</title><rect x="94.2658%" y="581" width="0.0107%" height="15" fill="rgb(217,221,4)" fg:x="175932" fg:w="20"/><text x="94.5158%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (20 samples, 0.01%)</title><rect x="94.2658%" y="565" width="0.0107%" height="15" fill="rgb(212,174,34)" fg:x="175932" fg:w="20"/><text x="94.5158%" y="575.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (20 samples, 0.01%)</title><rect x="94.2658%" y="549" width="0.0107%" height="15" fill="rgb(253,83,4)" fg:x="175932" fg:w="20"/><text x="94.5158%" y="559.50"></text></g><g><title>hashbrown::map::make_insert_hash (2,839 samples, 1.52%)</title><rect x="93.4417%" y="677" width="1.5212%" height="15" fill="rgb(250,195,49)" fg:x="174394" fg:w="2839"/><text x="93.6917%" y="687.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,839 samples, 1.52%)</title><rect x="93.4417%" y="661" width="1.5212%" height="15" fill="rgb(241,192,25)" fg:x="174394" fg:w="2839"/><text x="93.6917%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,307 samples, 0.70%)</title><rect x="94.2626%" y="645" width="0.7003%" height="15" fill="rgb(208,124,10)" fg:x="175926" fg:w="1307"/><text x="94.5126%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1,281 samples, 0.69%)</title><rect x="94.2765%" y="629" width="0.6864%" height="15" fill="rgb(222,33,0)" fg:x="175952" fg:w="1281"/><text x="94.5265%" y="639.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1,281 samples, 0.69%)</title><rect x="94.2765%" y="613" width="0.6864%" height="15" fill="rgb(234,209,28)" fg:x="175952" fg:w="1281"/><text x="94.5265%" y="623.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1,281 samples, 0.69%)</title><rect x="94.2765%" y="597" width="0.6864%" height="15" fill="rgb(224,11,23)" fg:x="175952" fg:w="1281"/><text x="94.5265%" y="607.50"></text></g><g><title>ahash::operations::folded_multiply (893 samples, 0.48%)</title><rect x="94.4844%" y="581" width="0.4785%" height="15" fill="rgb(232,99,1)" fg:x="176340" fg:w="893"/><text x="94.7344%" y="591.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (705 samples, 0.38%)</title><rect x="94.5851%" y="565" width="0.3777%" height="15" fill="rgb(237,95,45)" fg:x="176528" fg:w="705"/><text x="94.8351%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,510 samples, 0.81%)</title><rect x="95.6867%" y="645" width="0.8091%" height="15" fill="rgb(208,109,11)" fg:x="178584" fg:w="1510"/><text x="95.9367%" y="655.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,325 samples, 0.71%)</title><rect x="95.7859%" y="629" width="0.7099%" height="15" fill="rgb(216,190,48)" fg:x="178769" fg:w="1325"/><text x="96.0359%" y="639.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (36 samples, 0.02%)</title><rect x="96.4985%" y="645" width="0.0193%" height="15" fill="rgb(251,171,36)" fg:x="180099" fg:w="36"/><text x="96.7485%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (19 samples, 0.01%)</title><rect x="96.5178%" y="597" width="0.0102%" height="15" fill="rgb(230,62,22)" fg:x="180135" fg:w="19"/><text x="96.7678%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (19 samples, 0.01%)</title><rect x="96.5178%" y="581" width="0.0102%" height="15" fill="rgb(225,114,35)" fg:x="180135" fg:w="19"/><text x="96.7678%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (758 samples, 0.41%)</title><rect x="96.5178%" y="629" width="0.4061%" height="15" fill="rgb(215,118,42)" fg:x="180135" fg:w="758"/><text x="96.7678%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (758 samples, 0.41%)</title><rect x="96.5178%" y="613" width="0.4061%" height="15" fill="rgb(243,119,21)" fg:x="180135" fg:w="758"/><text x="96.7678%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (739 samples, 0.40%)</title><rect x="96.5280%" y="597" width="0.3960%" height="15" fill="rgb(252,177,53)" fg:x="180154" fg:w="739"/><text x="96.7780%" y="607.50"></text></g><g><title>&lt;hprof_slurp::parser::gc_record::FieldType as core::cmp::PartialEq&gt;::eq (25 samples, 0.01%)</title><rect x="96.9239%" y="613" width="0.0134%" height="15" fill="rgb(237,209,29)" fg:x="180893" fg:w="25"/><text x="97.1739%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2,945 samples, 1.58%)</title><rect x="96.5178%" y="645" width="1.5780%" height="15" fill="rgb(212,65,23)" fg:x="180135" fg:w="2945"/><text x="96.7678%" y="655.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (2,187 samples, 1.17%)</title><rect x="96.9239%" y="629" width="1.1718%" height="15" fill="rgb(230,222,46)" fg:x="180893" fg:w="2187"/><text x="97.1739%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (2,162 samples, 1.16%)</title><rect x="96.9373%" y="613" width="1.1584%" height="15" fill="rgb(215,135,32)" fg:x="180918" fg:w="2162"/><text x="97.1873%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1,466 samples, 0.79%)</title><rect x="98.0957%" y="645" width="0.7855%" height="15" fill="rgb(246,101,22)" fg:x="183080" fg:w="1466"/><text x="98.3457%" y="655.50"></text></g><g><title>hashbrown::raw::h2 (169 samples, 0.09%)</title><rect x="98.8844%" y="645" width="0.0906%" height="15" fill="rgb(206,107,13)" fg:x="184552" fg:w="169"/><text x="99.1344%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (600 samples, 0.32%)</title><rect x="98.9750%" y="645" width="0.3215%" height="15" fill="rgb(250,100,44)" fg:x="184721" fg:w="600"/><text x="99.2250%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (600 samples, 0.32%)</title><rect x="98.9750%" y="629" width="0.3215%" height="15" fill="rgb(231,147,38)" fg:x="184721" fg:w="600"/><text x="99.2250%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (600 samples, 0.32%)</title><rect x="98.9750%" y="613" width="0.3215%" height="15" fill="rgb(229,8,40)" fg:x="184721" fg:w="600"/><text x="99.2250%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (985 samples, 0.53%)</title><rect x="99.2965%" y="645" width="0.5278%" height="15" fill="rgb(221,135,30)" fg:x="185321" fg:w="985"/><text x="99.5465%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (985 samples, 0.53%)</title><rect x="99.2965%" y="629" width="0.5278%" height="15" fill="rgb(249,193,18)" fg:x="185321" fg:w="985"/><text x="99.5465%" y="639.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (12,130 samples, 6.50%)</title><rect x="93.4305%" y="693" width="6.4994%" height="15" fill="rgb(209,133,39)" fg:x="174373" fg:w="12130"/><text x="93.6805%" y="703.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9,270 samples, 4.97%)</title><rect x="94.9629%" y="677" width="4.9669%" height="15" fill="rgb(232,100,14)" fg:x="177233" fg:w="9270"/><text x="95.2129%" y="687.50">hashbr..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (9,270 samples, 4.97%)</title><rect x="94.9629%" y="661" width="4.9669%" height="15" fill="rgb(224,185,1)" fg:x="177233" fg:w="9270"/><text x="95.2129%" y="671.50">hashbr..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (197 samples, 0.11%)</title><rect x="99.8243%" y="645" width="0.1056%" height="15" fill="rgb(223,139,8)" fg:x="186306" fg:w="197"/><text x="100.0743%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (197 samples, 0.11%)</title><rect x="99.8243%" y="629" width="0.1056%" height="15" fill="rgb(232,213,38)" fg:x="186306" fg:w="197"/><text x="100.0743%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (197 samples, 0.11%)</title><rect x="99.8243%" y="613" width="0.1056%" height="15" fill="rgb(207,94,22)" fg:x="186306" fg:w="197"/><text x="100.0743%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (12,162 samples, 6.52%)</title><rect x="93.4219%" y="709" width="6.5165%" height="15" fill="rgb(219,183,54)" fg:x="174357" fg:w="12162"/><text x="93.6719%" y="719.50">std::coll..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (27,787 samples, 14.89%)</title><rect x="85.0504%" y="757" width="14.8885%" height="15" fill="rgb(216,185,54)" fg:x="158733" fg:w="27787"/><text x="85.3004%" y="767.50">hprof_slurp::result_rec..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (27,787 samples, 14.89%)</title><rect x="85.0504%" y="741" width="14.8885%" height="15" fill="rgb(254,217,39)" fg:x="158733" fg:w="27787"/><text x="85.3004%" y="751.50">&lt;core::slice::iter::Ite..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (27,248 samples, 14.60%)</title><rect x="85.3392%" y="725" width="14.5997%" height="15" fill="rgb(240,178,23)" fg:x="159272" fg:w="27248"/><text x="85.5892%" y="735.50">hprof_slurp::result_re..</text></g><g><title>__clone3 (43,904 samples, 23.52%)</title><rect x="76.4239%" y="981" width="23.5241%" height="15" fill="rgb(218,11,47)" fg:x="142633" fg:w="43904"/><text x="76.6739%" y="991.50">__clone3</text></g><g><title>start_thread (43,904 samples, 23.52%)</title><rect x="76.4239%" y="965" width="23.5241%" height="15" fill="rgb(218,51,51)" fg:x="142633" fg:w="43904"/><text x="76.6739%" y="975.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (43,904 samples, 23.52%)</title><rect x="76.4239%" y="949" width="23.5241%" height="15" fill="rgb(238,126,27)" fg:x="142633" fg:w="43904"/><text x="76.6739%" y="959.50">std::sys::unix::thread::Thread::new::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (43,904 samples, 23.52%)</title><rect x="76.4239%" y="933" width="23.5241%" height="15" fill="rgb(249,202,22)" fg:x="142633" fg:w="43904"/><text x="76.6739%" y="943.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (43,904 samples, 23.52%)</title><rect x="76.4239%" y="917" width="23.5241%" height="15" fill="rgb(254,195,49)" fg:x="142633" fg:w="43904"/><text x="76.6739%" y="927.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (43,904 samples, 23.52%)</title><rect x="76.4239%" y="901" width="23.5241%" height="15" fill="rgb(208,123,14)" fg:x="142633" fg:w="43904"/><text x="76.6739%" y="911.50">core::ops::function::FnOnce::call_onc..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (43,904 samples, 23.52%)</title><rect x="76.4239%" y="885" width="23.5241%" height="15" fill="rgb(224,200,8)" fg:x="142633" fg:w="43904"/><text x="76.6739%" y="895.50">std::thread::Builder::spawn_unchecked..</text></g><g><title>std::panic::catch_unwind (43,904 samples, 23.52%)</title><rect x="76.4239%" y="869" width="23.5241%" height="15" fill="rgb(217,61,36)" fg:x="142633" fg:w="43904"/><text x="76.6739%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (43,904 samples, 23.52%)</title><rect x="76.4239%" y="853" width="23.5241%" height="15" fill="rgb(206,35,45)" fg:x="142633" fg:w="43904"/><text x="76.6739%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (43,904 samples, 23.52%)</title><rect x="76.4239%" y="837" width="23.5241%" height="15" fill="rgb(217,65,33)" fg:x="142633" fg:w="43904"/><text x="76.6739%" y="847.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (43,904 samples, 23.52%)</title><rect x="76.4239%" y="821" width="23.5241%" height="15" fill="rgb(222,158,48)" fg:x="142633" fg:w="43904"/><text x="76.6739%" y="831.50">&lt;core::panic::unwind_safe::AssertUnwi..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (43,904 samples, 23.52%)</title><rect x="76.4239%" y="805" width="23.5241%" height="15" fill="rgb(254,2,54)" fg:x="142633" fg:w="43904"/><text x="76.6739%" y="815.50">std::thread::Builder::spawn_unchecked..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (43,904 samples, 23.52%)</title><rect x="76.4239%" y="789" width="23.5241%" height="15" fill="rgb(250,143,38)" fg:x="142633" fg:w="43904"/><text x="76.6739%" y="799.50">std::sys_common::backtrace::__rust_be..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (43,904 samples, 23.52%)</title><rect x="76.4239%" y="773" width="23.5241%" height="15" fill="rgb(248,25,0)" fg:x="142633" fg:w="43904"/><text x="76.6739%" y="783.50">hprof_slurp::result_recorder::ResultR..</text></g><g><title>hprof-recorder (46,113 samples, 24.71%)</title><rect x="75.2510%" y="997" width="24.7077%" height="15" fill="rgb(206,152,27)" fg:x="140444" fg:w="46113"/><text x="75.5010%" y="1007.50">hprof-recorder</text></g><g><title>indicatif::progress_bar::ProgressBar::set_position (22 samples, 0.01%)</title><rect x="99.9652%" y="677" width="0.0118%" height="15" fill="rgb(240,77,30)" fg:x="186569" fg:w="22"/><text x="100.2152%" y="687.50"></text></g><g><title>indicatif::state::BarState::tick (22 samples, 0.01%)</title><rect x="99.9652%" y="661" width="0.0118%" height="15" fill="rgb(231,5,3)" fg:x="186569" fg:w="22"/><text x="100.2152%" y="671.50"></text></g><g><title>indicatif::state::BarState::draw (22 samples, 0.01%)</title><rect x="99.9652%" y="645" width="0.0118%" height="15" fill="rgb(207,226,32)" fg:x="186569" fg:w="22"/><text x="100.2152%" y="655.50"></text></g><g><title>_start (39 samples, 0.02%)</title><rect x="99.9652%" y="981" width="0.0209%" height="15" fill="rgb(222,207,47)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="991.50"></text></g><g><title>__libc_start_main_impl (39 samples, 0.02%)</title><rect x="99.9652%" y="965" width="0.0209%" height="15" fill="rgb(229,115,45)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="975.50"></text></g><g><title>__libc_start_call_main (39 samples, 0.02%)</title><rect x="99.9652%" y="949" width="0.0209%" height="15" fill="rgb(224,191,6)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="959.50"></text></g><g><title>main (39 samples, 0.02%)</title><rect x="99.9652%" y="933" width="0.0209%" height="15" fill="rgb(230,227,24)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="943.50"></text></g><g><title>std::rt::lang_start_internal (39 samples, 0.02%)</title><rect x="99.9652%" y="917" width="0.0209%" height="15" fill="rgb(228,80,19)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="927.50"></text></g><g><title>std::panic::catch_unwind (39 samples, 0.02%)</title><rect x="99.9652%" y="901" width="0.0209%" height="15" fill="rgb(247,229,0)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="911.50"></text></g><g><title>std::panicking::try (39 samples, 0.02%)</title><rect x="99.9652%" y="885" width="0.0209%" height="15" fill="rgb(237,194,15)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="895.50"></text></g><g><title>std::panicking::try::do_call (39 samples, 0.02%)</title><rect x="99.9652%" y="869" width="0.0209%" height="15" fill="rgb(219,203,20)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="879.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (39 samples, 0.02%)</title><rect x="99.9652%" y="853" width="0.0209%" height="15" fill="rgb(234,128,8)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="863.50"></text></g><g><title>std::panic::catch_unwind (39 samples, 0.02%)</title><rect x="99.9652%" y="837" width="0.0209%" height="15" fill="rgb(248,202,8)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="847.50"></text></g><g><title>std::panicking::try (39 samples, 0.02%)</title><rect x="99.9652%" y="821" width="0.0209%" height="15" fill="rgb(206,104,37)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="831.50"></text></g><g><title>std::panicking::try::do_call (39 samples, 0.02%)</title><rect x="99.9652%" y="805" width="0.0209%" height="15" fill="rgb(223,8,27)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (39 samples, 0.02%)</title><rect x="99.9652%" y="789" width="0.0209%" height="15" fill="rgb(216,217,28)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="799.50"></text></g><g><title>std::rt::lang_start::{{closure}} (39 samples, 0.02%)</title><rect x="99.9652%" y="773" width="0.0209%" height="15" fill="rgb(249,199,1)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="783.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (39 samples, 0.02%)</title><rect x="99.9652%" y="757" width="0.0209%" height="15" fill="rgb(240,85,17)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (39 samples, 0.02%)</title><rect x="99.9652%" y="741" width="0.0209%" height="15" fill="rgb(206,108,45)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="751.50"></text></g><g><title>hprof_slurp::main (39 samples, 0.02%)</title><rect x="99.9652%" y="725" width="0.0209%" height="15" fill="rgb(245,210,41)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="735.50"></text></g><g><title>hprof_slurp::main_result (39 samples, 0.02%)</title><rect x="99.9652%" y="709" width="0.0209%" height="15" fill="rgb(206,13,37)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="719.50"></text></g><g><title>hprof_slurp::slurp::slurp_file (39 samples, 0.02%)</title><rect x="99.9652%" y="693" width="0.0209%" height="15" fill="rgb(250,61,18)" fg:x="186569" fg:w="39"/><text x="100.2152%" y="703.50"></text></g><g><title>hprof-slurp (72 samples, 0.04%)</title><rect x="99.9587%" y="997" width="0.0386%" height="15" fill="rgb(235,172,48)" fg:x="186557" fg:w="72"/><text x="100.2087%" y="1007.50"></text></g><g><title>all (186,634 samples, 100%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(249,201,17)" fg:x="0" fg:w="186634"/><text x="0.2500%" y="1023.50"></text></g></svg></svg>