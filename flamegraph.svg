<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="965.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="177348"><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (893 samples, 0.50%)</title><rect x="0.0045%" y="885" width="0.5035%" height="15" fill="rgb(227,0,7)" fg:x="8" fg:w="893"/><text x="0.2545%" y="895.50"></text></g><g><title>[anon] (1,037 samples, 0.58%)</title><rect x="0.0000%" y="901" width="0.5847%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1037"/><text x="0.2500%" y="911.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (130 samples, 0.07%)</title><rect x="0.5114%" y="885" width="0.0733%" height="15" fill="rgb(221,193,54)" fg:x="907" fg:w="130"/><text x="0.7614%" y="895.50"></text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (130 samples, 0.07%)</title><rect x="0.5114%" y="869" width="0.0733%" height="15" fill="rgb(248,212,6)" fg:x="907" fg:w="130"/><text x="0.7614%" y="879.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (2,616 samples, 1.48%)</title><rect x="0.5847%" y="885" width="1.4751%" height="15" fill="rgb(208,68,35)" fg:x="1037" fg:w="2616"/><text x="0.8347%" y="895.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (122 samples, 0.07%)</title><rect x="2.0598%" y="885" width="0.0688%" height="15" fill="rgb(232,128,0)" fg:x="3653" fg:w="122"/><text x="2.3098%" y="895.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (2,007 samples, 1.13%)</title><rect x="2.1303%" y="885" width="1.1317%" height="15" fill="rgb(207,160,47)" fg:x="3778" fg:w="2007"/><text x="2.3803%" y="895.50"></text></g><g><title>[unknown] (4,839 samples, 2.73%)</title><rect x="0.5847%" y="901" width="2.7285%" height="15" fill="rgb(228,23,34)" fg:x="1037" fg:w="4839"/><text x="0.8347%" y="911.50">[u..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (81 samples, 0.05%)</title><rect x="3.2676%" y="885" width="0.0457%" height="15" fill="rgb(218,30,26)" fg:x="5795" fg:w="81"/><text x="3.5176%" y="895.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (24 samples, 0.01%)</title><rect x="3.2997%" y="869" width="0.0135%" height="15" fill="rgb(220,122,19)" fg:x="5852" fg:w="24"/><text x="3.5497%" y="879.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (24 samples, 0.01%)</title><rect x="3.2997%" y="853" width="0.0135%" height="15" fill="rgb(250,228,42)" fg:x="5852" fg:w="24"/><text x="3.5497%" y="863.50"></text></g><g><title>__mem_cgroup_charge (21 samples, 0.01%)</title><rect x="8.0401%" y="501" width="0.0118%" height="15" fill="rgb(240,193,28)" fg:x="14259" fg:w="21"/><text x="8.2901%" y="511.50"></text></g><g><title>clear_page_erms (33 samples, 0.02%)</title><rect x="8.0576%" y="453" width="0.0186%" height="15" fill="rgb(216,20,37)" fg:x="14290" fg:w="33"/><text x="8.3076%" y="463.50"></text></g><g><title>alloc_pages_vma (54 samples, 0.03%)</title><rect x="8.0520%" y="501" width="0.0304%" height="15" fill="rgb(206,188,39)" fg:x="14280" fg:w="54"/><text x="8.3020%" y="511.50"></text></g><g><title>__alloc_pages (52 samples, 0.03%)</title><rect x="8.0531%" y="485" width="0.0293%" height="15" fill="rgb(217,207,13)" fg:x="14282" fg:w="52"/><text x="8.3031%" y="495.50"></text></g><g><title>get_page_from_freelist (47 samples, 0.03%)</title><rect x="8.0559%" y="469" width="0.0265%" height="15" fill="rgb(231,73,38)" fg:x="14287" fg:w="47"/><text x="8.3059%" y="479.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (21 samples, 0.01%)</title><rect x="8.0824%" y="501" width="0.0118%" height="15" fill="rgb(225,20,46)" fg:x="14334" fg:w="21"/><text x="8.3324%" y="511.50"></text></g><g><title>lru_cache_add (20 samples, 0.01%)</title><rect x="8.0830%" y="485" width="0.0113%" height="15" fill="rgb(210,31,41)" fg:x="14335" fg:w="20"/><text x="8.3330%" y="495.50"></text></g><g><title>do_anonymous_page (102 samples, 0.06%)</title><rect x="8.0384%" y="517" width="0.0575%" height="15" fill="rgb(221,200,47)" fg:x="14256" fg:w="102"/><text x="8.2884%" y="527.50"></text></g><g><title>handle_pte_fault (104 samples, 0.06%)</title><rect x="8.0379%" y="533" width="0.0586%" height="15" fill="rgb(226,26,5)" fg:x="14255" fg:w="104"/><text x="8.2879%" y="543.50"></text></g><g><title>__handle_mm_fault (110 samples, 0.06%)</title><rect x="8.0350%" y="549" width="0.0620%" height="15" fill="rgb(249,33,26)" fg:x="14250" fg:w="110"/><text x="8.2850%" y="559.50"></text></g><g><title>asm_exc_page_fault (120 samples, 0.07%)</title><rect x="8.0300%" y="613" width="0.0677%" height="15" fill="rgb(235,183,28)" fg:x="14241" fg:w="120"/><text x="8.2800%" y="623.50"></text></g><g><title>exc_page_fault (118 samples, 0.07%)</title><rect x="8.0311%" y="597" width="0.0665%" height="15" fill="rgb(221,5,38)" fg:x="14243" fg:w="118"/><text x="8.2811%" y="607.50"></text></g><g><title>do_user_addr_fault (118 samples, 0.07%)</title><rect x="8.0311%" y="581" width="0.0665%" height="15" fill="rgb(247,18,42)" fg:x="14243" fg:w="118"/><text x="8.2811%" y="591.50"></text></g><g><title>handle_mm_fault (117 samples, 0.07%)</title><rect x="8.0317%" y="565" width="0.0660%" height="15" fill="rgb(241,131,45)" fg:x="14244" fg:w="117"/><text x="8.2817%" y="575.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (26 samples, 0.01%)</title><rect x="8.0976%" y="613" width="0.0147%" height="15" fill="rgb(249,31,29)" fg:x="14361" fg:w="26"/><text x="8.3476%" y="623.50"></text></g><g><title>sysvec_apic_timer_interrupt (25 samples, 0.01%)</title><rect x="8.0982%" y="597" width="0.0141%" height="15" fill="rgb(225,111,53)" fg:x="14362" fg:w="25"/><text x="8.3482%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (8,528 samples, 4.81%)</title><rect x="3.3138%" y="677" width="4.8086%" height="15" fill="rgb(238,160,17)" fg:x="5877" fg:w="8528"/><text x="3.5638%" y="687.50">alloc:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8,528 samples, 4.81%)</title><rect x="3.3138%" y="661" width="4.8086%" height="15" fill="rgb(214,148,48)" fg:x="5877" fg:w="8528"/><text x="3.5638%" y="671.50">alloc:..</text></g><g><title>core::intrinsics::copy_nonoverlapping (8,523 samples, 4.81%)</title><rect x="3.3166%" y="645" width="4.8058%" height="15" fill="rgb(232,36,49)" fg:x="5882" fg:w="8523"/><text x="3.5666%" y="655.50">core::..</text></g><g><title>__memcpy_avx_unaligned_erms (8,523 samples, 4.81%)</title><rect x="3.3166%" y="629" width="4.8058%" height="15" fill="rgb(209,103,24)" fg:x="5882" fg:w="8523"/><text x="3.5666%" y="639.50">__memc..</text></g><g><title>free_pages_and_swap_cache (18 samples, 0.01%)</title><rect x="8.1275%" y="357" width="0.0101%" height="15" fill="rgb(229,88,8)" fg:x="14414" fg:w="18"/><text x="8.3775%" y="367.50"></text></g><g><title>release_pages (18 samples, 0.01%)</title><rect x="8.1275%" y="341" width="0.0101%" height="15" fill="rgb(213,181,19)" fg:x="14414" fg:w="18"/><text x="8.3775%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to (30 samples, 0.02%)</title><rect x="8.1224%" y="677" width="0.0169%" height="15" fill="rgb(254,191,54)" fg:x="14405" fg:w="30"/><text x="8.3724%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (30 samples, 0.02%)</title><rect x="8.1224%" y="661" width="0.0169%" height="15" fill="rgb(241,83,37)" fg:x="14405" fg:w="30"/><text x="8.3724%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (30 samples, 0.02%)</title><rect x="8.1224%" y="645" width="0.0169%" height="15" fill="rgb(233,36,39)" fg:x="14405" fg:w="30"/><text x="8.3724%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (30 samples, 0.02%)</title><rect x="8.1224%" y="629" width="0.0169%" height="15" fill="rgb(226,3,54)" fg:x="14405" fg:w="30"/><text x="8.3724%" y="639.50"></text></g><g><title>alloc::alloc::realloc (30 samples, 0.02%)</title><rect x="8.1224%" y="613" width="0.0169%" height="15" fill="rgb(245,192,40)" fg:x="14405" fg:w="30"/><text x="8.3724%" y="623.50"></text></g><g><title>__GI___libc_realloc (30 samples, 0.02%)</title><rect x="8.1224%" y="597" width="0.0169%" height="15" fill="rgb(238,167,29)" fg:x="14405" fg:w="30"/><text x="8.3724%" y="607.50"></text></g><g><title>mremap_chunk (30 samples, 0.02%)</title><rect x="8.1224%" y="581" width="0.0169%" height="15" fill="rgb(232,182,51)" fg:x="14405" fg:w="30"/><text x="8.3724%" y="591.50"></text></g><g><title>__GI___mremap (30 samples, 0.02%)</title><rect x="8.1224%" y="565" width="0.0169%" height="15" fill="rgb(231,60,39)" fg:x="14405" fg:w="30"/><text x="8.3724%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.02%)</title><rect x="8.1224%" y="549" width="0.0169%" height="15" fill="rgb(208,69,12)" fg:x="14405" fg:w="30"/><text x="8.3724%" y="559.50"></text></g><g><title>do_syscall_64 (30 samples, 0.02%)</title><rect x="8.1224%" y="533" width="0.0169%" height="15" fill="rgb(235,93,37)" fg:x="14405" fg:w="30"/><text x="8.3724%" y="543.50"></text></g><g><title>__x64_sys_mremap (30 samples, 0.02%)</title><rect x="8.1224%" y="517" width="0.0169%" height="15" fill="rgb(213,116,39)" fg:x="14405" fg:w="30"/><text x="8.3724%" y="527.50"></text></g><g><title>__do_sys_mremap (30 samples, 0.02%)</title><rect x="8.1224%" y="501" width="0.0169%" height="15" fill="rgb(222,207,29)" fg:x="14405" fg:w="30"/><text x="8.3724%" y="511.50"></text></g><g><title>__do_munmap (30 samples, 0.02%)</title><rect x="8.1224%" y="485" width="0.0169%" height="15" fill="rgb(206,96,30)" fg:x="14405" fg:w="30"/><text x="8.3724%" y="495.50"></text></g><g><title>unmap_region (30 samples, 0.02%)</title><rect x="8.1224%" y="469" width="0.0169%" height="15" fill="rgb(218,138,4)" fg:x="14405" fg:w="30"/><text x="8.3724%" y="479.50"></text></g><g><title>unmap_vmas (29 samples, 0.02%)</title><rect x="8.1230%" y="453" width="0.0164%" height="15" fill="rgb(250,191,14)" fg:x="14406" fg:w="29"/><text x="8.3730%" y="463.50"></text></g><g><title>unmap_single_vma (29 samples, 0.02%)</title><rect x="8.1230%" y="437" width="0.0164%" height="15" fill="rgb(239,60,40)" fg:x="14406" fg:w="29"/><text x="8.3730%" y="447.50"></text></g><g><title>unmap_page_range (29 samples, 0.02%)</title><rect x="8.1230%" y="421" width="0.0164%" height="15" fill="rgb(206,27,48)" fg:x="14406" fg:w="29"/><text x="8.3730%" y="431.50"></text></g><g><title>zap_pmd_range.isra.0 (29 samples, 0.02%)</title><rect x="8.1230%" y="405" width="0.0164%" height="15" fill="rgb(225,35,8)" fg:x="14406" fg:w="29"/><text x="8.3730%" y="415.50"></text></g><g><title>zap_pte_range (29 samples, 0.02%)</title><rect x="8.1230%" y="389" width="0.0164%" height="15" fill="rgb(250,213,24)" fg:x="14406" fg:w="29"/><text x="8.3730%" y="399.50"></text></g><g><title>tlb_flush_mmu (21 samples, 0.01%)</title><rect x="8.1275%" y="373" width="0.0118%" height="15" fill="rgb(247,123,22)" fg:x="14414" fg:w="21"/><text x="8.3775%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}}&gt; (19 samples, 0.01%)</title><rect x="8.1416%" y="677" width="0.0107%" height="15" fill="rgb(231,138,38)" fg:x="14439" fg:w="19"/><text x="8.3916%" y="687.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (20 samples, 0.01%)</title><rect x="8.1642%" y="677" width="0.0113%" height="15" fill="rgb(231,145,46)" fg:x="14479" fg:w="20"/><text x="8.4142%" y="687.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (20 samples, 0.01%)</title><rect x="8.1642%" y="661" width="0.0113%" height="15" fill="rgb(251,118,11)" fg:x="14479" fg:w="20"/><text x="8.4142%" y="671.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (20 samples, 0.01%)</title><rect x="8.1642%" y="645" width="0.0113%" height="15" fill="rgb(217,147,25)" fg:x="14479" fg:w="20"/><text x="8.4142%" y="655.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (18 samples, 0.01%)</title><rect x="8.1653%" y="629" width="0.0101%" height="15" fill="rgb(247,81,37)" fg:x="14481" fg:w="18"/><text x="8.4153%" y="639.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.01%)</title><rect x="17.9675%" y="341" width="0.0101%" height="15" fill="rgb(209,12,38)" fg:x="31865" fg:w="18"/><text x="18.2175%" y="351.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (20 samples, 0.01%)</title><rect x="17.9675%" y="501" width="0.0113%" height="15" fill="rgb(227,1,9)" fg:x="31865" fg:w="20"/><text x="18.2175%" y="511.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt;::from (20 samples, 0.01%)</title><rect x="17.9675%" y="485" width="0.0113%" height="15" fill="rgb(248,47,43)" fg:x="31865" fg:w="20"/><text x="18.2175%" y="495.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::convert::From&lt;&amp;str&gt;&gt;::from (20 samples, 0.01%)</title><rect x="17.9675%" y="469" width="0.0113%" height="15" fill="rgb(221,10,30)" fg:x="31865" fg:w="20"/><text x="18.2175%" y="479.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (20 samples, 0.01%)</title><rect x="17.9675%" y="453" width="0.0113%" height="15" fill="rgb(210,229,1)" fg:x="31865" fg:w="20"/><text x="18.2175%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (20 samples, 0.01%)</title><rect x="17.9675%" y="437" width="0.0113%" height="15" fill="rgb(222,148,37)" fg:x="31865" fg:w="20"/><text x="18.2175%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.01%)</title><rect x="17.9675%" y="421" width="0.0113%" height="15" fill="rgb(234,67,33)" fg:x="31865" fg:w="20"/><text x="18.2175%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (20 samples, 0.01%)</title><rect x="17.9675%" y="405" width="0.0113%" height="15" fill="rgb(247,98,35)" fg:x="31865" fg:w="20"/><text x="18.2175%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.01%)</title><rect x="17.9675%" y="389" width="0.0113%" height="15" fill="rgb(247,138,52)" fg:x="31865" fg:w="20"/><text x="18.2175%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.01%)</title><rect x="17.9675%" y="373" width="0.0113%" height="15" fill="rgb(213,79,30)" fg:x="31865" fg:w="20"/><text x="18.2175%" y="383.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.01%)</title><rect x="17.9675%" y="357" width="0.0113%" height="15" fill="rgb(246,177,23)" fg:x="31865" fg:w="20"/><text x="18.2175%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (29 samples, 0.02%)</title><rect x="17.9669%" y="613" width="0.0164%" height="15" fill="rgb(230,62,27)" fg:x="31864" fg:w="29"/><text x="18.2169%" y="623.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}}::{{closure}} (29 samples, 0.02%)</title><rect x="17.9669%" y="597" width="0.0164%" height="15" fill="rgb(216,154,8)" fg:x="31864" fg:w="29"/><text x="18.2169%" y="607.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_utf8_string (28 samples, 0.02%)</title><rect x="17.9675%" y="581" width="0.0158%" height="15" fill="rgb(244,35,45)" fg:x="31865" fg:w="28"/><text x="18.2175%" y="591.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (28 samples, 0.02%)</title><rect x="17.9675%" y="565" width="0.0158%" height="15" fill="rgb(251,115,12)" fg:x="31865" fg:w="28"/><text x="18.2175%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (28 samples, 0.02%)</title><rect x="17.9675%" y="549" width="0.0158%" height="15" fill="rgb(240,54,50)" fg:x="31865" fg:w="28"/><text x="18.2175%" y="559.50"></text></g><g><title>nom::combinator::map::{{closure}} (28 samples, 0.02%)</title><rect x="17.9675%" y="533" width="0.0158%" height="15" fill="rgb(233,84,52)" fg:x="31865" fg:w="28"/><text x="18.2175%" y="543.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_utf8_string::{{closure}}::{{closure}} (28 samples, 0.02%)</title><rect x="17.9675%" y="517" width="0.0158%" height="15" fill="rgb(207,117,47)" fg:x="31865" fg:w="28"/><text x="18.2175%" y="527.50"></text></g><g><title>__hrtimer_run_queues (19 samples, 0.01%)</title><rect x="24.5624%" y="533" width="0.0107%" height="15" fill="rgb(249,43,39)" fg:x="43561" fg:w="19"/><text x="24.8124%" y="543.50"></text></g><g><title>__sysvec_apic_timer_interrupt (22 samples, 0.01%)</title><rect x="24.5619%" y="565" width="0.0124%" height="15" fill="rgb(209,38,44)" fg:x="43560" fg:w="22"/><text x="24.8119%" y="575.50"></text></g><g><title>hrtimer_interrupt (22 samples, 0.01%)</title><rect x="24.5619%" y="549" width="0.0124%" height="15" fill="rgb(236,212,23)" fg:x="43560" fg:w="22"/><text x="24.8119%" y="559.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (29 samples, 0.02%)</title><rect x="24.5619%" y="597" width="0.0164%" height="15" fill="rgb(242,79,21)" fg:x="43560" fg:w="29"/><text x="24.8119%" y="607.50"></text></g><g><title>sysvec_apic_timer_interrupt (29 samples, 0.02%)</title><rect x="24.5619%" y="581" width="0.0164%" height="15" fill="rgb(211,96,35)" fg:x="43560" fg:w="29"/><text x="24.8119%" y="591.50"></text></g><g><title>__hrtimer_run_queues (20 samples, 0.01%)</title><rect x="37.9626%" y="517" width="0.0113%" height="15" fill="rgb(253,215,40)" fg:x="67326" fg:w="20"/><text x="38.2126%" y="527.50"></text></g><g><title>tick_sched_timer (20 samples, 0.01%)</title><rect x="37.9626%" y="501" width="0.0113%" height="15" fill="rgb(211,81,21)" fg:x="67326" fg:w="20"/><text x="38.2126%" y="511.50"></text></g><g><title>__sysvec_apic_timer_interrupt (23 samples, 0.01%)</title><rect x="37.9615%" y="549" width="0.0130%" height="15" fill="rgb(208,190,38)" fg:x="67324" fg:w="23"/><text x="38.2115%" y="559.50"></text></g><g><title>hrtimer_interrupt (22 samples, 0.01%)</title><rect x="37.9621%" y="533" width="0.0124%" height="15" fill="rgb(235,213,38)" fg:x="67325" fg:w="22"/><text x="38.2121%" y="543.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (29 samples, 0.02%)</title><rect x="37.9615%" y="581" width="0.0164%" height="15" fill="rgb(237,122,38)" fg:x="67324" fg:w="29"/><text x="38.2115%" y="591.50"></text></g><g><title>sysvec_apic_timer_interrupt (29 samples, 0.02%)</title><rect x="37.9615%" y="565" width="0.0164%" height="15" fill="rgb(244,218,35)" fg:x="67324" fg:w="29"/><text x="38.2115%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (35,461 samples, 20.00%)</title><rect x="17.9833%" y="613" width="19.9952%" height="15" fill="rgb(240,68,47)" fg:x="31893" fg:w="35461"/><text x="18.2333%" y="623.50">core::result::Result&lt;T,E&gt;::map</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}}::{{closure}} (23,765 samples, 13.40%)</title><rect x="24.5782%" y="597" width="13.4002%" height="15" fill="rgb(210,16,53)" fg:x="43589" fg:w="23765"/><text x="24.8282%" y="607.50">hprof_slurp::parser:..</text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u8 (1,712 samples, 0.97%)</title><rect x="38.0720%" y="549" width="0.9653%" height="15" fill="rgb(235,124,12)" fg:x="67520" fg:w="1712"/><text x="38.3220%" y="559.50"></text></g><g><title>nom::number::streaming::be_u8 (1,712 samples, 0.97%)</title><rect x="38.0720%" y="533" width="0.9653%" height="15" fill="rgb(224,169,11)" fg:x="67520" fg:w="1712"/><text x="38.3220%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,706 samples, 0.96%)</title><rect x="38.0754%" y="517" width="0.9620%" height="15" fill="rgb(250,166,2)" fg:x="67526" fg:w="1706"/><text x="38.3254%" y="527.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1,706 samples, 0.96%)</title><rect x="38.0754%" y="501" width="0.9620%" height="15" fill="rgb(242,216,29)" fg:x="67526" fg:w="1706"/><text x="38.3254%" y="511.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (682 samples, 0.38%)</title><rect x="45.4434%" y="453" width="0.3846%" height="15" fill="rgb(230,116,27)" fg:x="80593" fg:w="682"/><text x="45.6934%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (685 samples, 0.39%)</title><rect x="45.4434%" y="485" width="0.3862%" height="15" fill="rgb(228,99,48)" fg:x="80593" fg:w="685"/><text x="45.6934%" y="495.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (685 samples, 0.39%)</title><rect x="45.4434%" y="469" width="0.3862%" height="15" fill="rgb(253,11,6)" fg:x="80593" fg:w="685"/><text x="45.6934%" y="479.50"></text></g><g><title>nom::combinator::map::{{closure}} (2,024 samples, 1.14%)</title><rect x="44.6929%" y="501" width="1.1413%" height="15" fill="rgb(247,143,39)" fg:x="79262" fg:w="2024"/><text x="44.9429%" y="511.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (2,376 samples, 1.34%)</title><rect x="48.1477%" y="437" width="1.3397%" height="15" fill="rgb(236,97,10)" fg:x="85389" fg:w="2376"/><text x="48.3977%" y="447.50"></text></g><g><title>nom::number::streaming::be_u32 (2,376 samples, 1.34%)</title><rect x="48.1477%" y="421" width="1.3397%" height="15" fill="rgb(233,208,19)" fg:x="85389" fg:w="2376"/><text x="48.3977%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5,834 samples, 3.29%)</title><rect x="48.1477%" y="469" width="3.2896%" height="15" fill="rgb(216,164,2)" fg:x="85389" fg:w="5834"/><text x="48.3977%" y="479.50">&lt;F ..</text></g><g><title>core::ops::function::FnMut::call_mut (5,834 samples, 3.29%)</title><rect x="48.1477%" y="453" width="3.2896%" height="15" fill="rgb(220,129,5)" fg:x="85389" fg:w="5834"/><text x="48.3977%" y="463.50">cor..</text></g><g><title>hprof_slurp::parser::record_parser::parse_id (3,458 samples, 1.95%)</title><rect x="49.4874%" y="437" width="1.9498%" height="15" fill="rgb(242,17,10)" fg:x="87765" fg:w="3458"/><text x="49.7374%" y="447.50">h..</text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (3,458 samples, 1.95%)</title><rect x="49.4874%" y="421" width="1.9498%" height="15" fill="rgb(242,107,0)" fg:x="87765" fg:w="3458"/><text x="49.7374%" y="431.50">h..</text></g><g><title>nom::number::streaming::be_u64 (3,458 samples, 1.95%)</title><rect x="49.4874%" y="405" width="1.9498%" height="15" fill="rgb(251,28,31)" fg:x="87765" fg:w="3458"/><text x="49.7374%" y="415.50">n..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (9,959 samples, 5.62%)</title><rect x="45.8342%" y="485" width="5.6155%" height="15" fill="rgb(233,223,10)" fg:x="81286" fg:w="9959"/><text x="46.0842%" y="495.50">&lt;(FnA,F..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (11,987 samples, 6.76%)</title><rect x="44.6929%" y="517" width="6.7590%" height="15" fill="rgb(215,21,27)" fg:x="79262" fg:w="11987"/><text x="44.9429%" y="527.50">&lt;F as nom..</text></g><g><title>nom::sequence::tuple::{{closure}} (9,963 samples, 5.62%)</title><rect x="45.8342%" y="501" width="5.6178%" height="15" fill="rgb(232,23,21)" fg:x="81286" fg:w="9963"/><text x="46.0842%" y="511.50">nom::se..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (793 samples, 0.45%)</title><rect x="51.4519%" y="517" width="0.4471%" height="15" fill="rgb(244,5,23)" fg:x="91249" fg:w="793"/><text x="51.7019%" y="527.50"></text></g><g><title>__sysvec_apic_timer_interrupt (21 samples, 0.01%)</title><rect x="51.8991%" y="485" width="0.0118%" height="15" fill="rgb(226,81,46)" fg:x="92042" fg:w="21"/><text x="52.1491%" y="495.50"></text></g><g><title>hrtimer_interrupt (21 samples, 0.01%)</title><rect x="51.8991%" y="469" width="0.0118%" height="15" fill="rgb(247,70,30)" fg:x="92042" fg:w="21"/><text x="52.1491%" y="479.50"></text></g><g><title>__hrtimer_run_queues (20 samples, 0.01%)</title><rect x="51.8997%" y="453" width="0.0113%" height="15" fill="rgb(212,68,19)" fg:x="92043" fg:w="20"/><text x="52.1497%" y="463.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (22,825 samples, 12.87%)</title><rect x="39.0413%" y="549" width="12.8702%" height="15" fill="rgb(240,187,13)" fg:x="69239" fg:w="22825"/><text x="39.2913%" y="559.50">hprof_slurp::parser..</text></g><g><title>nom::combinator::flat_map::{{closure}} (21,442 samples, 12.09%)</title><rect x="39.8211%" y="533" width="12.0904%" height="15" fill="rgb(223,113,26)" fg:x="70622" fg:w="21442"/><text x="40.0711%" y="543.50">nom::combinator::f..</text></g><g><title>asm_sysvec_apic_timer_interrupt (22 samples, 0.01%)</title><rect x="51.8991%" y="517" width="0.0124%" height="15" fill="rgb(206,192,2)" fg:x="92042" fg:w="22"/><text x="52.1491%" y="527.50"></text></g><g><title>sysvec_apic_timer_interrupt (22 samples, 0.01%)</title><rect x="51.8991%" y="501" width="0.0124%" height="15" fill="rgb(241,108,4)" fg:x="92042" fg:w="22"/><text x="52.1491%" y="511.50"></text></g><g><title>nom::combinator::map::{{closure}} (26 samples, 0.01%)</title><rect x="51.9160%" y="501" width="0.0147%" height="15" fill="rgb(247,173,49)" fg:x="92072" fg:w="26"/><text x="52.1660%" y="511.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (52 samples, 0.03%)</title><rect x="51.9307%" y="485" width="0.0293%" height="15" fill="rgb(224,114,35)" fg:x="92098" fg:w="52"/><text x="52.1807%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (29 samples, 0.02%)</title><rect x="51.9436%" y="469" width="0.0164%" height="15" fill="rgb(245,159,27)" fg:x="92121" fg:w="29"/><text x="52.1936%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (29 samples, 0.02%)</title><rect x="51.9436%" y="453" width="0.0164%" height="15" fill="rgb(245,172,44)" fg:x="92121" fg:w="29"/><text x="52.1936%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (80 samples, 0.05%)</title><rect x="51.9160%" y="517" width="0.0451%" height="15" fill="rgb(236,23,11)" fg:x="92072" fg:w="80"/><text x="52.1660%" y="527.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (54 samples, 0.03%)</title><rect x="51.9307%" y="501" width="0.0304%" height="15" fill="rgb(205,117,38)" fg:x="92098" fg:w="54"/><text x="52.1807%" y="511.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_object_array_dump (101 samples, 0.06%)</title><rect x="51.9115%" y="549" width="0.0570%" height="15" fill="rgb(237,72,25)" fg:x="92064" fg:w="101"/><text x="52.1615%" y="559.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (99 samples, 0.06%)</title><rect x="51.9126%" y="533" width="0.0558%" height="15" fill="rgb(244,70,9)" fg:x="92066" fg:w="99"/><text x="52.1626%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (89 samples, 0.05%)</title><rect x="52.0113%" y="485" width="0.0502%" height="15" fill="rgb(217,125,39)" fg:x="92241" fg:w="89"/><text x="52.2613%" y="495.50"></text></g><g><title>hprof_slurp::parser::record_parser::skip_array_value::{{closure}} (79 samples, 0.04%)</title><rect x="52.0169%" y="469" width="0.0445%" height="15" fill="rgb(235,36,10)" fg:x="92251" fg:w="79"/><text x="52.2669%" y="479.50"></text></g><g><title>nom::combinator::map::{{closure}} (191 samples, 0.11%)</title><rect x="51.9769%" y="501" width="0.1077%" height="15" fill="rgb(251,123,47)" fg:x="92180" fg:w="191"/><text x="52.2269%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (41 samples, 0.02%)</title><rect x="52.0615%" y="485" width="0.0231%" height="15" fill="rgb(221,13,13)" fg:x="92330" fg:w="41"/><text x="52.3115%" y="495.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (93 samples, 0.05%)</title><rect x="52.1432%" y="437" width="0.0524%" height="15" fill="rgb(238,131,9)" fg:x="92475" fg:w="93"/><text x="52.3932%" y="447.50"></text></g><g><title>nom::number::streaming::be_u32 (93 samples, 0.05%)</title><rect x="52.1432%" y="421" width="0.0524%" height="15" fill="rgb(211,50,8)" fg:x="92475" fg:w="93"/><text x="52.3932%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.02%)</title><rect x="52.1765%" y="405" width="0.0192%" height="15" fill="rgb(245,182,24)" fg:x="92534" fg:w="34"/><text x="52.4265%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.02%)</title><rect x="52.1765%" y="389" width="0.0192%" height="15" fill="rgb(242,14,37)" fg:x="92534" fg:w="34"/><text x="52.4265%" y="399.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (34 samples, 0.02%)</title><rect x="52.1765%" y="373" width="0.0192%" height="15" fill="rgb(246,228,12)" fg:x="92534" fg:w="34"/><text x="52.4265%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (44 samples, 0.02%)</title><rect x="52.1957%" y="309" width="0.0248%" height="15" fill="rgb(213,55,15)" fg:x="92568" fg:w="44"/><text x="52.4457%" y="319.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (43 samples, 0.02%)</title><rect x="52.1962%" y="293" width="0.0242%" height="15" fill="rgb(209,9,3)" fg:x="92569" fg:w="43"/><text x="52.4462%" y="303.50"></text></g><g><title>nom::number::streaming::be_u8 (43 samples, 0.02%)</title><rect x="52.1962%" y="277" width="0.0242%" height="15" fill="rgb(230,59,30)" fg:x="92569" fg:w="43"/><text x="52.4462%" y="287.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (71 samples, 0.04%)</title><rect x="52.1957%" y="405" width="0.0400%" height="15" fill="rgb(209,121,21)" fg:x="92568" fg:w="71"/><text x="52.4457%" y="415.50"></text></g><g><title>core::ops::function::FnMut::call_mut (71 samples, 0.04%)</title><rect x="52.1957%" y="389" width="0.0400%" height="15" fill="rgb(220,109,13)" fg:x="92568" fg:w="71"/><text x="52.4457%" y="399.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_i8 (71 samples, 0.04%)</title><rect x="52.1957%" y="373" width="0.0400%" height="15" fill="rgb(232,18,1)" fg:x="92568" fg:w="71"/><text x="52.4457%" y="383.50"></text></g><g><title>nom::number::streaming::be_i8 (71 samples, 0.04%)</title><rect x="52.1957%" y="357" width="0.0400%" height="15" fill="rgb(215,41,42)" fg:x="92568" fg:w="71"/><text x="52.4457%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (71 samples, 0.04%)</title><rect x="52.1957%" y="341" width="0.0400%" height="15" fill="rgb(224,123,36)" fg:x="92568" fg:w="71"/><text x="52.4457%" y="351.50"></text></g><g><title>nom::combinator::map::{{closure}} (71 samples, 0.04%)</title><rect x="52.1957%" y="325" width="0.0400%" height="15" fill="rgb(240,125,3)" fg:x="92568" fg:w="71"/><text x="52.4457%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (27 samples, 0.02%)</title><rect x="52.2205%" y="309" width="0.0152%" height="15" fill="rgb(205,98,50)" fg:x="92612" fg:w="27"/><text x="52.4705%" y="319.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (523 samples, 0.29%)</title><rect x="51.9769%" y="517" width="0.2949%" height="15" fill="rgb(205,185,37)" fg:x="92180" fg:w="523"/><text x="52.2269%" y="527.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (332 samples, 0.19%)</title><rect x="52.0846%" y="501" width="0.1872%" height="15" fill="rgb(238,207,15)" fg:x="92371" fg:w="332"/><text x="52.3346%" y="511.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (332 samples, 0.19%)</title><rect x="52.0846%" y="485" width="0.1872%" height="15" fill="rgb(213,199,42)" fg:x="92371" fg:w="332"/><text x="52.3346%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (228 samples, 0.13%)</title><rect x="52.1432%" y="469" width="0.1286%" height="15" fill="rgb(235,201,11)" fg:x="92475" fg:w="228"/><text x="52.3932%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (228 samples, 0.13%)</title><rect x="52.1432%" y="453" width="0.1286%" height="15" fill="rgb(207,46,11)" fg:x="92475" fg:w="228"/><text x="52.3932%" y="463.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_field_type (135 samples, 0.08%)</title><rect x="52.1957%" y="437" width="0.0761%" height="15" fill="rgb(241,35,35)" fg:x="92568" fg:w="135"/><text x="52.4457%" y="447.50"></text></g><g><title>nom::combinator::map::{{closure}} (135 samples, 0.08%)</title><rect x="52.1957%" y="421" width="0.0761%" height="15" fill="rgb(243,32,47)" fg:x="92568" fg:w="135"/><text x="52.4457%" y="431.50"></text></g><g><title>core::ops::function::FnMut::call_mut (64 samples, 0.04%)</title><rect x="52.2357%" y="405" width="0.0361%" height="15" fill="rgb(247,202,23)" fg:x="92639" fg:w="64"/><text x="52.4857%" y="415.50"></text></g><g><title>hprof_slurp::parser::gc_record::FieldType::from_value (64 samples, 0.04%)</title><rect x="52.2357%" y="389" width="0.0361%" height="15" fill="rgb(219,102,11)" fg:x="92639" fg:w="64"/><text x="52.4857%" y="399.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (54 samples, 0.03%)</title><rect x="52.2718%" y="517" width="0.0304%" height="15" fill="rgb(243,110,44)" fg:x="92703" fg:w="54"/><text x="52.5218%" y="527.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (629 samples, 0.35%)</title><rect x="51.9684%" y="549" width="0.3547%" height="15" fill="rgb(222,74,54)" fg:x="92165" fg:w="629"/><text x="52.2184%" y="559.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (614 samples, 0.35%)</title><rect x="51.9769%" y="533" width="0.3462%" height="15" fill="rgb(216,99,12)" fg:x="92180" fg:w="614"/><text x="52.2269%" y="543.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump::{{closure}} (37 samples, 0.02%)</title><rect x="52.3023%" y="517" width="0.0209%" height="15" fill="rgb(226,22,26)" fg:x="92757" fg:w="37"/><text x="52.5523%" y="527.50"></text></g><g><title>nom::combinator::map (37 samples, 0.02%)</title><rect x="52.3023%" y="501" width="0.0209%" height="15" fill="rgb(217,163,10)" fg:x="92757" fg:w="37"/><text x="52.5523%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (25,375 samples, 14.31%)</title><rect x="38.0157%" y="581" width="14.3080%" height="15" fill="rgb(213,25,53)" fg:x="67420" fg:w="25375"/><text x="38.2657%" y="591.50">&lt;F as nom::internal::P..</text></g><g><title>core::ops::function::FnMut::call_mut (25,375 samples, 14.31%)</title><rect x="38.0157%" y="565" width="14.3080%" height="15" fill="rgb(252,105,26)" fg:x="67420" fg:w="25375"/><text x="38.2657%" y="575.50">core::ops::function::F..</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (64,861 samples, 36.57%)</title><rect x="16.0960%" y="629" width="36.5727%" height="15" fill="rgb(220,39,43)" fg:x="28546" fg:w="64861"/><text x="16.3460%" y="639.50">hprof_slurp::parser::record_parser::HprofRecordParser::pars..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record (26,053 samples, 14.69%)</title><rect x="37.9784%" y="613" width="14.6903%" height="15" fill="rgb(229,68,48)" fg:x="67354" fg:w="26053"/><text x="38.2284%" y="623.50">hprof_slurp::parser::r..</text></g><g><title>nom::combinator::flat_map::{{closure}} (26,053 samples, 14.69%)</title><rect x="37.9784%" y="597" width="14.6903%" height="15" fill="rgb(252,8,32)" fg:x="67354" fg:w="26053"/><text x="38.2284%" y="607.50">nom::combinator::flat_..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record::{{closure}} (612 samples, 0.35%)</title><rect x="52.3237%" y="581" width="0.3451%" height="15" fill="rgb(223,20,43)" fg:x="92795" fg:w="612"/><text x="52.5737%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (65,545 samples, 36.96%)</title><rect x="15.7109%" y="645" width="36.9584%" height="15" fill="rgb(229,81,49)" fg:x="27863" fg:w="65545"/><text x="15.9609%" y="655.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (567 samples, 0.32%)</title><rect x="52.7156%" y="629" width="0.3197%" height="15" fill="rgb(236,28,36)" fg:x="93490" fg:w="567"/><text x="52.9656%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (32 samples, 0.02%)</title><rect x="53.0358%" y="629" width="0.0180%" height="15" fill="rgb(249,185,26)" fg:x="94058" fg:w="32"/><text x="53.2858%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (32 samples, 0.02%)</title><rect x="53.0358%" y="613" width="0.0180%" height="15" fill="rgb(249,174,33)" fg:x="94058" fg:w="32"/><text x="53.2858%" y="623.50"></text></g><g><title>do_anonymous_page (20 samples, 0.01%)</title><rect x="53.8196%" y="517" width="0.0113%" height="15" fill="rgb(233,201,37)" fg:x="95448" fg:w="20"/><text x="54.0696%" y="527.50"></text></g><g><title>do_user_addr_fault (26 samples, 0.01%)</title><rect x="53.8168%" y="581" width="0.0147%" height="15" fill="rgb(221,78,26)" fg:x="95443" fg:w="26"/><text x="54.0668%" y="591.50"></text></g><g><title>handle_mm_fault (24 samples, 0.01%)</title><rect x="53.8179%" y="565" width="0.0135%" height="15" fill="rgb(250,127,30)" fg:x="95445" fg:w="24"/><text x="54.0679%" y="575.50"></text></g><g><title>__handle_mm_fault (24 samples, 0.01%)</title><rect x="53.8179%" y="549" width="0.0135%" height="15" fill="rgb(230,49,44)" fg:x="95445" fg:w="24"/><text x="54.0679%" y="559.50"></text></g><g><title>handle_pte_fault (23 samples, 0.01%)</title><rect x="53.8185%" y="533" width="0.0130%" height="15" fill="rgb(229,67,23)" fg:x="95446" fg:w="23"/><text x="54.0685%" y="543.50"></text></g><g><title>asm_exc_page_fault (30 samples, 0.02%)</title><rect x="53.8168%" y="613" width="0.0169%" height="15" fill="rgb(249,83,47)" fg:x="95443" fg:w="30"/><text x="54.0668%" y="623.50"></text></g><g><title>exc_page_fault (30 samples, 0.02%)</title><rect x="53.8168%" y="597" width="0.0169%" height="15" fill="rgb(215,43,3)" fg:x="95443" fg:w="30"/><text x="54.0668%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,069 samples, 1.17%)</title><rect x="52.6693%" y="645" width="1.1666%" height="15" fill="rgb(238,154,13)" fg:x="93408" fg:w="2069"/><text x="52.9193%" y="655.50"></text></g><g><title>core::ptr::write (1,387 samples, 0.78%)</title><rect x="53.0539%" y="629" width="0.7821%" height="15" fill="rgb(219,56,2)" fg:x="94090" fg:w="1387"/><text x="53.3039%" y="639.50"></text></g><g><title>__sysvec_apic_timer_interrupt (23 samples, 0.01%)</title><rect x="53.8365%" y="613" width="0.0130%" height="15" fill="rgb(233,0,4)" fg:x="95478" fg:w="23"/><text x="54.0865%" y="623.50"></text></g><g><title>hrtimer_interrupt (23 samples, 0.01%)</title><rect x="53.8365%" y="597" width="0.0130%" height="15" fill="rgb(235,30,7)" fg:x="95478" fg:w="23"/><text x="54.0865%" y="607.50"></text></g><g><title>__hrtimer_run_queues (23 samples, 0.01%)</title><rect x="53.8365%" y="581" width="0.0130%" height="15" fill="rgb(250,79,13)" fg:x="95478" fg:w="23"/><text x="54.0865%" y="591.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (30 samples, 0.02%)</title><rect x="53.8360%" y="645" width="0.0169%" height="15" fill="rgb(211,146,34)" fg:x="95477" fg:w="30"/><text x="54.0860%" y="655.50"></text></g><g><title>sysvec_apic_timer_interrupt (29 samples, 0.02%)</title><rect x="53.8365%" y="629" width="0.0164%" height="15" fill="rgb(228,22,38)" fg:x="95478" fg:w="29"/><text x="54.0865%" y="639.50"></text></g><g><title>__clone3 (89,633 samples, 50.54%)</title><rect x="3.3133%" y="901" width="50.5407%" height="15" fill="rgb(235,168,5)" fg:x="5876" fg:w="89633"/><text x="3.5633%" y="911.50">__clone3</text></g><g><title>start_thread (89,633 samples, 50.54%)</title><rect x="3.3133%" y="885" width="50.5407%" height="15" fill="rgb(221,155,16)" fg:x="5876" fg:w="89633"/><text x="3.5633%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (89,633 samples, 50.54%)</title><rect x="3.3133%" y="869" width="50.5407%" height="15" fill="rgb(215,215,53)" fg:x="5876" fg:w="89633"/><text x="3.5633%" y="879.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (89,633 samples, 50.54%)</title><rect x="3.3133%" y="853" width="50.5407%" height="15" fill="rgb(223,4,10)" fg:x="5876" fg:w="89633"/><text x="3.5633%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (89,633 samples, 50.54%)</title><rect x="3.3133%" y="837" width="50.5407%" height="15" fill="rgb(234,103,6)" fg:x="5876" fg:w="89633"/><text x="3.5633%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (89,633 samples, 50.54%)</title><rect x="3.3133%" y="821" width="50.5407%" height="15" fill="rgb(227,97,0)" fg:x="5876" fg:w="89633"/><text x="3.5633%" y="831.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (89,633 samples, 50.54%)</title><rect x="3.3133%" y="805" width="50.5407%" height="15" fill="rgb(234,150,53)" fg:x="5876" fg:w="89633"/><text x="3.5633%" y="815.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (89,633 samples, 50.54%)</title><rect x="3.3133%" y="789" width="50.5407%" height="15" fill="rgb(228,201,54)" fg:x="5876" fg:w="89633"/><text x="3.5633%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (89,633 samples, 50.54%)</title><rect x="3.3133%" y="773" width="50.5407%" height="15" fill="rgb(222,22,37)" fg:x="5876" fg:w="89633"/><text x="3.5633%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (89,633 samples, 50.54%)</title><rect x="3.3133%" y="757" width="50.5407%" height="15" fill="rgb(237,53,32)" fg:x="5876" fg:w="89633"/><text x="3.5633%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (89,633 samples, 50.54%)</title><rect x="3.3133%" y="741" width="50.5407%" height="15" fill="rgb(233,25,53)" fg:x="5876" fg:w="89633"/><text x="3.5633%" y="751.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;:..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (89,633 samples, 50.54%)</title><rect x="3.3133%" y="725" width="50.5407%" height="15" fill="rgb(210,40,34)" fg:x="5876" fg:w="89633"/><text x="3.5633%" y="735.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (89,633 samples, 50.54%)</title><rect x="3.3133%" y="709" width="50.5407%" height="15" fill="rgb(241,220,44)" fg:x="5876" fg:w="89633"/><text x="3.5633%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}} (89,633 samples, 50.54%)</title><rect x="3.3133%" y="693" width="50.5407%" height="15" fill="rgb(235,28,35)" fg:x="5876" fg:w="89633"/><text x="3.5633%" y="703.50">hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closur..</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (81,010 samples, 45.68%)</title><rect x="8.1755%" y="677" width="45.6786%" height="15" fill="rgb(210,56,17)" fg:x="14499" fg:w="81010"/><text x="8.4255%" y="687.50">hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming</text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (81,010 samples, 45.68%)</title><rect x="8.1755%" y="661" width="45.6786%" height="15" fill="rgb(224,130,29)" fg:x="14499" fg:w="81010"/><text x="8.4255%" y="671.50">hprof_slurp::parser::record_parser::lazy_many1::{{closure}}</text></g><g><title>asm_exc_page_fault (34 samples, 0.02%)</title><rect x="53.8540%" y="901" width="0.0192%" height="15" fill="rgb(235,212,8)" fg:x="95509" fg:w="34"/><text x="54.1040%" y="911.50"></text></g><g><title>hprof-parser (95,549 samples, 53.88%)</title><rect x="0.0000%" y="917" width="53.8766%" height="15" fill="rgb(223,33,50)" fg:x="0" fg:w="95549"/><text x="0.2500%" y="927.50">hprof-parser</text></g><g><title>copy_page_to_iter (23 samples, 0.01%)</title><rect x="53.8811%" y="421" width="0.0130%" height="15" fill="rgb(219,149,13)" fg:x="95557" fg:w="23"/><text x="54.1311%" y="431.50"></text></g><g><title>__cond_resched (26 samples, 0.01%)</title><rect x="54.2854%" y="405" width="0.0147%" height="15" fill="rgb(250,156,29)" fg:x="96274" fg:w="26"/><text x="54.5354%" y="415.50"></text></g><g><title>copy_page_to_iter (434 samples, 0.24%)</title><rect x="54.3141%" y="405" width="0.2447%" height="15" fill="rgb(216,193,19)" fg:x="96325" fg:w="434"/><text x="54.5641%" y="415.50"></text></g><g><title>rcu_all_qs (21 samples, 0.01%)</title><rect x="54.5470%" y="389" width="0.0118%" height="15" fill="rgb(216,135,14)" fg:x="96738" fg:w="21"/><text x="54.7970%" y="399.50"></text></g><g><title>__read_end_io (21 samples, 0.01%)</title><rect x="62.1073%" y="165" width="0.0118%" height="15" fill="rgb(241,47,5)" fg:x="110146" fg:w="21"/><text x="62.3573%" y="175.50"></text></g><g><title>nvme_complete_rq (51 samples, 0.03%)</title><rect x="62.0971%" y="245" width="0.0288%" height="15" fill="rgb(233,42,35)" fg:x="110128" fg:w="51"/><text x="62.3471%" y="255.50"></text></g><g><title>blk_mq_end_request (51 samples, 0.03%)</title><rect x="62.0971%" y="229" width="0.0288%" height="15" fill="rgb(231,13,6)" fg:x="110128" fg:w="51"/><text x="62.3471%" y="239.50"></text></g><g><title>blk_update_request (42 samples, 0.02%)</title><rect x="62.1022%" y="213" width="0.0237%" height="15" fill="rgb(207,181,40)" fg:x="110137" fg:w="42"/><text x="62.3522%" y="223.50"></text></g><g><title>bio_endio (38 samples, 0.02%)</title><rect x="62.1045%" y="197" width="0.0214%" height="15" fill="rgb(254,173,49)" fg:x="110141" fg:w="38"/><text x="62.3545%" y="207.50"></text></g><g><title>mpage_end_io (33 samples, 0.02%)</title><rect x="62.1073%" y="181" width="0.0186%" height="15" fill="rgb(221,1,38)" fg:x="110146" fg:w="33"/><text x="62.3573%" y="191.50"></text></g><g><title>nvme_irq (68 samples, 0.04%)</title><rect x="62.0937%" y="293" width="0.0383%" height="15" fill="rgb(206,124,46)" fg:x="110122" fg:w="68"/><text x="62.3437%" y="303.50"></text></g><g><title>nvme_process_cq (68 samples, 0.04%)</title><rect x="62.0937%" y="277" width="0.0383%" height="15" fill="rgb(249,21,11)" fg:x="110122" fg:w="68"/><text x="62.3437%" y="287.50"></text></g><g><title>nvme_pci_complete_rq (62 samples, 0.03%)</title><rect x="62.0971%" y="261" width="0.0350%" height="15" fill="rgb(222,201,40)" fg:x="110128" fg:w="62"/><text x="62.3471%" y="271.50"></text></g><g><title>__handle_irq_event_percpu (72 samples, 0.04%)</title><rect x="62.0920%" y="309" width="0.0406%" height="15" fill="rgb(235,61,29)" fg:x="110119" fg:w="72"/><text x="62.3420%" y="319.50"></text></g><g><title>handle_irq_event (73 samples, 0.04%)</title><rect x="62.0920%" y="325" width="0.0412%" height="15" fill="rgb(219,207,3)" fg:x="110119" fg:w="73"/><text x="62.3420%" y="335.50"></text></g><g><title>handle_edge_irq (76 samples, 0.04%)</title><rect x="62.0915%" y="341" width="0.0429%" height="15" fill="rgb(222,56,46)" fg:x="110118" fg:w="76"/><text x="62.3415%" y="351.50"></text></g><g><title>__common_interrupt (80 samples, 0.05%)</title><rect x="62.0904%" y="357" width="0.0451%" height="15" fill="rgb(239,76,54)" fg:x="110116" fg:w="80"/><text x="62.3404%" y="367.50"></text></g><g><title>asm_common_interrupt (83 samples, 0.05%)</title><rect x="62.0904%" y="389" width="0.0468%" height="15" fill="rgb(231,124,27)" fg:x="110116" fg:w="83"/><text x="62.3404%" y="399.50"></text></g><g><title>common_interrupt (83 samples, 0.05%)</title><rect x="62.0904%" y="373" width="0.0468%" height="15" fill="rgb(249,195,6)" fg:x="110116" fg:w="83"/><text x="62.3404%" y="383.50"></text></g><g><title>tick_sched_handle (19 samples, 0.01%)</title><rect x="62.1388%" y="293" width="0.0107%" height="15" fill="rgb(237,174,47)" fg:x="110202" fg:w="19"/><text x="62.3888%" y="303.50"></text></g><g><title>update_process_times (18 samples, 0.01%)</title><rect x="62.1394%" y="277" width="0.0101%" height="15" fill="rgb(206,201,31)" fg:x="110203" fg:w="18"/><text x="62.3894%" y="287.50"></text></g><g><title>__sysvec_apic_timer_interrupt (23 samples, 0.01%)</title><rect x="62.1372%" y="357" width="0.0130%" height="15" fill="rgb(231,57,52)" fg:x="110199" fg:w="23"/><text x="62.3872%" y="367.50"></text></g><g><title>hrtimer_interrupt (23 samples, 0.01%)</title><rect x="62.1372%" y="341" width="0.0130%" height="15" fill="rgb(248,177,22)" fg:x="110199" fg:w="23"/><text x="62.3872%" y="351.50"></text></g><g><title>__hrtimer_run_queues (22 samples, 0.01%)</title><rect x="62.1377%" y="325" width="0.0124%" height="15" fill="rgb(215,211,37)" fg:x="110200" fg:w="22"/><text x="62.3877%" y="335.50"></text></g><g><title>tick_sched_timer (20 samples, 0.01%)</title><rect x="62.1388%" y="309" width="0.0113%" height="15" fill="rgb(241,128,51)" fg:x="110202" fg:w="20"/><text x="62.3888%" y="319.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (28 samples, 0.02%)</title><rect x="62.1372%" y="389" width="0.0158%" height="15" fill="rgb(227,165,31)" fg:x="110199" fg:w="28"/><text x="62.3872%" y="399.50"></text></g><g><title>sysvec_apic_timer_interrupt (28 samples, 0.02%)</title><rect x="62.1372%" y="373" width="0.0158%" height="15" fill="rgb(228,167,24)" fg:x="110199" fg:w="28"/><text x="62.3872%" y="383.50"></text></g><g><title>copy_user_enhanced_fast_string (13,469 samples, 7.59%)</title><rect x="54.5588%" y="405" width="7.5947%" height="15" fill="rgb(228,143,12)" fg:x="96759" fg:w="13469"/><text x="54.8088%" y="415.50">copy_user_..</text></g><g><title>__xas_next (21 samples, 0.01%)</title><rect x="62.4834%" y="373" width="0.0118%" height="15" fill="rgb(249,149,8)" fg:x="110813" fg:w="21"/><text x="62.7334%" y="383.50"></text></g><g><title>filemap_get_read_batch (660 samples, 0.37%)</title><rect x="62.1721%" y="389" width="0.3721%" height="15" fill="rgb(243,35,44)" fg:x="110261" fg:w="660"/><text x="62.4221%" y="399.50"></text></g><g><title>xas_load (81 samples, 0.05%)</title><rect x="62.4986%" y="373" width="0.0457%" height="15" fill="rgb(246,89,9)" fg:x="110840" fg:w="81"/><text x="62.7486%" y="383.50"></text></g><g><title>filemap_update_page (20 samples, 0.01%)</title><rect x="62.5443%" y="389" width="0.0113%" height="15" fill="rgb(233,213,13)" fg:x="110921" fg:w="20"/><text x="62.7943%" y="399.50"></text></g><g><title>wait_on_page_bit_common (20 samples, 0.01%)</title><rect x="62.5443%" y="373" width="0.0113%" height="15" fill="rgb(233,141,41)" fg:x="110921" fg:w="20"/><text x="62.7943%" y="383.50"></text></g><g><title>io_schedule (19 samples, 0.01%)</title><rect x="62.5448%" y="357" width="0.0107%" height="15" fill="rgb(239,167,4)" fg:x="110922" fg:w="19"/><text x="62.7948%" y="367.50"></text></g><g><title>schedule (19 samples, 0.01%)</title><rect x="62.5448%" y="341" width="0.0107%" height="15" fill="rgb(209,217,16)" fg:x="110922" fg:w="19"/><text x="62.7948%" y="351.50"></text></g><g><title>__schedule (19 samples, 0.01%)</title><rect x="62.5448%" y="325" width="0.0107%" height="15" fill="rgb(219,88,35)" fg:x="110922" fg:w="19"/><text x="62.7948%" y="335.50"></text></g><g><title>add_to_page_cache_lru (18 samples, 0.01%)</title><rect x="62.5826%" y="357" width="0.0101%" height="15" fill="rgb(220,193,23)" fg:x="110989" fg:w="18"/><text x="62.8326%" y="367.50"></text></g><g><title>__alloc_pages (18 samples, 0.01%)</title><rect x="62.7783%" y="325" width="0.0101%" height="15" fill="rgb(230,90,52)" fg:x="111336" fg:w="18"/><text x="63.0283%" y="335.50"></text></g><g><title>_find_first_bit (38 samples, 0.02%)</title><rect x="62.7890%" y="325" width="0.0214%" height="15" fill="rgb(252,106,19)" fg:x="111355" fg:w="38"/><text x="63.0390%" y="335.50"></text></g><g><title>clear_page_erms (66 samples, 0.04%)</title><rect x="63.1245%" y="261" width="0.0372%" height="15" fill="rgb(206,74,20)" fg:x="111950" fg:w="66"/><text x="63.3745%" y="271.50"></text></g><g><title>get_page_from_freelist (111 samples, 0.06%)</title><rect x="63.1171%" y="277" width="0.0626%" height="15" fill="rgb(230,138,44)" fg:x="111937" fg:w="111"/><text x="63.3671%" y="287.50"></text></g><g><title>rmqueue (31 samples, 0.02%)</title><rect x="63.1623%" y="261" width="0.0175%" height="15" fill="rgb(235,182,43)" fg:x="112017" fg:w="31"/><text x="63.4123%" y="271.50"></text></g><g><title>wake_all_kswapds (18 samples, 0.01%)</title><rect x="63.1797%" y="277" width="0.0101%" height="15" fill="rgb(242,16,51)" fg:x="112048" fg:w="18"/><text x="63.4297%" y="287.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (135 samples, 0.08%)</title><rect x="63.1143%" y="293" width="0.0761%" height="15" fill="rgb(248,9,4)" fg:x="111932" fg:w="135"/><text x="63.3643%" y="303.50"></text></g><g><title>__cond_resched (36 samples, 0.02%)</title><rect x="63.1905%" y="293" width="0.0203%" height="15" fill="rgb(210,31,22)" fg:x="112067" fg:w="36"/><text x="63.4405%" y="303.50"></text></g><g><title>__next_zones_zonelist (134 samples, 0.08%)</title><rect x="63.2107%" y="293" width="0.0756%" height="15" fill="rgb(239,54,39)" fg:x="112103" fg:w="134"/><text x="63.4607%" y="303.50"></text></g><g><title>__next_zones_zonelist (25 samples, 0.01%)</title><rect x="63.5164%" y="277" width="0.0141%" height="15" fill="rgb(230,99,41)" fg:x="112645" fg:w="25"/><text x="63.7664%" y="287.50"></text></g><g><title>__zone_watermark_ok (27 samples, 0.02%)</title><rect x="63.5305%" y="277" width="0.0152%" height="15" fill="rgb(253,106,12)" fg:x="112670" fg:w="27"/><text x="63.7805%" y="287.50"></text></g><g><title>__read_end_io (79 samples, 0.04%)</title><rect x="65.6528%" y="37" width="0.0445%" height="15" fill="rgb(213,46,41)" fg:x="116434" fg:w="79"/><text x="65.9028%" y="47.50"></text></g><g><title>blk_update_request (109 samples, 0.06%)</title><rect x="65.6500%" y="85" width="0.0615%" height="15" fill="rgb(215,133,35)" fg:x="116429" fg:w="109"/><text x="65.9000%" y="95.50"></text></g><g><title>bio_endio (108 samples, 0.06%)</title><rect x="65.6506%" y="69" width="0.0609%" height="15" fill="rgb(213,28,5)" fg:x="116430" fg:w="108"/><text x="65.9006%" y="79.50"></text></g><g><title>mpage_end_io (104 samples, 0.06%)</title><rect x="65.6528%" y="53" width="0.0586%" height="15" fill="rgb(215,77,49)" fg:x="116434" fg:w="104"/><text x="65.9028%" y="63.50"></text></g><g><title>unlock_page (25 samples, 0.01%)</title><rect x="65.6974%" y="37" width="0.0141%" height="15" fill="rgb(248,100,22)" fg:x="116513" fg:w="25"/><text x="65.9474%" y="47.50"></text></g><g><title>blk_mq_end_request (113 samples, 0.06%)</title><rect x="65.6483%" y="101" width="0.0637%" height="15" fill="rgb(208,67,9)" fg:x="116426" fg:w="113"/><text x="65.8983%" y="111.50"></text></g><g><title>nvme_complete_rq (114 samples, 0.06%)</title><rect x="65.6483%" y="117" width="0.0643%" height="15" fill="rgb(219,133,21)" fg:x="116426" fg:w="114"/><text x="65.8983%" y="127.50"></text></g><g><title>__handle_irq_event_percpu (133 samples, 0.07%)</title><rect x="65.6438%" y="181" width="0.0750%" height="15" fill="rgb(246,46,29)" fg:x="116418" fg:w="133"/><text x="65.8938%" y="191.50"></text></g><g><title>nvme_irq (131 samples, 0.07%)</title><rect x="65.6449%" y="165" width="0.0739%" height="15" fill="rgb(246,185,52)" fg:x="116420" fg:w="131"/><text x="65.8949%" y="175.50"></text></g><g><title>nvme_process_cq (131 samples, 0.07%)</title><rect x="65.6449%" y="149" width="0.0739%" height="15" fill="rgb(252,136,11)" fg:x="116420" fg:w="131"/><text x="65.8949%" y="159.50"></text></g><g><title>nvme_pci_complete_rq (126 samples, 0.07%)</title><rect x="65.6478%" y="133" width="0.0710%" height="15" fill="rgb(219,138,53)" fg:x="116425" fg:w="126"/><text x="65.8978%" y="143.50"></text></g><g><title>__common_interrupt (142 samples, 0.08%)</title><rect x="65.6410%" y="229" width="0.0801%" height="15" fill="rgb(211,51,23)" fg:x="116413" fg:w="142"/><text x="65.8910%" y="239.50"></text></g><g><title>handle_edge_irq (141 samples, 0.08%)</title><rect x="65.6416%" y="213" width="0.0795%" height="15" fill="rgb(247,221,28)" fg:x="116414" fg:w="141"/><text x="65.8916%" y="223.50"></text></g><g><title>handle_irq_event (138 samples, 0.08%)</title><rect x="65.6433%" y="197" width="0.0778%" height="15" fill="rgb(251,222,45)" fg:x="116417" fg:w="138"/><text x="65.8933%" y="207.50"></text></g><g><title>asm_common_interrupt (149 samples, 0.08%)</title><rect x="65.6399%" y="261" width="0.0840%" height="15" fill="rgb(217,162,53)" fg:x="116411" fg:w="149"/><text x="65.8899%" y="271.50"></text></g><g><title>common_interrupt (149 samples, 0.08%)</title><rect x="65.6399%" y="245" width="0.0840%" height="15" fill="rgb(229,93,14)" fg:x="116411" fg:w="149"/><text x="65.8899%" y="255.50"></text></g><g><title>clear_page_erms (3,858 samples, 2.18%)</title><rect x="63.5530%" y="277" width="2.1754%" height="15" fill="rgb(209,67,49)" fg:x="112710" fg:w="3858"/><text x="63.8030%" y="287.50">c..</text></g><g><title>kernel_init_free_pages.part.0 (74 samples, 0.04%)</title><rect x="65.7290%" y="277" width="0.0417%" height="15" fill="rgb(213,87,29)" fg:x="116569" fg:w="74"/><text x="65.9790%" y="287.50"></text></g><g><title>__read_end_io (26 samples, 0.01%)</title><rect x="66.0543%" y="37" width="0.0147%" height="15" fill="rgb(205,151,52)" fg:x="117146" fg:w="26"/><text x="66.3043%" y="47.50"></text></g><g><title>nvme_complete_rq (39 samples, 0.02%)</title><rect x="66.0509%" y="117" width="0.0220%" height="15" fill="rgb(253,215,39)" fg:x="117140" fg:w="39"/><text x="66.3009%" y="127.50"></text></g><g><title>blk_mq_end_request (39 samples, 0.02%)</title><rect x="66.0509%" y="101" width="0.0220%" height="15" fill="rgb(221,220,41)" fg:x="117140" fg:w="39"/><text x="66.3009%" y="111.50"></text></g><g><title>blk_update_request (38 samples, 0.02%)</title><rect x="66.0515%" y="85" width="0.0214%" height="15" fill="rgb(218,133,21)" fg:x="117141" fg:w="38"/><text x="66.3015%" y="95.50"></text></g><g><title>bio_endio (36 samples, 0.02%)</title><rect x="66.0526%" y="69" width="0.0203%" height="15" fill="rgb(221,193,43)" fg:x="117143" fg:w="36"/><text x="66.3026%" y="79.50"></text></g><g><title>mpage_end_io (33 samples, 0.02%)</title><rect x="66.0543%" y="53" width="0.0186%" height="15" fill="rgb(240,128,52)" fg:x="117146" fg:w="33"/><text x="66.3043%" y="63.50"></text></g><g><title>nvme_pci_complete_rq (47 samples, 0.03%)</title><rect x="66.0509%" y="133" width="0.0265%" height="15" fill="rgb(253,114,12)" fg:x="117140" fg:w="47"/><text x="66.3009%" y="143.50"></text></g><g><title>nvme_irq (49 samples, 0.03%)</title><rect x="66.0504%" y="165" width="0.0276%" height="15" fill="rgb(215,223,47)" fg:x="117139" fg:w="49"/><text x="66.3004%" y="175.50"></text></g><g><title>nvme_process_cq (49 samples, 0.03%)</title><rect x="66.0504%" y="149" width="0.0276%" height="15" fill="rgb(248,225,23)" fg:x="117139" fg:w="49"/><text x="66.3004%" y="159.50"></text></g><g><title>__handle_irq_event_percpu (51 samples, 0.03%)</title><rect x="66.0498%" y="181" width="0.0288%" height="15" fill="rgb(250,108,0)" fg:x="117138" fg:w="51"/><text x="66.2998%" y="191.50"></text></g><g><title>handle_irq_event (53 samples, 0.03%)</title><rect x="66.0498%" y="197" width="0.0299%" height="15" fill="rgb(228,208,7)" fg:x="117138" fg:w="53"/><text x="66.2998%" y="207.50"></text></g><g><title>asm_common_interrupt (57 samples, 0.03%)</title><rect x="66.0481%" y="261" width="0.0321%" height="15" fill="rgb(244,45,10)" fg:x="117135" fg:w="57"/><text x="66.2981%" y="271.50"></text></g><g><title>common_interrupt (57 samples, 0.03%)</title><rect x="66.0481%" y="245" width="0.0321%" height="15" fill="rgb(207,125,25)" fg:x="117135" fg:w="57"/><text x="66.2981%" y="255.50"></text></g><g><title>__common_interrupt (57 samples, 0.03%)</title><rect x="66.0481%" y="229" width="0.0321%" height="15" fill="rgb(210,195,18)" fg:x="117135" fg:w="57"/><text x="66.2981%" y="239.50"></text></g><g><title>handle_edge_irq (56 samples, 0.03%)</title><rect x="66.0487%" y="213" width="0.0316%" height="15" fill="rgb(249,80,12)" fg:x="117136" fg:w="56"/><text x="66.2987%" y="223.50"></text></g><g><title>rmqueue (1,462 samples, 0.82%)</title><rect x="65.7707%" y="277" width="0.8244%" height="15" fill="rgb(221,65,9)" fg:x="116643" fg:w="1462"/><text x="66.0207%" y="287.50"></text></g><g><title>rmqueue_bulk (909 samples, 0.51%)</title><rect x="66.0825%" y="261" width="0.5126%" height="15" fill="rgb(235,49,36)" fg:x="117196" fg:w="909"/><text x="66.3325%" y="271.50"></text></g><g><title>_raw_spin_lock (34 samples, 0.02%)</title><rect x="66.5759%" y="245" width="0.0192%" height="15" fill="rgb(225,32,20)" fg:x="118071" fg:w="34"/><text x="66.8259%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath (34 samples, 0.02%)</title><rect x="66.5759%" y="229" width="0.0192%" height="15" fill="rgb(215,141,46)" fg:x="118071" fg:w="34"/><text x="66.8259%" y="239.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (34 samples, 0.02%)</title><rect x="66.5759%" y="213" width="0.0192%" height="15" fill="rgb(250,160,47)" fg:x="118071" fg:w="34"/><text x="66.8259%" y="223.50"></text></g><g><title>get_page_from_freelist (5,854 samples, 3.30%)</title><rect x="63.2948%" y="293" width="3.3009%" height="15" fill="rgb(216,222,40)" fg:x="112252" fg:w="5854"/><text x="63.5448%" y="303.50">get..</text></g><g><title>kernel_init_free_pages.part.0 (19 samples, 0.01%)</title><rect x="66.5956%" y="293" width="0.0107%" height="15" fill="rgb(234,217,39)" fg:x="118106" fg:w="19"/><text x="66.8456%" y="303.50"></text></g><g><title>rcu_all_qs (27 samples, 0.02%)</title><rect x="66.6063%" y="293" width="0.0152%" height="15" fill="rgb(207,178,40)" fg:x="118125" fg:w="27"/><text x="66.8563%" y="303.50"></text></g><g><title>__alloc_pages (6,604 samples, 3.72%)</title><rect x="62.9068%" y="309" width="3.7238%" height="15" fill="rgb(221,136,13)" fg:x="111564" fg:w="6604"/><text x="63.1568%" y="319.50">__al..</text></g><g><title>__cond_resched (25 samples, 0.01%)</title><rect x="66.6306%" y="309" width="0.0141%" height="15" fill="rgb(249,199,10)" fg:x="118168" fg:w="25"/><text x="66.8806%" y="319.50"></text></g><g><title>__next_zones_zonelist (18 samples, 0.01%)</title><rect x="66.6447%" y="309" width="0.0101%" height="15" fill="rgb(249,222,13)" fg:x="118193" fg:w="18"/><text x="66.8947%" y="319.50"></text></g><g><title>policy_nodemask (50 samples, 0.03%)</title><rect x="66.6695%" y="309" width="0.0282%" height="15" fill="rgb(244,185,38)" fg:x="118237" fg:w="50"/><text x="66.9195%" y="319.50"></text></g><g><title>alloc_pages (6,917 samples, 3.90%)</title><rect x="62.8104%" y="325" width="3.9002%" height="15" fill="rgb(236,202,9)" fg:x="111393" fg:w="6917"/><text x="63.0604%" y="335.50">allo..</text></g><g><title>should_fail_alloc_page (23 samples, 0.01%)</title><rect x="66.6977%" y="309" width="0.0130%" height="15" fill="rgb(250,229,37)" fg:x="118287" fg:w="23"/><text x="66.9477%" y="319.50"></text></g><g><title>__page_cache_alloc (7,051 samples, 3.98%)</title><rect x="62.7433%" y="341" width="3.9758%" height="15" fill="rgb(206,174,23)" fg:x="111274" fg:w="7051"/><text x="62.9933%" y="351.50">__pa..</text></g><g><title>PageHuge (54 samples, 0.03%)</title><rect x="66.8048%" y="325" width="0.0304%" height="15" fill="rgb(211,33,43)" fg:x="118477" fg:w="54"/><text x="67.0548%" y="335.50"></text></g><g><title>PageHuge (78 samples, 0.04%)</title><rect x="68.2167%" y="309" width="0.0440%" height="15" fill="rgb(245,58,50)" fg:x="120981" fg:w="78"/><text x="68.4667%" y="319.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (189 samples, 0.11%)</title><rect x="68.3989%" y="277" width="0.1066%" height="15" fill="rgb(244,68,36)" fg:x="121304" fg:w="189"/><text x="68.6489%" y="287.50"></text></g><g><title>cgroup_rstat_updated (77 samples, 0.04%)</title><rect x="68.4620%" y="261" width="0.0434%" height="15" fill="rgb(232,229,15)" fg:x="121416" fg:w="77"/><text x="68.7120%" y="271.50"></text></g><g><title>memcg_check_events (24 samples, 0.01%)</title><rect x="68.5054%" y="277" width="0.0135%" height="15" fill="rgb(254,30,23)" fg:x="121493" fg:w="24"/><text x="68.7554%" y="287.50"></text></g><g><title>page_counter_try_charge (57 samples, 0.03%)</title><rect x="68.6464%" y="261" width="0.0321%" height="15" fill="rgb(235,160,14)" fg:x="121743" fg:w="57"/><text x="68.8964%" y="271.50"></text></g><g><title>charge_memcg (682 samples, 0.38%)</title><rect x="68.2985%" y="293" width="0.3846%" height="15" fill="rgb(212,155,44)" fg:x="121126" fg:w="682"/><text x="68.5485%" y="303.50"></text></g><g><title>try_charge_memcg (286 samples, 0.16%)</title><rect x="68.5218%" y="277" width="0.1613%" height="15" fill="rgb(226,2,50)" fg:x="121522" fg:w="286"/><text x="68.7718%" y="287.50"></text></g><g><title>get_mem_cgroup_from_mm (171 samples, 0.10%)</title><rect x="68.6830%" y="293" width="0.0964%" height="15" fill="rgb(234,177,6)" fg:x="121808" fg:w="171"/><text x="68.9330%" y="303.50"></text></g><g><title>memcg_check_events (31 samples, 0.02%)</title><rect x="68.7868%" y="293" width="0.0175%" height="15" fill="rgb(217,24,9)" fg:x="121992" fg:w="31"/><text x="69.0368%" y="303.50"></text></g><g><title>rcu_read_unlock_strict (41 samples, 0.02%)</title><rect x="68.8043%" y="293" width="0.0231%" height="15" fill="rgb(220,13,46)" fg:x="122023" fg:w="41"/><text x="69.0543%" y="303.50"></text></g><g><title>__mem_cgroup_charge (1,018 samples, 0.57%)</title><rect x="68.2607%" y="309" width="0.5740%" height="15" fill="rgb(239,221,27)" fg:x="121059" fg:w="1018"/><text x="68.5107%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (198 samples, 0.11%)</title><rect x="68.9289%" y="277" width="0.1116%" height="15" fill="rgb(222,198,25)" fg:x="122244" fg:w="198"/><text x="69.1789%" y="287.50"></text></g><g><title>cgroup_rstat_updated (64 samples, 0.04%)</title><rect x="69.0044%" y="261" width="0.0361%" height="15" fill="rgb(211,99,13)" fg:x="122378" fg:w="64"/><text x="69.2544%" y="271.50"></text></g><g><title>__mod_node_page_state (163 samples, 0.09%)</title><rect x="69.0405%" y="277" width="0.0919%" height="15" fill="rgb(232,111,31)" fg:x="122442" fg:w="163"/><text x="69.2905%" y="287.50"></text></g><g><title>__mod_lruvec_state (406 samples, 0.23%)</title><rect x="68.9097%" y="293" width="0.2289%" height="15" fill="rgb(245,82,37)" fg:x="122210" fg:w="406"/><text x="69.1597%" y="303.50"></text></g><g><title>__mod_node_page_state (21 samples, 0.01%)</title><rect x="69.1443%" y="293" width="0.0118%" height="15" fill="rgb(227,149,46)" fg:x="122626" fg:w="21"/><text x="69.3943%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (578 samples, 0.33%)</title><rect x="68.8347%" y="309" width="0.3259%" height="15" fill="rgb(218,36,50)" fg:x="122077" fg:w="578"/><text x="69.0847%" y="319.50"></text></g><g><title>__mod_lruvec_state (19 samples, 0.01%)</title><rect x="69.1606%" y="309" width="0.0107%" height="15" fill="rgb(226,80,48)" fg:x="122655" fg:w="19"/><text x="69.4106%" y="319.50"></text></g><g><title>_raw_spin_lock_irq (454 samples, 0.26%)</title><rect x="69.1713%" y="309" width="0.2560%" height="15" fill="rgb(238,224,15)" fg:x="122674" fg:w="454"/><text x="69.4213%" y="319.50"></text></g><g><title>native_queued_spin_lock_slowpath (226 samples, 0.13%)</title><rect x="69.2999%" y="293" width="0.1274%" height="15" fill="rgb(241,136,10)" fg:x="122902" fg:w="226"/><text x="69.5499%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (226 samples, 0.13%)</title><rect x="69.2999%" y="277" width="0.1274%" height="15" fill="rgb(208,32,45)" fg:x="122902" fg:w="226"/><text x="69.5499%" y="287.50"></text></g><g><title>__read_end_io (86 samples, 0.05%)</title><rect x="69.4409%" y="85" width="0.0485%" height="15" fill="rgb(207,135,9)" fg:x="123152" fg:w="86"/><text x="69.6909%" y="95.50"></text></g><g><title>blk_update_request (151 samples, 0.09%)</title><rect x="69.4369%" y="133" width="0.0851%" height="15" fill="rgb(206,86,44)" fg:x="123145" fg:w="151"/><text x="69.6869%" y="143.50"></text></g><g><title>bio_endio (148 samples, 0.08%)</title><rect x="69.4386%" y="117" width="0.0835%" height="15" fill="rgb(245,177,15)" fg:x="123148" fg:w="148"/><text x="69.6886%" y="127.50"></text></g><g><title>mpage_end_io (144 samples, 0.08%)</title><rect x="69.4409%" y="101" width="0.0812%" height="15" fill="rgb(206,64,50)" fg:x="123152" fg:w="144"/><text x="69.6909%" y="111.50"></text></g><g><title>unlock_page (58 samples, 0.03%)</title><rect x="69.4894%" y="85" width="0.0327%" height="15" fill="rgb(234,36,40)" fg:x="123238" fg:w="58"/><text x="69.7394%" y="95.50"></text></g><g><title>nvme_complete_rq (162 samples, 0.09%)</title><rect x="69.4319%" y="165" width="0.0913%" height="15" fill="rgb(213,64,8)" fg:x="123136" fg:w="162"/><text x="69.6819%" y="175.50"></text></g><g><title>blk_mq_end_request (162 samples, 0.09%)</title><rect x="69.4319%" y="149" width="0.0913%" height="15" fill="rgb(210,75,36)" fg:x="123136" fg:w="162"/><text x="69.6819%" y="159.50"></text></g><g><title>nvme_irq (185 samples, 0.10%)</title><rect x="69.4290%" y="213" width="0.1043%" height="15" fill="rgb(229,88,21)" fg:x="123131" fg:w="185"/><text x="69.6790%" y="223.50"></text></g><g><title>nvme_process_cq (185 samples, 0.10%)</title><rect x="69.4290%" y="197" width="0.1043%" height="15" fill="rgb(252,204,47)" fg:x="123131" fg:w="185"/><text x="69.6790%" y="207.50"></text></g><g><title>nvme_pci_complete_rq (181 samples, 0.10%)</title><rect x="69.4313%" y="181" width="0.1021%" height="15" fill="rgb(208,77,27)" fg:x="123135" fg:w="181"/><text x="69.6813%" y="191.50"></text></g><g><title>__handle_irq_event_percpu (186 samples, 0.10%)</title><rect x="69.4290%" y="229" width="0.1049%" height="15" fill="rgb(221,76,26)" fg:x="123131" fg:w="186"/><text x="69.6790%" y="239.50"></text></g><g><title>handle_irq_event (188 samples, 0.11%)</title><rect x="69.4285%" y="245" width="0.1060%" height="15" fill="rgb(225,139,18)" fg:x="123130" fg:w="188"/><text x="69.6785%" y="255.50"></text></g><g><title>handle_edge_irq (189 samples, 0.11%)</title><rect x="69.4285%" y="261" width="0.1066%" height="15" fill="rgb(230,137,11)" fg:x="123130" fg:w="189"/><text x="69.6785%" y="271.50"></text></g><g><title>__common_interrupt (192 samples, 0.11%)</title><rect x="69.4273%" y="277" width="0.1083%" height="15" fill="rgb(212,28,1)" fg:x="123128" fg:w="192"/><text x="69.6773%" y="287.50"></text></g><g><title>asm_common_interrupt (196 samples, 0.11%)</title><rect x="69.4273%" y="309" width="0.1105%" height="15" fill="rgb(248,164,17)" fg:x="123128" fg:w="196"/><text x="69.6773%" y="319.50"></text></g><g><title>common_interrupt (196 samples, 0.11%)</title><rect x="69.4273%" y="293" width="0.1105%" height="15" fill="rgb(222,171,42)" fg:x="123128" fg:w="196"/><text x="69.6773%" y="303.50"></text></g><g><title>rcu_read_unlock_strict (71 samples, 0.04%)</title><rect x="69.5604%" y="309" width="0.0400%" height="15" fill="rgb(243,84,45)" fg:x="123364" fg:w="71"/><text x="69.8104%" y="319.50"></text></g><g><title>workingset_update_node (23 samples, 0.01%)</title><rect x="69.6004%" y="309" width="0.0130%" height="15" fill="rgb(252,49,23)" fg:x="123435" fg:w="23"/><text x="69.8504%" y="319.50"></text></g><g><title>nvme_complete_rq (22 samples, 0.01%)</title><rect x="70.4485%" y="133" width="0.0124%" height="15" fill="rgb(215,19,7)" fg:x="124939" fg:w="22"/><text x="70.6985%" y="143.50"></text></g><g><title>blk_mq_end_request (22 samples, 0.01%)</title><rect x="70.4485%" y="117" width="0.0124%" height="15" fill="rgb(238,81,41)" fg:x="124939" fg:w="22"/><text x="70.6985%" y="127.50"></text></g><g><title>blk_update_request (21 samples, 0.01%)</title><rect x="70.4491%" y="101" width="0.0118%" height="15" fill="rgb(210,199,37)" fg:x="124940" fg:w="21"/><text x="70.6991%" y="111.50"></text></g><g><title>bio_endio (21 samples, 0.01%)</title><rect x="70.4491%" y="85" width="0.0118%" height="15" fill="rgb(244,192,49)" fg:x="124940" fg:w="21"/><text x="70.6991%" y="95.50"></text></g><g><title>mpage_end_io (20 samples, 0.01%)</title><rect x="70.4496%" y="69" width="0.0113%" height="15" fill="rgb(226,211,11)" fg:x="124941" fg:w="20"/><text x="70.6996%" y="79.50"></text></g><g><title>__common_interrupt (25 samples, 0.01%)</title><rect x="70.4474%" y="245" width="0.0141%" height="15" fill="rgb(236,162,54)" fg:x="124937" fg:w="25"/><text x="70.6974%" y="255.50"></text></g><g><title>handle_edge_irq (25 samples, 0.01%)</title><rect x="70.4474%" y="229" width="0.0141%" height="15" fill="rgb(220,229,9)" fg:x="124937" fg:w="25"/><text x="70.6974%" y="239.50"></text></g><g><title>handle_irq_event (24 samples, 0.01%)</title><rect x="70.4479%" y="213" width="0.0135%" height="15" fill="rgb(250,87,22)" fg:x="124938" fg:w="24"/><text x="70.6979%" y="223.50"></text></g><g><title>__handle_irq_event_percpu (24 samples, 0.01%)</title><rect x="70.4479%" y="197" width="0.0135%" height="15" fill="rgb(239,43,17)" fg:x="124938" fg:w="24"/><text x="70.6979%" y="207.50"></text></g><g><title>nvme_irq (23 samples, 0.01%)</title><rect x="70.4485%" y="181" width="0.0130%" height="15" fill="rgb(231,177,25)" fg:x="124939" fg:w="23"/><text x="70.6985%" y="191.50"></text></g><g><title>nvme_process_cq (23 samples, 0.01%)</title><rect x="70.4485%" y="165" width="0.0130%" height="15" fill="rgb(219,179,1)" fg:x="124939" fg:w="23"/><text x="70.6985%" y="175.50"></text></g><g><title>nvme_pci_complete_rq (23 samples, 0.01%)</title><rect x="70.4485%" y="149" width="0.0130%" height="15" fill="rgb(238,219,53)" fg:x="124939" fg:w="23"/><text x="70.6985%" y="159.50"></text></g><g><title>asm_common_interrupt (27 samples, 0.02%)</title><rect x="70.4474%" y="277" width="0.0152%" height="15" fill="rgb(232,167,36)" fg:x="124937" fg:w="27"/><text x="70.6974%" y="287.50"></text></g><g><title>common_interrupt (27 samples, 0.02%)</title><rect x="70.4474%" y="261" width="0.0152%" height="15" fill="rgb(244,19,51)" fg:x="124937" fg:w="27"/><text x="70.6974%" y="271.50"></text></g><g><title>xas_load (1,317 samples, 0.74%)</title><rect x="69.8243%" y="293" width="0.7426%" height="15" fill="rgb(224,6,22)" fg:x="123832" fg:w="1317"/><text x="70.0743%" y="303.50"></text></g><g><title>xas_start (183 samples, 0.10%)</title><rect x="70.4637%" y="277" width="0.1032%" height="15" fill="rgb(224,145,5)" fg:x="124966" fg:w="183"/><text x="70.7137%" y="287.50"></text></g><g><title>xa_get_order (1,720 samples, 0.97%)</title><rect x="69.6134%" y="309" width="0.9698%" height="15" fill="rgb(234,130,49)" fg:x="123458" fg:w="1720"/><text x="69.8634%" y="319.50"></text></g><g><title>xas_start (29 samples, 0.02%)</title><rect x="70.5669%" y="293" width="0.0164%" height="15" fill="rgb(254,6,2)" fg:x="125149" fg:w="29"/><text x="70.8169%" y="303.50"></text></g><g><title>xas_descend (82 samples, 0.05%)</title><rect x="70.5906%" y="309" width="0.0462%" height="15" fill="rgb(208,96,46)" fg:x="125191" fg:w="82"/><text x="70.8406%" y="319.50"></text></g><g><title>xas_descend (400 samples, 0.23%)</title><rect x="70.7846%" y="293" width="0.2255%" height="15" fill="rgb(239,3,39)" fg:x="125535" fg:w="400"/><text x="71.0346%" y="303.50"></text></g><g><title>xas_find_conflict (760 samples, 0.43%)</title><rect x="70.6368%" y="309" width="0.4285%" height="15" fill="rgb(233,210,1)" fg:x="125273" fg:w="760"/><text x="70.8868%" y="319.50"></text></g><g><title>xas_start (98 samples, 0.06%)</title><rect x="71.0101%" y="293" width="0.0553%" height="15" fill="rgb(244,137,37)" fg:x="125935" fg:w="98"/><text x="71.2601%" y="303.50"></text></g><g><title>xas_load (21 samples, 0.01%)</title><rect x="71.0654%" y="309" width="0.0118%" height="15" fill="rgb(240,136,2)" fg:x="126033" fg:w="21"/><text x="71.3154%" y="319.50"></text></g><g><title>xas_nomem (32 samples, 0.02%)</title><rect x="71.0772%" y="309" width="0.0180%" height="15" fill="rgb(239,18,37)" fg:x="126054" fg:w="32"/><text x="71.3272%" y="319.50"></text></g><g><title>list_lru_del (56 samples, 0.03%)</title><rect x="71.2943%" y="277" width="0.0316%" height="15" fill="rgb(218,185,22)" fg:x="126439" fg:w="56"/><text x="71.5443%" y="287.50"></text></g><g><title>mem_cgroup_from_obj (28 samples, 0.02%)</title><rect x="71.3101%" y="261" width="0.0158%" height="15" fill="rgb(225,218,4)" fg:x="126467" fg:w="28"/><text x="71.5601%" y="271.50"></text></g><g><title>workingset_update_node (111 samples, 0.06%)</title><rect x="71.2655%" y="293" width="0.0626%" height="15" fill="rgb(230,182,32)" fg:x="126388" fg:w="111"/><text x="71.5155%" y="303.50"></text></g><g><title>__add_to_page_cache_locked (8,071 samples, 4.55%)</title><rect x="66.8353%" y="325" width="4.5509%" height="15" fill="rgb(242,56,43)" fg:x="118531" fg:w="8071"/><text x="67.0853%" y="335.50">__add..</text></g><g><title>xas_store (502 samples, 0.28%)</title><rect x="71.1031%" y="309" width="0.2831%" height="15" fill="rgb(233,99,24)" fg:x="126100" fg:w="502"/><text x="71.3531%" y="319.50"></text></g><g><title>xas_create (103 samples, 0.06%)</title><rect x="71.3281%" y="293" width="0.0581%" height="15" fill="rgb(234,209,42)" fg:x="126499" fg:w="103"/><text x="71.5781%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (22 samples, 0.01%)</title><rect x="71.3969%" y="325" width="0.0124%" height="15" fill="rgb(227,7,12)" fg:x="126621" fg:w="22"/><text x="71.6469%" y="335.50"></text></g><g><title>_raw_spin_lock_irq (26 samples, 0.01%)</title><rect x="71.4144%" y="325" width="0.0147%" height="15" fill="rgb(245,203,43)" fg:x="126652" fg:w="26"/><text x="71.6644%" y="335.50"></text></g><g><title>__read_end_io (39 samples, 0.02%)</title><rect x="71.6399%" y="53" width="0.0220%" height="15" fill="rgb(238,205,33)" fg:x="127052" fg:w="39"/><text x="71.8899%" y="63.50"></text></g><g><title>nvme_complete_rq (64 samples, 0.04%)</title><rect x="71.6360%" y="133" width="0.0361%" height="15" fill="rgb(231,56,7)" fg:x="127045" fg:w="64"/><text x="71.8860%" y="143.50"></text></g><g><title>blk_mq_end_request (64 samples, 0.04%)</title><rect x="71.6360%" y="117" width="0.0361%" height="15" fill="rgb(244,186,29)" fg:x="127045" fg:w="64"/><text x="71.8860%" y="127.50"></text></g><g><title>blk_update_request (62 samples, 0.03%)</title><rect x="71.6371%" y="101" width="0.0350%" height="15" fill="rgb(234,111,31)" fg:x="127047" fg:w="62"/><text x="71.8871%" y="111.50"></text></g><g><title>bio_endio (58 samples, 0.03%)</title><rect x="71.6394%" y="85" width="0.0327%" height="15" fill="rgb(241,149,10)" fg:x="127051" fg:w="58"/><text x="71.8894%" y="95.50"></text></g><g><title>mpage_end_io (57 samples, 0.03%)</title><rect x="71.6399%" y="69" width="0.0321%" height="15" fill="rgb(249,206,44)" fg:x="127052" fg:w="57"/><text x="71.8899%" y="79.50"></text></g><g><title>unlock_page (18 samples, 0.01%)</title><rect x="71.6619%" y="53" width="0.0101%" height="15" fill="rgb(251,153,30)" fg:x="127091" fg:w="18"/><text x="71.9119%" y="63.50"></text></g><g><title>__handle_irq_event_percpu (72 samples, 0.04%)</title><rect x="71.6354%" y="197" width="0.0406%" height="15" fill="rgb(239,152,38)" fg:x="127044" fg:w="72"/><text x="71.8854%" y="207.50"></text></g><g><title>nvme_irq (72 samples, 0.04%)</title><rect x="71.6354%" y="181" width="0.0406%" height="15" fill="rgb(249,139,47)" fg:x="127044" fg:w="72"/><text x="71.8854%" y="191.50"></text></g><g><title>nvme_process_cq (72 samples, 0.04%)</title><rect x="71.6354%" y="165" width="0.0406%" height="15" fill="rgb(244,64,35)" fg:x="127044" fg:w="72"/><text x="71.8854%" y="175.50"></text></g><g><title>nvme_pci_complete_rq (71 samples, 0.04%)</title><rect x="71.6360%" y="149" width="0.0400%" height="15" fill="rgb(216,46,15)" fg:x="127045" fg:w="71"/><text x="71.8860%" y="159.50"></text></g><g><title>handle_irq_event (73 samples, 0.04%)</title><rect x="71.6354%" y="213" width="0.0412%" height="15" fill="rgb(250,74,19)" fg:x="127044" fg:w="73"/><text x="71.8854%" y="223.50"></text></g><g><title>__common_interrupt (78 samples, 0.04%)</title><rect x="71.6337%" y="245" width="0.0440%" height="15" fill="rgb(249,42,33)" fg:x="127041" fg:w="78"/><text x="71.8837%" y="255.50"></text></g><g><title>handle_edge_irq (77 samples, 0.04%)</title><rect x="71.6343%" y="229" width="0.0434%" height="15" fill="rgb(242,149,17)" fg:x="127042" fg:w="77"/><text x="71.8843%" y="239.50"></text></g><g><title>asm_common_interrupt (79 samples, 0.04%)</title><rect x="71.6337%" y="277" width="0.0445%" height="15" fill="rgb(244,29,21)" fg:x="127041" fg:w="79"/><text x="71.8837%" y="287.50"></text></g><g><title>common_interrupt (79 samples, 0.04%)</title><rect x="71.6337%" y="261" width="0.0445%" height="15" fill="rgb(220,130,37)" fg:x="127041" fg:w="79"/><text x="71.8837%" y="271.50"></text></g><g><title>__lock_text_start (89 samples, 0.05%)</title><rect x="71.6309%" y="293" width="0.0502%" height="15" fill="rgb(211,67,2)" fg:x="127036" fg:w="89"/><text x="71.8809%" y="303.50"></text></g><g><title>__mod_zone_page_state (21 samples, 0.01%)</title><rect x="71.6862%" y="293" width="0.0118%" height="15" fill="rgb(235,68,52)" fg:x="127134" fg:w="21"/><text x="71.9362%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (178 samples, 0.10%)</title><rect x="72.1655%" y="261" width="0.1004%" height="15" fill="rgb(246,142,3)" fg:x="127984" fg:w="178"/><text x="72.4155%" y="271.50"></text></g><g><title>cgroup_rstat_updated (43 samples, 0.02%)</title><rect x="72.2416%" y="245" width="0.0242%" height="15" fill="rgb(241,25,7)" fg:x="128119" fg:w="43"/><text x="72.4916%" y="255.50"></text></g><g><title>__mod_node_page_state (87 samples, 0.05%)</title><rect x="72.2658%" y="261" width="0.0491%" height="15" fill="rgb(242,119,39)" fg:x="128162" fg:w="87"/><text x="72.5158%" y="271.50"></text></g><g><title>__mod_lruvec_state (313 samples, 0.18%)</title><rect x="72.1435%" y="277" width="0.1765%" height="15" fill="rgb(241,98,45)" fg:x="127945" fg:w="313"/><text x="72.3935%" y="287.50"></text></g><g><title>__mod_node_page_state (34 samples, 0.02%)</title><rect x="72.3262%" y="277" width="0.0192%" height="15" fill="rgb(254,28,30)" fg:x="128269" fg:w="34"/><text x="72.5762%" y="287.50"></text></g><g><title>__mod_zone_page_state (97 samples, 0.05%)</title><rect x="72.3453%" y="277" width="0.0547%" height="15" fill="rgb(241,142,54)" fg:x="128303" fg:w="97"/><text x="72.5953%" y="287.50"></text></g><g><title>mem_cgroup_update_lru_size (84 samples, 0.05%)</title><rect x="72.4000%" y="277" width="0.0474%" height="15" fill="rgb(222,85,15)" fg:x="128400" fg:w="84"/><text x="72.6500%" y="287.50"></text></g><g><title>page_mapping (142 samples, 0.08%)</title><rect x="72.4474%" y="277" width="0.0801%" height="15" fill="rgb(210,85,47)" fg:x="128484" fg:w="142"/><text x="72.6974%" y="287.50"></text></g><g><title>__pagevec_lru_add_fn (1,478 samples, 0.83%)</title><rect x="71.6980%" y="293" width="0.8334%" height="15" fill="rgb(224,206,25)" fg:x="127155" fg:w="1478"/><text x="71.9480%" y="303.50"></text></g><g><title>_raw_spin_lock_irqsave (75 samples, 0.04%)</title><rect x="72.5472%" y="277" width="0.0423%" height="15" fill="rgb(243,201,19)" fg:x="128661" fg:w="75"/><text x="72.7972%" y="287.50"></text></g><g><title>native_queued_spin_lock_slowpath (41 samples, 0.02%)</title><rect x="72.5664%" y="261" width="0.0231%" height="15" fill="rgb(236,59,4)" fg:x="128695" fg:w="41"/><text x="72.8164%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (41 samples, 0.02%)</title><rect x="72.5664%" y="245" width="0.0231%" height="15" fill="rgb(254,179,45)" fg:x="128695" fg:w="41"/><text x="72.8164%" y="255.50"></text></g><g><title>lock_page_lruvec_irqsave (97 samples, 0.05%)</title><rect x="72.5359%" y="293" width="0.0547%" height="15" fill="rgb(226,14,10)" fg:x="128641" fg:w="97"/><text x="72.7859%" y="303.50"></text></g><g><title>page_mapping (22 samples, 0.01%)</title><rect x="72.5991%" y="293" width="0.0124%" height="15" fill="rgb(244,27,41)" fg:x="128753" fg:w="22"/><text x="72.8491%" y="303.50"></text></g><g><title>__pagevec_lru_add (2,052 samples, 1.16%)</title><rect x="71.5745%" y="309" width="1.1570%" height="15" fill="rgb(235,35,32)" fg:x="126936" fg:w="2052"/><text x="71.8245%" y="319.50"></text></g><g><title>release_pages (208 samples, 0.12%)</title><rect x="72.6143%" y="293" width="0.1173%" height="15" fill="rgb(218,68,31)" fg:x="128780" fg:w="208"/><text x="72.8643%" y="303.50"></text></g><g><title>free_unref_page_list (20 samples, 0.01%)</title><rect x="72.7203%" y="277" width="0.0113%" height="15" fill="rgb(207,120,37)" fg:x="128968" fg:w="20"/><text x="72.9703%" y="287.50"></text></g><g><title>lru_cache_add (2,316 samples, 1.31%)</title><rect x="71.4358%" y="325" width="1.3059%" height="15" fill="rgb(227,98,0)" fg:x="126690" fg:w="2316"/><text x="71.6858%" y="335.50"></text></g><g><title>mem_cgroup_flush_stats_delayed (44 samples, 0.02%)</title><rect x="72.7417%" y="325" width="0.0248%" height="15" fill="rgb(207,7,3)" fg:x="129006" fg:w="44"/><text x="72.9917%" y="335.50"></text></g><g><title>rcu_read_unlock_strict (20 samples, 0.01%)</title><rect x="72.7891%" y="325" width="0.0113%" height="15" fill="rgb(206,98,19)" fg:x="129090" fg:w="20"/><text x="73.0391%" y="335.50"></text></g><g><title>idr_find (26 samples, 0.01%)</title><rect x="73.0665%" y="309" width="0.0147%" height="15" fill="rgb(217,5,26)" fg:x="129582" fg:w="26"/><text x="73.3165%" y="319.50"></text></g><g><title>__radix_tree_lookup (22 samples, 0.01%)</title><rect x="73.0970%" y="277" width="0.0124%" height="15" fill="rgb(235,190,38)" fg:x="129636" fg:w="22"/><text x="73.3470%" y="287.50"></text></g><g><title>idr_find (314 samples, 0.18%)</title><rect x="73.0857%" y="293" width="0.1771%" height="15" fill="rgb(247,86,24)" fg:x="129616" fg:w="314"/><text x="73.3357%" y="303.50"></text></g><g><title>radix_tree_lookup (271 samples, 0.15%)</title><rect x="73.1099%" y="277" width="0.1528%" height="15" fill="rgb(205,101,16)" fg:x="129659" fg:w="271"/><text x="73.3599%" y="287.50"></text></g><g><title>__radix_tree_lookup (266 samples, 0.15%)</title><rect x="73.1128%" y="261" width="0.1500%" height="15" fill="rgb(246,168,33)" fg:x="129664" fg:w="266"/><text x="73.3628%" y="271.50"></text></g><g><title>mem_cgroup_from_id (330 samples, 0.19%)</title><rect x="73.0812%" y="309" width="0.1861%" height="15" fill="rgb(231,114,1)" fg:x="129608" fg:w="330"/><text x="73.3312%" y="319.50"></text></g><g><title>mem_cgroup_get_nr_swap_pages (174 samples, 0.10%)</title><rect x="73.2672%" y="309" width="0.0981%" height="15" fill="rgb(207,184,53)" fg:x="129938" fg:w="174"/><text x="73.5172%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (209 samples, 0.12%)</title><rect x="73.4285%" y="277" width="0.1178%" height="15" fill="rgb(224,95,51)" fg:x="130224" fg:w="209"/><text x="73.6785%" y="287.50"></text></g><g><title>cgroup_rstat_updated (46 samples, 0.03%)</title><rect x="73.5204%" y="261" width="0.0259%" height="15" fill="rgb(212,188,45)" fg:x="130387" fg:w="46"/><text x="73.7704%" y="271.50"></text></g><g><title>__mod_node_page_state (75 samples, 0.04%)</title><rect x="73.5464%" y="277" width="0.0423%" height="15" fill="rgb(223,154,38)" fg:x="130433" fg:w="75"/><text x="73.7964%" y="287.50"></text></g><g><title>__mod_lruvec_state (339 samples, 0.19%)</title><rect x="73.4043%" y="293" width="0.1911%" height="15" fill="rgb(251,22,52)" fg:x="130181" fg:w="339"/><text x="73.6543%" y="303.50"></text></g><g><title>handle_edge_irq (18 samples, 0.01%)</title><rect x="73.6101%" y="245" width="0.0101%" height="15" fill="rgb(229,209,22)" fg:x="130546" fg:w="18"/><text x="73.8601%" y="255.50"></text></g><g><title>common_interrupt (19 samples, 0.01%)</title><rect x="73.6101%" y="277" width="0.0107%" height="15" fill="rgb(234,138,34)" fg:x="130546" fg:w="19"/><text x="73.8601%" y="287.50"></text></g><g><title>__common_interrupt (19 samples, 0.01%)</title><rect x="73.6101%" y="261" width="0.0107%" height="15" fill="rgb(212,95,11)" fg:x="130546" fg:w="19"/><text x="73.8601%" y="271.50"></text></g><g><title>asm_common_interrupt (20 samples, 0.01%)</title><rect x="73.6101%" y="293" width="0.0113%" height="15" fill="rgb(240,179,47)" fg:x="130546" fg:w="20"/><text x="73.8601%" y="303.50"></text></g><g><title>mod_lruvec_state.constprop.0 (456 samples, 0.26%)</title><rect x="73.3654%" y="309" width="0.2571%" height="15" fill="rgb(240,163,11)" fg:x="130112" fg:w="456"/><text x="73.6154%" y="319.50"></text></g><g><title>workingset_refault (1,465 samples, 0.83%)</title><rect x="72.8004%" y="325" width="0.8261%" height="15" fill="rgb(236,37,12)" fg:x="129110" fg:w="1465"/><text x="73.0504%" y="335.50"></text></g><g><title>xa_get_order (28 samples, 0.02%)</title><rect x="73.6264%" y="325" width="0.0158%" height="15" fill="rgb(232,164,16)" fg:x="130575" fg:w="28"/><text x="73.8764%" y="335.50"></text></g><g><title>xas_find_conflict (33 samples, 0.02%)</title><rect x="73.6422%" y="325" width="0.0186%" height="15" fill="rgb(244,205,15)" fg:x="130603" fg:w="33"/><text x="73.8922%" y="335.50"></text></g><g><title>xas_nomem (20 samples, 0.01%)</title><rect x="73.6608%" y="325" width="0.0113%" height="15" fill="rgb(223,117,47)" fg:x="130636" fg:w="20"/><text x="73.9108%" y="335.50"></text></g><g><title>add_to_page_cache_lru (12,347 samples, 6.96%)</title><rect x="66.7191%" y="341" width="6.9620%" height="15" fill="rgb(244,107,35)" fg:x="118325" fg:w="12347"/><text x="66.9691%" y="351.50">add_to_pa..</text></g><g><title>lru_cache_add (30 samples, 0.02%)</title><rect x="73.6935%" y="341" width="0.0169%" height="15" fill="rgb(205,140,8)" fg:x="130694" fg:w="30"/><text x="73.9435%" y="351.50"></text></g><g><title>__blk_bios_map_sg (38 samples, 0.02%)</title><rect x="73.7369%" y="181" width="0.0214%" height="15" fill="rgb(228,84,46)" fg:x="130771" fg:w="38"/><text x="73.9869%" y="191.50"></text></g><g><title>__blk_rq_map_sg (44 samples, 0.02%)</title><rect x="73.7364%" y="197" width="0.0248%" height="15" fill="rgb(254,188,9)" fg:x="130770" fg:w="44"/><text x="73.9864%" y="207.50"></text></g><g><title>dma_direct_map_sg (21 samples, 0.01%)</title><rect x="73.7629%" y="165" width="0.0118%" height="15" fill="rgb(206,112,54)" fg:x="130817" fg:w="21"/><text x="74.0129%" y="175.50"></text></g><g><title>dma_map_sg_attrs (25 samples, 0.01%)</title><rect x="73.7623%" y="197" width="0.0141%" height="15" fill="rgb(216,84,49)" fg:x="130816" fg:w="25"/><text x="74.0123%" y="207.50"></text></g><g><title>__dma_map_sg_attrs (25 samples, 0.01%)</title><rect x="73.7623%" y="181" width="0.0141%" height="15" fill="rgb(214,194,35)" fg:x="130816" fg:w="25"/><text x="74.0123%" y="191.50"></text></g><g><title>mempool_alloc (19 samples, 0.01%)</title><rect x="73.7764%" y="197" width="0.0107%" height="15" fill="rgb(249,28,3)" fg:x="130841" fg:w="19"/><text x="74.0264%" y="207.50"></text></g><g><title>mempool_kmalloc (19 samples, 0.01%)</title><rect x="73.7764%" y="181" width="0.0107%" height="15" fill="rgb(222,56,52)" fg:x="130841" fg:w="19"/><text x="74.0264%" y="191.50"></text></g><g><title>nvme_pci_setup_prps (52 samples, 0.03%)</title><rect x="73.7894%" y="197" width="0.0293%" height="15" fill="rgb(245,217,50)" fg:x="130864" fg:w="52"/><text x="74.0394%" y="207.50"></text></g><g><title>nvme_map_data (153 samples, 0.09%)</title><rect x="73.7353%" y="213" width="0.0863%" height="15" fill="rgb(213,201,24)" fg:x="130768" fg:w="153"/><text x="73.9853%" y="223.50"></text></g><g><title>nvme_queue_rq (181 samples, 0.10%)</title><rect x="73.7268%" y="229" width="0.1021%" height="15" fill="rgb(248,116,28)" fg:x="130753" fg:w="181"/><text x="73.9768%" y="239.50"></text></g><g><title>__blk_mq_try_issue_directly (185 samples, 0.10%)</title><rect x="73.7251%" y="245" width="0.1043%" height="15" fill="rgb(219,72,43)" fg:x="130750" fg:w="185"/><text x="73.9751%" y="255.50"></text></g><g><title>blk_finish_plug (194 samples, 0.11%)</title><rect x="73.7212%" y="325" width="0.1094%" height="15" fill="rgb(209,138,14)" fg:x="130743" fg:w="194"/><text x="73.9712%" y="335.50"></text></g><g><title>blk_flush_plug_list (194 samples, 0.11%)</title><rect x="73.7212%" y="309" width="0.1094%" height="15" fill="rgb(222,18,33)" fg:x="130743" fg:w="194"/><text x="73.9712%" y="319.50"></text></g><g><title>blk_mq_flush_plug_list (194 samples, 0.11%)</title><rect x="73.7212%" y="293" width="0.1094%" height="15" fill="rgb(213,199,7)" fg:x="130743" fg:w="194"/><text x="73.9712%" y="303.50"></text></g><g><title>blk_mq_sched_insert_requests (194 samples, 0.11%)</title><rect x="73.7212%" y="277" width="0.1094%" height="15" fill="rgb(250,110,10)" fg:x="130743" fg:w="194"/><text x="73.9712%" y="287.50"></text></g><g><title>blk_mq_try_issue_list_directly (193 samples, 0.11%)</title><rect x="73.7217%" y="261" width="0.1088%" height="15" fill="rgb(248,123,6)" fg:x="130744" fg:w="193"/><text x="73.9717%" y="271.50"></text></g><g><title>__bio_try_merge_page (22 samples, 0.01%)</title><rect x="74.4773%" y="293" width="0.0124%" height="15" fill="rgb(206,91,31)" fg:x="132084" fg:w="22"/><text x="74.7273%" y="303.50"></text></g><g><title>__bio_add_page (25 samples, 0.01%)</title><rect x="74.5500%" y="277" width="0.0141%" height="15" fill="rgb(211,154,13)" fg:x="132213" fg:w="25"/><text x="74.8000%" y="287.50"></text></g><g><title>__bio_try_merge_page (193 samples, 0.11%)</title><rect x="74.5641%" y="277" width="0.1088%" height="15" fill="rgb(225,148,7)" fg:x="132238" fg:w="193"/><text x="74.8141%" y="287.50"></text></g><g><title>bio_add_page (309 samples, 0.17%)</title><rect x="74.4993%" y="293" width="0.1742%" height="15" fill="rgb(220,160,43)" fg:x="132123" fg:w="309"/><text x="74.7493%" y="303.50"></text></g><g><title>bvec_alloc (25 samples, 0.01%)</title><rect x="74.6792%" y="277" width="0.0141%" height="15" fill="rgb(213,52,39)" fg:x="132442" fg:w="25"/><text x="74.9292%" y="287.50"></text></g><g><title>mempool_alloc (18 samples, 0.01%)</title><rect x="74.6831%" y="261" width="0.0101%" height="15" fill="rgb(243,137,7)" fg:x="132449" fg:w="18"/><text x="74.9331%" y="271.50"></text></g><g><title>bio_alloc_bioset (41 samples, 0.02%)</title><rect x="74.6735%" y="293" width="0.0231%" height="15" fill="rgb(230,79,13)" fg:x="132432" fg:w="41"/><text x="74.9235%" y="303.50"></text></g><g><title>__check_block_validity.constprop.0 (31 samples, 0.02%)</title><rect x="74.7068%" y="277" width="0.0175%" height="15" fill="rgb(247,105,23)" fg:x="132491" fg:w="31"/><text x="74.9568%" y="287.50"></text></g><g><title>ext4_inode_block_valid (28 samples, 0.02%)</title><rect x="74.7085%" y="261" width="0.0158%" height="15" fill="rgb(223,179,41)" fg:x="132494" fg:w="28"/><text x="74.9585%" y="271.50"></text></g><g><title>ext4_map_blocks (65 samples, 0.04%)</title><rect x="74.7051%" y="293" width="0.0367%" height="15" fill="rgb(218,9,34)" fg:x="132488" fg:w="65"/><text x="74.9551%" y="303.50"></text></g><g><title>ext4_es_lookup_extent (30 samples, 0.02%)</title><rect x="74.7248%" y="277" width="0.0169%" height="15" fill="rgb(222,106,8)" fg:x="132523" fg:w="30"/><text x="74.9748%" y="287.50"></text></g><g><title>fscrypt_mergeable_bio (80 samples, 0.05%)</title><rect x="74.7418%" y="293" width="0.0451%" height="15" fill="rgb(211,220,0)" fg:x="132553" fg:w="80"/><text x="74.9918%" y="303.50"></text></g><g><title>__blk_mq_alloc_request (23 samples, 0.01%)</title><rect x="74.8094%" y="229" width="0.0130%" height="15" fill="rgb(229,52,16)" fg:x="132673" fg:w="23"/><text x="75.0594%" y="239.50"></text></g><g><title>blk_bio_segment_split (111 samples, 0.06%)</title><rect x="74.8291%" y="213" width="0.0626%" height="15" fill="rgb(212,155,18)" fg:x="132708" fg:w="111"/><text x="75.0791%" y="223.50"></text></g><g><title>bvec_split_segs (33 samples, 0.02%)</title><rect x="74.8731%" y="197" width="0.0186%" height="15" fill="rgb(242,21,14)" fg:x="132786" fg:w="33"/><text x="75.1231%" y="207.50"></text></g><g><title>__blk_queue_split (120 samples, 0.07%)</title><rect x="74.8269%" y="229" width="0.0677%" height="15" fill="rgb(222,19,48)" fg:x="132704" fg:w="120"/><text x="75.0769%" y="239.50"></text></g><g><title>__rq_qos_track (20 samples, 0.01%)</title><rect x="74.9036%" y="229" width="0.0113%" height="15" fill="rgb(232,45,27)" fg:x="132840" fg:w="20"/><text x="75.1536%" y="239.50"></text></g><g><title>__blk_bios_map_sg (58 samples, 0.03%)</title><rect x="74.9318%" y="101" width="0.0327%" height="15" fill="rgb(249,103,42)" fg:x="132890" fg:w="58"/><text x="75.1818%" y="111.50"></text></g><g><title>__blk_rq_map_sg (66 samples, 0.04%)</title><rect x="74.9312%" y="117" width="0.0372%" height="15" fill="rgb(246,81,33)" fg:x="132889" fg:w="66"/><text x="75.1812%" y="127.50"></text></g><g><title>dma_direct_map_sg (50 samples, 0.03%)</title><rect x="74.9729%" y="85" width="0.0282%" height="15" fill="rgb(252,33,42)" fg:x="132963" fg:w="50"/><text x="75.2229%" y="95.50"></text></g><g><title>dma_direct_map_page (42 samples, 0.02%)</title><rect x="74.9774%" y="69" width="0.0237%" height="15" fill="rgb(209,212,41)" fg:x="132971" fg:w="42"/><text x="75.2274%" y="79.50"></text></g><g><title>dma_map_sg_attrs (58 samples, 0.03%)</title><rect x="74.9701%" y="117" width="0.0327%" height="15" fill="rgb(207,154,6)" fg:x="132958" fg:w="58"/><text x="75.2201%" y="127.50"></text></g><g><title>__dma_map_sg_attrs (58 samples, 0.03%)</title><rect x="74.9701%" y="101" width="0.0327%" height="15" fill="rgb(223,64,47)" fg:x="132958" fg:w="58"/><text x="75.2201%" y="111.50"></text></g><g><title>nvme_pci_setup_prps (21 samples, 0.01%)</title><rect x="75.0107%" y="117" width="0.0118%" height="15" fill="rgb(211,161,38)" fg:x="133030" fg:w="21"/><text x="75.2607%" y="127.50"></text></g><g><title>nvme_map_data (174 samples, 0.10%)</title><rect x="74.9295%" y="133" width="0.0981%" height="15" fill="rgb(219,138,40)" fg:x="132886" fg:w="174"/><text x="75.1795%" y="143.50"></text></g><g><title>blk_mq_sched_insert_requests (189 samples, 0.11%)</title><rect x="74.9244%" y="197" width="0.1066%" height="15" fill="rgb(241,228,46)" fg:x="132877" fg:w="189"/><text x="75.1744%" y="207.50"></text></g><g><title>blk_mq_try_issue_list_directly (188 samples, 0.11%)</title><rect x="74.9250%" y="181" width="0.1060%" height="15" fill="rgb(223,209,38)" fg:x="132878" fg:w="188"/><text x="75.1750%" y="191.50"></text></g><g><title>__blk_mq_try_issue_directly (188 samples, 0.11%)</title><rect x="74.9250%" y="165" width="0.1060%" height="15" fill="rgb(236,164,45)" fg:x="132878" fg:w="188"/><text x="75.1750%" y="175.50"></text></g><g><title>nvme_queue_rq (185 samples, 0.10%)</title><rect x="74.9267%" y="149" width="0.1043%" height="15" fill="rgb(231,15,5)" fg:x="132881" fg:w="185"/><text x="75.1767%" y="159.50"></text></g><g><title>blk_flush_plug_list (192 samples, 0.11%)</title><rect x="74.9233%" y="229" width="0.1083%" height="15" fill="rgb(252,35,15)" fg:x="132875" fg:w="192"/><text x="75.1733%" y="239.50"></text></g><g><title>blk_mq_flush_plug_list (191 samples, 0.11%)</title><rect x="74.9239%" y="213" width="0.1077%" height="15" fill="rgb(248,181,18)" fg:x="132876" fg:w="191"/><text x="75.1739%" y="223.50"></text></g><g><title>blk_mq_submit_bio (401 samples, 0.23%)</title><rect x="74.8083%" y="245" width="0.2261%" height="15" fill="rgb(233,39,42)" fg:x="132671" fg:w="401"/><text x="75.0583%" y="255.50"></text></g><g><title>__submit_bio (441 samples, 0.25%)</title><rect x="74.8021%" y="261" width="0.2487%" height="15" fill="rgb(238,110,33)" fg:x="132660" fg:w="441"/><text x="75.0521%" y="271.50"></text></g><g><title>submit_bio_checks (28 samples, 0.02%)</title><rect x="75.0350%" y="245" width="0.0158%" height="15" fill="rgb(233,195,10)" fg:x="133073" fg:w="28"/><text x="75.2850%" y="255.50"></text></g><g><title>submit_bio (454 samples, 0.26%)</title><rect x="74.7964%" y="293" width="0.2560%" height="15" fill="rgb(254,105,3)" fg:x="132650" fg:w="454"/><text x="75.0464%" y="303.50"></text></g><g><title>submit_bio_noacct (451 samples, 0.25%)</title><rect x="74.7981%" y="277" width="0.2543%" height="15" fill="rgb(221,225,9)" fg:x="132653" fg:w="451"/><text x="75.0481%" y="287.50"></text></g><g><title>xas_load (486 samples, 0.27%)</title><rect x="75.0925%" y="277" width="0.2740%" height="15" fill="rgb(224,227,45)" fg:x="133175" fg:w="486"/><text x="75.3425%" y="287.50"></text></g><g><title>xas_start (71 samples, 0.04%)</title><rect x="75.3265%" y="261" width="0.0400%" height="15" fill="rgb(229,198,43)" fg:x="133590" fg:w="71"/><text x="75.5765%" y="271.50"></text></g><g><title>xa_load (568 samples, 0.32%)</title><rect x="75.0524%" y="293" width="0.3203%" height="15" fill="rgb(206,209,35)" fg:x="133104" fg:w="568"/><text x="75.3024%" y="303.50"></text></g><g><title>ext4_mpage_readpages (2,736 samples, 1.54%)</title><rect x="73.8390%" y="309" width="1.5427%" height="15" fill="rgb(245,195,53)" fg:x="130952" fg:w="2736"/><text x="74.0890%" y="319.50"></text></g><g><title>read_pages (2,971 samples, 1.68%)</title><rect x="73.7195%" y="341" width="1.6752%" height="15" fill="rgb(240,92,26)" fg:x="130740" fg:w="2971"/><text x="73.9695%" y="351.50"></text></g><g><title>ext4_readahead (2,773 samples, 1.56%)</title><rect x="73.8311%" y="325" width="1.5636%" height="15" fill="rgb(207,40,23)" fg:x="130938" fg:w="2773"/><text x="74.0811%" y="335.50"></text></g><g><title>xas_load (649 samples, 0.37%)</title><rect x="75.4364%" y="325" width="0.3659%" height="15" fill="rgb(223,111,35)" fg:x="133785" fg:w="649"/><text x="75.6864%" y="335.50"></text></g><g><title>xas_start (88 samples, 0.05%)</title><rect x="75.7528%" y="309" width="0.0496%" height="15" fill="rgb(229,147,28)" fg:x="134346" fg:w="88"/><text x="76.0028%" y="319.50"></text></g><g><title>xa_load (724 samples, 0.41%)</title><rect x="75.4003%" y="341" width="0.4082%" height="15" fill="rgb(211,29,28)" fg:x="133721" fg:w="724"/><text x="75.6503%" y="351.50"></text></g><g><title>page_cache_ra_unbounded (23,449 samples, 13.22%)</title><rect x="62.5928%" y="357" width="13.2220%" height="15" fill="rgb(228,72,33)" fg:x="111007" fg:w="23449"/><text x="62.8428%" y="367.50">page_cache_ra_unboun..</text></g><g><title>page_cache_async_ra (23,530 samples, 13.27%)</title><rect x="62.5578%" y="389" width="13.2677%" height="15" fill="rgb(205,214,31)" fg:x="110945" fg:w="23530"/><text x="62.8078%" y="399.50">page_cache_async_ra</text></g><g><title>ondemand_readahead (23,511 samples, 13.26%)</title><rect x="62.5685%" y="373" width="13.2570%" height="15" fill="rgb(224,111,15)" fg:x="110964" fg:w="23511"/><text x="62.8185%" y="383.50">ondemand_readahead</text></g><g><title>filemap_get_pages (24,248 samples, 13.67%)</title><rect x="62.1546%" y="405" width="13.6726%" height="15" fill="rgb(253,21,26)" fg:x="110230" fg:w="24248"/><text x="62.4046%" y="415.50">filemap_get_pages</text></g><g><title>mark_page_accessed (2,596 samples, 1.46%)</title><rect x="75.8283%" y="405" width="1.4638%" height="15" fill="rgb(245,139,43)" fg:x="134480" fg:w="2596"/><text x="76.0783%" y="415.50"></text></g><g><title>filemap_read (41,497 samples, 23.40%)</title><rect x="53.8946%" y="421" width="23.3986%" height="15" fill="rgb(252,170,7)" fg:x="95581" fg:w="41497"/><text x="54.1446%" y="431.50">filemap_read</text></g><g><title>__x64_sys_read (41,531 samples, 23.42%)</title><rect x="53.8794%" y="517" width="23.4178%" height="15" fill="rgb(231,118,14)" fg:x="95554" fg:w="41531"/><text x="54.1294%" y="527.50">__x64_sys_read</text></g><g><title>ksys_read (41,531 samples, 23.42%)</title><rect x="53.8794%" y="501" width="23.4178%" height="15" fill="rgb(238,83,0)" fg:x="95554" fg:w="41531"/><text x="54.1294%" y="511.50">ksys_read</text></g><g><title>vfs_read (41,531 samples, 23.42%)</title><rect x="53.8794%" y="485" width="23.4178%" height="15" fill="rgb(221,39,39)" fg:x="95554" fg:w="41531"/><text x="54.1294%" y="495.50">vfs_read</text></g><g><title>new_sync_read (41,530 samples, 23.42%)</title><rect x="53.8799%" y="469" width="23.4172%" height="15" fill="rgb(222,119,46)" fg:x="95555" fg:w="41530"/><text x="54.1299%" y="479.50">new_sync_read</text></g><g><title>ext4_file_read_iter (41,530 samples, 23.42%)</title><rect x="53.8799%" y="453" width="23.4172%" height="15" fill="rgb(222,165,49)" fg:x="95555" fg:w="41530"/><text x="54.1299%" y="463.50">ext4_file_read_iter</text></g><g><title>generic_file_read_iter (41,530 samples, 23.42%)</title><rect x="53.8799%" y="437" width="23.4172%" height="15" fill="rgb(219,113,52)" fg:x="95555" fg:w="41530"/><text x="54.1299%" y="447.50">generic_file_read_iter</text></g><g><title>entry_SYSCALL_64_after_hwframe (41,532 samples, 23.42%)</title><rect x="53.8794%" y="549" width="23.4184%" height="15" fill="rgb(214,7,15)" fg:x="95554" fg:w="41532"/><text x="54.1294%" y="559.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (41,532 samples, 23.42%)</title><rect x="53.8794%" y="533" width="23.4184%" height="15" fill="rgb(235,32,4)" fg:x="95554" fg:w="41532"/><text x="54.1294%" y="543.50">do_syscall_64</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (41,536 samples, 23.42%)</title><rect x="53.8783%" y="677" width="23.4206%" height="15" fill="rgb(238,90,54)" fg:x="95552" fg:w="41536"/><text x="54.1283%" y="687.50">&lt;std::io::buffered::bufreader::BufRea..</text></g><g><title>std::io::default_read_exact (41,536 samples, 23.42%)</title><rect x="53.8783%" y="661" width="23.4206%" height="15" fill="rgb(213,208,19)" fg:x="95552" fg:w="41536"/><text x="54.1283%" y="671.50">std::io::default_read_exact</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (41,536 samples, 23.42%)</title><rect x="53.8783%" y="645" width="23.4206%" height="15" fill="rgb(233,156,4)" fg:x="95552" fg:w="41536"/><text x="54.1283%" y="655.50">&lt;std::io::buffered::bufreader::BufRea..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (41,536 samples, 23.42%)</title><rect x="53.8783%" y="629" width="23.4206%" height="15" fill="rgb(207,194,5)" fg:x="95552" fg:w="41536"/><text x="54.1283%" y="639.50">&lt;std::fs::File as std::io::Read&gt;::read</text></g><g><title>std::sys::unix::fs::File::read (41,536 samples, 23.42%)</title><rect x="53.8783%" y="613" width="23.4206%" height="15" fill="rgb(206,111,30)" fg:x="95552" fg:w="41536"/><text x="54.1283%" y="623.50">std::sys::unix::fs::File::read</text></g><g><title>std::sys::unix::fd::FileDesc::read (41,536 samples, 23.42%)</title><rect x="53.8783%" y="597" width="23.4206%" height="15" fill="rgb(243,70,54)" fg:x="95552" fg:w="41536"/><text x="54.1283%" y="607.50">std::sys::unix::fd::FileDesc::read</text></g><g><title>__GI___libc_read (41,536 samples, 23.42%)</title><rect x="53.8783%" y="581" width="23.4206%" height="15" fill="rgb(242,28,8)" fg:x="95552" fg:w="41536"/><text x="54.1283%" y="591.50">__GI___libc_read</text></g><g><title>__GI___libc_read (41,535 samples, 23.42%)</title><rect x="53.8788%" y="565" width="23.4201%" height="15" fill="rgb(219,106,18)" fg:x="95553" fg:w="41535"/><text x="54.1288%" y="575.50">__GI___libc_read</text></g><g><title>do_user_addr_fault (21 samples, 0.01%)</title><rect x="77.7872%" y="581" width="0.0118%" height="15" fill="rgb(244,222,10)" fg:x="137954" fg:w="21"/><text x="78.0372%" y="591.50"></text></g><g><title>handle_mm_fault (18 samples, 0.01%)</title><rect x="77.7889%" y="565" width="0.0101%" height="15" fill="rgb(236,179,52)" fg:x="137957" fg:w="18"/><text x="78.0389%" y="575.50"></text></g><g><title>asm_exc_page_fault (27 samples, 0.02%)</title><rect x="77.7872%" y="613" width="0.0152%" height="15" fill="rgb(213,23,39)" fg:x="137954" fg:w="27"/><text x="78.0372%" y="623.50"></text></g><g><title>exc_page_fault (27 samples, 0.02%)</title><rect x="77.7872%" y="597" width="0.0152%" height="15" fill="rgb(238,48,10)" fg:x="137954" fg:w="27"/><text x="78.0372%" y="607.50"></text></g><g><title>__memset_avx2_unaligned_erms (904 samples, 0.51%)</title><rect x="77.2989%" y="629" width="0.5097%" height="15" fill="rgb(251,196,23)" fg:x="137088" fg:w="904"/><text x="77.5489%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (905 samples, 0.51%)</title><rect x="77.2989%" y="677" width="0.5103%" height="15" fill="rgb(250,152,24)" fg:x="137088" fg:w="905"/><text x="77.5489%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (905 samples, 0.51%)</title><rect x="77.2989%" y="661" width="0.5103%" height="15" fill="rgb(209,150,17)" fg:x="137088" fg:w="905"/><text x="77.5489%" y="671.50"></text></g><g><title>core::ptr::write (905 samples, 0.51%)</title><rect x="77.2989%" y="645" width="0.5103%" height="15" fill="rgb(234,202,34)" fg:x="137088" fg:w="905"/><text x="77.5489%" y="655.50"></text></g><g><title>do_futex (22 samples, 0.01%)</title><rect x="77.8154%" y="437" width="0.0124%" height="15" fill="rgb(253,148,53)" fg:x="138004" fg:w="22"/><text x="78.0654%" y="447.50"></text></g><g><title>futex_wait (22 samples, 0.01%)</title><rect x="77.8154%" y="421" width="0.0124%" height="15" fill="rgb(218,129,16)" fg:x="138004" fg:w="22"/><text x="78.0654%" y="431.50"></text></g><g><title>futex_wait_queue_me (22 samples, 0.01%)</title><rect x="77.8154%" y="405" width="0.0124%" height="15" fill="rgb(216,85,19)" fg:x="138004" fg:w="22"/><text x="78.0654%" y="415.50"></text></g><g><title>schedule (22 samples, 0.01%)</title><rect x="77.8154%" y="389" width="0.0124%" height="15" fill="rgb(235,228,7)" fg:x="138004" fg:w="22"/><text x="78.0654%" y="399.50"></text></g><g><title>__schedule (22 samples, 0.01%)</title><rect x="77.8154%" y="373" width="0.0124%" height="15" fill="rgb(245,175,0)" fg:x="138004" fg:w="22"/><text x="78.0654%" y="383.50"></text></g><g><title>__x64_sys_futex (23 samples, 0.01%)</title><rect x="77.8154%" y="453" width="0.0130%" height="15" fill="rgb(208,168,36)" fg:x="138004" fg:w="23"/><text x="78.0654%" y="463.50"></text></g><g><title>crossbeam_channel::context::Context::with (35 samples, 0.02%)</title><rect x="77.8092%" y="645" width="0.0197%" height="15" fill="rgb(246,171,24)" fg:x="137993" fg:w="35"/><text x="78.0592%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 0.02%)</title><rect x="77.8092%" y="629" width="0.0197%" height="15" fill="rgb(215,142,24)" fg:x="137993" fg:w="35"/><text x="78.0592%" y="639.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (35 samples, 0.02%)</title><rect x="77.8092%" y="613" width="0.0197%" height="15" fill="rgb(250,187,7)" fg:x="137993" fg:w="35"/><text x="78.0592%" y="623.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (32 samples, 0.02%)</title><rect x="77.8109%" y="597" width="0.0180%" height="15" fill="rgb(228,66,33)" fg:x="137996" fg:w="32"/><text x="78.0609%" y="607.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (32 samples, 0.02%)</title><rect x="77.8109%" y="581" width="0.0180%" height="15" fill="rgb(234,215,21)" fg:x="137996" fg:w="32"/><text x="78.0609%" y="591.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (32 samples, 0.02%)</title><rect x="77.8109%" y="565" width="0.0180%" height="15" fill="rgb(222,191,20)" fg:x="137996" fg:w="32"/><text x="78.0609%" y="575.50"></text></g><g><title>std::thread::park (24 samples, 0.01%)</title><rect x="77.8154%" y="549" width="0.0135%" height="15" fill="rgb(245,79,54)" fg:x="138004" fg:w="24"/><text x="78.0654%" y="559.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (24 samples, 0.01%)</title><rect x="77.8154%" y="533" width="0.0135%" height="15" fill="rgb(240,10,37)" fg:x="138004" fg:w="24"/><text x="78.0654%" y="543.50"></text></g><g><title>std::sys::unix::futex::futex_wait (24 samples, 0.01%)</title><rect x="77.8154%" y="517" width="0.0135%" height="15" fill="rgb(214,192,32)" fg:x="138004" fg:w="24"/><text x="78.0654%" y="527.50"></text></g><g><title>syscall (24 samples, 0.01%)</title><rect x="77.8154%" y="501" width="0.0135%" height="15" fill="rgb(209,36,54)" fg:x="138004" fg:w="24"/><text x="78.0654%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (24 samples, 0.01%)</title><rect x="77.8154%" y="485" width="0.0135%" height="15" fill="rgb(220,10,11)" fg:x="138004" fg:w="24"/><text x="78.0654%" y="495.50"></text></g><g><title>do_syscall_64 (24 samples, 0.01%)</title><rect x="77.8154%" y="469" width="0.0135%" height="15" fill="rgb(221,106,17)" fg:x="138004" fg:w="24"/><text x="78.0654%" y="479.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (49 samples, 0.03%)</title><rect x="77.8092%" y="677" width="0.0276%" height="15" fill="rgb(251,142,44)" fg:x="137993" fg:w="49"/><text x="78.0592%" y="687.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (49 samples, 0.03%)</title><rect x="77.8092%" y="661" width="0.0276%" height="15" fill="rgb(238,13,15)" fg:x="137993" fg:w="49"/><text x="78.0592%" y="671.50"></text></g><g><title>std::panic::catch_unwind (42,491 samples, 23.96%)</title><rect x="53.8783%" y="789" width="23.9591%" height="15" fill="rgb(208,107,27)" fg:x="95552" fg:w="42491"/><text x="54.1283%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (42,491 samples, 23.96%)</title><rect x="53.8783%" y="773" width="23.9591%" height="15" fill="rgb(205,136,37)" fg:x="95552" fg:w="42491"/><text x="54.1283%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (42,491 samples, 23.96%)</title><rect x="53.8783%" y="757" width="23.9591%" height="15" fill="rgb(250,205,27)" fg:x="95552" fg:w="42491"/><text x="54.1283%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42,491 samples, 23.96%)</title><rect x="53.8783%" y="741" width="23.9591%" height="15" fill="rgb(210,80,43)" fg:x="95552" fg:w="42491"/><text x="54.1283%" y="751.50">&lt;core::panic::unwind_safe::AssertUnwin..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (42,491 samples, 23.96%)</title><rect x="53.8783%" y="725" width="23.9591%" height="15" fill="rgb(247,160,36)" fg:x="95552" fg:w="42491"/><text x="54.1283%" y="735.50">std::thread::Builder::spawn_unchecked_..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (42,491 samples, 23.96%)</title><rect x="53.8783%" y="709" width="23.9591%" height="15" fill="rgb(234,13,49)" fg:x="95552" fg:w="42491"/><text x="54.1283%" y="719.50">std::sys_common::backtrace::__rust_beg..</text></g><g><title>hprof_slurp::prefetch_reader::PrefetchReader::start::{{closure}} (42,491 samples, 23.96%)</title><rect x="53.8783%" y="693" width="23.9591%" height="15" fill="rgb(234,122,0)" fg:x="95552" fg:w="42491"/><text x="54.1283%" y="703.50">hprof_slurp::prefetch_reader::Prefetch..</text></g><g><title>__clone3 (42,493 samples, 23.96%)</title><rect x="53.8777%" y="901" width="23.9602%" height="15" fill="rgb(207,146,38)" fg:x="95551" fg:w="42493"/><text x="54.1277%" y="911.50">__clone3</text></g><g><title>start_thread (42,493 samples, 23.96%)</title><rect x="53.8777%" y="885" width="23.9602%" height="15" fill="rgb(207,177,25)" fg:x="95551" fg:w="42493"/><text x="54.1277%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (42,492 samples, 23.96%)</title><rect x="53.8783%" y="869" width="23.9597%" height="15" fill="rgb(211,178,42)" fg:x="95552" fg:w="42492"/><text x="54.1283%" y="879.50">std::sys::unix::thread::Thread::new::t..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42,492 samples, 23.96%)</title><rect x="53.8783%" y="853" width="23.9597%" height="15" fill="rgb(230,69,54)" fg:x="95552" fg:w="42492"/><text x="54.1283%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42,492 samples, 23.96%)</title><rect x="53.8783%" y="837" width="23.9597%" height="15" fill="rgb(214,135,41)" fg:x="95552" fg:w="42492"/><text x="54.1283%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (42,492 samples, 23.96%)</title><rect x="53.8783%" y="821" width="23.9597%" height="15" fill="rgb(237,67,25)" fg:x="95552" fg:w="42492"/><text x="54.1283%" y="831.50">core::ops::function::FnOnce::call_once..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (42,492 samples, 23.96%)</title><rect x="53.8783%" y="805" width="23.9597%" height="15" fill="rgb(222,189,50)" fg:x="95552" fg:w="42492"/><text x="54.1283%" y="815.50">std::thread::Builder::spawn_unchecked_..</text></g><g><title>__irqentry_text_start (152 samples, 0.09%)</title><rect x="77.8379%" y="901" width="0.0857%" height="15" fill="rgb(245,148,34)" fg:x="138044" fg:w="152"/><text x="78.0879%" y="911.50"></text></g><g><title>asm_exc_page_fault (33 samples, 0.02%)</title><rect x="77.9236%" y="901" width="0.0186%" height="15" fill="rgb(222,29,6)" fg:x="138196" fg:w="33"/><text x="78.1736%" y="911.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (1,298 samples, 0.73%)</title><rect x="77.9422%" y="901" width="0.7319%" height="15" fill="rgb(221,189,43)" fg:x="138229" fg:w="1298"/><text x="78.1922%" y="911.50"></text></g><g><title>asm_sysvec_reschedule_ipi (42 samples, 0.02%)</title><rect x="78.6781%" y="901" width="0.0237%" height="15" fill="rgb(207,36,27)" fg:x="139534" fg:w="42"/><text x="78.9281%" y="911.50"></text></g><g><title>copy_user_enhanced_fast_string (27 samples, 0.02%)</title><rect x="78.7018%" y="757" width="0.0152%" height="15" fill="rgb(217,90,24)" fg:x="139576" fg:w="27"/><text x="78.9518%" y="767.50"></text></g><g><title>filemap_get_pages (26 samples, 0.01%)</title><rect x="78.7170%" y="757" width="0.0147%" height="15" fill="rgb(224,66,35)" fg:x="139603" fg:w="26"/><text x="78.9670%" y="767.50"></text></g><g><title>page_cache_async_ra (25 samples, 0.01%)</title><rect x="78.7175%" y="741" width="0.0141%" height="15" fill="rgb(221,13,50)" fg:x="139604" fg:w="25"/><text x="78.9675%" y="751.50"></text></g><g><title>ondemand_readahead (25 samples, 0.01%)</title><rect x="78.7175%" y="725" width="0.0141%" height="15" fill="rgb(236,68,49)" fg:x="139604" fg:w="25"/><text x="78.9675%" y="735.50"></text></g><g><title>page_cache_ra_unbounded (25 samples, 0.01%)</title><rect x="78.7175%" y="709" width="0.0141%" height="15" fill="rgb(229,146,28)" fg:x="139604" fg:w="25"/><text x="78.9675%" y="719.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (57 samples, 0.03%)</title><rect x="78.7018%" y="901" width="0.0321%" height="15" fill="rgb(225,31,38)" fg:x="139576" fg:w="57"/><text x="78.9518%" y="911.50"></text></g><g><title>do_syscall_64 (57 samples, 0.03%)</title><rect x="78.7018%" y="885" width="0.0321%" height="15" fill="rgb(250,208,3)" fg:x="139576" fg:w="57"/><text x="78.9518%" y="895.50"></text></g><g><title>__x64_sys_read (57 samples, 0.03%)</title><rect x="78.7018%" y="869" width="0.0321%" height="15" fill="rgb(246,54,23)" fg:x="139576" fg:w="57"/><text x="78.9518%" y="879.50"></text></g><g><title>ksys_read (57 samples, 0.03%)</title><rect x="78.7018%" y="853" width="0.0321%" height="15" fill="rgb(243,76,11)" fg:x="139576" fg:w="57"/><text x="78.9518%" y="863.50"></text></g><g><title>vfs_read (57 samples, 0.03%)</title><rect x="78.7018%" y="837" width="0.0321%" height="15" fill="rgb(245,21,50)" fg:x="139576" fg:w="57"/><text x="78.9518%" y="847.50"></text></g><g><title>new_sync_read (57 samples, 0.03%)</title><rect x="78.7018%" y="821" width="0.0321%" height="15" fill="rgb(228,9,43)" fg:x="139576" fg:w="57"/><text x="78.9518%" y="831.50"></text></g><g><title>ext4_file_read_iter (57 samples, 0.03%)</title><rect x="78.7018%" y="805" width="0.0321%" height="15" fill="rgb(208,100,47)" fg:x="139576" fg:w="57"/><text x="78.9518%" y="815.50"></text></g><g><title>generic_file_read_iter (57 samples, 0.03%)</title><rect x="78.7018%" y="789" width="0.0321%" height="15" fill="rgb(232,26,8)" fg:x="139576" fg:w="57"/><text x="78.9518%" y="799.50"></text></g><g><title>filemap_read (57 samples, 0.03%)</title><rect x="78.7018%" y="773" width="0.0321%" height="15" fill="rgb(216,166,38)" fg:x="139576" fg:w="57"/><text x="78.9518%" y="783.50"></text></g><g><title>hprof-prefetch (44,085 samples, 24.86%)</title><rect x="53.8766%" y="917" width="24.8579%" height="15" fill="rgb(251,202,51)" fg:x="95549" fg:w="44085"/><text x="54.1266%" y="927.50">hprof-prefetch</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (1,989 samples, 1.12%)</title><rect x="78.7429%" y="885" width="1.1215%" height="15" fill="rgb(254,216,34)" fg:x="139649" fg:w="1989"/><text x="78.9929%" y="895.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (18 samples, 0.01%)</title><rect x="79.8656%" y="885" width="0.0101%" height="15" fill="rgb(251,32,27)" fg:x="141640" fg:w="18"/><text x="80.1156%" y="895.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (51 samples, 0.03%)</title><rect x="79.8825%" y="885" width="0.0288%" height="15" fill="rgb(208,127,28)" fg:x="141670" fg:w="51"/><text x="80.1325%" y="895.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (51 samples, 0.03%)</title><rect x="79.8825%" y="869" width="0.0288%" height="15" fill="rgb(224,137,22)" fg:x="141670" fg:w="51"/><text x="80.1325%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (51 samples, 0.03%)</title><rect x="79.8825%" y="853" width="0.0288%" height="15" fill="rgb(254,70,32)" fg:x="141670" fg:w="51"/><text x="80.1325%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (51 samples, 0.03%)</title><rect x="79.8825%" y="837" width="0.0288%" height="15" fill="rgb(229,75,37)" fg:x="141670" fg:w="51"/><text x="80.1325%" y="847.50"></text></g><g><title>[unknown] (2,074 samples, 1.17%)</title><rect x="78.7424%" y="901" width="1.1695%" height="15" fill="rgb(252,64,23)" fg:x="139648" fg:w="2074"/><text x="78.9924%" y="911.50"></text></g><g><title>__malloc_arena_thread_freeres (26 samples, 0.01%)</title><rect x="79.9118%" y="869" width="0.0147%" height="15" fill="rgb(232,162,48)" fg:x="141722" fg:w="26"/><text x="80.1618%" y="879.50"></text></g><g><title>tcache_thread_shutdown (26 samples, 0.01%)</title><rect x="79.9118%" y="853" width="0.0147%" height="15" fill="rgb(246,160,12)" fg:x="141722" fg:w="26"/><text x="80.1618%" y="863.50"></text></g><g><title>__GI___libc_free (26 samples, 0.01%)</title><rect x="79.9118%" y="837" width="0.0147%" height="15" fill="rgb(247,166,0)" fg:x="141722" fg:w="26"/><text x="80.1618%" y="847.50"></text></g><g><title>_int_free (26 samples, 0.01%)</title><rect x="79.9118%" y="821" width="0.0147%" height="15" fill="rgb(249,219,21)" fg:x="141722" fg:w="26"/><text x="80.1618%" y="831.50"></text></g><g><title>malloc_consolidate (26 samples, 0.01%)</title><rect x="79.9118%" y="805" width="0.0147%" height="15" fill="rgb(205,209,3)" fg:x="141722" fg:w="26"/><text x="80.1618%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (8,520 samples, 4.80%)</title><rect x="80.7023%" y="645" width="4.8041%" height="15" fill="rgb(243,44,1)" fg:x="143124" fg:w="8520"/><text x="80.9523%" y="655.50">core::..</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::gc_record::GcRecord&gt; (1,091 samples, 0.62%)</title><rect x="84.8913%" y="629" width="0.6152%" height="15" fill="rgb(206,159,16)" fg:x="150553" fg:w="1091"/><text x="85.1413%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (9,897 samples, 5.58%)</title><rect x="79.9265%" y="677" width="5.5806%" height="15" fill="rgb(244,77,30)" fg:x="141748" fg:w="9897"/><text x="80.1765%" y="687.50">alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (9,896 samples, 5.58%)</title><rect x="79.9270%" y="661" width="5.5800%" height="15" fill="rgb(218,69,12)" fg:x="141749" fg:w="9896"/><text x="80.1770%" y="671.50">core::p..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.01%)</title><rect x="85.5070%" y="581" width="0.0130%" height="15" fill="rgb(212,87,7)" fg:x="151645" fg:w="23"/><text x="85.7570%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (23 samples, 0.01%)</title><rect x="85.5070%" y="565" width="0.0130%" height="15" fill="rgb(245,114,25)" fg:x="151645" fg:w="23"/><text x="85.7570%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (22 samples, 0.01%)</title><rect x="85.5076%" y="549" width="0.0124%" height="15" fill="rgb(210,61,42)" fg:x="151646" fg:w="22"/><text x="85.7576%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (22 samples, 0.01%)</title><rect x="85.5076%" y="533" width="0.0124%" height="15" fill="rgb(211,52,33)" fg:x="151646" fg:w="22"/><text x="85.7576%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,alloc::boxed::Box&lt;str&gt;)&gt; (22 samples, 0.01%)</title><rect x="85.5076%" y="517" width="0.0124%" height="15" fill="rgb(234,58,33)" fg:x="151646" fg:w="22"/><text x="85.7576%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (22 samples, 0.01%)</title><rect x="85.5076%" y="501" width="0.0124%" height="15" fill="rgb(220,115,36)" fg:x="151646" fg:w="22"/><text x="85.7576%" y="511.50"></text></g><g><title>alloc::alloc::box_free (22 samples, 0.01%)</title><rect x="85.5076%" y="485" width="0.0124%" height="15" fill="rgb(243,153,54)" fg:x="151646" fg:w="22"/><text x="85.7576%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.01%)</title><rect x="85.5076%" y="469" width="0.0124%" height="15" fill="rgb(251,47,18)" fg:x="151646" fg:w="22"/><text x="85.7576%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.01%)</title><rect x="85.5076%" y="453" width="0.0124%" height="15" fill="rgb(242,102,42)" fg:x="151646" fg:w="22"/><text x="85.7576%" y="463.50"></text></g><g><title>__GI___libc_free (22 samples, 0.01%)</title><rect x="85.5076%" y="437" width="0.0124%" height="15" fill="rgb(234,31,38)" fg:x="151646" fg:w="22"/><text x="85.7576%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder::start::{{closure}}&gt; (24 samples, 0.01%)</title><rect x="85.5070%" y="677" width="0.0135%" height="15" fill="rgb(221,117,51)" fg:x="151645" fg:w="24"/><text x="85.7570%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder&gt; (24 samples, 0.01%)</title><rect x="85.5070%" y="661" width="0.0135%" height="15" fill="rgb(212,20,18)" fg:x="151645" fg:w="24"/><text x="85.7570%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;ahash::hash_map::AHashMap&lt;u64,alloc::boxed::Box&lt;str&gt;&gt;&gt; (24 samples, 0.01%)</title><rect x="85.5070%" y="645" width="0.0135%" height="15" fill="rgb(245,133,36)" fg:x="151645" fg:w="24"/><text x="85.7570%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::boxed::Box&lt;str&gt;,ahash::random_state::RandomState&gt;&gt; (24 samples, 0.01%)</title><rect x="85.5070%" y="629" width="0.0135%" height="15" fill="rgb(212,6,19)" fg:x="151645" fg:w="24"/><text x="85.7570%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::boxed::Box&lt;str&gt;,ahash::random_state::RandomState&gt;&gt; (24 samples, 0.01%)</title><rect x="85.5070%" y="613" width="0.0135%" height="15" fill="rgb(218,1,36)" fg:x="151645" fg:w="24"/><text x="85.7570%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::boxed::Box&lt;str&gt;)&gt;&gt; (24 samples, 0.01%)</title><rect x="85.5070%" y="597" width="0.0135%" height="15" fill="rgb(246,84,54)" fg:x="151645" fg:w="24"/><text x="85.7570%" y="607.50"></text></g><g><title>finish_task_switch.isra.0 (21 samples, 0.01%)</title><rect x="85.5301%" y="357" width="0.0118%" height="15" fill="rgb(242,110,6)" fg:x="151686" fg:w="21"/><text x="85.7801%" y="367.50"></text></g><g><title>__perf_event_task_sched_in (21 samples, 0.01%)</title><rect x="85.5301%" y="341" width="0.0118%" height="15" fill="rgb(214,47,5)" fg:x="151686" fg:w="21"/><text x="85.7801%" y="351.50"></text></g><g><title>x86_pmu_enable (21 samples, 0.01%)</title><rect x="85.5301%" y="325" width="0.0118%" height="15" fill="rgb(218,159,25)" fg:x="151686" fg:w="21"/><text x="85.7801%" y="335.50"></text></g><g><title>intel_pmu_enable_all (21 samples, 0.01%)</title><rect x="85.5301%" y="309" width="0.0118%" height="15" fill="rgb(215,211,28)" fg:x="151686" fg:w="21"/><text x="85.7801%" y="319.50"></text></g><g><title>native_write_msr (21 samples, 0.01%)</title><rect x="85.5301%" y="293" width="0.0118%" height="15" fill="rgb(238,59,32)" fg:x="151686" fg:w="21"/><text x="85.7801%" y="303.50"></text></g><g><title>__x64_sys_futex (24 samples, 0.01%)</title><rect x="85.5301%" y="453" width="0.0135%" height="15" fill="rgb(226,82,3)" fg:x="151686" fg:w="24"/><text x="85.7801%" y="463.50"></text></g><g><title>do_futex (24 samples, 0.01%)</title><rect x="85.5301%" y="437" width="0.0135%" height="15" fill="rgb(240,164,32)" fg:x="151686" fg:w="24"/><text x="85.7801%" y="447.50"></text></g><g><title>futex_wait (24 samples, 0.01%)</title><rect x="85.5301%" y="421" width="0.0135%" height="15" fill="rgb(232,46,7)" fg:x="151686" fg:w="24"/><text x="85.7801%" y="431.50"></text></g><g><title>futex_wait_queue_me (24 samples, 0.01%)</title><rect x="85.5301%" y="405" width="0.0135%" height="15" fill="rgb(229,129,53)" fg:x="151686" fg:w="24"/><text x="85.7801%" y="415.50"></text></g><g><title>schedule (24 samples, 0.01%)</title><rect x="85.5301%" y="389" width="0.0135%" height="15" fill="rgb(234,188,29)" fg:x="151686" fg:w="24"/><text x="85.7801%" y="399.50"></text></g><g><title>__schedule (24 samples, 0.01%)</title><rect x="85.5301%" y="373" width="0.0135%" height="15" fill="rgb(246,141,4)" fg:x="151686" fg:w="24"/><text x="85.7801%" y="383.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (30 samples, 0.02%)</title><rect x="85.5285%" y="533" width="0.0169%" height="15" fill="rgb(229,23,39)" fg:x="151683" fg:w="30"/><text x="85.7785%" y="543.50"></text></g><g><title>std::sys::unix::futex::futex_wait (29 samples, 0.02%)</title><rect x="85.5290%" y="517" width="0.0164%" height="15" fill="rgb(206,12,3)" fg:x="151684" fg:w="29"/><text x="85.7790%" y="527.50"></text></g><g><title>syscall (27 samples, 0.02%)</title><rect x="85.5301%" y="501" width="0.0152%" height="15" fill="rgb(252,226,20)" fg:x="151686" fg:w="27"/><text x="85.7801%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (27 samples, 0.02%)</title><rect x="85.5301%" y="485" width="0.0152%" height="15" fill="rgb(216,123,35)" fg:x="151686" fg:w="27"/><text x="85.7801%" y="495.50"></text></g><g><title>do_syscall_64 (27 samples, 0.02%)</title><rect x="85.5301%" y="469" width="0.0152%" height="15" fill="rgb(212,68,40)" fg:x="151686" fg:w="27"/><text x="85.7801%" y="479.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (46 samples, 0.03%)</title><rect x="85.5206%" y="565" width="0.0259%" height="15" fill="rgb(254,125,32)" fg:x="151669" fg:w="46"/><text x="85.7706%" y="575.50"></text></g><g><title>std::thread::park (33 samples, 0.02%)</title><rect x="85.5279%" y="549" width="0.0186%" height="15" fill="rgb(253,97,22)" fg:x="151682" fg:w="33"/><text x="85.7779%" y="559.50"></text></g><g><title>crossbeam_channel::context::Context::with (47 samples, 0.03%)</title><rect x="85.5206%" y="645" width="0.0265%" height="15" fill="rgb(241,101,14)" fg:x="151669" fg:w="47"/><text x="85.7706%" y="655.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (47 samples, 0.03%)</title><rect x="85.5206%" y="629" width="0.0265%" height="15" fill="rgb(238,103,29)" fg:x="151669" fg:w="47"/><text x="85.7706%" y="639.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (47 samples, 0.03%)</title><rect x="85.5206%" y="613" width="0.0265%" height="15" fill="rgb(233,195,47)" fg:x="151669" fg:w="47"/><text x="85.7706%" y="623.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (47 samples, 0.03%)</title><rect x="85.5206%" y="597" width="0.0265%" height="15" fill="rgb(246,218,30)" fg:x="151669" fg:w="47"/><text x="85.7706%" y="607.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (47 samples, 0.03%)</title><rect x="85.5206%" y="581" width="0.0265%" height="15" fill="rgb(219,145,47)" fg:x="151669" fg:w="47"/><text x="85.7706%" y="591.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (63 samples, 0.04%)</title><rect x="85.5206%" y="677" width="0.0355%" height="15" fill="rgb(243,12,26)" fg:x="151669" fg:w="63"/><text x="85.7706%" y="687.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (63 samples, 0.04%)</title><rect x="85.5206%" y="661" width="0.0355%" height="15" fill="rgb(214,87,16)" fg:x="151669" fg:w="63"/><text x="85.7706%" y="671.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (344 samples, 0.19%)</title><rect x="85.5572%" y="645" width="0.1940%" height="15" fill="rgb(208,99,42)" fg:x="151734" fg:w="344"/><text x="85.8072%" y="655.50"></text></g><g><title>core::slice::iter::IterMut&lt;T&gt;::post_inc_start (332 samples, 0.19%)</title><rect x="85.5640%" y="629" width="0.1872%" height="15" fill="rgb(253,99,2)" fg:x="151746" fg:w="332"/><text x="85.8140%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (332 samples, 0.19%)</title><rect x="85.5640%" y="613" width="0.1872%" height="15" fill="rgb(220,168,23)" fg:x="151746" fg:w="332"/><text x="85.8140%" y="623.50"></text></g><g><title>ahash::hash_map::AHashMap&lt;K,V,S&gt;::insert (25 samples, 0.01%)</title><rect x="91.6988%" y="629" width="0.0141%" height="15" fill="rgb(242,38,24)" fg:x="162626" fg:w="25"/><text x="91.9488%" y="639.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (25 samples, 0.01%)</title><rect x="91.6988%" y="613" width="0.0141%" height="15" fill="rgb(225,182,9)" fg:x="162626" fg:w="25"/><text x="91.9488%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (25 samples, 0.01%)</title><rect x="91.6988%" y="597" width="0.0141%" height="15" fill="rgb(243,178,37)" fg:x="162626" fg:w="25"/><text x="91.9488%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (19 samples, 0.01%)</title><rect x="91.7022%" y="581" width="0.0107%" height="15" fill="rgb(232,139,19)" fg:x="162632" fg:w="19"/><text x="91.9522%" y="591.50"></text></g><g><title>__hrtimer_run_queues (21 samples, 0.01%)</title><rect x="91.7242%" y="565" width="0.0118%" height="15" fill="rgb(225,201,24)" fg:x="162671" fg:w="21"/><text x="91.9742%" y="575.50"></text></g><g><title>tick_sched_timer (19 samples, 0.01%)</title><rect x="91.7253%" y="549" width="0.0107%" height="15" fill="rgb(221,47,46)" fg:x="162673" fg:w="19"/><text x="91.9753%" y="559.50"></text></g><g><title>tick_sched_handle (19 samples, 0.01%)</title><rect x="91.7253%" y="533" width="0.0107%" height="15" fill="rgb(249,23,13)" fg:x="162673" fg:w="19"/><text x="91.9753%" y="543.50"></text></g><g><title>update_process_times (18 samples, 0.01%)</title><rect x="91.7259%" y="517" width="0.0101%" height="15" fill="rgb(219,9,5)" fg:x="162674" fg:w="18"/><text x="91.9759%" y="527.50"></text></g><g><title>__sysvec_apic_timer_interrupt (25 samples, 0.01%)</title><rect x="91.7225%" y="597" width="0.0141%" height="15" fill="rgb(254,171,16)" fg:x="162668" fg:w="25"/><text x="91.9725%" y="607.50"></text></g><g><title>hrtimer_interrupt (25 samples, 0.01%)</title><rect x="91.7225%" y="581" width="0.0141%" height="15" fill="rgb(230,171,20)" fg:x="162668" fg:w="25"/><text x="91.9725%" y="591.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (37 samples, 0.02%)</title><rect x="91.7225%" y="629" width="0.0209%" height="15" fill="rgb(210,71,41)" fg:x="162668" fg:w="37"/><text x="91.9725%" y="639.50"></text></g><g><title>sysvec_apic_timer_interrupt (37 samples, 0.02%)</title><rect x="91.7225%" y="613" width="0.0209%" height="15" fill="rgb(206,173,20)" fg:x="162668" fg:w="37"/><text x="91.9725%" y="623.50"></text></g><g><title>hprof_slurp::result_recorder::ArrayCounter::add_elements_from_array (42 samples, 0.02%)</title><rect x="91.7434%" y="629" width="0.0237%" height="15" fill="rgb(233,88,34)" fg:x="162705" fg:w="42"/><text x="91.9934%" y="639.50"></text></g><g><title>hprof_slurp::result_recorder::ClassInstanceCounter::add_instance (1,340 samples, 0.76%)</title><rect x="91.7670%" y="629" width="0.7556%" height="15" fill="rgb(223,209,46)" fg:x="162747" fg:w="1340"/><text x="92.0170%" y="639.50"></text></g><g><title>ahash::operations::folded_multiply (1,217 samples, 0.69%)</title><rect x="92.5610%" y="549" width="0.6862%" height="15" fill="rgb(250,43,18)" fg:x="164155" fg:w="1217"/><text x="92.8110%" y="559.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (772 samples, 0.44%)</title><rect x="92.8119%" y="533" width="0.4353%" height="15" fill="rgb(208,13,10)" fg:x="164600" fg:w="772"/><text x="93.0619%" y="543.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1,615 samples, 0.91%)</title><rect x="92.5610%" y="565" width="0.9106%" height="15" fill="rgb(212,200,36)" fg:x="164155" fg:w="1615"/><text x="92.8110%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (398 samples, 0.22%)</title><rect x="93.2472%" y="549" width="0.2244%" height="15" fill="rgb(225,90,30)" fg:x="165372" fg:w="398"/><text x="93.4972%" y="559.50"></text></g><g><title>&lt;hprof_slurp::parser::gc_record::FieldType as core::hash::Hash&gt;::hash (19 samples, 0.01%)</title><rect x="93.4716%" y="549" width="0.0107%" height="15" fill="rgb(236,182,39)" fg:x="165770" fg:w="19"/><text x="93.7216%" y="559.50"></text></g><g><title>ahash::operations::folded_multiply (768 samples, 0.43%)</title><rect x="93.5003%" y="501" width="0.4330%" height="15" fill="rgb(212,144,35)" fg:x="165821" fg:w="768"/><text x="93.7503%" y="511.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (698 samples, 0.39%)</title><rect x="93.5398%" y="485" width="0.3936%" height="15" fill="rgb(228,63,44)" fg:x="165891" fg:w="698"/><text x="93.7898%" y="495.50"></text></g><g><title>hashbrown::map::make_insert_hash (2,437 samples, 1.37%)</title><rect x="92.5610%" y="597" width="1.3741%" height="15" fill="rgb(228,109,6)" fg:x="164155" fg:w="2437"/><text x="92.8110%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,437 samples, 1.37%)</title><rect x="92.5610%" y="581" width="1.3741%" height="15" fill="rgb(238,117,24)" fg:x="164155" fg:w="2437"/><text x="92.8110%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (822 samples, 0.46%)</title><rect x="93.4716%" y="565" width="0.4635%" height="15" fill="rgb(242,26,26)" fg:x="165770" fg:w="822"/><text x="93.7216%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (803 samples, 0.45%)</title><rect x="93.4823%" y="549" width="0.4528%" height="15" fill="rgb(221,92,48)" fg:x="165789" fg:w="803"/><text x="93.7323%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (803 samples, 0.45%)</title><rect x="93.4823%" y="533" width="0.4528%" height="15" fill="rgb(209,209,32)" fg:x="165789" fg:w="803"/><text x="93.7323%" y="543.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (803 samples, 0.45%)</title><rect x="93.4823%" y="517" width="0.4528%" height="15" fill="rgb(221,70,22)" fg:x="165789" fg:w="803"/><text x="93.7323%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,808 samples, 1.02%)</title><rect x="94.6895%" y="565" width="1.0195%" height="15" fill="rgb(248,145,5)" fg:x="167930" fg:w="1808"/><text x="94.9395%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,500 samples, 0.85%)</title><rect x="94.8632%" y="549" width="0.8458%" height="15" fill="rgb(226,116,26)" fg:x="168238" fg:w="1500"/><text x="95.1132%" y="559.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (49 samples, 0.03%)</title><rect x="95.7146%" y="565" width="0.0276%" height="15" fill="rgb(244,5,17)" fg:x="169748" fg:w="49"/><text x="95.9646%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (996 samples, 0.56%)</title><rect x="95.7423%" y="549" width="0.5616%" height="15" fill="rgb(252,159,33)" fg:x="169797" fg:w="996"/><text x="95.9923%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (996 samples, 0.56%)</title><rect x="95.7423%" y="533" width="0.5616%" height="15" fill="rgb(206,71,0)" fg:x="169797" fg:w="996"/><text x="95.9923%" y="543.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (982 samples, 0.55%)</title><rect x="95.7502%" y="517" width="0.5537%" height="15" fill="rgb(233,118,54)" fg:x="169811" fg:w="982"/><text x="96.0002%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2,870 samples, 1.62%)</title><rect x="95.7423%" y="565" width="1.6183%" height="15" fill="rgb(234,83,48)" fg:x="169797" fg:w="2870"/><text x="95.9923%" y="575.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (1,874 samples, 1.06%)</title><rect x="96.3039%" y="549" width="1.0567%" height="15" fill="rgb(228,3,54)" fg:x="170793" fg:w="1874"/><text x="96.5539%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (1,858 samples, 1.05%)</title><rect x="96.3129%" y="533" width="1.0477%" height="15" fill="rgb(226,155,13)" fg:x="170809" fg:w="1858"/><text x="96.5629%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1,641 samples, 0.93%)</title><rect x="97.3606%" y="565" width="0.9253%" height="15" fill="rgb(241,28,37)" fg:x="172667" fg:w="1641"/><text x="97.6106%" y="575.50"></text></g><g><title>hashbrown::raw::h2 (660 samples, 0.37%)</title><rect x="98.2859%" y="565" width="0.3721%" height="15" fill="rgb(233,93,10)" fg:x="174308" fg:w="660"/><text x="98.5359%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (668 samples, 0.38%)</title><rect x="98.6580%" y="565" width="0.3767%" height="15" fill="rgb(225,113,19)" fg:x="174968" fg:w="668"/><text x="98.9080%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (668 samples, 0.38%)</title><rect x="98.6580%" y="549" width="0.3767%" height="15" fill="rgb(241,2,18)" fg:x="174968" fg:w="668"/><text x="98.9080%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (668 samples, 0.38%)</title><rect x="98.6580%" y="533" width="0.3767%" height="15" fill="rgb(228,207,21)" fg:x="174968" fg:w="668"/><text x="98.9080%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1,276 samples, 0.72%)</title><rect x="99.0347%" y="565" width="0.7195%" height="15" fill="rgb(213,211,35)" fg:x="175636" fg:w="1276"/><text x="99.2847%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,276 samples, 0.72%)</title><rect x="99.0347%" y="549" width="0.7195%" height="15" fill="rgb(209,83,10)" fg:x="175636" fg:w="1276"/><text x="99.2847%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (13,016 samples, 7.34%)</title><rect x="92.5378%" y="613" width="7.3392%" height="15" fill="rgb(209,164,1)" fg:x="164114" fg:w="13016"/><text x="92.7878%" y="623.50">hashbrown:..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10,538 samples, 5.94%)</title><rect x="93.9351%" y="597" width="5.9420%" height="15" fill="rgb(213,184,43)" fg:x="166592" fg:w="10538"/><text x="94.1851%" y="607.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (10,538 samples, 5.94%)</title><rect x="93.9351%" y="581" width="5.9420%" height="15" fill="rgb(231,61,34)" fg:x="166592" fg:w="10538"/><text x="94.1851%" y="591.50">hashbrow..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (218 samples, 0.12%)</title><rect x="99.7542%" y="565" width="0.1229%" height="15" fill="rgb(235,75,3)" fg:x="176912" fg:w="218"/><text x="100.0042%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (218 samples, 0.12%)</title><rect x="99.7542%" y="549" width="0.1229%" height="15" fill="rgb(220,106,47)" fg:x="176912" fg:w="218"/><text x="100.0042%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (218 samples, 0.12%)</title><rect x="99.7542%" y="533" width="0.1229%" height="15" fill="rgb(210,196,33)" fg:x="176912" fg:w="218"/><text x="100.0042%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (13,040 samples, 7.35%)</title><rect x="92.5277%" y="629" width="7.3528%" height="15" fill="rgb(229,154,42)" fg:x="164096" fg:w="13040"/><text x="92.7777%" y="639.50">std::colle..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (25,406 samples, 14.33%)</title><rect x="85.5572%" y="677" width="14.3255%" height="15" fill="rgb(228,114,26)" fg:x="151734" fg:w="25406"/><text x="85.8072%" y="687.50">hprof_slurp::result_re..</text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (25,406 samples, 14.33%)</title><rect x="85.5572%" y="661" width="14.3255%" height="15" fill="rgb(208,144,1)" fg:x="151734" fg:w="25406"/><text x="85.8072%" y="671.50">&lt;core::slice::iter::It..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (25,062 samples, 14.13%)</title><rect x="85.7512%" y="645" width="14.1315%" height="15" fill="rgb(239,112,37)" fg:x="152078" fg:w="25062"/><text x="86.0012%" y="655.50">hprof_slurp::result_r..</text></g><g><title>__clone3 (35,427 samples, 19.98%)</title><rect x="79.9118%" y="901" width="19.9760%" height="15" fill="rgb(210,96,50)" fg:x="141722" fg:w="35427"/><text x="80.1618%" y="911.50">__clone3</text></g><g><title>start_thread (35,427 samples, 19.98%)</title><rect x="79.9118%" y="885" width="19.9760%" height="15" fill="rgb(222,178,2)" fg:x="141722" fg:w="35427"/><text x="80.1618%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (35,401 samples, 19.96%)</title><rect x="79.9265%" y="869" width="19.9613%" height="15" fill="rgb(226,74,18)" fg:x="141748" fg:w="35401"/><text x="80.1765%" y="879.50">std::sys::unix::thread::Thread:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (35,401 samples, 19.96%)</title><rect x="79.9265%" y="853" width="19.9613%" height="15" fill="rgb(225,67,54)" fg:x="141748" fg:w="35401"/><text x="80.1765%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (35,401 samples, 19.96%)</title><rect x="79.9265%" y="837" width="19.9613%" height="15" fill="rgb(251,92,32)" fg:x="141748" fg:w="35401"/><text x="80.1765%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (35,401 samples, 19.96%)</title><rect x="79.9265%" y="821" width="19.9613%" height="15" fill="rgb(228,149,22)" fg:x="141748" fg:w="35401"/><text x="80.1765%" y="831.50">core::ops::function::FnOnce::ca..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (35,401 samples, 19.96%)</title><rect x="79.9265%" y="805" width="19.9613%" height="15" fill="rgb(243,54,13)" fg:x="141748" fg:w="35401"/><text x="80.1765%" y="815.50">std::thread::Builder::spawn_unc..</text></g><g><title>std::panic::catch_unwind (35,401 samples, 19.96%)</title><rect x="79.9265%" y="789" width="19.9613%" height="15" fill="rgb(243,180,28)" fg:x="141748" fg:w="35401"/><text x="80.1765%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (35,401 samples, 19.96%)</title><rect x="79.9265%" y="773" width="19.9613%" height="15" fill="rgb(208,167,24)" fg:x="141748" fg:w="35401"/><text x="80.1765%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (35,401 samples, 19.96%)</title><rect x="79.9265%" y="757" width="19.9613%" height="15" fill="rgb(245,73,45)" fg:x="141748" fg:w="35401"/><text x="80.1765%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (35,401 samples, 19.96%)</title><rect x="79.9265%" y="741" width="19.9613%" height="15" fill="rgb(237,203,48)" fg:x="141748" fg:w="35401"/><text x="80.1765%" y="751.50">&lt;core::panic::unwind_safe::Asse..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (35,401 samples, 19.96%)</title><rect x="79.9265%" y="725" width="19.9613%" height="15" fill="rgb(211,197,16)" fg:x="141748" fg:w="35401"/><text x="80.1765%" y="735.50">std::thread::Builder::spawn_unc..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (35,401 samples, 19.96%)</title><rect x="79.9265%" y="709" width="19.9613%" height="15" fill="rgb(243,99,51)" fg:x="141748" fg:w="35401"/><text x="80.1765%" y="719.50">std::sys_common::backtrace::__r..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (35,401 samples, 19.96%)</title><rect x="79.9265%" y="693" width="19.9613%" height="15" fill="rgb(215,123,29)" fg:x="141748" fg:w="35401"/><text x="80.1765%" y="703.50">hprof_slurp::result_recorder::R..</text></g><g><title>hprof-recorder (37,523 samples, 21.16%)</title><rect x="78.7345%" y="917" width="21.1578%" height="15" fill="rgb(239,186,37)" fg:x="139634" fg:w="37523"/><text x="78.9845%" y="927.50">hprof-recorder</text></g><g><title>__perf_event_task_sched_in (40 samples, 0.02%)</title><rect x="99.9149%" y="261" width="0.0226%" height="15" fill="rgb(252,136,39)" fg:x="177197" fg:w="40"/><text x="100.1649%" y="271.50"></text></g><g><title>x86_pmu_enable (40 samples, 0.02%)</title><rect x="99.9149%" y="245" width="0.0226%" height="15" fill="rgb(223,213,32)" fg:x="177197" fg:w="40"/><text x="100.1649%" y="255.50"></text></g><g><title>intel_pmu_enable_all (40 samples, 0.02%)</title><rect x="99.9149%" y="229" width="0.0226%" height="15" fill="rgb(233,115,5)" fg:x="177197" fg:w="40"/><text x="100.1649%" y="239.50"></text></g><g><title>native_write_msr (40 samples, 0.02%)</title><rect x="99.9149%" y="213" width="0.0226%" height="15" fill="rgb(207,226,44)" fg:x="177197" fg:w="40"/><text x="100.1649%" y="223.50"></text></g><g><title>finish_task_switch.isra.0 (44 samples, 0.02%)</title><rect x="99.9137%" y="277" width="0.0248%" height="15" fill="rgb(208,126,0)" fg:x="177195" fg:w="44"/><text x="100.1637%" y="287.50"></text></g><g><title>__x64_sys_futex (46 samples, 0.03%)</title><rect x="99.9132%" y="373" width="0.0259%" height="15" fill="rgb(244,66,21)" fg:x="177194" fg:w="46"/><text x="100.1632%" y="383.50"></text></g><g><title>do_futex (46 samples, 0.03%)</title><rect x="99.9132%" y="357" width="0.0259%" height="15" fill="rgb(222,97,12)" fg:x="177194" fg:w="46"/><text x="100.1632%" y="367.50"></text></g><g><title>futex_wait (46 samples, 0.03%)</title><rect x="99.9132%" y="341" width="0.0259%" height="15" fill="rgb(219,213,19)" fg:x="177194" fg:w="46"/><text x="100.1632%" y="351.50"></text></g><g><title>futex_wait_queue_me (46 samples, 0.03%)</title><rect x="99.9132%" y="325" width="0.0259%" height="15" fill="rgb(252,169,30)" fg:x="177194" fg:w="46"/><text x="100.1632%" y="335.50"></text></g><g><title>schedule (46 samples, 0.03%)</title><rect x="99.9132%" y="309" width="0.0259%" height="15" fill="rgb(206,32,51)" fg:x="177194" fg:w="46"/><text x="100.1632%" y="319.50"></text></g><g><title>__schedule (46 samples, 0.03%)</title><rect x="99.9132%" y="293" width="0.0259%" height="15" fill="rgb(250,172,42)" fg:x="177194" fg:w="46"/><text x="100.1632%" y="303.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (50 samples, 0.03%)</title><rect x="99.9115%" y="453" width="0.0282%" height="15" fill="rgb(209,34,43)" fg:x="177191" fg:w="50"/><text x="100.1615%" y="463.50"></text></g><g><title>std::sys::unix::futex::futex_wait (50 samples, 0.03%)</title><rect x="99.9115%" y="437" width="0.0282%" height="15" fill="rgb(223,11,35)" fg:x="177191" fg:w="50"/><text x="100.1615%" y="447.50"></text></g><g><title>syscall (47 samples, 0.03%)</title><rect x="99.9132%" y="421" width="0.0265%" height="15" fill="rgb(251,219,26)" fg:x="177194" fg:w="47"/><text x="100.1632%" y="431.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (47 samples, 0.03%)</title><rect x="99.9132%" y="405" width="0.0265%" height="15" fill="rgb(231,119,3)" fg:x="177194" fg:w="47"/><text x="100.1632%" y="415.50"></text></g><g><title>do_syscall_64 (47 samples, 0.03%)</title><rect x="99.9132%" y="389" width="0.0265%" height="15" fill="rgb(216,97,11)" fg:x="177194" fg:w="47"/><text x="100.1632%" y="399.50"></text></g><g><title>crossbeam_channel::context::Context::with (60 samples, 0.03%)</title><rect x="99.9064%" y="565" width="0.0338%" height="15" fill="rgb(223,59,9)" fg:x="177182" fg:w="60"/><text x="100.1564%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (60 samples, 0.03%)</title><rect x="99.9064%" y="549" width="0.0338%" height="15" fill="rgb(233,93,31)" fg:x="177182" fg:w="60"/><text x="100.1564%" y="559.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (60 samples, 0.03%)</title><rect x="99.9064%" y="533" width="0.0338%" height="15" fill="rgb(239,81,33)" fg:x="177182" fg:w="60"/><text x="100.1564%" y="543.50"></text></g><g><title>crossbeam_channel::context::Context::with::{{closure}} (60 samples, 0.03%)</title><rect x="99.9064%" y="517" width="0.0338%" height="15" fill="rgb(213,120,34)" fg:x="177182" fg:w="60"/><text x="100.1564%" y="527.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}} (60 samples, 0.03%)</title><rect x="99.9064%" y="501" width="0.0338%" height="15" fill="rgb(243,49,53)" fg:x="177182" fg:w="60"/><text x="100.1564%" y="511.50"></text></g><g><title>crossbeam_channel::context::Context::wait_until (60 samples, 0.03%)</title><rect x="99.9064%" y="485" width="0.0338%" height="15" fill="rgb(247,216,33)" fg:x="177182" fg:w="60"/><text x="100.1564%" y="495.50"></text></g><g><title>std::thread::park (51 samples, 0.03%)</title><rect x="99.9115%" y="469" width="0.0288%" height="15" fill="rgb(226,26,14)" fg:x="177191" fg:w="51"/><text x="100.1615%" y="479.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (72 samples, 0.04%)</title><rect x="99.9064%" y="597" width="0.0406%" height="15" fill="rgb(215,49,53)" fg:x="177182" fg:w="72"/><text x="100.1564%" y="607.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv (72 samples, 0.04%)</title><rect x="99.9064%" y="581" width="0.0406%" height="15" fill="rgb(245,162,40)" fg:x="177182" fg:w="72"/><text x="100.1564%" y="591.50"></text></g><g><title>indicatif::state::BarState::tick (58 samples, 0.03%)</title><rect x="99.9470%" y="581" width="0.0327%" height="15" fill="rgb(229,68,17)" fg:x="177254" fg:w="58"/><text x="100.1970%" y="591.50"></text></g><g><title>indicatif::state::BarState::update_estimate_and_draw (58 samples, 0.03%)</title><rect x="99.9470%" y="565" width="0.0327%" height="15" fill="rgb(213,182,10)" fg:x="177254" fg:w="58"/><text x="100.1970%" y="575.50"></text></g><g><title>indicatif::state::BarState::draw (58 samples, 0.03%)</title><rect x="99.9470%" y="549" width="0.0327%" height="15" fill="rgb(245,125,30)" fg:x="177254" fg:w="58"/><text x="100.1970%" y="559.50"></text></g><g><title>indicatif::style::ProgressStyle::format_state (22 samples, 0.01%)</title><rect x="99.9673%" y="533" width="0.0124%" height="15" fill="rgb(232,202,2)" fg:x="177290" fg:w="22"/><text x="100.2173%" y="543.50"></text></g><g><title>core::fmt::Write::write_fmt (19 samples, 0.01%)</title><rect x="99.9690%" y="517" width="0.0107%" height="15" fill="rgb(237,140,51)" fg:x="177293" fg:w="19"/><text x="100.2190%" y="527.50"></text></g><g><title>core::fmt::write (19 samples, 0.01%)</title><rect x="99.9690%" y="501" width="0.0107%" height="15" fill="rgb(236,157,25)" fg:x="177293" fg:w="19"/><text x="100.2190%" y="511.50"></text></g><g><title>__libc_start_call_main (132 samples, 0.07%)</title><rect x="99.9058%" y="869" width="0.0744%" height="15" fill="rgb(219,209,0)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="879.50"></text></g><g><title>main (132 samples, 0.07%)</title><rect x="99.9058%" y="853" width="0.0744%" height="15" fill="rgb(240,116,54)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="863.50"></text></g><g><title>std::rt::lang_start_internal (132 samples, 0.07%)</title><rect x="99.9058%" y="837" width="0.0744%" height="15" fill="rgb(216,10,36)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="847.50"></text></g><g><title>std::panic::catch_unwind (132 samples, 0.07%)</title><rect x="99.9058%" y="821" width="0.0744%" height="15" fill="rgb(222,72,44)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="831.50"></text></g><g><title>std::panicking::try (132 samples, 0.07%)</title><rect x="99.9058%" y="805" width="0.0744%" height="15" fill="rgb(232,159,9)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="815.50"></text></g><g><title>std::panicking::try::do_call (132 samples, 0.07%)</title><rect x="99.9058%" y="789" width="0.0744%" height="15" fill="rgb(210,39,32)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="799.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (132 samples, 0.07%)</title><rect x="99.9058%" y="773" width="0.0744%" height="15" fill="rgb(216,194,45)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="783.50"></text></g><g><title>std::panic::catch_unwind (132 samples, 0.07%)</title><rect x="99.9058%" y="757" width="0.0744%" height="15" fill="rgb(218,18,35)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="767.50"></text></g><g><title>std::panicking::try (132 samples, 0.07%)</title><rect x="99.9058%" y="741" width="0.0744%" height="15" fill="rgb(207,83,51)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="751.50"></text></g><g><title>std::panicking::try::do_call (132 samples, 0.07%)</title><rect x="99.9058%" y="725" width="0.0744%" height="15" fill="rgb(225,63,43)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (132 samples, 0.07%)</title><rect x="99.9058%" y="709" width="0.0744%" height="15" fill="rgb(207,57,36)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="719.50"></text></g><g><title>std::rt::lang_start::{{closure}} (132 samples, 0.07%)</title><rect x="99.9058%" y="693" width="0.0744%" height="15" fill="rgb(216,99,33)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (132 samples, 0.07%)</title><rect x="99.9058%" y="677" width="0.0744%" height="15" fill="rgb(225,42,16)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (132 samples, 0.07%)</title><rect x="99.9058%" y="661" width="0.0744%" height="15" fill="rgb(220,201,45)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="671.50"></text></g><g><title>hprof_slurp::main (132 samples, 0.07%)</title><rect x="99.9058%" y="645" width="0.0744%" height="15" fill="rgb(225,33,4)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="655.50"></text></g><g><title>hprof_slurp::main_result (132 samples, 0.07%)</title><rect x="99.9058%" y="629" width="0.0744%" height="15" fill="rgb(224,33,50)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="639.50"></text></g><g><title>hprof_slurp::slurp::slurp_file (132 samples, 0.07%)</title><rect x="99.9058%" y="613" width="0.0744%" height="15" fill="rgb(246,198,51)" fg:x="177181" fg:w="132"/><text x="100.1558%" y="623.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::set_position (59 samples, 0.03%)</title><rect x="99.9470%" y="597" width="0.0333%" height="15" fill="rgb(205,22,4)" fg:x="177254" fg:w="59"/><text x="100.1970%" y="607.50"></text></g><g><title>_start (133 samples, 0.07%)</title><rect x="99.9058%" y="901" width="0.0750%" height="15" fill="rgb(206,3,8)" fg:x="177181" fg:w="133"/><text x="100.1558%" y="911.50"></text></g><g><title>__libc_start_main_impl (133 samples, 0.07%)</title><rect x="99.9058%" y="885" width="0.0750%" height="15" fill="rgb(251,23,15)" fg:x="177181" fg:w="133"/><text x="100.1558%" y="895.50"></text></g><g><title>schedule_tail (18 samples, 0.01%)</title><rect x="99.9865%" y="885" width="0.0101%" height="15" fill="rgb(252,88,28)" fg:x="177324" fg:w="18"/><text x="100.2365%" y="895.50"></text></g><g><title>finish_task_switch.isra.0 (18 samples, 0.01%)</title><rect x="99.9865%" y="869" width="0.0101%" height="15" fill="rgb(212,127,14)" fg:x="177324" fg:w="18"/><text x="100.2365%" y="879.50"></text></g><g><title>__perf_event_task_sched_in (18 samples, 0.01%)</title><rect x="99.9865%" y="853" width="0.0101%" height="15" fill="rgb(247,145,37)" fg:x="177324" fg:w="18"/><text x="100.2365%" y="863.50"></text></g><g><title>x86_pmu_enable (18 samples, 0.01%)</title><rect x="99.9865%" y="837" width="0.0101%" height="15" fill="rgb(209,117,53)" fg:x="177324" fg:w="18"/><text x="100.2365%" y="847.50"></text></g><g><title>intel_pmu_enable_all (18 samples, 0.01%)</title><rect x="99.9865%" y="821" width="0.0101%" height="15" fill="rgb(212,90,42)" fg:x="177324" fg:w="18"/><text x="100.2365%" y="831.50"></text></g><g><title>native_write_msr (18 samples, 0.01%)</title><rect x="99.9865%" y="805" width="0.0101%" height="15" fill="rgb(218,164,37)" fg:x="177324" fg:w="18"/><text x="100.2365%" y="815.50"></text></g><g><title>hprof-slurp (186 samples, 0.10%)</title><rect x="99.8923%" y="917" width="0.1049%" height="15" fill="rgb(246,65,34)" fg:x="177157" fg:w="186"/><text x="100.1423%" y="927.50"></text></g><g><title>ret_from_fork (19 samples, 0.01%)</title><rect x="99.9865%" y="901" width="0.0107%" height="15" fill="rgb(231,100,33)" fg:x="177324" fg:w="19"/><text x="100.2365%" y="911.50"></text></g><g><title>all (177,348 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(228,126,14)" fg:x="0" fg:w="177348"/><text x="0.2500%" y="943.50"></text></g></svg></svg>