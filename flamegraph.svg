<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="997.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="165944"><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (589 samples, 0.35%)</title><rect x="0.0000%" y="917" width="0.3549%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="589"/><text x="0.2500%" y="927.50"></text></g><g><title>[[heap]] (624 samples, 0.38%)</title><rect x="0.0000%" y="933" width="0.3760%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="624"/><text x="0.2500%" y="943.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (31 samples, 0.02%)</title><rect x="0.3573%" y="917" width="0.0187%" height="15" fill="rgb(221,193,54)" fg:x="593" fg:w="31"/><text x="0.6073%" y="927.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (639 samples, 0.39%)</title><rect x="0.3784%" y="917" width="0.3851%" height="15" fill="rgb(248,212,6)" fg:x="628" fg:w="639"/><text x="0.6284%" y="927.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (17 samples, 0.01%)</title><rect x="0.7635%" y="901" width="0.0102%" height="15" fill="rgb(208,68,35)" fg:x="1267" fg:w="17"/><text x="1.0135%" y="911.50"></text></g><g><title>[hprof-slurp] (20 samples, 0.01%)</title><rect x="0.7635%" y="917" width="0.0121%" height="15" fill="rgb(232,128,0)" fg:x="1267" fg:w="20"/><text x="1.0135%" y="927.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (595 samples, 0.36%)</title><rect x="0.7834%" y="917" width="0.3586%" height="15" fill="rgb(207,160,47)" fg:x="1300" fg:w="595"/><text x="1.0334%" y="927.50"></text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (595 samples, 0.36%)</title><rect x="0.7834%" y="901" width="0.3586%" height="15" fill="rgb(228,23,34)" fg:x="1300" fg:w="595"/><text x="1.0334%" y="911.50"></text></g><g><title>[anon] (1,272 samples, 0.77%)</title><rect x="0.3760%" y="933" width="0.7665%" height="15" fill="rgb(218,30,26)" fg:x="624" fg:w="1272"/><text x="0.6260%" y="943.50"></text></g><g><title>[hprof-slurp] (29 samples, 0.02%)</title><rect x="1.1426%" y="933" width="0.0175%" height="15" fill="rgb(220,122,19)" fg:x="1896" fg:w="29"/><text x="1.3926%" y="943.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (2,554 samples, 1.54%)</title><rect x="1.1600%" y="917" width="1.5391%" height="15" fill="rgb(250,228,42)" fg:x="1925" fg:w="2554"/><text x="1.4100%" y="927.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,223 samples, 0.74%)</title><rect x="2.6991%" y="917" width="0.7370%" height="15" fill="rgb(240,193,28)" fg:x="4479" fg:w="1223"/><text x="2.9491%" y="927.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (1,227 samples, 0.74%)</title><rect x="3.4385%" y="917" width="0.7394%" height="15" fill="rgb(216,20,37)" fg:x="5706" fg:w="1227"/><text x="3.6885%" y="927.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (41 samples, 0.02%)</title><rect x="4.1815%" y="917" width="0.0247%" height="15" fill="rgb(206,188,39)" fg:x="6939" fg:w="41"/><text x="4.4315%" y="927.50"></text></g><g><title>[unknown] (5,056 samples, 3.05%)</title><rect x="1.1600%" y="933" width="3.0468%" height="15" fill="rgb(217,207,13)" fg:x="1925" fg:w="5056"/><text x="1.4100%" y="943.50">[un..</text></g><g><title>__mem_cgroup_charge (17 samples, 0.01%)</title><rect x="8.5836%" y="533" width="0.0102%" height="15" fill="rgb(231,73,38)" fg:x="14244" fg:w="17"/><text x="8.8336%" y="543.50"></text></g><g><title>clear_page_erms (24 samples, 0.01%)</title><rect x="8.6017%" y="485" width="0.0145%" height="15" fill="rgb(225,20,46)" fg:x="14274" fg:w="24"/><text x="8.8517%" y="495.50"></text></g><g><title>alloc_pages_vma (47 samples, 0.03%)</title><rect x="8.5945%" y="533" width="0.0283%" height="15" fill="rgb(210,31,41)" fg:x="14262" fg:w="47"/><text x="8.8445%" y="543.50"></text></g><g><title>__alloc_pages (47 samples, 0.03%)</title><rect x="8.5945%" y="517" width="0.0283%" height="15" fill="rgb(221,200,47)" fg:x="14262" fg:w="47"/><text x="8.8445%" y="527.50"></text></g><g><title>get_page_from_freelist (38 samples, 0.02%)</title><rect x="8.5999%" y="501" width="0.0229%" height="15" fill="rgb(226,26,5)" fg:x="14271" fg:w="38"/><text x="8.8499%" y="511.50"></text></g><g><title>do_anonymous_page (95 samples, 0.06%)</title><rect x="8.5812%" y="549" width="0.0572%" height="15" fill="rgb(249,33,26)" fg:x="14240" fg:w="95"/><text x="8.8312%" y="559.50"></text></g><g><title>handle_pte_fault (105 samples, 0.06%)</title><rect x="8.5764%" y="565" width="0.0633%" height="15" fill="rgb(235,183,28)" fg:x="14232" fg:w="105"/><text x="8.8264%" y="575.50"></text></g><g><title>handle_mm_fault (126 samples, 0.08%)</title><rect x="8.5649%" y="597" width="0.0759%" height="15" fill="rgb(221,5,38)" fg:x="14213" fg:w="126"/><text x="8.8149%" y="607.50"></text></g><g><title>__handle_mm_fault (118 samples, 0.07%)</title><rect x="8.5698%" y="581" width="0.0711%" height="15" fill="rgb(247,18,42)" fg:x="14221" fg:w="118"/><text x="8.8198%" y="591.50"></text></g><g><title>do_user_addr_fault (137 samples, 0.08%)</title><rect x="8.5589%" y="613" width="0.0826%" height="15" fill="rgb(241,131,45)" fg:x="14203" fg:w="137"/><text x="8.8089%" y="623.50"></text></g><g><title>asm_exc_page_fault (144 samples, 0.09%)</title><rect x="8.5577%" y="645" width="0.0868%" height="15" fill="rgb(249,31,29)" fg:x="14201" fg:w="144"/><text x="8.8077%" y="655.50"></text></g><g><title>exc_page_fault (143 samples, 0.09%)</title><rect x="8.5583%" y="629" width="0.0862%" height="15" fill="rgb(225,111,53)" fg:x="14202" fg:w="143"/><text x="8.8083%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (7,383 samples, 4.45%)</title><rect x="4.2068%" y="709" width="4.4491%" height="15" fill="rgb(238,160,17)" fg:x="6981" fg:w="7383"/><text x="4.4568%" y="719.50">alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7,383 samples, 4.45%)</title><rect x="4.2068%" y="693" width="4.4491%" height="15" fill="rgb(214,148,48)" fg:x="6981" fg:w="7383"/><text x="4.4568%" y="703.50">alloc..</text></g><g><title>core::intrinsics::copy_nonoverlapping (7,378 samples, 4.45%)</title><rect x="4.2099%" y="677" width="4.4461%" height="15" fill="rgb(232,36,49)" fg:x="6986" fg:w="7378"/><text x="4.4599%" y="687.50">core:..</text></g><g><title>__memcpy_avx_unaligned_erms (7,378 samples, 4.45%)</title><rect x="4.2099%" y="661" width="4.4461%" height="15" fill="rgb(209,103,24)" fg:x="6986" fg:w="7378"/><text x="4.4599%" y="671.50">__mem..</text></g><g><title>free_pages_and_swap_cache (24 samples, 0.01%)</title><rect x="8.6698%" y="389" width="0.0145%" height="15" fill="rgb(229,88,8)" fg:x="14387" fg:w="24"/><text x="8.9198%" y="399.50"></text></g><g><title>release_pages (23 samples, 0.01%)</title><rect x="8.6704%" y="373" width="0.0139%" height="15" fill="rgb(213,181,19)" fg:x="14388" fg:w="23"/><text x="8.9204%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (38 samples, 0.02%)</title><rect x="8.6620%" y="693" width="0.0229%" height="15" fill="rgb(254,191,54)" fg:x="14374" fg:w="38"/><text x="8.9120%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (38 samples, 0.02%)</title><rect x="8.6620%" y="677" width="0.0229%" height="15" fill="rgb(241,83,37)" fg:x="14374" fg:w="38"/><text x="8.9120%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.02%)</title><rect x="8.6620%" y="661" width="0.0229%" height="15" fill="rgb(233,36,39)" fg:x="14374" fg:w="38"/><text x="8.9120%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.02%)</title><rect x="8.6620%" y="645" width="0.0229%" height="15" fill="rgb(226,3,54)" fg:x="14374" fg:w="38"/><text x="8.9120%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (38 samples, 0.02%)</title><rect x="8.6620%" y="629" width="0.0229%" height="15" fill="rgb(245,192,40)" fg:x="14374" fg:w="38"/><text x="8.9120%" y="639.50"></text></g><g><title>__GI___libc_free (38 samples, 0.02%)</title><rect x="8.6620%" y="613" width="0.0229%" height="15" fill="rgb(238,167,29)" fg:x="14374" fg:w="38"/><text x="8.9120%" y="623.50"></text></g><g><title>__GI___munmap (38 samples, 0.02%)</title><rect x="8.6620%" y="597" width="0.0229%" height="15" fill="rgb(232,182,51)" fg:x="14374" fg:w="38"/><text x="8.9120%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (38 samples, 0.02%)</title><rect x="8.6620%" y="581" width="0.0229%" height="15" fill="rgb(231,60,39)" fg:x="14374" fg:w="38"/><text x="8.9120%" y="591.50"></text></g><g><title>do_syscall_64 (38 samples, 0.02%)</title><rect x="8.6620%" y="565" width="0.0229%" height="15" fill="rgb(208,69,12)" fg:x="14374" fg:w="38"/><text x="8.9120%" y="575.50"></text></g><g><title>__x64_sys_munmap (38 samples, 0.02%)</title><rect x="8.6620%" y="549" width="0.0229%" height="15" fill="rgb(235,93,37)" fg:x="14374" fg:w="38"/><text x="8.9120%" y="559.50"></text></g><g><title>__vm_munmap (38 samples, 0.02%)</title><rect x="8.6620%" y="533" width="0.0229%" height="15" fill="rgb(213,116,39)" fg:x="14374" fg:w="38"/><text x="8.9120%" y="543.50"></text></g><g><title>__do_munmap (38 samples, 0.02%)</title><rect x="8.6620%" y="517" width="0.0229%" height="15" fill="rgb(222,207,29)" fg:x="14374" fg:w="38"/><text x="8.9120%" y="527.50"></text></g><g><title>unmap_region (38 samples, 0.02%)</title><rect x="8.6620%" y="501" width="0.0229%" height="15" fill="rgb(206,96,30)" fg:x="14374" fg:w="38"/><text x="8.9120%" y="511.50"></text></g><g><title>unmap_vmas (36 samples, 0.02%)</title><rect x="8.6632%" y="485" width="0.0217%" height="15" fill="rgb(218,138,4)" fg:x="14376" fg:w="36"/><text x="8.9132%" y="495.50"></text></g><g><title>unmap_single_vma (36 samples, 0.02%)</title><rect x="8.6632%" y="469" width="0.0217%" height="15" fill="rgb(250,191,14)" fg:x="14376" fg:w="36"/><text x="8.9132%" y="479.50"></text></g><g><title>unmap_page_range (36 samples, 0.02%)</title><rect x="8.6632%" y="453" width="0.0217%" height="15" fill="rgb(239,60,40)" fg:x="14376" fg:w="36"/><text x="8.9132%" y="463.50"></text></g><g><title>zap_pmd_range.isra.0 (36 samples, 0.02%)</title><rect x="8.6632%" y="437" width="0.0217%" height="15" fill="rgb(206,27,48)" fg:x="14376" fg:w="36"/><text x="8.9132%" y="447.50"></text></g><g><title>zap_pte_range (36 samples, 0.02%)</title><rect x="8.6632%" y="421" width="0.0217%" height="15" fill="rgb(225,35,8)" fg:x="14376" fg:w="36"/><text x="8.9132%" y="431.50"></text></g><g><title>tlb_flush_mmu (25 samples, 0.02%)</title><rect x="8.6698%" y="405" width="0.0151%" height="15" fill="rgb(250,213,24)" fg:x="14387" fg:w="25"/><text x="8.9198%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}}&gt; (51 samples, 0.03%)</title><rect x="8.6583%" y="709" width="0.0307%" height="15" fill="rgb(247,123,22)" fg:x="14368" fg:w="51"/><text x="8.9083%" y="719.50"></text></g><g><title>tick_sched_handle (17 samples, 0.01%)</title><rect x="39.6616%" y="517" width="0.0102%" height="15" fill="rgb(231,138,38)" fg:x="65816" fg:w="17"/><text x="39.9116%" y="527.50"></text></g><g><title>__hrtimer_run_queues (29 samples, 0.02%)</title><rect x="39.6555%" y="549" width="0.0175%" height="15" fill="rgb(231,145,46)" fg:x="65806" fg:w="29"/><text x="39.9055%" y="559.50"></text></g><g><title>tick_sched_timer (25 samples, 0.02%)</title><rect x="39.6580%" y="533" width="0.0151%" height="15" fill="rgb(251,118,11)" fg:x="65810" fg:w="25"/><text x="39.9080%" y="543.50"></text></g><g><title>__sysvec_apic_timer_interrupt (30 samples, 0.02%)</title><rect x="39.6555%" y="581" width="0.0181%" height="15" fill="rgb(217,147,25)" fg:x="65806" fg:w="30"/><text x="39.9055%" y="591.50"></text></g><g><title>hrtimer_interrupt (30 samples, 0.02%)</title><rect x="39.6555%" y="565" width="0.0181%" height="15" fill="rgb(247,81,37)" fg:x="65806" fg:w="30"/><text x="39.9055%" y="575.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (35 samples, 0.02%)</title><rect x="39.6549%" y="613" width="0.0211%" height="15" fill="rgb(209,12,38)" fg:x="65805" fg:w="35"/><text x="39.9049%" y="623.50"></text></g><g><title>sysvec_apic_timer_interrupt (34 samples, 0.02%)</title><rect x="39.6555%" y="597" width="0.0205%" height="15" fill="rgb(227,1,9)" fg:x="65806" fg:w="34"/><text x="39.9055%" y="607.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}}::{{closure}} (24,882 samples, 14.99%)</title><rect x="24.6836%" y="629" width="14.9942%" height="15" fill="rgb(248,47,43)" fg:x="40961" fg:w="24882"/><text x="24.9336%" y="639.50">hprof_slurp::parser::re..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (36,359 samples, 21.91%)</title><rect x="17.7686%" y="645" width="21.9104%" height="15" fill="rgb(221,10,30)" fg:x="29486" fg:w="36359"/><text x="18.0186%" y="655.50">core::result::Result&lt;T,E&gt;::map</text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u8 (1,058 samples, 0.64%)</title><rect x="39.7182%" y="581" width="0.6376%" height="15" fill="rgb(210,229,1)" fg:x="65910" fg:w="1058"/><text x="39.9682%" y="591.50"></text></g><g><title>nom::number::streaming::be_u8 (1,058 samples, 0.64%)</title><rect x="39.7182%" y="565" width="0.6376%" height="15" fill="rgb(222,148,37)" fg:x="65910" fg:w="1058"/><text x="39.9682%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,053 samples, 0.63%)</title><rect x="39.7212%" y="549" width="0.6346%" height="15" fill="rgb(234,67,33)" fg:x="65915" fg:w="1053"/><text x="39.9712%" y="559.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1,053 samples, 0.63%)</title><rect x="39.7212%" y="533" width="0.6346%" height="15" fill="rgb(247,98,35)" fg:x="65915" fg:w="1053"/><text x="39.9712%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (615 samples, 0.37%)</title><rect x="46.2686%" y="517" width="0.3706%" height="15" fill="rgb(247,138,52)" fg:x="76780" fg:w="615"/><text x="46.5186%" y="527.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (615 samples, 0.37%)</title><rect x="46.2686%" y="501" width="0.3706%" height="15" fill="rgb(213,79,30)" fg:x="76780" fg:w="615"/><text x="46.5186%" y="511.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (615 samples, 0.37%)</title><rect x="46.2686%" y="485" width="0.3706%" height="15" fill="rgb(246,177,23)" fg:x="76780" fg:w="615"/><text x="46.5186%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,827 samples, 1.10%)</title><rect x="45.5401%" y="533" width="1.1010%" height="15" fill="rgb(230,62,27)" fg:x="75571" fg:w="1827"/><text x="45.7901%" y="543.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (1,945 samples, 1.17%)</title><rect x="48.4603%" y="469" width="1.1721%" height="15" fill="rgb(216,154,8)" fg:x="80417" fg:w="1945"/><text x="48.7103%" y="479.50"></text></g><g><title>nom::number::streaming::be_u32 (1,945 samples, 1.17%)</title><rect x="48.4603%" y="453" width="1.1721%" height="15" fill="rgb(244,35,45)" fg:x="80417" fg:w="1945"/><text x="48.7103%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5,027 samples, 3.03%)</title><rect x="48.4603%" y="501" width="3.0293%" height="15" fill="rgb(251,115,12)" fg:x="80417" fg:w="5027"/><text x="48.7103%" y="511.50">&lt;F ..</text></g><g><title>core::ops::function::FnMut::call_mut (5,027 samples, 3.03%)</title><rect x="48.4603%" y="485" width="3.0293%" height="15" fill="rgb(240,54,50)" fg:x="80417" fg:w="5027"/><text x="48.7103%" y="495.50">cor..</text></g><g><title>hprof_slurp::parser::record_parser::parse_id (3,082 samples, 1.86%)</title><rect x="49.6324%" y="469" width="1.8573%" height="15" fill="rgb(233,84,52)" fg:x="82362" fg:w="3082"/><text x="49.8824%" y="479.50">h..</text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (3,082 samples, 1.86%)</title><rect x="49.6324%" y="453" width="1.8573%" height="15" fill="rgb(207,117,47)" fg:x="82362" fg:w="3082"/><text x="49.8824%" y="463.50">h..</text></g><g><title>nom::number::streaming::be_u64 (3,082 samples, 1.86%)</title><rect x="49.6324%" y="437" width="1.8573%" height="15" fill="rgb(249,43,39)" fg:x="82362" fg:w="3082"/><text x="49.8824%" y="447.50">n..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (8,054 samples, 4.85%)</title><rect x="46.6410%" y="517" width="4.8534%" height="15" fill="rgb(209,38,44)" fg:x="77398" fg:w="8054"/><text x="46.8910%" y="527.50">&lt;(FnA,..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9,884 samples, 5.96%)</title><rect x="45.5401%" y="549" width="5.9562%" height="15" fill="rgb(236,212,23)" fg:x="75571" fg:w="9884"/><text x="45.7901%" y="559.50">&lt;F as no..</text></g><g><title>nom::sequence::tuple::{{closure}} (8,057 samples, 4.86%)</title><rect x="46.6410%" y="533" width="4.8553%" height="15" fill="rgb(242,79,21)" fg:x="77398" fg:w="8057"/><text x="46.8910%" y="543.50">nom::s..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (651 samples, 0.39%)</title><rect x="51.4963%" y="549" width="0.3923%" height="15" fill="rgb(211,96,35)" fg:x="85455" fg:w="651"/><text x="51.7463%" y="559.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (19,145 samples, 11.54%)</title><rect x="40.3582%" y="581" width="11.5370%" height="15" fill="rgb(253,215,40)" fg:x="66972" fg:w="19145"/><text x="40.6082%" y="591.50">hprof_slurp::pars..</text></g><g><title>nom::combinator::flat_map::{{closure}} (17,925 samples, 10.80%)</title><rect x="41.0934%" y="565" width="10.8018%" height="15" fill="rgb(211,81,21)" fg:x="68192" fg:w="17925"/><text x="41.3434%" y="575.50">nom::combinator:..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (49 samples, 0.03%)</title><rect x="51.9043%" y="517" width="0.0295%" height="15" fill="rgb(208,190,38)" fg:x="86132" fg:w="49"/><text x="52.1543%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (27 samples, 0.02%)</title><rect x="51.9175%" y="501" width="0.0163%" height="15" fill="rgb(235,213,38)" fg:x="86154" fg:w="27"/><text x="52.1675%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (27 samples, 0.02%)</title><rect x="51.9175%" y="485" width="0.0163%" height="15" fill="rgb(237,122,38)" fg:x="86154" fg:w="27"/><text x="52.1675%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (60 samples, 0.04%)</title><rect x="51.8982%" y="549" width="0.0362%" height="15" fill="rgb(244,218,35)" fg:x="86122" fg:w="60"/><text x="52.1482%" y="559.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (50 samples, 0.03%)</title><rect x="51.9043%" y="533" width="0.0301%" height="15" fill="rgb(240,68,47)" fg:x="86132" fg:w="50"/><text x="52.1543%" y="543.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_object_array_dump (75 samples, 0.05%)</title><rect x="51.8952%" y="581" width="0.0452%" height="15" fill="rgb(210,16,53)" fg:x="86117" fg:w="75"/><text x="52.1452%" y="591.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (70 samples, 0.04%)</title><rect x="51.8982%" y="565" width="0.0422%" height="15" fill="rgb(235,124,12)" fg:x="86122" fg:w="70"/><text x="52.1482%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (92 samples, 0.06%)</title><rect x="51.9681%" y="517" width="0.0554%" height="15" fill="rgb(224,169,11)" fg:x="86238" fg:w="92"/><text x="52.2181%" y="527.50"></text></g><g><title>hprof_slurp::parser::record_parser::skip_array_value::{{closure}} (88 samples, 0.05%)</title><rect x="51.9705%" y="501" width="0.0530%" height="15" fill="rgb(250,166,2)" fg:x="86242" fg:w="88"/><text x="52.2205%" y="511.50"></text></g><g><title>nom::combinator::map::{{closure}} (154 samples, 0.09%)</title><rect x="51.9476%" y="533" width="0.0928%" height="15" fill="rgb(242,216,29)" fg:x="86204" fg:w="154"/><text x="52.1976%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (28 samples, 0.02%)</title><rect x="52.0236%" y="517" width="0.0169%" height="15" fill="rgb(230,116,27)" fg:x="86330" fg:w="28"/><text x="52.2736%" y="527.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (53 samples, 0.03%)</title><rect x="52.0796%" y="469" width="0.0319%" height="15" fill="rgb(228,99,48)" fg:x="86423" fg:w="53"/><text x="52.3296%" y="479.50"></text></g><g><title>nom::number::streaming::be_u32 (53 samples, 0.03%)</title><rect x="52.0796%" y="453" width="0.0319%" height="15" fill="rgb(253,11,6)" fg:x="86423" fg:w="53"/><text x="52.3296%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (328 samples, 0.20%)</title><rect x="51.9476%" y="549" width="0.1977%" height="15" fill="rgb(247,143,39)" fg:x="86204" fg:w="328"/><text x="52.1976%" y="559.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (174 samples, 0.10%)</title><rect x="52.0404%" y="533" width="0.1049%" height="15" fill="rgb(236,97,10)" fg:x="86358" fg:w="174"/><text x="52.2904%" y="543.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (174 samples, 0.10%)</title><rect x="52.0404%" y="517" width="0.1049%" height="15" fill="rgb(233,208,19)" fg:x="86358" fg:w="174"/><text x="52.2904%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (109 samples, 0.07%)</title><rect x="52.0796%" y="501" width="0.0657%" height="15" fill="rgb(216,164,2)" fg:x="86423" fg:w="109"/><text x="52.3296%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (109 samples, 0.07%)</title><rect x="52.0796%" y="485" width="0.0657%" height="15" fill="rgb(220,129,5)" fg:x="86423" fg:w="109"/><text x="52.3296%" y="495.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_field_type (56 samples, 0.03%)</title><rect x="52.1116%" y="469" width="0.0337%" height="15" fill="rgb(242,17,10)" fg:x="86476" fg:w="56"/><text x="52.3616%" y="479.50"></text></g><g><title>nom::combinator::map::{{closure}} (56 samples, 0.03%)</title><rect x="52.1116%" y="453" width="0.0337%" height="15" fill="rgb(242,107,0)" fg:x="86476" fg:w="56"/><text x="52.3616%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (45 samples, 0.03%)</title><rect x="52.1182%" y="437" width="0.0271%" height="15" fill="rgb(251,28,31)" fg:x="86487" fg:w="45"/><text x="52.3682%" y="447.50"></text></g><g><title>hprof_slurp::parser::gc_record::FieldType::from_value (43 samples, 0.03%)</title><rect x="52.1194%" y="421" width="0.0259%" height="15" fill="rgb(233,223,10)" fg:x="86489" fg:w="43"/><text x="52.3694%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (39 samples, 0.02%)</title><rect x="52.1453%" y="549" width="0.0235%" height="15" fill="rgb(215,21,27)" fg:x="86532" fg:w="39"/><text x="52.3953%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (20,718 samples, 12.48%)</title><rect x="39.6983%" y="613" width="12.4849%" height="15" fill="rgb(232,23,21)" fg:x="65877" fg:w="20718"/><text x="39.9483%" y="623.50">&lt;F as nom::internal..</text></g><g><title>core::ops::function::FnMut::call_mut (20,718 samples, 12.48%)</title><rect x="39.6983%" y="597" width="12.4849%" height="15" fill="rgb(244,5,23)" fg:x="65877" fg:w="20718"/><text x="39.9483%" y="607.50">core::ops::function..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (403 samples, 0.24%)</title><rect x="51.9404%" y="581" width="0.2429%" height="15" fill="rgb(226,81,46)" fg:x="86192" fg:w="403"/><text x="52.1904%" y="591.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (391 samples, 0.24%)</title><rect x="51.9476%" y="565" width="0.2356%" height="15" fill="rgb(247,70,30)" fg:x="86204" fg:w="391"/><text x="52.1976%" y="575.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump::{{closure}} (24 samples, 0.01%)</title><rect x="52.1688%" y="549" width="0.0145%" height="15" fill="rgb(212,68,19)" fg:x="86571" fg:w="24"/><text x="52.4188%" y="559.50"></text></g><g><title>nom::combinator::map (24 samples, 0.01%)</title><rect x="52.1688%" y="533" width="0.0145%" height="15" fill="rgb(240,187,13)" fg:x="86571" fg:w="24"/><text x="52.4188%" y="543.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record (21,375 samples, 12.88%)</title><rect x="39.6790%" y="645" width="12.8809%" height="15" fill="rgb(223,113,26)" fg:x="65845" fg:w="21375"/><text x="39.9290%" y="655.50">hprof_slurp::parser..</text></g><g><title>nom::combinator::flat_map::{{closure}} (21,375 samples, 12.88%)</title><rect x="39.6790%" y="629" width="12.8809%" height="15" fill="rgb(206,192,2)" fg:x="65845" fg:w="21375"/><text x="39.9290%" y="639.50">nom::combinator::fl..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record::{{closure}} (625 samples, 0.38%)</title><rect x="52.1833%" y="613" width="0.3766%" height="15" fill="rgb(241,108,4)" fg:x="86595" fg:w="625"/><text x="52.4333%" y="623.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (60,884 samples, 36.69%)</title><rect x="15.8710%" y="677" width="36.6895%" height="15" fill="rgb(247,173,49)" fg:x="26337" fg:w="60884"/><text x="16.1210%" y="687.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (60,265 samples, 36.32%)</title><rect x="16.2440%" y="661" width="36.3165%" height="15" fill="rgb(224,114,35)" fg:x="26956" fg:w="60265"/><text x="16.4940%" y="671.50">hprof_slurp::parser::record_parser::HprofRecordParser::pars..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (328 samples, 0.20%)</title><rect x="52.5985%" y="661" width="0.1977%" height="15" fill="rgb(245,159,27)" fg:x="87284" fg:w="328"/><text x="52.8485%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (328 samples, 0.20%)</title><rect x="52.5985%" y="645" width="0.1977%" height="15" fill="rgb(245,172,44)" fg:x="87284" fg:w="328"/><text x="52.8485%" y="655.50"></text></g><g><title>do_user_addr_fault (24 samples, 0.01%)</title><rect x="53.1836%" y="613" width="0.0145%" height="15" fill="rgb(236,23,11)" fg:x="88255" fg:w="24"/><text x="53.4336%" y="623.50"></text></g><g><title>handle_mm_fault (23 samples, 0.01%)</title><rect x="53.1842%" y="597" width="0.0139%" height="15" fill="rgb(205,117,38)" fg:x="88256" fg:w="23"/><text x="53.4342%" y="607.50"></text></g><g><title>__handle_mm_fault (23 samples, 0.01%)</title><rect x="53.1842%" y="581" width="0.0139%" height="15" fill="rgb(237,72,25)" fg:x="88256" fg:w="23"/><text x="53.4342%" y="591.50"></text></g><g><title>handle_pte_fault (22 samples, 0.01%)</title><rect x="53.1848%" y="565" width="0.0133%" height="15" fill="rgb(244,70,9)" fg:x="88257" fg:w="22"/><text x="53.4348%" y="575.50"></text></g><g><title>do_anonymous_page (20 samples, 0.01%)</title><rect x="53.1860%" y="549" width="0.0121%" height="15" fill="rgb(217,125,39)" fg:x="88259" fg:w="20"/><text x="53.4360%" y="559.50"></text></g><g><title>asm_exc_page_fault (27 samples, 0.02%)</title><rect x="53.1830%" y="645" width="0.0163%" height="15" fill="rgb(235,36,10)" fg:x="88254" fg:w="27"/><text x="53.4330%" y="655.50"></text></g><g><title>exc_page_fault (26 samples, 0.02%)</title><rect x="53.1836%" y="629" width="0.0157%" height="15" fill="rgb(251,123,47)" fg:x="88255" fg:w="26"/><text x="53.4336%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,068 samples, 0.64%)</title><rect x="52.5605%" y="677" width="0.6436%" height="15" fill="rgb(221,13,13)" fg:x="87221" fg:w="1068"/><text x="52.8105%" y="687.50"></text></g><g><title>core::ptr::write (677 samples, 0.41%)</title><rect x="52.7961%" y="661" width="0.4080%" height="15" fill="rgb(238,131,9)" fg:x="87612" fg:w="677"/><text x="53.0461%" y="671.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (25 samples, 0.02%)</title><rect x="53.2047%" y="677" width="0.0151%" height="15" fill="rgb(211,50,8)" fg:x="88290" fg:w="25"/><text x="53.4547%" y="687.50"></text></g><g><title>sysvec_apic_timer_interrupt (24 samples, 0.01%)</title><rect x="53.2053%" y="661" width="0.0145%" height="15" fill="rgb(245,182,24)" fg:x="88291" fg:w="24"/><text x="53.4553%" y="671.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (74,552 samples, 44.93%)</title><rect x="8.6957%" y="709" width="44.9260%" height="15" fill="rgb(242,14,37)" fg:x="14430" fg:w="74552"/><text x="8.9457%" y="719.50">hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming</text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (74,552 samples, 44.93%)</title><rect x="8.6957%" y="693" width="44.9260%" height="15" fill="rgb(246,228,12)" fg:x="14430" fg:w="74552"/><text x="8.9457%" y="703.50">hprof_slurp::parser::record_parser::lazy_many1::{{closure}}</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (667 samples, 0.40%)</title><rect x="53.2198%" y="677" width="0.4019%" height="15" fill="rgb(213,55,15)" fg:x="88315" fg:w="667"/><text x="53.4698%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (667 samples, 0.40%)</title><rect x="53.2198%" y="661" width="0.4019%" height="15" fill="rgb(209,9,3)" fg:x="88315" fg:w="667"/><text x="53.4698%" y="671.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (667 samples, 0.40%)</title><rect x="53.2198%" y="645" width="0.4019%" height="15" fill="rgb(230,59,30)" fg:x="88315" fg:w="667"/><text x="53.4698%" y="655.50"></text></g><g><title>__clone3 (82,012 samples, 49.42%)</title><rect x="4.2068%" y="933" width="49.4215%" height="15" fill="rgb(209,121,21)" fg:x="6981" fg:w="82012"/><text x="4.4568%" y="943.50">__clone3</text></g><g><title>start_thread (82,012 samples, 49.42%)</title><rect x="4.2068%" y="917" width="49.4215%" height="15" fill="rgb(220,109,13)" fg:x="6981" fg:w="82012"/><text x="4.4568%" y="927.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (82,012 samples, 49.42%)</title><rect x="4.2068%" y="901" width="49.4215%" height="15" fill="rgb(232,18,1)" fg:x="6981" fg:w="82012"/><text x="4.4568%" y="911.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (82,012 samples, 49.42%)</title><rect x="4.2068%" y="885" width="49.4215%" height="15" fill="rgb(215,41,42)" fg:x="6981" fg:w="82012"/><text x="4.4568%" y="895.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (82,012 samples, 49.42%)</title><rect x="4.2068%" y="869" width="49.4215%" height="15" fill="rgb(224,123,36)" fg:x="6981" fg:w="82012"/><text x="4.4568%" y="879.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (82,012 samples, 49.42%)</title><rect x="4.2068%" y="853" width="49.4215%" height="15" fill="rgb(240,125,3)" fg:x="6981" fg:w="82012"/><text x="4.4568%" y="863.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (82,012 samples, 49.42%)</title><rect x="4.2068%" y="837" width="49.4215%" height="15" fill="rgb(205,98,50)" fg:x="6981" fg:w="82012"/><text x="4.4568%" y="847.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (82,012 samples, 49.42%)</title><rect x="4.2068%" y="821" width="49.4215%" height="15" fill="rgb(205,185,37)" fg:x="6981" fg:w="82012"/><text x="4.4568%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (82,012 samples, 49.42%)</title><rect x="4.2068%" y="805" width="49.4215%" height="15" fill="rgb(238,207,15)" fg:x="6981" fg:w="82012"/><text x="4.4568%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (82,012 samples, 49.42%)</title><rect x="4.2068%" y="789" width="49.4215%" height="15" fill="rgb(213,199,42)" fg:x="6981" fg:w="82012"/><text x="4.4568%" y="799.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (82,012 samples, 49.42%)</title><rect x="4.2068%" y="773" width="49.4215%" height="15" fill="rgb(235,201,11)" fg:x="6981" fg:w="82012"/><text x="4.4568%" y="783.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (82,012 samples, 49.42%)</title><rect x="4.2068%" y="757" width="49.4215%" height="15" fill="rgb(207,46,11)" fg:x="6981" fg:w="82012"/><text x="4.4568%" y="767.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (82,012 samples, 49.42%)</title><rect x="4.2068%" y="741" width="49.4215%" height="15" fill="rgb(241,35,35)" fg:x="6981" fg:w="82012"/><text x="4.4568%" y="751.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}} (82,012 samples, 49.42%)</title><rect x="4.2068%" y="725" width="49.4215%" height="15" fill="rgb(243,32,47)" fg:x="6981" fg:w="82012"/><text x="4.4568%" y="735.50">hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{clos..</text></g><g><title>asm_exc_page_fault (52 samples, 0.03%)</title><rect x="53.6283%" y="933" width="0.0313%" height="15" fill="rgb(247,202,23)" fg:x="88993" fg:w="52"/><text x="53.8783%" y="943.50"></text></g><g><title>hprof-parser (89,056 samples, 53.67%)</title><rect x="0.0000%" y="949" width="53.6663%" height="15" fill="rgb(219,102,11)" fg:x="0" fg:w="89056"/><text x="0.2500%" y="959.50">hprof-parser</text></g><g><title>copy_page_to_iter (18 samples, 0.01%)</title><rect x="53.6711%" y="485" width="0.0108%" height="15" fill="rgb(243,110,44)" fg:x="89064" fg:w="18"/><text x="53.9211%" y="495.50"></text></g><g><title>__cond_resched (21 samples, 0.01%)</title><rect x="54.0966%" y="469" width="0.0127%" height="15" fill="rgb(222,74,54)" fg:x="89770" fg:w="21"/><text x="54.3466%" y="479.50"></text></g><g><title>__irqentry_text_start (52 samples, 0.03%)</title><rect x="54.1092%" y="469" width="0.0313%" height="15" fill="rgb(216,99,12)" fg:x="89791" fg:w="52"/><text x="54.3592%" y="479.50"></text></g><g><title>__cond_resched (22 samples, 0.01%)</title><rect x="54.3509%" y="453" width="0.0133%" height="15" fill="rgb(226,22,26)" fg:x="90192" fg:w="22"/><text x="54.6009%" y="463.50"></text></g><g><title>copy_page_to_iter (380 samples, 0.23%)</title><rect x="54.1490%" y="469" width="0.2290%" height="15" fill="rgb(217,163,10)" fg:x="89857" fg:w="380"/><text x="54.3990%" y="479.50"></text></g><g><title>bio_endio (24 samples, 0.01%)</title><rect x="61.2731%" y="261" width="0.0145%" height="15" fill="rgb(213,25,53)" fg:x="101679" fg:w="24"/><text x="61.5231%" y="271.50"></text></g><g><title>mpage_end_io (21 samples, 0.01%)</title><rect x="61.2749%" y="245" width="0.0127%" height="15" fill="rgb(252,105,26)" fg:x="101682" fg:w="21"/><text x="61.5249%" y="255.50"></text></g><g><title>blk_update_request (32 samples, 0.02%)</title><rect x="61.2695%" y="277" width="0.0193%" height="15" fill="rgb(220,39,43)" fg:x="101673" fg:w="32"/><text x="61.5195%" y="287.50"></text></g><g><title>blk_mq_end_request (47 samples, 0.03%)</title><rect x="61.2634%" y="293" width="0.0283%" height="15" fill="rgb(229,68,48)" fg:x="101663" fg:w="47"/><text x="61.5134%" y="303.50"></text></g><g><title>nvme_complete_rq (49 samples, 0.03%)</title><rect x="61.2628%" y="309" width="0.0295%" height="15" fill="rgb(252,8,32)" fg:x="101662" fg:w="49"/><text x="61.5128%" y="319.50"></text></g><g><title>dma_unmap_page_attrs (29 samples, 0.02%)</title><rect x="61.2930%" y="293" width="0.0175%" height="15" fill="rgb(223,20,43)" fg:x="101712" fg:w="29"/><text x="61.5430%" y="303.50"></text></g><g><title>iommu_dma_unmap_page (29 samples, 0.02%)</title><rect x="61.2930%" y="277" width="0.0175%" height="15" fill="rgb(229,81,49)" fg:x="101712" fg:w="29"/><text x="61.5430%" y="287.50"></text></g><g><title>__iommu_dma_unmap_swiotlb (29 samples, 0.02%)</title><rect x="61.2930%" y="261" width="0.0175%" height="15" fill="rgb(236,28,36)" fg:x="101712" fg:w="29"/><text x="61.5430%" y="271.50"></text></g><g><title>domain_unmap (25 samples, 0.02%)</title><rect x="61.3153%" y="181" width="0.0151%" height="15" fill="rgb(249,185,26)" fg:x="101749" fg:w="25"/><text x="61.5653%" y="191.50"></text></g><g><title>dma_pte_clear_level (25 samples, 0.02%)</title><rect x="61.3153%" y="165" width="0.0151%" height="15" fill="rgb(249,174,33)" fg:x="101749" fg:w="25"/><text x="61.5653%" y="175.50"></text></g><g><title>dma_pte_clear_level (25 samples, 0.02%)</title><rect x="61.3153%" y="149" width="0.0151%" height="15" fill="rgb(233,201,37)" fg:x="101749" fg:w="25"/><text x="61.5653%" y="159.50"></text></g><g><title>dma_pte_clear_level (25 samples, 0.02%)</title><rect x="61.3153%" y="133" width="0.0151%" height="15" fill="rgb(221,78,26)" fg:x="101749" fg:w="25"/><text x="61.5653%" y="143.50"></text></g><g><title>dma_pte_clear_level (25 samples, 0.02%)</title><rect x="61.3153%" y="117" width="0.0151%" height="15" fill="rgb(250,127,30)" fg:x="101749" fg:w="25"/><text x="61.5653%" y="127.50"></text></g><g><title>iommu_unmap_fast (31 samples, 0.02%)</title><rect x="61.3141%" y="245" width="0.0187%" height="15" fill="rgb(230,49,44)" fg:x="101747" fg:w="31"/><text x="61.5641%" y="255.50"></text></g><g><title>__iommu_unmap (31 samples, 0.02%)</title><rect x="61.3141%" y="229" width="0.0187%" height="15" fill="rgb(229,67,23)" fg:x="101747" fg:w="31"/><text x="61.5641%" y="239.50"></text></g><g><title>intel_iommu_unmap_pages (30 samples, 0.02%)</title><rect x="61.3147%" y="213" width="0.0181%" height="15" fill="rgb(249,83,47)" fg:x="101748" fg:w="30"/><text x="61.5647%" y="223.50"></text></g><g><title>intel_iommu_unmap (30 samples, 0.02%)</title><rect x="61.3147%" y="197" width="0.0181%" height="15" fill="rgb(215,43,3)" fg:x="101748" fg:w="30"/><text x="61.5647%" y="207.50"></text></g><g><title>__iommu_dma_unmap (37 samples, 0.02%)</title><rect x="61.3110%" y="261" width="0.0223%" height="15" fill="rgb(238,154,13)" fg:x="101742" fg:w="37"/><text x="61.5610%" y="271.50"></text></g><g><title>dma_unmap_sg_attrs (40 samples, 0.02%)</title><rect x="61.3104%" y="293" width="0.0241%" height="15" fill="rgb(219,56,2)" fg:x="101741" fg:w="40"/><text x="61.5604%" y="303.50"></text></g><g><title>iommu_dma_unmap_sg (40 samples, 0.02%)</title><rect x="61.3104%" y="277" width="0.0241%" height="15" fill="rgb(233,0,4)" fg:x="101741" fg:w="40"/><text x="61.5604%" y="287.50"></text></g><g><title>__handle_irq_event_percpu (140 samples, 0.08%)</title><rect x="61.2514%" y="373" width="0.0844%" height="15" fill="rgb(235,30,7)" fg:x="101643" fg:w="140"/><text x="61.5014%" y="383.50"></text></g><g><title>nvme_irq (137 samples, 0.08%)</title><rect x="61.2532%" y="357" width="0.0826%" height="15" fill="rgb(250,79,13)" fg:x="101646" fg:w="137"/><text x="61.5032%" y="367.50"></text></g><g><title>nvme_process_cq (137 samples, 0.08%)</title><rect x="61.2532%" y="341" width="0.0826%" height="15" fill="rgb(211,146,34)" fg:x="101646" fg:w="137"/><text x="61.5032%" y="351.50"></text></g><g><title>nvme_pci_complete_rq (122 samples, 0.07%)</title><rect x="61.2622%" y="325" width="0.0735%" height="15" fill="rgb(228,22,38)" fg:x="101661" fg:w="122"/><text x="61.5122%" y="335.50"></text></g><g><title>nvme_unmap_data (71 samples, 0.04%)</title><rect x="61.2930%" y="309" width="0.0428%" height="15" fill="rgb(235,168,5)" fg:x="101712" fg:w="71"/><text x="61.5430%" y="319.50"></text></g><g><title>handle_irq_event (146 samples, 0.09%)</title><rect x="61.2490%" y="389" width="0.0880%" height="15" fill="rgb(221,155,16)" fg:x="101639" fg:w="146"/><text x="61.4990%" y="399.50"></text></g><g><title>handle_edge_irq (153 samples, 0.09%)</title><rect x="61.2478%" y="405" width="0.0922%" height="15" fill="rgb(215,215,53)" fg:x="101637" fg:w="153"/><text x="61.4978%" y="415.50"></text></g><g><title>__common_interrupt (158 samples, 0.10%)</title><rect x="61.2454%" y="421" width="0.0952%" height="15" fill="rgb(223,4,10)" fg:x="101633" fg:w="158"/><text x="61.4954%" y="431.50"></text></g><g><title>asm_common_interrupt (161 samples, 0.10%)</title><rect x="61.2448%" y="453" width="0.0970%" height="15" fill="rgb(234,103,6)" fg:x="101632" fg:w="161"/><text x="61.4948%" y="463.50"></text></g><g><title>common_interrupt (161 samples, 0.10%)</title><rect x="61.2448%" y="437" width="0.0970%" height="15" fill="rgb(227,97,0)" fg:x="101632" fg:w="161"/><text x="61.4948%" y="447.50"></text></g><g><title>__hrtimer_run_queues (19 samples, 0.01%)</title><rect x="61.3424%" y="389" width="0.0114%" height="15" fill="rgb(234,150,53)" fg:x="101794" fg:w="19"/><text x="61.5924%" y="399.50"></text></g><g><title>__sysvec_apic_timer_interrupt (22 samples, 0.01%)</title><rect x="61.3418%" y="421" width="0.0133%" height="15" fill="rgb(228,201,54)" fg:x="101793" fg:w="22"/><text x="61.5918%" y="431.50"></text></g><g><title>hrtimer_interrupt (21 samples, 0.01%)</title><rect x="61.3424%" y="405" width="0.0127%" height="15" fill="rgb(222,22,37)" fg:x="101794" fg:w="21"/><text x="61.5924%" y="415.50"></text></g><g><title>copy_user_enhanced_fast_string (11,594 samples, 6.99%)</title><rect x="54.3780%" y="469" width="6.9867%" height="15" fill="rgb(237,53,32)" fg:x="90237" fg:w="11594"/><text x="54.6280%" y="479.50">copy_user..</text></g><g><title>asm_sysvec_apic_timer_interrupt (38 samples, 0.02%)</title><rect x="61.3418%" y="453" width="0.0229%" height="15" fill="rgb(233,25,53)" fg:x="101793" fg:w="38"/><text x="61.5918%" y="463.50"></text></g><g><title>sysvec_apic_timer_interrupt (38 samples, 0.02%)</title><rect x="61.3418%" y="437" width="0.0229%" height="15" fill="rgb(210,40,34)" fg:x="101793" fg:w="38"/><text x="61.5918%" y="447.50"></text></g><g><title>_raw_spin_lock_irq (17 samples, 0.01%)</title><rect x="61.3906%" y="261" width="0.0102%" height="15" fill="rgb(241,220,44)" fg:x="101874" fg:w="17"/><text x="61.6406%" y="271.50"></text></g><g><title>__remove_mapping (27 samples, 0.02%)</title><rect x="61.3852%" y="277" width="0.0163%" height="15" fill="rgb(235,28,35)" fg:x="101865" fg:w="27"/><text x="61.6352%" y="287.50"></text></g><g><title>shrink_page_list (33 samples, 0.02%)</title><rect x="61.3834%" y="293" width="0.0199%" height="15" fill="rgb(210,56,17)" fg:x="101862" fg:w="33"/><text x="61.6334%" y="303.50"></text></g><g><title>shrink_lruvec (43 samples, 0.03%)</title><rect x="61.3803%" y="325" width="0.0259%" height="15" fill="rgb(224,130,29)" fg:x="101857" fg:w="43"/><text x="61.6303%" y="335.50"></text></g><g><title>shrink_inactive_list (42 samples, 0.03%)</title><rect x="61.3809%" y="309" width="0.0253%" height="15" fill="rgb(235,212,8)" fg:x="101858" fg:w="42"/><text x="61.6309%" y="319.50"></text></g><g><title>__page_cache_alloc (48 samples, 0.03%)</title><rect x="61.3797%" y="453" width="0.0289%" height="15" fill="rgb(223,33,50)" fg:x="101856" fg:w="48"/><text x="61.6297%" y="463.50"></text></g><g><title>alloc_pages (48 samples, 0.03%)</title><rect x="61.3797%" y="437" width="0.0289%" height="15" fill="rgb(219,149,13)" fg:x="101856" fg:w="48"/><text x="61.6297%" y="447.50"></text></g><g><title>__alloc_pages (48 samples, 0.03%)</title><rect x="61.3797%" y="421" width="0.0289%" height="15" fill="rgb(250,156,29)" fg:x="101856" fg:w="48"/><text x="61.6297%" y="431.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (48 samples, 0.03%)</title><rect x="61.3797%" y="405" width="0.0289%" height="15" fill="rgb(216,193,19)" fg:x="101856" fg:w="48"/><text x="61.6297%" y="415.50"></text></g><g><title>try_to_free_pages (47 samples, 0.03%)</title><rect x="61.3803%" y="389" width="0.0283%" height="15" fill="rgb(216,135,14)" fg:x="101857" fg:w="47"/><text x="61.6303%" y="399.50"></text></g><g><title>do_try_to_free_pages (47 samples, 0.03%)</title><rect x="61.3803%" y="373" width="0.0283%" height="15" fill="rgb(241,47,5)" fg:x="101857" fg:w="47"/><text x="61.6303%" y="383.50"></text></g><g><title>shrink_node (47 samples, 0.03%)</title><rect x="61.3803%" y="357" width="0.0283%" height="15" fill="rgb(233,42,35)" fg:x="101857" fg:w="47"/><text x="61.6303%" y="367.50"></text></g><g><title>shrink_node_memcgs (47 samples, 0.03%)</title><rect x="61.3803%" y="341" width="0.0283%" height="15" fill="rgb(231,13,6)" fg:x="101857" fg:w="47"/><text x="61.6303%" y="351.50"></text></g><g><title>__xas_next (20 samples, 0.01%)</title><rect x="61.7413%" y="437" width="0.0121%" height="15" fill="rgb(207,181,40)" fg:x="102456" fg:w="20"/><text x="61.9913%" y="447.50"></text></g><g><title>filemap_get_read_batch (634 samples, 0.38%)</title><rect x="61.4093%" y="453" width="0.3821%" height="15" fill="rgb(254,173,49)" fg:x="101905" fg:w="634"/><text x="61.6593%" y="463.50"></text></g><g><title>xas_load (50 samples, 0.03%)</title><rect x="61.7612%" y="437" width="0.0301%" height="15" fill="rgb(221,1,38)" fg:x="102489" fg:w="50"/><text x="62.0112%" y="447.50"></text></g><g><title>filemap_update_page (22 samples, 0.01%)</title><rect x="61.7913%" y="453" width="0.0133%" height="15" fill="rgb(206,124,46)" fg:x="102539" fg:w="22"/><text x="62.0413%" y="463.50"></text></g><g><title>wait_on_page_bit_common (20 samples, 0.01%)</title><rect x="61.7925%" y="437" width="0.0121%" height="15" fill="rgb(249,21,11)" fg:x="102541" fg:w="20"/><text x="62.0425%" y="447.50"></text></g><g><title>io_schedule (20 samples, 0.01%)</title><rect x="61.7925%" y="421" width="0.0121%" height="15" fill="rgb(222,201,40)" fg:x="102541" fg:w="20"/><text x="62.0425%" y="431.50"></text></g><g><title>schedule (20 samples, 0.01%)</title><rect x="61.7925%" y="405" width="0.0121%" height="15" fill="rgb(235,61,29)" fg:x="102541" fg:w="20"/><text x="62.0425%" y="415.50"></text></g><g><title>__schedule (20 samples, 0.01%)</title><rect x="61.7925%" y="389" width="0.0121%" height="15" fill="rgb(219,207,3)" fg:x="102541" fg:w="20"/><text x="62.0425%" y="399.50"></text></g><g><title>_find_first_bit (25 samples, 0.02%)</title><rect x="62.0306%" y="389" width="0.0151%" height="15" fill="rgb(222,56,46)" fg:x="102936" fg:w="25"/><text x="62.2806%" y="399.50"></text></g><g><title>__drain_all_pages (17 samples, 0.01%)</title><rect x="62.2909%" y="341" width="0.0102%" height="15" fill="rgb(239,76,54)" fg:x="103368" fg:w="17"/><text x="62.5409%" y="351.50"></text></g><g><title>clear_page_erms (47 samples, 0.03%)</title><rect x="62.3090%" y="325" width="0.0283%" height="15" fill="rgb(231,124,27)" fg:x="103398" fg:w="47"/><text x="62.5590%" y="335.50"></text></g><g><title>get_page_from_freelist (85 samples, 0.05%)</title><rect x="62.3011%" y="341" width="0.0512%" height="15" fill="rgb(249,195,6)" fg:x="103385" fg:w="85"/><text x="62.5511%" y="351.50"></text></g><g><title>rmqueue (23 samples, 0.01%)</title><rect x="62.3385%" y="325" width="0.0139%" height="15" fill="rgb(237,174,47)" fg:x="103447" fg:w="23"/><text x="62.5885%" y="335.50"></text></g><g><title>__delete_from_page_cache (21 samples, 0.01%)</title><rect x="62.3771%" y="213" width="0.0127%" height="15" fill="rgb(206,201,31)" fg:x="103511" fg:w="21"/><text x="62.6271%" y="223.50"></text></g><g><title>_raw_spin_lock_irq (44 samples, 0.03%)</title><rect x="62.3897%" y="213" width="0.0265%" height="15" fill="rgb(231,57,52)" fg:x="103532" fg:w="44"/><text x="62.6397%" y="223.50"></text></g><g><title>native_queued_spin_lock_slowpath (39 samples, 0.02%)</title><rect x="62.3927%" y="197" width="0.0235%" height="15" fill="rgb(248,177,22)" fg:x="103537" fg:w="39"/><text x="62.6427%" y="207.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (39 samples, 0.02%)</title><rect x="62.3927%" y="181" width="0.0235%" height="15" fill="rgb(215,211,37)" fg:x="103537" fg:w="39"/><text x="62.6427%" y="191.50"></text></g><g><title>__remove_mapping (82 samples, 0.05%)</title><rect x="62.3704%" y="229" width="0.0494%" height="15" fill="rgb(241,128,51)" fg:x="103500" fg:w="82"/><text x="62.6204%" y="239.50"></text></g><g><title>shrink_page_list (109 samples, 0.07%)</title><rect x="62.3620%" y="245" width="0.0657%" height="15" fill="rgb(227,165,31)" fg:x="103486" fg:w="109"/><text x="62.6120%" y="255.50"></text></g><g><title>shrink_lruvec (126 samples, 0.08%)</title><rect x="62.3536%" y="277" width="0.0759%" height="15" fill="rgb(228,167,24)" fg:x="103472" fg:w="126"/><text x="62.6036%" y="287.50"></text></g><g><title>shrink_inactive_list (125 samples, 0.08%)</title><rect x="62.3542%" y="261" width="0.0753%" height="15" fill="rgb(228,143,12)" fg:x="103473" fg:w="125"/><text x="62.6042%" y="271.50"></text></g><g><title>shrink_node_memcgs (139 samples, 0.08%)</title><rect x="62.3530%" y="293" width="0.0838%" height="15" fill="rgb(249,149,8)" fg:x="103471" fg:w="139"/><text x="62.6030%" y="303.50"></text></g><g><title>try_to_free_pages (141 samples, 0.08%)</title><rect x="62.3524%" y="341" width="0.0850%" height="15" fill="rgb(243,35,44)" fg:x="103470" fg:w="141"/><text x="62.6024%" y="351.50"></text></g><g><title>do_try_to_free_pages (141 samples, 0.08%)</title><rect x="62.3524%" y="325" width="0.0850%" height="15" fill="rgb(246,89,9)" fg:x="103470" fg:w="141"/><text x="62.6024%" y="335.50"></text></g><g><title>shrink_node (141 samples, 0.08%)</title><rect x="62.3524%" y="309" width="0.0850%" height="15" fill="rgb(233,213,13)" fg:x="103470" fg:w="141"/><text x="62.6024%" y="319.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (258 samples, 0.16%)</title><rect x="62.2879%" y="357" width="0.1555%" height="15" fill="rgb(233,141,41)" fg:x="103363" fg:w="258"/><text x="62.5379%" y="367.50"></text></g><g><title>__next_zones_zonelist (73 samples, 0.04%)</title><rect x="62.4530%" y="357" width="0.0440%" height="15" fill="rgb(239,167,4)" fg:x="103637" fg:w="73"/><text x="62.7030%" y="367.50"></text></g><g><title>__read_end_io (47 samples, 0.03%)</title><rect x="64.5188%" y="101" width="0.0283%" height="15" fill="rgb(209,217,16)" fg:x="107065" fg:w="47"/><text x="64.7688%" y="111.50"></text></g><g><title>blk_update_request (85 samples, 0.05%)</title><rect x="64.5151%" y="149" width="0.0512%" height="15" fill="rgb(219,88,35)" fg:x="107059" fg:w="85"/><text x="64.7651%" y="159.50"></text></g><g><title>bio_endio (83 samples, 0.05%)</title><rect x="64.5163%" y="133" width="0.0500%" height="15" fill="rgb(220,193,23)" fg:x="107061" fg:w="83"/><text x="64.7663%" y="143.50"></text></g><g><title>mpage_end_io (79 samples, 0.05%)</title><rect x="64.5188%" y="117" width="0.0476%" height="15" fill="rgb(230,90,52)" fg:x="107065" fg:w="79"/><text x="64.7688%" y="127.50"></text></g><g><title>unlock_page (32 samples, 0.02%)</title><rect x="64.5471%" y="101" width="0.0193%" height="15" fill="rgb(252,106,19)" fg:x="107112" fg:w="32"/><text x="64.7971%" y="111.50"></text></g><g><title>nvme_complete_rq (92 samples, 0.06%)</title><rect x="64.5115%" y="181" width="0.0554%" height="15" fill="rgb(206,74,20)" fg:x="107053" fg:w="92"/><text x="64.7615%" y="191.50"></text></g><g><title>blk_mq_end_request (92 samples, 0.06%)</title><rect x="64.5115%" y="165" width="0.0554%" height="15" fill="rgb(230,138,44)" fg:x="107053" fg:w="92"/><text x="64.7615%" y="175.50"></text></g><g><title>dma_unmap_sg_attrs (19 samples, 0.01%)</title><rect x="64.5670%" y="165" width="0.0114%" height="15" fill="rgb(235,182,43)" fg:x="107145" fg:w="19"/><text x="64.8170%" y="175.50"></text></g><g><title>iommu_dma_unmap_sg (18 samples, 0.01%)</title><rect x="64.5676%" y="149" width="0.0108%" height="15" fill="rgb(242,16,51)" fg:x="107146" fg:w="18"/><text x="64.8176%" y="159.50"></text></g><g><title>__iommu_dma_unmap (18 samples, 0.01%)</title><rect x="64.5676%" y="133" width="0.0108%" height="15" fill="rgb(248,9,4)" fg:x="107146" fg:w="18"/><text x="64.8176%" y="143.50"></text></g><g><title>nvme_irq (118 samples, 0.07%)</title><rect x="64.5085%" y="229" width="0.0711%" height="15" fill="rgb(210,31,22)" fg:x="107048" fg:w="118"/><text x="64.7585%" y="239.50"></text></g><g><title>nvme_process_cq (117 samples, 0.07%)</title><rect x="64.5091%" y="213" width="0.0705%" height="15" fill="rgb(239,54,39)" fg:x="107049" fg:w="117"/><text x="64.7591%" y="223.50"></text></g><g><title>nvme_pci_complete_rq (113 samples, 0.07%)</title><rect x="64.5115%" y="197" width="0.0681%" height="15" fill="rgb(230,99,41)" fg:x="107053" fg:w="113"/><text x="64.7615%" y="207.50"></text></g><g><title>nvme_unmap_data (21 samples, 0.01%)</title><rect x="64.5670%" y="181" width="0.0127%" height="15" fill="rgb(253,106,12)" fg:x="107145" fg:w="21"/><text x="64.8170%" y="191.50"></text></g><g><title>__handle_irq_event_percpu (119 samples, 0.07%)</title><rect x="64.5085%" y="245" width="0.0717%" height="15" fill="rgb(213,46,41)" fg:x="107048" fg:w="119"/><text x="64.7585%" y="255.50"></text></g><g><title>handle_irq_event (123 samples, 0.07%)</title><rect x="64.5085%" y="261" width="0.0741%" height="15" fill="rgb(215,133,35)" fg:x="107048" fg:w="123"/><text x="64.7585%" y="271.50"></text></g><g><title>__common_interrupt (125 samples, 0.08%)</title><rect x="64.5079%" y="293" width="0.0753%" height="15" fill="rgb(213,28,5)" fg:x="107047" fg:w="125"/><text x="64.7579%" y="303.50"></text></g><g><title>handle_edge_irq (124 samples, 0.07%)</title><rect x="64.5085%" y="277" width="0.0747%" height="15" fill="rgb(215,77,49)" fg:x="107048" fg:w="124"/><text x="64.7585%" y="287.50"></text></g><g><title>asm_common_interrupt (127 samples, 0.08%)</title><rect x="64.5079%" y="325" width="0.0765%" height="15" fill="rgb(248,100,22)" fg:x="107047" fg:w="127"/><text x="64.7579%" y="335.50"></text></g><g><title>common_interrupt (127 samples, 0.08%)</title><rect x="64.5079%" y="309" width="0.0765%" height="15" fill="rgb(208,67,9)" fg:x="107047" fg:w="127"/><text x="64.7579%" y="319.50"></text></g><g><title>clear_page_erms (3,119 samples, 1.88%)</title><rect x="62.7091%" y="341" width="1.8795%" height="15" fill="rgb(219,133,21)" fg:x="104062" fg:w="3119"/><text x="62.9591%" y="351.50">c..</text></g><g><title>kernel_init_free_pages.part.0 (76 samples, 0.05%)</title><rect x="64.5887%" y="341" width="0.0458%" height="15" fill="rgb(246,46,29)" fg:x="107181" fg:w="76"/><text x="64.8387%" y="351.50"></text></g><g><title>__read_end_io (24 samples, 0.01%)</title><rect x="64.8442%" y="101" width="0.0145%" height="15" fill="rgb(246,185,52)" fg:x="107605" fg:w="24"/><text x="65.0942%" y="111.50"></text></g><g><title>blk_update_request (40 samples, 0.02%)</title><rect x="64.8418%" y="149" width="0.0241%" height="15" fill="rgb(252,136,11)" fg:x="107601" fg:w="40"/><text x="65.0918%" y="159.50"></text></g><g><title>bio_endio (37 samples, 0.02%)</title><rect x="64.8436%" y="133" width="0.0223%" height="15" fill="rgb(219,138,53)" fg:x="107604" fg:w="37"/><text x="65.0936%" y="143.50"></text></g><g><title>mpage_end_io (36 samples, 0.02%)</title><rect x="64.8442%" y="117" width="0.0217%" height="15" fill="rgb(211,51,23)" fg:x="107605" fg:w="36"/><text x="65.0942%" y="127.50"></text></g><g><title>nvme_complete_rq (44 samples, 0.03%)</title><rect x="64.8399%" y="181" width="0.0265%" height="15" fill="rgb(247,221,28)" fg:x="107598" fg:w="44"/><text x="65.0899%" y="191.50"></text></g><g><title>blk_mq_end_request (43 samples, 0.03%)</title><rect x="64.8405%" y="165" width="0.0259%" height="15" fill="rgb(251,222,45)" fg:x="107599" fg:w="43"/><text x="65.0905%" y="175.50"></text></g><g><title>__common_interrupt (64 samples, 0.04%)</title><rect x="64.8381%" y="293" width="0.0386%" height="15" fill="rgb(217,162,53)" fg:x="107595" fg:w="64"/><text x="65.0881%" y="303.50"></text></g><g><title>handle_edge_irq (63 samples, 0.04%)</title><rect x="64.8387%" y="277" width="0.0380%" height="15" fill="rgb(229,93,14)" fg:x="107596" fg:w="63"/><text x="65.0887%" y="287.50"></text></g><g><title>handle_irq_event (63 samples, 0.04%)</title><rect x="64.8387%" y="261" width="0.0380%" height="15" fill="rgb(209,67,49)" fg:x="107596" fg:w="63"/><text x="65.0887%" y="271.50"></text></g><g><title>__handle_irq_event_percpu (63 samples, 0.04%)</title><rect x="64.8387%" y="245" width="0.0380%" height="15" fill="rgb(213,87,29)" fg:x="107596" fg:w="63"/><text x="65.0887%" y="255.50"></text></g><g><title>nvme_irq (62 samples, 0.04%)</title><rect x="64.8393%" y="229" width="0.0374%" height="15" fill="rgb(205,151,52)" fg:x="107597" fg:w="62"/><text x="65.0893%" y="239.50"></text></g><g><title>nvme_process_cq (62 samples, 0.04%)</title><rect x="64.8393%" y="213" width="0.0374%" height="15" fill="rgb(253,215,39)" fg:x="107597" fg:w="62"/><text x="65.0893%" y="223.50"></text></g><g><title>nvme_pci_complete_rq (61 samples, 0.04%)</title><rect x="64.8399%" y="197" width="0.0368%" height="15" fill="rgb(221,220,41)" fg:x="107598" fg:w="61"/><text x="65.0899%" y="207.50"></text></g><g><title>nvme_unmap_data (17 samples, 0.01%)</title><rect x="64.8665%" y="181" width="0.0102%" height="15" fill="rgb(218,133,21)" fg:x="107642" fg:w="17"/><text x="65.1165%" y="191.50"></text></g><g><title>asm_common_interrupt (65 samples, 0.04%)</title><rect x="64.8381%" y="325" width="0.0392%" height="15" fill="rgb(221,193,43)" fg:x="107595" fg:w="65"/><text x="65.0881%" y="335.50"></text></g><g><title>common_interrupt (65 samples, 0.04%)</title><rect x="64.8381%" y="309" width="0.0392%" height="15" fill="rgb(240,128,52)" fg:x="107595" fg:w="65"/><text x="65.0881%" y="319.50"></text></g><g><title>_raw_spin_lock (28 samples, 0.02%)</title><rect x="65.4618%" y="309" width="0.0169%" height="15" fill="rgb(253,114,12)" fg:x="108630" fg:w="28"/><text x="65.7118%" y="319.50"></text></g><g><title>native_queued_spin_lock_slowpath (28 samples, 0.02%)</title><rect x="65.4618%" y="293" width="0.0169%" height="15" fill="rgb(215,223,47)" fg:x="108630" fg:w="28"/><text x="65.7118%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (28 samples, 0.02%)</title><rect x="65.4618%" y="277" width="0.0169%" height="15" fill="rgb(248,225,23)" fg:x="108630" fg:w="28"/><text x="65.7118%" y="287.50"></text></g><g><title>rmqueue_bulk (998 samples, 0.60%)</title><rect x="64.8779%" y="325" width="0.6014%" height="15" fill="rgb(250,108,0)" fg:x="107661" fg:w="998"/><text x="65.1279%" y="335.50"></text></g><g><title>rmqueue (1,403 samples, 0.85%)</title><rect x="64.6345%" y="341" width="0.8455%" height="15" fill="rgb(228,208,7)" fg:x="107257" fg:w="1403"/><text x="64.8845%" y="351.50"></text></g><g><title>get_page_from_freelist (4,934 samples, 2.97%)</title><rect x="62.5072%" y="357" width="2.9733%" height="15" fill="rgb(244,45,10)" fg:x="103727" fg:w="4934"/><text x="62.7572%" y="367.50">get..</text></g><g><title>kernel_init_free_pages.part.0 (17 samples, 0.01%)</title><rect x="65.4805%" y="357" width="0.0102%" height="15" fill="rgb(207,125,25)" fg:x="108661" fg:w="17"/><text x="65.7305%" y="367.50"></text></g><g><title>rcu_all_qs (29 samples, 0.02%)</title><rect x="65.4908%" y="357" width="0.0175%" height="15" fill="rgb(210,195,18)" fg:x="108678" fg:w="29"/><text x="65.7408%" y="367.50"></text></g><g><title>__alloc_pages (5,637 samples, 3.40%)</title><rect x="62.1143%" y="373" width="3.3969%" height="15" fill="rgb(249,80,12)" fg:x="103075" fg:w="5637"/><text x="62.3643%" y="383.50">__a..</text></g><g><title>policy_nodemask (33 samples, 0.02%)</title><rect x="65.5396%" y="373" width="0.0199%" height="15" fill="rgb(221,65,9)" fg:x="108759" fg:w="33"/><text x="65.7896%" y="383.50"></text></g><g><title>alloc_pages (5,846 samples, 3.52%)</title><rect x="62.0456%" y="389" width="3.5229%" height="15" fill="rgb(235,49,36)" fg:x="102961" fg:w="5846"/><text x="62.2956%" y="399.50">all..</text></g><g><title>__page_cache_alloc (5,914 samples, 3.56%)</title><rect x="62.0077%" y="405" width="3.5639%" height="15" fill="rgb(225,32,20)" fg:x="102898" fg:w="5914"/><text x="62.2577%" y="415.50">__pa..</text></g><g><title>PageHuge (38 samples, 0.02%)</title><rect x="65.6450%" y="389" width="0.0229%" height="15" fill="rgb(215,141,46)" fg:x="108934" fg:w="38"/><text x="65.8950%" y="399.50"></text></g><g><title>PageHuge (23 samples, 0.01%)</title><rect x="66.9449%" y="373" width="0.0139%" height="15" fill="rgb(250,160,47)" fg:x="111091" fg:w="23"/><text x="67.1949%" y="383.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (137 samples, 0.08%)</title><rect x="67.0672%" y="341" width="0.0826%" height="15" fill="rgb(216,222,40)" fg:x="111294" fg:w="137"/><text x="67.3172%" y="351.50"></text></g><g><title>cgroup_rstat_updated (61 samples, 0.04%)</title><rect x="67.1130%" y="325" width="0.0368%" height="15" fill="rgb(234,217,39)" fg:x="111370" fg:w="61"/><text x="67.3630%" y="335.50"></text></g><g><title>page_counter_try_charge (40 samples, 0.02%)</title><rect x="67.2510%" y="325" width="0.0241%" height="15" fill="rgb(207,178,40)" fg:x="111599" fg:w="40"/><text x="67.5010%" y="335.50"></text></g><g><title>charge_memcg (490 samples, 0.30%)</title><rect x="66.9828%" y="357" width="0.2953%" height="15" fill="rgb(221,136,13)" fg:x="111154" fg:w="490"/><text x="67.2328%" y="367.50"></text></g><g><title>try_charge_memcg (191 samples, 0.12%)</title><rect x="67.1630%" y="341" width="0.1151%" height="15" fill="rgb(249,199,10)" fg:x="111453" fg:w="191"/><text x="67.4130%" y="351.50"></text></g><g><title>get_mem_cgroup_from_mm (115 samples, 0.07%)</title><rect x="67.2781%" y="357" width="0.0693%" height="15" fill="rgb(249,222,13)" fg:x="111644" fg:w="115"/><text x="67.5281%" y="367.50"></text></g><g><title>memcg_check_events (24 samples, 0.01%)</title><rect x="67.3498%" y="357" width="0.0145%" height="15" fill="rgb(244,185,38)" fg:x="111763" fg:w="24"/><text x="67.5998%" y="367.50"></text></g><g><title>rcu_read_unlock_strict (26 samples, 0.02%)</title><rect x="67.3643%" y="357" width="0.0157%" height="15" fill="rgb(236,202,9)" fg:x="111787" fg:w="26"/><text x="67.6143%" y="367.50"></text></g><g><title>__mem_cgroup_charge (706 samples, 0.43%)</title><rect x="66.9593%" y="373" width="0.4254%" height="15" fill="rgb(250,229,37)" fg:x="111115" fg:w="706"/><text x="67.2093%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (152 samples, 0.09%)</title><rect x="67.4951%" y="341" width="0.0916%" height="15" fill="rgb(206,174,23)" fg:x="112004" fg:w="152"/><text x="67.7451%" y="351.50"></text></g><g><title>cgroup_rstat_updated (44 samples, 0.03%)</title><rect x="67.5601%" y="325" width="0.0265%" height="15" fill="rgb(211,33,43)" fg:x="112112" fg:w="44"/><text x="67.8101%" y="335.50"></text></g><g><title>__mod_node_page_state (142 samples, 0.09%)</title><rect x="67.5867%" y="341" width="0.0856%" height="15" fill="rgb(245,58,50)" fg:x="112156" fg:w="142"/><text x="67.8367%" y="351.50"></text></g><g><title>__mod_lruvec_state (336 samples, 0.20%)</title><rect x="67.4728%" y="357" width="0.2025%" height="15" fill="rgb(244,68,36)" fg:x="111967" fg:w="336"/><text x="67.7228%" y="367.50"></text></g><g><title>__mod_lruvec_page_state (507 samples, 0.31%)</title><rect x="67.3848%" y="373" width="0.3055%" height="15" fill="rgb(232,229,15)" fg:x="111821" fg:w="507"/><text x="67.6348%" y="383.50"></text></g><g><title>_raw_spin_lock_irq (380 samples, 0.23%)</title><rect x="67.6975%" y="373" width="0.2290%" height="15" fill="rgb(254,30,23)" fg:x="112340" fg:w="380"/><text x="67.9475%" y="383.50"></text></g><g><title>native_queued_spin_lock_slowpath (200 samples, 0.12%)</title><rect x="67.8060%" y="357" width="0.1205%" height="15" fill="rgb(235,160,14)" fg:x="112520" fg:w="200"/><text x="68.0560%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (200 samples, 0.12%)</title><rect x="67.8060%" y="341" width="0.1205%" height="15" fill="rgb(212,155,44)" fg:x="112520" fg:w="200"/><text x="68.0560%" y="351.50"></text></g><g><title>__read_end_io (77 samples, 0.05%)</title><rect x="67.9404%" y="149" width="0.0464%" height="15" fill="rgb(226,2,50)" fg:x="112743" fg:w="77"/><text x="68.1904%" y="159.50"></text></g><g><title>nvme_complete_rq (124 samples, 0.07%)</title><rect x="67.9338%" y="229" width="0.0747%" height="15" fill="rgb(234,177,6)" fg:x="112732" fg:w="124"/><text x="68.1838%" y="239.50"></text></g><g><title>blk_mq_end_request (124 samples, 0.07%)</title><rect x="67.9338%" y="213" width="0.0747%" height="15" fill="rgb(217,24,9)" fg:x="112732" fg:w="124"/><text x="68.1838%" y="223.50"></text></g><g><title>blk_update_request (120 samples, 0.07%)</title><rect x="67.9362%" y="197" width="0.0723%" height="15" fill="rgb(220,13,46)" fg:x="112736" fg:w="120"/><text x="68.1862%" y="207.50"></text></g><g><title>bio_endio (117 samples, 0.07%)</title><rect x="67.9380%" y="181" width="0.0705%" height="15" fill="rgb(239,221,27)" fg:x="112739" fg:w="117"/><text x="68.1880%" y="191.50"></text></g><g><title>mpage_end_io (113 samples, 0.07%)</title><rect x="67.9404%" y="165" width="0.0681%" height="15" fill="rgb(222,198,25)" fg:x="112743" fg:w="113"/><text x="68.1904%" y="175.50"></text></g><g><title>unlock_page (36 samples, 0.02%)</title><rect x="67.9868%" y="149" width="0.0217%" height="15" fill="rgb(211,99,13)" fg:x="112820" fg:w="36"/><text x="68.2368%" y="159.50"></text></g><g><title>domain_unmap (25 samples, 0.02%)</title><rect x="68.0127%" y="101" width="0.0151%" height="15" fill="rgb(232,111,31)" fg:x="112863" fg:w="25"/><text x="68.2627%" y="111.50"></text></g><g><title>dma_pte_clear_level (25 samples, 0.02%)</title><rect x="68.0127%" y="85" width="0.0151%" height="15" fill="rgb(245,82,37)" fg:x="112863" fg:w="25"/><text x="68.2627%" y="95.50"></text></g><g><title>dma_pte_clear_level (25 samples, 0.02%)</title><rect x="68.0127%" y="69" width="0.0151%" height="15" fill="rgb(227,149,46)" fg:x="112863" fg:w="25"/><text x="68.2627%" y="79.50"></text></g><g><title>dma_pte_clear_level (24 samples, 0.01%)</title><rect x="68.0133%" y="53" width="0.0145%" height="15" fill="rgb(218,36,50)" fg:x="112864" fg:w="24"/><text x="68.2633%" y="63.50"></text></g><g><title>dma_pte_clear_level (23 samples, 0.01%)</title><rect x="68.0139%" y="37" width="0.0139%" height="15" fill="rgb(226,80,48)" fg:x="112865" fg:w="23"/><text x="68.2639%" y="47.50"></text></g><g><title>__iommu_dma_unmap (36 samples, 0.02%)</title><rect x="68.0097%" y="181" width="0.0217%" height="15" fill="rgb(238,224,15)" fg:x="112858" fg:w="36"/><text x="68.2597%" y="191.50"></text></g><g><title>iommu_unmap_fast (32 samples, 0.02%)</title><rect x="68.0121%" y="165" width="0.0193%" height="15" fill="rgb(241,136,10)" fg:x="112862" fg:w="32"/><text x="68.2621%" y="175.50"></text></g><g><title>__iommu_unmap (32 samples, 0.02%)</title><rect x="68.0121%" y="149" width="0.0193%" height="15" fill="rgb(208,32,45)" fg:x="112862" fg:w="32"/><text x="68.2621%" y="159.50"></text></g><g><title>intel_iommu_unmap_pages (31 samples, 0.02%)</title><rect x="68.0127%" y="133" width="0.0187%" height="15" fill="rgb(207,135,9)" fg:x="112863" fg:w="31"/><text x="68.2627%" y="143.50"></text></g><g><title>intel_iommu_unmap (31 samples, 0.02%)</title><rect x="68.0127%" y="117" width="0.0187%" height="15" fill="rgb(206,86,44)" fg:x="112863" fg:w="31"/><text x="68.2627%" y="127.50"></text></g><g><title>dma_unmap_sg_attrs (39 samples, 0.02%)</title><rect x="68.0085%" y="213" width="0.0235%" height="15" fill="rgb(245,177,15)" fg:x="112856" fg:w="39"/><text x="68.2585%" y="223.50"></text></g><g><title>iommu_dma_unmap_sg (39 samples, 0.02%)</title><rect x="68.0085%" y="197" width="0.0235%" height="15" fill="rgb(206,64,50)" fg:x="112856" fg:w="39"/><text x="68.2585%" y="207.50"></text></g><g><title>__handle_irq_event_percpu (175 samples, 0.11%)</title><rect x="67.9289%" y="293" width="0.1055%" height="15" fill="rgb(234,36,40)" fg:x="112724" fg:w="175"/><text x="68.1789%" y="303.50"></text></g><g><title>nvme_irq (175 samples, 0.11%)</title><rect x="67.9289%" y="277" width="0.1055%" height="15" fill="rgb(213,64,8)" fg:x="112724" fg:w="175"/><text x="68.1789%" y="287.50"></text></g><g><title>nvme_process_cq (175 samples, 0.11%)</title><rect x="67.9289%" y="261" width="0.1055%" height="15" fill="rgb(210,75,36)" fg:x="112724" fg:w="175"/><text x="68.1789%" y="271.50"></text></g><g><title>nvme_pci_complete_rq (167 samples, 0.10%)</title><rect x="67.9338%" y="245" width="0.1006%" height="15" fill="rgb(229,88,21)" fg:x="112732" fg:w="167"/><text x="68.1838%" y="255.50"></text></g><g><title>nvme_unmap_data (43 samples, 0.03%)</title><rect x="68.0085%" y="229" width="0.0259%" height="15" fill="rgb(252,204,47)" fg:x="112856" fg:w="43"/><text x="68.2585%" y="239.50"></text></g><g><title>asm_common_interrupt (180 samples, 0.11%)</title><rect x="67.9265%" y="373" width="0.1085%" height="15" fill="rgb(208,77,27)" fg:x="112720" fg:w="180"/><text x="68.1765%" y="383.50"></text></g><g><title>common_interrupt (180 samples, 0.11%)</title><rect x="67.9265%" y="357" width="0.1085%" height="15" fill="rgb(221,76,26)" fg:x="112720" fg:w="180"/><text x="68.1765%" y="367.50"></text></g><g><title>__common_interrupt (179 samples, 0.11%)</title><rect x="67.9271%" y="341" width="0.1079%" height="15" fill="rgb(225,139,18)" fg:x="112721" fg:w="179"/><text x="68.1771%" y="351.50"></text></g><g><title>handle_edge_irq (178 samples, 0.11%)</title><rect x="67.9277%" y="325" width="0.1073%" height="15" fill="rgb(230,137,11)" fg:x="112722" fg:w="178"/><text x="68.1777%" y="335.50"></text></g><g><title>handle_irq_event (177 samples, 0.11%)</title><rect x="67.9283%" y="309" width="0.1067%" height="15" fill="rgb(212,28,1)" fg:x="112723" fg:w="177"/><text x="68.1783%" y="319.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (20 samples, 0.01%)</title><rect x="68.0350%" y="373" width="0.0121%" height="15" fill="rgb(248,164,17)" fg:x="112900" fg:w="20"/><text x="68.2850%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (20 samples, 0.01%)</title><rect x="68.0350%" y="357" width="0.0121%" height="15" fill="rgb(222,171,42)" fg:x="112900" fg:w="20"/><text x="68.2850%" y="367.50"></text></g><g><title>get_mem_cgroup_from_mm (20 samples, 0.01%)</title><rect x="68.0501%" y="373" width="0.0121%" height="15" fill="rgb(243,84,45)" fg:x="112925" fg:w="20"/><text x="68.3001%" y="383.50"></text></g><g><title>rcu_read_unlock_strict (35 samples, 0.02%)</title><rect x="68.0633%" y="373" width="0.0211%" height="15" fill="rgb(252,49,23)" fg:x="112947" fg:w="35"/><text x="68.3133%" y="383.50"></text></g><g><title>workingset_update_node (20 samples, 0.01%)</title><rect x="68.0844%" y="373" width="0.0121%" height="15" fill="rgb(215,19,7)" fg:x="112982" fg:w="20"/><text x="68.3344%" y="383.50"></text></g><g><title>nvme_complete_rq (19 samples, 0.01%)</title><rect x="68.8612%" y="197" width="0.0114%" height="15" fill="rgb(238,81,41)" fg:x="114271" fg:w="19"/><text x="69.1112%" y="207.50"></text></g><g><title>blk_mq_end_request (19 samples, 0.01%)</title><rect x="68.8612%" y="181" width="0.0114%" height="15" fill="rgb(210,199,37)" fg:x="114271" fg:w="19"/><text x="69.1112%" y="191.50"></text></g><g><title>blk_update_request (19 samples, 0.01%)</title><rect x="68.8612%" y="165" width="0.0114%" height="15" fill="rgb(244,192,49)" fg:x="114271" fg:w="19"/><text x="69.1112%" y="175.50"></text></g><g><title>bio_endio (19 samples, 0.01%)</title><rect x="68.8612%" y="149" width="0.0114%" height="15" fill="rgb(226,211,11)" fg:x="114271" fg:w="19"/><text x="69.1112%" y="159.50"></text></g><g><title>mpage_end_io (18 samples, 0.01%)</title><rect x="68.8618%" y="133" width="0.0108%" height="15" fill="rgb(236,162,54)" fg:x="114272" fg:w="18"/><text x="69.1118%" y="143.50"></text></g><g><title>asm_common_interrupt (25 samples, 0.02%)</title><rect x="68.8612%" y="341" width="0.0151%" height="15" fill="rgb(220,229,9)" fg:x="114271" fg:w="25"/><text x="69.1112%" y="351.50"></text></g><g><title>common_interrupt (25 samples, 0.02%)</title><rect x="68.8612%" y="325" width="0.0151%" height="15" fill="rgb(250,87,22)" fg:x="114271" fg:w="25"/><text x="69.1112%" y="335.50"></text></g><g><title>__common_interrupt (25 samples, 0.02%)</title><rect x="68.8612%" y="309" width="0.0151%" height="15" fill="rgb(239,43,17)" fg:x="114271" fg:w="25"/><text x="69.1112%" y="319.50"></text></g><g><title>handle_edge_irq (25 samples, 0.02%)</title><rect x="68.8612%" y="293" width="0.0151%" height="15" fill="rgb(231,177,25)" fg:x="114271" fg:w="25"/><text x="69.1112%" y="303.50"></text></g><g><title>handle_irq_event (25 samples, 0.02%)</title><rect x="68.8612%" y="277" width="0.0151%" height="15" fill="rgb(219,179,1)" fg:x="114271" fg:w="25"/><text x="69.1112%" y="287.50"></text></g><g><title>__handle_irq_event_percpu (25 samples, 0.02%)</title><rect x="68.8612%" y="261" width="0.0151%" height="15" fill="rgb(238,219,53)" fg:x="114271" fg:w="25"/><text x="69.1112%" y="271.50"></text></g><g><title>nvme_irq (25 samples, 0.02%)</title><rect x="68.8612%" y="245" width="0.0151%" height="15" fill="rgb(232,167,36)" fg:x="114271" fg:w="25"/><text x="69.1112%" y="255.50"></text></g><g><title>nvme_process_cq (25 samples, 0.02%)</title><rect x="68.8612%" y="229" width="0.0151%" height="15" fill="rgb(244,19,51)" fg:x="114271" fg:w="25"/><text x="69.1112%" y="239.50"></text></g><g><title>nvme_pci_complete_rq (25 samples, 0.02%)</title><rect x="68.8612%" y="213" width="0.0151%" height="15" fill="rgb(224,6,22)" fg:x="114271" fg:w="25"/><text x="69.1112%" y="223.50"></text></g><g><title>xas_load (1,180 samples, 0.71%)</title><rect x="68.2845%" y="357" width="0.7111%" height="15" fill="rgb(224,145,5)" fg:x="113314" fg:w="1180"/><text x="68.5345%" y="367.50"></text></g><g><title>xas_start (197 samples, 0.12%)</title><rect x="68.8769%" y="341" width="0.1187%" height="15" fill="rgb(234,130,49)" fg:x="114297" fg:w="197"/><text x="69.1269%" y="351.50"></text></g><g><title>xa_get_order (1,513 samples, 0.91%)</title><rect x="68.0965%" y="373" width="0.9118%" height="15" fill="rgb(254,6,2)" fg:x="113002" fg:w="1513"/><text x="68.3465%" y="383.50"></text></g><g><title>xas_start (21 samples, 0.01%)</title><rect x="68.9956%" y="357" width="0.0127%" height="15" fill="rgb(208,96,46)" fg:x="114494" fg:w="21"/><text x="69.2456%" y="367.50"></text></g><g><title>xas_descend (54 samples, 0.03%)</title><rect x="69.0124%" y="373" width="0.0325%" height="15" fill="rgb(239,3,39)" fg:x="114522" fg:w="54"/><text x="69.2624%" y="383.50"></text></g><g><title>xas_descend (354 samples, 0.21%)</title><rect x="69.1625%" y="357" width="0.2133%" height="15" fill="rgb(233,210,1)" fg:x="114771" fg:w="354"/><text x="69.4125%" y="367.50"></text></g><g><title>xas_find_conflict (639 samples, 0.39%)</title><rect x="69.0450%" y="373" width="0.3851%" height="15" fill="rgb(244,137,37)" fg:x="114576" fg:w="639"/><text x="69.2950%" y="383.50"></text></g><g><title>xas_start (90 samples, 0.05%)</title><rect x="69.3758%" y="357" width="0.0542%" height="15" fill="rgb(240,136,2)" fg:x="115125" fg:w="90"/><text x="69.6258%" y="367.50"></text></g><g><title>xas_nomem (20 samples, 0.01%)</title><rect x="69.4361%" y="373" width="0.0121%" height="15" fill="rgb(239,18,37)" fg:x="115225" fg:w="20"/><text x="69.6861%" y="383.50"></text></g><g><title>workingset_update_node (77 samples, 0.05%)</title><rect x="69.5596%" y="357" width="0.0464%" height="15" fill="rgb(218,185,22)" fg:x="115430" fg:w="77"/><text x="69.8096%" y="367.50"></text></g><g><title>list_lru_del (37 samples, 0.02%)</title><rect x="69.5837%" y="341" width="0.0223%" height="15" fill="rgb(225,218,4)" fg:x="115470" fg:w="37"/><text x="69.8337%" y="351.50"></text></g><g><title>__add_to_page_cache_locked (6,610 samples, 3.98%)</title><rect x="65.6679%" y="389" width="3.9833%" height="15" fill="rgb(230,182,32)" fg:x="108972" fg:w="6610"/><text x="65.9179%" y="399.50">__ad..</text></g><g><title>xas_store (329 samples, 0.20%)</title><rect x="69.4529%" y="373" width="0.1983%" height="15" fill="rgb(242,56,43)" fg:x="115253" fg:w="329"/><text x="69.7029%" y="383.50"></text></g><g><title>xas_create (75 samples, 0.05%)</title><rect x="69.6060%" y="357" width="0.0452%" height="15" fill="rgb(233,99,24)" fg:x="115507" fg:w="75"/><text x="69.8560%" y="367.50"></text></g><g><title>__mem_cgroup_charge (20 samples, 0.01%)</title><rect x="69.6530%" y="389" width="0.0121%" height="15" fill="rgb(234,209,42)" fg:x="115585" fg:w="20"/><text x="69.9030%" y="399.50"></text></g><g><title>__mod_lruvec_page_state (17 samples, 0.01%)</title><rect x="69.6651%" y="389" width="0.0102%" height="15" fill="rgb(227,7,12)" fg:x="115605" fg:w="17"/><text x="69.9151%" y="399.50"></text></g><g><title>_raw_spin_lock_irq (17 samples, 0.01%)</title><rect x="69.6789%" y="389" width="0.0102%" height="15" fill="rgb(245,203,43)" fg:x="115628" fg:w="17"/><text x="69.9289%" y="399.50"></text></g><g><title>__read_end_io (29 samples, 0.02%)</title><rect x="69.8609%" y="117" width="0.0175%" height="15" fill="rgb(238,205,33)" fg:x="115930" fg:w="29"/><text x="70.1109%" y="127.50"></text></g><g><title>nvme_complete_rq (45 samples, 0.03%)</title><rect x="69.8603%" y="197" width="0.0271%" height="15" fill="rgb(231,56,7)" fg:x="115929" fg:w="45"/><text x="70.1103%" y="207.50"></text></g><g><title>blk_mq_end_request (45 samples, 0.03%)</title><rect x="69.8603%" y="181" width="0.0271%" height="15" fill="rgb(244,186,29)" fg:x="115929" fg:w="45"/><text x="70.1103%" y="191.50"></text></g><g><title>blk_update_request (45 samples, 0.03%)</title><rect x="69.8603%" y="165" width="0.0271%" height="15" fill="rgb(234,111,31)" fg:x="115929" fg:w="45"/><text x="70.1103%" y="175.50"></text></g><g><title>bio_endio (44 samples, 0.03%)</title><rect x="69.8609%" y="149" width="0.0265%" height="15" fill="rgb(241,149,10)" fg:x="115930" fg:w="44"/><text x="70.1109%" y="159.50"></text></g><g><title>mpage_end_io (44 samples, 0.03%)</title><rect x="69.8609%" y="133" width="0.0265%" height="15" fill="rgb(249,206,44)" fg:x="115930" fg:w="44"/><text x="70.1109%" y="143.50"></text></g><g><title>handle_edge_irq (57 samples, 0.03%)</title><rect x="69.8591%" y="293" width="0.0343%" height="15" fill="rgb(251,153,30)" fg:x="115927" fg:w="57"/><text x="70.1091%" y="303.50"></text></g><g><title>handle_irq_event (57 samples, 0.03%)</title><rect x="69.8591%" y="277" width="0.0343%" height="15" fill="rgb(239,152,38)" fg:x="115927" fg:w="57"/><text x="70.1091%" y="287.50"></text></g><g><title>__handle_irq_event_percpu (57 samples, 0.03%)</title><rect x="69.8591%" y="261" width="0.0343%" height="15" fill="rgb(249,139,47)" fg:x="115927" fg:w="57"/><text x="70.1091%" y="271.50"></text></g><g><title>nvme_irq (56 samples, 0.03%)</title><rect x="69.8597%" y="245" width="0.0337%" height="15" fill="rgb(244,64,35)" fg:x="115928" fg:w="56"/><text x="70.1097%" y="255.50"></text></g><g><title>nvme_process_cq (56 samples, 0.03%)</title><rect x="69.8597%" y="229" width="0.0337%" height="15" fill="rgb(216,46,15)" fg:x="115928" fg:w="56"/><text x="70.1097%" y="239.50"></text></g><g><title>nvme_pci_complete_rq (55 samples, 0.03%)</title><rect x="69.8603%" y="213" width="0.0331%" height="15" fill="rgb(250,74,19)" fg:x="115929" fg:w="55"/><text x="70.1103%" y="223.50"></text></g><g><title>asm_common_interrupt (59 samples, 0.04%)</title><rect x="69.8585%" y="341" width="0.0356%" height="15" fill="rgb(249,42,33)" fg:x="115926" fg:w="59"/><text x="70.1085%" y="351.50"></text></g><g><title>common_interrupt (59 samples, 0.04%)</title><rect x="69.8585%" y="325" width="0.0356%" height="15" fill="rgb(242,149,17)" fg:x="115926" fg:w="59"/><text x="70.1085%" y="335.50"></text></g><g><title>__common_interrupt (59 samples, 0.04%)</title><rect x="69.8585%" y="309" width="0.0356%" height="15" fill="rgb(244,29,21)" fg:x="115926" fg:w="59"/><text x="70.1085%" y="319.50"></text></g><g><title>__lock_text_start (67 samples, 0.04%)</title><rect x="69.8561%" y="357" width="0.0404%" height="15" fill="rgb(220,130,37)" fg:x="115922" fg:w="67"/><text x="70.1061%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (131 samples, 0.08%)</title><rect x="70.3388%" y="325" width="0.0789%" height="15" fill="rgb(211,67,2)" fg:x="116723" fg:w="131"/><text x="70.5888%" y="335.50"></text></g><g><title>cgroup_rstat_updated (29 samples, 0.02%)</title><rect x="70.4003%" y="309" width="0.0175%" height="15" fill="rgb(235,68,52)" fg:x="116825" fg:w="29"/><text x="70.6503%" y="319.50"></text></g><g><title>__mod_node_page_state (56 samples, 0.03%)</title><rect x="70.4177%" y="325" width="0.0337%" height="15" fill="rgb(246,142,3)" fg:x="116854" fg:w="56"/><text x="70.6677%" y="335.50"></text></g><g><title>__mod_lruvec_state (212 samples, 0.13%)</title><rect x="70.3267%" y="341" width="0.1278%" height="15" fill="rgb(241,25,7)" fg:x="116703" fg:w="212"/><text x="70.5767%" y="351.50"></text></g><g><title>__mod_node_page_state (20 samples, 0.01%)</title><rect x="70.4569%" y="341" width="0.0121%" height="15" fill="rgb(242,119,39)" fg:x="116919" fg:w="20"/><text x="70.7069%" y="351.50"></text></g><g><title>__mod_zone_page_state (68 samples, 0.04%)</title><rect x="70.4690%" y="341" width="0.0410%" height="15" fill="rgb(241,98,45)" fg:x="116939" fg:w="68"/><text x="70.7190%" y="351.50"></text></g><g><title>mem_cgroup_update_lru_size (88 samples, 0.05%)</title><rect x="70.5099%" y="341" width="0.0530%" height="15" fill="rgb(254,28,30)" fg:x="117007" fg:w="88"/><text x="70.7599%" y="351.50"></text></g><g><title>page_mapping (134 samples, 0.08%)</title><rect x="70.5630%" y="341" width="0.0808%" height="15" fill="rgb(241,142,54)" fg:x="117095" fg:w="134"/><text x="70.8130%" y="351.50"></text></g><g><title>__pagevec_lru_add_fn (1,216 samples, 0.73%)</title><rect x="69.9115%" y="357" width="0.7328%" height="15" fill="rgb(222,85,15)" fg:x="116014" fg:w="1216"/><text x="70.1615%" y="367.50"></text></g><g><title>_raw_spin_lock_irqsave (52 samples, 0.03%)</title><rect x="70.6552%" y="341" width="0.0313%" height="15" fill="rgb(210,85,47)" fg:x="117248" fg:w="52"/><text x="70.9052%" y="351.50"></text></g><g><title>native_queued_spin_lock_slowpath (43 samples, 0.03%)</title><rect x="70.6606%" y="325" width="0.0259%" height="15" fill="rgb(224,206,25)" fg:x="117257" fg:w="43"/><text x="70.9106%" y="335.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (43 samples, 0.03%)</title><rect x="70.6606%" y="309" width="0.0259%" height="15" fill="rgb(243,201,19)" fg:x="117257" fg:w="43"/><text x="70.9106%" y="319.50"></text></g><g><title>lock_page_lruvec_irqsave (70 samples, 0.04%)</title><rect x="70.6455%" y="357" width="0.0422%" height="15" fill="rgb(236,59,4)" fg:x="117232" fg:w="70"/><text x="70.8955%" y="367.50"></text></g><g><title>page_mapping (25 samples, 0.02%)</title><rect x="70.6931%" y="357" width="0.0151%" height="15" fill="rgb(254,179,45)" fg:x="117311" fg:w="25"/><text x="70.9431%" y="367.50"></text></g><g><title>__pagevec_lru_add (1,682 samples, 1.01%)</title><rect x="69.8127%" y="373" width="1.0136%" height="15" fill="rgb(226,14,10)" fg:x="115850" fg:w="1682"/><text x="70.0627%" y="383.50"></text></g><g><title>release_pages (188 samples, 0.11%)</title><rect x="70.7130%" y="357" width="0.1133%" height="15" fill="rgb(244,27,41)" fg:x="117344" fg:w="188"/><text x="70.9630%" y="367.50"></text></g><g><title>__pagevec_lru_add_fn (18 samples, 0.01%)</title><rect x="70.8263%" y="373" width="0.0108%" height="15" fill="rgb(235,35,32)" fg:x="117532" fg:w="18"/><text x="71.0763%" y="383.50"></text></g><g><title>lru_cache_add (1,908 samples, 1.15%)</title><rect x="69.6934%" y="389" width="1.1498%" height="15" fill="rgb(218,68,31)" fg:x="115652" fg:w="1908"/><text x="69.9434%" y="399.50"></text></g><g><title>mem_cgroup_flush_stats (47 samples, 0.03%)</title><rect x="70.8432%" y="389" width="0.0283%" height="15" fill="rgb(207,120,37)" fg:x="117560" fg:w="47"/><text x="71.0932%" y="399.50"></text></g><g><title>mem_cgroup_from_id (17 samples, 0.01%)</title><rect x="70.8715%" y="389" width="0.0102%" height="15" fill="rgb(227,98,0)" fg:x="117607" fg:w="17"/><text x="71.1215%" y="399.50"></text></g><g><title>mod_lruvec_state.constprop.0 (20 samples, 0.01%)</title><rect x="70.8860%" y="389" width="0.0121%" height="15" fill="rgb(207,7,3)" fg:x="117631" fg:w="20"/><text x="71.1360%" y="399.50"></text></g><g><title>__mod_lruvec_state (18 samples, 0.01%)</title><rect x="71.0788%" y="373" width="0.0108%" height="15" fill="rgb(206,98,19)" fg:x="117951" fg:w="18"/><text x="71.3288%" y="383.50"></text></g><g><title>idr_find (17 samples, 0.01%)</title><rect x="71.0933%" y="373" width="0.0102%" height="15" fill="rgb(217,5,26)" fg:x="117975" fg:w="17"/><text x="71.3433%" y="383.50"></text></g><g><title>__read_end_io (25 samples, 0.02%)</title><rect x="71.1089%" y="101" width="0.0151%" height="15" fill="rgb(235,190,38)" fg:x="118001" fg:w="25"/><text x="71.3589%" y="111.50"></text></g><g><title>nvme_complete_rq (38 samples, 0.02%)</title><rect x="71.1071%" y="181" width="0.0229%" height="15" fill="rgb(247,86,24)" fg:x="117998" fg:w="38"/><text x="71.3571%" y="191.50"></text></g><g><title>blk_mq_end_request (38 samples, 0.02%)</title><rect x="71.1071%" y="165" width="0.0229%" height="15" fill="rgb(205,101,16)" fg:x="117998" fg:w="38"/><text x="71.3571%" y="175.50"></text></g><g><title>blk_update_request (36 samples, 0.02%)</title><rect x="71.1083%" y="149" width="0.0217%" height="15" fill="rgb(246,168,33)" fg:x="118000" fg:w="36"/><text x="71.3583%" y="159.50"></text></g><g><title>bio_endio (35 samples, 0.02%)</title><rect x="71.1089%" y="133" width="0.0211%" height="15" fill="rgb(231,114,1)" fg:x="118001" fg:w="35"/><text x="71.3589%" y="143.50"></text></g><g><title>mpage_end_io (35 samples, 0.02%)</title><rect x="71.1089%" y="117" width="0.0211%" height="15" fill="rgb(207,184,53)" fg:x="118001" fg:w="35"/><text x="71.3589%" y="127.50"></text></g><g><title>asm_common_interrupt (48 samples, 0.03%)</title><rect x="71.1053%" y="325" width="0.0289%" height="15" fill="rgb(224,95,51)" fg:x="117995" fg:w="48"/><text x="71.3553%" y="335.50"></text></g><g><title>common_interrupt (48 samples, 0.03%)</title><rect x="71.1053%" y="309" width="0.0289%" height="15" fill="rgb(212,188,45)" fg:x="117995" fg:w="48"/><text x="71.3553%" y="319.50"></text></g><g><title>__common_interrupt (48 samples, 0.03%)</title><rect x="71.1053%" y="293" width="0.0289%" height="15" fill="rgb(223,154,38)" fg:x="117995" fg:w="48"/><text x="71.3553%" y="303.50"></text></g><g><title>handle_edge_irq (47 samples, 0.03%)</title><rect x="71.1059%" y="277" width="0.0283%" height="15" fill="rgb(251,22,52)" fg:x="117996" fg:w="47"/><text x="71.3559%" y="287.50"></text></g><g><title>handle_irq_event (47 samples, 0.03%)</title><rect x="71.1059%" y="261" width="0.0283%" height="15" fill="rgb(229,209,22)" fg:x="117996" fg:w="47"/><text x="71.3559%" y="271.50"></text></g><g><title>__handle_irq_event_percpu (47 samples, 0.03%)</title><rect x="71.1059%" y="245" width="0.0283%" height="15" fill="rgb(234,138,34)" fg:x="117996" fg:w="47"/><text x="71.3559%" y="255.50"></text></g><g><title>nvme_irq (47 samples, 0.03%)</title><rect x="71.1059%" y="229" width="0.0283%" height="15" fill="rgb(212,95,11)" fg:x="117996" fg:w="47"/><text x="71.3559%" y="239.50"></text></g><g><title>nvme_process_cq (47 samples, 0.03%)</title><rect x="71.1059%" y="213" width="0.0283%" height="15" fill="rgb(240,179,47)" fg:x="117996" fg:w="47"/><text x="71.3559%" y="223.50"></text></g><g><title>nvme_pci_complete_rq (45 samples, 0.03%)</title><rect x="71.1071%" y="197" width="0.0271%" height="15" fill="rgb(240,163,11)" fg:x="117998" fg:w="45"/><text x="71.3571%" y="207.50"></text></g><g><title>__lock_text_start (53 samples, 0.03%)</title><rect x="71.1047%" y="341" width="0.0319%" height="15" fill="rgb(236,37,12)" fg:x="117994" fg:w="53"/><text x="71.3547%" y="351.50"></text></g><g><title>_raw_spin_lock (68 samples, 0.04%)</title><rect x="71.1403%" y="325" width="0.0410%" height="15" fill="rgb(232,164,16)" fg:x="118053" fg:w="68"/><text x="71.3903%" y="335.50"></text></g><g><title>_find_next_bit (71 samples, 0.04%)</title><rect x="71.2626%" y="309" width="0.0428%" height="15" fill="rgb(244,205,15)" fg:x="118256" fg:w="71"/><text x="71.5126%" y="319.50"></text></g><g><title>blkcg_rstat_flush (34 samples, 0.02%)</title><rect x="71.3054%" y="309" width="0.0205%" height="15" fill="rgb(223,117,47)" fg:x="118327" fg:w="34"/><text x="71.5554%" y="319.50"></text></g><g><title>mem_cgroup_css_rstat_flush (1,301 samples, 0.78%)</title><rect x="71.3259%" y="309" width="0.7840%" height="15" fill="rgb(244,107,35)" fg:x="118361" fg:w="1301"/><text x="71.5759%" y="319.50"></text></g><g><title>cgroup_rstat_flush_locked (1,533 samples, 0.92%)</title><rect x="71.1867%" y="325" width="0.9238%" height="15" fill="rgb(205,140,8)" fg:x="118130" fg:w="1533"/><text x="71.4367%" y="335.50"></text></g><g><title>mem_cgroup_flush_stats (1,681 samples, 1.01%)</title><rect x="71.1035%" y="373" width="1.0130%" height="15" fill="rgb(228,84,46)" fg:x="117992" fg:w="1681"/><text x="71.3535%" y="383.50"></text></g><g><title>__mem_cgroup_flush_stats (1,681 samples, 1.01%)</title><rect x="71.1035%" y="357" width="1.0130%" height="15" fill="rgb(254,188,9)" fg:x="117992" fg:w="1681"/><text x="71.3535%" y="367.50"></text></g><g><title>cgroup_rstat_flush_irqsafe (1,621 samples, 0.98%)</title><rect x="71.1397%" y="341" width="0.9768%" height="15" fill="rgb(206,112,54)" fg:x="118052" fg:w="1621"/><text x="71.3897%" y="351.50"></text></g><g><title>__radix_tree_lookup (21 samples, 0.01%)</title><rect x="72.1316%" y="341" width="0.0127%" height="15" fill="rgb(216,84,49)" fg:x="119698" fg:w="21"/><text x="72.3816%" y="351.50"></text></g><g><title>idr_find (214 samples, 0.13%)</title><rect x="72.1201%" y="357" width="0.1290%" height="15" fill="rgb(214,194,35)" fg:x="119679" fg:w="214"/><text x="72.3701%" y="367.50"></text></g><g><title>radix_tree_lookup (174 samples, 0.10%)</title><rect x="72.1442%" y="341" width="0.1049%" height="15" fill="rgb(249,28,3)" fg:x="119719" fg:w="174"/><text x="72.3942%" y="351.50"></text></g><g><title>__radix_tree_lookup (165 samples, 0.10%)</title><rect x="72.1496%" y="325" width="0.0994%" height="15" fill="rgb(222,56,52)" fg:x="119728" fg:w="165"/><text x="72.3996%" y="335.50"></text></g><g><title>mem_cgroup_from_id (230 samples, 0.14%)</title><rect x="72.1165%" y="373" width="0.1386%" height="15" fill="rgb(245,217,50)" fg:x="119673" fg:w="230"/><text x="72.3665%" y="383.50"></text></g><g><title>mem_cgroup_get_nr_swap_pages (146 samples, 0.09%)</title><rect x="72.2551%" y="373" width="0.0880%" height="15" fill="rgb(213,201,24)" fg:x="119903" fg:w="146"/><text x="72.5051%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (139 samples, 0.08%)</title><rect x="72.4094%" y="341" width="0.0838%" height="15" fill="rgb(248,116,28)" fg:x="120159" fg:w="139"/><text x="72.6594%" y="351.50"></text></g><g><title>cgroup_rstat_updated (36 samples, 0.02%)</title><rect x="72.4714%" y="325" width="0.0217%" height="15" fill="rgb(219,72,43)" fg:x="120262" fg:w="36"/><text x="72.7214%" y="335.50"></text></g><g><title>__mod_node_page_state (46 samples, 0.03%)</title><rect x="72.4931%" y="341" width="0.0277%" height="15" fill="rgb(209,138,14)" fg:x="120298" fg:w="46"/><text x="72.7431%" y="351.50"></text></g><g><title>__mod_lruvec_state (229 samples, 0.14%)</title><rect x="72.3865%" y="357" width="0.1380%" height="15" fill="rgb(222,18,33)" fg:x="120121" fg:w="229"/><text x="72.6365%" y="367.50"></text></g><g><title>__mod_node_page_state (17 samples, 0.01%)</title><rect x="72.5299%" y="357" width="0.0102%" height="15" fill="rgb(213,199,7)" fg:x="120359" fg:w="17"/><text x="72.7799%" y="367.50"></text></g><g><title>mod_lruvec_state.constprop.0 (342 samples, 0.21%)</title><rect x="72.3431%" y="373" width="0.2061%" height="15" fill="rgb(250,110,10)" fg:x="120049" fg:w="342"/><text x="72.5931%" y="383.50"></text></g><g><title>workingset_refault (2,739 samples, 1.65%)</title><rect x="70.9040%" y="389" width="1.6506%" height="15" fill="rgb(248,123,6)" fg:x="117661" fg:w="2739"/><text x="71.1540%" y="399.50"></text></g><g><title>xa_get_order (18 samples, 0.01%)</title><rect x="72.5546%" y="389" width="0.0108%" height="15" fill="rgb(206,91,31)" fg:x="120400" fg:w="18"/><text x="72.8046%" y="399.50"></text></g><g><title>xas_find_conflict (20 samples, 0.01%)</title><rect x="72.5654%" y="389" width="0.0121%" height="15" fill="rgb(211,154,13)" fg:x="120418" fg:w="20"/><text x="72.8154%" y="399.50"></text></g><g><title>xas_nomem (22 samples, 0.01%)</title><rect x="72.5775%" y="389" width="0.0133%" height="15" fill="rgb(225,148,7)" fg:x="120438" fg:w="22"/><text x="72.8275%" y="399.50"></text></g><g><title>add_to_page_cache_lru (11,665 samples, 7.03%)</title><rect x="65.5715%" y="405" width="7.0295%" height="15" fill="rgb(220,160,43)" fg:x="108812" fg:w="11665"/><text x="65.8215%" y="415.50">add_to_pa..</text></g><g><title>xas_store (17 samples, 0.01%)</title><rect x="72.5908%" y="389" width="0.0102%" height="15" fill="rgb(213,52,39)" fg:x="120460" fg:w="17"/><text x="72.8408%" y="399.50"></text></g><g><title>__blk_bios_map_sg (35 samples, 0.02%)</title><rect x="72.6366%" y="245" width="0.0211%" height="15" fill="rgb(243,137,7)" fg:x="120536" fg:w="35"/><text x="72.8866%" y="255.50"></text></g><g><title>__blk_rq_map_sg (39 samples, 0.02%)</title><rect x="72.6353%" y="261" width="0.0235%" height="15" fill="rgb(230,79,13)" fg:x="120534" fg:w="39"/><text x="72.8853%" y="271.50"></text></g><g><title>iommu_dma_alloc_iova (19 samples, 0.01%)</title><rect x="72.6763%" y="213" width="0.0114%" height="15" fill="rgb(247,105,23)" fg:x="120602" fg:w="19"/><text x="72.9263%" y="223.50"></text></g><g><title>clflush_cache_range (313 samples, 0.19%)</title><rect x="72.9053%" y="133" width="0.1886%" height="15" fill="rgb(223,179,41)" fg:x="120982" fg:w="313"/><text x="73.1553%" y="143.50"></text></g><g><title>__domain_mapping (641 samples, 0.39%)</title><rect x="72.7396%" y="149" width="0.3863%" height="15" fill="rgb(218,9,34)" fg:x="120707" fg:w="641"/><text x="72.9896%" y="159.50"></text></g><g><title>pfn_to_dma_pte (53 samples, 0.03%)</title><rect x="73.0939%" y="133" width="0.0319%" height="15" fill="rgb(222,106,8)" fg:x="121295" fg:w="53"/><text x="73.3439%" y="143.50"></text></g><g><title>intel_iommu_map_pages (676 samples, 0.41%)</title><rect x="72.7269%" y="165" width="0.4074%" height="15" fill="rgb(211,220,0)" fg:x="120686" fg:w="676"/><text x="72.9769%" y="175.50"></text></g><g><title>__iommu_map (758 samples, 0.46%)</title><rect x="72.6956%" y="181" width="0.4568%" height="15" fill="rgb(229,52,16)" fg:x="120634" fg:w="758"/><text x="72.9456%" y="191.50"></text></g><g><title>iommu_pgsize (30 samples, 0.02%)</title><rect x="73.1343%" y="165" width="0.0181%" height="15" fill="rgb(212,155,18)" fg:x="121362" fg:w="30"/><text x="73.3843%" y="175.50"></text></g><g><title>__iommu_map_sg (789 samples, 0.48%)</title><rect x="72.6884%" y="197" width="0.4755%" height="15" fill="rgb(242,21,14)" fg:x="120622" fg:w="789"/><text x="72.9384%" y="207.50"></text></g><g><title>iommu_dma_map_sg (837 samples, 0.50%)</title><rect x="72.6631%" y="229" width="0.5044%" height="15" fill="rgb(222,19,48)" fg:x="120580" fg:w="837"/><text x="72.9131%" y="239.50"></text></g><g><title>iommu_map_sg_atomic (796 samples, 0.48%)</title><rect x="72.6878%" y="213" width="0.4797%" height="15" fill="rgb(232,45,27)" fg:x="120621" fg:w="796"/><text x="72.9378%" y="223.50"></text></g><g><title>dma_map_sg_attrs (847 samples, 0.51%)</title><rect x="72.6625%" y="261" width="0.5104%" height="15" fill="rgb(249,103,42)" fg:x="120579" fg:w="847"/><text x="72.9125%" y="271.50"></text></g><g><title>__dma_map_sg_attrs (847 samples, 0.51%)</title><rect x="72.6625%" y="245" width="0.5104%" height="15" fill="rgb(246,81,33)" fg:x="120579" fg:w="847"/><text x="72.9125%" y="255.50"></text></g><g><title>nvme_map_data (946 samples, 0.57%)</title><rect x="72.6341%" y="277" width="0.5701%" height="15" fill="rgb(252,33,42)" fg:x="120532" fg:w="946"/><text x="72.8841%" y="287.50"></text></g><g><title>nvme_pci_setup_prps (35 samples, 0.02%)</title><rect x="73.1831%" y="261" width="0.0211%" height="15" fill="rgb(209,212,41)" fg:x="121443" fg:w="35"/><text x="73.4331%" y="271.50"></text></g><g><title>nvme_queue_rq (959 samples, 0.58%)</title><rect x="72.6323%" y="293" width="0.5779%" height="15" fill="rgb(207,154,6)" fg:x="120529" fg:w="959"/><text x="72.8823%" y="303.50"></text></g><g><title>blk_mq_flush_plug_list (961 samples, 0.58%)</title><rect x="72.6317%" y="357" width="0.5791%" height="15" fill="rgb(223,64,47)" fg:x="120528" fg:w="961"/><text x="72.8817%" y="367.50"></text></g><g><title>blk_mq_sched_insert_requests (961 samples, 0.58%)</title><rect x="72.6317%" y="341" width="0.5791%" height="15" fill="rgb(211,161,38)" fg:x="120528" fg:w="961"/><text x="72.8817%" y="351.50"></text></g><g><title>blk_mq_try_issue_list_directly (961 samples, 0.58%)</title><rect x="72.6317%" y="325" width="0.5791%" height="15" fill="rgb(219,138,40)" fg:x="120528" fg:w="961"/><text x="72.8817%" y="335.50"></text></g><g><title>__blk_mq_try_issue_directly (961 samples, 0.58%)</title><rect x="72.6317%" y="309" width="0.5791%" height="15" fill="rgb(241,228,46)" fg:x="120528" fg:w="961"/><text x="72.8817%" y="319.50"></text></g><g><title>blk_finish_plug (962 samples, 0.58%)</title><rect x="72.6317%" y="389" width="0.5797%" height="15" fill="rgb(223,209,38)" fg:x="120528" fg:w="962"/><text x="72.8817%" y="399.50"></text></g><g><title>blk_flush_plug_list (962 samples, 0.58%)</title><rect x="72.6317%" y="373" width="0.5797%" height="15" fill="rgb(236,164,45)" fg:x="120528" fg:w="962"/><text x="72.8817%" y="383.50"></text></g><g><title>__bio_add_page (35 samples, 0.02%)</title><rect x="73.8189%" y="341" width="0.0211%" height="15" fill="rgb(231,15,5)" fg:x="122498" fg:w="35"/><text x="74.0689%" y="351.50"></text></g><g><title>bio_add_page (228 samples, 0.14%)</title><rect x="73.7707%" y="357" width="0.1374%" height="15" fill="rgb(252,35,15)" fg:x="122418" fg:w="228"/><text x="74.0207%" y="367.50"></text></g><g><title>__bio_try_merge_page (113 samples, 0.07%)</title><rect x="73.8400%" y="341" width="0.0681%" height="15" fill="rgb(248,181,18)" fg:x="122533" fg:w="113"/><text x="74.0900%" y="351.50"></text></g><g><title>bio_alloc_bioset (26 samples, 0.02%)</title><rect x="73.9081%" y="357" width="0.0157%" height="15" fill="rgb(233,39,42)" fg:x="122646" fg:w="26"/><text x="74.1581%" y="367.50"></text></g><g><title>ext4_es_insert_extent (20 samples, 0.01%)</title><rect x="73.9466%" y="341" width="0.0121%" height="15" fill="rgb(238,110,33)" fg:x="122710" fg:w="20"/><text x="74.1966%" y="351.50"></text></g><g><title>ext4_es_lookup_extent (37 samples, 0.02%)</title><rect x="73.9587%" y="341" width="0.0223%" height="15" fill="rgb(233,195,10)" fg:x="122730" fg:w="37"/><text x="74.2087%" y="351.50"></text></g><g><title>ext4_map_blocks (97 samples, 0.06%)</title><rect x="73.9304%" y="357" width="0.0585%" height="15" fill="rgb(254,105,3)" fg:x="122683" fg:w="97"/><text x="74.1804%" y="367.50"></text></g><g><title>fscrypt_mergeable_bio (78 samples, 0.05%)</title><rect x="73.9888%" y="357" width="0.0470%" height="15" fill="rgb(221,225,9)" fg:x="122780" fg:w="78"/><text x="74.2388%" y="367.50"></text></g><g><title>__blk_mq_alloc_request (22 samples, 0.01%)</title><rect x="74.0521%" y="293" width="0.0133%" height="15" fill="rgb(224,227,45)" fg:x="122885" fg:w="22"/><text x="74.3021%" y="303.50"></text></g><g><title>blk_bio_segment_split (140 samples, 0.08%)</title><rect x="74.0714%" y="277" width="0.0844%" height="15" fill="rgb(229,198,43)" fg:x="122917" fg:w="140"/><text x="74.3214%" y="287.50"></text></g><g><title>bvec_split_segs (30 samples, 0.02%)</title><rect x="74.1377%" y="261" width="0.0181%" height="15" fill="rgb(206,209,35)" fg:x="123027" fg:w="30"/><text x="74.3877%" y="271.50"></text></g><g><title>__blk_queue_split (155 samples, 0.09%)</title><rect x="74.0678%" y="293" width="0.0934%" height="15" fill="rgb(245,195,53)" fg:x="122911" fg:w="155"/><text x="74.3178%" y="303.50"></text></g><g><title>__blk_bios_map_sg (108 samples, 0.07%)</title><rect x="74.1985%" y="165" width="0.0651%" height="15" fill="rgb(240,92,26)" fg:x="123128" fg:w="108"/><text x="74.4485%" y="175.50"></text></g><g><title>__blk_rq_map_sg (119 samples, 0.07%)</title><rect x="74.1985%" y="181" width="0.0717%" height="15" fill="rgb(207,40,23)" fg:x="123128" fg:w="119"/><text x="74.4485%" y="191.50"></text></g><g><title>iommu_dma_alloc_iova (29 samples, 0.02%)</title><rect x="74.3124%" y="133" width="0.0175%" height="15" fill="rgb(223,111,35)" fg:x="123317" fg:w="29"/><text x="74.5624%" y="143.50"></text></g><g><title>alloc_iova_fast (25 samples, 0.02%)</title><rect x="74.3148%" y="117" width="0.0151%" height="15" fill="rgb(229,147,28)" fg:x="123321" fg:w="25"/><text x="74.5648%" y="127.50"></text></g><g><title>alloc_iova (25 samples, 0.02%)</title><rect x="74.3148%" y="101" width="0.0151%" height="15" fill="rgb(211,29,28)" fg:x="123321" fg:w="25"/><text x="74.5648%" y="111.50"></text></g><g><title>clflush_cache_range (848 samples, 0.51%)</title><rect x="74.8578%" y="53" width="0.5110%" height="15" fill="rgb(228,72,33)" fg:x="124222" fg:w="848"/><text x="75.1078%" y="63.50"></text></g><g><title>__domain_mapping (1,654 samples, 1.00%)</title><rect x="74.4498%" y="69" width="0.9967%" height="15" fill="rgb(205,214,31)" fg:x="123545" fg:w="1654"/><text x="74.6998%" y="79.50"></text></g><g><title>pfn_to_dma_pte (129 samples, 0.08%)</title><rect x="75.3688%" y="53" width="0.0777%" height="15" fill="rgb(224,111,15)" fg:x="125070" fg:w="129"/><text x="75.6188%" y="63.50"></text></g><g><title>clflush_cache_range (40 samples, 0.02%)</title><rect x="75.4471%" y="69" width="0.0241%" height="15" fill="rgb(253,21,26)" fg:x="125200" fg:w="40"/><text x="75.6971%" y="79.50"></text></g><g><title>intel_iommu_map_pages (1,751 samples, 1.06%)</title><rect x="74.4209%" y="85" width="1.0552%" height="15" fill="rgb(245,139,43)" fg:x="123497" fg:w="1751"/><text x="74.6709%" y="95.50"></text></g><g><title>__iommu_map (1,910 samples, 1.15%)</title><rect x="74.3594%" y="101" width="1.1510%" height="15" fill="rgb(252,170,7)" fg:x="123395" fg:w="1910"/><text x="74.6094%" y="111.50"></text></g><g><title>iommu_pgsize (57 samples, 0.03%)</title><rect x="75.4761%" y="85" width="0.0343%" height="15" fill="rgb(231,118,14)" fg:x="125248" fg:w="57"/><text x="75.7261%" y="95.50"></text></g><g><title>intel_iommu_iotlb_sync_map (18 samples, 0.01%)</title><rect x="75.5104%" y="101" width="0.0108%" height="15" fill="rgb(238,83,0)" fg:x="125305" fg:w="18"/><text x="75.7604%" y="111.50"></text></g><g><title>__iommu_map_sg (1,997 samples, 1.20%)</title><rect x="74.3323%" y="117" width="1.2034%" height="15" fill="rgb(221,39,39)" fg:x="123350" fg:w="1997"/><text x="74.5823%" y="127.50"></text></g><g><title>iommu_dma_map_sg (2,104 samples, 1.27%)</title><rect x="74.2714%" y="149" width="1.2679%" height="15" fill="rgb(222,119,46)" fg:x="123249" fg:w="2104"/><text x="74.5214%" y="159.50"></text></g><g><title>iommu_map_sg_atomic (2,007 samples, 1.21%)</title><rect x="74.3299%" y="133" width="1.2094%" height="15" fill="rgb(222,165,49)" fg:x="123346" fg:w="2007"/><text x="74.5799%" y="143.50"></text></g><g><title>__dma_map_sg_attrs (2,130 samples, 1.28%)</title><rect x="74.2702%" y="165" width="1.2836%" height="15" fill="rgb(219,113,52)" fg:x="123247" fg:w="2130"/><text x="74.5202%" y="175.50"></text></g><g><title>sg_next (24 samples, 0.01%)</title><rect x="75.5393%" y="149" width="0.0145%" height="15" fill="rgb(214,7,15)" fg:x="125353" fg:w="24"/><text x="75.7893%" y="159.50"></text></g><g><title>dma_map_sg_attrs (2,131 samples, 1.28%)</title><rect x="74.2702%" y="181" width="1.2842%" height="15" fill="rgb(235,32,4)" fg:x="123247" fg:w="2131"/><text x="74.5202%" y="191.50"></text></g><g><title>nvme_pci_setup_prps (34 samples, 0.02%)</title><rect x="75.5719%" y="181" width="0.0205%" height="15" fill="rgb(238,90,54)" fg:x="125407" fg:w="34"/><text x="75.8219%" y="191.50"></text></g><g><title>nvme_map_data (2,317 samples, 1.40%)</title><rect x="74.1967%" y="197" width="1.3963%" height="15" fill="rgb(213,208,19)" fg:x="123125" fg:w="2317"/><text x="74.4467%" y="207.50"></text></g><g><title>__blk_mq_try_issue_directly (2,348 samples, 1.41%)</title><rect x="74.1841%" y="229" width="1.4149%" height="15" fill="rgb(233,156,4)" fg:x="123104" fg:w="2348"/><text x="74.4341%" y="239.50"></text></g><g><title>nvme_queue_rq (2,344 samples, 1.41%)</title><rect x="74.1865%" y="213" width="1.4125%" height="15" fill="rgb(207,194,5)" fg:x="123108" fg:w="2344"/><text x="74.4365%" y="223.50"></text></g><g><title>blk_mq_flush_plug_list (2,354 samples, 1.42%)</title><rect x="74.1817%" y="277" width="1.4186%" height="15" fill="rgb(206,111,30)" fg:x="123100" fg:w="2354"/><text x="74.4317%" y="287.50"></text></g><g><title>blk_mq_sched_insert_requests (2,354 samples, 1.42%)</title><rect x="74.1817%" y="261" width="1.4186%" height="15" fill="rgb(243,70,54)" fg:x="123100" fg:w="2354"/><text x="74.4317%" y="271.50"></text></g><g><title>blk_mq_try_issue_list_directly (2,353 samples, 1.42%)</title><rect x="74.1823%" y="245" width="1.4179%" height="15" fill="rgb(242,28,8)" fg:x="123101" fg:w="2353"/><text x="74.4323%" y="255.50"></text></g><g><title>blk_flush_plug_list (2,359 samples, 1.42%)</title><rect x="74.1804%" y="293" width="1.4216%" height="15" fill="rgb(219,106,18)" fg:x="123098" fg:w="2359"/><text x="74.4304%" y="303.50"></text></g><g><title>blk_mq_submit_bio (2,583 samples, 1.56%)</title><rect x="74.0491%" y="309" width="1.5565%" height="15" fill="rgb(244,222,10)" fg:x="122880" fg:w="2583"/><text x="74.2991%" y="319.50"></text></g><g><title>submit_bio (2,614 samples, 1.58%)</title><rect x="74.0418%" y="357" width="1.5752%" height="15" fill="rgb(236,179,52)" fg:x="122868" fg:w="2614"/><text x="74.2918%" y="367.50"></text></g><g><title>submit_bio_noacct (2,613 samples, 1.57%)</title><rect x="74.0424%" y="341" width="1.5746%" height="15" fill="rgb(213,23,39)" fg:x="122869" fg:w="2613"/><text x="74.2924%" y="351.50"></text></g><g><title>__submit_bio (2,610 samples, 1.57%)</title><rect x="74.0443%" y="325" width="1.5728%" height="15" fill="rgb(238,48,10)" fg:x="122872" fg:w="2610"/><text x="74.2943%" y="335.50"></text></g><g><title>submit_bio_checks (18 samples, 0.01%)</title><rect x="75.6062%" y="309" width="0.0108%" height="15" fill="rgb(251,196,23)" fg:x="125464" fg:w="18"/><text x="75.8562%" y="319.50"></text></g><g><title>xas_load (402 samples, 0.24%)</title><rect x="75.6556%" y="341" width="0.2423%" height="15" fill="rgb(250,152,24)" fg:x="125546" fg:w="402"/><text x="75.9056%" y="351.50"></text></g><g><title>xas_start (84 samples, 0.05%)</title><rect x="75.8473%" y="325" width="0.0506%" height="15" fill="rgb(209,150,17)" fg:x="125864" fg:w="84"/><text x="76.0973%" y="335.50"></text></g><g><title>xa_load (475 samples, 0.29%)</title><rect x="75.6177%" y="357" width="0.2862%" height="15" fill="rgb(234,202,34)" fg:x="125483" fg:w="475"/><text x="75.8677%" y="367.50"></text></g><g><title>ext4_mpage_readpages (4,475 samples, 2.70%)</title><rect x="73.2163%" y="373" width="2.6967%" height="15" fill="rgb(253,148,53)" fg:x="121498" fg:w="4475"/><text x="73.4663%" y="383.50">ex..</text></g><g><title>read_pages (5,465 samples, 3.29%)</title><rect x="72.6311%" y="405" width="3.2933%" height="15" fill="rgb(218,129,16)" fg:x="120527" fg:w="5465"/><text x="72.8811%" y="415.50">rea..</text></g><g><title>ext4_readahead (4,502 samples, 2.71%)</title><rect x="73.2114%" y="389" width="2.7130%" height="15" fill="rgb(216,85,19)" fg:x="121490" fg:w="4502"/><text x="73.4614%" y="399.50">ex..</text></g><g><title>nvme_complete_rq (17 samples, 0.01%)</title><rect x="76.2299%" y="229" width="0.0102%" height="15" fill="rgb(235,228,7)" fg:x="126499" fg:w="17"/><text x="76.4799%" y="239.50"></text></g><g><title>blk_mq_end_request (17 samples, 0.01%)</title><rect x="76.2299%" y="213" width="0.0102%" height="15" fill="rgb(245,175,0)" fg:x="126499" fg:w="17"/><text x="76.4799%" y="223.50"></text></g><g><title>asm_common_interrupt (20 samples, 0.01%)</title><rect x="76.2299%" y="373" width="0.0121%" height="15" fill="rgb(208,168,36)" fg:x="126499" fg:w="20"/><text x="76.4799%" y="383.50"></text></g><g><title>common_interrupt (20 samples, 0.01%)</title><rect x="76.2299%" y="357" width="0.0121%" height="15" fill="rgb(246,171,24)" fg:x="126499" fg:w="20"/><text x="76.4799%" y="367.50"></text></g><g><title>__common_interrupt (20 samples, 0.01%)</title><rect x="76.2299%" y="341" width="0.0121%" height="15" fill="rgb(215,142,24)" fg:x="126499" fg:w="20"/><text x="76.4799%" y="351.50"></text></g><g><title>handle_edge_irq (20 samples, 0.01%)</title><rect x="76.2299%" y="325" width="0.0121%" height="15" fill="rgb(250,187,7)" fg:x="126499" fg:w="20"/><text x="76.4799%" y="335.50"></text></g><g><title>handle_irq_event (20 samples, 0.01%)</title><rect x="76.2299%" y="309" width="0.0121%" height="15" fill="rgb(228,66,33)" fg:x="126499" fg:w="20"/><text x="76.4799%" y="319.50"></text></g><g><title>__handle_irq_event_percpu (20 samples, 0.01%)</title><rect x="76.2299%" y="293" width="0.0121%" height="15" fill="rgb(234,215,21)" fg:x="126499" fg:w="20"/><text x="76.4799%" y="303.50"></text></g><g><title>nvme_irq (20 samples, 0.01%)</title><rect x="76.2299%" y="277" width="0.0121%" height="15" fill="rgb(222,191,20)" fg:x="126499" fg:w="20"/><text x="76.4799%" y="287.50"></text></g><g><title>nvme_process_cq (20 samples, 0.01%)</title><rect x="76.2299%" y="261" width="0.0121%" height="15" fill="rgb(245,79,54)" fg:x="126499" fg:w="20"/><text x="76.4799%" y="271.50"></text></g><g><title>nvme_pci_complete_rq (20 samples, 0.01%)</title><rect x="76.2299%" y="245" width="0.0121%" height="15" fill="rgb(240,10,37)" fg:x="126499" fg:w="20"/><text x="76.4799%" y="255.50"></text></g><g><title>xas_load (540 samples, 0.33%)</title><rect x="75.9678%" y="389" width="0.3254%" height="15" fill="rgb(214,192,32)" fg:x="126064" fg:w="540"/><text x="76.2178%" y="399.50"></text></g><g><title>xas_start (82 samples, 0.05%)</title><rect x="76.2438%" y="373" width="0.0494%" height="15" fill="rgb(209,36,54)" fg:x="126522" fg:w="82"/><text x="76.4938%" y="383.50"></text></g><g><title>xa_load (605 samples, 0.36%)</title><rect x="75.9322%" y="405" width="0.3646%" height="15" fill="rgb(220,10,11)" fg:x="126005" fg:w="605"/><text x="76.1822%" y="415.50"></text></g><g><title>page_cache_ra_unbounded (24,009 samples, 14.47%)</title><rect x="61.8311%" y="421" width="14.4681%" height="15" fill="rgb(221,106,17)" fg:x="102605" fg:w="24009"/><text x="62.0811%" y="431.50">page_cache_ra_unbounded</text></g><g><title>page_cache_async_ra (24,078 samples, 14.51%)</title><rect x="61.8046%" y="453" width="14.5097%" height="15" fill="rgb(251,142,44)" fg:x="102561" fg:w="24078"/><text x="62.0546%" y="463.50">page_cache_async_ra</text></g><g><title>ondemand_readahead (24,066 samples, 14.50%)</title><rect x="61.8118%" y="437" width="14.5025%" height="15" fill="rgb(238,13,15)" fg:x="102573" fg:w="24066"/><text x="62.0618%" y="447.50">ondemand_readahead</text></g><g><title>xa_load (20 samples, 0.01%)</title><rect x="76.3022%" y="421" width="0.0121%" height="15" fill="rgb(208,107,27)" fg:x="126619" fg:w="20"/><text x="76.5522%" y="431.50"></text></g><g><title>__remove_mapping (24 samples, 0.01%)</title><rect x="76.3390%" y="229" width="0.0145%" height="15" fill="rgb(205,136,37)" fg:x="126680" fg:w="24"/><text x="76.5890%" y="239.50"></text></g><g><title>shrink_lruvec (37 samples, 0.02%)</title><rect x="76.3348%" y="277" width="0.0223%" height="15" fill="rgb(250,205,27)" fg:x="126673" fg:w="37"/><text x="76.5848%" y="287.50"></text></g><g><title>shrink_inactive_list (36 samples, 0.02%)</title><rect x="76.3354%" y="261" width="0.0217%" height="15" fill="rgb(210,80,43)" fg:x="126674" fg:w="36"/><text x="76.5854%" y="271.50"></text></g><g><title>shrink_page_list (34 samples, 0.02%)</title><rect x="76.3366%" y="245" width="0.0205%" height="15" fill="rgb(247,160,36)" fg:x="126676" fg:w="34"/><text x="76.5866%" y="255.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (49 samples, 0.03%)</title><rect x="76.3300%" y="357" width="0.0295%" height="15" fill="rgb(234,13,49)" fg:x="126665" fg:w="49"/><text x="76.5800%" y="367.50"></text></g><g><title>try_to_free_pages (43 samples, 0.03%)</title><rect x="76.3336%" y="341" width="0.0259%" height="15" fill="rgb(234,122,0)" fg:x="126671" fg:w="43"/><text x="76.5836%" y="351.50"></text></g><g><title>do_try_to_free_pages (43 samples, 0.03%)</title><rect x="76.3336%" y="325" width="0.0259%" height="15" fill="rgb(207,146,38)" fg:x="126671" fg:w="43"/><text x="76.5836%" y="335.50"></text></g><g><title>shrink_node (43 samples, 0.03%)</title><rect x="76.3336%" y="309" width="0.0259%" height="15" fill="rgb(207,177,25)" fg:x="126671" fg:w="43"/><text x="76.5836%" y="319.50"></text></g><g><title>shrink_node_memcgs (41 samples, 0.02%)</title><rect x="76.3348%" y="293" width="0.0247%" height="15" fill="rgb(211,178,42)" fg:x="126673" fg:w="41"/><text x="76.5848%" y="303.50"></text></g><g><title>clear_page_erms (30 samples, 0.02%)</title><rect x="76.3631%" y="341" width="0.0181%" height="15" fill="rgb(230,69,54)" fg:x="126720" fg:w="30"/><text x="76.6131%" y="351.50"></text></g><g><title>get_page_from_freelist (41 samples, 0.02%)</title><rect x="76.3607%" y="357" width="0.0247%" height="15" fill="rgb(214,135,41)" fg:x="126716" fg:w="41"/><text x="76.6107%" y="367.50"></text></g><g><title>__alloc_pages (97 samples, 0.06%)</title><rect x="76.3276%" y="373" width="0.0585%" height="15" fill="rgb(237,67,25)" fg:x="126661" fg:w="97"/><text x="76.5776%" y="383.50"></text></g><g><title>__page_cache_alloc (102 samples, 0.06%)</title><rect x="76.3257%" y="405" width="0.0615%" height="15" fill="rgb(222,189,50)" fg:x="126658" fg:w="102"/><text x="76.5757%" y="415.50"></text></g><g><title>alloc_pages (101 samples, 0.06%)</title><rect x="76.3264%" y="389" width="0.0609%" height="15" fill="rgb(245,148,34)" fg:x="126659" fg:w="101"/><text x="76.5764%" y="399.50"></text></g><g><title>__add_to_page_cache_locked (49 samples, 0.03%)</title><rect x="76.3884%" y="389" width="0.0295%" height="15" fill="rgb(222,29,6)" fg:x="126762" fg:w="49"/><text x="76.6384%" y="399.50"></text></g><g><title>mem_cgroup_flush_stats (18 samples, 0.01%)</title><rect x="76.4324%" y="373" width="0.0108%" height="15" fill="rgb(221,189,43)" fg:x="126835" fg:w="18"/><text x="76.6824%" y="383.50"></text></g><g><title>__mem_cgroup_flush_stats (18 samples, 0.01%)</title><rect x="76.4324%" y="357" width="0.0108%" height="15" fill="rgb(207,36,27)" fg:x="126835" fg:w="18"/><text x="76.6824%" y="367.50"></text></g><g><title>cgroup_rstat_flush_irqsafe (17 samples, 0.01%)</title><rect x="76.4330%" y="341" width="0.0102%" height="15" fill="rgb(217,90,24)" fg:x="126836" fg:w="17"/><text x="76.6830%" y="351.50"></text></g><g><title>add_to_page_cache_lru (96 samples, 0.06%)</title><rect x="76.3872%" y="405" width="0.0579%" height="15" fill="rgb(224,66,35)" fg:x="126760" fg:w="96"/><text x="76.6372%" y="415.50"></text></g><g><title>workingset_refault (28 samples, 0.02%)</title><rect x="76.4282%" y="389" width="0.0169%" height="15" fill="rgb(221,13,50)" fg:x="126828" fg:w="28"/><text x="76.6782%" y="399.50"></text></g><g><title>__domain_mapping (32 samples, 0.02%)</title><rect x="76.4637%" y="149" width="0.0193%" height="15" fill="rgb(236,68,49)" fg:x="126887" fg:w="32"/><text x="76.7137%" y="159.50"></text></g><g><title>__iommu_map (37 samples, 0.02%)</title><rect x="76.4625%" y="181" width="0.0223%" height="15" fill="rgb(229,146,28)" fg:x="126885" fg:w="37"/><text x="76.7125%" y="191.50"></text></g><g><title>intel_iommu_map_pages (36 samples, 0.02%)</title><rect x="76.4631%" y="165" width="0.0217%" height="15" fill="rgb(225,31,38)" fg:x="126886" fg:w="36"/><text x="76.7131%" y="175.50"></text></g><g><title>dma_map_page_attrs (68 samples, 0.04%)</title><rect x="76.4565%" y="261" width="0.0410%" height="15" fill="rgb(250,208,3)" fg:x="126875" fg:w="68"/><text x="76.7065%" y="271.50"></text></g><g><title>iommu_dma_map_page (67 samples, 0.04%)</title><rect x="76.4571%" y="245" width="0.0404%" height="15" fill="rgb(246,54,23)" fg:x="126876" fg:w="67"/><text x="76.7071%" y="255.50"></text></g><g><title>__iommu_dma_map_swiotlb.constprop.0 (64 samples, 0.04%)</title><rect x="76.4589%" y="229" width="0.0386%" height="15" fill="rgb(243,76,11)" fg:x="126879" fg:w="64"/><text x="76.7089%" y="239.50"></text></g><g><title>__iommu_dma_map (64 samples, 0.04%)</title><rect x="76.4589%" y="213" width="0.0386%" height="15" fill="rgb(245,21,50)" fg:x="126879" fg:w="64"/><text x="76.7089%" y="223.50"></text></g><g><title>iommu_map_atomic (58 samples, 0.03%)</title><rect x="76.4625%" y="197" width="0.0350%" height="15" fill="rgb(228,9,43)" fg:x="126885" fg:w="58"/><text x="76.7125%" y="207.50"></text></g><g><title>intel_iommu_iotlb_sync_map (20 samples, 0.01%)</title><rect x="76.4854%" y="181" width="0.0121%" height="15" fill="rgb(208,100,47)" fg:x="126923" fg:w="20"/><text x="76.7354%" y="191.50"></text></g><g><title>nvme_map_data (76 samples, 0.05%)</title><rect x="76.4553%" y="277" width="0.0458%" height="15" fill="rgb(232,26,8)" fg:x="126873" fg:w="76"/><text x="76.7053%" y="287.50"></text></g><g><title>nvme_queue_rq (86 samples, 0.05%)</title><rect x="76.4517%" y="293" width="0.0518%" height="15" fill="rgb(216,166,38)" fg:x="126867" fg:w="86"/><text x="76.7017%" y="303.50"></text></g><g><title>blk_mq_flush_plug_list (90 samples, 0.05%)</title><rect x="76.4499%" y="357" width="0.0542%" height="15" fill="rgb(251,202,51)" fg:x="126864" fg:w="90"/><text x="76.6999%" y="367.50"></text></g><g><title>blk_mq_sched_insert_requests (90 samples, 0.05%)</title><rect x="76.4499%" y="341" width="0.0542%" height="15" fill="rgb(254,216,34)" fg:x="126864" fg:w="90"/><text x="76.6999%" y="351.50"></text></g><g><title>blk_mq_try_issue_list_directly (89 samples, 0.05%)</title><rect x="76.4505%" y="325" width="0.0536%" height="15" fill="rgb(251,32,27)" fg:x="126865" fg:w="89"/><text x="76.7005%" y="335.50"></text></g><g><title>__blk_mq_try_issue_directly (88 samples, 0.05%)</title><rect x="76.4511%" y="309" width="0.0530%" height="15" fill="rgb(208,127,28)" fg:x="126866" fg:w="88"/><text x="76.7011%" y="319.50"></text></g><g><title>blk_finish_plug (92 samples, 0.06%)</title><rect x="76.4493%" y="389" width="0.0554%" height="15" fill="rgb(224,137,22)" fg:x="126863" fg:w="92"/><text x="76.6993%" y="399.50"></text></g><g><title>blk_flush_plug_list (91 samples, 0.05%)</title><rect x="76.4499%" y="373" width="0.0548%" height="15" fill="rgb(254,70,32)" fg:x="126864" fg:w="91"/><text x="76.6999%" y="383.50"></text></g><g><title>__es_insert_extent (22 samples, 0.01%)</title><rect x="76.5349%" y="325" width="0.0133%" height="15" fill="rgb(229,75,37)" fg:x="127005" fg:w="22"/><text x="76.7849%" y="335.50"></text></g><g><title>ext4_es_insert_extent (59 samples, 0.04%)</title><rect x="76.5343%" y="341" width="0.0356%" height="15" fill="rgb(252,64,23)" fg:x="127004" fg:w="59"/><text x="76.7843%" y="351.50"></text></g><g><title>ext4_es_lookup_extent (19 samples, 0.01%)</title><rect x="76.5698%" y="341" width="0.0114%" height="15" fill="rgb(232,162,48)" fg:x="127063" fg:w="19"/><text x="76.8198%" y="351.50"></text></g><g><title>ext4_ext_map_blocks (23 samples, 0.01%)</title><rect x="76.5813%" y="341" width="0.0139%" height="15" fill="rgb(246,160,12)" fg:x="127082" fg:w="23"/><text x="76.8313%" y="351.50"></text></g><g><title>ext4_map_blocks (125 samples, 0.08%)</title><rect x="76.5204%" y="357" width="0.0753%" height="15" fill="rgb(247,166,0)" fg:x="126981" fg:w="125"/><text x="76.7704%" y="367.50"></text></g><g><title>blk_mq_submit_bio (24 samples, 0.01%)</title><rect x="76.5975%" y="309" width="0.0145%" height="15" fill="rgb(249,219,21)" fg:x="127109" fg:w="24"/><text x="76.8475%" y="319.50"></text></g><g><title>__submit_bio (35 samples, 0.02%)</title><rect x="76.5975%" y="325" width="0.0211%" height="15" fill="rgb(205,209,3)" fg:x="127109" fg:w="35"/><text x="76.8475%" y="335.50"></text></g><g><title>submit_bio (38 samples, 0.02%)</title><rect x="76.5963%" y="357" width="0.0229%" height="15" fill="rgb(243,44,1)" fg:x="127107" fg:w="38"/><text x="76.8463%" y="367.50"></text></g><g><title>submit_bio_noacct (37 samples, 0.02%)</title><rect x="76.5969%" y="341" width="0.0223%" height="15" fill="rgb(206,159,16)" fg:x="127108" fg:w="37"/><text x="76.8469%" y="351.50"></text></g><g><title>read_pages (292 samples, 0.18%)</title><rect x="76.4463%" y="405" width="0.1760%" height="15" fill="rgb(244,77,30)" fg:x="126858" fg:w="292"/><text x="76.6963%" y="415.50"></text></g><g><title>ext4_readahead (195 samples, 0.12%)</title><rect x="76.5047%" y="389" width="0.1175%" height="15" fill="rgb(218,69,12)" fg:x="126955" fg:w="195"/><text x="76.7547%" y="399.50"></text></g><g><title>ext4_mpage_readpages (195 samples, 0.12%)</title><rect x="76.5047%" y="373" width="0.1175%" height="15" fill="rgb(212,87,7)" fg:x="126955" fg:w="195"/><text x="76.7547%" y="383.50"></text></g><g><title>page_cache_ra_unbounded (549 samples, 0.33%)</title><rect x="76.3149%" y="421" width="0.3308%" height="15" fill="rgb(245,114,25)" fg:x="126640" fg:w="549"/><text x="76.5649%" y="431.50"></text></g><g><title>xa_load (39 samples, 0.02%)</title><rect x="76.6222%" y="405" width="0.0235%" height="15" fill="rgb(210,61,42)" fg:x="127150" fg:w="39"/><text x="76.8722%" y="415.50"></text></g><g><title>xas_load (33 samples, 0.02%)</title><rect x="76.6258%" y="389" width="0.0199%" height="15" fill="rgb(211,52,33)" fg:x="127156" fg:w="33"/><text x="76.8758%" y="399.50"></text></g><g><title>filemap_get_pages (25,356 samples, 15.28%)</title><rect x="61.3671%" y="469" width="15.2799%" height="15" fill="rgb(234,58,33)" fg:x="101835" fg:w="25356"/><text x="61.6171%" y="479.50">filemap_get_pages</text></g><g><title>page_cache_sync_ra (552 samples, 0.33%)</title><rect x="76.3143%" y="453" width="0.3326%" height="15" fill="rgb(220,115,36)" fg:x="126639" fg:w="552"/><text x="76.5643%" y="463.50"></text></g><g><title>ondemand_readahead (552 samples, 0.33%)</title><rect x="76.3143%" y="437" width="0.3326%" height="15" fill="rgb(243,153,54)" fg:x="126639" fg:w="552"/><text x="76.5643%" y="447.50"></text></g><g><title>mark_page_accessed (2,223 samples, 1.34%)</title><rect x="76.6469%" y="469" width="1.3396%" height="15" fill="rgb(251,47,18)" fg:x="127191" fg:w="2223"/><text x="76.8969%" y="479.50"></text></g><g><title>filemap_read (40,335 samples, 24.31%)</title><rect x="53.6820%" y="485" width="24.3064%" height="15" fill="rgb(242,102,42)" fg:x="89082" fg:w="40335"/><text x="53.9320%" y="495.50">filemap_read</text></g><g><title>__x64_sys_read (40,364 samples, 24.32%)</title><rect x="53.6699%" y="581" width="24.3239%" height="15" fill="rgb(234,31,38)" fg:x="89062" fg:w="40364"/><text x="53.9199%" y="591.50">__x64_sys_read</text></g><g><title>ksys_read (40,364 samples, 24.32%)</title><rect x="53.6699%" y="565" width="24.3239%" height="15" fill="rgb(221,117,51)" fg:x="89062" fg:w="40364"/><text x="53.9199%" y="575.50">ksys_read</text></g><g><title>vfs_read (40,363 samples, 24.32%)</title><rect x="53.6705%" y="549" width="24.3233%" height="15" fill="rgb(212,20,18)" fg:x="89063" fg:w="40363"/><text x="53.9205%" y="559.50">vfs_read</text></g><g><title>new_sync_read (40,363 samples, 24.32%)</title><rect x="53.6705%" y="533" width="24.3233%" height="15" fill="rgb(245,133,36)" fg:x="89063" fg:w="40363"/><text x="53.9205%" y="543.50">new_sync_read</text></g><g><title>ext4_file_read_iter (40,363 samples, 24.32%)</title><rect x="53.6705%" y="517" width="24.3233%" height="15" fill="rgb(212,6,19)" fg:x="89063" fg:w="40363"/><text x="53.9205%" y="527.50">ext4_file_read_iter</text></g><g><title>generic_file_read_iter (40,363 samples, 24.32%)</title><rect x="53.6705%" y="501" width="24.3233%" height="15" fill="rgb(218,1,36)" fg:x="89063" fg:w="40363"/><text x="53.9205%" y="511.50">generic_file_read_iter</text></g><g><title>entry_SYSCALL_64_after_hwframe (40,365 samples, 24.32%)</title><rect x="53.6699%" y="613" width="24.3245%" height="15" fill="rgb(246,84,54)" fg:x="89062" fg:w="40365"/><text x="53.9199%" y="623.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (40,365 samples, 24.32%)</title><rect x="53.6699%" y="597" width="24.3245%" height="15" fill="rgb(242,110,6)" fg:x="89062" fg:w="40365"/><text x="53.9199%" y="607.50">do_syscall_64</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (40,371 samples, 24.33%)</title><rect x="53.6681%" y="709" width="24.3281%" height="15" fill="rgb(214,47,5)" fg:x="89059" fg:w="40371"/><text x="53.9181%" y="719.50">&lt;std::io::buffered::bufreader::BufReade..</text></g><g><title>std::io::default_read_exact (40,371 samples, 24.33%)</title><rect x="53.6681%" y="693" width="24.3281%" height="15" fill="rgb(218,159,25)" fg:x="89059" fg:w="40371"/><text x="53.9181%" y="703.50">std::io::default_read_exact</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (40,371 samples, 24.33%)</title><rect x="53.6681%" y="677" width="24.3281%" height="15" fill="rgb(215,211,28)" fg:x="89059" fg:w="40371"/><text x="53.9181%" y="687.50">&lt;std::io::buffered::bufreader::BufReade..</text></g><g><title>std::sys::unix::fd::FileDesc::read (40,370 samples, 24.33%)</title><rect x="53.6687%" y="661" width="24.3275%" height="15" fill="rgb(238,59,32)" fg:x="89060" fg:w="40370"/><text x="53.9187%" y="671.50">std::sys::unix::fd::FileDesc::read</text></g><g><title>__GI___libc_read (40,370 samples, 24.33%)</title><rect x="53.6687%" y="645" width="24.3275%" height="15" fill="rgb(226,82,3)" fg:x="89060" fg:w="40370"/><text x="53.9187%" y="655.50">__GI___libc_read</text></g><g><title>__GI___libc_read (40,370 samples, 24.33%)</title><rect x="53.6687%" y="629" width="24.3275%" height="15" fill="rgb(240,164,32)" fg:x="89060" fg:w="40370"/><text x="53.9187%" y="639.50">__GI___libc_read</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (884 samples, 0.53%)</title><rect x="77.9962%" y="709" width="0.5327%" height="15" fill="rgb(232,46,7)" fg:x="129430" fg:w="884"/><text x="78.2462%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (884 samples, 0.53%)</title><rect x="77.9962%" y="693" width="0.5327%" height="15" fill="rgb(229,129,53)" fg:x="129430" fg:w="884"/><text x="78.2462%" y="703.50"></text></g><g><title>core::ptr::write (884 samples, 0.53%)</title><rect x="77.9962%" y="677" width="0.5327%" height="15" fill="rgb(234,188,29)" fg:x="129430" fg:w="884"/><text x="78.2462%" y="687.50"></text></g><g><title>__memset_avx2_unaligned_erms (884 samples, 0.53%)</title><rect x="77.9962%" y="661" width="0.5327%" height="15" fill="rgb(246,141,4)" fg:x="129430" fg:w="884"/><text x="78.2462%" y="671.50"></text></g><g><title>__clone3 (41,269 samples, 24.87%)</title><rect x="53.6681%" y="933" width="24.8692%" height="15" fill="rgb(229,23,39)" fg:x="89059" fg:w="41269"/><text x="53.9181%" y="943.50">__clone3</text></g><g><title>start_thread (41,269 samples, 24.87%)</title><rect x="53.6681%" y="917" width="24.8692%" height="15" fill="rgb(206,12,3)" fg:x="89059" fg:w="41269"/><text x="53.9181%" y="927.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (41,269 samples, 24.87%)</title><rect x="53.6681%" y="901" width="24.8692%" height="15" fill="rgb(252,226,20)" fg:x="89059" fg:w="41269"/><text x="53.9181%" y="911.50">std::sys::unix::thread::Thread::new::thr..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (41,269 samples, 24.87%)</title><rect x="53.6681%" y="885" width="24.8692%" height="15" fill="rgb(216,123,35)" fg:x="89059" fg:w="41269"/><text x="53.9181%" y="895.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::fu..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (41,269 samples, 24.87%)</title><rect x="53.6681%" y="869" width="24.8692%" height="15" fill="rgb(212,68,40)" fg:x="89059" fg:w="41269"/><text x="53.9181%" y="879.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::fu..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (41,269 samples, 24.87%)</title><rect x="53.6681%" y="853" width="24.8692%" height="15" fill="rgb(254,125,32)" fg:x="89059" fg:w="41269"/><text x="53.9181%" y="863.50">core::ops::function::FnOnce::call_once{{..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (41,269 samples, 24.87%)</title><rect x="53.6681%" y="837" width="24.8692%" height="15" fill="rgb(253,97,22)" fg:x="89059" fg:w="41269"/><text x="53.9181%" y="847.50">std::thread::Builder::spawn_unchecked_::..</text></g><g><title>std::panic::catch_unwind (41,269 samples, 24.87%)</title><rect x="53.6681%" y="821" width="24.8692%" height="15" fill="rgb(241,101,14)" fg:x="89059" fg:w="41269"/><text x="53.9181%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (41,269 samples, 24.87%)</title><rect x="53.6681%" y="805" width="24.8692%" height="15" fill="rgb(238,103,29)" fg:x="89059" fg:w="41269"/><text x="53.9181%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (41,269 samples, 24.87%)</title><rect x="53.6681%" y="789" width="24.8692%" height="15" fill="rgb(233,195,47)" fg:x="89059" fg:w="41269"/><text x="53.9181%" y="799.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (41,269 samples, 24.87%)</title><rect x="53.6681%" y="773" width="24.8692%" height="15" fill="rgb(246,218,30)" fg:x="89059" fg:w="41269"/><text x="53.9181%" y="783.50">&lt;core::panic::unwind_safe::AssertUnwindS..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (41,269 samples, 24.87%)</title><rect x="53.6681%" y="757" width="24.8692%" height="15" fill="rgb(219,145,47)" fg:x="89059" fg:w="41269"/><text x="53.9181%" y="767.50">std::thread::Builder::spawn_unchecked_::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (41,269 samples, 24.87%)</title><rect x="53.6681%" y="741" width="24.8692%" height="15" fill="rgb(243,12,26)" fg:x="89059" fg:w="41269"/><text x="53.9181%" y="751.50">std::sys_common::backtrace::__rust_begin..</text></g><g><title>hprof_slurp::prefetch_reader::PrefetchReader::start::{{closure}} (41,269 samples, 24.87%)</title><rect x="53.6681%" y="725" width="24.8692%" height="15" fill="rgb(214,87,16)" fg:x="89059" fg:w="41269"/><text x="53.9181%" y="735.50">hprof_slurp::prefetch_reader::PrefetchRe..</text></g><g><title>asm_sysvec_apic_timer_interrupt (987 samples, 0.59%)</title><rect x="78.5506%" y="933" width="0.5948%" height="15" fill="rgb(208,99,42)" fg:x="130350" fg:w="987"/><text x="78.8006%" y="943.50"></text></g><g><title>hprof-prefetch (42,322 samples, 25.50%)</title><rect x="53.6663%" y="949" width="25.5038%" height="15" fill="rgb(253,99,2)" fg:x="89056" fg:w="42322"/><text x="53.9163%" y="959.50">hprof-prefetch</text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.02%)</title><rect x="79.1502%" y="933" width="0.0199%" height="15" fill="rgb(220,168,23)" fg:x="131345" fg:w="33"/><text x="79.4002%" y="943.50"></text></g><g><title>do_syscall_64 (33 samples, 0.02%)</title><rect x="79.1502%" y="917" width="0.0199%" height="15" fill="rgb(242,38,24)" fg:x="131345" fg:w="33"/><text x="79.4002%" y="927.50"></text></g><g><title>__x64_sys_read (33 samples, 0.02%)</title><rect x="79.1502%" y="901" width="0.0199%" height="15" fill="rgb(225,182,9)" fg:x="131345" fg:w="33"/><text x="79.4002%" y="911.50"></text></g><g><title>ksys_read (33 samples, 0.02%)</title><rect x="79.1502%" y="885" width="0.0199%" height="15" fill="rgb(243,178,37)" fg:x="131345" fg:w="33"/><text x="79.4002%" y="895.50"></text></g><g><title>vfs_read (33 samples, 0.02%)</title><rect x="79.1502%" y="869" width="0.0199%" height="15" fill="rgb(232,139,19)" fg:x="131345" fg:w="33"/><text x="79.4002%" y="879.50"></text></g><g><title>new_sync_read (33 samples, 0.02%)</title><rect x="79.1502%" y="853" width="0.0199%" height="15" fill="rgb(225,201,24)" fg:x="131345" fg:w="33"/><text x="79.4002%" y="863.50"></text></g><g><title>ext4_file_read_iter (33 samples, 0.02%)</title><rect x="79.1502%" y="837" width="0.0199%" height="15" fill="rgb(221,47,46)" fg:x="131345" fg:w="33"/><text x="79.4002%" y="847.50"></text></g><g><title>generic_file_read_iter (33 samples, 0.02%)</title><rect x="79.1502%" y="821" width="0.0199%" height="15" fill="rgb(249,23,13)" fg:x="131345" fg:w="33"/><text x="79.4002%" y="831.50"></text></g><g><title>filemap_read (33 samples, 0.02%)</title><rect x="79.1502%" y="805" width="0.0199%" height="15" fill="rgb(219,9,5)" fg:x="131345" fg:w="33"/><text x="79.4002%" y="815.50"></text></g><g><title>[[heap]] (25 samples, 0.02%)</title><rect x="79.1701%" y="933" width="0.0151%" height="15" fill="rgb(254,171,16)" fg:x="131378" fg:w="25"/><text x="79.4201%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (24 samples, 0.01%)</title><rect x="79.1707%" y="917" width="0.0145%" height="15" fill="rgb(230,171,20)" fg:x="131379" fg:w="24"/><text x="79.4207%" y="927.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (24 samples, 0.01%)</title><rect x="79.1851%" y="917" width="0.0145%" height="15" fill="rgb(210,71,41)" fg:x="131403" fg:w="24"/><text x="79.4351%" y="927.50"></text></g><g><title>[anon] (25 samples, 0.02%)</title><rect x="79.1851%" y="933" width="0.0151%" height="15" fill="rgb(206,173,20)" fg:x="131403" fg:w="25"/><text x="79.4351%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (622 samples, 0.37%)</title><rect x="79.2008%" y="917" width="0.3748%" height="15" fill="rgb(233,88,34)" fg:x="131429" fg:w="622"/><text x="79.4508%" y="927.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (18 samples, 0.01%)</title><rect x="79.5756%" y="917" width="0.0108%" height="15" fill="rgb(223,209,46)" fg:x="132051" fg:w="18"/><text x="79.8256%" y="927.50"></text></g><g><title>[unknown] (1,292 samples, 0.78%)</title><rect x="79.2008%" y="933" width="0.7786%" height="15" fill="rgb(250,43,18)" fg:x="131429" fg:w="1292"/><text x="79.4508%" y="943.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (640 samples, 0.39%)</title><rect x="79.5937%" y="917" width="0.3857%" height="15" fill="rgb(208,13,10)" fg:x="132081" fg:w="640"/><text x="79.8437%" y="927.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (640 samples, 0.39%)</title><rect x="79.5937%" y="901" width="0.3857%" height="15" fill="rgb(212,200,36)" fg:x="132081" fg:w="640"/><text x="79.8437%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (640 samples, 0.39%)</title><rect x="79.5937%" y="885" width="0.3857%" height="15" fill="rgb(225,90,30)" fg:x="132081" fg:w="640"/><text x="79.8437%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (640 samples, 0.39%)</title><rect x="79.5937%" y="869" width="0.3857%" height="15" fill="rgb(236,182,39)" fg:x="132081" fg:w="640"/><text x="79.8437%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (640 samples, 0.39%)</title><rect x="79.5937%" y="853" width="0.3857%" height="15" fill="rgb(212,144,35)" fg:x="132081" fg:w="640"/><text x="79.8437%" y="863.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (24 samples, 0.01%)</title><rect x="85.3511%" y="645" width="0.0145%" height="15" fill="rgb(228,63,44)" fg:x="141635" fg:w="24"/><text x="85.6011%" y="655.50"></text></g><g><title>sysvec_apic_timer_interrupt (24 samples, 0.01%)</title><rect x="85.3511%" y="629" width="0.0145%" height="15" fill="rgb(228,109,6)" fg:x="141635" fg:w="24"/><text x="85.6011%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::gc_record::GcRecord&gt; (1,094 samples, 0.66%)</title><rect x="85.3655%" y="645" width="0.6593%" height="15" fill="rgb(238,117,24)" fg:x="141659" fg:w="1094"/><text x="85.6155%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (10,031 samples, 6.04%)</title><rect x="79.9806%" y="709" width="6.0448%" height="15" fill="rgb(242,26,26)" fg:x="132723" fg:w="10031"/><text x="80.2306%" y="719.50">alloc::v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (10,031 samples, 6.04%)</title><rect x="79.9806%" y="693" width="6.0448%" height="15" fill="rgb(221,92,48)" fg:x="132723" fg:w="10031"/><text x="80.2306%" y="703.50">alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (10,031 samples, 6.04%)</title><rect x="79.9806%" y="677" width="6.0448%" height="15" fill="rgb(209,209,32)" fg:x="132723" fg:w="10031"/><text x="80.2306%" y="687.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (9,400 samples, 5.66%)</title><rect x="80.3608%" y="661" width="5.6646%" height="15" fill="rgb(221,70,22)" fg:x="133354" fg:w="9400"/><text x="80.6108%" y="671.50">core::p..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="86.0254%" y="613" width="0.0163%" height="15" fill="rgb(248,145,5)" fg:x="142754" fg:w="27"/><text x="86.2754%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (27 samples, 0.02%)</title><rect x="86.0254%" y="597" width="0.0163%" height="15" fill="rgb(226,116,26)" fg:x="142754" fg:w="27"/><text x="86.2754%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (27 samples, 0.02%)</title><rect x="86.0254%" y="581" width="0.0163%" height="15" fill="rgb(244,5,17)" fg:x="142754" fg:w="27"/><text x="86.2754%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (27 samples, 0.02%)</title><rect x="86.0254%" y="565" width="0.0163%" height="15" fill="rgb(252,159,33)" fg:x="142754" fg:w="27"/><text x="86.2754%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,alloc::string::String)&gt; (27 samples, 0.02%)</title><rect x="86.0254%" y="549" width="0.0163%" height="15" fill="rgb(206,71,0)" fg:x="142754" fg:w="27"/><text x="86.2754%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (27 samples, 0.02%)</title><rect x="86.0254%" y="533" width="0.0163%" height="15" fill="rgb(233,118,54)" fg:x="142754" fg:w="27"/><text x="86.2754%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (27 samples, 0.02%)</title><rect x="86.0254%" y="517" width="0.0163%" height="15" fill="rgb(234,83,48)" fg:x="142754" fg:w="27"/><text x="86.2754%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (27 samples, 0.02%)</title><rect x="86.0254%" y="501" width="0.0163%" height="15" fill="rgb(228,3,54)" fg:x="142754" fg:w="27"/><text x="86.2754%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.02%)</title><rect x="86.0254%" y="485" width="0.0163%" height="15" fill="rgb(226,155,13)" fg:x="142754" fg:w="27"/><text x="86.2754%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.02%)</title><rect x="86.0266%" y="469" width="0.0151%" height="15" fill="rgb(241,28,37)" fg:x="142756" fg:w="25"/><text x="86.2766%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.02%)</title><rect x="86.0266%" y="453" width="0.0151%" height="15" fill="rgb(233,93,10)" fg:x="142756" fg:w="25"/><text x="86.2766%" y="463.50"></text></g><g><title>__GI___libc_free (24 samples, 0.01%)</title><rect x="86.0272%" y="437" width="0.0145%" height="15" fill="rgb(225,113,19)" fg:x="142757" fg:w="24"/><text x="86.2772%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;ahash::hash_map::AHashMap&lt;u64,alloc::string::String&gt;&gt; (28 samples, 0.02%)</title><rect x="86.0254%" y="677" width="0.0169%" height="15" fill="rgb(241,2,18)" fg:x="142754" fg:w="28"/><text x="86.2754%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (28 samples, 0.02%)</title><rect x="86.0254%" y="661" width="0.0169%" height="15" fill="rgb(228,207,21)" fg:x="142754" fg:w="28"/><text x="86.2754%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (28 samples, 0.02%)</title><rect x="86.0254%" y="645" width="0.0169%" height="15" fill="rgb(213,211,35)" fg:x="142754" fg:w="28"/><text x="86.2754%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (28 samples, 0.02%)</title><rect x="86.0254%" y="629" width="0.0169%" height="15" fill="rgb(209,83,10)" fg:x="142754" fg:w="28"/><text x="86.2754%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder::start::{{closure}}&gt; (43 samples, 0.03%)</title><rect x="86.0254%" y="709" width="0.0259%" height="15" fill="rgb(209,164,1)" fg:x="142754" fg:w="43"/><text x="86.2754%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder&gt; (43 samples, 0.03%)</title><rect x="86.0254%" y="693" width="0.0259%" height="15" fill="rgb(213,184,43)" fg:x="142754" fg:w="43"/><text x="86.2754%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (372 samples, 0.22%)</title><rect x="86.0513%" y="677" width="0.2242%" height="15" fill="rgb(231,61,34)" fg:x="142797" fg:w="372"/><text x="86.3013%" y="687.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (371 samples, 0.22%)</title><rect x="86.0519%" y="661" width="0.2236%" height="15" fill="rgb(235,75,3)" fg:x="142798" fg:w="371"/><text x="86.3019%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (371 samples, 0.22%)</title><rect x="86.0519%" y="645" width="0.2236%" height="15" fill="rgb(220,106,47)" fg:x="142798" fg:w="371"/><text x="86.3019%" y="655.50"></text></g><g><title>ahash::hash_map::AHashMap&lt;K,V,S&gt;::insert (19 samples, 0.01%)</title><rect x="92.6083%" y="661" width="0.0114%" height="15" fill="rgb(210,196,33)" fg:x="153678" fg:w="19"/><text x="92.8583%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (19 samples, 0.01%)</title><rect x="92.6083%" y="645" width="0.0114%" height="15" fill="rgb(229,154,42)" fg:x="153678" fg:w="19"/><text x="92.8583%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (19 samples, 0.01%)</title><rect x="92.6083%" y="629" width="0.0114%" height="15" fill="rgb(228,114,26)" fg:x="153678" fg:w="19"/><text x="92.8583%" y="639.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (25 samples, 0.02%)</title><rect x="92.6198%" y="661" width="0.0151%" height="15" fill="rgb(208,144,1)" fg:x="153697" fg:w="25"/><text x="92.8698%" y="671.50"></text></g><g><title>sysvec_apic_timer_interrupt (25 samples, 0.02%)</title><rect x="92.6198%" y="645" width="0.0151%" height="15" fill="rgb(239,112,37)" fg:x="153697" fg:w="25"/><text x="92.8698%" y="655.50"></text></g><g><title>hprof_slurp::result_recorder::ArrayCounter::add_elements_from_array (46 samples, 0.03%)</title><rect x="92.6349%" y="661" width="0.0277%" height="15" fill="rgb(210,96,50)" fg:x="153722" fg:w="46"/><text x="92.8849%" y="671.50"></text></g><g><title>hprof_slurp::result_recorder::ClassInstanceCounter::add_instance (858 samples, 0.52%)</title><rect x="92.6626%" y="661" width="0.5170%" height="15" fill="rgb(222,178,2)" fg:x="153768" fg:w="858"/><text x="92.9126%" y="671.50"></text></g><g><title>ahash::operations::folded_multiply (1,127 samples, 0.68%)</title><rect x="93.2086%" y="581" width="0.6791%" height="15" fill="rgb(226,74,18)" fg:x="154674" fg:w="1127"/><text x="93.4586%" y="591.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (706 samples, 0.43%)</title><rect x="93.4623%" y="565" width="0.4254%" height="15" fill="rgb(225,67,54)" fg:x="155095" fg:w="706"/><text x="93.7123%" y="575.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1,485 samples, 0.89%)</title><rect x="93.2086%" y="597" width="0.8949%" height="15" fill="rgb(251,92,32)" fg:x="154674" fg:w="1485"/><text x="93.4586%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (358 samples, 0.22%)</title><rect x="93.8877%" y="581" width="0.2157%" height="15" fill="rgb(228,149,22)" fg:x="155801" fg:w="358"/><text x="94.1377%" y="591.50"></text></g><g><title>&lt;hprof_slurp::parser::gc_record::FieldType as core::hash::Hash&gt;::hash (30 samples, 0.02%)</title><rect x="94.1034%" y="581" width="0.0181%" height="15" fill="rgb(243,54,13)" fg:x="156159" fg:w="30"/><text x="94.3534%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (29 samples, 0.02%)</title><rect x="94.1040%" y="565" width="0.0175%" height="15" fill="rgb(243,180,28)" fg:x="156160" fg:w="29"/><text x="94.3540%" y="575.50"></text></g><g><title>core::hash::Hasher::write_isize (29 samples, 0.02%)</title><rect x="94.1040%" y="549" width="0.0175%" height="15" fill="rgb(208,167,24)" fg:x="156160" fg:w="29"/><text x="94.3540%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (29 samples, 0.02%)</title><rect x="94.1040%" y="533" width="0.0175%" height="15" fill="rgb(245,73,45)" fg:x="156160" fg:w="29"/><text x="94.3540%" y="543.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (29 samples, 0.02%)</title><rect x="94.1040%" y="517" width="0.0175%" height="15" fill="rgb(237,203,48)" fg:x="156160" fg:w="29"/><text x="94.3540%" y="527.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (29 samples, 0.02%)</title><rect x="94.1040%" y="501" width="0.0175%" height="15" fill="rgb(211,197,16)" fg:x="156160" fg:w="29"/><text x="94.3540%" y="511.50"></text></g><g><title>hashbrown::map::make_insert_hash (2,229 samples, 1.34%)</title><rect x="93.2086%" y="629" width="1.3432%" height="15" fill="rgb(243,99,51)" fg:x="154674" fg:w="2229"/><text x="93.4586%" y="639.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,229 samples, 1.34%)</title><rect x="93.2086%" y="613" width="1.3432%" height="15" fill="rgb(215,123,29)" fg:x="154674" fg:w="2229"/><text x="93.4586%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (744 samples, 0.45%)</title><rect x="94.1034%" y="597" width="0.4483%" height="15" fill="rgb(239,186,37)" fg:x="156159" fg:w="744"/><text x="94.3534%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (714 samples, 0.43%)</title><rect x="94.1215%" y="581" width="0.4303%" height="15" fill="rgb(252,136,39)" fg:x="156189" fg:w="714"/><text x="94.3715%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (714 samples, 0.43%)</title><rect x="94.1215%" y="565" width="0.4303%" height="15" fill="rgb(223,213,32)" fg:x="156189" fg:w="714"/><text x="94.3715%" y="575.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (714 samples, 0.43%)</title><rect x="94.1215%" y="549" width="0.4303%" height="15" fill="rgb(233,115,5)" fg:x="156189" fg:w="714"/><text x="94.3715%" y="559.50"></text></g><g><title>ahash::operations::folded_multiply (708 samples, 0.43%)</title><rect x="94.1251%" y="533" width="0.4266%" height="15" fill="rgb(207,226,44)" fg:x="156195" fg:w="708"/><text x="94.3751%" y="543.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (661 samples, 0.40%)</title><rect x="94.1534%" y="517" width="0.3983%" height="15" fill="rgb(208,126,0)" fg:x="156242" fg:w="661"/><text x="94.4034%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,691 samples, 1.02%)</title><rect x="94.8880%" y="597" width="1.0190%" height="15" fill="rgb(244,66,21)" fg:x="157461" fg:w="1691"/><text x="95.1380%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,112 samples, 0.67%)</title><rect x="95.2369%" y="581" width="0.6701%" height="15" fill="rgb(222,97,12)" fg:x="158040" fg:w="1112"/><text x="95.4869%" y="591.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (20 samples, 0.01%)</title><rect x="95.9101%" y="597" width="0.0121%" height="15" fill="rgb(219,213,19)" fg:x="159157" fg:w="20"/><text x="96.1601%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (19 samples, 0.01%)</title><rect x="95.9221%" y="549" width="0.0114%" height="15" fill="rgb(252,169,30)" fg:x="159177" fg:w="19"/><text x="96.1721%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (19 samples, 0.01%)</title><rect x="95.9221%" y="533" width="0.0114%" height="15" fill="rgb(206,32,51)" fg:x="159177" fg:w="19"/><text x="96.1721%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (854 samples, 0.51%)</title><rect x="95.9221%" y="581" width="0.5146%" height="15" fill="rgb(250,172,42)" fg:x="159177" fg:w="854"/><text x="96.1721%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (854 samples, 0.51%)</title><rect x="95.9221%" y="565" width="0.5146%" height="15" fill="rgb(209,34,43)" fg:x="159177" fg:w="854"/><text x="96.1721%" y="575.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (835 samples, 0.50%)</title><rect x="95.9336%" y="549" width="0.5032%" height="15" fill="rgb(223,11,35)" fg:x="159196" fg:w="835"/><text x="96.1836%" y="559.50"></text></g><g><title>&lt;hprof_slurp::parser::gc_record::FieldType as core::cmp::PartialEq&gt;::eq (23 samples, 0.01%)</title><rect x="96.4367%" y="565" width="0.0139%" height="15" fill="rgb(251,219,26)" fg:x="160031" fg:w="23"/><text x="96.6867%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2,761 samples, 1.66%)</title><rect x="95.9221%" y="597" width="1.6638%" height="15" fill="rgb(231,119,3)" fg:x="159177" fg:w="2761"/><text x="96.1721%" y="607.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (1,907 samples, 1.15%)</title><rect x="96.4367%" y="581" width="1.1492%" height="15" fill="rgb(216,97,11)" fg:x="160031" fg:w="1907"/><text x="96.6867%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (1,884 samples, 1.14%)</title><rect x="96.4506%" y="565" width="1.1353%" height="15" fill="rgb(223,59,9)" fg:x="160054" fg:w="1884"/><text x="96.7006%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1,481 samples, 0.89%)</title><rect x="97.5859%" y="597" width="0.8925%" height="15" fill="rgb(233,93,31)" fg:x="161938" fg:w="1481"/><text x="97.8359%" y="607.50"></text></g><g><title>hashbrown::raw::h2 (664 samples, 0.40%)</title><rect x="98.4820%" y="597" width="0.4001%" height="15" fill="rgb(239,81,33)" fg:x="163425" fg:w="664"/><text x="98.7320%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (431 samples, 0.26%)</title><rect x="98.8822%" y="597" width="0.2597%" height="15" fill="rgb(213,120,34)" fg:x="164089" fg:w="431"/><text x="99.1322%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (431 samples, 0.26%)</title><rect x="98.8822%" y="581" width="0.2597%" height="15" fill="rgb(243,49,53)" fg:x="164089" fg:w="431"/><text x="99.1322%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (431 samples, 0.26%)</title><rect x="98.8822%" y="565" width="0.2597%" height="15" fill="rgb(247,216,33)" fg:x="164089" fg:w="431"/><text x="99.1322%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (979 samples, 0.59%)</title><rect x="99.1419%" y="597" width="0.5900%" height="15" fill="rgb(226,26,14)" fg:x="164520" fg:w="979"/><text x="99.3919%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (979 samples, 0.59%)</title><rect x="99.1419%" y="581" width="0.5900%" height="15" fill="rgb(215,49,53)" fg:x="164520" fg:w="979"/><text x="99.3919%" y="591.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (11,160 samples, 6.73%)</title><rect x="93.1911%" y="645" width="6.7252%" height="15" fill="rgb(245,162,40)" fg:x="154645" fg:w="11160"/><text x="93.4411%" y="655.50">hashbrown..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8,902 samples, 5.36%)</title><rect x="94.5518%" y="629" width="5.3645%" height="15" fill="rgb(229,68,17)" fg:x="156903" fg:w="8902"/><text x="94.8018%" y="639.50">hashbro..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8,902 samples, 5.36%)</title><rect x="94.5518%" y="613" width="5.3645%" height="15" fill="rgb(213,182,10)" fg:x="156903" fg:w="8902"/><text x="94.8018%" y="623.50">hashbro..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (306 samples, 0.18%)</title><rect x="99.7318%" y="597" width="0.1844%" height="15" fill="rgb(245,125,30)" fg:x="165499" fg:w="306"/><text x="99.9818%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (306 samples, 0.18%)</title><rect x="99.7318%" y="581" width="0.1844%" height="15" fill="rgb(232,202,2)" fg:x="165499" fg:w="306"/><text x="99.9818%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (306 samples, 0.18%)</title><rect x="99.7318%" y="565" width="0.1844%" height="15" fill="rgb(237,140,51)" fg:x="165499" fg:w="306"/><text x="99.9818%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (11,176 samples, 6.73%)</title><rect x="93.1838%" y="661" width="6.7348%" height="15" fill="rgb(236,157,25)" fg:x="154633" fg:w="11176"/><text x="93.4338%" y="671.50">std::coll..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (23,013 samples, 13.87%)</title><rect x="86.0513%" y="709" width="13.8679%" height="15" fill="rgb(219,209,0)" fg:x="142797" fg:w="23013"/><text x="86.3013%" y="719.50">hprof_slurp::result_r..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (23,013 samples, 13.87%)</title><rect x="86.0513%" y="693" width="13.8679%" height="15" fill="rgb(240,116,54)" fg:x="142797" fg:w="23013"/><text x="86.3013%" y="703.50">&lt;core::slice::iter::I..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (22,641 samples, 13.64%)</title><rect x="86.2755%" y="677" width="13.6438%" height="15" fill="rgb(216,10,36)" fg:x="143169" fg:w="22641"/><text x="86.5255%" y="687.50">hprof_slurp::result_r..</text></g><g><title>futex_wait_queue_me (17 samples, 0.01%)</title><rect x="99.9277%" y="517" width="0.0102%" height="15" fill="rgb(222,72,44)" fg:x="165824" fg:w="17"/><text x="100.1777%" y="527.50"></text></g><g><title>schedule (17 samples, 0.01%)</title><rect x="99.9277%" y="501" width="0.0102%" height="15" fill="rgb(232,159,9)" fg:x="165824" fg:w="17"/><text x="100.1777%" y="511.50"></text></g><g><title>__schedule (17 samples, 0.01%)</title><rect x="99.9277%" y="485" width="0.0102%" height="15" fill="rgb(210,39,32)" fg:x="165824" fg:w="17"/><text x="100.1777%" y="495.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (25 samples, 0.02%)</title><rect x="99.9235%" y="677" width="0.0151%" height="15" fill="rgb(216,194,45)" fg:x="165817" fg:w="25"/><text x="100.1735%" y="687.50"></text></g><g><title>std::thread::park (21 samples, 0.01%)</title><rect x="99.9259%" y="661" width="0.0127%" height="15" fill="rgb(218,18,35)" fg:x="165821" fg:w="21"/><text x="100.1759%" y="671.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (21 samples, 0.01%)</title><rect x="99.9259%" y="645" width="0.0127%" height="15" fill="rgb(207,83,51)" fg:x="165821" fg:w="21"/><text x="100.1759%" y="655.50"></text></g><g><title>std::sys::unix::futex::futex_wait (20 samples, 0.01%)</title><rect x="99.9265%" y="629" width="0.0121%" height="15" fill="rgb(225,63,43)" fg:x="165822" fg:w="20"/><text x="100.1765%" y="639.50"></text></g><g><title>syscall (20 samples, 0.01%)</title><rect x="99.9265%" y="613" width="0.0121%" height="15" fill="rgb(207,57,36)" fg:x="165822" fg:w="20"/><text x="100.1765%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19 samples, 0.01%)</title><rect x="99.9271%" y="597" width="0.0114%" height="15" fill="rgb(216,99,33)" fg:x="165823" fg:w="19"/><text x="100.1771%" y="607.50"></text></g><g><title>do_syscall_64 (19 samples, 0.01%)</title><rect x="99.9271%" y="581" width="0.0114%" height="15" fill="rgb(225,42,16)" fg:x="165823" fg:w="19"/><text x="100.1771%" y="591.50"></text></g><g><title>__x64_sys_futex (19 samples, 0.01%)</title><rect x="99.9271%" y="565" width="0.0114%" height="15" fill="rgb(220,201,45)" fg:x="165823" fg:w="19"/><text x="100.1771%" y="575.50"></text></g><g><title>do_futex (18 samples, 0.01%)</title><rect x="99.9277%" y="549" width="0.0108%" height="15" fill="rgb(225,33,4)" fg:x="165824" fg:w="18"/><text x="100.1777%" y="559.50"></text></g><g><title>futex_wait (18 samples, 0.01%)</title><rect x="99.9277%" y="533" width="0.0108%" height="15" fill="rgb(224,33,50)" fg:x="165824" fg:w="18"/><text x="100.1777%" y="543.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (27 samples, 0.02%)</title><rect x="99.9229%" y="709" width="0.0163%" height="15" fill="rgb(246,198,51)" fg:x="165816" fg:w="27"/><text x="100.1729%" y="719.50"></text></g><g><title>std::sync::mpsc::stream::Packet&lt;T&gt;::recv (26 samples, 0.02%)</title><rect x="99.9235%" y="693" width="0.0157%" height="15" fill="rgb(205,22,4)" fg:x="165817" fg:w="26"/><text x="100.1735%" y="703.50"></text></g><g><title>__clone3 (33,125 samples, 19.96%)</title><rect x="79.9794%" y="933" width="19.9616%" height="15" fill="rgb(206,3,8)" fg:x="132721" fg:w="33125"/><text x="80.2294%" y="943.50">__clone3</text></g><g><title>start_thread (33,125 samples, 19.96%)</title><rect x="79.9794%" y="917" width="19.9616%" height="15" fill="rgb(251,23,15)" fg:x="132721" fg:w="33125"/><text x="80.2294%" y="927.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (33,123 samples, 19.96%)</title><rect x="79.9806%" y="901" width="19.9603%" height="15" fill="rgb(252,88,28)" fg:x="132723" fg:w="33123"/><text x="80.2306%" y="911.50">std::sys::unix::thread::Thread:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (33,123 samples, 19.96%)</title><rect x="79.9806%" y="885" width="19.9603%" height="15" fill="rgb(212,127,14)" fg:x="132723" fg:w="33123"/><text x="80.2306%" y="895.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (33,123 samples, 19.96%)</title><rect x="79.9806%" y="869" width="19.9603%" height="15" fill="rgb(247,145,37)" fg:x="132723" fg:w="33123"/><text x="80.2306%" y="879.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (33,123 samples, 19.96%)</title><rect x="79.9806%" y="853" width="19.9603%" height="15" fill="rgb(209,117,53)" fg:x="132723" fg:w="33123"/><text x="80.2306%" y="863.50">core::ops::function::FnOnce::ca..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (33,123 samples, 19.96%)</title><rect x="79.9806%" y="837" width="19.9603%" height="15" fill="rgb(212,90,42)" fg:x="132723" fg:w="33123"/><text x="80.2306%" y="847.50">std::thread::Builder::spawn_unc..</text></g><g><title>std::panic::catch_unwind (33,123 samples, 19.96%)</title><rect x="79.9806%" y="821" width="19.9603%" height="15" fill="rgb(218,164,37)" fg:x="132723" fg:w="33123"/><text x="80.2306%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (33,123 samples, 19.96%)</title><rect x="79.9806%" y="805" width="19.9603%" height="15" fill="rgb(246,65,34)" fg:x="132723" fg:w="33123"/><text x="80.2306%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (33,123 samples, 19.96%)</title><rect x="79.9806%" y="789" width="19.9603%" height="15" fill="rgb(231,100,33)" fg:x="132723" fg:w="33123"/><text x="80.2306%" y="799.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (33,123 samples, 19.96%)</title><rect x="79.9806%" y="773" width="19.9603%" height="15" fill="rgb(228,126,14)" fg:x="132723" fg:w="33123"/><text x="80.2306%" y="783.50">&lt;core::panic::unwind_safe::Asse..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (33,123 samples, 19.96%)</title><rect x="79.9806%" y="757" width="19.9603%" height="15" fill="rgb(215,173,21)" fg:x="132723" fg:w="33123"/><text x="80.2306%" y="767.50">std::thread::Builder::spawn_unc..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (33,123 samples, 19.96%)</title><rect x="79.9806%" y="741" width="19.9603%" height="15" fill="rgb(210,6,40)" fg:x="132723" fg:w="33123"/><text x="80.2306%" y="751.50">std::sys_common::backtrace::__r..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (33,123 samples, 19.96%)</title><rect x="79.9806%" y="725" width="19.9603%" height="15" fill="rgb(212,48,18)" fg:x="132723" fg:w="33123"/><text x="80.2306%" y="735.50">hprof_slurp::result_recorder::R..</text></g><g><title>hprof-recorder (34,474 samples, 20.77%)</title><rect x="79.1701%" y="949" width="20.7745%" height="15" fill="rgb(230,214,11)" fg:x="131378" fg:w="34474"/><text x="79.4201%" y="959.50">hprof-recorder</text></g><g><title>indicatif::progress_bar::ProgressBar::set_position (23 samples, 0.01%)</title><rect x="99.9542%" y="629" width="0.0139%" height="15" fill="rgb(254,105,39)" fg:x="165868" fg:w="23"/><text x="100.2042%" y="639.50"></text></g><g><title>indicatif::state::BarState::tick (23 samples, 0.01%)</title><rect x="99.9542%" y="613" width="0.0139%" height="15" fill="rgb(245,158,5)" fg:x="165868" fg:w="23"/><text x="100.2042%" y="623.50"></text></g><g><title>indicatif::state::BarState::draw (23 samples, 0.01%)</title><rect x="99.9542%" y="597" width="0.0139%" height="15" fill="rgb(249,208,11)" fg:x="165868" fg:w="23"/><text x="100.2042%" y="607.50"></text></g><g><title>__perf_event_task_sched_in (21 samples, 0.01%)</title><rect x="99.9723%" y="373" width="0.0127%" height="15" fill="rgb(210,39,28)" fg:x="165898" fg:w="21"/><text x="100.2223%" y="383.50"></text></g><g><title>x86_pmu_enable (21 samples, 0.01%)</title><rect x="99.9723%" y="357" width="0.0127%" height="15" fill="rgb(211,56,53)" fg:x="165898" fg:w="21"/><text x="100.2223%" y="367.50"></text></g><g><title>intel_pmu_enable_all (21 samples, 0.01%)</title><rect x="99.9723%" y="341" width="0.0127%" height="15" fill="rgb(226,201,30)" fg:x="165898" fg:w="21"/><text x="100.2223%" y="351.50"></text></g><g><title>native_write_msr (21 samples, 0.01%)</title><rect x="99.9723%" y="325" width="0.0127%" height="15" fill="rgb(239,101,34)" fg:x="165898" fg:w="21"/><text x="100.2223%" y="335.50"></text></g><g><title>__x64_sys_futex (24 samples, 0.01%)</title><rect x="99.9711%" y="485" width="0.0145%" height="15" fill="rgb(226,209,5)" fg:x="165896" fg:w="24"/><text x="100.2211%" y="495.50"></text></g><g><title>do_futex (24 samples, 0.01%)</title><rect x="99.9711%" y="469" width="0.0145%" height="15" fill="rgb(250,105,47)" fg:x="165896" fg:w="24"/><text x="100.2211%" y="479.50"></text></g><g><title>futex_wait (24 samples, 0.01%)</title><rect x="99.9711%" y="453" width="0.0145%" height="15" fill="rgb(230,72,3)" fg:x="165896" fg:w="24"/><text x="100.2211%" y="463.50"></text></g><g><title>futex_wait_queue_me (24 samples, 0.01%)</title><rect x="99.9711%" y="437" width="0.0145%" height="15" fill="rgb(232,218,39)" fg:x="165896" fg:w="24"/><text x="100.2211%" y="447.50"></text></g><g><title>schedule (24 samples, 0.01%)</title><rect x="99.9711%" y="421" width="0.0145%" height="15" fill="rgb(248,166,6)" fg:x="165896" fg:w="24"/><text x="100.2211%" y="431.50"></text></g><g><title>__schedule (24 samples, 0.01%)</title><rect x="99.9711%" y="405" width="0.0145%" height="15" fill="rgb(247,89,20)" fg:x="165896" fg:w="24"/><text x="100.2211%" y="415.50"></text></g><g><title>finish_task_switch.isra.0 (22 samples, 0.01%)</title><rect x="99.9723%" y="389" width="0.0133%" height="15" fill="rgb(248,130,54)" fg:x="165898" fg:w="22"/><text x="100.2223%" y="399.50"></text></g><g><title>_start (54 samples, 0.03%)</title><rect x="99.9536%" y="933" width="0.0325%" height="15" fill="rgb(234,196,4)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="943.50"></text></g><g><title>__libc_start_main_impl (54 samples, 0.03%)</title><rect x="99.9536%" y="917" width="0.0325%" height="15" fill="rgb(250,143,31)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="927.50"></text></g><g><title>__libc_start_call_main (54 samples, 0.03%)</title><rect x="99.9536%" y="901" width="0.0325%" height="15" fill="rgb(211,110,34)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="911.50"></text></g><g><title>main (54 samples, 0.03%)</title><rect x="99.9536%" y="885" width="0.0325%" height="15" fill="rgb(215,124,48)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="895.50"></text></g><g><title>std::rt::lang_start_internal (54 samples, 0.03%)</title><rect x="99.9536%" y="869" width="0.0325%" height="15" fill="rgb(216,46,13)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="879.50"></text></g><g><title>std::panic::catch_unwind (54 samples, 0.03%)</title><rect x="99.9536%" y="853" width="0.0325%" height="15" fill="rgb(205,184,25)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="863.50"></text></g><g><title>std::panicking::try (54 samples, 0.03%)</title><rect x="99.9536%" y="837" width="0.0325%" height="15" fill="rgb(228,1,10)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="847.50"></text></g><g><title>std::panicking::try::do_call (54 samples, 0.03%)</title><rect x="99.9536%" y="821" width="0.0325%" height="15" fill="rgb(213,116,27)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="831.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (54 samples, 0.03%)</title><rect x="99.9536%" y="805" width="0.0325%" height="15" fill="rgb(241,95,50)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="815.50"></text></g><g><title>std::panic::catch_unwind (54 samples, 0.03%)</title><rect x="99.9536%" y="789" width="0.0325%" height="15" fill="rgb(238,48,32)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="799.50"></text></g><g><title>std::panicking::try (54 samples, 0.03%)</title><rect x="99.9536%" y="773" width="0.0325%" height="15" fill="rgb(235,113,49)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="783.50"></text></g><g><title>std::panicking::try::do_call (54 samples, 0.03%)</title><rect x="99.9536%" y="757" width="0.0325%" height="15" fill="rgb(205,127,43)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (54 samples, 0.03%)</title><rect x="99.9536%" y="741" width="0.0325%" height="15" fill="rgb(250,162,2)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="751.50"></text></g><g><title>std::rt::lang_start::{{closure}} (54 samples, 0.03%)</title><rect x="99.9536%" y="725" width="0.0325%" height="15" fill="rgb(220,13,41)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="735.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (54 samples, 0.03%)</title><rect x="99.9536%" y="709" width="0.0325%" height="15" fill="rgb(249,221,25)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="719.50"></text></g><g><title>core::ops::function::FnOnce::call_once (54 samples, 0.03%)</title><rect x="99.9536%" y="693" width="0.0325%" height="15" fill="rgb(215,208,19)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="703.50"></text></g><g><title>hprof_slurp::main (54 samples, 0.03%)</title><rect x="99.9536%" y="677" width="0.0325%" height="15" fill="rgb(236,175,2)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="687.50"></text></g><g><title>hprof_slurp::main_result (54 samples, 0.03%)</title><rect x="99.9536%" y="661" width="0.0325%" height="15" fill="rgb(241,52,2)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="671.50"></text></g><g><title>hprof_slurp::slurp::slurp_file (54 samples, 0.03%)</title><rect x="99.9536%" y="645" width="0.0325%" height="15" fill="rgb(248,140,14)" fg:x="165867" fg:w="54"/><text x="100.2036%" y="655.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (25 samples, 0.02%)</title><rect x="99.9711%" y="629" width="0.0151%" height="15" fill="rgb(253,22,42)" fg:x="165896" fg:w="25"/><text x="100.2211%" y="639.50"></text></g><g><title>std::sync::mpsc::stream::Packet&lt;T&gt;::recv (25 samples, 0.02%)</title><rect x="99.9711%" y="613" width="0.0151%" height="15" fill="rgb(234,61,47)" fg:x="165896" fg:w="25"/><text x="100.2211%" y="623.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (25 samples, 0.02%)</title><rect x="99.9711%" y="597" width="0.0151%" height="15" fill="rgb(208,226,15)" fg:x="165896" fg:w="25"/><text x="100.2211%" y="607.50"></text></g><g><title>std::thread::park (25 samples, 0.02%)</title><rect x="99.9711%" y="581" width="0.0151%" height="15" fill="rgb(217,221,4)" fg:x="165896" fg:w="25"/><text x="100.2211%" y="591.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (25 samples, 0.02%)</title><rect x="99.9711%" y="565" width="0.0151%" height="15" fill="rgb(212,174,34)" fg:x="165896" fg:w="25"/><text x="100.2211%" y="575.50"></text></g><g><title>std::sys::unix::futex::futex_wait (25 samples, 0.02%)</title><rect x="99.9711%" y="549" width="0.0151%" height="15" fill="rgb(253,83,4)" fg:x="165896" fg:w="25"/><text x="100.2211%" y="559.50"></text></g><g><title>syscall (25 samples, 0.02%)</title><rect x="99.9711%" y="533" width="0.0151%" height="15" fill="rgb(250,195,49)" fg:x="165896" fg:w="25"/><text x="100.2211%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.02%)</title><rect x="99.9711%" y="517" width="0.0151%" height="15" fill="rgb(241,192,25)" fg:x="165896" fg:w="25"/><text x="100.2211%" y="527.50"></text></g><g><title>do_syscall_64 (25 samples, 0.02%)</title><rect x="99.9711%" y="501" width="0.0151%" height="15" fill="rgb(208,124,10)" fg:x="165896" fg:w="25"/><text x="100.2211%" y="511.50"></text></g><g><title>hprof-slurp (87 samples, 0.05%)</title><rect x="99.9446%" y="949" width="0.0524%" height="15" fill="rgb(222,33,0)" fg:x="165852" fg:w="87"/><text x="100.1946%" y="959.50"></text></g><g><title>all (165,944 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(234,209,28)" fg:x="0" fg:w="165944"/><text x="0.2500%" y="975.50"></text></g></svg></svg>