<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1046" onload="init(evt)" viewBox="0 0 1200 1046" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1046" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1029.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1029.00"> </text><svg id="frames" x="10" width="1180" total_samples="162494"><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (621 samples, 0.38%)</title><rect x="0.0006%" y="949" width="0.3822%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="621"/><text x="0.2506%" y="959.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (630 samples, 0.39%)</title><rect x="0.3920%" y="949" width="0.3877%" height="15" fill="rgb(217,0,24)" fg:x="637" fg:w="630"/><text x="0.6420%" y="959.50"></text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (630 samples, 0.39%)</title><rect x="0.3920%" y="933" width="0.3877%" height="15" fill="rgb(221,193,54)" fg:x="637" fg:w="630"/><text x="0.6420%" y="943.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (614 samples, 0.38%)</title><rect x="0.7797%" y="949" width="0.3779%" height="15" fill="rgb(248,212,6)" fg:x="1267" fg:w="614"/><text x="1.0297%" y="959.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (29 samples, 0.02%)</title><rect x="1.1607%" y="949" width="0.0178%" height="15" fill="rgb(208,68,35)" fg:x="1886" fg:w="29"/><text x="1.4107%" y="959.50"></text></g><g><title>[anon] (1,916 samples, 1.18%)</title><rect x="0.0000%" y="965" width="1.1791%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1916"/><text x="0.2500%" y="975.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (1,830 samples, 1.13%)</title><rect x="1.1797%" y="949" width="1.1262%" height="15" fill="rgb(207,160,47)" fg:x="1917" fg:w="1830"/><text x="1.4297%" y="959.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,325 samples, 0.82%)</title><rect x="2.3059%" y="949" width="0.8154%" height="15" fill="rgb(228,23,34)" fg:x="3747" fg:w="1325"/><text x="2.5559%" y="959.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (634 samples, 0.39%)</title><rect x="3.1275%" y="949" width="0.3902%" height="15" fill="rgb(218,30,26)" fg:x="5082" fg:w="634"/><text x="3.3775%" y="959.50"></text></g><g><title>[unknown] (3,835 samples, 2.36%)</title><rect x="1.1791%" y="965" width="2.3601%" height="15" fill="rgb(220,122,19)" fg:x="1916" fg:w="3835"/><text x="1.4291%" y="975.50">[u..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (29 samples, 0.02%)</title><rect x="3.5214%" y="949" width="0.0178%" height="15" fill="rgb(250,228,42)" fg:x="5722" fg:w="29"/><text x="3.7714%" y="959.50"></text></g><g><title>__remove_mapping (17 samples, 0.01%)</title><rect x="7.9732%" y="405" width="0.0105%" height="15" fill="rgb(240,193,28)" fg:x="12956" fg:w="17"/><text x="8.2232%" y="415.50"></text></g><g><title>shrink_page_list (23 samples, 0.01%)</title><rect x="7.9714%" y="421" width="0.0142%" height="15" fill="rgb(216,20,37)" fg:x="12953" fg:w="23"/><text x="8.2214%" y="431.50"></text></g><g><title>shrink_lruvec (27 samples, 0.02%)</title><rect x="7.9701%" y="453" width="0.0166%" height="15" fill="rgb(206,188,39)" fg:x="12951" fg:w="27"/><text x="8.2201%" y="463.50"></text></g><g><title>shrink_inactive_list (27 samples, 0.02%)</title><rect x="7.9701%" y="437" width="0.0166%" height="15" fill="rgb(217,207,13)" fg:x="12951" fg:w="27"/><text x="8.2201%" y="447.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (29 samples, 0.02%)</title><rect x="7.9695%" y="533" width="0.0178%" height="15" fill="rgb(231,73,38)" fg:x="12950" fg:w="29"/><text x="8.2195%" y="543.50"></text></g><g><title>try_to_free_pages (28 samples, 0.02%)</title><rect x="7.9701%" y="517" width="0.0172%" height="15" fill="rgb(225,20,46)" fg:x="12951" fg:w="28"/><text x="8.2201%" y="527.50"></text></g><g><title>do_try_to_free_pages (28 samples, 0.02%)</title><rect x="7.9701%" y="501" width="0.0172%" height="15" fill="rgb(210,31,41)" fg:x="12951" fg:w="28"/><text x="8.2201%" y="511.50"></text></g><g><title>shrink_node (28 samples, 0.02%)</title><rect x="7.9701%" y="485" width="0.0172%" height="15" fill="rgb(221,200,47)" fg:x="12951" fg:w="28"/><text x="8.2201%" y="495.50"></text></g><g><title>shrink_node_memcgs (28 samples, 0.02%)</title><rect x="7.9701%" y="469" width="0.0172%" height="15" fill="rgb(226,26,5)" fg:x="12951" fg:w="28"/><text x="8.2201%" y="479.50"></text></g><g><title>clear_page_erms (18 samples, 0.01%)</title><rect x="7.9892%" y="517" width="0.0111%" height="15" fill="rgb(249,33,26)" fg:x="12982" fg:w="18"/><text x="8.2392%" y="527.50"></text></g><g><title>alloc_pages_vma (54 samples, 0.03%)</title><rect x="7.9695%" y="565" width="0.0332%" height="15" fill="rgb(235,183,28)" fg:x="12950" fg:w="54"/><text x="8.2195%" y="575.50"></text></g><g><title>__alloc_pages (54 samples, 0.03%)</title><rect x="7.9695%" y="549" width="0.0332%" height="15" fill="rgb(221,5,38)" fg:x="12950" fg:w="54"/><text x="8.2195%" y="559.50"></text></g><g><title>get_page_from_freelist (25 samples, 0.02%)</title><rect x="7.9874%" y="533" width="0.0154%" height="15" fill="rgb(247,18,42)" fg:x="12979" fg:w="25"/><text x="8.2374%" y="543.50"></text></g><g><title>do_anonymous_page (81 samples, 0.05%)</title><rect x="7.9628%" y="581" width="0.0498%" height="15" fill="rgb(241,131,45)" fg:x="12939" fg:w="81"/><text x="8.2128%" y="591.50"></text></g><g><title>do_user_addr_fault (95 samples, 0.06%)</title><rect x="7.9548%" y="645" width="0.0585%" height="15" fill="rgb(249,31,29)" fg:x="12926" fg:w="95"/><text x="8.2048%" y="655.50"></text></g><g><title>handle_mm_fault (91 samples, 0.06%)</title><rect x="7.9572%" y="629" width="0.0560%" height="15" fill="rgb(225,111,53)" fg:x="12930" fg:w="91"/><text x="8.2072%" y="639.50"></text></g><g><title>__handle_mm_fault (87 samples, 0.05%)</title><rect x="7.9597%" y="613" width="0.0535%" height="15" fill="rgb(238,160,17)" fg:x="12934" fg:w="87"/><text x="8.2097%" y="623.50"></text></g><g><title>handle_pte_fault (86 samples, 0.05%)</title><rect x="7.9603%" y="597" width="0.0529%" height="15" fill="rgb(214,148,48)" fg:x="12935" fg:w="86"/><text x="8.2103%" y="607.50"></text></g><g><title>asm_exc_page_fault (101 samples, 0.06%)</title><rect x="7.9548%" y="677" width="0.0622%" height="15" fill="rgb(232,36,49)" fg:x="12926" fg:w="101"/><text x="8.2048%" y="687.50"></text></g><g><title>exc_page_fault (101 samples, 0.06%)</title><rect x="7.9548%" y="661" width="0.0622%" height="15" fill="rgb(209,103,24)" fg:x="12926" fg:w="101"/><text x="8.2048%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (7,289 samples, 4.49%)</title><rect x="3.5392%" y="741" width="4.4857%" height="15" fill="rgb(229,88,8)" fg:x="5751" fg:w="7289"/><text x="3.7892%" y="751.50">alloc..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7,289 samples, 4.49%)</title><rect x="3.5392%" y="725" width="4.4857%" height="15" fill="rgb(213,181,19)" fg:x="5751" fg:w="7289"/><text x="3.7892%" y="735.50">alloc..</text></g><g><title>core::intrinsics::copy_nonoverlapping (7,286 samples, 4.48%)</title><rect x="3.5411%" y="709" width="4.4839%" height="15" fill="rgb(254,191,54)" fg:x="5754" fg:w="7286"/><text x="3.7911%" y="719.50">core:..</text></g><g><title>__memcpy_avx_unaligned_erms (7,286 samples, 4.48%)</title><rect x="3.5411%" y="693" width="4.4839%" height="15" fill="rgb(241,83,37)" fg:x="5754" fg:w="7286"/><text x="3.7911%" y="703.50">__mem..</text></g><g><title>free_pages_and_swap_cache (21 samples, 0.01%)</title><rect x="8.0385%" y="421" width="0.0129%" height="15" fill="rgb(233,36,39)" fg:x="13062" fg:w="21"/><text x="8.2885%" y="431.50"></text></g><g><title>release_pages (21 samples, 0.01%)</title><rect x="8.0385%" y="405" width="0.0129%" height="15" fill="rgb(226,3,54)" fg:x="13062" fg:w="21"/><text x="8.2885%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (33 samples, 0.02%)</title><rect x="8.0317%" y="725" width="0.0203%" height="15" fill="rgb(245,192,40)" fg:x="13051" fg:w="33"/><text x="8.2817%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (33 samples, 0.02%)</title><rect x="8.0317%" y="709" width="0.0203%" height="15" fill="rgb(238,167,29)" fg:x="13051" fg:w="33"/><text x="8.2817%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.02%)</title><rect x="8.0317%" y="693" width="0.0203%" height="15" fill="rgb(232,182,51)" fg:x="13051" fg:w="33"/><text x="8.2817%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.02%)</title><rect x="8.0317%" y="677" width="0.0203%" height="15" fill="rgb(231,60,39)" fg:x="13051" fg:w="33"/><text x="8.2817%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.02%)</title><rect x="8.0317%" y="661" width="0.0203%" height="15" fill="rgb(208,69,12)" fg:x="13051" fg:w="33"/><text x="8.2817%" y="671.50"></text></g><g><title>__GI___libc_free (33 samples, 0.02%)</title><rect x="8.0317%" y="645" width="0.0203%" height="15" fill="rgb(235,93,37)" fg:x="13051" fg:w="33"/><text x="8.2817%" y="655.50"></text></g><g><title>__GI___munmap (33 samples, 0.02%)</title><rect x="8.0317%" y="629" width="0.0203%" height="15" fill="rgb(213,116,39)" fg:x="13051" fg:w="33"/><text x="8.2817%" y="639.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.02%)</title><rect x="8.0317%" y="613" width="0.0203%" height="15" fill="rgb(222,207,29)" fg:x="13051" fg:w="33"/><text x="8.2817%" y="623.50"></text></g><g><title>do_syscall_64 (33 samples, 0.02%)</title><rect x="8.0317%" y="597" width="0.0203%" height="15" fill="rgb(206,96,30)" fg:x="13051" fg:w="33"/><text x="8.2817%" y="607.50"></text></g><g><title>__x64_sys_munmap (33 samples, 0.02%)</title><rect x="8.0317%" y="581" width="0.0203%" height="15" fill="rgb(218,138,4)" fg:x="13051" fg:w="33"/><text x="8.2817%" y="591.50"></text></g><g><title>__vm_munmap (33 samples, 0.02%)</title><rect x="8.0317%" y="565" width="0.0203%" height="15" fill="rgb(250,191,14)" fg:x="13051" fg:w="33"/><text x="8.2817%" y="575.50"></text></g><g><title>__do_munmap (33 samples, 0.02%)</title><rect x="8.0317%" y="549" width="0.0203%" height="15" fill="rgb(239,60,40)" fg:x="13051" fg:w="33"/><text x="8.2817%" y="559.50"></text></g><g><title>unmap_region (33 samples, 0.02%)</title><rect x="8.0317%" y="533" width="0.0203%" height="15" fill="rgb(206,27,48)" fg:x="13051" fg:w="33"/><text x="8.2817%" y="543.50"></text></g><g><title>unmap_vmas (31 samples, 0.02%)</title><rect x="8.0329%" y="517" width="0.0191%" height="15" fill="rgb(225,35,8)" fg:x="13053" fg:w="31"/><text x="8.2829%" y="527.50"></text></g><g><title>unmap_single_vma (31 samples, 0.02%)</title><rect x="8.0329%" y="501" width="0.0191%" height="15" fill="rgb(250,213,24)" fg:x="13053" fg:w="31"/><text x="8.2829%" y="511.50"></text></g><g><title>unmap_page_range (31 samples, 0.02%)</title><rect x="8.0329%" y="485" width="0.0191%" height="15" fill="rgb(247,123,22)" fg:x="13053" fg:w="31"/><text x="8.2829%" y="495.50"></text></g><g><title>zap_pmd_range.isra.0 (31 samples, 0.02%)</title><rect x="8.0329%" y="469" width="0.0191%" height="15" fill="rgb(231,138,38)" fg:x="13053" fg:w="31"/><text x="8.2829%" y="479.50"></text></g><g><title>zap_pte_range (31 samples, 0.02%)</title><rect x="8.0329%" y="453" width="0.0191%" height="15" fill="rgb(231,145,46)" fg:x="13053" fg:w="31"/><text x="8.2829%" y="463.50"></text></g><g><title>tlb_flush_mmu (22 samples, 0.01%)</title><rect x="8.0385%" y="437" width="0.0135%" height="15" fill="rgb(251,118,11)" fg:x="13062" fg:w="22"/><text x="8.2885%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}}&gt; (47 samples, 0.03%)</title><rect x="8.0274%" y="741" width="0.0289%" height="15" fill="rgb(217,147,25)" fg:x="13044" fg:w="47"/><text x="8.2774%" y="751.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (20 samples, 0.01%)</title><rect x="16.4431%" y="677" width="0.0123%" height="15" fill="rgb(247,81,37)" fg:x="26719" fg:w="20"/><text x="16.6931%" y="687.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}}::{{closure}} (20 samples, 0.01%)</title><rect x="16.4431%" y="661" width="0.0123%" height="15" fill="rgb(209,12,38)" fg:x="26719" fg:w="20"/><text x="16.6931%" y="671.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_utf8_string (20 samples, 0.01%)</title><rect x="16.4431%" y="645" width="0.0123%" height="15" fill="rgb(227,1,9)" fg:x="26719" fg:w="20"/><text x="16.6931%" y="655.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (20 samples, 0.01%)</title><rect x="16.4431%" y="629" width="0.0123%" height="15" fill="rgb(248,47,43)" fg:x="26719" fg:w="20"/><text x="16.6931%" y="639.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (20 samples, 0.01%)</title><rect x="16.4431%" y="613" width="0.0123%" height="15" fill="rgb(221,10,30)" fg:x="26719" fg:w="20"/><text x="16.6931%" y="623.50"></text></g><g><title>nom::combinator::map::{{closure}} (18 samples, 0.01%)</title><rect x="16.4443%" y="597" width="0.0111%" height="15" fill="rgb(210,229,1)" fg:x="26721" fg:w="18"/><text x="16.6943%" y="607.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_utf8_string::{{closure}}::{{closure}} (17 samples, 0.01%)</title><rect x="16.4449%" y="581" width="0.0105%" height="15" fill="rgb(222,148,37)" fg:x="26722" fg:w="17"/><text x="16.6949%" y="591.50"></text></g><g><title>__sysvec_apic_timer_interrupt (18 samples, 0.01%)</title><rect x="23.0341%" y="629" width="0.0111%" height="15" fill="rgb(234,67,33)" fg:x="37429" fg:w="18"/><text x="23.2841%" y="639.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (21 samples, 0.01%)</title><rect x="23.0341%" y="661" width="0.0129%" height="15" fill="rgb(247,98,35)" fg:x="37429" fg:w="21"/><text x="23.2841%" y="671.50"></text></g><g><title>sysvec_apic_timer_interrupt (21 samples, 0.01%)</title><rect x="23.0341%" y="645" width="0.0129%" height="15" fill="rgb(247,138,52)" fg:x="37429" fg:w="21"/><text x="23.2841%" y="655.50"></text></g><g><title>__sysvec_apic_timer_interrupt (21 samples, 0.01%)</title><rect x="37.1306%" y="613" width="0.0129%" height="15" fill="rgb(213,79,30)" fg:x="60335" fg:w="21"/><text x="37.3806%" y="623.50"></text></g><g><title>hrtimer_interrupt (18 samples, 0.01%)</title><rect x="37.1324%" y="597" width="0.0111%" height="15" fill="rgb(246,177,23)" fg:x="60338" fg:w="18"/><text x="37.3824%" y="607.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (26 samples, 0.02%)</title><rect x="37.1306%" y="645" width="0.0160%" height="15" fill="rgb(230,62,27)" fg:x="60335" fg:w="26"/><text x="37.3806%" y="655.50"></text></g><g><title>sysvec_apic_timer_interrupt (26 samples, 0.02%)</title><rect x="37.1306%" y="629" width="0.0160%" height="15" fill="rgb(216,154,8)" fg:x="60335" fg:w="26"/><text x="37.3806%" y="639.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}}::{{closure}} (22,912 samples, 14.10%)</title><rect x="23.0476%" y="661" width="14.1002%" height="15" fill="rgb(244,35,45)" fg:x="37451" fg:w="22912"/><text x="23.2976%" y="671.50">hprof_slurp::parser::..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (33,625 samples, 20.69%)</title><rect x="16.4554%" y="677" width="20.6931%" height="15" fill="rgb(251,115,12)" fg:x="26739" fg:w="33625"/><text x="16.7054%" y="687.50">core::result::Result&lt;T,E&gt;::map</text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,105 samples, 0.68%)</title><rect x="37.5829%" y="581" width="0.6800%" height="15" fill="rgb(240,54,50)" fg:x="61070" fg:w="1105"/><text x="37.8329%" y="591.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1,105 samples, 0.68%)</title><rect x="37.5829%" y="565" width="0.6800%" height="15" fill="rgb(233,84,52)" fg:x="61070" fg:w="1105"/><text x="37.8329%" y="575.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u8 (1,126 samples, 0.69%)</title><rect x="37.5731%" y="613" width="0.6929%" height="15" fill="rgb(207,117,47)" fg:x="61054" fg:w="1126"/><text x="37.8231%" y="623.50"></text></g><g><title>nom::number::streaming::be_u8 (1,126 samples, 0.69%)</title><rect x="37.5731%" y="597" width="0.6929%" height="15" fill="rgb(249,43,39)" fg:x="61054" fg:w="1126"/><text x="37.8231%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (582 samples, 0.36%)</title><rect x="44.8029%" y="549" width="0.3582%" height="15" fill="rgb(209,38,44)" fg:x="72802" fg:w="582"/><text x="45.0529%" y="559.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (582 samples, 0.36%)</title><rect x="44.8029%" y="533" width="0.3582%" height="15" fill="rgb(236,212,23)" fg:x="72802" fg:w="582"/><text x="45.0529%" y="543.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (582 samples, 0.36%)</title><rect x="44.8029%" y="517" width="0.3582%" height="15" fill="rgb(242,79,21)" fg:x="72802" fg:w="582"/><text x="45.0529%" y="527.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,825 samples, 1.12%)</title><rect x="44.0398%" y="565" width="1.1231%" height="15" fill="rgb(211,96,35)" fg:x="71562" fg:w="1825"/><text x="44.2898%" y="575.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (1,989 samples, 1.22%)</title><rect x="47.4522%" y="501" width="1.2240%" height="15" fill="rgb(253,215,40)" fg:x="77107" fg:w="1989"/><text x="47.7022%" y="511.50"></text></g><g><title>nom::number::streaming::be_u32 (1,989 samples, 1.22%)</title><rect x="47.4522%" y="485" width="1.2240%" height="15" fill="rgb(211,81,21)" fg:x="77107" fg:w="1989"/><text x="47.7022%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,874 samples, 3.00%)</title><rect x="47.4522%" y="533" width="2.9995%" height="15" fill="rgb(208,190,38)" fg:x="77107" fg:w="4874"/><text x="47.7022%" y="543.50">&lt;F ..</text></g><g><title>core::ops::function::FnMut::call_mut (4,874 samples, 3.00%)</title><rect x="47.4522%" y="517" width="2.9995%" height="15" fill="rgb(235,213,38)" fg:x="77107" fg:w="4874"/><text x="47.7022%" y="527.50">cor..</text></g><g><title>hprof_slurp::parser::record_parser::parse_id (2,885 samples, 1.78%)</title><rect x="48.6763%" y="501" width="1.7755%" height="15" fill="rgb(237,122,38)" fg:x="79096" fg:w="2885"/><text x="48.9263%" y="511.50">h..</text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (2,885 samples, 1.78%)</title><rect x="48.6763%" y="485" width="1.7755%" height="15" fill="rgb(244,218,35)" fg:x="79096" fg:w="2885"/><text x="48.9263%" y="495.50">h..</text></g><g><title>nom::number::streaming::be_u64 (2,885 samples, 1.78%)</title><rect x="48.6763%" y="469" width="1.7755%" height="15" fill="rgb(240,68,47)" fg:x="79096" fg:w="2885"/><text x="48.9263%" y="479.50">n..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (8,608 samples, 5.30%)</title><rect x="45.1629%" y="549" width="5.2974%" height="15" fill="rgb(210,16,53)" fg:x="73387" fg:w="8608"/><text x="45.4129%" y="559.50">&lt;(FnA,..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (10,440 samples, 6.42%)</title><rect x="44.0398%" y="581" width="6.4249%" height="15" fill="rgb(235,124,12)" fg:x="71562" fg:w="10440"/><text x="44.2898%" y="591.50">&lt;F as no..</text></g><g><title>nom::sequence::tuple::{{closure}} (8,615 samples, 5.30%)</title><rect x="45.1629%" y="565" width="5.3017%" height="15" fill="rgb(224,169,11)" fg:x="73387" fg:w="8615"/><text x="45.4129%" y="575.50">nom::s..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (601 samples, 0.37%)</title><rect x="50.4646%" y="581" width="0.3699%" height="15" fill="rgb(250,166,2)" fg:x="82002" fg:w="601"/><text x="50.7146%" y="591.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (18,480 samples, 11.37%)</title><rect x="39.4679%" y="597" width="11.3727%" height="15" fill="rgb(242,216,29)" fg:x="64133" fg:w="18480"/><text x="39.7179%" y="607.50">nom::combinator::..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (20,430 samples, 12.57%)</title><rect x="38.2685%" y="613" width="12.5728%" height="15" fill="rgb(230,116,27)" fg:x="62184" fg:w="20430"/><text x="38.5185%" y="623.50">hprof_slurp::parser..</text></g><g><title>nom::combinator::map::{{closure}} (17 samples, 0.01%)</title><rect x="50.8486%" y="565" width="0.0105%" height="15" fill="rgb(228,99,48)" fg:x="82626" fg:w="17"/><text x="51.0986%" y="575.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (18 samples, 0.01%)</title><rect x="50.8714%" y="501" width="0.0111%" height="15" fill="rgb(253,11,6)" fg:x="82663" fg:w="18"/><text x="51.1214%" y="511.50"></text></g><g><title>nom::number::streaming::be_u32 (18 samples, 0.01%)</title><rect x="50.8714%" y="485" width="0.0111%" height="15" fill="rgb(247,143,39)" fg:x="82663" fg:w="18"/><text x="51.1214%" y="495.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (46 samples, 0.03%)</title><rect x="50.8591%" y="549" width="0.0283%" height="15" fill="rgb(236,97,10)" fg:x="82643" fg:w="46"/><text x="51.1091%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (26 samples, 0.02%)</title><rect x="50.8714%" y="533" width="0.0160%" height="15" fill="rgb(233,208,19)" fg:x="82663" fg:w="26"/><text x="51.1214%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (26 samples, 0.02%)</title><rect x="50.8714%" y="517" width="0.0160%" height="15" fill="rgb(216,164,2)" fg:x="82663" fg:w="26"/><text x="51.1214%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (64 samples, 0.04%)</title><rect x="50.8486%" y="581" width="0.0394%" height="15" fill="rgb(220,129,5)" fg:x="82626" fg:w="64"/><text x="51.0986%" y="591.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (47 samples, 0.03%)</title><rect x="50.8591%" y="565" width="0.0289%" height="15" fill="rgb(242,17,10)" fg:x="82643" fg:w="47"/><text x="51.1091%" y="575.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_object_array_dump (86 samples, 0.05%)</title><rect x="50.8413%" y="613" width="0.0529%" height="15" fill="rgb(242,107,0)" fg:x="82614" fg:w="86"/><text x="51.0913%" y="623.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (78 samples, 0.05%)</title><rect x="50.8462%" y="597" width="0.0480%" height="15" fill="rgb(251,28,31)" fg:x="82622" fg:w="78"/><text x="51.0962%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (67 samples, 0.04%)</title><rect x="50.9243%" y="549" width="0.0412%" height="15" fill="rgb(233,223,10)" fg:x="82749" fg:w="67"/><text x="51.1743%" y="559.50"></text></g><g><title>hprof_slurp::parser::record_parser::skip_array_value::{{closure}} (53 samples, 0.03%)</title><rect x="50.9330%" y="533" width="0.0326%" height="15" fill="rgb(215,21,27)" fg:x="82763" fg:w="53"/><text x="51.1830%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (21 samples, 0.01%)</title><rect x="50.9656%" y="549" width="0.0129%" height="15" fill="rgb(232,23,21)" fg:x="82816" fg:w="21"/><text x="51.2156%" y="559.50"></text></g><g><title>nom::combinator::map::{{closure}} (126 samples, 0.08%)</title><rect x="50.9016%" y="565" width="0.0775%" height="15" fill="rgb(244,5,23)" fg:x="82712" fg:w="126"/><text x="51.1516%" y="575.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (52 samples, 0.03%)</title><rect x="51.0185%" y="501" width="0.0320%" height="15" fill="rgb(226,81,46)" fg:x="82902" fg:w="52"/><text x="51.2685%" y="511.50"></text></g><g><title>nom::number::streaming::be_u32 (52 samples, 0.03%)</title><rect x="51.0185%" y="485" width="0.0320%" height="15" fill="rgb(247,70,30)" fg:x="82902" fg:w="52"/><text x="51.2685%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (101 samples, 0.06%)</title><rect x="51.0185%" y="533" width="0.0622%" height="15" fill="rgb(212,68,19)" fg:x="82902" fg:w="101"/><text x="51.2685%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (101 samples, 0.06%)</title><rect x="51.0185%" y="517" width="0.0622%" height="15" fill="rgb(240,187,13)" fg:x="82902" fg:w="101"/><text x="51.2685%" y="527.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_field_type (49 samples, 0.03%)</title><rect x="51.0505%" y="501" width="0.0302%" height="15" fill="rgb(223,113,26)" fg:x="82954" fg:w="49"/><text x="51.3005%" y="511.50"></text></g><g><title>nom::combinator::map::{{closure}} (49 samples, 0.03%)</title><rect x="51.0505%" y="485" width="0.0302%" height="15" fill="rgb(206,192,2)" fg:x="82954" fg:w="49"/><text x="51.3005%" y="495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (36 samples, 0.02%)</title><rect x="51.0585%" y="469" width="0.0222%" height="15" fill="rgb(241,108,4)" fg:x="82967" fg:w="36"/><text x="51.3085%" y="479.50"></text></g><g><title>hprof_slurp::parser::gc_record::FieldType::from_value (34 samples, 0.02%)</title><rect x="51.0597%" y="453" width="0.0209%" height="15" fill="rgb(247,173,49)" fg:x="82969" fg:w="34"/><text x="51.3097%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (292 samples, 0.18%)</title><rect x="50.9016%" y="581" width="0.1797%" height="15" fill="rgb(224,114,35)" fg:x="82712" fg:w="292"/><text x="51.1516%" y="591.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (166 samples, 0.10%)</title><rect x="50.9791%" y="565" width="0.1022%" height="15" fill="rgb(245,159,27)" fg:x="82838" fg:w="166"/><text x="51.2291%" y="575.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (166 samples, 0.10%)</title><rect x="50.9791%" y="549" width="0.1022%" height="15" fill="rgb(245,172,44)" fg:x="82838" fg:w="166"/><text x="51.2291%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (48 samples, 0.03%)</title><rect x="51.0813%" y="581" width="0.0295%" height="15" fill="rgb(236,23,11)" fg:x="83004" fg:w="48"/><text x="51.3313%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (22,659 samples, 13.94%)</title><rect x="37.1749%" y="645" width="13.9445%" height="15" fill="rgb(205,117,38)" fg:x="60407" fg:w="22659"/><text x="37.4249%" y="655.50">&lt;F as nom::internal::..</text></g><g><title>core::ops::function::FnMut::call_mut (22,659 samples, 13.94%)</title><rect x="37.1749%" y="629" width="13.9445%" height="15" fill="rgb(237,72,25)" fg:x="60407" fg:w="22659"/><text x="37.4249%" y="639.50">core::ops::function::..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (366 samples, 0.23%)</title><rect x="50.8942%" y="613" width="0.2252%" height="15" fill="rgb(244,70,9)" fg:x="82700" fg:w="366"/><text x="51.1442%" y="623.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (354 samples, 0.22%)</title><rect x="50.9016%" y="597" width="0.2179%" height="15" fill="rgb(217,125,39)" fg:x="82712" fg:w="354"/><text x="51.1516%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (59,568 samples, 36.66%)</title><rect x="14.8190%" y="709" width="36.6586%" height="15" fill="rgb(235,36,10)" fg:x="24080" fg:w="59568"/><text x="15.0690%" y="719.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (58,890 samples, 36.24%)</title><rect x="15.2363%" y="693" width="36.2413%" height="15" fill="rgb(251,123,47)" fg:x="24758" fg:w="58890"/><text x="15.4863%" y="703.50">hprof_slurp::parser::record_parser::HprofRecordParser::pars..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record (23,283 samples, 14.33%)</title><rect x="37.1491%" y="677" width="14.3285%" height="15" fill="rgb(221,13,13)" fg:x="60365" fg:w="23283"/><text x="37.3991%" y="687.50">hprof_slurp::parser::r..</text></g><g><title>nom::combinator::flat_map::{{closure}} (23,283 samples, 14.33%)</title><rect x="37.1491%" y="661" width="14.3285%" height="15" fill="rgb(238,131,9)" fg:x="60365" fg:w="23283"/><text x="37.3991%" y="671.50">nom::combinator::flat_..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record::{{closure}} (582 samples, 0.36%)</title><rect x="51.1194%" y="645" width="0.3582%" height="15" fill="rgb(211,50,8)" fg:x="83066" fg:w="582"/><text x="51.3694%" y="655.50"></text></g><g><title>__handle_mm_fault (18 samples, 0.01%)</title><rect x="52.6776%" y="613" width="0.0111%" height="15" fill="rgb(245,182,24)" fg:x="85598" fg:w="18"/><text x="52.9276%" y="623.50"></text></g><g><title>handle_pte_fault (17 samples, 0.01%)</title><rect x="52.6783%" y="597" width="0.0105%" height="15" fill="rgb(242,14,37)" fg:x="85599" fg:w="17"/><text x="52.9283%" y="607.50"></text></g><g><title>do_anonymous_page (17 samples, 0.01%)</title><rect x="52.6783%" y="581" width="0.0105%" height="15" fill="rgb(246,228,12)" fg:x="85599" fg:w="17"/><text x="52.9283%" y="591.50"></text></g><g><title>do_user_addr_fault (22 samples, 0.01%)</title><rect x="52.6758%" y="645" width="0.0135%" height="15" fill="rgb(213,55,15)" fg:x="85595" fg:w="22"/><text x="52.9258%" y="655.50"></text></g><g><title>handle_mm_fault (21 samples, 0.01%)</title><rect x="52.6764%" y="629" width="0.0129%" height="15" fill="rgb(209,9,3)" fg:x="85596" fg:w="21"/><text x="52.9264%" y="639.50"></text></g><g><title>asm_exc_page_fault (23 samples, 0.01%)</title><rect x="52.6758%" y="677" width="0.0142%" height="15" fill="rgb(230,59,30)" fg:x="85595" fg:w="23"/><text x="52.9258%" y="687.50"></text></g><g><title>exc_page_fault (23 samples, 0.01%)</title><rect x="52.6758%" y="661" width="0.0142%" height="15" fill="rgb(209,121,21)" fg:x="85595" fg:w="23"/><text x="52.9258%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,974 samples, 1.21%)</title><rect x="51.4776%" y="709" width="1.2148%" height="15" fill="rgb(220,109,13)" fg:x="83648" fg:w="1974"/><text x="51.7276%" y="719.50"></text></g><g><title>core::ptr::write (1,281 samples, 0.79%)</title><rect x="51.9041%" y="693" width="0.7883%" height="15" fill="rgb(232,18,1)" fg:x="84341" fg:w="1281"/><text x="52.1541%" y="703.50"></text></g><g><title>__hrtimer_run_queues (22 samples, 0.01%)</title><rect x="52.6924%" y="645" width="0.0135%" height="15" fill="rgb(215,41,42)" fg:x="85622" fg:w="22"/><text x="52.9424%" y="655.50"></text></g><g><title>tick_sched_timer (21 samples, 0.01%)</title><rect x="52.6930%" y="629" width="0.0129%" height="15" fill="rgb(224,123,36)" fg:x="85623" fg:w="21"/><text x="52.9430%" y="639.50"></text></g><g><title>__sysvec_apic_timer_interrupt (23 samples, 0.01%)</title><rect x="52.6924%" y="677" width="0.0142%" height="15" fill="rgb(240,125,3)" fg:x="85622" fg:w="23"/><text x="52.9424%" y="687.50"></text></g><g><title>hrtimer_interrupt (23 samples, 0.01%)</title><rect x="52.6924%" y="661" width="0.0142%" height="15" fill="rgb(205,98,50)" fg:x="85622" fg:w="23"/><text x="52.9424%" y="671.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (24 samples, 0.01%)</title><rect x="52.6924%" y="709" width="0.0148%" height="15" fill="rgb(205,185,37)" fg:x="85622" fg:w="24"/><text x="52.9424%" y="719.50"></text></g><g><title>sysvec_apic_timer_interrupt (24 samples, 0.01%)</title><rect x="52.6924%" y="693" width="0.0148%" height="15" fill="rgb(238,207,15)" fg:x="85622" fg:w="24"/><text x="52.9424%" y="703.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (72,548 samples, 44.65%)</title><rect x="8.0625%" y="741" width="44.6466%" height="15" fill="rgb(213,199,42)" fg:x="13101" fg:w="72548"/><text x="8.3125%" y="751.50">hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming</text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (72,548 samples, 44.65%)</title><rect x="8.0625%" y="725" width="44.6466%" height="15" fill="rgb(235,201,11)" fg:x="13101" fg:w="72548"/><text x="8.3125%" y="735.50">hprof_slurp::parser::record_parser::lazy_many1::{{closure}}</text></g><g><title>__clone3 (79,909 samples, 49.18%)</title><rect x="3.5392%" y="965" width="49.1766%" height="15" fill="rgb(207,46,11)" fg:x="5751" fg:w="79909"/><text x="3.7892%" y="975.50">__clone3</text></g><g><title>start_thread (79,909 samples, 49.18%)</title><rect x="3.5392%" y="949" width="49.1766%" height="15" fill="rgb(241,35,35)" fg:x="5751" fg:w="79909"/><text x="3.7892%" y="959.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (79,909 samples, 49.18%)</title><rect x="3.5392%" y="933" width="49.1766%" height="15" fill="rgb(243,32,47)" fg:x="5751" fg:w="79909"/><text x="3.7892%" y="943.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (79,909 samples, 49.18%)</title><rect x="3.5392%" y="917" width="49.1766%" height="15" fill="rgb(247,202,23)" fg:x="5751" fg:w="79909"/><text x="3.7892%" y="927.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (79,909 samples, 49.18%)</title><rect x="3.5392%" y="901" width="49.1766%" height="15" fill="rgb(219,102,11)" fg:x="5751" fg:w="79909"/><text x="3.7892%" y="911.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (79,909 samples, 49.18%)</title><rect x="3.5392%" y="885" width="49.1766%" height="15" fill="rgb(243,110,44)" fg:x="5751" fg:w="79909"/><text x="3.7892%" y="895.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (79,909 samples, 49.18%)</title><rect x="3.5392%" y="869" width="49.1766%" height="15" fill="rgb(222,74,54)" fg:x="5751" fg:w="79909"/><text x="3.7892%" y="879.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (79,909 samples, 49.18%)</title><rect x="3.5392%" y="853" width="49.1766%" height="15" fill="rgb(216,99,12)" fg:x="5751" fg:w="79909"/><text x="3.7892%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (79,909 samples, 49.18%)</title><rect x="3.5392%" y="837" width="49.1766%" height="15" fill="rgb(226,22,26)" fg:x="5751" fg:w="79909"/><text x="3.7892%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (79,909 samples, 49.18%)</title><rect x="3.5392%" y="821" width="49.1766%" height="15" fill="rgb(217,163,10)" fg:x="5751" fg:w="79909"/><text x="3.7892%" y="831.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (79,909 samples, 49.18%)</title><rect x="3.5392%" y="805" width="49.1766%" height="15" fill="rgb(213,25,53)" fg:x="5751" fg:w="79909"/><text x="3.7892%" y="815.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (79,909 samples, 49.18%)</title><rect x="3.5392%" y="789" width="49.1766%" height="15" fill="rgb(252,105,26)" fg:x="5751" fg:w="79909"/><text x="3.7892%" y="799.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (79,909 samples, 49.18%)</title><rect x="3.5392%" y="773" width="49.1766%" height="15" fill="rgb(220,39,43)" fg:x="5751" fg:w="79909"/><text x="3.7892%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}} (79,909 samples, 49.18%)</title><rect x="3.5392%" y="757" width="49.1766%" height="15" fill="rgb(229,68,48)" fg:x="5751" fg:w="79909"/><text x="3.7892%" y="767.50">hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{clos..</text></g><g><title>asm_exc_page_fault (53 samples, 0.03%)</title><rect x="52.7158%" y="965" width="0.0326%" height="15" fill="rgb(252,8,32)" fg:x="85660" fg:w="53"/><text x="52.9658%" y="975.50"></text></g><g><title>hprof-parser (85,728 samples, 52.76%)</title><rect x="0.0000%" y="981" width="52.7576%" height="15" fill="rgb(223,20,43)" fg:x="0" fg:w="85728"/><text x="0.2500%" y="991.50">hprof-parser</text></g><g><title>__irqentry_text_start (22 samples, 0.01%)</title><rect x="53.1706%" y="469" width="0.0135%" height="15" fill="rgb(229,81,49)" fg:x="86399" fg:w="22"/><text x="53.4206%" y="479.50"></text></g><g><title>copy_page_to_iter (376 samples, 0.23%)</title><rect x="53.1866%" y="469" width="0.2314%" height="15" fill="rgb(236,28,36)" fg:x="86425" fg:w="376"/><text x="53.4366%" y="479.50"></text></g><g><title>rcu_all_qs (18 samples, 0.01%)</title><rect x="53.4069%" y="453" width="0.0111%" height="15" fill="rgb(249,185,26)" fg:x="86783" fg:w="18"/><text x="53.6569%" y="463.50"></text></g><g><title>blk_mq_end_request (39 samples, 0.02%)</title><rect x="60.3665%" y="293" width="0.0240%" height="15" fill="rgb(249,174,33)" fg:x="98092" fg:w="39"/><text x="60.6165%" y="303.50"></text></g><g><title>blk_update_request (30 samples, 0.02%)</title><rect x="60.3721%" y="277" width="0.0185%" height="15" fill="rgb(233,201,37)" fg:x="98101" fg:w="30"/><text x="60.6221%" y="287.50"></text></g><g><title>bio_endio (23 samples, 0.01%)</title><rect x="60.3764%" y="261" width="0.0142%" height="15" fill="rgb(221,78,26)" fg:x="98108" fg:w="23"/><text x="60.6264%" y="271.50"></text></g><g><title>mpage_end_io (17 samples, 0.01%)</title><rect x="60.3801%" y="245" width="0.0105%" height="15" fill="rgb(250,127,30)" fg:x="98114" fg:w="17"/><text x="60.6301%" y="255.50"></text></g><g><title>nvme_complete_rq (40 samples, 0.02%)</title><rect x="60.3665%" y="309" width="0.0246%" height="15" fill="rgb(230,49,44)" fg:x="98092" fg:w="40"/><text x="60.6165%" y="319.50"></text></g><g><title>domain_unmap (18 samples, 0.01%)</title><rect x="60.3973%" y="181" width="0.0111%" height="15" fill="rgb(229,67,23)" fg:x="98142" fg:w="18"/><text x="60.6473%" y="191.50"></text></g><g><title>dma_pte_clear_level (18 samples, 0.01%)</title><rect x="60.3973%" y="165" width="0.0111%" height="15" fill="rgb(249,83,47)" fg:x="98142" fg:w="18"/><text x="60.6473%" y="175.50"></text></g><g><title>dma_pte_clear_level (18 samples, 0.01%)</title><rect x="60.3973%" y="149" width="0.0111%" height="15" fill="rgb(215,43,3)" fg:x="98142" fg:w="18"/><text x="60.6473%" y="159.50"></text></g><g><title>dma_pte_clear_level (17 samples, 0.01%)</title><rect x="60.3979%" y="133" width="0.0105%" height="15" fill="rgb(238,154,13)" fg:x="98143" fg:w="17"/><text x="60.6479%" y="143.50"></text></g><g><title>__iommu_dma_unmap (32 samples, 0.02%)</title><rect x="60.3924%" y="261" width="0.0197%" height="15" fill="rgb(219,56,2)" fg:x="98134" fg:w="32"/><text x="60.6424%" y="271.50"></text></g><g><title>iommu_unmap_fast (25 samples, 0.02%)</title><rect x="60.3967%" y="245" width="0.0154%" height="15" fill="rgb(233,0,4)" fg:x="98141" fg:w="25"/><text x="60.6467%" y="255.50"></text></g><g><title>__iommu_unmap (25 samples, 0.02%)</title><rect x="60.3967%" y="229" width="0.0154%" height="15" fill="rgb(235,30,7)" fg:x="98141" fg:w="25"/><text x="60.6467%" y="239.50"></text></g><g><title>intel_iommu_unmap_pages (24 samples, 0.01%)</title><rect x="60.3973%" y="213" width="0.0148%" height="15" fill="rgb(250,79,13)" fg:x="98142" fg:w="24"/><text x="60.6473%" y="223.50"></text></g><g><title>intel_iommu_unmap (24 samples, 0.01%)</title><rect x="60.3973%" y="197" width="0.0148%" height="15" fill="rgb(211,146,34)" fg:x="98142" fg:w="24"/><text x="60.6473%" y="207.50"></text></g><g><title>dma_unmap_sg_attrs (36 samples, 0.02%)</title><rect x="60.3912%" y="293" width="0.0222%" height="15" fill="rgb(228,22,38)" fg:x="98132" fg:w="36"/><text x="60.6412%" y="303.50"></text></g><g><title>iommu_dma_unmap_sg (34 samples, 0.02%)</title><rect x="60.3924%" y="277" width="0.0209%" height="15" fill="rgb(235,168,5)" fg:x="98134" fg:w="34"/><text x="60.6424%" y="287.50"></text></g><g><title>__handle_irq_event_percpu (96 samples, 0.06%)</title><rect x="60.3604%" y="373" width="0.0591%" height="15" fill="rgb(221,155,16)" fg:x="98082" fg:w="96"/><text x="60.6104%" y="383.50"></text></g><g><title>nvme_irq (96 samples, 0.06%)</title><rect x="60.3604%" y="357" width="0.0591%" height="15" fill="rgb(215,215,53)" fg:x="98082" fg:w="96"/><text x="60.6104%" y="367.50"></text></g><g><title>nvme_process_cq (96 samples, 0.06%)</title><rect x="60.3604%" y="341" width="0.0591%" height="15" fill="rgb(223,4,10)" fg:x="98082" fg:w="96"/><text x="60.6104%" y="351.50"></text></g><g><title>nvme_pci_complete_rq (87 samples, 0.05%)</title><rect x="60.3659%" y="325" width="0.0535%" height="15" fill="rgb(234,103,6)" fg:x="98091" fg:w="87"/><text x="60.6159%" y="335.50"></text></g><g><title>nvme_unmap_data (46 samples, 0.03%)</title><rect x="60.3912%" y="309" width="0.0283%" height="15" fill="rgb(227,97,0)" fg:x="98132" fg:w="46"/><text x="60.6412%" y="319.50"></text></g><g><title>__common_interrupt (105 samples, 0.06%)</title><rect x="60.3579%" y="421" width="0.0646%" height="15" fill="rgb(234,150,53)" fg:x="98078" fg:w="105"/><text x="60.6079%" y="431.50"></text></g><g><title>handle_edge_irq (103 samples, 0.06%)</title><rect x="60.3592%" y="405" width="0.0634%" height="15" fill="rgb(228,201,54)" fg:x="98080" fg:w="103"/><text x="60.6092%" y="415.50"></text></g><g><title>handle_irq_event (101 samples, 0.06%)</title><rect x="60.3604%" y="389" width="0.0622%" height="15" fill="rgb(222,22,37)" fg:x="98082" fg:w="101"/><text x="60.6104%" y="399.50"></text></g><g><title>asm_common_interrupt (108 samples, 0.07%)</title><rect x="60.3579%" y="453" width="0.0665%" height="15" fill="rgb(237,53,32)" fg:x="98078" fg:w="108"/><text x="60.6079%" y="463.50"></text></g><g><title>common_interrupt (108 samples, 0.07%)</title><rect x="60.3579%" y="437" width="0.0665%" height="15" fill="rgb(233,25,53)" fg:x="98078" fg:w="108"/><text x="60.6079%" y="447.50"></text></g><g><title>copy_user_enhanced_fast_string (11,411 samples, 7.02%)</title><rect x="53.4180%" y="469" width="7.0224%" height="15" fill="rgb(210,40,34)" fg:x="86801" fg:w="11411"/><text x="53.6680%" y="479.50">copy_user..</text></g><g><title>asm_sysvec_apic_timer_interrupt (26 samples, 0.02%)</title><rect x="60.4244%" y="453" width="0.0160%" height="15" fill="rgb(241,220,44)" fg:x="98186" fg:w="26"/><text x="60.6744%" y="463.50"></text></g><g><title>sysvec_apic_timer_interrupt (26 samples, 0.02%)</title><rect x="60.4244%" y="437" width="0.0160%" height="15" fill="rgb(235,28,35)" fg:x="98186" fg:w="26"/><text x="60.6744%" y="447.50"></text></g><g><title>isolate_lru_pages (54 samples, 0.03%)</title><rect x="60.4687%" y="293" width="0.0332%" height="15" fill="rgb(210,56,17)" fg:x="98258" fg:w="54"/><text x="60.7187%" y="303.50"></text></g><g><title>unaccount_page_cache_page (33 samples, 0.02%)</title><rect x="60.5875%" y="245" width="0.0203%" height="15" fill="rgb(224,130,29)" fg:x="98451" fg:w="33"/><text x="60.8375%" y="255.50"></text></g><g><title>xas_init_marks (19 samples, 0.01%)</title><rect x="60.6096%" y="245" width="0.0117%" height="15" fill="rgb(235,212,8)" fg:x="98487" fg:w="19"/><text x="60.8596%" y="255.50"></text></g><g><title>xas_create (52 samples, 0.03%)</title><rect x="60.6293%" y="229" width="0.0320%" height="15" fill="rgb(223,33,50)" fg:x="98519" fg:w="52"/><text x="60.8793%" y="239.50"></text></g><g><title>__delete_from_page_cache (136 samples, 0.08%)</title><rect x="60.5789%" y="261" width="0.0837%" height="15" fill="rgb(219,149,13)" fg:x="98437" fg:w="136"/><text x="60.8289%" y="271.50"></text></g><g><title>xas_store (67 samples, 0.04%)</title><rect x="60.6213%" y="245" width="0.0412%" height="15" fill="rgb(250,156,29)" fg:x="98506" fg:w="67"/><text x="60.8713%" y="255.50"></text></g><g><title>_raw_spin_lock_irq (301 samples, 0.19%)</title><rect x="60.6625%" y="261" width="0.1852%" height="15" fill="rgb(216,193,19)" fg:x="98573" fg:w="301"/><text x="60.9125%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (268 samples, 0.16%)</title><rect x="60.6829%" y="245" width="0.1649%" height="15" fill="rgb(216,135,14)" fg:x="98606" fg:w="268"/><text x="60.9329%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (268 samples, 0.16%)</title><rect x="60.6829%" y="229" width="0.1649%" height="15" fill="rgb(241,47,5)" fg:x="98606" fg:w="268"/><text x="60.9329%" y="239.50"></text></g><g><title>workingset_eviction (17 samples, 0.01%)</title><rect x="60.8502%" y="261" width="0.0105%" height="15" fill="rgb(233,42,35)" fg:x="98878" fg:w="17"/><text x="61.1002%" y="271.50"></text></g><g><title>__remove_mapping (514 samples, 0.32%)</title><rect x="60.5450%" y="277" width="0.3163%" height="15" fill="rgb(231,13,6)" fg:x="98382" fg:w="514"/><text x="60.7950%" y="287.50"></text></g><g><title>__free_one_page (26 samples, 0.02%)</title><rect x="60.8792%" y="229" width="0.0160%" height="15" fill="rgb(207,181,40)" fg:x="98925" fg:w="26"/><text x="61.1292%" y="239.50"></text></g><g><title>free_unref_page_list (55 samples, 0.03%)</title><rect x="60.8619%" y="277" width="0.0338%" height="15" fill="rgb(254,173,49)" fg:x="98897" fg:w="55"/><text x="61.1119%" y="287.50"></text></g><g><title>free_unref_page_commit.constprop.0 (43 samples, 0.03%)</title><rect x="60.8693%" y="261" width="0.0265%" height="15" fill="rgb(221,1,38)" fg:x="98909" fg:w="43"/><text x="61.1193%" y="271.50"></text></g><g><title>free_pcppages_bulk (40 samples, 0.02%)</title><rect x="60.8712%" y="245" width="0.0246%" height="15" fill="rgb(206,124,46)" fg:x="98912" fg:w="40"/><text x="61.1212%" y="255.50"></text></g><g><title>shrink_page_list (657 samples, 0.40%)</title><rect x="60.5050%" y="293" width="0.4043%" height="15" fill="rgb(249,21,11)" fg:x="98317" fg:w="657"/><text x="60.7550%" y="303.50"></text></g><g><title>shrink_lruvec (756 samples, 0.47%)</title><rect x="60.4619%" y="325" width="0.4652%" height="15" fill="rgb(222,201,40)" fg:x="98247" fg:w="756"/><text x="60.7119%" y="335.50"></text></g><g><title>shrink_inactive_list (751 samples, 0.46%)</title><rect x="60.4650%" y="309" width="0.4622%" height="15" fill="rgb(235,61,29)" fg:x="98252" fg:w="751"/><text x="60.7150%" y="319.50"></text></g><g><title>unlock_page (29 samples, 0.02%)</title><rect x="60.9093%" y="293" width="0.0178%" height="15" fill="rgb(219,207,3)" fg:x="98974" fg:w="29"/><text x="61.1593%" y="303.50"></text></g><g><title>__page_cache_alloc (798 samples, 0.49%)</title><rect x="60.4521%" y="453" width="0.4911%" height="15" fill="rgb(222,56,46)" fg:x="98231" fg:w="798"/><text x="60.7021%" y="463.50"></text></g><g><title>alloc_pages (798 samples, 0.49%)</title><rect x="60.4521%" y="437" width="0.4911%" height="15" fill="rgb(239,76,54)" fg:x="98231" fg:w="798"/><text x="60.7021%" y="447.50"></text></g><g><title>__alloc_pages (798 samples, 0.49%)</title><rect x="60.4521%" y="421" width="0.4911%" height="15" fill="rgb(231,124,27)" fg:x="98231" fg:w="798"/><text x="60.7021%" y="431.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (798 samples, 0.49%)</title><rect x="60.4521%" y="405" width="0.4911%" height="15" fill="rgb(249,195,6)" fg:x="98231" fg:w="798"/><text x="60.7021%" y="415.50"></text></g><g><title>try_to_free_pages (792 samples, 0.49%)</title><rect x="60.4558%" y="389" width="0.4874%" height="15" fill="rgb(237,174,47)" fg:x="98237" fg:w="792"/><text x="60.7058%" y="399.50"></text></g><g><title>do_try_to_free_pages (792 samples, 0.49%)</title><rect x="60.4558%" y="373" width="0.4874%" height="15" fill="rgb(206,201,31)" fg:x="98237" fg:w="792"/><text x="60.7058%" y="383.50"></text></g><g><title>shrink_node (792 samples, 0.49%)</title><rect x="60.4558%" y="357" width="0.4874%" height="15" fill="rgb(231,57,52)" fg:x="98237" fg:w="792"/><text x="60.7058%" y="367.50"></text></g><g><title>shrink_node_memcgs (788 samples, 0.48%)</title><rect x="60.4582%" y="341" width="0.4849%" height="15" fill="rgb(248,177,22)" fg:x="98241" fg:w="788"/><text x="60.7082%" y="351.50"></text></g><g><title>shrink_slab (26 samples, 0.02%)</title><rect x="60.9272%" y="325" width="0.0160%" height="15" fill="rgb(215,211,37)" fg:x="99003" fg:w="26"/><text x="61.1772%" y="335.50"></text></g><g><title>shrink_slab_memcg (21 samples, 0.01%)</title><rect x="60.9302%" y="309" width="0.0129%" height="15" fill="rgb(241,128,51)" fg:x="99008" fg:w="21"/><text x="61.1802%" y="319.50"></text></g><g><title>filemap_get_read_batch (551 samples, 0.34%)</title><rect x="60.9450%" y="453" width="0.3391%" height="15" fill="rgb(227,165,31)" fg:x="99032" fg:w="551"/><text x="61.1950%" y="463.50"></text></g><g><title>xas_load (57 samples, 0.04%)</title><rect x="61.2490%" y="437" width="0.0351%" height="15" fill="rgb(228,167,24)" fg:x="99526" fg:w="57"/><text x="61.4990%" y="447.50"></text></g><g><title>filemap_update_page (24 samples, 0.01%)</title><rect x="61.2866%" y="453" width="0.0148%" height="15" fill="rgb(228,143,12)" fg:x="99587" fg:w="24"/><text x="61.5366%" y="463.50"></text></g><g><title>wait_on_page_bit_common (23 samples, 0.01%)</title><rect x="61.2872%" y="437" width="0.0142%" height="15" fill="rgb(249,149,8)" fg:x="99588" fg:w="23"/><text x="61.5372%" y="447.50"></text></g><g><title>io_schedule (20 samples, 0.01%)</title><rect x="61.2890%" y="421" width="0.0123%" height="15" fill="rgb(243,35,44)" fg:x="99591" fg:w="20"/><text x="61.5390%" y="431.50"></text></g><g><title>schedule (20 samples, 0.01%)</title><rect x="61.2890%" y="405" width="0.0123%" height="15" fill="rgb(246,89,9)" fg:x="99591" fg:w="20"/><text x="61.5390%" y="415.50"></text></g><g><title>__schedule (20 samples, 0.01%)</title><rect x="61.2890%" y="389" width="0.0123%" height="15" fill="rgb(233,213,13)" fg:x="99591" fg:w="20"/><text x="61.5390%" y="399.50"></text></g><g><title>_find_first_bit (26 samples, 0.02%)</title><rect x="61.4958%" y="389" width="0.0160%" height="15" fill="rgb(233,141,41)" fg:x="99927" fg:w="26"/><text x="61.7458%" y="399.50"></text></g><g><title>flush_work (20 samples, 0.01%)</title><rect x="61.7610%" y="325" width="0.0123%" height="15" fill="rgb(239,167,4)" fg:x="100358" fg:w="20"/><text x="62.0110%" y="335.50"></text></g><g><title>__flush_work.isra.0 (20 samples, 0.01%)</title><rect x="61.7610%" y="309" width="0.0123%" height="15" fill="rgb(209,217,16)" fg:x="100358" fg:w="20"/><text x="62.0110%" y="319.50"></text></g><g><title>__drain_all_pages (22 samples, 0.01%)</title><rect x="61.7610%" y="341" width="0.0135%" height="15" fill="rgb(219,88,35)" fg:x="100358" fg:w="22"/><text x="62.0110%" y="351.50"></text></g><g><title>clear_page_erms (77 samples, 0.05%)</title><rect x="61.7814%" y="325" width="0.0474%" height="15" fill="rgb(220,193,23)" fg:x="100391" fg:w="77"/><text x="62.0314%" y="335.50"></text></g><g><title>get_page_from_freelist (119 samples, 0.07%)</title><rect x="61.7746%" y="341" width="0.0732%" height="15" fill="rgb(230,90,52)" fg:x="100380" fg:w="119"/><text x="62.0246%" y="351.50"></text></g><g><title>rmqueue (29 samples, 0.02%)</title><rect x="61.8300%" y="325" width="0.0178%" height="15" fill="rgb(252,106,19)" fg:x="100470" fg:w="29"/><text x="62.0800%" y="335.50"></text></g><g><title>isolate_lru_pages (49 samples, 0.03%)</title><rect x="61.8749%" y="245" width="0.0302%" height="15" fill="rgb(206,74,20)" fg:x="100543" fg:w="49"/><text x="62.1249%" y="255.50"></text></g><g><title>unaccount_page_cache_page (38 samples, 0.02%)</title><rect x="61.9974%" y="197" width="0.0234%" height="15" fill="rgb(230,138,44)" fg:x="100742" fg:w="38"/><text x="62.2474%" y="207.50"></text></g><g><title>xas_init_marks (17 samples, 0.01%)</title><rect x="62.0232%" y="197" width="0.0105%" height="15" fill="rgb(235,182,43)" fg:x="100784" fg:w="17"/><text x="62.2732%" y="207.50"></text></g><g><title>__delete_from_page_cache (116 samples, 0.07%)</title><rect x="61.9918%" y="213" width="0.0714%" height="15" fill="rgb(242,16,51)" fg:x="100733" fg:w="116"/><text x="62.2418%" y="223.50"></text></g><g><title>xas_store (48 samples, 0.03%)</title><rect x="62.0337%" y="197" width="0.0295%" height="15" fill="rgb(248,9,4)" fg:x="100801" fg:w="48"/><text x="62.2837%" y="207.50"></text></g><g><title>xas_create (33 samples, 0.02%)</title><rect x="62.0429%" y="181" width="0.0203%" height="15" fill="rgb(210,31,22)" fg:x="100816" fg:w="33"/><text x="62.2929%" y="191.50"></text></g><g><title>_raw_spin_lock_irq (202 samples, 0.12%)</title><rect x="62.0632%" y="213" width="0.1243%" height="15" fill="rgb(239,54,39)" fg:x="100849" fg:w="202"/><text x="62.3132%" y="223.50"></text></g><g><title>native_queued_spin_lock_slowpath (177 samples, 0.11%)</title><rect x="62.0786%" y="197" width="0.1089%" height="15" fill="rgb(230,99,41)" fg:x="100874" fg:w="177"/><text x="62.3286%" y="207.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (177 samples, 0.11%)</title><rect x="62.0786%" y="181" width="0.1089%" height="15" fill="rgb(253,106,12)" fg:x="100874" fg:w="177"/><text x="62.3286%" y="191.50"></text></g><g><title>workingset_eviction (21 samples, 0.01%)</title><rect x="62.1918%" y="213" width="0.0129%" height="15" fill="rgb(213,46,41)" fg:x="101058" fg:w="21"/><text x="62.4418%" y="223.50"></text></g><g><title>__remove_mapping (415 samples, 0.26%)</title><rect x="61.9500%" y="229" width="0.2554%" height="15" fill="rgb(215,133,35)" fg:x="100665" fg:w="415"/><text x="62.2000%" y="239.50"></text></g><g><title>__free_one_page (27 samples, 0.02%)</title><rect x="62.2275%" y="181" width="0.0166%" height="15" fill="rgb(213,28,5)" fg:x="101116" fg:w="27"/><text x="62.4775%" y="191.50"></text></g><g><title>free_unref_page_list (64 samples, 0.04%)</title><rect x="62.2072%" y="229" width="0.0394%" height="15" fill="rgb(215,77,49)" fg:x="101083" fg:w="64"/><text x="62.4572%" y="239.50"></text></g><g><title>free_unref_page_commit.constprop.0 (43 samples, 0.03%)</title><rect x="62.2201%" y="213" width="0.0265%" height="15" fill="rgb(248,100,22)" fg:x="101104" fg:w="43"/><text x="62.4701%" y="223.50"></text></g><g><title>free_pcppages_bulk (39 samples, 0.02%)</title><rect x="62.2226%" y="197" width="0.0240%" height="15" fill="rgb(208,67,9)" fg:x="101108" fg:w="39"/><text x="62.4726%" y="207.50"></text></g><g><title>shrink_page_list (562 samples, 0.35%)</title><rect x="61.9106%" y="245" width="0.3459%" height="15" fill="rgb(219,133,21)" fg:x="100601" fg:w="562"/><text x="62.1606%" y="255.50"></text></g><g><title>shrink_lruvec (674 samples, 0.41%)</title><rect x="61.8583%" y="277" width="0.4148%" height="15" fill="rgb(246,46,29)" fg:x="100516" fg:w="674"/><text x="62.1083%" y="287.50"></text></g><g><title>shrink_inactive_list (661 samples, 0.41%)</title><rect x="61.8663%" y="261" width="0.4068%" height="15" fill="rgb(246,185,52)" fg:x="100529" fg:w="661"/><text x="62.1163%" y="271.50"></text></g><g><title>unlock_page (27 samples, 0.02%)</title><rect x="62.2565%" y="245" width="0.0166%" height="15" fill="rgb(252,136,11)" fg:x="101163" fg:w="27"/><text x="62.5065%" y="255.50"></text></g><g><title>do_shrink_slab (29 samples, 0.02%)</title><rect x="62.2817%" y="245" width="0.0178%" height="15" fill="rgb(219,138,53)" fg:x="101204" fg:w="29"/><text x="62.5317%" y="255.50"></text></g><g><title>shrink_node_memcgs (730 samples, 0.45%)</title><rect x="61.8509%" y="293" width="0.4492%" height="15" fill="rgb(211,51,23)" fg:x="100504" fg:w="730"/><text x="62.1009%" y="303.50"></text></g><g><title>shrink_slab (44 samples, 0.03%)</title><rect x="62.2731%" y="277" width="0.0271%" height="15" fill="rgb(247,221,28)" fg:x="101190" fg:w="44"/><text x="62.5231%" y="287.50"></text></g><g><title>shrink_slab_memcg (34 samples, 0.02%)</title><rect x="62.2792%" y="261" width="0.0209%" height="15" fill="rgb(251,222,45)" fg:x="101200" fg:w="34"/><text x="62.5292%" y="271.50"></text></g><g><title>try_to_free_pages (733 samples, 0.45%)</title><rect x="61.8497%" y="341" width="0.4511%" height="15" fill="rgb(217,162,53)" fg:x="100502" fg:w="733"/><text x="62.0997%" y="351.50"></text></g><g><title>do_try_to_free_pages (733 samples, 0.45%)</title><rect x="61.8497%" y="325" width="0.4511%" height="15" fill="rgb(229,93,14)" fg:x="100502" fg:w="733"/><text x="62.0997%" y="335.50"></text></g><g><title>shrink_node (733 samples, 0.45%)</title><rect x="61.8497%" y="309" width="0.4511%" height="15" fill="rgb(209,67,49)" fg:x="100502" fg:w="733"/><text x="62.0997%" y="319.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (896 samples, 0.55%)</title><rect x="61.7567%" y="357" width="0.5514%" height="15" fill="rgb(213,87,29)" fg:x="100351" fg:w="896"/><text x="62.0067%" y="367.50"></text></g><g><title>__next_zones_zonelist (67 samples, 0.04%)</title><rect x="62.3174%" y="357" width="0.0412%" height="15" fill="rgb(205,151,52)" fg:x="101262" fg:w="67"/><text x="62.5674%" y="367.50"></text></g><g><title>__next_zones_zonelist (24 samples, 0.01%)</title><rect x="62.5494%" y="341" width="0.0148%" height="15" fill="rgb(253,215,39)" fg:x="101639" fg:w="24"/><text x="62.7994%" y="351.50"></text></g><g><title>__read_end_io (50 samples, 0.03%)</title><rect x="64.3771%" y="101" width="0.0308%" height="15" fill="rgb(221,220,41)" fg:x="104609" fg:w="50"/><text x="64.6271%" y="111.50"></text></g><g><title>blk_update_request (74 samples, 0.05%)</title><rect x="64.3747%" y="149" width="0.0455%" height="15" fill="rgb(218,133,21)" fg:x="104605" fg:w="74"/><text x="64.6247%" y="159.50"></text></g><g><title>bio_endio (72 samples, 0.04%)</title><rect x="64.3759%" y="133" width="0.0443%" height="15" fill="rgb(221,193,43)" fg:x="104607" fg:w="72"/><text x="64.6259%" y="143.50"></text></g><g><title>mpage_end_io (70 samples, 0.04%)</title><rect x="64.3771%" y="117" width="0.0431%" height="15" fill="rgb(240,128,52)" fg:x="104609" fg:w="70"/><text x="64.6271%" y="127.50"></text></g><g><title>unlock_page (20 samples, 0.01%)</title><rect x="64.4079%" y="101" width="0.0123%" height="15" fill="rgb(253,114,12)" fg:x="104659" fg:w="20"/><text x="64.6579%" y="111.50"></text></g><g><title>nvme_complete_rq (75 samples, 0.05%)</title><rect x="64.3747%" y="181" width="0.0462%" height="15" fill="rgb(215,223,47)" fg:x="104605" fg:w="75"/><text x="64.6247%" y="191.50"></text></g><g><title>blk_mq_end_request (75 samples, 0.05%)</title><rect x="64.3747%" y="165" width="0.0462%" height="15" fill="rgb(248,225,23)" fg:x="104605" fg:w="75"/><text x="64.6247%" y="175.50"></text></g><g><title>handle_irq_event (100 samples, 0.06%)</title><rect x="64.3716%" y="261" width="0.0615%" height="15" fill="rgb(250,108,0)" fg:x="104600" fg:w="100"/><text x="64.6216%" y="271.50"></text></g><g><title>__handle_irq_event_percpu (100 samples, 0.06%)</title><rect x="64.3716%" y="245" width="0.0615%" height="15" fill="rgb(228,208,7)" fg:x="104600" fg:w="100"/><text x="64.6216%" y="255.50"></text></g><g><title>nvme_irq (98 samples, 0.06%)</title><rect x="64.3728%" y="229" width="0.0603%" height="15" fill="rgb(244,45,10)" fg:x="104602" fg:w="98"/><text x="64.6228%" y="239.50"></text></g><g><title>nvme_process_cq (98 samples, 0.06%)</title><rect x="64.3728%" y="213" width="0.0603%" height="15" fill="rgb(207,125,25)" fg:x="104602" fg:w="98"/><text x="64.6228%" y="223.50"></text></g><g><title>nvme_pci_complete_rq (95 samples, 0.06%)</title><rect x="64.3747%" y="197" width="0.0585%" height="15" fill="rgb(210,195,18)" fg:x="104605" fg:w="95"/><text x="64.6247%" y="207.50"></text></g><g><title>nvme_unmap_data (20 samples, 0.01%)</title><rect x="64.4208%" y="181" width="0.0123%" height="15" fill="rgb(249,80,12)" fg:x="104680" fg:w="20"/><text x="64.6708%" y="191.50"></text></g><g><title>handle_edge_irq (101 samples, 0.06%)</title><rect x="64.3716%" y="277" width="0.0622%" height="15" fill="rgb(221,65,9)" fg:x="104600" fg:w="101"/><text x="64.6216%" y="287.50"></text></g><g><title>asm_common_interrupt (102 samples, 0.06%)</title><rect x="64.3716%" y="325" width="0.0628%" height="15" fill="rgb(235,49,36)" fg:x="104600" fg:w="102"/><text x="64.6216%" y="335.50"></text></g><g><title>common_interrupt (102 samples, 0.06%)</title><rect x="64.3716%" y="309" width="0.0628%" height="15" fill="rgb(225,32,20)" fg:x="104600" fg:w="102"/><text x="64.6216%" y="319.50"></text></g><g><title>__common_interrupt (102 samples, 0.06%)</title><rect x="64.3716%" y="293" width="0.0628%" height="15" fill="rgb(215,141,46)" fg:x="104600" fg:w="102"/><text x="64.6216%" y="303.50"></text></g><g><title>clear_page_erms (3,026 samples, 1.86%)</title><rect x="62.5765%" y="341" width="1.8622%" height="15" fill="rgb(250,160,47)" fg:x="101683" fg:w="3026"/><text x="62.8265%" y="351.50">c..</text></g><g><title>kernel_init_free_pages.part.0 (70 samples, 0.04%)</title><rect x="64.4387%" y="341" width="0.0431%" height="15" fill="rgb(216,222,40)" fg:x="104709" fg:w="70"/><text x="64.6887%" y="351.50"></text></g><g><title>__read_end_io (33 samples, 0.02%)</title><rect x="64.7150%" y="101" width="0.0203%" height="15" fill="rgb(234,217,39)" fg:x="105158" fg:w="33"/><text x="64.9650%" y="111.50"></text></g><g><title>nvme_complete_rq (54 samples, 0.03%)</title><rect x="64.7119%" y="181" width="0.0332%" height="15" fill="rgb(207,178,40)" fg:x="105153" fg:w="54"/><text x="64.9619%" y="191.50"></text></g><g><title>blk_mq_end_request (54 samples, 0.03%)</title><rect x="64.7119%" y="165" width="0.0332%" height="15" fill="rgb(221,136,13)" fg:x="105153" fg:w="54"/><text x="64.9619%" y="175.50"></text></g><g><title>blk_update_request (53 samples, 0.03%)</title><rect x="64.7125%" y="149" width="0.0326%" height="15" fill="rgb(249,199,10)" fg:x="105154" fg:w="53"/><text x="64.9625%" y="159.50"></text></g><g><title>bio_endio (50 samples, 0.03%)</title><rect x="64.7144%" y="133" width="0.0308%" height="15" fill="rgb(249,222,13)" fg:x="105157" fg:w="50"/><text x="64.9644%" y="143.50"></text></g><g><title>mpage_end_io (49 samples, 0.03%)</title><rect x="64.7150%" y="117" width="0.0302%" height="15" fill="rgb(244,185,38)" fg:x="105158" fg:w="49"/><text x="64.9650%" y="127.50"></text></g><g><title>handle_irq_event (67 samples, 0.04%)</title><rect x="64.7095%" y="261" width="0.0412%" height="15" fill="rgb(236,202,9)" fg:x="105149" fg:w="67"/><text x="64.9595%" y="271.50"></text></g><g><title>__handle_irq_event_percpu (66 samples, 0.04%)</title><rect x="64.7101%" y="245" width="0.0406%" height="15" fill="rgb(250,229,37)" fg:x="105150" fg:w="66"/><text x="64.9601%" y="255.50"></text></g><g><title>nvme_irq (66 samples, 0.04%)</title><rect x="64.7101%" y="229" width="0.0406%" height="15" fill="rgb(206,174,23)" fg:x="105150" fg:w="66"/><text x="64.9601%" y="239.50"></text></g><g><title>nvme_process_cq (66 samples, 0.04%)</title><rect x="64.7101%" y="213" width="0.0406%" height="15" fill="rgb(211,33,43)" fg:x="105150" fg:w="66"/><text x="64.9601%" y="223.50"></text></g><g><title>nvme_pci_complete_rq (64 samples, 0.04%)</title><rect x="64.7113%" y="197" width="0.0394%" height="15" fill="rgb(245,58,50)" fg:x="105152" fg:w="64"/><text x="64.9613%" y="207.50"></text></g><g><title>asm_common_interrupt (70 samples, 0.04%)</title><rect x="64.7082%" y="325" width="0.0431%" height="15" fill="rgb(244,68,36)" fg:x="105147" fg:w="70"/><text x="64.9582%" y="335.50"></text></g><g><title>common_interrupt (70 samples, 0.04%)</title><rect x="64.7082%" y="309" width="0.0431%" height="15" fill="rgb(232,229,15)" fg:x="105147" fg:w="70"/><text x="64.9582%" y="319.50"></text></g><g><title>__common_interrupt (70 samples, 0.04%)</title><rect x="64.7082%" y="293" width="0.0431%" height="15" fill="rgb(254,30,23)" fg:x="105147" fg:w="70"/><text x="64.9582%" y="303.50"></text></g><g><title>handle_edge_irq (69 samples, 0.04%)</title><rect x="64.7089%" y="277" width="0.0425%" height="15" fill="rgb(235,160,14)" fg:x="105148" fg:w="69"/><text x="64.9589%" y="287.50"></text></g><g><title>_raw_spin_lock (23 samples, 0.01%)</title><rect x="65.4332%" y="309" width="0.0142%" height="15" fill="rgb(212,155,44)" fg:x="106325" fg:w="23"/><text x="65.6832%" y="319.50"></text></g><g><title>native_queued_spin_lock_slowpath (23 samples, 0.01%)</title><rect x="65.4332%" y="293" width="0.0142%" height="15" fill="rgb(226,2,50)" fg:x="106325" fg:w="23"/><text x="65.6832%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (23 samples, 0.01%)</title><rect x="65.4332%" y="277" width="0.0142%" height="15" fill="rgb(234,177,6)" fg:x="106325" fg:w="23"/><text x="65.6832%" y="287.50"></text></g><g><title>rmqueue_bulk (1,126 samples, 0.69%)</title><rect x="64.7556%" y="325" width="0.6929%" height="15" fill="rgb(217,24,9)" fg:x="105224" fg:w="1126"/><text x="65.0056%" y="335.50"></text></g><g><title>rmqueue (1,573 samples, 0.97%)</title><rect x="64.4818%" y="341" width="0.9680%" height="15" fill="rgb(220,13,46)" fg:x="104779" fg:w="1573"/><text x="64.7318%" y="351.50"></text></g><g><title>get_page_from_freelist (5,010 samples, 3.08%)</title><rect x="62.3678%" y="357" width="3.0832%" height="15" fill="rgb(239,221,27)" fg:x="101344" fg:w="5010"/><text x="62.6178%" y="367.50">get..</text></g><g><title>__alloc_pages (6,322 samples, 3.89%)</title><rect x="61.5814%" y="373" width="3.8906%" height="15" fill="rgb(222,198,25)" fg:x="100066" fg:w="6322"/><text x="61.8314%" y="383.50">__al..</text></g><g><title>__cond_resched (23 samples, 0.01%)</title><rect x="65.4720%" y="373" width="0.0142%" height="15" fill="rgb(211,99,13)" fg:x="106388" fg:w="23"/><text x="65.7220%" y="383.50"></text></g><g><title>__next_zones_zonelist (26 samples, 0.02%)</title><rect x="65.4861%" y="373" width="0.0160%" height="15" fill="rgb(232,111,31)" fg:x="106411" fg:w="26"/><text x="65.7361%" y="383.50"></text></g><g><title>policy_nodemask (41 samples, 0.03%)</title><rect x="65.5150%" y="373" width="0.0252%" height="15" fill="rgb(245,82,37)" fg:x="106458" fg:w="41"/><text x="65.7650%" y="383.50"></text></g><g><title>alloc_pages (6,561 samples, 4.04%)</title><rect x="61.5118%" y="389" width="4.0377%" height="15" fill="rgb(227,149,46)" fg:x="99953" fg:w="6561"/><text x="61.7618%" y="399.50">allo..</text></g><g><title>__page_cache_alloc (6,652 samples, 4.09%)</title><rect x="61.4644%" y="405" width="4.0937%" height="15" fill="rgb(218,36,50)" fg:x="99876" fg:w="6652"/><text x="61.7144%" y="415.50">__pa..</text></g><g><title>PageHuge (56 samples, 0.03%)</title><rect x="65.6221%" y="389" width="0.0345%" height="15" fill="rgb(226,80,48)" fg:x="106632" fg:w="56"/><text x="65.8721%" y="399.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (123 samples, 0.08%)</title><rect x="67.1988%" y="341" width="0.0757%" height="15" fill="rgb(238,224,15)" fg:x="109194" fg:w="123"/><text x="67.4488%" y="351.50"></text></g><g><title>cgroup_rstat_updated (64 samples, 0.04%)</title><rect x="67.2351%" y="325" width="0.0394%" height="15" fill="rgb(241,136,10)" fg:x="109253" fg:w="64"/><text x="67.4851%" y="335.50"></text></g><g><title>page_counter_try_charge (42 samples, 0.03%)</title><rect x="67.3945%" y="325" width="0.0258%" height="15" fill="rgb(208,32,45)" fg:x="109512" fg:w="42"/><text x="67.6445%" y="335.50"></text></g><g><title>charge_memcg (500 samples, 0.31%)</title><rect x="67.1151%" y="357" width="0.3077%" height="15" fill="rgb(207,135,9)" fg:x="109058" fg:w="500"/><text x="67.3651%" y="367.50"></text></g><g><title>try_charge_memcg (220 samples, 0.14%)</title><rect x="67.2874%" y="341" width="0.1354%" height="15" fill="rgb(206,86,44)" fg:x="109338" fg:w="220"/><text x="67.5374%" y="351.50"></text></g><g><title>get_mem_cgroup_from_mm (103 samples, 0.06%)</title><rect x="67.4228%" y="357" width="0.0634%" height="15" fill="rgb(245,177,15)" fg:x="109558" fg:w="103"/><text x="67.6728%" y="367.50"></text></g><g><title>rcu_read_unlock_strict (25 samples, 0.02%)</title><rect x="67.4991%" y="357" width="0.0154%" height="15" fill="rgb(206,64,50)" fg:x="109682" fg:w="25"/><text x="67.7491%" y="367.50"></text></g><g><title>__mem_cgroup_charge (700 samples, 0.43%)</title><rect x="67.0880%" y="373" width="0.4308%" height="15" fill="rgb(234,36,40)" fg:x="109014" fg:w="700"/><text x="67.3380%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (151 samples, 0.09%)</title><rect x="67.5686%" y="341" width="0.0929%" height="15" fill="rgb(213,64,8)" fg:x="109795" fg:w="151"/><text x="67.8186%" y="351.50"></text></g><g><title>cgroup_rstat_updated (55 samples, 0.03%)</title><rect x="67.6277%" y="325" width="0.0338%" height="15" fill="rgb(210,75,36)" fg:x="109891" fg:w="55"/><text x="67.8777%" y="335.50"></text></g><g><title>__mod_node_page_state (116 samples, 0.07%)</title><rect x="67.6616%" y="341" width="0.0714%" height="15" fill="rgb(229,88,21)" fg:x="109946" fg:w="116"/><text x="67.9116%" y="351.50"></text></g><g><title>__mod_lruvec_state (298 samples, 0.18%)</title><rect x="67.5533%" y="357" width="0.1834%" height="15" fill="rgb(252,204,47)" fg:x="109770" fg:w="298"/><text x="67.8033%" y="367.50"></text></g><g><title>__mod_node_page_state (20 samples, 0.01%)</title><rect x="67.7459%" y="357" width="0.0123%" height="15" fill="rgb(208,77,27)" fg:x="110083" fg:w="20"/><text x="67.9959%" y="367.50"></text></g><g><title>__mod_lruvec_page_state (394 samples, 0.24%)</title><rect x="67.5188%" y="373" width="0.2425%" height="15" fill="rgb(221,76,26)" fg:x="109714" fg:w="394"/><text x="67.7688%" y="383.50"></text></g><g><title>_raw_spin_lock_irq (301 samples, 0.19%)</title><rect x="67.7687%" y="373" width="0.1852%" height="15" fill="rgb(225,139,18)" fg:x="110120" fg:w="301"/><text x="68.0187%" y="383.50"></text></g><g><title>native_queued_spin_lock_slowpath (122 samples, 0.08%)</title><rect x="67.8788%" y="357" width="0.0751%" height="15" fill="rgb(230,137,11)" fg:x="110299" fg:w="122"/><text x="68.1288%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (122 samples, 0.08%)</title><rect x="67.8788%" y="341" width="0.0751%" height="15" fill="rgb(212,28,1)" fg:x="110299" fg:w="122"/><text x="68.1288%" y="351.50"></text></g><g><title>__read_end_io (97 samples, 0.06%)</title><rect x="67.9662%" y="149" width="0.0597%" height="15" fill="rgb(248,164,17)" fg:x="110441" fg:w="97"/><text x="68.2162%" y="159.50"></text></g><g><title>blk_update_request (155 samples, 0.10%)</title><rect x="67.9619%" y="197" width="0.0954%" height="15" fill="rgb(222,171,42)" fg:x="110434" fg:w="155"/><text x="68.2119%" y="207.50"></text></g><g><title>bio_endio (152 samples, 0.09%)</title><rect x="67.9637%" y="181" width="0.0935%" height="15" fill="rgb(243,84,45)" fg:x="110437" fg:w="152"/><text x="68.2137%" y="191.50"></text></g><g><title>mpage_end_io (148 samples, 0.09%)</title><rect x="67.9662%" y="165" width="0.0911%" height="15" fill="rgb(252,49,23)" fg:x="110441" fg:w="148"/><text x="68.2162%" y="175.50"></text></g><g><title>unlock_page (51 samples, 0.03%)</title><rect x="68.0259%" y="149" width="0.0314%" height="15" fill="rgb(215,19,7)" fg:x="110538" fg:w="51"/><text x="68.2759%" y="159.50"></text></g><g><title>blk_mq_end_request (159 samples, 0.10%)</title><rect x="67.9600%" y="213" width="0.0978%" height="15" fill="rgb(238,81,41)" fg:x="110431" fg:w="159"/><text x="68.2100%" y="223.50"></text></g><g><title>nvme_complete_rq (160 samples, 0.10%)</title><rect x="67.9600%" y="229" width="0.0985%" height="15" fill="rgb(210,199,37)" fg:x="110431" fg:w="160"/><text x="68.2100%" y="239.50"></text></g><g><title>domain_unmap (22 samples, 0.01%)</title><rect x="68.0622%" y="101" width="0.0135%" height="15" fill="rgb(244,192,49)" fg:x="110597" fg:w="22"/><text x="68.3122%" y="111.50"></text></g><g><title>dma_pte_clear_level (21 samples, 0.01%)</title><rect x="68.0628%" y="85" width="0.0129%" height="15" fill="rgb(226,211,11)" fg:x="110598" fg:w="21"/><text x="68.3128%" y="95.50"></text></g><g><title>dma_pte_clear_level (20 samples, 0.01%)</title><rect x="68.0634%" y="69" width="0.0123%" height="15" fill="rgb(236,162,54)" fg:x="110599" fg:w="20"/><text x="68.3134%" y="79.50"></text></g><g><title>dma_pte_clear_level (20 samples, 0.01%)</title><rect x="68.0634%" y="53" width="0.0123%" height="15" fill="rgb(220,229,9)" fg:x="110599" fg:w="20"/><text x="68.3134%" y="63.50"></text></g><g><title>dma_pte_clear_level (18 samples, 0.01%)</title><rect x="68.0647%" y="37" width="0.0111%" height="15" fill="rgb(250,87,22)" fg:x="110601" fg:w="18"/><text x="68.3147%" y="47.50"></text></g><g><title>dma_unmap_sg_attrs (33 samples, 0.02%)</title><rect x="68.0585%" y="213" width="0.0203%" height="15" fill="rgb(239,43,17)" fg:x="110591" fg:w="33"/><text x="68.3085%" y="223.50"></text></g><g><title>iommu_dma_unmap_sg (33 samples, 0.02%)</title><rect x="68.0585%" y="197" width="0.0203%" height="15" fill="rgb(231,177,25)" fg:x="110591" fg:w="33"/><text x="68.3085%" y="207.50"></text></g><g><title>__iommu_dma_unmap (33 samples, 0.02%)</title><rect x="68.0585%" y="181" width="0.0203%" height="15" fill="rgb(219,179,1)" fg:x="110591" fg:w="33"/><text x="68.3085%" y="191.50"></text></g><g><title>iommu_unmap_fast (28 samples, 0.02%)</title><rect x="68.0616%" y="165" width="0.0172%" height="15" fill="rgb(238,219,53)" fg:x="110596" fg:w="28"/><text x="68.3116%" y="175.50"></text></g><g><title>__iommu_unmap (28 samples, 0.02%)</title><rect x="68.0616%" y="149" width="0.0172%" height="15" fill="rgb(232,167,36)" fg:x="110596" fg:w="28"/><text x="68.3116%" y="159.50"></text></g><g><title>intel_iommu_unmap_pages (27 samples, 0.02%)</title><rect x="68.0622%" y="133" width="0.0166%" height="15" fill="rgb(244,19,51)" fg:x="110597" fg:w="27"/><text x="68.3122%" y="143.50"></text></g><g><title>intel_iommu_unmap (27 samples, 0.02%)</title><rect x="68.0622%" y="117" width="0.0166%" height="15" fill="rgb(224,6,22)" fg:x="110597" fg:w="27"/><text x="68.3122%" y="127.50"></text></g><g><title>handle_irq_event (211 samples, 0.13%)</title><rect x="67.9539%" y="309" width="0.1299%" height="15" fill="rgb(224,145,5)" fg:x="110421" fg:w="211"/><text x="68.2039%" y="319.50"></text></g><g><title>__handle_irq_event_percpu (211 samples, 0.13%)</title><rect x="67.9539%" y="293" width="0.1299%" height="15" fill="rgb(234,130,49)" fg:x="110421" fg:w="211"/><text x="68.2039%" y="303.50"></text></g><g><title>nvme_irq (210 samples, 0.13%)</title><rect x="67.9545%" y="277" width="0.1292%" height="15" fill="rgb(254,6,2)" fg:x="110422" fg:w="210"/><text x="68.2045%" y="287.50"></text></g><g><title>nvme_process_cq (210 samples, 0.13%)</title><rect x="67.9545%" y="261" width="0.1292%" height="15" fill="rgb(208,96,46)" fg:x="110422" fg:w="210"/><text x="68.2045%" y="271.50"></text></g><g><title>nvme_pci_complete_rq (201 samples, 0.12%)</title><rect x="67.9600%" y="245" width="0.1237%" height="15" fill="rgb(239,3,39)" fg:x="110431" fg:w="201"/><text x="68.2100%" y="255.50"></text></g><g><title>nvme_unmap_data (41 samples, 0.03%)</title><rect x="68.0585%" y="229" width="0.0252%" height="15" fill="rgb(233,210,1)" fg:x="110591" fg:w="41"/><text x="68.3085%" y="239.50"></text></g><g><title>handle_edge_irq (212 samples, 0.13%)</title><rect x="67.9539%" y="325" width="0.1305%" height="15" fill="rgb(244,137,37)" fg:x="110421" fg:w="212"/><text x="68.2039%" y="335.50"></text></g><g><title>__common_interrupt (213 samples, 0.13%)</title><rect x="67.9539%" y="341" width="0.1311%" height="15" fill="rgb(240,136,2)" fg:x="110421" fg:w="213"/><text x="68.2039%" y="351.50"></text></g><g><title>asm_common_interrupt (214 samples, 0.13%)</title><rect x="67.9539%" y="373" width="0.1317%" height="15" fill="rgb(239,18,37)" fg:x="110421" fg:w="214"/><text x="68.2039%" y="383.50"></text></g><g><title>common_interrupt (214 samples, 0.13%)</title><rect x="67.9539%" y="357" width="0.1317%" height="15" fill="rgb(218,185,22)" fg:x="110421" fg:w="214"/><text x="68.2039%" y="367.50"></text></g><g><title>rcu_read_unlock_strict (21 samples, 0.01%)</title><rect x="68.1090%" y="373" width="0.0129%" height="15" fill="rgb(225,218,4)" fg:x="110673" fg:w="21"/><text x="68.3590%" y="383.50"></text></g><g><title>workingset_update_node (21 samples, 0.01%)</title><rect x="68.1219%" y="373" width="0.0129%" height="15" fill="rgb(230,182,32)" fg:x="110694" fg:w="21"/><text x="68.3719%" y="383.50"></text></g><g><title>rcu_read_unlock_strict (19 samples, 0.01%)</title><rect x="68.2831%" y="357" width="0.0117%" height="15" fill="rgb(242,56,43)" fg:x="110956" fg:w="19"/><text x="68.5331%" y="367.50"></text></g><g><title>handle_irq_event (19 samples, 0.01%)</title><rect x="68.9109%" y="277" width="0.0117%" height="15" fill="rgb(233,99,24)" fg:x="111976" fg:w="19"/><text x="69.1609%" y="287.50"></text></g><g><title>__handle_irq_event_percpu (19 samples, 0.01%)</title><rect x="68.9109%" y="261" width="0.0117%" height="15" fill="rgb(234,209,42)" fg:x="111976" fg:w="19"/><text x="69.1609%" y="271.50"></text></g><g><title>nvme_irq (19 samples, 0.01%)</title><rect x="68.9109%" y="245" width="0.0117%" height="15" fill="rgb(227,7,12)" fg:x="111976" fg:w="19"/><text x="69.1609%" y="255.50"></text></g><g><title>nvme_process_cq (19 samples, 0.01%)</title><rect x="68.9109%" y="229" width="0.0117%" height="15" fill="rgb(245,203,43)" fg:x="111976" fg:w="19"/><text x="69.1609%" y="239.50"></text></g><g><title>nvme_pci_complete_rq (17 samples, 0.01%)</title><rect x="68.9121%" y="213" width="0.0105%" height="15" fill="rgb(238,205,33)" fg:x="111978" fg:w="17"/><text x="69.1621%" y="223.50"></text></g><g><title>asm_common_interrupt (20 samples, 0.01%)</title><rect x="68.9109%" y="341" width="0.0123%" height="15" fill="rgb(231,56,7)" fg:x="111976" fg:w="20"/><text x="69.1609%" y="351.50"></text></g><g><title>common_interrupt (20 samples, 0.01%)</title><rect x="68.9109%" y="325" width="0.0123%" height="15" fill="rgb(244,186,29)" fg:x="111976" fg:w="20"/><text x="69.1609%" y="335.50"></text></g><g><title>__common_interrupt (20 samples, 0.01%)</title><rect x="68.9109%" y="309" width="0.0123%" height="15" fill="rgb(234,111,31)" fg:x="111976" fg:w="20"/><text x="69.1609%" y="319.50"></text></g><g><title>handle_edge_irq (20 samples, 0.01%)</title><rect x="68.9109%" y="293" width="0.0123%" height="15" fill="rgb(241,149,10)" fg:x="111976" fg:w="20"/><text x="69.1609%" y="303.50"></text></g><g><title>xas_load (1,207 samples, 0.74%)</title><rect x="68.2948%" y="357" width="0.7428%" height="15" fill="rgb(249,206,44)" fg:x="110975" fg:w="1207"/><text x="68.5448%" y="367.50"></text></g><g><title>xas_start (184 samples, 0.11%)</title><rect x="68.9244%" y="341" width="0.1132%" height="15" fill="rgb(251,153,30)" fg:x="111998" fg:w="184"/><text x="69.1744%" y="351.50"></text></g><g><title>xa_get_order (1,488 samples, 0.92%)</title><rect x="68.1348%" y="373" width="0.9157%" height="15" fill="rgb(239,152,38)" fg:x="110715" fg:w="1488"/><text x="68.3848%" y="383.50"></text></g><g><title>xas_start (21 samples, 0.01%)</title><rect x="69.0376%" y="357" width="0.0129%" height="15" fill="rgb(249,139,47)" fg:x="112182" fg:w="21"/><text x="69.2876%" y="367.50"></text></g><g><title>xas_descend (36 samples, 0.02%)</title><rect x="69.0549%" y="373" width="0.0222%" height="15" fill="rgb(244,64,35)" fg:x="112210" fg:w="36"/><text x="69.3049%" y="383.50"></text></g><g><title>xas_descend (335 samples, 0.21%)</title><rect x="69.2019%" y="357" width="0.2062%" height="15" fill="rgb(216,46,15)" fg:x="112449" fg:w="335"/><text x="69.4519%" y="367.50"></text></g><g><title>xas_find_conflict (603 samples, 0.37%)</title><rect x="69.0770%" y="373" width="0.3711%" height="15" fill="rgb(250,74,19)" fg:x="112246" fg:w="603"/><text x="69.3270%" y="383.50"></text></g><g><title>xas_start (65 samples, 0.04%)</title><rect x="69.4081%" y="357" width="0.0400%" height="15" fill="rgb(249,42,33)" fg:x="112784" fg:w="65"/><text x="69.6581%" y="367.50"></text></g><g><title>xas_nomem (33 samples, 0.02%)</title><rect x="69.4530%" y="373" width="0.0203%" height="15" fill="rgb(242,149,17)" fg:x="112857" fg:w="33"/><text x="69.7030%" y="383.50"></text></g><g><title>list_lru_del (31 samples, 0.02%)</title><rect x="69.6167%" y="341" width="0.0191%" height="15" fill="rgb(244,29,21)" fg:x="113123" fg:w="31"/><text x="69.8667%" y="351.50"></text></g><g><title>workingset_update_node (66 samples, 0.04%)</title><rect x="69.5958%" y="357" width="0.0406%" height="15" fill="rgb(220,130,37)" fg:x="113089" fg:w="66"/><text x="69.8458%" y="367.50"></text></g><g><title>__add_to_page_cache_locked (6,530 samples, 4.02%)</title><rect x="65.6566%" y="389" width="4.0186%" height="15" fill="rgb(211,67,2)" fg:x="106688" fg:w="6530"/><text x="65.9066%" y="399.50">__ad..</text></g><g><title>xas_store (321 samples, 0.20%)</title><rect x="69.4776%" y="373" width="0.1975%" height="15" fill="rgb(235,68,52)" fg:x="112897" fg:w="321"/><text x="69.7276%" y="383.50"></text></g><g><title>xas_create (63 samples, 0.04%)</title><rect x="69.6364%" y="357" width="0.0388%" height="15" fill="rgb(246,142,3)" fg:x="113155" fg:w="63"/><text x="69.8864%" y="367.50"></text></g><g><title>__mod_lruvec_page_state (19 samples, 0.01%)</title><rect x="69.6850%" y="389" width="0.0117%" height="15" fill="rgb(241,25,7)" fg:x="113234" fg:w="19"/><text x="69.9350%" y="399.50"></text></g><g><title>__read_end_io (23 samples, 0.01%)</title><rect x="69.8893%" y="117" width="0.0142%" height="15" fill="rgb(242,119,39)" fg:x="113566" fg:w="23"/><text x="70.1393%" y="127.50"></text></g><g><title>nvme_complete_rq (34 samples, 0.02%)</title><rect x="69.8869%" y="197" width="0.0209%" height="15" fill="rgb(241,98,45)" fg:x="113562" fg:w="34"/><text x="70.1369%" y="207.50"></text></g><g><title>blk_mq_end_request (33 samples, 0.02%)</title><rect x="69.8875%" y="181" width="0.0203%" height="15" fill="rgb(254,28,30)" fg:x="113563" fg:w="33"/><text x="70.1375%" y="191.50"></text></g><g><title>blk_update_request (32 samples, 0.02%)</title><rect x="69.8881%" y="165" width="0.0197%" height="15" fill="rgb(241,142,54)" fg:x="113564" fg:w="32"/><text x="70.1381%" y="175.50"></text></g><g><title>bio_endio (31 samples, 0.02%)</title><rect x="69.8887%" y="149" width="0.0191%" height="15" fill="rgb(222,85,15)" fg:x="113565" fg:w="31"/><text x="70.1387%" y="159.50"></text></g><g><title>mpage_end_io (30 samples, 0.02%)</title><rect x="69.8893%" y="133" width="0.0185%" height="15" fill="rgb(210,85,47)" fg:x="113566" fg:w="30"/><text x="70.1393%" y="143.50"></text></g><g><title>asm_common_interrupt (48 samples, 0.03%)</title><rect x="69.8857%" y="341" width="0.0295%" height="15" fill="rgb(224,206,25)" fg:x="113560" fg:w="48"/><text x="70.1357%" y="351.50"></text></g><g><title>common_interrupt (48 samples, 0.03%)</title><rect x="69.8857%" y="325" width="0.0295%" height="15" fill="rgb(243,201,19)" fg:x="113560" fg:w="48"/><text x="70.1357%" y="335.50"></text></g><g><title>__common_interrupt (48 samples, 0.03%)</title><rect x="69.8857%" y="309" width="0.0295%" height="15" fill="rgb(236,59,4)" fg:x="113560" fg:w="48"/><text x="70.1357%" y="319.50"></text></g><g><title>handle_edge_irq (48 samples, 0.03%)</title><rect x="69.8857%" y="293" width="0.0295%" height="15" fill="rgb(254,179,45)" fg:x="113560" fg:w="48"/><text x="70.1357%" y="303.50"></text></g><g><title>handle_irq_event (48 samples, 0.03%)</title><rect x="69.8857%" y="277" width="0.0295%" height="15" fill="rgb(226,14,10)" fg:x="113560" fg:w="48"/><text x="70.1357%" y="287.50"></text></g><g><title>__handle_irq_event_percpu (48 samples, 0.03%)</title><rect x="69.8857%" y="261" width="0.0295%" height="15" fill="rgb(244,27,41)" fg:x="113560" fg:w="48"/><text x="70.1357%" y="271.50"></text></g><g><title>nvme_irq (48 samples, 0.03%)</title><rect x="69.8857%" y="245" width="0.0295%" height="15" fill="rgb(235,35,32)" fg:x="113560" fg:w="48"/><text x="70.1357%" y="255.50"></text></g><g><title>nvme_process_cq (48 samples, 0.03%)</title><rect x="69.8857%" y="229" width="0.0295%" height="15" fill="rgb(218,68,31)" fg:x="113560" fg:w="48"/><text x="70.1357%" y="239.50"></text></g><g><title>nvme_pci_complete_rq (46 samples, 0.03%)</title><rect x="69.8869%" y="213" width="0.0283%" height="15" fill="rgb(207,120,37)" fg:x="113562" fg:w="46"/><text x="70.1369%" y="223.50"></text></g><g><title>__lock_text_start (55 samples, 0.03%)</title><rect x="69.8844%" y="357" width="0.0338%" height="15" fill="rgb(227,98,0)" fg:x="113558" fg:w="55"/><text x="70.1344%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (128 samples, 0.08%)</title><rect x="70.3484%" y="325" width="0.0788%" height="15" fill="rgb(207,7,3)" fg:x="114312" fg:w="128"/><text x="70.5984%" y="335.50"></text></g><g><title>cgroup_rstat_updated (31 samples, 0.02%)</title><rect x="70.4081%" y="309" width="0.0191%" height="15" fill="rgb(206,98,19)" fg:x="114409" fg:w="31"/><text x="70.6581%" y="319.50"></text></g><g><title>__mod_node_page_state (49 samples, 0.03%)</title><rect x="70.4272%" y="325" width="0.0302%" height="15" fill="rgb(217,5,26)" fg:x="114440" fg:w="49"/><text x="70.6772%" y="335.50"></text></g><g><title>__mod_lruvec_state (215 samples, 0.13%)</title><rect x="70.3288%" y="341" width="0.1323%" height="15" fill="rgb(235,190,38)" fg:x="114280" fg:w="215"/><text x="70.5788%" y="351.50"></text></g><g><title>__mod_node_page_state (32 samples, 0.02%)</title><rect x="70.4666%" y="341" width="0.0197%" height="15" fill="rgb(247,86,24)" fg:x="114504" fg:w="32"/><text x="70.7166%" y="351.50"></text></g><g><title>__mod_zone_page_state (54 samples, 0.03%)</title><rect x="70.4863%" y="341" width="0.0332%" height="15" fill="rgb(205,101,16)" fg:x="114536" fg:w="54"/><text x="70.7363%" y="351.50"></text></g><g><title>mem_cgroup_update_lru_size (71 samples, 0.04%)</title><rect x="70.5195%" y="341" width="0.0437%" height="15" fill="rgb(246,168,33)" fg:x="114590" fg:w="71"/><text x="70.7695%" y="351.50"></text></g><g><title>__pagevec_lru_add_fn (1,165 samples, 0.72%)</title><rect x="69.9294%" y="357" width="0.7169%" height="15" fill="rgb(231,114,1)" fg:x="113631" fg:w="1165"/><text x="70.1794%" y="367.50"></text></g><g><title>page_mapping (135 samples, 0.08%)</title><rect x="70.5632%" y="341" width="0.0831%" height="15" fill="rgb(207,184,53)" fg:x="114661" fg:w="135"/><text x="70.8132%" y="351.50"></text></g><g><title>_raw_spin_lock_irqsave (64 samples, 0.04%)</title><rect x="70.6574%" y="341" width="0.0394%" height="15" fill="rgb(224,95,51)" fg:x="114814" fg:w="64"/><text x="70.9074%" y="351.50"></text></g><g><title>native_queued_spin_lock_slowpath (35 samples, 0.02%)</title><rect x="70.6752%" y="325" width="0.0215%" height="15" fill="rgb(212,188,45)" fg:x="114843" fg:w="35"/><text x="70.9252%" y="335.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (35 samples, 0.02%)</title><rect x="70.6752%" y="309" width="0.0215%" height="15" fill="rgb(223,154,38)" fg:x="114843" fg:w="35"/><text x="70.9252%" y="319.50"></text></g><g><title>lock_page_lruvec_irqsave (85 samples, 0.05%)</title><rect x="70.6463%" y="357" width="0.0523%" height="15" fill="rgb(251,22,52)" fg:x="114796" fg:w="85"/><text x="70.8963%" y="367.50"></text></g><g><title>page_mapping (27 samples, 0.02%)</title><rect x="70.7072%" y="357" width="0.0166%" height="15" fill="rgb(229,209,22)" fg:x="114895" fg:w="27"/><text x="70.9572%" y="367.50"></text></g><g><title>__pagevec_lru_add (1,629 samples, 1.00%)</title><rect x="69.8444%" y="373" width="1.0025%" height="15" fill="rgb(234,138,34)" fg:x="113493" fg:w="1629"/><text x="70.0944%" y="383.50"></text></g><g><title>release_pages (196 samples, 0.12%)</title><rect x="70.7263%" y="357" width="0.1206%" height="15" fill="rgb(212,95,11)" fg:x="114926" fg:w="196"/><text x="70.9763%" y="367.50"></text></g><g><title>lru_cache_add (1,861 samples, 1.15%)</title><rect x="69.7127%" y="389" width="1.1453%" height="15" fill="rgb(240,179,47)" fg:x="113279" fg:w="1861"/><text x="69.9627%" y="399.50"></text></g><g><title>mem_cgroup_flush_stats (29 samples, 0.02%)</title><rect x="70.8580%" y="389" width="0.0178%" height="15" fill="rgb(240,163,11)" fg:x="115140" fg:w="29"/><text x="71.1080%" y="399.50"></text></g><g><title>mem_cgroup_from_id (17 samples, 0.01%)</title><rect x="70.8758%" y="389" width="0.0105%" height="15" fill="rgb(236,37,12)" fg:x="115169" fg:w="17"/><text x="71.1258%" y="399.50"></text></g><g><title>__read_end_io (17 samples, 0.01%)</title><rect x="71.1066%" y="101" width="0.0105%" height="15" fill="rgb(232,164,16)" fg:x="115544" fg:w="17"/><text x="71.3566%" y="111.50"></text></g><g><title>nvme_complete_rq (38 samples, 0.02%)</title><rect x="71.1023%" y="181" width="0.0234%" height="15" fill="rgb(244,205,15)" fg:x="115537" fg:w="38"/><text x="71.3523%" y="191.50"></text></g><g><title>blk_mq_end_request (38 samples, 0.02%)</title><rect x="71.1023%" y="165" width="0.0234%" height="15" fill="rgb(223,117,47)" fg:x="115537" fg:w="38"/><text x="71.3523%" y="175.50"></text></g><g><title>blk_update_request (36 samples, 0.02%)</title><rect x="71.1035%" y="149" width="0.0222%" height="15" fill="rgb(244,107,35)" fg:x="115539" fg:w="36"/><text x="71.3535%" y="159.50"></text></g><g><title>bio_endio (32 samples, 0.02%)</title><rect x="71.1060%" y="133" width="0.0197%" height="15" fill="rgb(205,140,8)" fg:x="115543" fg:w="32"/><text x="71.3560%" y="143.50"></text></g><g><title>mpage_end_io (31 samples, 0.02%)</title><rect x="71.1066%" y="117" width="0.0191%" height="15" fill="rgb(228,84,46)" fg:x="115544" fg:w="31"/><text x="71.3566%" y="127.50"></text></g><g><title>handle_irq_event (47 samples, 0.03%)</title><rect x="71.1011%" y="261" width="0.0289%" height="15" fill="rgb(254,188,9)" fg:x="115535" fg:w="47"/><text x="71.3511%" y="271.50"></text></g><g><title>__handle_irq_event_percpu (46 samples, 0.03%)</title><rect x="71.1017%" y="245" width="0.0283%" height="15" fill="rgb(206,112,54)" fg:x="115536" fg:w="46"/><text x="71.3517%" y="255.50"></text></g><g><title>nvme_irq (46 samples, 0.03%)</title><rect x="71.1017%" y="229" width="0.0283%" height="15" fill="rgb(216,84,49)" fg:x="115536" fg:w="46"/><text x="71.3517%" y="239.50"></text></g><g><title>nvme_process_cq (46 samples, 0.03%)</title><rect x="71.1017%" y="213" width="0.0283%" height="15" fill="rgb(214,194,35)" fg:x="115536" fg:w="46"/><text x="71.3517%" y="223.50"></text></g><g><title>nvme_pci_complete_rq (45 samples, 0.03%)</title><rect x="71.1023%" y="197" width="0.0277%" height="15" fill="rgb(249,28,3)" fg:x="115537" fg:w="45"/><text x="71.3523%" y="207.50"></text></g><g><title>__common_interrupt (53 samples, 0.03%)</title><rect x="71.0986%" y="293" width="0.0326%" height="15" fill="rgb(222,56,52)" fg:x="115531" fg:w="53"/><text x="71.3486%" y="303.50"></text></g><g><title>handle_edge_irq (51 samples, 0.03%)</title><rect x="71.0999%" y="277" width="0.0314%" height="15" fill="rgb(245,217,50)" fg:x="115533" fg:w="51"/><text x="71.3499%" y="287.50"></text></g><g><title>asm_common_interrupt (54 samples, 0.03%)</title><rect x="71.0986%" y="325" width="0.0332%" height="15" fill="rgb(213,201,24)" fg:x="115531" fg:w="54"/><text x="71.3486%" y="335.50"></text></g><g><title>common_interrupt (54 samples, 0.03%)</title><rect x="71.0986%" y="309" width="0.0332%" height="15" fill="rgb(248,116,28)" fg:x="115531" fg:w="54"/><text x="71.3486%" y="319.50"></text></g><g><title>__lock_text_start (56 samples, 0.03%)</title><rect x="71.0980%" y="341" width="0.0345%" height="15" fill="rgb(219,72,43)" fg:x="115530" fg:w="56"/><text x="71.3480%" y="351.50"></text></g><g><title>_raw_spin_lock (44 samples, 0.03%)</title><rect x="71.1362%" y="325" width="0.0271%" height="15" fill="rgb(209,138,14)" fg:x="115592" fg:w="44"/><text x="71.3862%" y="335.50"></text></g><g><title>_find_next_bit (45 samples, 0.03%)</title><rect x="71.2445%" y="309" width="0.0277%" height="15" fill="rgb(222,18,33)" fg:x="115768" fg:w="45"/><text x="71.4945%" y="319.50"></text></g><g><title>blkcg_rstat_flush (45 samples, 0.03%)</title><rect x="71.2722%" y="309" width="0.0277%" height="15" fill="rgb(213,199,7)" fg:x="115813" fg:w="45"/><text x="71.5222%" y="319.50"></text></g><g><title>cgroup_rstat_flush_locked (1,364 samples, 0.84%)</title><rect x="71.1676%" y="325" width="0.8394%" height="15" fill="rgb(250,110,10)" fg:x="115643" fg:w="1364"/><text x="71.4176%" y="335.50"></text></g><g><title>mem_cgroup_css_rstat_flush (1,149 samples, 0.71%)</title><rect x="71.2999%" y="309" width="0.7071%" height="15" fill="rgb(248,123,6)" fg:x="115858" fg:w="1149"/><text x="71.5499%" y="319.50"></text></g><g><title>cgroup_rstat_flush_irqsafe (1,422 samples, 0.88%)</title><rect x="71.1362%" y="341" width="0.8751%" height="15" fill="rgb(206,91,31)" fg:x="115592" fg:w="1422"/><text x="71.3862%" y="351.50"></text></g><g><title>__mem_cgroup_flush_stats (1,490 samples, 0.92%)</title><rect x="71.0949%" y="357" width="0.9170%" height="15" fill="rgb(211,154,13)" fg:x="115525" fg:w="1490"/><text x="71.3449%" y="367.50"></text></g><g><title>mem_cgroup_flush_stats (1,493 samples, 0.92%)</title><rect x="71.0949%" y="373" width="0.9188%" height="15" fill="rgb(225,148,7)" fg:x="115525" fg:w="1493"/><text x="71.3449%" y="383.50"></text></g><g><title>idr_find (218 samples, 0.13%)</title><rect x="72.0180%" y="357" width="0.1342%" height="15" fill="rgb(220,160,43)" fg:x="117025" fg:w="218"/><text x="72.2680%" y="367.50"></text></g><g><title>radix_tree_lookup (194 samples, 0.12%)</title><rect x="72.0328%" y="341" width="0.1194%" height="15" fill="rgb(213,52,39)" fg:x="117049" fg:w="194"/><text x="72.2828%" y="351.50"></text></g><g><title>__radix_tree_lookup (187 samples, 0.12%)</title><rect x="72.0371%" y="325" width="0.1151%" height="15" fill="rgb(243,137,7)" fg:x="117056" fg:w="187"/><text x="72.2871%" y="335.50"></text></g><g><title>mem_cgroup_from_id (234 samples, 0.14%)</title><rect x="72.0137%" y="373" width="0.1440%" height="15" fill="rgb(230,79,13)" fg:x="117018" fg:w="234"/><text x="72.2637%" y="383.50"></text></g><g><title>mem_cgroup_get_nr_swap_pages (149 samples, 0.09%)</title><rect x="72.1577%" y="373" width="0.0917%" height="15" fill="rgb(247,105,23)" fg:x="117252" fg:w="149"/><text x="72.4077%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (155 samples, 0.10%)</title><rect x="72.3030%" y="341" width="0.0954%" height="15" fill="rgb(223,179,41)" fg:x="117488" fg:w="155"/><text x="72.5530%" y="351.50"></text></g><g><title>cgroup_rstat_updated (46 samples, 0.03%)</title><rect x="72.3701%" y="325" width="0.0283%" height="15" fill="rgb(218,9,34)" fg:x="117597" fg:w="46"/><text x="72.6201%" y="335.50"></text></g><g><title>__mod_node_page_state (49 samples, 0.03%)</title><rect x="72.3984%" y="341" width="0.0302%" height="15" fill="rgb(222,106,8)" fg:x="117643" fg:w="49"/><text x="72.6484%" y="351.50"></text></g><g><title>__mod_lruvec_state (250 samples, 0.15%)</title><rect x="72.2790%" y="357" width="0.1539%" height="15" fill="rgb(211,220,0)" fg:x="117449" fg:w="250"/><text x="72.5290%" y="367.50"></text></g><g><title>asm_common_interrupt (21 samples, 0.01%)</title><rect x="72.4439%" y="357" width="0.0129%" height="15" fill="rgb(229,52,16)" fg:x="117717" fg:w="21"/><text x="72.6939%" y="367.50"></text></g><g><title>common_interrupt (21 samples, 0.01%)</title><rect x="72.4439%" y="341" width="0.0129%" height="15" fill="rgb(212,155,18)" fg:x="117717" fg:w="21"/><text x="72.6939%" y="351.50"></text></g><g><title>__common_interrupt (21 samples, 0.01%)</title><rect x="72.4439%" y="325" width="0.0129%" height="15" fill="rgb(242,21,14)" fg:x="117717" fg:w="21"/><text x="72.6939%" y="335.50"></text></g><g><title>handle_edge_irq (21 samples, 0.01%)</title><rect x="72.4439%" y="309" width="0.0129%" height="15" fill="rgb(222,19,48)" fg:x="117717" fg:w="21"/><text x="72.6939%" y="319.50"></text></g><g><title>handle_irq_event (21 samples, 0.01%)</title><rect x="72.4439%" y="293" width="0.0129%" height="15" fill="rgb(232,45,27)" fg:x="117717" fg:w="21"/><text x="72.6939%" y="303.50"></text></g><g><title>__handle_irq_event_percpu (21 samples, 0.01%)</title><rect x="72.4439%" y="277" width="0.0129%" height="15" fill="rgb(249,103,42)" fg:x="117717" fg:w="21"/><text x="72.6939%" y="287.50"></text></g><g><title>nvme_irq (20 samples, 0.01%)</title><rect x="72.4445%" y="261" width="0.0123%" height="15" fill="rgb(246,81,33)" fg:x="117718" fg:w="20"/><text x="72.6945%" y="271.50"></text></g><g><title>nvme_process_cq (20 samples, 0.01%)</title><rect x="72.4445%" y="245" width="0.0123%" height="15" fill="rgb(252,33,42)" fg:x="117718" fg:w="20"/><text x="72.6945%" y="255.50"></text></g><g><title>nvme_pci_complete_rq (18 samples, 0.01%)</title><rect x="72.4458%" y="229" width="0.0111%" height="15" fill="rgb(209,212,41)" fg:x="117720" fg:w="18"/><text x="72.6958%" y="239.50"></text></g><g><title>mod_lruvec_state.constprop.0 (338 samples, 0.21%)</title><rect x="72.2494%" y="373" width="0.2080%" height="15" fill="rgb(207,154,6)" fg:x="117401" fg:w="338"/><text x="72.4994%" y="383.50"></text></g><g><title>workingset_refault (2,528 samples, 1.56%)</title><rect x="70.9042%" y="389" width="1.5557%" height="15" fill="rgb(223,64,47)" fg:x="115215" fg:w="2528"/><text x="71.1542%" y="399.50"></text></g><g><title>xa_get_order (25 samples, 0.02%)</title><rect x="72.4599%" y="389" width="0.0154%" height="15" fill="rgb(211,161,38)" fg:x="117743" fg:w="25"/><text x="72.7099%" y="399.50"></text></g><g><title>xas_find_conflict (22 samples, 0.01%)</title><rect x="72.4753%" y="389" width="0.0135%" height="15" fill="rgb(219,138,40)" fg:x="117768" fg:w="22"/><text x="72.7253%" y="399.50"></text></g><g><title>add_to_page_cache_lru (11,286 samples, 6.95%)</title><rect x="65.5581%" y="405" width="6.9455%" height="15" fill="rgb(241,228,46)" fg:x="106528" fg:w="11286"/><text x="65.8081%" y="415.50">add_to_pa..</text></g><g><title>__blk_rq_map_sg (28 samples, 0.02%)</title><rect x="72.5374%" y="261" width="0.0172%" height="15" fill="rgb(223,209,38)" fg:x="117869" fg:w="28"/><text x="72.7874%" y="271.50"></text></g><g><title>__blk_bios_map_sg (27 samples, 0.02%)</title><rect x="72.5381%" y="245" width="0.0166%" height="15" fill="rgb(236,164,45)" fg:x="117870" fg:w="27"/><text x="72.7881%" y="255.50"></text></g><g><title>iommu_dma_alloc_iova (32 samples, 0.02%)</title><rect x="72.5756%" y="213" width="0.0197%" height="15" fill="rgb(231,15,5)" fg:x="117931" fg:w="32"/><text x="72.8256%" y="223.50"></text></g><g><title>alloc_iova_fast (29 samples, 0.02%)</title><rect x="72.5774%" y="197" width="0.0178%" height="15" fill="rgb(252,35,15)" fg:x="117934" fg:w="29"/><text x="72.8274%" y="207.50"></text></g><g><title>alloc_iova (29 samples, 0.02%)</title><rect x="72.5774%" y="181" width="0.0178%" height="15" fill="rgb(248,181,18)" fg:x="117934" fg:w="29"/><text x="72.8274%" y="191.50"></text></g><g><title>clflush_cache_range (360 samples, 0.22%)</title><rect x="72.8242%" y="133" width="0.2215%" height="15" fill="rgb(233,39,42)" fg:x="118335" fg:w="360"/><text x="73.0742%" y="143.50"></text></g><g><title>__domain_mapping (702 samples, 0.43%)</title><rect x="72.6402%" y="149" width="0.4320%" height="15" fill="rgb(238,110,33)" fg:x="118036" fg:w="702"/><text x="72.8902%" y="159.50"></text></g><g><title>pfn_to_dma_pte (43 samples, 0.03%)</title><rect x="73.0458%" y="133" width="0.0265%" height="15" fill="rgb(233,195,10)" fg:x="118695" fg:w="43"/><text x="73.2958%" y="143.50"></text></g><g><title>intel_iommu_map_pages (731 samples, 0.45%)</title><rect x="72.6316%" y="165" width="0.4499%" height="15" fill="rgb(254,105,3)" fg:x="118022" fg:w="731"/><text x="72.8816%" y="175.50"></text></g><g><title>__iommu_map (793 samples, 0.49%)</title><rect x="72.6045%" y="181" width="0.4880%" height="15" fill="rgb(221,225,9)" fg:x="117978" fg:w="793"/><text x="72.8545%" y="191.50"></text></g><g><title>iommu_pgsize (18 samples, 0.01%)</title><rect x="73.0815%" y="165" width="0.0111%" height="15" fill="rgb(224,227,45)" fg:x="118753" fg:w="18"/><text x="73.3315%" y="175.50"></text></g><g><title>intel_iommu_iotlb_sync_map (17 samples, 0.01%)</title><rect x="73.0925%" y="181" width="0.0105%" height="15" fill="rgb(229,198,43)" fg:x="118771" fg:w="17"/><text x="73.3425%" y="191.50"></text></g><g><title>__iommu_map_sg (831 samples, 0.51%)</title><rect x="72.5959%" y="197" width="0.5114%" height="15" fill="rgb(206,209,35)" fg:x="117964" fg:w="831"/><text x="72.8459%" y="207.50"></text></g><g><title>iommu_dma_map_sg (904 samples, 0.56%)</title><rect x="72.5559%" y="229" width="0.5563%" height="15" fill="rgb(245,195,53)" fg:x="117899" fg:w="904"/><text x="72.8059%" y="239.50"></text></g><g><title>iommu_map_sg_atomic (840 samples, 0.52%)</title><rect x="72.5953%" y="213" width="0.5169%" height="15" fill="rgb(240,92,26)" fg:x="117963" fg:w="840"/><text x="72.8453%" y="223.50"></text></g><g><title>__dma_map_sg_attrs (911 samples, 0.56%)</title><rect x="72.5553%" y="245" width="0.5606%" height="15" fill="rgb(207,40,23)" fg:x="117898" fg:w="911"/><text x="72.8053%" y="255.50"></text></g><g><title>dma_map_sg_attrs (912 samples, 0.56%)</title><rect x="72.5553%" y="261" width="0.5613%" height="15" fill="rgb(223,111,35)" fg:x="117898" fg:w="912"/><text x="72.8053%" y="271.50"></text></g><g><title>nvme_map_data (979 samples, 0.60%)</title><rect x="72.5362%" y="277" width="0.6025%" height="15" fill="rgb(229,147,28)" fg:x="117867" fg:w="979"/><text x="72.7862%" y="287.50"></text></g><g><title>nvme_pci_setup_prps (30 samples, 0.02%)</title><rect x="73.1202%" y="261" width="0.0185%" height="15" fill="rgb(211,29,28)" fg:x="118816" fg:w="30"/><text x="73.3702%" y="271.50"></text></g><g><title>blk_finish_plug (989 samples, 0.61%)</title><rect x="72.5338%" y="389" width="0.6086%" height="15" fill="rgb(228,72,33)" fg:x="117863" fg:w="989"/><text x="72.7838%" y="399.50"></text></g><g><title>blk_flush_plug_list (989 samples, 0.61%)</title><rect x="72.5338%" y="373" width="0.6086%" height="15" fill="rgb(205,214,31)" fg:x="117863" fg:w="989"/><text x="72.7838%" y="383.50"></text></g><g><title>blk_mq_flush_plug_list (989 samples, 0.61%)</title><rect x="72.5338%" y="357" width="0.6086%" height="15" fill="rgb(224,111,15)" fg:x="117863" fg:w="989"/><text x="72.7838%" y="367.50"></text></g><g><title>blk_mq_sched_insert_requests (988 samples, 0.61%)</title><rect x="72.5344%" y="341" width="0.6080%" height="15" fill="rgb(253,21,26)" fg:x="117864" fg:w="988"/><text x="72.7844%" y="351.50"></text></g><g><title>blk_mq_try_issue_list_directly (988 samples, 0.61%)</title><rect x="72.5344%" y="325" width="0.6080%" height="15" fill="rgb(245,139,43)" fg:x="117864" fg:w="988"/><text x="72.7844%" y="335.50"></text></g><g><title>__blk_mq_try_issue_directly (988 samples, 0.61%)</title><rect x="72.5344%" y="309" width="0.6080%" height="15" fill="rgb(252,170,7)" fg:x="117864" fg:w="988"/><text x="72.7844%" y="319.50"></text></g><g><title>nvme_queue_rq (988 samples, 0.61%)</title><rect x="72.5344%" y="293" width="0.6080%" height="15" fill="rgb(231,118,14)" fg:x="117864" fg:w="988"/><text x="72.7844%" y="303.50"></text></g><g><title>__bio_add_page (28 samples, 0.02%)</title><rect x="73.7547%" y="341" width="0.0172%" height="15" fill="rgb(238,83,0)" fg:x="119847" fg:w="28"/><text x="74.0047%" y="351.50"></text></g><g><title>__bio_try_merge_page (77 samples, 0.05%)</title><rect x="73.7720%" y="341" width="0.0474%" height="15" fill="rgb(221,39,39)" fg:x="119875" fg:w="77"/><text x="74.0220%" y="351.50"></text></g><g><title>bio_add_page (176 samples, 0.11%)</title><rect x="73.7129%" y="357" width="0.1083%" height="15" fill="rgb(222,119,46)" fg:x="119779" fg:w="176"/><text x="73.9629%" y="367.50"></text></g><g><title>bio_alloc_bioset (31 samples, 0.02%)</title><rect x="73.8212%" y="357" width="0.0191%" height="15" fill="rgb(222,165,49)" fg:x="119955" fg:w="31"/><text x="74.0712%" y="367.50"></text></g><g><title>ext4_es_insert_extent (21 samples, 0.01%)</title><rect x="73.8618%" y="341" width="0.0129%" height="15" fill="rgb(219,113,52)" fg:x="120021" fg:w="21"/><text x="74.1118%" y="351.50"></text></g><g><title>ext4_es_lookup_extent (27 samples, 0.02%)</title><rect x="73.8747%" y="341" width="0.0166%" height="15" fill="rgb(214,7,15)" fg:x="120042" fg:w="27"/><text x="74.1247%" y="351.50"></text></g><g><title>ext4_find_extent (24 samples, 0.01%)</title><rect x="73.8920%" y="325" width="0.0148%" height="15" fill="rgb(235,32,4)" fg:x="120070" fg:w="24"/><text x="74.1420%" y="335.50"></text></g><g><title>ext4_ext_map_blocks (29 samples, 0.02%)</title><rect x="73.8913%" y="341" width="0.0178%" height="15" fill="rgb(238,90,54)" fg:x="120069" fg:w="29"/><text x="74.1413%" y="351.50"></text></g><g><title>ext4_map_blocks (100 samples, 0.06%)</title><rect x="73.8483%" y="357" width="0.0615%" height="15" fill="rgb(213,208,19)" fg:x="119999" fg:w="100"/><text x="74.0983%" y="367.50"></text></g><g><title>fscrypt_mergeable_bio (76 samples, 0.05%)</title><rect x="73.9098%" y="357" width="0.0468%" height="15" fill="rgb(233,156,4)" fg:x="120099" fg:w="76"/><text x="74.1598%" y="367.50"></text></g><g><title>bio_split (26 samples, 0.02%)</title><rect x="74.0575%" y="261" width="0.0160%" height="15" fill="rgb(207,194,5)" fg:x="120339" fg:w="26"/><text x="74.3075%" y="271.50"></text></g><g><title>blk_bio_segment_split (156 samples, 0.10%)</title><rect x="73.9923%" y="277" width="0.0960%" height="15" fill="rgb(206,111,30)" fg:x="120233" fg:w="156"/><text x="74.2423%" y="287.50"></text></g><g><title>bvec_split_segs (24 samples, 0.01%)</title><rect x="74.0735%" y="261" width="0.0148%" height="15" fill="rgb(243,70,54)" fg:x="120365" fg:w="24"/><text x="74.3235%" y="271.50"></text></g><g><title>__blk_queue_split (164 samples, 0.10%)</title><rect x="73.9898%" y="293" width="0.1009%" height="15" fill="rgb(242,28,8)" fg:x="120229" fg:w="164"/><text x="74.2398%" y="303.50"></text></g><g><title>__blk_bios_map_sg (84 samples, 0.05%)</title><rect x="74.1258%" y="165" width="0.0517%" height="15" fill="rgb(219,106,18)" fg:x="120450" fg:w="84"/><text x="74.3758%" y="175.50"></text></g><g><title>__blk_rq_map_sg (95 samples, 0.06%)</title><rect x="74.1246%" y="181" width="0.0585%" height="15" fill="rgb(244,222,10)" fg:x="120448" fg:w="95"/><text x="74.3746%" y="191.50"></text></g><g><title>iommu_dma_alloc_iova (51 samples, 0.03%)</title><rect x="74.2255%" y="133" width="0.0314%" height="15" fill="rgb(236,179,52)" fg:x="120612" fg:w="51"/><text x="74.4755%" y="143.50"></text></g><g><title>alloc_iova_fast (48 samples, 0.03%)</title><rect x="74.2274%" y="117" width="0.0295%" height="15" fill="rgb(213,23,39)" fg:x="120615" fg:w="48"/><text x="74.4774%" y="127.50"></text></g><g><title>alloc_iova (46 samples, 0.03%)</title><rect x="74.2286%" y="101" width="0.0283%" height="15" fill="rgb(238,48,10)" fg:x="120617" fg:w="46"/><text x="74.4786%" y="111.50"></text></g><g><title>rb_prev (17 samples, 0.01%)</title><rect x="74.2464%" y="85" width="0.0105%" height="15" fill="rgb(251,196,23)" fg:x="120646" fg:w="17"/><text x="74.4964%" y="95.50"></text></g><g><title>clflush_cache_range (979 samples, 0.60%)</title><rect x="74.8538%" y="53" width="0.6025%" height="15" fill="rgb(250,152,24)" fg:x="121633" fg:w="979"/><text x="75.1038%" y="63.50"></text></g><g><title>__domain_mapping (1,895 samples, 1.17%)</title><rect x="74.3818%" y="69" width="1.1662%" height="15" fill="rgb(209,150,17)" fg:x="120866" fg:w="1895"/><text x="74.6318%" y="79.50"></text></g><g><title>pfn_to_dma_pte (149 samples, 0.09%)</title><rect x="75.4563%" y="53" width="0.0917%" height="15" fill="rgb(234,202,34)" fg:x="122612" fg:w="149"/><text x="75.7063%" y="63.50"></text></g><g><title>clflush_cache_range (37 samples, 0.02%)</title><rect x="75.5493%" y="69" width="0.0228%" height="15" fill="rgb(253,148,53)" fg:x="122763" fg:w="37"/><text x="75.7993%" y="79.50"></text></g><g><title>intel_iommu_map_pages (1,995 samples, 1.23%)</title><rect x="74.3480%" y="85" width="1.2277%" height="15" fill="rgb(218,129,16)" fg:x="120811" fg:w="1995"/><text x="74.5980%" y="95.50"></text></g><g><title>__iommu_map (2,171 samples, 1.34%)</title><rect x="74.2809%" y="101" width="1.3360%" height="15" fill="rgb(216,85,19)" fg:x="120702" fg:w="2171"/><text x="74.5309%" y="111.50"></text></g><g><title>iommu_pgsize (67 samples, 0.04%)</title><rect x="75.5757%" y="85" width="0.0412%" height="15" fill="rgb(235,228,7)" fg:x="122806" fg:w="67"/><text x="75.8257%" y="95.50"></text></g><g><title>__iommu_map_sg (2,238 samples, 1.38%)</title><rect x="74.2581%" y="117" width="1.3773%" height="15" fill="rgb(245,175,0)" fg:x="120665" fg:w="2238"/><text x="74.5081%" y="127.50"></text></g><g><title>iommu_dma_map_sg (2,364 samples, 1.45%)</title><rect x="74.1843%" y="149" width="1.4548%" height="15" fill="rgb(208,168,36)" fg:x="120545" fg:w="2364"/><text x="74.4343%" y="159.50"></text></g><g><title>iommu_map_sg_atomic (2,245 samples, 1.38%)</title><rect x="74.2575%" y="133" width="1.3816%" height="15" fill="rgb(246,171,24)" fg:x="120664" fg:w="2245"/><text x="74.5075%" y="143.50"></text></g><g><title>dma_map_sg_attrs (2,382 samples, 1.47%)</title><rect x="74.1837%" y="181" width="1.4659%" height="15" fill="rgb(215,142,24)" fg:x="120544" fg:w="2382"/><text x="74.4337%" y="191.50"></text></g><g><title>__dma_map_sg_attrs (2,382 samples, 1.47%)</title><rect x="74.1837%" y="165" width="1.4659%" height="15" fill="rgb(250,187,7)" fg:x="120544" fg:w="2382"/><text x="74.4337%" y="175.50"></text></g><g><title>nvme_map_data (2,541 samples, 1.56%)</title><rect x="74.1227%" y="197" width="1.5638%" height="15" fill="rgb(228,66,33)" fg:x="120445" fg:w="2541"/><text x="74.3727%" y="207.50"></text></g><g><title>nvme_pci_setup_prps (46 samples, 0.03%)</title><rect x="75.6582%" y="181" width="0.0283%" height="15" fill="rgb(234,215,21)" fg:x="122940" fg:w="46"/><text x="75.9082%" y="191.50"></text></g><g><title>__blk_mq_try_issue_directly (2,560 samples, 1.58%)</title><rect x="74.1147%" y="229" width="1.5754%" height="15" fill="rgb(222,191,20)" fg:x="120432" fg:w="2560"/><text x="74.3647%" y="239.50"></text></g><g><title>nvme_queue_rq (2,557 samples, 1.57%)</title><rect x="74.1166%" y="213" width="1.5736%" height="15" fill="rgb(245,79,54)" fg:x="120435" fg:w="2557"/><text x="74.3666%" y="223.50"></text></g><g><title>blk_flush_plug_list (2,564 samples, 1.58%)</title><rect x="74.1129%" y="293" width="1.5779%" height="15" fill="rgb(240,10,37)" fg:x="120429" fg:w="2564"/><text x="74.3629%" y="303.50"></text></g><g><title>blk_mq_flush_plug_list (2,563 samples, 1.58%)</title><rect x="74.1135%" y="277" width="1.5773%" height="15" fill="rgb(214,192,32)" fg:x="120430" fg:w="2563"/><text x="74.3635%" y="287.50"></text></g><g><title>blk_mq_sched_insert_requests (2,563 samples, 1.58%)</title><rect x="74.1135%" y="261" width="1.5773%" height="15" fill="rgb(209,36,54)" fg:x="120430" fg:w="2563"/><text x="74.3635%" y="271.50"></text></g><g><title>blk_mq_try_issue_list_directly (2,561 samples, 1.58%)</title><rect x="74.1147%" y="245" width="1.5761%" height="15" fill="rgb(220,10,11)" fg:x="120432" fg:w="2561"/><text x="74.3647%" y="255.50"></text></g><g><title>blk_mq_submit_bio (2,794 samples, 1.72%)</title><rect x="73.9732%" y="309" width="1.7194%" height="15" fill="rgb(221,106,17)" fg:x="120202" fg:w="2794"/><text x="74.2232%" y="319.50"></text></g><g><title>__submit_bio (2,812 samples, 1.73%)</title><rect x="73.9677%" y="325" width="1.7305%" height="15" fill="rgb(251,142,44)" fg:x="120193" fg:w="2812"/><text x="74.2177%" y="335.50"></text></g><g><title>submit_bio (2,819 samples, 1.73%)</title><rect x="73.9640%" y="357" width="1.7348%" height="15" fill="rgb(238,13,15)" fg:x="120187" fg:w="2819"/><text x="74.2140%" y="367.50"></text></g><g><title>submit_bio_noacct (2,816 samples, 1.73%)</title><rect x="73.9658%" y="341" width="1.7330%" height="15" fill="rgb(208,107,27)" fg:x="120190" fg:w="2816"/><text x="74.2158%" y="351.50"></text></g><g><title>xas_load (372 samples, 0.23%)</title><rect x="75.7339%" y="341" width="0.2289%" height="15" fill="rgb(205,136,37)" fg:x="123063" fg:w="372"/><text x="75.9839%" y="351.50"></text></g><g><title>xas_start (80 samples, 0.05%)</title><rect x="75.9136%" y="325" width="0.0492%" height="15" fill="rgb(250,205,27)" fg:x="123355" fg:w="80"/><text x="76.1636%" y="335.50"></text></g><g><title>xa_load (435 samples, 0.27%)</title><rect x="75.6988%" y="357" width="0.2677%" height="15" fill="rgb(210,80,43)" fg:x="123006" fg:w="435"/><text x="75.9488%" y="367.50"></text></g><g><title>ext4_mpage_readpages (4,591 samples, 2.83%)</title><rect x="73.1485%" y="373" width="2.8253%" height="15" fill="rgb(247,160,36)" fg:x="118862" fg:w="4591"/><text x="73.3985%" y="383.50">ex..</text></g><g><title>read_pages (5,613 samples, 3.45%)</title><rect x="72.5325%" y="405" width="3.4543%" height="15" fill="rgb(234,13,49)" fg:x="117861" fg:w="5613"/><text x="72.7825%" y="415.50">rea..</text></g><g><title>ext4_readahead (4,622 samples, 2.84%)</title><rect x="73.1424%" y="389" width="2.8444%" height="15" fill="rgb(234,122,0)" fg:x="118852" fg:w="4622"/><text x="73.3924%" y="399.50">ex..</text></g><g><title>nvme_complete_rq (18 samples, 0.01%)</title><rect x="76.2976%" y="229" width="0.0111%" height="15" fill="rgb(207,146,38)" fg:x="123979" fg:w="18"/><text x="76.5476%" y="239.50"></text></g><g><title>blk_mq_end_request (18 samples, 0.01%)</title><rect x="76.2976%" y="213" width="0.0111%" height="15" fill="rgb(207,177,25)" fg:x="123979" fg:w="18"/><text x="76.5476%" y="223.50"></text></g><g><title>blk_update_request (18 samples, 0.01%)</title><rect x="76.2976%" y="197" width="0.0111%" height="15" fill="rgb(211,178,42)" fg:x="123979" fg:w="18"/><text x="76.5476%" y="207.50"></text></g><g><title>bio_endio (18 samples, 0.01%)</title><rect x="76.2976%" y="181" width="0.0111%" height="15" fill="rgb(230,69,54)" fg:x="123979" fg:w="18"/><text x="76.5476%" y="191.50"></text></g><g><title>nvme_irq (28 samples, 0.02%)</title><rect x="76.2970%" y="277" width="0.0172%" height="15" fill="rgb(214,135,41)" fg:x="123978" fg:w="28"/><text x="76.5470%" y="287.50"></text></g><g><title>nvme_process_cq (28 samples, 0.02%)</title><rect x="76.2970%" y="261" width="0.0172%" height="15" fill="rgb(237,67,25)" fg:x="123978" fg:w="28"/><text x="76.5470%" y="271.50"></text></g><g><title>nvme_pci_complete_rq (27 samples, 0.02%)</title><rect x="76.2976%" y="245" width="0.0166%" height="15" fill="rgb(222,189,50)" fg:x="123979" fg:w="27"/><text x="76.5476%" y="255.50"></text></g><g><title>asm_common_interrupt (29 samples, 0.02%)</title><rect x="76.2970%" y="373" width="0.0178%" height="15" fill="rgb(245,148,34)" fg:x="123978" fg:w="29"/><text x="76.5470%" y="383.50"></text></g><g><title>common_interrupt (29 samples, 0.02%)</title><rect x="76.2970%" y="357" width="0.0178%" height="15" fill="rgb(222,29,6)" fg:x="123978" fg:w="29"/><text x="76.5470%" y="367.50"></text></g><g><title>__common_interrupt (29 samples, 0.02%)</title><rect x="76.2970%" y="341" width="0.0178%" height="15" fill="rgb(221,189,43)" fg:x="123978" fg:w="29"/><text x="76.5470%" y="351.50"></text></g><g><title>handle_edge_irq (29 samples, 0.02%)</title><rect x="76.2970%" y="325" width="0.0178%" height="15" fill="rgb(207,36,27)" fg:x="123978" fg:w="29"/><text x="76.5470%" y="335.50"></text></g><g><title>handle_irq_event (29 samples, 0.02%)</title><rect x="76.2970%" y="309" width="0.0178%" height="15" fill="rgb(217,90,24)" fg:x="123978" fg:w="29"/><text x="76.5470%" y="319.50"></text></g><g><title>__handle_irq_event_percpu (29 samples, 0.02%)</title><rect x="76.2970%" y="293" width="0.0178%" height="15" fill="rgb(224,66,35)" fg:x="123978" fg:w="29"/><text x="76.5470%" y="303.50"></text></g><g><title>xas_load (557 samples, 0.34%)</title><rect x="76.0194%" y="389" width="0.3428%" height="15" fill="rgb(221,13,50)" fg:x="123527" fg:w="557"/><text x="76.2694%" y="399.50"></text></g><g><title>xas_start (77 samples, 0.05%)</title><rect x="76.3148%" y="373" width="0.0474%" height="15" fill="rgb(236,68,49)" fg:x="124007" fg:w="77"/><text x="76.5648%" y="383.50"></text></g><g><title>xa_load (616 samples, 0.38%)</title><rect x="75.9905%" y="405" width="0.3791%" height="15" fill="rgb(229,146,28)" fg:x="123480" fg:w="616"/><text x="76.2405%" y="415.50"></text></g><g><title>page_cache_ra_unbounded (24,451 samples, 15.05%)</title><rect x="61.3247%" y="421" width="15.0473%" height="15" fill="rgb(225,31,38)" fg:x="99649" fg:w="24451"/><text x="61.5747%" y="431.50">page_cache_ra_unbounded</text></g><g><title>page_cache_async_ra (24,499 samples, 15.08%)</title><rect x="61.3013%" y="453" width="15.0769%" height="15" fill="rgb(250,208,3)" fg:x="99611" fg:w="24499"/><text x="61.5513%" y="463.50">page_cache_async_ra</text></g><g><title>ondemand_readahead (24,491 samples, 15.07%)</title><rect x="61.3063%" y="437" width="15.0719%" height="15" fill="rgb(246,54,23)" fg:x="99619" fg:w="24491"/><text x="61.5563%" y="447.50">ondemand_readahead</text></g><g><title>__delete_from_page_cache (48 samples, 0.03%)</title><rect x="76.4379%" y="213" width="0.0295%" height="15" fill="rgb(243,76,11)" fg:x="124207" fg:w="48"/><text x="76.6879%" y="223.50"></text></g><g><title>xas_store (19 samples, 0.01%)</title><rect x="76.4557%" y="197" width="0.0117%" height="15" fill="rgb(245,21,50)" fg:x="124236" fg:w="19"/><text x="76.7057%" y="207.50"></text></g><g><title>_raw_spin_lock_irq (103 samples, 0.06%)</title><rect x="76.4674%" y="213" width="0.0634%" height="15" fill="rgb(228,9,43)" fg:x="124255" fg:w="103"/><text x="76.7174%" y="223.50"></text></g><g><title>native_queued_spin_lock_slowpath (97 samples, 0.06%)</title><rect x="76.4711%" y="197" width="0.0597%" height="15" fill="rgb(208,100,47)" fg:x="124261" fg:w="97"/><text x="76.7211%" y="207.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (97 samples, 0.06%)</title><rect x="76.4711%" y="181" width="0.0597%" height="15" fill="rgb(232,26,8)" fg:x="124261" fg:w="97"/><text x="76.7211%" y="191.50"></text></g><g><title>__remove_mapping (185 samples, 0.11%)</title><rect x="76.4256%" y="229" width="0.1139%" height="15" fill="rgb(216,166,38)" fg:x="124187" fg:w="185"/><text x="76.6756%" y="239.50"></text></g><g><title>free_unref_page_list (20 samples, 0.01%)</title><rect x="76.5407%" y="229" width="0.0123%" height="15" fill="rgb(251,202,51)" fg:x="124374" fg:w="20"/><text x="76.7907%" y="239.50"></text></g><g><title>shrink_page_list (238 samples, 0.15%)</title><rect x="76.4090%" y="245" width="0.1465%" height="15" fill="rgb(254,216,34)" fg:x="124160" fg:w="238"/><text x="76.6590%" y="255.50"></text></g><g><title>shrink_lruvec (270 samples, 0.17%)</title><rect x="76.3961%" y="277" width="0.1662%" height="15" fill="rgb(251,32,27)" fg:x="124139" fg:w="270"/><text x="76.6461%" y="287.50"></text></g><g><title>shrink_inactive_list (268 samples, 0.16%)</title><rect x="76.3973%" y="261" width="0.1649%" height="15" fill="rgb(208,127,28)" fg:x="124141" fg:w="268"/><text x="76.6473%" y="271.50"></text></g><g><title>try_to_free_pages (284 samples, 0.17%)</title><rect x="76.3924%" y="341" width="0.1748%" height="15" fill="rgb(224,137,22)" fg:x="124133" fg:w="284"/><text x="76.6424%" y="351.50"></text></g><g><title>do_try_to_free_pages (284 samples, 0.17%)</title><rect x="76.3924%" y="325" width="0.1748%" height="15" fill="rgb(254,70,32)" fg:x="124133" fg:w="284"/><text x="76.6424%" y="335.50"></text></g><g><title>shrink_node (284 samples, 0.17%)</title><rect x="76.3924%" y="309" width="0.1748%" height="15" fill="rgb(229,75,37)" fg:x="124133" fg:w="284"/><text x="76.6424%" y="319.50"></text></g><g><title>shrink_node_memcgs (284 samples, 0.17%)</title><rect x="76.3924%" y="293" width="0.1748%" height="15" fill="rgb(252,64,23)" fg:x="124133" fg:w="284"/><text x="76.6424%" y="303.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (306 samples, 0.19%)</title><rect x="76.3807%" y="357" width="0.1883%" height="15" fill="rgb(232,162,48)" fg:x="124114" fg:w="306"/><text x="76.6307%" y="367.50"></text></g><g><title>__page_cache_alloc (317 samples, 0.20%)</title><rect x="76.3788%" y="405" width="0.1951%" height="15" fill="rgb(246,160,12)" fg:x="124111" fg:w="317"/><text x="76.6288%" y="415.50"></text></g><g><title>alloc_pages (317 samples, 0.20%)</title><rect x="76.3788%" y="389" width="0.1951%" height="15" fill="rgb(247,166,0)" fg:x="124111" fg:w="317"/><text x="76.6288%" y="399.50"></text></g><g><title>__alloc_pages (316 samples, 0.19%)</title><rect x="76.3794%" y="373" width="0.1945%" height="15" fill="rgb(249,219,21)" fg:x="124112" fg:w="316"/><text x="76.6294%" y="383.50"></text></g><g><title>__add_to_page_cache_locked (36 samples, 0.02%)</title><rect x="76.5739%" y="389" width="0.0222%" height="15" fill="rgb(205,209,3)" fg:x="124428" fg:w="36"/><text x="76.8239%" y="399.50"></text></g><g><title>cgroup_rstat_flush_locked (25 samples, 0.02%)</title><rect x="76.6071%" y="325" width="0.0154%" height="15" fill="rgb(243,44,1)" fg:x="124482" fg:w="25"/><text x="76.8571%" y="335.50"></text></g><g><title>mem_cgroup_css_rstat_flush (19 samples, 0.01%)</title><rect x="76.6108%" y="309" width="0.0117%" height="15" fill="rgb(206,159,16)" fg:x="124488" fg:w="19"/><text x="76.8608%" y="319.50"></text></g><g><title>mem_cgroup_flush_stats (27 samples, 0.02%)</title><rect x="76.6065%" y="373" width="0.0166%" height="15" fill="rgb(244,77,30)" fg:x="124481" fg:w="27"/><text x="76.8565%" y="383.50"></text></g><g><title>__mem_cgroup_flush_stats (27 samples, 0.02%)</title><rect x="76.6065%" y="357" width="0.0166%" height="15" fill="rgb(218,69,12)" fg:x="124481" fg:w="27"/><text x="76.8565%" y="367.50"></text></g><g><title>cgroup_rstat_flush_irqsafe (27 samples, 0.02%)</title><rect x="76.6065%" y="341" width="0.0166%" height="15" fill="rgb(212,87,7)" fg:x="124481" fg:w="27"/><text x="76.8565%" y="351.50"></text></g><g><title>workingset_refault (34 samples, 0.02%)</title><rect x="76.6047%" y="389" width="0.0209%" height="15" fill="rgb(245,114,25)" fg:x="124478" fg:w="34"/><text x="76.8547%" y="399.50"></text></g><g><title>add_to_page_cache_lru (85 samples, 0.05%)</title><rect x="76.5739%" y="405" width="0.0523%" height="15" fill="rgb(210,61,42)" fg:x="124428" fg:w="85"/><text x="76.8239%" y="415.50"></text></g><g><title>submit_bio (18 samples, 0.01%)</title><rect x="76.6299%" y="357" width="0.0111%" height="15" fill="rgb(211,52,33)" fg:x="124519" fg:w="18"/><text x="76.8799%" y="367.50"></text></g><g><title>submit_bio_noacct (18 samples, 0.01%)</title><rect x="76.6299%" y="341" width="0.0111%" height="15" fill="rgb(234,58,33)" fg:x="124519" fg:w="18"/><text x="76.8799%" y="351.50"></text></g><g><title>__submit_bio (18 samples, 0.01%)</title><rect x="76.6299%" y="325" width="0.0111%" height="15" fill="rgb(220,115,36)" fg:x="124519" fg:w="18"/><text x="76.8799%" y="335.50"></text></g><g><title>blk_mq_submit_bio (18 samples, 0.01%)</title><rect x="76.6299%" y="309" width="0.0111%" height="15" fill="rgb(243,153,54)" fg:x="124519" fg:w="18"/><text x="76.8799%" y="319.50"></text></g><g><title>read_pages (25 samples, 0.02%)</title><rect x="76.6262%" y="405" width="0.0154%" height="15" fill="rgb(251,47,18)" fg:x="124513" fg:w="25"/><text x="76.8762%" y="415.50"></text></g><g><title>ext4_readahead (22 samples, 0.01%)</title><rect x="76.6281%" y="389" width="0.0135%" height="15" fill="rgb(242,102,42)" fg:x="124516" fg:w="22"/><text x="76.8781%" y="399.50"></text></g><g><title>ext4_mpage_readpages (22 samples, 0.01%)</title><rect x="76.6281%" y="373" width="0.0135%" height="15" fill="rgb(234,31,38)" fg:x="124516" fg:w="22"/><text x="76.8781%" y="383.50"></text></g><g><title>page_cache_sync_ra (432 samples, 0.27%)</title><rect x="76.3782%" y="453" width="0.2659%" height="15" fill="rgb(221,117,51)" fg:x="124110" fg:w="432"/><text x="76.6282%" y="463.50"></text></g><g><title>ondemand_readahead (432 samples, 0.27%)</title><rect x="76.3782%" y="437" width="0.2659%" height="15" fill="rgb(212,20,18)" fg:x="124110" fg:w="432"/><text x="76.6282%" y="447.50"></text></g><g><title>page_cache_ra_unbounded (432 samples, 0.27%)</title><rect x="76.3782%" y="421" width="0.2659%" height="15" fill="rgb(245,133,36)" fg:x="124110" fg:w="432"/><text x="76.6282%" y="431.50"></text></g><g><title>filemap_get_pages (26,331 samples, 16.20%)</title><rect x="60.4404%" y="469" width="16.2043%" height="15" fill="rgb(212,6,19)" fg:x="98212" fg:w="26331"/><text x="60.6904%" y="479.50">filemap_get_pages</text></g><g><title>asm_common_interrupt (21 samples, 0.01%)</title><rect x="78.1253%" y="453" width="0.0129%" height="15" fill="rgb(218,1,36)" fg:x="126949" fg:w="21"/><text x="78.3753%" y="463.50"></text></g><g><title>common_interrupt (21 samples, 0.01%)</title><rect x="78.1253%" y="437" width="0.0129%" height="15" fill="rgb(246,84,54)" fg:x="126949" fg:w="21"/><text x="78.3753%" y="447.50"></text></g><g><title>__common_interrupt (21 samples, 0.01%)</title><rect x="78.1253%" y="421" width="0.0129%" height="15" fill="rgb(242,110,6)" fg:x="126949" fg:w="21"/><text x="78.3753%" y="431.50"></text></g><g><title>handle_edge_irq (20 samples, 0.01%)</title><rect x="78.1260%" y="405" width="0.0123%" height="15" fill="rgb(214,47,5)" fg:x="126950" fg:w="20"/><text x="78.3760%" y="415.50"></text></g><g><title>handle_irq_event (18 samples, 0.01%)</title><rect x="78.1272%" y="389" width="0.0111%" height="15" fill="rgb(218,159,25)" fg:x="126952" fg:w="18"/><text x="78.3772%" y="399.50"></text></g><g><title>__handle_irq_event_percpu (17 samples, 0.01%)</title><rect x="78.1278%" y="373" width="0.0105%" height="15" fill="rgb(215,211,28)" fg:x="126953" fg:w="17"/><text x="78.3778%" y="383.50"></text></g><g><title>nvme_irq (17 samples, 0.01%)</title><rect x="78.1278%" y="357" width="0.0105%" height="15" fill="rgb(238,59,32)" fg:x="126953" fg:w="17"/><text x="78.3778%" y="367.50"></text></g><g><title>nvme_process_cq (17 samples, 0.01%)</title><rect x="78.1278%" y="341" width="0.0105%" height="15" fill="rgb(226,82,3)" fg:x="126953" fg:w="17"/><text x="78.3778%" y="351.50"></text></g><g><title>pagevec_lru_move_fn (17 samples, 0.01%)</title><rect x="78.1426%" y="453" width="0.0105%" height="15" fill="rgb(240,164,32)" fg:x="126977" fg:w="17"/><text x="78.3926%" y="463.50"></text></g><g><title>mark_page_accessed (2,455 samples, 1.51%)</title><rect x="76.6453%" y="469" width="1.5108%" height="15" fill="rgb(232,46,7)" fg:x="124544" fg:w="2455"/><text x="76.8953%" y="479.50"></text></g><g><title>filemap_read (41,258 samples, 25.39%)</title><rect x="52.7681%" y="485" width="25.3905%" height="15" fill="rgb(229,129,53)" fg:x="85745" fg:w="41258"/><text x="53.0181%" y="495.50">filemap_read</text></g><g><title>__x64_sys_read (41,282 samples, 25.41%)</title><rect x="52.7595%" y="581" width="25.4052%" height="15" fill="rgb(234,188,29)" fg:x="85731" fg:w="41282"/><text x="53.0095%" y="591.50">__x64_sys_read</text></g><g><title>ksys_read (41,282 samples, 25.41%)</title><rect x="52.7595%" y="565" width="25.4052%" height="15" fill="rgb(246,141,4)" fg:x="85731" fg:w="41282"/><text x="53.0095%" y="575.50">ksys_read</text></g><g><title>vfs_read (41,281 samples, 25.40%)</title><rect x="52.7601%" y="549" width="25.4046%" height="15" fill="rgb(229,23,39)" fg:x="85732" fg:w="41281"/><text x="53.0101%" y="559.50">vfs_read</text></g><g><title>new_sync_read (41,281 samples, 25.40%)</title><rect x="52.7601%" y="533" width="25.4046%" height="15" fill="rgb(206,12,3)" fg:x="85732" fg:w="41281"/><text x="53.0101%" y="543.50">new_sync_read</text></g><g><title>ext4_file_read_iter (41,281 samples, 25.40%)</title><rect x="52.7601%" y="517" width="25.4046%" height="15" fill="rgb(252,226,20)" fg:x="85732" fg:w="41281"/><text x="53.0101%" y="527.50">ext4_file_read_iter</text></g><g><title>generic_file_read_iter (41,281 samples, 25.40%)</title><rect x="52.7601%" y="501" width="25.4046%" height="15" fill="rgb(216,123,35)" fg:x="85732" fg:w="41281"/><text x="53.0101%" y="511.50">generic_file_read_iter</text></g><g><title>entry_SYSCALL_64_after_hwframe (41,283 samples, 25.41%)</title><rect x="52.7595%" y="613" width="25.4059%" height="15" fill="rgb(212,68,40)" fg:x="85731" fg:w="41283"/><text x="53.0095%" y="623.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (41,283 samples, 25.41%)</title><rect x="52.7595%" y="597" width="25.4059%" height="15" fill="rgb(254,125,32)" fg:x="85731" fg:w="41283"/><text x="53.0095%" y="607.50">do_syscall_64</text></g><g><title>__GI___libc_read (41,288 samples, 25.41%)</title><rect x="52.7583%" y="645" width="25.4089%" height="15" fill="rgb(253,97,22)" fg:x="85729" fg:w="41288"/><text x="53.0083%" y="655.50">__GI___libc_read</text></g><g><title>__GI___libc_read (41,288 samples, 25.41%)</title><rect x="52.7583%" y="629" width="25.4089%" height="15" fill="rgb(241,101,14)" fg:x="85729" fg:w="41288"/><text x="53.0083%" y="639.50">__GI___libc_read</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (41,289 samples, 25.41%)</title><rect x="52.7583%" y="741" width="25.4096%" height="15" fill="rgb(238,103,29)" fg:x="85729" fg:w="41289"/><text x="53.0083%" y="751.50">&lt;std::io::buffered::bufreader::BufReader&lt;..</text></g><g><title>std::io::default_read_exact (41,289 samples, 25.41%)</title><rect x="52.7583%" y="725" width="25.4096%" height="15" fill="rgb(233,195,47)" fg:x="85729" fg:w="41289"/><text x="53.0083%" y="735.50">std::io::default_read_exact</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (41,289 samples, 25.41%)</title><rect x="52.7583%" y="709" width="25.4096%" height="15" fill="rgb(246,218,30)" fg:x="85729" fg:w="41289"/><text x="53.0083%" y="719.50">&lt;std::io::buffered::bufreader::BufReader&lt;..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (41,289 samples, 25.41%)</title><rect x="52.7583%" y="693" width="25.4096%" height="15" fill="rgb(219,145,47)" fg:x="85729" fg:w="41289"/><text x="53.0083%" y="703.50">&lt;std::fs::File as std::io::Read&gt;::read</text></g><g><title>std::sys::unix::fs::File::read (41,289 samples, 25.41%)</title><rect x="52.7583%" y="677" width="25.4096%" height="15" fill="rgb(243,12,26)" fg:x="85729" fg:w="41289"/><text x="53.0083%" y="687.50">std::sys::unix::fs::File::read</text></g><g><title>std::sys::unix::fd::FileDesc::read (41,289 samples, 25.41%)</title><rect x="52.7583%" y="661" width="25.4096%" height="15" fill="rgb(214,87,16)" fg:x="85729" fg:w="41289"/><text x="53.0083%" y="671.50">std::sys::unix::fd::FileDesc::read</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (890 samples, 0.55%)</title><rect x="78.1678%" y="741" width="0.5477%" height="15" fill="rgb(208,99,42)" fg:x="127018" fg:w="890"/><text x="78.4178%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (890 samples, 0.55%)</title><rect x="78.1678%" y="725" width="0.5477%" height="15" fill="rgb(253,99,2)" fg:x="127018" fg:w="890"/><text x="78.4178%" y="735.50"></text></g><g><title>core::ptr::write (890 samples, 0.55%)</title><rect x="78.1678%" y="709" width="0.5477%" height="15" fill="rgb(220,168,23)" fg:x="127018" fg:w="890"/><text x="78.4178%" y="719.50"></text></g><g><title>__memset_avx2_unaligned_erms (890 samples, 0.55%)</title><rect x="78.1678%" y="693" width="0.5477%" height="15" fill="rgb(242,38,24)" fg:x="127018" fg:w="890"/><text x="78.4178%" y="703.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (20 samples, 0.01%)</title><rect x="78.7155%" y="741" width="0.0123%" height="15" fill="rgb(225,182,9)" fg:x="127908" fg:w="20"/><text x="78.9655%" y="751.50"></text></g><g><title>std::sync::mpsc::stream::Packet&lt;T&gt;::recv (20 samples, 0.01%)</title><rect x="78.7155%" y="725" width="0.0123%" height="15" fill="rgb(243,178,37)" fg:x="127908" fg:w="20"/><text x="78.9655%" y="735.50"></text></g><g><title>__clone3 (42,201 samples, 25.97%)</title><rect x="52.7583%" y="965" width="25.9708%" height="15" fill="rgb(232,139,19)" fg:x="85729" fg:w="42201"/><text x="53.0083%" y="975.50">__clone3</text></g><g><title>start_thread (42,201 samples, 25.97%)</title><rect x="52.7583%" y="949" width="25.9708%" height="15" fill="rgb(225,201,24)" fg:x="85729" fg:w="42201"/><text x="53.0083%" y="959.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (42,201 samples, 25.97%)</title><rect x="52.7583%" y="933" width="25.9708%" height="15" fill="rgb(221,47,46)" fg:x="85729" fg:w="42201"/><text x="53.0083%" y="943.50">std::sys::unix::thread::Thread::new::threa..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42,201 samples, 25.97%)</title><rect x="52.7583%" y="917" width="25.9708%" height="15" fill="rgb(249,23,13)" fg:x="85729" fg:w="42201"/><text x="53.0083%" y="927.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::func..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42,201 samples, 25.97%)</title><rect x="52.7583%" y="901" width="25.9708%" height="15" fill="rgb(219,9,5)" fg:x="85729" fg:w="42201"/><text x="53.0083%" y="911.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::func..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (42,201 samples, 25.97%)</title><rect x="52.7583%" y="885" width="25.9708%" height="15" fill="rgb(254,171,16)" fg:x="85729" fg:w="42201"/><text x="53.0083%" y="895.50">core::ops::function::FnOnce::call_once{{vt..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (42,201 samples, 25.97%)</title><rect x="52.7583%" y="869" width="25.9708%" height="15" fill="rgb(230,171,20)" fg:x="85729" fg:w="42201"/><text x="53.0083%" y="879.50">std::thread::Builder::spawn_unchecked_::{{..</text></g><g><title>std::panic::catch_unwind (42,201 samples, 25.97%)</title><rect x="52.7583%" y="853" width="25.9708%" height="15" fill="rgb(210,71,41)" fg:x="85729" fg:w="42201"/><text x="53.0083%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (42,201 samples, 25.97%)</title><rect x="52.7583%" y="837" width="25.9708%" height="15" fill="rgb(206,173,20)" fg:x="85729" fg:w="42201"/><text x="53.0083%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (42,201 samples, 25.97%)</title><rect x="52.7583%" y="821" width="25.9708%" height="15" fill="rgb(233,88,34)" fg:x="85729" fg:w="42201"/><text x="53.0083%" y="831.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42,201 samples, 25.97%)</title><rect x="52.7583%" y="805" width="25.9708%" height="15" fill="rgb(223,209,46)" fg:x="85729" fg:w="42201"/><text x="53.0083%" y="815.50">&lt;core::panic::unwind_safe::AssertUnwindSaf..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (42,201 samples, 25.97%)</title><rect x="52.7583%" y="789" width="25.9708%" height="15" fill="rgb(250,43,18)" fg:x="85729" fg:w="42201"/><text x="53.0083%" y="799.50">std::thread::Builder::spawn_unchecked_::{{..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (42,201 samples, 25.97%)</title><rect x="52.7583%" y="773" width="25.9708%" height="15" fill="rgb(208,13,10)" fg:x="85729" fg:w="42201"/><text x="53.0083%" y="783.50">std::sys_common::backtrace::__rust_begin_s..</text></g><g><title>hprof_slurp::prefetch_reader::PrefetchReader::start::{{closure}} (42,201 samples, 25.97%)</title><rect x="52.7583%" y="757" width="25.9708%" height="15" fill="rgb(212,200,36)" fg:x="85729" fg:w="42201"/><text x="53.0083%" y="767.50">hprof_slurp::prefetch_reader::PrefetchRead..</text></g><g><title>asm_sysvec_apic_timer_interrupt (979 samples, 0.60%)</title><rect x="78.7364%" y="965" width="0.6025%" height="15" fill="rgb(225,90,30)" fg:x="127942" fg:w="979"/><text x="78.9864%" y="975.50"></text></g><g><title>page_cache_async_ra (17 samples, 0.01%)</title><rect x="79.3586%" y="805" width="0.0105%" height="15" fill="rgb(236,182,39)" fg:x="128953" fg:w="17"/><text x="79.6086%" y="815.50"></text></g><g><title>ondemand_readahead (17 samples, 0.01%)</title><rect x="79.3586%" y="789" width="0.0105%" height="15" fill="rgb(212,144,35)" fg:x="128953" fg:w="17"/><text x="79.6086%" y="799.50"></text></g><g><title>page_cache_ra_unbounded (17 samples, 0.01%)</title><rect x="79.3586%" y="773" width="0.0105%" height="15" fill="rgb(228,63,44)" fg:x="128953" fg:w="17"/><text x="79.6086%" y="783.50"></text></g><g><title>filemap_get_pages (24 samples, 0.01%)</title><rect x="79.3549%" y="821" width="0.0148%" height="15" fill="rgb(228,109,6)" fg:x="128947" fg:w="24"/><text x="79.6049%" y="831.50"></text></g><g><title>hprof-prefetch (43,244 samples, 26.61%)</title><rect x="52.7576%" y="981" width="26.6127%" height="15" fill="rgb(238,117,24)" fg:x="85728" fg:w="43244"/><text x="53.0076%" y="991.50">hprof-prefetch</text></g><g><title>entry_SYSCALL_64_after_hwframe (38 samples, 0.02%)</title><rect x="79.3469%" y="965" width="0.0234%" height="15" fill="rgb(242,26,26)" fg:x="128934" fg:w="38"/><text x="79.5969%" y="975.50"></text></g><g><title>do_syscall_64 (38 samples, 0.02%)</title><rect x="79.3469%" y="949" width="0.0234%" height="15" fill="rgb(221,92,48)" fg:x="128934" fg:w="38"/><text x="79.5969%" y="959.50"></text></g><g><title>__x64_sys_read (38 samples, 0.02%)</title><rect x="79.3469%" y="933" width="0.0234%" height="15" fill="rgb(209,209,32)" fg:x="128934" fg:w="38"/><text x="79.5969%" y="943.50"></text></g><g><title>ksys_read (38 samples, 0.02%)</title><rect x="79.3469%" y="917" width="0.0234%" height="15" fill="rgb(221,70,22)" fg:x="128934" fg:w="38"/><text x="79.5969%" y="927.50"></text></g><g><title>vfs_read (38 samples, 0.02%)</title><rect x="79.3469%" y="901" width="0.0234%" height="15" fill="rgb(248,145,5)" fg:x="128934" fg:w="38"/><text x="79.5969%" y="911.50"></text></g><g><title>new_sync_read (38 samples, 0.02%)</title><rect x="79.3469%" y="885" width="0.0234%" height="15" fill="rgb(226,116,26)" fg:x="128934" fg:w="38"/><text x="79.5969%" y="895.50"></text></g><g><title>ext4_file_read_iter (38 samples, 0.02%)</title><rect x="79.3469%" y="869" width="0.0234%" height="15" fill="rgb(244,5,17)" fg:x="128934" fg:w="38"/><text x="79.5969%" y="879.50"></text></g><g><title>generic_file_read_iter (38 samples, 0.02%)</title><rect x="79.3469%" y="853" width="0.0234%" height="15" fill="rgb(252,159,33)" fg:x="128934" fg:w="38"/><text x="79.5969%" y="863.50"></text></g><g><title>filemap_read (38 samples, 0.02%)</title><rect x="79.3469%" y="837" width="0.0234%" height="15" fill="rgb(206,71,0)" fg:x="128934" fg:w="38"/><text x="79.5969%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (1,249 samples, 0.77%)</title><rect x="79.3728%" y="949" width="0.7686%" height="15" fill="rgb(233,118,54)" fg:x="128976" fg:w="1249"/><text x="79.6228%" y="959.50"></text></g><g><title>[unknown] (1,254 samples, 0.77%)</title><rect x="79.3722%" y="965" width="0.7717%" height="15" fill="rgb(234,83,48)" fg:x="128975" fg:w="1254"/><text x="79.6222%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::gc_record::GcRecord&gt; (1,063 samples, 0.65%)</title><rect x="85.4782%" y="677" width="0.6542%" height="15" fill="rgb(228,3,54)" fg:x="138897" fg:w="1063"/><text x="85.7282%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (9,730 samples, 5.99%)</title><rect x="80.1451%" y="741" width="5.9879%" height="15" fill="rgb(226,155,13)" fg:x="130231" fg:w="9730"/><text x="80.3951%" y="751.50">alloc::v..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (9,730 samples, 5.99%)</title><rect x="80.1451%" y="725" width="5.9879%" height="15" fill="rgb(241,28,37)" fg:x="130231" fg:w="9730"/><text x="80.3951%" y="735.50">alloc::v..</text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (9,730 samples, 5.99%)</title><rect x="80.1451%" y="709" width="5.9879%" height="15" fill="rgb(233,93,10)" fg:x="130231" fg:w="9730"/><text x="80.3951%" y="719.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (8,488 samples, 5.22%)</title><rect x="80.9094%" y="693" width="5.2236%" height="15" fill="rgb(225,113,19)" fg:x="131473" fg:w="8488"/><text x="81.1594%" y="703.50">core::..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.01%)</title><rect x="86.1330%" y="645" width="0.0135%" height="15" fill="rgb(241,2,18)" fg:x="139961" fg:w="22"/><text x="86.3830%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (22 samples, 0.01%)</title><rect x="86.1330%" y="629" width="0.0135%" height="15" fill="rgb(228,207,21)" fg:x="139961" fg:w="22"/><text x="86.3830%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (21 samples, 0.01%)</title><rect x="86.1336%" y="613" width="0.0129%" height="15" fill="rgb(213,211,35)" fg:x="139962" fg:w="21"/><text x="86.3836%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (21 samples, 0.01%)</title><rect x="86.1336%" y="597" width="0.0129%" height="15" fill="rgb(209,83,10)" fg:x="139962" fg:w="21"/><text x="86.3836%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,alloc::string::String)&gt; (21 samples, 0.01%)</title><rect x="86.1336%" y="581" width="0.0129%" height="15" fill="rgb(209,164,1)" fg:x="139962" fg:w="21"/><text x="86.3836%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (21 samples, 0.01%)</title><rect x="86.1336%" y="565" width="0.0129%" height="15" fill="rgb(213,184,43)" fg:x="139962" fg:w="21"/><text x="86.3836%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (21 samples, 0.01%)</title><rect x="86.1336%" y="549" width="0.0129%" height="15" fill="rgb(231,61,34)" fg:x="139962" fg:w="21"/><text x="86.3836%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (21 samples, 0.01%)</title><rect x="86.1336%" y="533" width="0.0129%" height="15" fill="rgb(235,75,3)" fg:x="139962" fg:w="21"/><text x="86.3836%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.01%)</title><rect x="86.1336%" y="517" width="0.0129%" height="15" fill="rgb(220,106,47)" fg:x="139962" fg:w="21"/><text x="86.3836%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.01%)</title><rect x="86.1336%" y="501" width="0.0129%" height="15" fill="rgb(210,196,33)" fg:x="139962" fg:w="21"/><text x="86.3836%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.01%)</title><rect x="86.1336%" y="485" width="0.0129%" height="15" fill="rgb(229,154,42)" fg:x="139962" fg:w="21"/><text x="86.3836%" y="495.50"></text></g><g><title>__GI___libc_free (21 samples, 0.01%)</title><rect x="86.1336%" y="469" width="0.0129%" height="15" fill="rgb(228,114,26)" fg:x="139962" fg:w="21"/><text x="86.3836%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;ahash::hash_map::AHashMap&lt;u64,alloc::string::String&gt;&gt; (23 samples, 0.01%)</title><rect x="86.1330%" y="709" width="0.0142%" height="15" fill="rgb(208,144,1)" fg:x="139961" fg:w="23"/><text x="86.3830%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (23 samples, 0.01%)</title><rect x="86.1330%" y="693" width="0.0142%" height="15" fill="rgb(239,112,37)" fg:x="139961" fg:w="23"/><text x="86.3830%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (23 samples, 0.01%)</title><rect x="86.1330%" y="677" width="0.0142%" height="15" fill="rgb(210,96,50)" fg:x="139961" fg:w="23"/><text x="86.3830%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (23 samples, 0.01%)</title><rect x="86.1330%" y="661" width="0.0142%" height="15" fill="rgb(222,178,2)" fg:x="139961" fg:w="23"/><text x="86.3830%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder::start::{{closure}}&gt; (40 samples, 0.02%)</title><rect x="86.1330%" y="741" width="0.0246%" height="15" fill="rgb(226,74,18)" fg:x="139961" fg:w="40"/><text x="86.3830%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder&gt; (40 samples, 0.02%)</title><rect x="86.1330%" y="725" width="0.0246%" height="15" fill="rgb(225,67,54)" fg:x="139961" fg:w="40"/><text x="86.3830%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;ahash::hash_map::AHashMap&lt;u64,u64&gt;&gt; (17 samples, 0.01%)</title><rect x="86.1472%" y="709" width="0.0105%" height="15" fill="rgb(251,92,32)" fg:x="139984" fg:w="17"/><text x="86.3972%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,u64,ahash::random_state::RandomState&gt;&gt; (17 samples, 0.01%)</title><rect x="86.1472%" y="693" width="0.0105%" height="15" fill="rgb(228,149,22)" fg:x="139984" fg:w="17"/><text x="86.3972%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,u64,ahash::random_state::RandomState&gt;&gt; (17 samples, 0.01%)</title><rect x="86.1472%" y="677" width="0.0105%" height="15" fill="rgb(243,54,13)" fg:x="139984" fg:w="17"/><text x="86.3972%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,u64)&gt;&gt; (17 samples, 0.01%)</title><rect x="86.1472%" y="661" width="0.0105%" height="15" fill="rgb(243,180,28)" fg:x="139984" fg:w="17"/><text x="86.3972%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.01%)</title><rect x="86.1472%" y="645" width="0.0105%" height="15" fill="rgb(208,167,24)" fg:x="139984" fg:w="17"/><text x="86.3972%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (17 samples, 0.01%)</title><rect x="86.1472%" y="629" width="0.0105%" height="15" fill="rgb(245,73,45)" fg:x="139984" fg:w="17"/><text x="86.3972%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (17 samples, 0.01%)</title><rect x="86.1472%" y="613" width="0.0105%" height="15" fill="rgb(237,203,48)" fg:x="139984" fg:w="17"/><text x="86.3972%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.01%)</title><rect x="86.1472%" y="597" width="0.0105%" height="15" fill="rgb(211,197,16)" fg:x="139984" fg:w="17"/><text x="86.3972%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (17 samples, 0.01%)</title><rect x="86.1472%" y="581" width="0.0105%" height="15" fill="rgb(243,99,51)" fg:x="139984" fg:w="17"/><text x="86.3972%" y="591.50"></text></g><g><title>__GI___libc_free (17 samples, 0.01%)</title><rect x="86.1472%" y="565" width="0.0105%" height="15" fill="rgb(215,123,29)" fg:x="139984" fg:w="17"/><text x="86.3972%" y="575.50"></text></g><g><title>_int_free (17 samples, 0.01%)</title><rect x="86.1472%" y="549" width="0.0105%" height="15" fill="rgb(239,186,37)" fg:x="139984" fg:w="17"/><text x="86.3972%" y="559.50"></text></g><g><title>malloc_consolidate (17 samples, 0.01%)</title><rect x="86.1472%" y="533" width="0.0105%" height="15" fill="rgb(252,136,39)" fg:x="139984" fg:w="17"/><text x="86.3972%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (423 samples, 0.26%)</title><rect x="86.1576%" y="709" width="0.2603%" height="15" fill="rgb(223,213,32)" fg:x="140001" fg:w="423"/><text x="86.4076%" y="719.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (418 samples, 0.26%)</title><rect x="86.1607%" y="693" width="0.2572%" height="15" fill="rgb(233,115,5)" fg:x="140006" fg:w="418"/><text x="86.4107%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (418 samples, 0.26%)</title><rect x="86.1607%" y="677" width="0.2572%" height="15" fill="rgb(207,226,44)" fg:x="140006" fg:w="418"/><text x="86.4107%" y="687.50"></text></g><g><title>__hrtimer_run_queues (18 samples, 0.01%)</title><rect x="92.7493%" y="629" width="0.0111%" height="15" fill="rgb(208,126,0)" fg:x="150712" fg:w="18"/><text x="92.9993%" y="639.50"></text></g><g><title>tick_sched_timer (17 samples, 0.01%)</title><rect x="92.7499%" y="613" width="0.0105%" height="15" fill="rgb(244,66,21)" fg:x="150713" fg:w="17"/><text x="92.9999%" y="623.50"></text></g><g><title>tick_sched_handle (17 samples, 0.01%)</title><rect x="92.7499%" y="597" width="0.0105%" height="15" fill="rgb(222,97,12)" fg:x="150713" fg:w="17"/><text x="92.9999%" y="607.50"></text></g><g><title>update_process_times (17 samples, 0.01%)</title><rect x="92.7499%" y="581" width="0.0105%" height="15" fill="rgb(219,213,19)" fg:x="150713" fg:w="17"/><text x="92.9999%" y="591.50"></text></g><g><title>__sysvec_apic_timer_interrupt (20 samples, 0.01%)</title><rect x="92.7493%" y="661" width="0.0123%" height="15" fill="rgb(252,169,30)" fg:x="150712" fg:w="20"/><text x="92.9993%" y="671.50"></text></g><g><title>hrtimer_interrupt (20 samples, 0.01%)</title><rect x="92.7493%" y="645" width="0.0123%" height="15" fill="rgb(206,32,51)" fg:x="150712" fg:w="20"/><text x="92.9993%" y="655.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (23 samples, 0.01%)</title><rect x="92.7487%" y="693" width="0.0142%" height="15" fill="rgb(250,172,42)" fg:x="150711" fg:w="23"/><text x="92.9987%" y="703.50"></text></g><g><title>sysvec_apic_timer_interrupt (22 samples, 0.01%)</title><rect x="92.7493%" y="677" width="0.0135%" height="15" fill="rgb(209,34,43)" fg:x="150712" fg:w="22"/><text x="92.9993%" y="687.50"></text></g><g><title>hprof_slurp::result_recorder::ArrayCounter::add_elements_from_array (74 samples, 0.05%)</title><rect x="92.7659%" y="693" width="0.0455%" height="15" fill="rgb(223,11,35)" fg:x="150739" fg:w="74"/><text x="93.0159%" y="703.50"></text></g><g><title>hprof_slurp::result_recorder::ClassInstanceCounter::add_instance (1,192 samples, 0.73%)</title><rect x="92.8114%" y="693" width="0.7336%" height="15" fill="rgb(251,219,26)" fg:x="150813" fg:w="1192"/><text x="93.0614%" y="703.50"></text></g><g><title>ahash::operations::folded_multiply (1,180 samples, 0.73%)</title><rect x="93.5450%" y="613" width="0.7262%" height="15" fill="rgb(231,119,3)" fg:x="152005" fg:w="1180"/><text x="93.7950%" y="623.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (716 samples, 0.44%)</title><rect x="93.8305%" y="597" width="0.4406%" height="15" fill="rgb(216,97,11)" fg:x="152469" fg:w="716"/><text x="94.0805%" y="607.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1,419 samples, 0.87%)</title><rect x="93.5450%" y="629" width="0.8733%" height="15" fill="rgb(223,59,9)" fg:x="152005" fg:w="1419"/><text x="93.7950%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (239 samples, 0.15%)</title><rect x="94.2712%" y="613" width="0.1471%" height="15" fill="rgb(233,93,31)" fg:x="153185" fg:w="239"/><text x="94.5212%" y="623.50"></text></g><g><title>&lt;hprof_slurp::parser::gc_record::FieldType as core::hash::Hash&gt;::hash (27 samples, 0.02%)</title><rect x="94.4183%" y="613" width="0.0166%" height="15" fill="rgb(239,81,33)" fg:x="153424" fg:w="27"/><text x="94.6683%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (27 samples, 0.02%)</title><rect x="94.4183%" y="597" width="0.0166%" height="15" fill="rgb(213,120,34)" fg:x="153424" fg:w="27"/><text x="94.6683%" y="607.50"></text></g><g><title>core::hash::Hasher::write_isize (27 samples, 0.02%)</title><rect x="94.4183%" y="581" width="0.0166%" height="15" fill="rgb(243,49,53)" fg:x="153424" fg:w="27"/><text x="94.6683%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (27 samples, 0.02%)</title><rect x="94.4183%" y="565" width="0.0166%" height="15" fill="rgb(247,216,33)" fg:x="153424" fg:w="27"/><text x="94.6683%" y="575.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (27 samples, 0.02%)</title><rect x="94.4183%" y="549" width="0.0166%" height="15" fill="rgb(226,26,14)" fg:x="153424" fg:w="27"/><text x="94.6683%" y="559.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (27 samples, 0.02%)</title><rect x="94.4183%" y="533" width="0.0166%" height="15" fill="rgb(215,49,53)" fg:x="153424" fg:w="27"/><text x="94.6683%" y="543.50"></text></g><g><title>ahash::operations::folded_multiply (19 samples, 0.01%)</title><rect x="94.4232%" y="517" width="0.0117%" height="15" fill="rgb(245,162,40)" fg:x="153432" fg:w="19"/><text x="94.6732%" y="527.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (18 samples, 0.01%)</title><rect x="94.4238%" y="501" width="0.0111%" height="15" fill="rgb(229,68,17)" fg:x="153433" fg:w="18"/><text x="94.6738%" y="511.50"></text></g><g><title>ahash::operations::folded_multiply (727 samples, 0.45%)</title><rect x="94.4379%" y="565" width="0.4474%" height="15" fill="rgb(213,182,10)" fg:x="153456" fg:w="727"/><text x="94.6879%" y="575.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (679 samples, 0.42%)</title><rect x="94.4675%" y="549" width="0.4179%" height="15" fill="rgb(245,125,30)" fg:x="153504" fg:w="679"/><text x="94.7175%" y="559.50"></text></g><g><title>hashbrown::map::make_insert_hash (2,179 samples, 1.34%)</title><rect x="93.5450%" y="661" width="1.3410%" height="15" fill="rgb(232,202,2)" fg:x="152005" fg:w="2179"/><text x="93.7950%" y="671.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,179 samples, 1.34%)</title><rect x="93.5450%" y="645" width="1.3410%" height="15" fill="rgb(237,140,51)" fg:x="152005" fg:w="2179"/><text x="93.7950%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (760 samples, 0.47%)</title><rect x="94.4183%" y="629" width="0.4677%" height="15" fill="rgb(236,157,25)" fg:x="153424" fg:w="760"/><text x="94.6683%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (733 samples, 0.45%)</title><rect x="94.4349%" y="613" width="0.4511%" height="15" fill="rgb(219,209,0)" fg:x="153451" fg:w="733"/><text x="94.6849%" y="623.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (733 samples, 0.45%)</title><rect x="94.4349%" y="597" width="0.4511%" height="15" fill="rgb(240,116,54)" fg:x="153451" fg:w="733"/><text x="94.6849%" y="607.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (733 samples, 0.45%)</title><rect x="94.4349%" y="581" width="0.4511%" height="15" fill="rgb(216,10,36)" fg:x="153451" fg:w="733"/><text x="94.6849%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,101 samples, 0.68%)</title><rect x="95.4891%" y="629" width="0.6776%" height="15" fill="rgb(222,72,44)" fg:x="155164" fg:w="1101"/><text x="95.7391%" y="639.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,032 samples, 0.64%)</title><rect x="95.5315%" y="613" width="0.6351%" height="15" fill="rgb(232,159,9)" fg:x="155233" fg:w="1032"/><text x="95.7815%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (810 samples, 0.50%)</title><rect x="96.1839%" y="613" width="0.4985%" height="15" fill="rgb(210,39,32)" fg:x="156293" fg:w="810"/><text x="96.4339%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (810 samples, 0.50%)</title><rect x="96.1839%" y="597" width="0.4985%" height="15" fill="rgb(216,194,45)" fg:x="156293" fg:w="810"/><text x="96.4339%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (797 samples, 0.49%)</title><rect x="96.1919%" y="581" width="0.4905%" height="15" fill="rgb(218,18,35)" fg:x="156306" fg:w="797"/><text x="96.4419%" y="591.50"></text></g><g><title>&lt;hprof_slurp::parser::gc_record::FieldType as core::cmp::PartialEq&gt;::eq (32 samples, 0.02%)</title><rect x="96.6823%" y="597" width="0.0197%" height="15" fill="rgb(207,83,51)" fg:x="157103" fg:w="32"/><text x="96.9323%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2,347 samples, 1.44%)</title><rect x="96.1839%" y="629" width="1.4444%" height="15" fill="rgb(225,63,43)" fg:x="156293" fg:w="2347"/><text x="96.4339%" y="639.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (1,537 samples, 0.95%)</title><rect x="96.6823%" y="613" width="0.9459%" height="15" fill="rgb(207,57,36)" fg:x="157103" fg:w="1537"/><text x="96.9323%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (1,505 samples, 0.93%)</title><rect x="96.7020%" y="597" width="0.9262%" height="15" fill="rgb(216,99,33)" fg:x="157135" fg:w="1505"/><text x="96.9520%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1,449 samples, 0.89%)</title><rect x="97.6282%" y="629" width="0.8917%" height="15" fill="rgb(225,42,16)" fg:x="158640" fg:w="1449"/><text x="97.8782%" y="639.50"></text></g><g><title>hashbrown::raw::h2 (624 samples, 0.38%)</title><rect x="98.5199%" y="629" width="0.3840%" height="15" fill="rgb(220,201,45)" fg:x="160089" fg:w="624"/><text x="98.7699%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (333 samples, 0.20%)</title><rect x="98.9040%" y="629" width="0.2049%" height="15" fill="rgb(225,33,4)" fg:x="160713" fg:w="333"/><text x="99.1540%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (333 samples, 0.20%)</title><rect x="98.9040%" y="613" width="0.2049%" height="15" fill="rgb(224,33,50)" fg:x="160713" fg:w="333"/><text x="99.1540%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (333 samples, 0.20%)</title><rect x="98.9040%" y="597" width="0.2049%" height="15" fill="rgb(246,198,51)" fg:x="160713" fg:w="333"/><text x="99.1540%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1,101 samples, 0.68%)</title><rect x="99.1089%" y="629" width="0.6776%" height="15" fill="rgb(205,22,4)" fg:x="161046" fg:w="1101"/><text x="99.3589%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1,101 samples, 0.68%)</title><rect x="99.1089%" y="613" width="0.6776%" height="15" fill="rgb(206,3,8)" fg:x="161046" fg:w="1101"/><text x="99.3589%" y="623.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (22,375 samples, 13.77%)</title><rect x="86.1576%" y="741" width="13.7697%" height="15" fill="rgb(251,23,15)" fg:x="140001" fg:w="22375"/><text x="86.4076%" y="751.50">hprof_slurp::result_r..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (22,375 samples, 13.77%)</title><rect x="86.1576%" y="725" width="13.7697%" height="15" fill="rgb(252,88,28)" fg:x="140001" fg:w="22375"/><text x="86.4076%" y="735.50">&lt;core::slice::iter::I..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (21,952 samples, 13.51%)</title><rect x="86.4180%" y="709" width="13.5094%" height="15" fill="rgb(212,127,14)" fg:x="140424" fg:w="21952"/><text x="86.6680%" y="719.50">hprof_slurp::result_..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (10,371 samples, 6.38%)</title><rect x="93.5450%" y="693" width="6.3824%" height="15" fill="rgb(247,145,37)" fg:x="152005" fg:w="10371"/><text x="93.7950%" y="703.50">std::col..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (10,371 samples, 6.38%)</title><rect x="93.5450%" y="677" width="6.3824%" height="15" fill="rgb(209,117,53)" fg:x="152005" fg:w="10371"/><text x="93.7950%" y="687.50">hashbrow..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8,192 samples, 5.04%)</title><rect x="94.8860%" y="661" width="5.0414%" height="15" fill="rgb(212,90,42)" fg:x="154184" fg:w="8192"/><text x="95.1360%" y="671.50">hashbr..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8,192 samples, 5.04%)</title><rect x="94.8860%" y="645" width="5.0414%" height="15" fill="rgb(218,164,37)" fg:x="154184" fg:w="8192"/><text x="95.1360%" y="655.50">hashbr..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (229 samples, 0.14%)</title><rect x="99.7865%" y="629" width="0.1409%" height="15" fill="rgb(246,65,34)" fg:x="162147" fg:w="229"/><text x="100.0365%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (229 samples, 0.14%)</title><rect x="99.7865%" y="613" width="0.1409%" height="15" fill="rgb(231,100,33)" fg:x="162147" fg:w="229"/><text x="100.0365%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (229 samples, 0.14%)</title><rect x="99.7865%" y="597" width="0.1409%" height="15" fill="rgb(228,126,14)" fg:x="162147" fg:w="229"/><text x="100.0365%" y="607.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (21 samples, 0.01%)</title><rect x="99.9323%" y="709" width="0.0129%" height="15" fill="rgb(215,173,21)" fg:x="162384" fg:w="21"/><text x="100.1823%" y="719.50"></text></g><g><title>std::thread::park (20 samples, 0.01%)</title><rect x="99.9329%" y="693" width="0.0123%" height="15" fill="rgb(210,6,40)" fg:x="162385" fg:w="20"/><text x="100.1829%" y="703.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (20 samples, 0.01%)</title><rect x="99.9329%" y="677" width="0.0123%" height="15" fill="rgb(212,48,18)" fg:x="162385" fg:w="20"/><text x="100.1829%" y="687.50"></text></g><g><title>std::sys::unix::futex::futex_wait (17 samples, 0.01%)</title><rect x="99.9348%" y="661" width="0.0105%" height="15" fill="rgb(230,214,11)" fg:x="162388" fg:w="17"/><text x="100.1848%" y="671.50"></text></g><g><title>syscall (17 samples, 0.01%)</title><rect x="99.9348%" y="645" width="0.0105%" height="15" fill="rgb(254,105,39)" fg:x="162388" fg:w="17"/><text x="100.1848%" y="655.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (17 samples, 0.01%)</title><rect x="99.9348%" y="629" width="0.0105%" height="15" fill="rgb(245,158,5)" fg:x="162388" fg:w="17"/><text x="100.1848%" y="639.50"></text></g><g><title>do_syscall_64 (17 samples, 0.01%)</title><rect x="99.9348%" y="613" width="0.0105%" height="15" fill="rgb(249,208,11)" fg:x="162388" fg:w="17"/><text x="100.1848%" y="623.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (25 samples, 0.02%)</title><rect x="99.9317%" y="741" width="0.0154%" height="15" fill="rgb(210,39,28)" fg:x="162383" fg:w="25"/><text x="100.1817%" y="751.50"></text></g><g><title>std::sync::mpsc::stream::Packet&lt;T&gt;::recv (24 samples, 0.01%)</title><rect x="99.9323%" y="725" width="0.0148%" height="15" fill="rgb(211,56,53)" fg:x="162384" fg:w="24"/><text x="100.1823%" y="735.50"></text></g><g><title>__clone3 (32,180 samples, 19.80%)</title><rect x="80.1439%" y="965" width="19.8038%" height="15" fill="rgb(226,201,30)" fg:x="130229" fg:w="32180"/><text x="80.3939%" y="975.50">__clone3</text></g><g><title>start_thread (32,180 samples, 19.80%)</title><rect x="80.1439%" y="949" width="19.8038%" height="15" fill="rgb(239,101,34)" fg:x="130229" fg:w="32180"/><text x="80.3939%" y="959.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (32,179 samples, 19.80%)</title><rect x="80.1445%" y="933" width="19.8032%" height="15" fill="rgb(226,209,5)" fg:x="130230" fg:w="32179"/><text x="80.3945%" y="943.50">std::sys::unix::thread::Thread:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (32,179 samples, 19.80%)</title><rect x="80.1445%" y="917" width="19.8032%" height="15" fill="rgb(250,105,47)" fg:x="130230" fg:w="32179"/><text x="80.3945%" y="927.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (32,179 samples, 19.80%)</title><rect x="80.1445%" y="901" width="19.8032%" height="15" fill="rgb(230,72,3)" fg:x="130230" fg:w="32179"/><text x="80.3945%" y="911.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (32,179 samples, 19.80%)</title><rect x="80.1445%" y="885" width="19.8032%" height="15" fill="rgb(232,218,39)" fg:x="130230" fg:w="32179"/><text x="80.3945%" y="895.50">core::ops::function::FnOnce::ca..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (32,179 samples, 19.80%)</title><rect x="80.1445%" y="869" width="19.8032%" height="15" fill="rgb(248,166,6)" fg:x="130230" fg:w="32179"/><text x="80.3945%" y="879.50">std::thread::Builder::spawn_unc..</text></g><g><title>std::panic::catch_unwind (32,178 samples, 19.80%)</title><rect x="80.1451%" y="853" width="19.8026%" height="15" fill="rgb(247,89,20)" fg:x="130231" fg:w="32178"/><text x="80.3951%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (32,178 samples, 19.80%)</title><rect x="80.1451%" y="837" width="19.8026%" height="15" fill="rgb(248,130,54)" fg:x="130231" fg:w="32178"/><text x="80.3951%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (32,178 samples, 19.80%)</title><rect x="80.1451%" y="821" width="19.8026%" height="15" fill="rgb(234,196,4)" fg:x="130231" fg:w="32178"/><text x="80.3951%" y="831.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (32,178 samples, 19.80%)</title><rect x="80.1451%" y="805" width="19.8026%" height="15" fill="rgb(250,143,31)" fg:x="130231" fg:w="32178"/><text x="80.3951%" y="815.50">&lt;core::panic::unwind_safe::Asse..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (32,178 samples, 19.80%)</title><rect x="80.1451%" y="789" width="19.8026%" height="15" fill="rgb(211,110,34)" fg:x="130231" fg:w="32178"/><text x="80.3951%" y="799.50">std::thread::Builder::spawn_unc..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (32,178 samples, 19.80%)</title><rect x="80.1451%" y="773" width="19.8026%" height="15" fill="rgb(215,124,48)" fg:x="130231" fg:w="32178"/><text x="80.3951%" y="783.50">std::sys_common::backtrace::__r..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (32,178 samples, 19.80%)</title><rect x="80.1451%" y="757" width="19.8026%" height="15" fill="rgb(216,46,13)" fg:x="130231" fg:w="32178"/><text x="80.3951%" y="767.50">hprof_slurp::result_recorder::R..</text></g><g><title>hprof-recorder (33,446 samples, 20.58%)</title><rect x="79.3703%" y="981" width="20.5829%" height="15" fill="rgb(205,184,25)" fg:x="128972" fg:w="33446"/><text x="79.6203%" y="991.50">hprof-recorder</text></g><g><title>finish_task_switch.isra.0 (20 samples, 0.01%)</title><rect x="99.9705%" y="421" width="0.0123%" height="15" fill="rgb(228,1,10)" fg:x="162446" fg:w="20"/><text x="100.2205%" y="431.50"></text></g><g><title>__perf_event_task_sched_in (20 samples, 0.01%)</title><rect x="99.9705%" y="405" width="0.0123%" height="15" fill="rgb(213,116,27)" fg:x="162446" fg:w="20"/><text x="100.2205%" y="415.50"></text></g><g><title>x86_pmu_enable (20 samples, 0.01%)</title><rect x="99.9705%" y="389" width="0.0123%" height="15" fill="rgb(241,95,50)" fg:x="162446" fg:w="20"/><text x="100.2205%" y="399.50"></text></g><g><title>intel_pmu_enable_all (20 samples, 0.01%)</title><rect x="99.9705%" y="373" width="0.0123%" height="15" fill="rgb(238,48,32)" fg:x="162446" fg:w="20"/><text x="100.2205%" y="383.50"></text></g><g><title>native_write_msr (20 samples, 0.01%)</title><rect x="99.9705%" y="357" width="0.0123%" height="15" fill="rgb(235,113,49)" fg:x="162446" fg:w="20"/><text x="100.2205%" y="367.50"></text></g><g><title>__x64_sys_futex (22 samples, 0.01%)</title><rect x="99.9705%" y="517" width="0.0135%" height="15" fill="rgb(205,127,43)" fg:x="162446" fg:w="22"/><text x="100.2205%" y="527.50"></text></g><g><title>do_futex (22 samples, 0.01%)</title><rect x="99.9705%" y="501" width="0.0135%" height="15" fill="rgb(250,162,2)" fg:x="162446" fg:w="22"/><text x="100.2205%" y="511.50"></text></g><g><title>futex_wait (22 samples, 0.01%)</title><rect x="99.9705%" y="485" width="0.0135%" height="15" fill="rgb(220,13,41)" fg:x="162446" fg:w="22"/><text x="100.2205%" y="495.50"></text></g><g><title>futex_wait_queue_me (22 samples, 0.01%)</title><rect x="99.9705%" y="469" width="0.0135%" height="15" fill="rgb(249,221,25)" fg:x="162446" fg:w="22"/><text x="100.2205%" y="479.50"></text></g><g><title>schedule (22 samples, 0.01%)</title><rect x="99.9705%" y="453" width="0.0135%" height="15" fill="rgb(215,208,19)" fg:x="162446" fg:w="22"/><text x="100.2205%" y="463.50"></text></g><g><title>__schedule (22 samples, 0.01%)</title><rect x="99.9705%" y="437" width="0.0135%" height="15" fill="rgb(236,175,2)" fg:x="162446" fg:w="22"/><text x="100.2205%" y="447.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (27 samples, 0.02%)</title><rect x="99.9692%" y="629" width="0.0166%" height="15" fill="rgb(241,52,2)" fg:x="162444" fg:w="27"/><text x="100.2192%" y="639.50"></text></g><g><title>std::thread::park (26 samples, 0.02%)</title><rect x="99.9698%" y="613" width="0.0160%" height="15" fill="rgb(248,140,14)" fg:x="162445" fg:w="26"/><text x="100.2198%" y="623.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (26 samples, 0.02%)</title><rect x="99.9698%" y="597" width="0.0160%" height="15" fill="rgb(253,22,42)" fg:x="162445" fg:w="26"/><text x="100.2198%" y="607.50"></text></g><g><title>std::sys::unix::futex::futex_wait (26 samples, 0.02%)</title><rect x="99.9698%" y="581" width="0.0160%" height="15" fill="rgb(234,61,47)" fg:x="162445" fg:w="26"/><text x="100.2198%" y="591.50"></text></g><g><title>syscall (26 samples, 0.02%)</title><rect x="99.9698%" y="565" width="0.0160%" height="15" fill="rgb(208,226,15)" fg:x="162445" fg:w="26"/><text x="100.2198%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 0.02%)</title><rect x="99.9705%" y="549" width="0.0154%" height="15" fill="rgb(217,221,4)" fg:x="162446" fg:w="25"/><text x="100.2205%" y="559.50"></text></g><g><title>do_syscall_64 (25 samples, 0.02%)</title><rect x="99.9705%" y="533" width="0.0154%" height="15" fill="rgb(212,174,34)" fg:x="162446" fg:w="25"/><text x="100.2205%" y="543.50"></text></g><g><title>_start (36 samples, 0.02%)</title><rect x="99.9643%" y="965" width="0.0222%" height="15" fill="rgb(253,83,4)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="975.50"></text></g><g><title>__libc_start_main_impl (36 samples, 0.02%)</title><rect x="99.9643%" y="949" width="0.0222%" height="15" fill="rgb(250,195,49)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="959.50"></text></g><g><title>__libc_start_call_main (36 samples, 0.02%)</title><rect x="99.9643%" y="933" width="0.0222%" height="15" fill="rgb(241,192,25)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="943.50"></text></g><g><title>main (36 samples, 0.02%)</title><rect x="99.9643%" y="917" width="0.0222%" height="15" fill="rgb(208,124,10)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="927.50"></text></g><g><title>std::rt::lang_start_internal (36 samples, 0.02%)</title><rect x="99.9643%" y="901" width="0.0222%" height="15" fill="rgb(222,33,0)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="911.50"></text></g><g><title>std::panic::catch_unwind (36 samples, 0.02%)</title><rect x="99.9643%" y="885" width="0.0222%" height="15" fill="rgb(234,209,28)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="895.50"></text></g><g><title>std::panicking::try (36 samples, 0.02%)</title><rect x="99.9643%" y="869" width="0.0222%" height="15" fill="rgb(224,11,23)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="879.50"></text></g><g><title>std::panicking::try::do_call (36 samples, 0.02%)</title><rect x="99.9643%" y="853" width="0.0222%" height="15" fill="rgb(232,99,1)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="863.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (36 samples, 0.02%)</title><rect x="99.9643%" y="837" width="0.0222%" height="15" fill="rgb(237,95,45)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="847.50"></text></g><g><title>std::panic::catch_unwind (36 samples, 0.02%)</title><rect x="99.9643%" y="821" width="0.0222%" height="15" fill="rgb(208,109,11)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="831.50"></text></g><g><title>std::panicking::try (36 samples, 0.02%)</title><rect x="99.9643%" y="805" width="0.0222%" height="15" fill="rgb(216,190,48)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="815.50"></text></g><g><title>std::panicking::try::do_call (36 samples, 0.02%)</title><rect x="99.9643%" y="789" width="0.0222%" height="15" fill="rgb(251,171,36)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (36 samples, 0.02%)</title><rect x="99.9643%" y="773" width="0.0222%" height="15" fill="rgb(230,62,22)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="783.50"></text></g><g><title>std::rt::lang_start::{{closure}} (36 samples, 0.02%)</title><rect x="99.9643%" y="757" width="0.0222%" height="15" fill="rgb(225,114,35)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="767.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (36 samples, 0.02%)</title><rect x="99.9643%" y="741" width="0.0222%" height="15" fill="rgb(215,118,42)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="751.50"></text></g><g><title>core::ops::function::FnOnce::call_once (36 samples, 0.02%)</title><rect x="99.9643%" y="725" width="0.0222%" height="15" fill="rgb(243,119,21)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="735.50"></text></g><g><title>hprof_slurp::main (36 samples, 0.02%)</title><rect x="99.9643%" y="709" width="0.0222%" height="15" fill="rgb(252,177,53)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="719.50"></text></g><g><title>hprof_slurp::main_result (36 samples, 0.02%)</title><rect x="99.9643%" y="693" width="0.0222%" height="15" fill="rgb(237,209,29)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="703.50"></text></g><g><title>hprof_slurp::slurp::slurp_file (36 samples, 0.02%)</title><rect x="99.9643%" y="677" width="0.0222%" height="15" fill="rgb(212,65,23)" fg:x="162436" fg:w="36"/><text x="100.2143%" y="687.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (29 samples, 0.02%)</title><rect x="99.9686%" y="661" width="0.0178%" height="15" fill="rgb(230,222,46)" fg:x="162443" fg:w="29"/><text x="100.2186%" y="671.50"></text></g><g><title>std::sync::mpsc::stream::Packet&lt;T&gt;::recv (29 samples, 0.02%)</title><rect x="99.9686%" y="645" width="0.0178%" height="15" fill="rgb(215,135,32)" fg:x="162443" fg:w="29"/><text x="100.2186%" y="655.50"></text></g><g><title>hprof-slurp (71 samples, 0.04%)</title><rect x="99.9532%" y="981" width="0.0437%" height="15" fill="rgb(246,101,22)" fg:x="162418" fg:w="71"/><text x="100.2032%" y="991.50"></text></g><g><title>all (162,494 samples, 100%)</title><rect x="0.0000%" y="997" width="100.0000%" height="15" fill="rgb(206,107,13)" fg:x="0" fg:w="162494"/><text x="0.2500%" y="1007.50"></text></g></svg></svg>