<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="965.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="210640"><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (611 samples, 0.29%)</title><rect x="0.0005%" y="885" width="0.2901%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="611"/><text x="0.2505%" y="895.50"></text></g><g><title>[anon] (663 samples, 0.31%)</title><rect x="0.0000%" y="901" width="0.3148%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="663"/><text x="0.2500%" y="911.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (2,023 samples, 0.96%)</title><rect x="0.3171%" y="885" width="0.9604%" height="15" fill="rgb(221,193,54)" fg:x="668" fg:w="2023"/><text x="0.5671%" y="895.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (129 samples, 0.06%)</title><rect x="1.8795%" y="853" width="0.0612%" height="15" fill="rgb(248,212,6)" fg:x="3959" fg:w="129"/><text x="2.1295%" y="863.50"></text></g><g><title>core::ops::function::FnMut::call_mut (129 samples, 0.06%)</title><rect x="1.8795%" y="837" width="0.0612%" height="15" fill="rgb(208,68,35)" fg:x="3959" fg:w="129"/><text x="2.1295%" y="847.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (129 samples, 0.06%)</title><rect x="1.8795%" y="821" width="0.0612%" height="15" fill="rgb(232,128,0)" fg:x="3959" fg:w="129"/><text x="2.1295%" y="831.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,414 samples, 0.67%)</title><rect x="1.2775%" y="885" width="0.6713%" height="15" fill="rgb(207,160,47)" fg:x="2691" fg:w="1414"/><text x="1.5275%" y="895.50"></text></g><g><title>nom::multi::count::{{closure}} (146 samples, 0.07%)</title><rect x="1.8795%" y="869" width="0.0693%" height="15" fill="rgb(228,23,34)" fg:x="3959" fg:w="146"/><text x="2.1295%" y="879.50"></text></g><g><title>__GI___libc_malloc (24 samples, 0.01%)</title><rect x="1.9488%" y="885" width="0.0114%" height="15" fill="rgb(218,30,26)" fg:x="4105" fg:w="24"/><text x="2.1988%" y="895.50"></text></g><g><title>_int_malloc (31 samples, 0.01%)</title><rect x="1.9640%" y="885" width="0.0147%" height="15" fill="rgb(220,122,19)" fg:x="4137" fg:w="31"/><text x="2.2140%" y="895.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (139 samples, 0.07%)</title><rect x="1.9859%" y="885" width="0.0660%" height="15" fill="rgb(250,228,42)" fg:x="4183" fg:w="139"/><text x="2.2359%" y="895.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (52 samples, 0.02%)</title><rect x="2.0518%" y="885" width="0.0247%" height="15" fill="rgb(240,193,28)" fg:x="4322" fg:w="52"/><text x="2.3018%" y="895.50"></text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (52 samples, 0.02%)</title><rect x="2.0518%" y="869" width="0.0247%" height="15" fill="rgb(216,20,37)" fg:x="4322" fg:w="52"/><text x="2.3018%" y="879.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (1,193 samples, 0.57%)</title><rect x="2.0765%" y="885" width="0.5664%" height="15" fill="rgb(206,188,39)" fg:x="4374" fg:w="1193"/><text x="2.3265%" y="895.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (55 samples, 0.03%)</title><rect x="2.6453%" y="885" width="0.0261%" height="15" fill="rgb(217,207,13)" fg:x="5572" fg:w="55"/><text x="2.8953%" y="895.50"></text></g><g><title>[unknown] (4,970 samples, 2.36%)</title><rect x="0.3171%" y="901" width="2.3595%" height="15" fill="rgb(231,73,38)" fg:x="668" fg:w="4970"/><text x="0.5671%" y="911.50">[..</text></g><g><title>__alloc_pages (33 samples, 0.02%)</title><rect x="6.5681%" y="485" width="0.0157%" height="15" fill="rgb(225,20,46)" fg:x="13835" fg:w="33"/><text x="6.8181%" y="495.50"></text></g><g><title>get_page_from_freelist (29 samples, 0.01%)</title><rect x="6.5700%" y="469" width="0.0138%" height="15" fill="rgb(210,31,41)" fg:x="13839" fg:w="29"/><text x="6.8200%" y="479.50"></text></g><g><title>alloc_pages_vma (35 samples, 0.02%)</title><rect x="6.5676%" y="501" width="0.0166%" height="15" fill="rgb(221,200,47)" fg:x="13834" fg:w="35"/><text x="6.8176%" y="511.50"></text></g><g><title>do_user_addr_fault (75 samples, 0.04%)</title><rect x="6.5610%" y="581" width="0.0356%" height="15" fill="rgb(226,26,5)" fg:x="13820" fg:w="75"/><text x="6.8110%" y="591.50"></text></g><g><title>handle_mm_fault (73 samples, 0.03%)</title><rect x="6.5619%" y="565" width="0.0347%" height="15" fill="rgb(249,33,26)" fg:x="13822" fg:w="73"/><text x="6.8119%" y="575.50"></text></g><g><title>__handle_mm_fault (68 samples, 0.03%)</title><rect x="6.5643%" y="549" width="0.0323%" height="15" fill="rgb(235,183,28)" fg:x="13827" fg:w="68"/><text x="6.8143%" y="559.50"></text></g><g><title>handle_pte_fault (66 samples, 0.03%)</title><rect x="6.5652%" y="533" width="0.0313%" height="15" fill="rgb(221,5,38)" fg:x="13829" fg:w="66"/><text x="6.8152%" y="543.50"></text></g><g><title>do_anonymous_page (63 samples, 0.03%)</title><rect x="6.5667%" y="517" width="0.0299%" height="15" fill="rgb(247,18,42)" fg:x="13832" fg:w="63"/><text x="6.8167%" y="527.50"></text></g><g><title>asm_exc_page_fault (81 samples, 0.04%)</title><rect x="6.5595%" y="613" width="0.0385%" height="15" fill="rgb(241,131,45)" fg:x="13817" fg:w="81"/><text x="6.8095%" y="623.50"></text></g><g><title>exc_page_fault (79 samples, 0.04%)</title><rect x="6.5605%" y="597" width="0.0375%" height="15" fill="rgb(249,31,29)" fg:x="13819" fg:w="79"/><text x="6.8105%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (8,278 samples, 3.93%)</title><rect x="2.6780%" y="677" width="3.9299%" height="15" fill="rgb(225,111,53)" fg:x="5641" fg:w="8278"/><text x="2.9280%" y="687.50">allo..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8,278 samples, 3.93%)</title><rect x="2.6780%" y="661" width="3.9299%" height="15" fill="rgb(238,160,17)" fg:x="5641" fg:w="8278"/><text x="2.9280%" y="671.50">allo..</text></g><g><title>core::intrinsics::copy_nonoverlapping (8,274 samples, 3.93%)</title><rect x="2.6799%" y="645" width="3.9280%" height="15" fill="rgb(214,148,48)" fg:x="5645" fg:w="8274"/><text x="2.9299%" y="655.50">core..</text></g><g><title>__memcpy_avx_unaligned_erms (8,274 samples, 3.93%)</title><rect x="2.6799%" y="629" width="3.9280%" height="15" fill="rgb(232,36,49)" fg:x="5645" fg:w="8274"/><text x="2.9299%" y="639.50">__me..</text></g><g><title>__mod_memcg_lruvec_state (58 samples, 0.03%)</title><rect x="6.7618%" y="405" width="0.0275%" height="15" fill="rgb(209,103,24)" fg:x="14243" fg:w="58"/><text x="7.0118%" y="415.50"></text></g><g><title>__mod_lruvec_state (82 samples, 0.04%)</title><rect x="6.7580%" y="421" width="0.0389%" height="15" fill="rgb(229,88,8)" fg:x="14235" fg:w="82"/><text x="7.0080%" y="431.50"></text></g><g><title>__free_one_page (283 samples, 0.13%)</title><rect x="6.9327%" y="373" width="0.1344%" height="15" fill="rgb(213,181,19)" fg:x="14603" fg:w="283"/><text x="7.1827%" y="383.50"></text></g><g><title>free_unref_page_list (529 samples, 0.25%)</title><rect x="6.8178%" y="421" width="0.2511%" height="15" fill="rgb(254,191,54)" fg:x="14361" fg:w="529"/><text x="7.0678%" y="431.50"></text></g><g><title>free_unref_page_commit (467 samples, 0.22%)</title><rect x="6.8472%" y="405" width="0.2217%" height="15" fill="rgb(241,83,37)" fg:x="14423" fg:w="467"/><text x="7.0972%" y="415.50"></text></g><g><title>free_pcppages_bulk (414 samples, 0.20%)</title><rect x="6.8724%" y="389" width="0.1965%" height="15" fill="rgb(233,36,39)" fg:x="14476" fg:w="414"/><text x="7.1224%" y="399.50"></text></g><g><title>mem_cgroup_uncharge_list (61 samples, 0.03%)</title><rect x="7.0708%" y="421" width="0.0290%" height="15" fill="rgb(226,3,54)" fg:x="14894" fg:w="61"/><text x="7.3208%" y="431.50"></text></g><g><title>uncharge_page (54 samples, 0.03%)</title><rect x="7.0742%" y="405" width="0.0256%" height="15" fill="rgb(245,192,40)" fg:x="14901" fg:w="54"/><text x="7.3242%" y="415.50"></text></g><g><title>tlb_finish_mmu (1,038 samples, 0.49%)</title><rect x="6.6146%" y="469" width="0.4928%" height="15" fill="rgb(238,167,29)" fg:x="13933" fg:w="1038"/><text x="6.8646%" y="479.50"></text></g><g><title>free_pages_and_swap_cache (1,034 samples, 0.49%)</title><rect x="6.6165%" y="453" width="0.4909%" height="15" fill="rgb(232,182,51)" fg:x="13937" fg:w="1034"/><text x="6.8665%" y="463.50"></text></g><g><title>release_pages (933 samples, 0.44%)</title><rect x="6.6645%" y="437" width="0.4429%" height="15" fill="rgb(231,60,39)" fg:x="14038" fg:w="933"/><text x="6.9145%" y="447.50"></text></g><g><title>__tlb_remove_page_size (28 samples, 0.01%)</title><rect x="7.7117%" y="389" width="0.0133%" height="15" fill="rgb(208,69,12)" fg:x="16244" fg:w="28"/><text x="7.9617%" y="399.50"></text></g><g><title>__mod_memcg_state.part.0 (33 samples, 0.02%)</title><rect x="7.9273%" y="325" width="0.0157%" height="15" fill="rgb(235,93,37)" fg:x="16698" fg:w="33"/><text x="8.1773%" y="335.50"></text></g><g><title>cgroup_rstat_updated (28 samples, 0.01%)</title><rect x="7.9296%" y="309" width="0.0133%" height="15" fill="rgb(213,116,39)" fg:x="16703" fg:w="28"/><text x="8.1796%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (137 samples, 0.07%)</title><rect x="7.8831%" y="341" width="0.0650%" height="15" fill="rgb(222,207,29)" fg:x="16605" fg:w="137"/><text x="8.1331%" y="351.50"></text></g><g><title>__mod_memcg_state.part.0 (35 samples, 0.02%)</title><rect x="7.9482%" y="341" width="0.0166%" height="15" fill="rgb(206,96,30)" fg:x="16742" fg:w="35"/><text x="8.1982%" y="351.50"></text></g><g><title>__mod_lruvec_state (230 samples, 0.11%)</title><rect x="7.8665%" y="357" width="0.1092%" height="15" fill="rgb(218,138,4)" fg:x="16570" fg:w="230"/><text x="8.1165%" y="367.50"></text></g><g><title>__mod_node_page_state (23 samples, 0.01%)</title><rect x="7.9648%" y="341" width="0.0109%" height="15" fill="rgb(250,191,14)" fg:x="16777" fg:w="23"/><text x="8.2148%" y="351.50"></text></g><g><title>__mod_node_page_state (23 samples, 0.01%)</title><rect x="7.9785%" y="357" width="0.0109%" height="15" fill="rgb(239,60,40)" fg:x="16806" fg:w="23"/><text x="8.2285%" y="367.50"></text></g><g><title>__mod_lruvec_page_state (307 samples, 0.15%)</title><rect x="7.8485%" y="373" width="0.1457%" height="15" fill="rgb(206,27,48)" fg:x="16532" fg:w="307"/><text x="8.0985%" y="383.50"></text></g><g><title>lock_page_memcg (49 samples, 0.02%)</title><rect x="7.9994%" y="373" width="0.0233%" height="15" fill="rgb(225,35,8)" fg:x="16850" fg:w="49"/><text x="8.2494%" y="383.50"></text></g><g><title>page_remove_rmap (641 samples, 0.30%)</title><rect x="7.7355%" y="389" width="0.3043%" height="15" fill="rgb(250,213,24)" fg:x="16294" fg:w="641"/><text x="7.9855%" y="399.50"></text></g><g><title>unlock_page_memcg (23 samples, 0.01%)</title><rect x="8.0289%" y="373" width="0.0109%" height="15" fill="rgb(247,123,22)" fg:x="16912" fg:w="23"/><text x="8.2789%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (63 samples, 0.03%)</title><rect x="8.2482%" y="325" width="0.0299%" height="15" fill="rgb(231,138,38)" fg:x="17374" fg:w="63"/><text x="8.4982%" y="335.50"></text></g><g><title>__mod_lruvec_state (108 samples, 0.05%)</title><rect x="8.2397%" y="341" width="0.0513%" height="15" fill="rgb(231,145,46)" fg:x="17356" fg:w="108"/><text x="8.4897%" y="351.50"></text></g><g><title>free_pcp_prepare (22 samples, 0.01%)</title><rect x="8.3583%" y="325" width="0.0104%" height="15" fill="rgb(251,118,11)" fg:x="17606" fg:w="22"/><text x="8.6083%" y="335.50"></text></g><g><title>__free_one_page (423 samples, 0.20%)</title><rect x="8.4813%" y="293" width="0.2008%" height="15" fill="rgb(217,147,25)" fg:x="17865" fg:w="423"/><text x="8.7313%" y="303.50"></text></g><g><title>free_unref_page_list (773 samples, 0.37%)</title><rect x="8.3218%" y="341" width="0.3670%" height="15" fill="rgb(247,81,37)" fg:x="17529" fg:w="773"/><text x="8.5718%" y="351.50"></text></g><g><title>free_unref_page_commit (674 samples, 0.32%)</title><rect x="8.3688%" y="325" width="0.3200%" height="15" fill="rgb(209,12,38)" fg:x="17628" fg:w="674"/><text x="8.6188%" y="335.50"></text></g><g><title>free_pcppages_bulk (611 samples, 0.29%)</title><rect x="8.3987%" y="309" width="0.2901%" height="15" fill="rgb(227,1,9)" fg:x="17691" fg:w="611"/><text x="8.6487%" y="319.50"></text></g><g><title>mem_cgroup_uncharge_list (82 samples, 0.04%)</title><rect x="8.6930%" y="341" width="0.0389%" height="15" fill="rgb(248,47,43)" fg:x="18311" fg:w="82"/><text x="8.9430%" y="351.50"></text></g><g><title>uncharge_page (59 samples, 0.03%)</title><rect x="8.7039%" y="325" width="0.0280%" height="15" fill="rgb(221,10,30)" fg:x="18334" fg:w="59"/><text x="8.9539%" y="335.50"></text></g><g><title>mem_cgroup_update_lru_size (25 samples, 0.01%)</title><rect x="8.7320%" y="341" width="0.0119%" height="15" fill="rgb(210,229,1)" fg:x="18393" fg:w="25"/><text x="8.9820%" y="351.50"></text></g><g><title>tlb_flush_mmu (1,489 samples, 0.71%)</title><rect x="8.0398%" y="389" width="0.7069%" height="15" fill="rgb(222,148,37)" fg:x="16935" fg:w="1489"/><text x="8.2898%" y="399.50"></text></g><g><title>free_pages_and_swap_cache (1,488 samples, 0.71%)</title><rect x="8.0403%" y="373" width="0.7064%" height="15" fill="rgb(234,67,33)" fg:x="16936" fg:w="1488"/><text x="8.2903%" y="383.50"></text></g><g><title>release_pages (1,306 samples, 0.62%)</title><rect x="8.1267%" y="357" width="0.6200%" height="15" fill="rgb(247,98,35)" fg:x="17118" fg:w="1306"/><text x="8.3767%" y="367.50"></text></g><g><title>__do_munmap (4,551 samples, 2.16%)</title><rect x="6.6084%" y="501" width="2.1606%" height="15" fill="rgb(247,138,52)" fg:x="13920" fg:w="4551"/><text x="6.8584%" y="511.50">_..</text></g><g><title>unmap_region (4,541 samples, 2.16%)</title><rect x="6.6132%" y="485" width="2.1558%" height="15" fill="rgb(213,79,30)" fg:x="13930" fg:w="4541"/><text x="6.8632%" y="495.50">u..</text></g><g><title>unmap_vmas (3,500 samples, 1.66%)</title><rect x="7.1074%" y="469" width="1.6616%" height="15" fill="rgb(246,177,23)" fg:x="14971" fg:w="3500"/><text x="7.3574%" y="479.50"></text></g><g><title>unmap_single_vma (3,500 samples, 1.66%)</title><rect x="7.1074%" y="453" width="1.6616%" height="15" fill="rgb(230,62,27)" fg:x="14971" fg:w="3500"/><text x="7.3574%" y="463.50"></text></g><g><title>unmap_page_range (3,500 samples, 1.66%)</title><rect x="7.1074%" y="437" width="1.6616%" height="15" fill="rgb(216,154,8)" fg:x="14971" fg:w="3500"/><text x="7.3574%" y="447.50"></text></g><g><title>zap_pmd_range.isra.0 (3,500 samples, 1.66%)</title><rect x="7.1074%" y="421" width="1.6616%" height="15" fill="rgb(244,35,45)" fg:x="14971" fg:w="3500"/><text x="7.3574%" y="431.50"></text></g><g><title>zap_pte_range (3,462 samples, 1.64%)</title><rect x="7.1254%" y="405" width="1.6436%" height="15" fill="rgb(251,115,12)" fg:x="15009" fg:w="3462"/><text x="7.3754%" y="415.50"></text></g><g><title>vm_normal_page (32 samples, 0.02%)</title><rect x="8.7538%" y="389" width="0.0152%" height="15" fill="rgb(240,54,50)" fg:x="18439" fg:w="32"/><text x="9.0038%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4,553 samples, 2.16%)</title><rect x="6.6080%" y="677" width="2.1615%" height="15" fill="rgb(233,84,52)" fg:x="13919" fg:w="4553"/><text x="6.8580%" y="687.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4,553 samples, 2.16%)</title><rect x="6.6080%" y="661" width="2.1615%" height="15" fill="rgb(207,117,47)" fg:x="13919" fg:w="4553"/><text x="6.8580%" y="671.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,553 samples, 2.16%)</title><rect x="6.6080%" y="645" width="2.1615%" height="15" fill="rgb(249,43,39)" fg:x="13919" fg:w="4553"/><text x="6.8580%" y="655.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,553 samples, 2.16%)</title><rect x="6.6080%" y="629" width="2.1615%" height="15" fill="rgb(209,38,44)" fg:x="13919" fg:w="4553"/><text x="6.8580%" y="639.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (4,553 samples, 2.16%)</title><rect x="6.6080%" y="613" width="2.1615%" height="15" fill="rgb(236,212,23)" fg:x="13919" fg:w="4553"/><text x="6.8580%" y="623.50">a..</text></g><g><title>__free (4,553 samples, 2.16%)</title><rect x="6.6080%" y="597" width="2.1615%" height="15" fill="rgb(242,79,21)" fg:x="13919" fg:w="4553"/><text x="6.8580%" y="607.50">_..</text></g><g><title>__GI___munmap (4,553 samples, 2.16%)</title><rect x="6.6080%" y="581" width="2.1615%" height="15" fill="rgb(211,96,35)" fg:x="13919" fg:w="4553"/><text x="6.8580%" y="591.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (4,552 samples, 2.16%)</title><rect x="6.6084%" y="565" width="2.1610%" height="15" fill="rgb(253,215,40)" fg:x="13920" fg:w="4552"/><text x="6.8584%" y="575.50">e..</text></g><g><title>do_syscall_64 (4,552 samples, 2.16%)</title><rect x="6.6084%" y="549" width="2.1610%" height="15" fill="rgb(211,81,21)" fg:x="13920" fg:w="4552"/><text x="6.8584%" y="559.50">d..</text></g><g><title>__x64_sys_munmap (4,552 samples, 2.16%)</title><rect x="6.6084%" y="533" width="2.1610%" height="15" fill="rgb(208,190,38)" fg:x="13920" fg:w="4552"/><text x="6.8584%" y="543.50">_..</text></g><g><title>__vm_munmap (4,552 samples, 2.16%)</title><rect x="6.6084%" y="517" width="2.1610%" height="15" fill="rgb(235,213,38)" fg:x="13920" fg:w="4552"/><text x="6.8584%" y="527.50">_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (35 samples, 0.02%)</title><rect x="8.7737%" y="661" width="0.0166%" height="15" fill="rgb(237,122,38)" fg:x="18481" fg:w="35"/><text x="9.0237%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (35 samples, 0.02%)</title><rect x="8.7737%" y="645" width="0.0166%" height="15" fill="rgb(244,218,35)" fg:x="18481" fg:w="35"/><text x="9.0237%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.02%)</title><rect x="8.7737%" y="629" width="0.0166%" height="15" fill="rgb(240,68,47)" fg:x="18481" fg:w="35"/><text x="9.0237%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (35 samples, 0.02%)</title><rect x="8.7737%" y="613" width="0.0166%" height="15" fill="rgb(210,16,53)" fg:x="18481" fg:w="35"/><text x="9.0237%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (35 samples, 0.02%)</title><rect x="8.7737%" y="597" width="0.0166%" height="15" fill="rgb(235,124,12)" fg:x="18481" fg:w="35"/><text x="9.0237%" y="607.50"></text></g><g><title>__free (35 samples, 0.02%)</title><rect x="8.7737%" y="581" width="0.0166%" height="15" fill="rgb(224,169,11)" fg:x="18481" fg:w="35"/><text x="9.0237%" y="591.50"></text></g><g><title>__GI___munmap (35 samples, 0.02%)</title><rect x="8.7737%" y="565" width="0.0166%" height="15" fill="rgb(250,166,2)" fg:x="18481" fg:w="35"/><text x="9.0237%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (35 samples, 0.02%)</title><rect x="8.7737%" y="549" width="0.0166%" height="15" fill="rgb(242,216,29)" fg:x="18481" fg:w="35"/><text x="9.0237%" y="559.50"></text></g><g><title>do_syscall_64 (35 samples, 0.02%)</title><rect x="8.7737%" y="533" width="0.0166%" height="15" fill="rgb(230,116,27)" fg:x="18481" fg:w="35"/><text x="9.0237%" y="543.50"></text></g><g><title>__x64_sys_munmap (35 samples, 0.02%)</title><rect x="8.7737%" y="517" width="0.0166%" height="15" fill="rgb(228,99,48)" fg:x="18481" fg:w="35"/><text x="9.0237%" y="527.50"></text></g><g><title>__vm_munmap (35 samples, 0.02%)</title><rect x="8.7737%" y="501" width="0.0166%" height="15" fill="rgb(253,11,6)" fg:x="18481" fg:w="35"/><text x="9.0237%" y="511.50"></text></g><g><title>__do_munmap (35 samples, 0.02%)</title><rect x="8.7737%" y="485" width="0.0166%" height="15" fill="rgb(247,143,39)" fg:x="18481" fg:w="35"/><text x="9.0237%" y="495.50"></text></g><g><title>unmap_region (35 samples, 0.02%)</title><rect x="8.7737%" y="469" width="0.0166%" height="15" fill="rgb(236,97,10)" fg:x="18481" fg:w="35"/><text x="9.0237%" y="479.50"></text></g><g><title>unmap_vmas (33 samples, 0.02%)</title><rect x="8.7747%" y="453" width="0.0157%" height="15" fill="rgb(233,208,19)" fg:x="18483" fg:w="33"/><text x="9.0247%" y="463.50"></text></g><g><title>unmap_single_vma (33 samples, 0.02%)</title><rect x="8.7747%" y="437" width="0.0157%" height="15" fill="rgb(216,164,2)" fg:x="18483" fg:w="33"/><text x="9.0247%" y="447.50"></text></g><g><title>unmap_page_range (33 samples, 0.02%)</title><rect x="8.7747%" y="421" width="0.0157%" height="15" fill="rgb(220,129,5)" fg:x="18483" fg:w="33"/><text x="9.0247%" y="431.50"></text></g><g><title>zap_pmd_range.isra.0 (33 samples, 0.02%)</title><rect x="8.7747%" y="405" width="0.0157%" height="15" fill="rgb(242,17,10)" fg:x="18483" fg:w="33"/><text x="9.0247%" y="415.50"></text></g><g><title>zap_pte_range (32 samples, 0.02%)</title><rect x="8.7752%" y="389" width="0.0152%" height="15" fill="rgb(242,107,0)" fg:x="18484" fg:w="32"/><text x="9.0252%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}}&gt; (46 samples, 0.02%)</title><rect x="8.7714%" y="677" width="0.0218%" height="15" fill="rgb(251,28,31)" fg:x="18476" fg:w="46"/><text x="9.0214%" y="687.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (26 samples, 0.01%)</title><rect x="17.3495%" y="613" width="0.0123%" height="15" fill="rgb(233,223,10)" fg:x="36545" fg:w="26"/><text x="17.5995%" y="623.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}}::{{closure}} (26 samples, 0.01%)</title><rect x="17.3495%" y="597" width="0.0123%" height="15" fill="rgb(215,21,27)" fg:x="36545" fg:w="26"/><text x="17.5995%" y="607.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_utf8_string (25 samples, 0.01%)</title><rect x="17.3500%" y="581" width="0.0119%" height="15" fill="rgb(232,23,21)" fg:x="36546" fg:w="25"/><text x="17.6000%" y="591.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (25 samples, 0.01%)</title><rect x="17.3500%" y="565" width="0.0119%" height="15" fill="rgb(244,5,23)" fg:x="36546" fg:w="25"/><text x="17.6000%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (25 samples, 0.01%)</title><rect x="17.3500%" y="549" width="0.0119%" height="15" fill="rgb(226,81,46)" fg:x="36546" fg:w="25"/><text x="17.6000%" y="559.50"></text></g><g><title>nom::combinator::map::{{closure}} (24 samples, 0.01%)</title><rect x="17.3505%" y="533" width="0.0114%" height="15" fill="rgb(247,70,30)" fg:x="36547" fg:w="24"/><text x="17.6005%" y="543.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_utf8_string::{{closure}}::{{closure}} (22 samples, 0.01%)</title><rect x="17.3514%" y="517" width="0.0104%" height="15" fill="rgb(212,68,19)" fg:x="36549" fg:w="22"/><text x="17.6014%" y="527.50"></text></g><g><title>__sysvec_apic_timer_interrupt (26 samples, 0.01%)</title><rect x="33.8587%" y="549" width="0.0123%" height="15" fill="rgb(240,187,13)" fg:x="71320" fg:w="26"/><text x="34.1087%" y="559.50"></text></g><g><title>hrtimer_interrupt (26 samples, 0.01%)</title><rect x="33.8587%" y="533" width="0.0123%" height="15" fill="rgb(223,113,26)" fg:x="71320" fg:w="26"/><text x="34.1087%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (34,776 samples, 16.51%)</title><rect x="17.3618%" y="613" width="16.5097%" height="15" fill="rgb(206,192,2)" fg:x="36571" fg:w="34776"/><text x="17.6118%" y="623.50">core::result::Result&lt;T,E&gt;..</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}}::{{closure}} (23,510 samples, 11.16%)</title><rect x="22.7103%" y="597" width="11.1612%" height="15" fill="rgb(241,108,4)" fg:x="47837" fg:w="23510"/><text x="22.9603%" y="607.50">hprof_slurp::par..</text></g><g><title>asm_sysvec_apic_timer_interrupt (27 samples, 0.01%)</title><rect x="33.8587%" y="581" width="0.0128%" height="15" fill="rgb(247,173,49)" fg:x="71320" fg:w="27"/><text x="34.1087%" y="591.50"></text></g><g><title>sysvec_apic_timer_interrupt (27 samples, 0.01%)</title><rect x="33.8587%" y="565" width="0.0128%" height="15" fill="rgb(224,114,35)" fg:x="71320" fg:w="27"/><text x="34.1087%" y="575.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u8 (1,659 samples, 0.79%)</title><rect x="34.2176%" y="549" width="0.7876%" height="15" fill="rgb(245,159,27)" fg:x="72076" fg:w="1659"/><text x="34.4676%" y="559.50"></text></g><g><title>nom::number::streaming::be_u8 (1,659 samples, 0.79%)</title><rect x="34.2176%" y="533" width="0.7876%" height="15" fill="rgb(245,172,44)" fg:x="72076" fg:w="1659"/><text x="34.4676%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,655 samples, 0.79%)</title><rect x="34.2195%" y="517" width="0.7857%" height="15" fill="rgb(236,23,11)" fg:x="72080" fg:w="1655"/><text x="34.4695%" y="527.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1,655 samples, 0.79%)</title><rect x="34.2195%" y="501" width="0.7857%" height="15" fill="rgb(205,117,38)" fg:x="72080" fg:w="1655"/><text x="34.4695%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (670 samples, 0.32%)</title><rect x="41.2823%" y="485" width="0.3181%" height="15" fill="rgb(237,72,25)" fg:x="86957" fg:w="670"/><text x="41.5323%" y="495.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (670 samples, 0.32%)</title><rect x="41.2823%" y="469" width="0.3181%" height="15" fill="rgb(244,70,9)" fg:x="86957" fg:w="670"/><text x="41.5323%" y="479.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (670 samples, 0.32%)</title><rect x="41.2823%" y="453" width="0.3181%" height="15" fill="rgb(217,125,39)" fg:x="86957" fg:w="670"/><text x="41.5323%" y="463.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,857 samples, 0.88%)</title><rect x="40.7207%" y="501" width="0.8816%" height="15" fill="rgb(235,36,10)" fg:x="85774" fg:w="1857"/><text x="40.9707%" y="511.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (1,561 samples, 0.74%)</title><rect x="43.1466%" y="437" width="0.7411%" height="15" fill="rgb(251,123,47)" fg:x="90884" fg:w="1561"/><text x="43.3966%" y="447.50"></text></g><g><title>nom::number::streaming::be_u32 (1,561 samples, 0.74%)</title><rect x="43.1466%" y="421" width="0.7411%" height="15" fill="rgb(221,13,13)" fg:x="90884" fg:w="1561"/><text x="43.3966%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5,795 samples, 2.75%)</title><rect x="43.1466%" y="469" width="2.7511%" height="15" fill="rgb(238,131,9)" fg:x="90884" fg:w="5795"/><text x="43.3966%" y="479.50">&lt;F..</text></g><g><title>core::ops::function::FnMut::call_mut (5,795 samples, 2.75%)</title><rect x="43.1466%" y="453" width="2.7511%" height="15" fill="rgb(211,50,8)" fg:x="90884" fg:w="5795"/><text x="43.3966%" y="463.50">co..</text></g><g><title>hprof_slurp::parser::record_parser::parse_id (4,234 samples, 2.01%)</title><rect x="43.8877%" y="437" width="2.0101%" height="15" fill="rgb(245,182,24)" fg:x="92445" fg:w="4234"/><text x="44.1377%" y="447.50">h..</text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (4,234 samples, 2.01%)</title><rect x="43.8877%" y="421" width="2.0101%" height="15" fill="rgb(242,14,37)" fg:x="92445" fg:w="4234"/><text x="44.1377%" y="431.50">h..</text></g><g><title>nom::number::streaming::be_u64 (4,234 samples, 2.01%)</title><rect x="43.8877%" y="405" width="2.0101%" height="15" fill="rgb(246,228,12)" fg:x="92445" fg:w="4234"/><text x="44.1377%" y="415.50">n..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (9,061 samples, 4.30%)</title><rect x="41.6023%" y="485" width="4.3017%" height="15" fill="rgb(213,55,15)" fg:x="87631" fg:w="9061"/><text x="41.8523%" y="495.50">&lt;(FnA..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (10,919 samples, 5.18%)</title><rect x="40.7207%" y="517" width="5.1837%" height="15" fill="rgb(209,9,3)" fg:x="85774" fg:w="10919"/><text x="40.9707%" y="527.50">&lt;F as ..</text></g><g><title>nom::sequence::tuple::{{closure}} (9,062 samples, 4.30%)</title><rect x="41.6023%" y="501" width="4.3021%" height="15" fill="rgb(230,59,30)" fg:x="87631" fg:w="9062"/><text x="41.8523%" y="511.50">nom::..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (619 samples, 0.29%)</title><rect x="45.9044%" y="517" width="0.2939%" height="15" fill="rgb(209,121,21)" fg:x="96693" fg:w="619"/><text x="46.1544%" y="527.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (23,592 samples, 11.20%)</title><rect x="35.0076%" y="549" width="11.2002%" height="15" fill="rgb(220,109,13)" fg:x="73740" fg:w="23592"/><text x="35.2576%" y="559.50">hprof_slurp::par..</text></g><g><title>nom::combinator::flat_map::{{closure}} (21,780 samples, 10.34%)</title><rect x="35.8678%" y="533" width="10.3399%" height="15" fill="rgb(232,18,1)" fg:x="75552" fg:w="21780"/><text x="36.1178%" y="543.50">nom::combinator..</text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (102 samples, 0.05%)</title><rect x="46.6986%" y="373" width="0.0484%" height="15" fill="rgb(215,41,42)" fg:x="98366" fg:w="102"/><text x="46.9486%" y="383.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (102 samples, 0.05%)</title><rect x="46.6986%" y="357" width="0.0484%" height="15" fill="rgb(224,123,36)" fg:x="98366" fg:w="102"/><text x="46.9486%" y="367.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (102 samples, 0.05%)</title><rect x="46.6986%" y="341" width="0.0484%" height="15" fill="rgb(240,125,3)" fg:x="98366" fg:w="102"/><text x="46.9486%" y="351.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (102 samples, 0.05%)</title><rect x="46.6986%" y="325" width="0.0484%" height="15" fill="rgb(205,98,50)" fg:x="98366" fg:w="102"/><text x="46.9486%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (102 samples, 0.05%)</title><rect x="46.6986%" y="309" width="0.0484%" height="15" fill="rgb(205,185,37)" fg:x="98366" fg:w="102"/><text x="46.9486%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (355 samples, 0.17%)</title><rect x="46.7471%" y="373" width="0.1685%" height="15" fill="rgb(238,207,15)" fg:x="98468" fg:w="355"/><text x="46.9971%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (355 samples, 0.17%)</title><rect x="46.7471%" y="357" width="0.1685%" height="15" fill="rgb(213,199,42)" fg:x="98468" fg:w="355"/><text x="46.9971%" y="367.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (355 samples, 0.17%)</title><rect x="46.7471%" y="341" width="0.1685%" height="15" fill="rgb(235,201,11)" fg:x="98468" fg:w="355"/><text x="46.9971%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,268 samples, 0.60%)</title><rect x="46.3141%" y="453" width="0.6020%" height="15" fill="rgb(207,46,11)" fg:x="97556" fg:w="1268"/><text x="46.5641%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,268 samples, 0.60%)</title><rect x="46.3141%" y="437" width="0.6020%" height="15" fill="rgb(241,35,35)" fg:x="97556" fg:w="1268"/><text x="46.5641%" y="447.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (1,268 samples, 0.60%)</title><rect x="46.3141%" y="421" width="0.6020%" height="15" fill="rgb(243,32,47)" fg:x="97556" fg:w="1268"/><text x="46.5641%" y="431.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (1,148 samples, 0.55%)</title><rect x="46.3711%" y="405" width="0.5450%" height="15" fill="rgb(247,202,23)" fg:x="97676" fg:w="1148"/><text x="46.6211%" y="415.50"></text></g><g><title>nom::number::streaming::be_u64 (1,125 samples, 0.53%)</title><rect x="46.3820%" y="389" width="0.5341%" height="15" fill="rgb(219,102,11)" fg:x="97699" fg:w="1125"/><text x="46.6320%" y="399.50"></text></g><g><title>clear_page_erms (89 samples, 0.04%)</title><rect x="47.1686%" y="261" width="0.0423%" height="15" fill="rgb(243,110,44)" fg:x="99356" fg:w="89"/><text x="47.4186%" y="271.50"></text></g><g><title>get_page_from_freelist (134 samples, 0.06%)</title><rect x="47.1634%" y="277" width="0.0636%" height="15" fill="rgb(222,74,54)" fg:x="99345" fg:w="134"/><text x="47.4134%" y="287.50"></text></g><g><title>rmqueue (33 samples, 0.02%)</title><rect x="47.2114%" y="261" width="0.0157%" height="15" fill="rgb(216,99,12)" fg:x="99446" fg:w="33"/><text x="47.4614%" y="271.50"></text></g><g><title>rmqueue_bulk.constprop.0 (26 samples, 0.01%)</title><rect x="47.2147%" y="245" width="0.0123%" height="15" fill="rgb(226,22,26)" fg:x="99453" fg:w="26"/><text x="47.4647%" y="255.50"></text></g><g><title>__alloc_pages (145 samples, 0.07%)</title><rect x="47.1596%" y="293" width="0.0688%" height="15" fill="rgb(217,163,10)" fg:x="99337" fg:w="145"/><text x="47.4096%" y="303.50"></text></g><g><title>alloc_pages_vma (149 samples, 0.07%)</title><rect x="47.1591%" y="309" width="0.0707%" height="15" fill="rgb(213,25,53)" fg:x="99336" fg:w="149"/><text x="47.4091%" y="319.50"></text></g><g><title>__pagevec_lru_add_fn (28 samples, 0.01%)</title><rect x="47.2370%" y="261" width="0.0133%" height="15" fill="rgb(252,105,26)" fg:x="99500" fg:w="28"/><text x="47.4870%" y="271.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (47 samples, 0.02%)</title><rect x="47.2327%" y="309" width="0.0223%" height="15" fill="rgb(220,39,43)" fg:x="99491" fg:w="47"/><text x="47.4827%" y="319.50"></text></g><g><title>lru_cache_add (44 samples, 0.02%)</title><rect x="47.2341%" y="293" width="0.0209%" height="15" fill="rgb(229,68,48)" fg:x="99494" fg:w="44"/><text x="47.4841%" y="303.50"></text></g><g><title>__pagevec_lru_add (38 samples, 0.02%)</title><rect x="47.2370%" y="277" width="0.0180%" height="15" fill="rgb(252,8,32)" fg:x="99500" fg:w="38"/><text x="47.4870%" y="287.50"></text></g><g><title>__mem_cgroup_charge (38 samples, 0.02%)</title><rect x="47.2560%" y="293" width="0.0180%" height="15" fill="rgb(223,20,43)" fg:x="99540" fg:w="38"/><text x="47.5060%" y="303.50"></text></g><g><title>mem_cgroup_charge (53 samples, 0.03%)</title><rect x="47.2550%" y="309" width="0.0252%" height="15" fill="rgb(229,81,49)" fg:x="99538" fg:w="53"/><text x="47.5050%" y="319.50"></text></g><g><title>do_anonymous_page (289 samples, 0.14%)</title><rect x="47.1515%" y="325" width="0.1372%" height="15" fill="rgb(236,28,36)" fg:x="99320" fg:w="289"/><text x="47.4015%" y="335.50"></text></g><g><title>handle_pte_fault (299 samples, 0.14%)</title><rect x="47.1496%" y="341" width="0.1419%" height="15" fill="rgb(249,185,26)" fg:x="99316" fg:w="299"/><text x="47.3996%" y="351.50"></text></g><g><title>__handle_mm_fault (321 samples, 0.15%)</title><rect x="47.1401%" y="357" width="0.1524%" height="15" fill="rgb(249,174,33)" fg:x="99296" fg:w="321"/><text x="47.3901%" y="367.50"></text></g><g><title>handle_mm_fault (328 samples, 0.16%)</title><rect x="47.1373%" y="373" width="0.1557%" height="15" fill="rgb(233,201,37)" fg:x="99290" fg:w="328"/><text x="47.3873%" y="383.50"></text></g><g><title>do_user_addr_fault (352 samples, 0.17%)</title><rect x="47.1288%" y="389" width="0.1671%" height="15" fill="rgb(221,78,26)" fg:x="99272" fg:w="352"/><text x="47.3788%" y="399.50"></text></g><g><title>asm_exc_page_fault (371 samples, 0.18%)</title><rect x="47.1235%" y="421" width="0.1761%" height="15" fill="rgb(250,127,30)" fg:x="99261" fg:w="371"/><text x="47.3735%" y="431.50"></text></g><g><title>exc_page_fault (363 samples, 0.17%)</title><rect x="47.1273%" y="405" width="0.1723%" height="15" fill="rgb(230,49,44)" fg:x="99269" fg:w="363"/><text x="47.3773%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (855 samples, 0.41%)</title><rect x="46.9161%" y="453" width="0.4059%" height="15" fill="rgb(229,67,23)" fg:x="98824" fg:w="855"/><text x="47.1661%" y="463.50"></text></g><g><title>core::ptr::write (697 samples, 0.33%)</title><rect x="46.9911%" y="437" width="0.3309%" height="15" fill="rgb(249,83,47)" fg:x="98982" fg:w="697"/><text x="47.2411%" y="447.50"></text></g><g><title>sync_regs (38 samples, 0.02%)</title><rect x="47.3039%" y="421" width="0.0180%" height="15" fill="rgb(215,43,3)" fg:x="99641" fg:w="38"/><text x="47.5539%" y="431.50"></text></g><g><title>do_futex (25 samples, 0.01%)</title><rect x="47.4568%" y="261" width="0.0119%" height="15" fill="rgb(238,154,13)" fg:x="99963" fg:w="25"/><text x="47.7068%" y="271.50"></text></g><g><title>futex_wake (23 samples, 0.01%)</title><rect x="47.4577%" y="245" width="0.0109%" height="15" fill="rgb(219,56,2)" fg:x="99965" fg:w="23"/><text x="47.7077%" y="255.50"></text></g><g><title>__x64_sys_futex (26 samples, 0.01%)</title><rect x="47.4568%" y="277" width="0.0123%" height="15" fill="rgb(233,0,4)" fg:x="99963" fg:w="26"/><text x="47.7068%" y="287.50"></text></g><g><title>__GI___lll_lock_wake_private (30 samples, 0.01%)</title><rect x="47.4563%" y="325" width="0.0142%" height="15" fill="rgb(235,30,7)" fg:x="99962" fg:w="30"/><text x="47.7063%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (29 samples, 0.01%)</title><rect x="47.4568%" y="309" width="0.0138%" height="15" fill="rgb(250,79,13)" fg:x="99963" fg:w="29"/><text x="47.7068%" y="319.50"></text></g><g><title>do_syscall_64 (29 samples, 0.01%)</title><rect x="47.4568%" y="293" width="0.0138%" height="15" fill="rgb(211,146,34)" fg:x="99963" fg:w="29"/><text x="47.7068%" y="303.50"></text></g><g><title>malloc_consolidate (387 samples, 0.18%)</title><rect x="47.8475%" y="309" width="0.1837%" height="15" fill="rgb(228,22,38)" fg:x="100786" fg:w="387"/><text x="48.0975%" y="319.50"></text></g><g><title>unlink_chunk.constprop.0 (81 samples, 0.04%)</title><rect x="47.9928%" y="293" width="0.0385%" height="15" fill="rgb(235,168,5)" fg:x="101092" fg:w="81"/><text x="48.2428%" y="303.50"></text></g><g><title>__GI___libc_malloc (1,533 samples, 0.73%)</title><rect x="47.3262%" y="341" width="0.7278%" height="15" fill="rgb(221,155,16)" fg:x="99688" fg:w="1533"/><text x="47.5762%" y="351.50"></text></g><g><title>_int_malloc (1,229 samples, 0.58%)</title><rect x="47.4706%" y="325" width="0.5835%" height="15" fill="rgb(215,215,53)" fg:x="99992" fg:w="1229"/><text x="47.7206%" y="335.50"></text></g><g><title>unlink_chunk.constprop.0 (46 samples, 0.02%)</title><rect x="48.0322%" y="309" width="0.0218%" height="15" fill="rgb(223,4,10)" fg:x="101175" fg:w="46"/><text x="48.2822%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,548 samples, 0.73%)</title><rect x="47.3253%" y="389" width="0.7349%" height="15" fill="rgb(234,103,6)" fg:x="99686" fg:w="1548"/><text x="47.5753%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,548 samples, 0.73%)</title><rect x="47.3253%" y="373" width="0.7349%" height="15" fill="rgb(227,97,0)" fg:x="99686" fg:w="1548"/><text x="47.5753%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1,548 samples, 0.73%)</title><rect x="47.3253%" y="357" width="0.7349%" height="15" fill="rgb(234,150,53)" fg:x="99686" fg:w="1548"/><text x="47.5753%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,562 samples, 0.74%)</title><rect x="47.3220%" y="453" width="0.7415%" height="15" fill="rgb(228,201,54)" fg:x="99679" fg:w="1562"/><text x="47.5720%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,562 samples, 0.74%)</title><rect x="47.3220%" y="437" width="0.7415%" height="15" fill="rgb(222,22,37)" fg:x="99679" fg:w="1562"/><text x="47.5720%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,558 samples, 0.74%)</title><rect x="47.3239%" y="421" width="0.7397%" height="15" fill="rgb(237,53,32)" fg:x="99683" fg:w="1558"/><text x="47.5739%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,558 samples, 0.74%)</title><rect x="47.3239%" y="405" width="0.7397%" height="15" fill="rgb(233,25,53)" fg:x="99683" fg:w="1558"/><text x="47.5739%" y="415.50"></text></g><g><title>free_unref_page_list (27 samples, 0.01%)</title><rect x="48.0925%" y="117" width="0.0128%" height="15" fill="rgb(210,40,34)" fg:x="101302" fg:w="27"/><text x="48.3425%" y="127.50"></text></g><g><title>free_unref_page_commit (26 samples, 0.01%)</title><rect x="48.0930%" y="101" width="0.0123%" height="15" fill="rgb(241,220,44)" fg:x="101303" fg:w="26"/><text x="48.3430%" y="111.50"></text></g><g><title>free_pcppages_bulk (24 samples, 0.01%)</title><rect x="48.0939%" y="85" width="0.0114%" height="15" fill="rgb(235,28,35)" fg:x="101305" fg:w="24"/><text x="48.3439%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (82 samples, 0.04%)</title><rect x="48.0673%" y="453" width="0.0389%" height="15" fill="rgb(210,56,17)" fg:x="101249" fg:w="82"/><text x="48.3173%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (82 samples, 0.04%)</title><rect x="48.0673%" y="437" width="0.0389%" height="15" fill="rgb(224,130,29)" fg:x="101249" fg:w="82"/><text x="48.3173%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (82 samples, 0.04%)</title><rect x="48.0673%" y="421" width="0.0389%" height="15" fill="rgb(235,212,8)" fg:x="101249" fg:w="82"/><text x="48.3173%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (82 samples, 0.04%)</title><rect x="48.0673%" y="405" width="0.0389%" height="15" fill="rgb(223,33,50)" fg:x="101249" fg:w="82"/><text x="48.3173%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (82 samples, 0.04%)</title><rect x="48.0673%" y="389" width="0.0389%" height="15" fill="rgb(219,149,13)" fg:x="101249" fg:w="82"/><text x="48.3173%" y="399.50"></text></g><g><title>__free (82 samples, 0.04%)</title><rect x="48.0673%" y="373" width="0.0389%" height="15" fill="rgb(250,156,29)" fg:x="101249" fg:w="82"/><text x="48.3173%" y="383.50"></text></g><g><title>__GI___munmap (82 samples, 0.04%)</title><rect x="48.0673%" y="357" width="0.0389%" height="15" fill="rgb(216,193,19)" fg:x="101249" fg:w="82"/><text x="48.3173%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (82 samples, 0.04%)</title><rect x="48.0673%" y="341" width="0.0389%" height="15" fill="rgb(216,135,14)" fg:x="101249" fg:w="82"/><text x="48.3173%" y="351.50"></text></g><g><title>do_syscall_64 (82 samples, 0.04%)</title><rect x="48.0673%" y="325" width="0.0389%" height="15" fill="rgb(241,47,5)" fg:x="101249" fg:w="82"/><text x="48.3173%" y="335.50"></text></g><g><title>__x64_sys_munmap (82 samples, 0.04%)</title><rect x="48.0673%" y="309" width="0.0389%" height="15" fill="rgb(233,42,35)" fg:x="101249" fg:w="82"/><text x="48.3173%" y="319.50"></text></g><g><title>__vm_munmap (82 samples, 0.04%)</title><rect x="48.0673%" y="293" width="0.0389%" height="15" fill="rgb(231,13,6)" fg:x="101249" fg:w="82"/><text x="48.3173%" y="303.50"></text></g><g><title>__do_munmap (82 samples, 0.04%)</title><rect x="48.0673%" y="277" width="0.0389%" height="15" fill="rgb(207,181,40)" fg:x="101249" fg:w="82"/><text x="48.3173%" y="287.50"></text></g><g><title>unmap_region (82 samples, 0.04%)</title><rect x="48.0673%" y="261" width="0.0389%" height="15" fill="rgb(254,173,49)" fg:x="101249" fg:w="82"/><text x="48.3173%" y="271.50"></text></g><g><title>unmap_vmas (77 samples, 0.04%)</title><rect x="48.0697%" y="245" width="0.0366%" height="15" fill="rgb(221,1,38)" fg:x="101254" fg:w="77"/><text x="48.3197%" y="255.50"></text></g><g><title>unmap_single_vma (77 samples, 0.04%)</title><rect x="48.0697%" y="229" width="0.0366%" height="15" fill="rgb(206,124,46)" fg:x="101254" fg:w="77"/><text x="48.3197%" y="239.50"></text></g><g><title>unmap_page_range (77 samples, 0.04%)</title><rect x="48.0697%" y="213" width="0.0366%" height="15" fill="rgb(249,21,11)" fg:x="101254" fg:w="77"/><text x="48.3197%" y="223.50"></text></g><g><title>zap_pmd_range.isra.0 (77 samples, 0.04%)</title><rect x="48.0697%" y="197" width="0.0366%" height="15" fill="rgb(222,201,40)" fg:x="101254" fg:w="77"/><text x="48.3197%" y="207.50"></text></g><g><title>zap_pte_range (77 samples, 0.04%)</title><rect x="48.0697%" y="181" width="0.0366%" height="15" fill="rgb(235,61,29)" fg:x="101254" fg:w="77"/><text x="48.3197%" y="191.50"></text></g><g><title>tlb_flush_mmu (38 samples, 0.02%)</title><rect x="48.0882%" y="165" width="0.0180%" height="15" fill="rgb(219,207,3)" fg:x="101293" fg:w="38"/><text x="48.3382%" y="175.50"></text></g><g><title>free_pages_and_swap_cache (38 samples, 0.02%)</title><rect x="48.0882%" y="149" width="0.0180%" height="15" fill="rgb(222,56,46)" fg:x="101293" fg:w="38"/><text x="48.3382%" y="159.50"></text></g><g><title>release_pages (32 samples, 0.02%)</title><rect x="48.0911%" y="133" width="0.0152%" height="15" fill="rgb(239,76,54)" fg:x="101299" fg:w="32"/><text x="48.3411%" y="143.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,984 samples, 1.89%)</title><rect x="46.2153%" y="485" width="1.8914%" height="15" fill="rgb(231,124,27)" fg:x="97348" fg:w="3984"/><text x="46.4653%" y="495.50">&lt;..</text></g><g><title>nom::multi::count::{{closure}} (3,979 samples, 1.89%)</title><rect x="46.2177%" y="469" width="1.8890%" height="15" fill="rgb(249,195,6)" fg:x="97353" fg:w="3979"/><text x="46.4677%" y="479.50">n..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (74 samples, 0.04%)</title><rect x="48.1067%" y="485" width="0.0351%" height="15" fill="rgb(237,174,47)" fg:x="101332" fg:w="74"/><text x="48.3567%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (4,072 samples, 1.93%)</title><rect x="46.2101%" y="501" width="1.9332%" height="15" fill="rgb(206,201,31)" fg:x="97337" fg:w="4072"/><text x="46.4601%" y="511.50">n..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,116 samples, 1.95%)</title><rect x="46.2101%" y="517" width="1.9540%" height="15" fill="rgb(231,57,52)" fg:x="97337" fg:w="4116"/><text x="46.4601%" y="527.50">&lt;..</text></g><g><title>nom::sequence::tuple::{{closure}} (44 samples, 0.02%)</title><rect x="48.1433%" y="501" width="0.0209%" height="15" fill="rgb(248,177,22)" fg:x="101409" fg:w="44"/><text x="48.3933%" y="511.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (44 samples, 0.02%)</title><rect x="48.1433%" y="485" width="0.0209%" height="15" fill="rgb(215,211,37)" fg:x="101409" fg:w="44"/><text x="48.3933%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (29 samples, 0.01%)</title><rect x="48.1504%" y="469" width="0.0138%" height="15" fill="rgb(241,128,51)" fg:x="101424" fg:w="29"/><text x="48.4004%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (29 samples, 0.01%)</title><rect x="48.1504%" y="453" width="0.0138%" height="15" fill="rgb(227,165,31)" fg:x="101424" fg:w="29"/><text x="48.4004%" y="463.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_object_array_dump (4,137 samples, 1.96%)</title><rect x="46.2077%" y="549" width="1.9640%" height="15" fill="rgb(228,167,24)" fg:x="97332" fg:w="4137"/><text x="46.4577%" y="559.50">h..</text></g><g><title>nom::combinator::flat_map::{{closure}} (4,132 samples, 1.96%)</title><rect x="46.2101%" y="533" width="1.9616%" height="15" fill="rgb(228,143,12)" fg:x="97337" fg:w="4132"/><text x="46.4601%" y="543.50">n..</text></g><g><title>core::result::Result&lt;T,E&gt;::map (119 samples, 0.06%)</title><rect x="48.2059%" y="501" width="0.0565%" height="15" fill="rgb(249,149,8)" fg:x="101541" fg:w="119"/><text x="48.4559%" y="511.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_i32 (102 samples, 0.05%)</title><rect x="48.3099%" y="421" width="0.0484%" height="15" fill="rgb(243,35,44)" fg:x="101760" fg:w="102"/><text x="48.5599%" y="431.50"></text></g><g><title>nom::number::streaming::be_i32 (102 samples, 0.05%)</title><rect x="48.3099%" y="405" width="0.0484%" height="15" fill="rgb(246,89,9)" fg:x="101760" fg:w="102"/><text x="48.5599%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (102 samples, 0.05%)</title><rect x="48.3099%" y="389" width="0.0484%" height="15" fill="rgb(233,213,13)" fg:x="101760" fg:w="102"/><text x="48.5599%" y="399.50"></text></g><g><title>nom::combinator::map::{{closure}} (102 samples, 0.05%)</title><rect x="48.3099%" y="373" width="0.0484%" height="15" fill="rgb(233,141,41)" fg:x="101760" fg:w="102"/><text x="48.5599%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (102 samples, 0.05%)</title><rect x="48.3099%" y="357" width="0.0484%" height="15" fill="rgb(239,167,4)" fg:x="101760" fg:w="102"/><text x="48.5599%" y="367.50"></text></g><g><title>nom::number::streaming::be_i32::{{closure}} (102 samples, 0.05%)</title><rect x="48.3099%" y="341" width="0.0484%" height="15" fill="rgb(209,217,16)" fg:x="101760" fg:w="102"/><text x="48.5599%" y="351.50"></text></g><g><title>nom::number::streaming::be_u32 (102 samples, 0.05%)</title><rect x="48.3099%" y="325" width="0.0484%" height="15" fill="rgb(219,88,35)" fg:x="101760" fg:w="102"/><text x="48.5599%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.02%)</title><rect x="48.3336%" y="309" width="0.0247%" height="15" fill="rgb(220,193,23)" fg:x="101810" fg:w="52"/><text x="48.5836%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.02%)</title><rect x="48.3336%" y="293" width="0.0247%" height="15" fill="rgb(230,90,52)" fg:x="101810" fg:w="52"/><text x="48.5836%" y="303.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (43 samples, 0.02%)</title><rect x="48.3379%" y="277" width="0.0204%" height="15" fill="rgb(252,106,19)" fg:x="101819" fg:w="43"/><text x="48.5879%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (100 samples, 0.05%)</title><rect x="48.4300%" y="309" width="0.0475%" height="15" fill="rgb(206,74,20)" fg:x="102013" fg:w="100"/><text x="48.6800%" y="319.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (100 samples, 0.05%)</title><rect x="48.4300%" y="293" width="0.0475%" height="15" fill="rgb(230,138,44)" fg:x="102013" fg:w="100"/><text x="48.6800%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (358 samples, 0.17%)</title><rect x="48.3099%" y="453" width="0.1700%" height="15" fill="rgb(235,182,43)" fg:x="101760" fg:w="358"/><text x="48.5599%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (358 samples, 0.17%)</title><rect x="48.3099%" y="437" width="0.1700%" height="15" fill="rgb(242,16,51)" fg:x="101760" fg:w="358"/><text x="48.5599%" y="447.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_i8 (248 samples, 0.12%)</title><rect x="48.3621%" y="421" width="0.1177%" height="15" fill="rgb(248,9,4)" fg:x="101870" fg:w="248"/><text x="48.6121%" y="431.50"></text></g><g><title>nom::number::streaming::be_i8 (248 samples, 0.12%)</title><rect x="48.3621%" y="405" width="0.1177%" height="15" fill="rgb(210,31,22)" fg:x="101870" fg:w="248"/><text x="48.6121%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (248 samples, 0.12%)</title><rect x="48.3621%" y="389" width="0.1177%" height="15" fill="rgb(239,54,39)" fg:x="101870" fg:w="248"/><text x="48.6121%" y="399.50"></text></g><g><title>nom::combinator::map::{{closure}} (248 samples, 0.12%)</title><rect x="48.3621%" y="373" width="0.1177%" height="15" fill="rgb(230,99,41)" fg:x="101870" fg:w="248"/><text x="48.6121%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (248 samples, 0.12%)</title><rect x="48.3621%" y="357" width="0.1177%" height="15" fill="rgb(253,106,12)" fg:x="101870" fg:w="248"/><text x="48.6121%" y="367.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (248 samples, 0.12%)</title><rect x="48.3621%" y="341" width="0.1177%" height="15" fill="rgb(213,46,41)" fg:x="101870" fg:w="248"/><text x="48.6121%" y="351.50"></text></g><g><title>nom::number::streaming::be_u8 (248 samples, 0.12%)</title><rect x="48.3621%" y="325" width="0.1177%" height="15" fill="rgb(215,133,35)" fg:x="101870" fg:w="248"/><text x="48.6121%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (130 samples, 0.06%)</title><rect x="48.7704%" y="437" width="0.0617%" height="15" fill="rgb(213,28,5)" fg:x="102730" fg:w="130"/><text x="49.0204%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,266 samples, 0.60%)</title><rect x="48.4799%" y="453" width="0.6010%" height="15" fill="rgb(215,77,49)" fg:x="102118" fg:w="1266"/><text x="48.7299%" y="463.50"></text></g><g><title>core::ptr::write (521 samples, 0.25%)</title><rect x="48.8336%" y="437" width="0.2473%" height="15" fill="rgb(248,100,22)" fg:x="102863" fg:w="521"/><text x="49.0836%" y="447.50"></text></g><g><title>__GI___lll_lock_wait_private (24 samples, 0.01%)</title><rect x="49.4930%" y="325" width="0.0114%" height="15" fill="rgb(208,67,9)" fg:x="104252" fg:w="24"/><text x="49.7430%" y="335.50"></text></g><g><title>do_futex (25 samples, 0.01%)</title><rect x="49.5058%" y="261" width="0.0119%" height="15" fill="rgb(219,133,21)" fg:x="104279" fg:w="25"/><text x="49.7558%" y="271.50"></text></g><g><title>futex_wake (22 samples, 0.01%)</title><rect x="49.5072%" y="245" width="0.0104%" height="15" fill="rgb(246,46,29)" fg:x="104282" fg:w="22"/><text x="49.7572%" y="255.50"></text></g><g><title>__x64_sys_futex (26 samples, 0.01%)</title><rect x="49.5058%" y="277" width="0.0123%" height="15" fill="rgb(246,185,52)" fg:x="104279" fg:w="26"/><text x="49.7558%" y="287.50"></text></g><g><title>do_syscall_64 (28 samples, 0.01%)</title><rect x="49.5058%" y="293" width="0.0133%" height="15" fill="rgb(252,136,11)" fg:x="104279" fg:w="28"/><text x="49.7558%" y="303.50"></text></g><g><title>__GI___lll_lock_wake_private (32 samples, 0.02%)</title><rect x="49.5044%" y="325" width="0.0152%" height="15" fill="rgb(219,138,53)" fg:x="104276" fg:w="32"/><text x="49.7544%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.01%)</title><rect x="49.5053%" y="309" width="0.0142%" height="15" fill="rgb(211,51,23)" fg:x="104278" fg:w="30"/><text x="49.7553%" y="319.50"></text></g><g><title>malloc_consolidate (270 samples, 0.13%)</title><rect x="50.2492%" y="309" width="0.1282%" height="15" fill="rgb(247,221,28)" fg:x="105845" fg:w="270"/><text x="50.4992%" y="319.50"></text></g><g><title>unlink_chunk.constprop.0 (67 samples, 0.03%)</title><rect x="50.3456%" y="293" width="0.0318%" height="15" fill="rgb(251,222,45)" fg:x="106048" fg:w="67"/><text x="50.5956%" y="303.50"></text></g><g><title>_int_malloc (1,961 samples, 0.93%)</title><rect x="49.5196%" y="325" width="0.9310%" height="15" fill="rgb(217,162,53)" fg:x="104308" fg:w="1961"/><text x="49.7696%" y="335.50"></text></g><g><title>unlink_chunk.constprop.0 (151 samples, 0.07%)</title><rect x="50.3788%" y="309" width="0.0717%" height="15" fill="rgb(229,93,14)" fg:x="106118" fg:w="151"/><text x="50.6288%" y="319.50"></text></g><g><title>__GI___libc_malloc (2,843 samples, 1.35%)</title><rect x="49.1023%" y="341" width="1.3497%" height="15" fill="rgb(209,67,49)" fg:x="103429" fg:w="2843"/><text x="49.3523%" y="351.50"></text></g><g><title>__rdl_alloc (25 samples, 0.01%)</title><rect x="50.4520%" y="341" width="0.0119%" height="15" fill="rgb(213,87,29)" fg:x="106272" fg:w="25"/><text x="50.7020%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (25 samples, 0.01%)</title><rect x="50.4520%" y="325" width="0.0119%" height="15" fill="rgb(205,151,52)" fg:x="106272" fg:w="25"/><text x="50.7020%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,897 samples, 1.38%)</title><rect x="49.0956%" y="389" width="1.3753%" height="15" fill="rgb(253,215,39)" fg:x="103415" fg:w="2897"/><text x="49.3456%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,897 samples, 1.38%)</title><rect x="49.0956%" y="373" width="1.3753%" height="15" fill="rgb(221,220,41)" fg:x="103415" fg:w="2897"/><text x="49.3456%" y="383.50"></text></g><g><title>alloc::alloc::alloc (2,887 samples, 1.37%)</title><rect x="49.1004%" y="357" width="1.3706%" height="15" fill="rgb(218,133,21)" fg:x="103425" fg:w="2887"/><text x="49.3504%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,932 samples, 1.39%)</title><rect x="49.0809%" y="453" width="1.3919%" height="15" fill="rgb(221,193,43)" fg:x="103384" fg:w="2932"/><text x="49.3309%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,932 samples, 1.39%)</title><rect x="49.0809%" y="437" width="1.3919%" height="15" fill="rgb(240,128,52)" fg:x="103384" fg:w="2932"/><text x="49.3309%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,918 samples, 1.39%)</title><rect x="49.0875%" y="421" width="1.3853%" height="15" fill="rgb(253,114,12)" fg:x="103398" fg:w="2918"/><text x="49.3375%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,918 samples, 1.39%)</title><rect x="49.0875%" y="405" width="1.3853%" height="15" fill="rgb(215,223,47)" fg:x="103398" fg:w="2918"/><text x="49.3375%" y="415.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (43 samples, 0.02%)</title><rect x="50.4738%" y="421" width="0.0204%" height="15" fill="rgb(248,225,23)" fg:x="106318" fg:w="43"/><text x="50.7238%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (43 samples, 0.02%)</title><rect x="50.4738%" y="405" width="0.0204%" height="15" fill="rgb(250,108,0)" fg:x="106318" fg:w="43"/><text x="50.7238%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,801 samples, 2.28%)</title><rect x="48.2667%" y="485" width="2.2792%" height="15" fill="rgb(228,208,7)" fg:x="101669" fg:w="4801"/><text x="48.5167%" y="495.50">&lt;..</text></g><g><title>nom::multi::count::{{closure}} (4,784 samples, 2.27%)</title><rect x="48.2748%" y="469" width="2.2712%" height="15" fill="rgb(244,45,10)" fg:x="101686" fg:w="4784"/><text x="48.5248%" y="479.50">n..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (154 samples, 0.07%)</title><rect x="50.4728%" y="453" width="0.0731%" height="15" fill="rgb(207,125,25)" fg:x="106316" fg:w="154"/><text x="50.7228%" y="463.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (154 samples, 0.07%)</title><rect x="50.4728%" y="437" width="0.0731%" height="15" fill="rgb(210,195,18)" fg:x="106316" fg:w="154"/><text x="50.7228%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (109 samples, 0.05%)</title><rect x="50.4942%" y="421" width="0.0517%" height="15" fill="rgb(249,80,12)" fg:x="106361" fg:w="109"/><text x="50.7442%" y="431.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (5,038 samples, 2.39%)</title><rect x="48.1765%" y="533" width="2.3918%" height="15" fill="rgb(221,65,9)" fg:x="101479" fg:w="5038"/><text x="48.4265%" y="543.50">co..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump::{{closure}} (5,034 samples, 2.39%)</title><rect x="48.1784%" y="517" width="2.3899%" height="15" fill="rgb(235,49,36)" fg:x="101483" fg:w="5034"/><text x="48.4284%" y="527.50">hp..</text></g><g><title>nom::combinator::map::{{closure}} (4,857 samples, 2.31%)</title><rect x="48.2624%" y="501" width="2.3058%" height="15" fill="rgb(225,32,20)" fg:x="101660" fg:w="4857"/><text x="48.5124%" y="511.50">n..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (47 samples, 0.02%)</title><rect x="50.5460%" y="485" width="0.0223%" height="15" fill="rgb(215,141,46)" fg:x="106470" fg:w="47"/><text x="50.7960%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (45 samples, 0.02%)</title><rect x="50.5773%" y="437" width="0.0214%" height="15" fill="rgb(250,160,47)" fg:x="106536" fg:w="45"/><text x="50.8273%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (45 samples, 0.02%)</title><rect x="50.5773%" y="421" width="0.0214%" height="15" fill="rgb(216,222,40)" fg:x="106536" fg:w="45"/><text x="50.8273%" y="431.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_i8 (45 samples, 0.02%)</title><rect x="50.5773%" y="405" width="0.0214%" height="15" fill="rgb(234,217,39)" fg:x="106536" fg:w="45"/><text x="50.8273%" y="415.50"></text></g><g><title>nom::number::streaming::be_i8 (45 samples, 0.02%)</title><rect x="50.5773%" y="389" width="0.0214%" height="15" fill="rgb(207,178,40)" fg:x="106536" fg:w="45"/><text x="50.8273%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (45 samples, 0.02%)</title><rect x="50.5773%" y="373" width="0.0214%" height="15" fill="rgb(221,136,13)" fg:x="106536" fg:w="45"/><text x="50.8273%" y="383.50"></text></g><g><title>nom::combinator::map::{{closure}} (45 samples, 0.02%)</title><rect x="50.5773%" y="357" width="0.0214%" height="15" fill="rgb(249,199,10)" fg:x="106536" fg:w="45"/><text x="50.8273%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (45 samples, 0.02%)</title><rect x="50.5773%" y="341" width="0.0214%" height="15" fill="rgb(249,222,13)" fg:x="106536" fg:w="45"/><text x="50.8273%" y="351.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (45 samples, 0.02%)</title><rect x="50.5773%" y="325" width="0.0214%" height="15" fill="rgb(244,185,38)" fg:x="106536" fg:w="45"/><text x="50.8273%" y="335.50"></text></g><g><title>nom::number::streaming::be_u8 (45 samples, 0.02%)</title><rect x="50.5773%" y="309" width="0.0214%" height="15" fill="rgb(236,202,9)" fg:x="106536" fg:w="45"/><text x="50.8273%" y="319.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (5,146 samples, 2.44%)</title><rect x="48.1718%" y="549" width="2.4430%" height="15" fill="rgb(250,229,37)" fg:x="101469" fg:w="5146"/><text x="48.4218%" y="559.50">hp..</text></g><g><title>nom::sequence::tuple::{{closure}} (98 samples, 0.05%)</title><rect x="50.5683%" y="533" width="0.0465%" height="15" fill="rgb(206,174,23)" fg:x="106517" fg:w="98"/><text x="50.8183%" y="543.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (98 samples, 0.05%)</title><rect x="50.5683%" y="517" width="0.0465%" height="15" fill="rgb(211,33,43)" fg:x="106517" fg:w="98"/><text x="50.8183%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (98 samples, 0.05%)</title><rect x="50.5683%" y="501" width="0.0465%" height="15" fill="rgb(245,58,50)" fg:x="106517" fg:w="98"/><text x="50.8183%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (98 samples, 0.05%)</title><rect x="50.5683%" y="485" width="0.0465%" height="15" fill="rgb(244,68,36)" fg:x="106517" fg:w="98"/><text x="50.8183%" y="495.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_field_type (79 samples, 0.04%)</title><rect x="50.5773%" y="469" width="0.0375%" height="15" fill="rgb(232,229,15)" fg:x="106536" fg:w="79"/><text x="50.8273%" y="479.50"></text></g><g><title>nom::combinator::map::{{closure}} (79 samples, 0.04%)</title><rect x="50.5773%" y="453" width="0.0375%" height="15" fill="rgb(254,30,23)" fg:x="106536" fg:w="79"/><text x="50.8273%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (34 samples, 0.02%)</title><rect x="50.5987%" y="437" width="0.0161%" height="15" fill="rgb(235,160,14)" fg:x="106581" fg:w="34"/><text x="50.8487%" y="447.50"></text></g><g><title>hprof_slurp::parser::gc_record::FieldType::from_value (26 samples, 0.01%)</title><rect x="50.6024%" y="421" width="0.0123%" height="15" fill="rgb(212,155,44)" fg:x="106589" fg:w="26"/><text x="50.8524%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (35,144 samples, 16.68%)</title><rect x="33.9309%" y="581" width="16.6844%" height="15" fill="rgb(226,2,50)" fg:x="71472" fg:w="35144"/><text x="34.1809%" y="591.50">&lt;F as nom::internal::Parse..</text></g><g><title>core::ops::function::FnMut::call_mut (35,144 samples, 16.68%)</title><rect x="33.9309%" y="565" width="16.6844%" height="15" fill="rgb(234,177,6)" fg:x="71472" fg:w="35144"/><text x="34.1809%" y="575.50">core::ops::function::FnMut..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (73,385 samples, 34.84%)</title><rect x="15.8151%" y="645" width="34.8391%" height="15" fill="rgb(217,24,9)" fg:x="33313" fg:w="73385"/><text x="16.0651%" y="655.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (72,754 samples, 34.54%)</title><rect x="16.1147%" y="629" width="34.5395%" height="15" fill="rgb(220,13,46)" fg:x="33944" fg:w="72754"/><text x="16.3647%" y="639.50">hprof_slurp::parser::record_parser::HprofRecordParser::p..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record (35,351 samples, 16.78%)</title><rect x="33.8715%" y="613" width="16.7827%" height="15" fill="rgb(239,221,27)" fg:x="71347" fg:w="35351"/><text x="34.1215%" y="623.50">hprof_slurp::parser::recor..</text></g><g><title>nom::combinator::flat_map::{{closure}} (35,351 samples, 16.78%)</title><rect x="33.8715%" y="597" width="16.7827%" height="15" fill="rgb(222,198,25)" fg:x="71347" fg:w="35351"/><text x="34.1215%" y="607.50">nom::combinator::flat_map:..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record::{{closure}} (82 samples, 0.04%)</title><rect x="50.6153%" y="581" width="0.0389%" height="15" fill="rgb(211,99,13)" fg:x="106616" fg:w="82"/><text x="50.8653%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (626 samples, 0.30%)</title><rect x="50.6775%" y="629" width="0.2972%" height="15" fill="rgb(232,111,31)" fg:x="106747" fg:w="626"/><text x="50.9275%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (30 samples, 0.01%)</title><rect x="50.9746%" y="629" width="0.0142%" height="15" fill="rgb(245,82,37)" fg:x="107373" fg:w="30"/><text x="51.2246%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (30 samples, 0.01%)</title><rect x="50.9746%" y="613" width="0.0142%" height="15" fill="rgb(227,149,46)" fg:x="107373" fg:w="30"/><text x="51.2246%" y="623.50"></text></g><g><title>do_anonymous_page (31 samples, 0.01%)</title><rect x="52.1102%" y="517" width="0.0147%" height="15" fill="rgb(218,36,50)" fg:x="109765" fg:w="31"/><text x="52.3602%" y="527.50"></text></g><g><title>handle_mm_fault (36 samples, 0.02%)</title><rect x="52.1088%" y="565" width="0.0171%" height="15" fill="rgb(226,80,48)" fg:x="109762" fg:w="36"/><text x="52.3588%" y="575.50"></text></g><g><title>__handle_mm_fault (36 samples, 0.02%)</title><rect x="52.1088%" y="549" width="0.0171%" height="15" fill="rgb(238,224,15)" fg:x="109762" fg:w="36"/><text x="52.3588%" y="559.50"></text></g><g><title>handle_pte_fault (34 samples, 0.02%)</title><rect x="52.1098%" y="533" width="0.0161%" height="15" fill="rgb(241,136,10)" fg:x="109764" fg:w="34"/><text x="52.3598%" y="543.50"></text></g><g><title>do_user_addr_fault (37 samples, 0.02%)</title><rect x="52.1088%" y="581" width="0.0176%" height="15" fill="rgb(208,32,45)" fg:x="109762" fg:w="37"/><text x="52.3588%" y="591.50"></text></g><g><title>asm_exc_page_fault (39 samples, 0.02%)</title><rect x="52.1083%" y="613" width="0.0185%" height="15" fill="rgb(207,135,9)" fg:x="109761" fg:w="39"/><text x="52.3583%" y="623.50"></text></g><g><title>exc_page_fault (38 samples, 0.02%)</title><rect x="52.1088%" y="597" width="0.0180%" height="15" fill="rgb(206,86,44)" fg:x="109762" fg:w="38"/><text x="52.3588%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,111 samples, 1.48%)</title><rect x="50.6542%" y="645" width="1.4769%" height="15" fill="rgb(245,177,15)" fg:x="106698" fg:w="3111"/><text x="50.9042%" y="655.50"></text></g><g><title>core::ptr::write (2,406 samples, 1.14%)</title><rect x="50.9889%" y="629" width="1.1422%" height="15" fill="rgb(206,64,50)" fg:x="107403" fg:w="2406"/><text x="51.2389%" y="639.50"></text></g><g><title>__hrtimer_run_queues (25 samples, 0.01%)</title><rect x="52.1349%" y="581" width="0.0119%" height="15" fill="rgb(234,36,40)" fg:x="109817" fg:w="25"/><text x="52.3849%" y="591.50"></text></g><g><title>__sysvec_apic_timer_interrupt (30 samples, 0.01%)</title><rect x="52.1340%" y="613" width="0.0142%" height="15" fill="rgb(213,64,8)" fg:x="109815" fg:w="30"/><text x="52.3840%" y="623.50"></text></g><g><title>hrtimer_interrupt (29 samples, 0.01%)</title><rect x="52.1344%" y="597" width="0.0138%" height="15" fill="rgb(210,75,36)" fg:x="109816" fg:w="29"/><text x="52.3844%" y="607.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (36 samples, 0.02%)</title><rect x="52.1340%" y="645" width="0.0171%" height="15" fill="rgb(229,88,21)" fg:x="109815" fg:w="36"/><text x="52.3840%" y="655.50"></text></g><g><title>sysvec_apic_timer_interrupt (36 samples, 0.02%)</title><rect x="52.1340%" y="629" width="0.0171%" height="15" fill="rgb(252,204,47)" fg:x="109815" fg:w="36"/><text x="52.3840%" y="639.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (91,334 samples, 43.36%)</title><rect x="8.7932%" y="677" width="43.3602%" height="15" fill="rgb(208,77,27)" fg:x="18522" fg:w="91334"/><text x="9.0432%" y="687.50">hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming</text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (91,333 samples, 43.36%)</title><rect x="8.7937%" y="661" width="43.3598%" height="15" fill="rgb(221,76,26)" fg:x="18523" fg:w="91333"/><text x="9.0437%" y="671.50">hprof_slurp::parser::record_parser::lazy_many1::{{closure}}</text></g><g><title>std::panic::catch_unwind (104,232 samples, 49.48%)</title><rect x="2.6766%" y="789" width="49.4835%" height="15" fill="rgb(225,139,18)" fg:x="5638" fg:w="104232"/><text x="2.9266%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (104,232 samples, 49.48%)</title><rect x="2.6766%" y="773" width="49.4835%" height="15" fill="rgb(230,137,11)" fg:x="5638" fg:w="104232"/><text x="2.9266%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (104,232 samples, 49.48%)</title><rect x="2.6766%" y="757" width="49.4835%" height="15" fill="rgb(212,28,1)" fg:x="5638" fg:w="104232"/><text x="2.9266%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (104,232 samples, 49.48%)</title><rect x="2.6766%" y="741" width="49.4835%" height="15" fill="rgb(248,164,17)" fg:x="5638" fg:w="104232"/><text x="2.9266%" y="751.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (104,232 samples, 49.48%)</title><rect x="2.6766%" y="725" width="49.4835%" height="15" fill="rgb(222,171,42)" fg:x="5638" fg:w="104232"/><text x="2.9266%" y="735.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (104,232 samples, 49.48%)</title><rect x="2.6766%" y="709" width="49.4835%" height="15" fill="rgb(243,84,45)" fg:x="5638" fg:w="104232"/><text x="2.9266%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}} (104,232 samples, 49.48%)</title><rect x="2.6766%" y="693" width="49.4835%" height="15" fill="rgb(252,49,23)" fg:x="5638" fg:w="104232"/><text x="2.9266%" y="703.50">hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{clos..</text></g><g><title>__GI___clone (104,233 samples, 49.48%)</title><rect x="2.6766%" y="901" width="49.4840%" height="15" fill="rgb(215,19,7)" fg:x="5638" fg:w="104233"/><text x="2.9266%" y="911.50">__GI___clone</text></g><g><title>start_thread (104,233 samples, 49.48%)</title><rect x="2.6766%" y="885" width="49.4840%" height="15" fill="rgb(238,81,41)" fg:x="5638" fg:w="104233"/><text x="2.9266%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (104,233 samples, 49.48%)</title><rect x="2.6766%" y="869" width="49.4840%" height="15" fill="rgb(210,199,37)" fg:x="5638" fg:w="104233"/><text x="2.9266%" y="879.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (104,233 samples, 49.48%)</title><rect x="2.6766%" y="853" width="49.4840%" height="15" fill="rgb(244,192,49)" fg:x="5638" fg:w="104233"/><text x="2.9266%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (104,233 samples, 49.48%)</title><rect x="2.6766%" y="837" width="49.4840%" height="15" fill="rgb(226,211,11)" fg:x="5638" fg:w="104233"/><text x="2.9266%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (104,233 samples, 49.48%)</title><rect x="2.6766%" y="821" width="49.4840%" height="15" fill="rgb(236,162,54)" fg:x="5638" fg:w="104233"/><text x="2.9266%" y="831.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (104,233 samples, 49.48%)</title><rect x="2.6766%" y="805" width="49.4840%" height="15" fill="rgb(220,229,9)" fg:x="5638" fg:w="104233"/><text x="2.9266%" y="815.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>asm_exc_page_fault (143 samples, 0.07%)</title><rect x="52.1620%" y="901" width="0.0679%" height="15" fill="rgb(250,87,22)" fg:x="109874" fg:w="143"/><text x="52.4120%" y="911.50"></text></g><g><title>hprof-parser (110,029 samples, 52.24%)</title><rect x="0.0000%" y="917" width="52.2356%" height="15" fill="rgb(239,43,17)" fg:x="0" fg:w="110029"/><text x="0.2500%" y="927.50">hprof-parser</text></g><g><title>__cond_resched (28 samples, 0.01%)</title><rect x="52.4525%" y="453" width="0.0133%" height="15" fill="rgb(231,177,25)" fg:x="110486" fg:w="28"/><text x="52.7025%" y="463.50"></text></g><g><title>__irqentry_text_start (24 samples, 0.01%)</title><rect x="52.4658%" y="453" width="0.0114%" height="15" fill="rgb(219,179,1)" fg:x="110514" fg:w="24"/><text x="52.7158%" y="463.50"></text></g><g><title>asm_exc_page_fault (8,217 samples, 3.90%)</title><rect x="52.4839%" y="453" width="3.9010%" height="15" fill="rgb(238,219,53)" fg:x="110552" fg:w="8217"/><text x="52.7339%" y="463.50">asm_..</text></g><g><title>__cond_resched (23 samples, 0.01%)</title><rect x="56.5192%" y="437" width="0.0109%" height="15" fill="rgb(232,167,36)" fg:x="119052" fg:w="23"/><text x="56.7692%" y="447.50"></text></g><g><title>copy_page_to_iter (328 samples, 0.16%)</title><rect x="56.3863%" y="453" width="0.1557%" height="15" fill="rgb(244,19,51)" fg:x="118772" fg:w="328"/><text x="56.6363%" y="463.50"></text></g><g><title>__read_end_io (152 samples, 0.07%)</title><rect x="61.0539%" y="213" width="0.0722%" height="15" fill="rgb(224,6,22)" fg:x="128604" fg:w="152"/><text x="61.3039%" y="223.50"></text></g><g><title>bio_endio (217 samples, 0.10%)</title><rect x="61.0497%" y="245" width="0.1030%" height="15" fill="rgb(224,145,5)" fg:x="128595" fg:w="217"/><text x="61.2997%" y="255.50"></text></g><g><title>mpage_end_io (208 samples, 0.10%)</title><rect x="61.0539%" y="229" width="0.0987%" height="15" fill="rgb(234,130,49)" fg:x="128604" fg:w="208"/><text x="61.3039%" y="239.50"></text></g><g><title>unlock_page (56 samples, 0.03%)</title><rect x="61.1261%" y="213" width="0.0266%" height="15" fill="rgb(254,6,2)" fg:x="128756" fg:w="56"/><text x="61.3761%" y="223.50"></text></g><g><title>blk_update_request (230 samples, 0.11%)</title><rect x="61.0440%" y="261" width="0.1092%" height="15" fill="rgb(208,96,46)" fg:x="128583" fg:w="230"/><text x="61.2940%" y="271.50"></text></g><g><title>blk_mq_end_request (243 samples, 0.12%)</title><rect x="61.0383%" y="277" width="0.1154%" height="15" fill="rgb(239,3,39)" fg:x="128571" fg:w="243"/><text x="61.2883%" y="287.50"></text></g><g><title>nvme_complete_rq (245 samples, 0.12%)</title><rect x="61.0383%" y="293" width="0.1163%" height="15" fill="rgb(233,210,1)" fg:x="128571" fg:w="245"/><text x="61.2883%" y="303.50"></text></g><g><title>dma_unmap_sg_attrs (26 samples, 0.01%)</title><rect x="61.1574%" y="277" width="0.0123%" height="15" fill="rgb(244,137,37)" fg:x="128822" fg:w="26"/><text x="61.4074%" y="287.50"></text></g><g><title>nvme_irq (301 samples, 0.14%)</title><rect x="61.0321%" y="341" width="0.1429%" height="15" fill="rgb(240,136,2)" fg:x="128558" fg:w="301"/><text x="61.2821%" y="351.50"></text></g><g><title>nvme_process_cq (301 samples, 0.14%)</title><rect x="61.0321%" y="325" width="0.1429%" height="15" fill="rgb(239,18,37)" fg:x="128558" fg:w="301"/><text x="61.2821%" y="335.50"></text></g><g><title>nvme_pci_complete_rq (290 samples, 0.14%)</title><rect x="61.0373%" y="309" width="0.1377%" height="15" fill="rgb(218,185,22)" fg:x="128569" fg:w="290"/><text x="61.2873%" y="319.50"></text></g><g><title>nvme_unmap_data (39 samples, 0.02%)</title><rect x="61.1565%" y="293" width="0.0185%" height="15" fill="rgb(225,218,4)" fg:x="128820" fg:w="39"/><text x="61.4065%" y="303.50"></text></g><g><title>__handle_irq_event_percpu (308 samples, 0.15%)</title><rect x="61.0302%" y="357" width="0.1462%" height="15" fill="rgb(230,182,32)" fg:x="128554" fg:w="308"/><text x="61.2802%" y="367.50"></text></g><g><title>handle_irq_event (310 samples, 0.15%)</title><rect x="61.0302%" y="373" width="0.1472%" height="15" fill="rgb(242,56,43)" fg:x="128554" fg:w="310"/><text x="61.2802%" y="383.50"></text></g><g><title>handle_edge_irq (319 samples, 0.15%)</title><rect x="61.0278%" y="389" width="0.1514%" height="15" fill="rgb(233,99,24)" fg:x="128549" fg:w="319"/><text x="61.2778%" y="399.50"></text></g><g><title>__common_interrupt (323 samples, 0.15%)</title><rect x="61.0269%" y="405" width="0.1533%" height="15" fill="rgb(234,209,42)" fg:x="128547" fg:w="323"/><text x="61.2769%" y="415.50"></text></g><g><title>common_interrupt (332 samples, 0.16%)</title><rect x="61.0259%" y="421" width="0.1576%" height="15" fill="rgb(227,7,12)" fg:x="128545" fg:w="332"/><text x="61.2759%" y="431.50"></text></g><g><title>asm_common_interrupt (333 samples, 0.16%)</title><rect x="61.0259%" y="437" width="0.1581%" height="15" fill="rgb(245,203,43)" fg:x="128545" fg:w="333"/><text x="61.2759%" y="447.50"></text></g><g><title>__read_end_io (59 samples, 0.03%)</title><rect x="61.4105%" y="165" width="0.0280%" height="15" fill="rgb(238,205,33)" fg:x="129355" fg:w="59"/><text x="61.6605%" y="175.50"></text></g><g><title>blk_update_request (79 samples, 0.04%)</title><rect x="61.4071%" y="213" width="0.0375%" height="15" fill="rgb(231,56,7)" fg:x="129348" fg:w="79"/><text x="61.6571%" y="223.50"></text></g><g><title>bio_endio (76 samples, 0.04%)</title><rect x="61.4086%" y="197" width="0.0361%" height="15" fill="rgb(244,186,29)" fg:x="129351" fg:w="76"/><text x="61.6586%" y="207.50"></text></g><g><title>mpage_end_io (72 samples, 0.03%)</title><rect x="61.4105%" y="181" width="0.0342%" height="15" fill="rgb(234,111,31)" fg:x="129355" fg:w="72"/><text x="61.6605%" y="191.50"></text></g><g><title>blk_mq_end_request (82 samples, 0.04%)</title><rect x="61.4062%" y="229" width="0.0389%" height="15" fill="rgb(241,149,10)" fg:x="129346" fg:w="82"/><text x="61.6562%" y="239.50"></text></g><g><title>nvme_complete_rq (83 samples, 0.04%)</title><rect x="61.4062%" y="245" width="0.0394%" height="15" fill="rgb(249,206,44)" fg:x="129346" fg:w="83"/><text x="61.6562%" y="255.50"></text></g><g><title>nvme_irq (109 samples, 0.05%)</title><rect x="61.4043%" y="293" width="0.0517%" height="15" fill="rgb(251,153,30)" fg:x="129342" fg:w="109"/><text x="61.6543%" y="303.50"></text></g><g><title>nvme_process_cq (109 samples, 0.05%)</title><rect x="61.4043%" y="277" width="0.0517%" height="15" fill="rgb(239,152,38)" fg:x="129342" fg:w="109"/><text x="61.6543%" y="287.50"></text></g><g><title>nvme_pci_complete_rq (105 samples, 0.05%)</title><rect x="61.4062%" y="261" width="0.0498%" height="15" fill="rgb(249,139,47)" fg:x="129346" fg:w="105"/><text x="61.6562%" y="271.50"></text></g><g><title>__handle_irq_event_percpu (112 samples, 0.05%)</title><rect x="61.4043%" y="309" width="0.0532%" height="15" fill="rgb(244,64,35)" fg:x="129342" fg:w="112"/><text x="61.6543%" y="319.50"></text></g><g><title>handle_irq_event (115 samples, 0.05%)</title><rect x="61.4043%" y="325" width="0.0546%" height="15" fill="rgb(216,46,15)" fg:x="129342" fg:w="115"/><text x="61.6543%" y="335.50"></text></g><g><title>handle_edge_irq (117 samples, 0.06%)</title><rect x="61.4038%" y="341" width="0.0555%" height="15" fill="rgb(250,74,19)" fg:x="129341" fg:w="117"/><text x="61.6538%" y="351.50"></text></g><g><title>__common_interrupt (119 samples, 0.06%)</title><rect x="61.4033%" y="357" width="0.0565%" height="15" fill="rgb(249,42,33)" fg:x="129340" fg:w="119"/><text x="61.6533%" y="367.50"></text></g><g><title>asm_common_interrupt (123 samples, 0.06%)</title><rect x="61.4033%" y="389" width="0.0584%" height="15" fill="rgb(242,149,17)" fg:x="129340" fg:w="123"/><text x="61.6533%" y="399.50"></text></g><g><title>common_interrupt (123 samples, 0.06%)</title><rect x="61.4033%" y="373" width="0.0584%" height="15" fill="rgb(244,29,21)" fg:x="129340" fg:w="123"/><text x="61.6533%" y="383.50"></text></g><g><title>down_read_trylock (164 samples, 0.08%)</title><rect x="61.4646%" y="389" width="0.0779%" height="15" fill="rgb(220,130,37)" fg:x="129469" fg:w="164"/><text x="61.7146%" y="399.50"></text></g><g><title>find_vma (92 samples, 0.04%)</title><rect x="61.5424%" y="389" width="0.0437%" height="15" fill="rgb(211,67,2)" fg:x="129633" fg:w="92"/><text x="61.7924%" y="399.50"></text></g><g><title>vmacache_find (58 samples, 0.03%)</title><rect x="61.5586%" y="373" width="0.0275%" height="15" fill="rgb(235,68,52)" fg:x="129667" fg:w="58"/><text x="61.8086%" y="383.50"></text></g><g><title>__count_memcg_events (84 samples, 0.04%)</title><rect x="61.7015%" y="373" width="0.0399%" height="15" fill="rgb(246,142,3)" fg:x="129968" fg:w="84"/><text x="61.9515%" y="383.50"></text></g><g><title>cgroup_rstat_updated (36 samples, 0.02%)</title><rect x="61.7243%" y="357" width="0.0171%" height="15" fill="rgb(241,25,7)" fg:x="130016" fg:w="36"/><text x="61.9743%" y="367.50"></text></g><g><title>_raw_spin_lock (170 samples, 0.08%)</title><rect x="62.1283%" y="341" width="0.0807%" height="15" fill="rgb(242,119,39)" fg:x="130867" fg:w="170"/><text x="62.3783%" y="351.50"></text></g><g><title>__get_vma_policy (23 samples, 0.01%)</title><rect x="62.3747%" y="325" width="0.0109%" height="15" fill="rgb(241,98,45)" fg:x="131386" fg:w="23"/><text x="62.6247%" y="335.50"></text></g><g><title>__alloc_pages (23 samples, 0.01%)</title><rect x="62.4079%" y="277" width="0.0109%" height="15" fill="rgb(254,28,30)" fg:x="131456" fg:w="23"/><text x="62.6579%" y="287.50"></text></g><g><title>alloc_pages (24 samples, 0.01%)</title><rect x="62.4079%" y="293" width="0.0114%" height="15" fill="rgb(241,142,54)" fg:x="131456" fg:w="24"/><text x="62.6579%" y="303.50"></text></g><g><title>__pte_alloc (28 samples, 0.01%)</title><rect x="62.4074%" y="325" width="0.0133%" height="15" fill="rgb(222,85,15)" fg:x="131455" fg:w="28"/><text x="62.6574%" y="335.50"></text></g><g><title>pte_alloc_one (28 samples, 0.01%)</title><rect x="62.4074%" y="309" width="0.0133%" height="15" fill="rgb(210,85,47)" fg:x="131455" fg:w="28"/><text x="62.6574%" y="319.50"></text></g><g><title>clear_page_erms (47 samples, 0.02%)</title><rect x="62.6704%" y="261" width="0.0223%" height="15" fill="rgb(224,206,25)" fg:x="132009" fg:w="47"/><text x="62.9204%" y="271.50"></text></g><g><title>get_page_from_freelist (60 samples, 0.03%)</title><rect x="62.6690%" y="277" width="0.0285%" height="15" fill="rgb(243,201,19)" fg:x="132006" fg:w="60"/><text x="62.9190%" y="287.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (76 samples, 0.04%)</title><rect x="62.6657%" y="293" width="0.0361%" height="15" fill="rgb(236,59,4)" fg:x="131999" fg:w="76"/><text x="62.9157%" y="303.50"></text></g><g><title>__cond_resched (32 samples, 0.02%)</title><rect x="62.7018%" y="293" width="0.0152%" height="15" fill="rgb(254,179,45)" fg:x="132075" fg:w="32"/><text x="62.9518%" y="303.50"></text></g><g><title>__next_zones_zonelist (133 samples, 0.06%)</title><rect x="62.7174%" y="293" width="0.0631%" height="15" fill="rgb(226,14,10)" fg:x="132108" fg:w="133"/><text x="62.9674%" y="303.50"></text></g><g><title>__inc_numa_state (55 samples, 0.03%)</title><rect x="62.9192%" y="277" width="0.0261%" height="15" fill="rgb(244,27,41)" fg:x="132533" fg:w="55"/><text x="63.1692%" y="287.50"></text></g><g><title>__read_end_io (37 samples, 0.02%)</title><rect x="64.6938%" y="37" width="0.0176%" height="15" fill="rgb(235,35,32)" fg:x="136271" fg:w="37"/><text x="64.9438%" y="47.50"></text></g><g><title>blk_mq_end_request (68 samples, 0.03%)</title><rect x="64.6871%" y="101" width="0.0323%" height="15" fill="rgb(218,68,31)" fg:x="136257" fg:w="68"/><text x="64.9371%" y="111.50"></text></g><g><title>blk_update_request (62 samples, 0.03%)</title><rect x="64.6900%" y="85" width="0.0294%" height="15" fill="rgb(207,120,37)" fg:x="136263" fg:w="62"/><text x="64.9400%" y="95.50"></text></g><g><title>bio_endio (59 samples, 0.03%)</title><rect x="64.6914%" y="69" width="0.0280%" height="15" fill="rgb(227,98,0)" fg:x="136266" fg:w="59"/><text x="64.9414%" y="79.50"></text></g><g><title>mpage_end_io (54 samples, 0.03%)</title><rect x="64.6938%" y="53" width="0.0256%" height="15" fill="rgb(207,7,3)" fg:x="136271" fg:w="54"/><text x="64.9438%" y="63.50"></text></g><g><title>nvme_complete_rq (69 samples, 0.03%)</title><rect x="64.6871%" y="117" width="0.0328%" height="15" fill="rgb(206,98,19)" fg:x="136257" fg:w="69"/><text x="64.9371%" y="127.50"></text></g><g><title>__common_interrupt (88 samples, 0.04%)</title><rect x="64.6848%" y="229" width="0.0418%" height="15" fill="rgb(217,5,26)" fg:x="136252" fg:w="88"/><text x="64.9348%" y="239.50"></text></g><g><title>handle_edge_irq (88 samples, 0.04%)</title><rect x="64.6848%" y="213" width="0.0418%" height="15" fill="rgb(235,190,38)" fg:x="136252" fg:w="88"/><text x="64.9348%" y="223.50"></text></g><g><title>handle_irq_event (87 samples, 0.04%)</title><rect x="64.6852%" y="197" width="0.0413%" height="15" fill="rgb(247,86,24)" fg:x="136253" fg:w="87"/><text x="64.9352%" y="207.50"></text></g><g><title>__handle_irq_event_percpu (87 samples, 0.04%)</title><rect x="64.6852%" y="181" width="0.0413%" height="15" fill="rgb(205,101,16)" fg:x="136253" fg:w="87"/><text x="64.9352%" y="191.50"></text></g><g><title>nvme_irq (87 samples, 0.04%)</title><rect x="64.6852%" y="165" width="0.0413%" height="15" fill="rgb(246,168,33)" fg:x="136253" fg:w="87"/><text x="64.9352%" y="175.50"></text></g><g><title>nvme_process_cq (87 samples, 0.04%)</title><rect x="64.6852%" y="149" width="0.0413%" height="15" fill="rgb(231,114,1)" fg:x="136253" fg:w="87"/><text x="64.9352%" y="159.50"></text></g><g><title>nvme_pci_complete_rq (83 samples, 0.04%)</title><rect x="64.6871%" y="133" width="0.0394%" height="15" fill="rgb(207,184,53)" fg:x="136257" fg:w="83"/><text x="64.9371%" y="143.50"></text></g><g><title>asm_common_interrupt (90 samples, 0.04%)</title><rect x="64.6848%" y="261" width="0.0427%" height="15" fill="rgb(224,95,51)" fg:x="136252" fg:w="90"/><text x="64.9348%" y="271.50"></text></g><g><title>common_interrupt (90 samples, 0.04%)</title><rect x="64.6848%" y="245" width="0.0427%" height="15" fill="rgb(212,188,45)" fg:x="136252" fg:w="90"/><text x="64.9348%" y="255.50"></text></g><g><title>clear_page_erms (3,723 samples, 1.77%)</title><rect x="62.9648%" y="277" width="1.7675%" height="15" fill="rgb(223,154,38)" fg:x="132629" fg:w="3723"/><text x="63.2148%" y="287.50"></text></g><g><title>kernel_init_free_pages (66 samples, 0.03%)</title><rect x="64.7322%" y="277" width="0.0313%" height="15" fill="rgb(251,22,52)" fg:x="136352" fg:w="66"/><text x="64.9822%" y="287.50"></text></g><g><title>nvme_complete_rq (25 samples, 0.01%)</title><rect x="64.9516%" y="117" width="0.0119%" height="15" fill="rgb(229,209,22)" fg:x="136814" fg:w="25"/><text x="65.2016%" y="127.50"></text></g><g><title>blk_mq_end_request (24 samples, 0.01%)</title><rect x="64.9521%" y="101" width="0.0114%" height="15" fill="rgb(234,138,34)" fg:x="136815" fg:w="24"/><text x="65.2021%" y="111.50"></text></g><g><title>blk_update_request (24 samples, 0.01%)</title><rect x="64.9521%" y="85" width="0.0114%" height="15" fill="rgb(212,95,11)" fg:x="136815" fg:w="24"/><text x="65.2021%" y="95.50"></text></g><g><title>bio_endio (22 samples, 0.01%)</title><rect x="64.9530%" y="69" width="0.0104%" height="15" fill="rgb(240,179,47)" fg:x="136817" fg:w="22"/><text x="65.2030%" y="79.50"></text></g><g><title>__common_interrupt (31 samples, 0.01%)</title><rect x="64.9511%" y="229" width="0.0147%" height="15" fill="rgb(240,163,11)" fg:x="136813" fg:w="31"/><text x="65.2011%" y="239.50"></text></g><g><title>handle_edge_irq (31 samples, 0.01%)</title><rect x="64.9511%" y="213" width="0.0147%" height="15" fill="rgb(236,37,12)" fg:x="136813" fg:w="31"/><text x="65.2011%" y="223.50"></text></g><g><title>handle_irq_event (31 samples, 0.01%)</title><rect x="64.9511%" y="197" width="0.0147%" height="15" fill="rgb(232,164,16)" fg:x="136813" fg:w="31"/><text x="65.2011%" y="207.50"></text></g><g><title>__handle_irq_event_percpu (31 samples, 0.01%)</title><rect x="64.9511%" y="181" width="0.0147%" height="15" fill="rgb(244,205,15)" fg:x="136813" fg:w="31"/><text x="65.2011%" y="191.50"></text></g><g><title>nvme_irq (31 samples, 0.01%)</title><rect x="64.9511%" y="165" width="0.0147%" height="15" fill="rgb(223,117,47)" fg:x="136813" fg:w="31"/><text x="65.2011%" y="175.50"></text></g><g><title>nvme_process_cq (31 samples, 0.01%)</title><rect x="64.9511%" y="149" width="0.0147%" height="15" fill="rgb(244,107,35)" fg:x="136813" fg:w="31"/><text x="65.2011%" y="159.50"></text></g><g><title>nvme_pci_complete_rq (30 samples, 0.01%)</title><rect x="64.9516%" y="133" width="0.0142%" height="15" fill="rgb(205,140,8)" fg:x="136814" fg:w="30"/><text x="65.2016%" y="143.50"></text></g><g><title>asm_common_interrupt (32 samples, 0.02%)</title><rect x="64.9511%" y="261" width="0.0152%" height="15" fill="rgb(228,84,46)" fg:x="136813" fg:w="32"/><text x="65.2011%" y="271.50"></text></g><g><title>common_interrupt (32 samples, 0.02%)</title><rect x="64.9511%" y="245" width="0.0152%" height="15" fill="rgb(254,188,9)" fg:x="136813" fg:w="32"/><text x="65.2011%" y="255.50"></text></g><g><title>rmqueue (1,609 samples, 0.76%)</title><rect x="64.7636%" y="277" width="0.7639%" height="15" fill="rgb(206,112,54)" fg:x="136418" fg:w="1609"/><text x="65.0136%" y="287.50"></text></g><g><title>rmqueue_bulk.constprop.0 (1,180 samples, 0.56%)</title><rect x="64.9672%" y="261" width="0.5602%" height="15" fill="rgb(216,84,49)" fg:x="136847" fg:w="1180"/><text x="65.2172%" y="271.50"></text></g><g><title>get_page_from_freelist (5,778 samples, 2.74%)</title><rect x="62.7858%" y="293" width="2.7431%" height="15" fill="rgb(214,194,35)" fg:x="132252" fg:w="5778"/><text x="63.0358%" y="303.50">ge..</text></g><g><title>kernel_init_free_pages (22 samples, 0.01%)</title><rect x="65.5289%" y="293" width="0.0104%" height="15" fill="rgb(249,28,3)" fg:x="138030" fg:w="22"/><text x="65.7789%" y="303.50"></text></g><g><title>__alloc_pages (6,371 samples, 3.02%)</title><rect x="62.5252%" y="309" width="3.0246%" height="15" fill="rgb(222,56,52)" fg:x="131703" fg:w="6371"/><text x="62.7752%" y="319.50">__a..</text></g><g><title>__cond_resched (26 samples, 0.01%)</title><rect x="65.5498%" y="309" width="0.0123%" height="15" fill="rgb(245,217,50)" fg:x="138074" fg:w="26"/><text x="65.7998%" y="319.50"></text></g><g><title>__next_zones_zonelist (35 samples, 0.02%)</title><rect x="65.5621%" y="309" width="0.0166%" height="15" fill="rgb(213,201,24)" fg:x="138100" fg:w="35"/><text x="65.8121%" y="319.50"></text></g><g><title>policy_nodemask (26 samples, 0.01%)</title><rect x="65.5930%" y="309" width="0.0123%" height="15" fill="rgb(248,116,28)" fg:x="138165" fg:w="26"/><text x="65.8430%" y="319.50"></text></g><g><title>alloc_pages_vma (6,731 samples, 3.20%)</title><rect x="62.4212%" y="325" width="3.1955%" height="15" fill="rgb(219,72,43)" fg:x="131484" fg:w="6731"/><text x="62.6712%" y="335.50">all..</text></g><g><title>should_fail_alloc_page (24 samples, 0.01%)</title><rect x="65.6053%" y="309" width="0.0114%" height="15" fill="rgb(209,138,14)" fg:x="138191" fg:w="24"/><text x="65.8553%" y="319.50"></text></g><g><title>cgroup_throttle_swaprate (268 samples, 0.13%)</title><rect x="65.6214%" y="325" width="0.1272%" height="15" fill="rgb(222,18,33)" fg:x="138225" fg:w="268"/><text x="65.8714%" y="335.50"></text></g><g><title>get_mem_cgroup_from_mm (26 samples, 0.01%)</title><rect x="65.7487%" y="325" width="0.0123%" height="15" fill="rgb(213,199,7)" fg:x="138493" fg:w="26"/><text x="65.9987%" y="335.50"></text></g><g><title>nvme_complete_rq (28 samples, 0.01%)</title><rect x="65.9371%" y="117" width="0.0133%" height="15" fill="rgb(250,110,10)" fg:x="138890" fg:w="28"/><text x="66.1871%" y="127.50"></text></g><g><title>blk_mq_end_request (28 samples, 0.01%)</title><rect x="65.9371%" y="101" width="0.0133%" height="15" fill="rgb(248,123,6)" fg:x="138890" fg:w="28"/><text x="66.1871%" y="111.50"></text></g><g><title>blk_update_request (25 samples, 0.01%)</title><rect x="65.9386%" y="85" width="0.0119%" height="15" fill="rgb(206,91,31)" fg:x="138893" fg:w="25"/><text x="66.1886%" y="95.50"></text></g><g><title>handle_irq_event (32 samples, 0.02%)</title><rect x="65.9367%" y="197" width="0.0152%" height="15" fill="rgb(211,154,13)" fg:x="138889" fg:w="32"/><text x="66.1867%" y="207.50"></text></g><g><title>__handle_irq_event_percpu (32 samples, 0.02%)</title><rect x="65.9367%" y="181" width="0.0152%" height="15" fill="rgb(225,148,7)" fg:x="138889" fg:w="32"/><text x="66.1867%" y="191.50"></text></g><g><title>nvme_irq (32 samples, 0.02%)</title><rect x="65.9367%" y="165" width="0.0152%" height="15" fill="rgb(220,160,43)" fg:x="138889" fg:w="32"/><text x="66.1867%" y="175.50"></text></g><g><title>nvme_process_cq (32 samples, 0.02%)</title><rect x="65.9367%" y="149" width="0.0152%" height="15" fill="rgb(213,52,39)" fg:x="138889" fg:w="32"/><text x="66.1867%" y="159.50"></text></g><g><title>nvme_pci_complete_rq (31 samples, 0.01%)</title><rect x="65.9371%" y="133" width="0.0147%" height="15" fill="rgb(243,137,7)" fg:x="138890" fg:w="31"/><text x="66.1871%" y="143.50"></text></g><g><title>asm_common_interrupt (33 samples, 0.02%)</title><rect x="65.9367%" y="261" width="0.0157%" height="15" fill="rgb(230,79,13)" fg:x="138889" fg:w="33"/><text x="66.1867%" y="271.50"></text></g><g><title>common_interrupt (33 samples, 0.02%)</title><rect x="65.9367%" y="245" width="0.0157%" height="15" fill="rgb(247,105,23)" fg:x="138889" fg:w="33"/><text x="66.1867%" y="255.50"></text></g><g><title>__common_interrupt (33 samples, 0.02%)</title><rect x="65.9367%" y="229" width="0.0157%" height="15" fill="rgb(223,179,41)" fg:x="138889" fg:w="33"/><text x="66.1867%" y="239.50"></text></g><g><title>handle_edge_irq (33 samples, 0.02%)</title><rect x="65.9367%" y="213" width="0.0157%" height="15" fill="rgb(218,9,34)" fg:x="138889" fg:w="33"/><text x="66.1867%" y="223.50"></text></g><g><title>__lock_text_start (36 samples, 0.02%)</title><rect x="65.9362%" y="277" width="0.0171%" height="15" fill="rgb(222,106,8)" fg:x="138888" fg:w="36"/><text x="66.1862%" y="287.50"></text></g><g><title>__mod_zone_page_state (23 samples, 0.01%)</title><rect x="65.9618%" y="277" width="0.0109%" height="15" fill="rgb(211,220,0)" fg:x="138942" fg:w="23"/><text x="66.2118%" y="287.50"></text></g><g><title>__mod_memcg_state.part.0 (35 samples, 0.02%)</title><rect x="66.3582%" y="229" width="0.0166%" height="15" fill="rgb(229,52,16)" fg:x="139777" fg:w="35"/><text x="66.6082%" y="239.50"></text></g><g><title>cgroup_rstat_updated (27 samples, 0.01%)</title><rect x="66.3620%" y="213" width="0.0128%" height="15" fill="rgb(212,155,18)" fg:x="139785" fg:w="27"/><text x="66.6120%" y="223.50"></text></g><g><title>__mod_memcg_lruvec_state (173 samples, 0.08%)</title><rect x="66.2994%" y="245" width="0.0821%" height="15" fill="rgb(242,21,14)" fg:x="139653" fg:w="173"/><text x="66.5494%" y="255.50"></text></g><g><title>__mod_memcg_state.part.0 (24 samples, 0.01%)</title><rect x="66.3815%" y="245" width="0.0114%" height="15" fill="rgb(222,19,48)" fg:x="139826" fg:w="24"/><text x="66.6315%" y="255.50"></text></g><g><title>__mod_lruvec_state (265 samples, 0.13%)</title><rect x="66.2837%" y="261" width="0.1258%" height="15" fill="rgb(232,45,27)" fg:x="139620" fg:w="265"/><text x="66.5337%" y="271.50"></text></g><g><title>__mod_node_page_state (35 samples, 0.02%)</title><rect x="66.3929%" y="245" width="0.0166%" height="15" fill="rgb(249,103,42)" fg:x="139850" fg:w="35"/><text x="66.6429%" y="255.50"></text></g><g><title>__mod_node_page_state (39 samples, 0.02%)</title><rect x="66.4128%" y="261" width="0.0185%" height="15" fill="rgb(246,81,33)" fg:x="139892" fg:w="39"/><text x="66.6628%" y="271.50"></text></g><g><title>__mod_zone_page_state (24 samples, 0.01%)</title><rect x="66.4314%" y="261" width="0.0114%" height="15" fill="rgb(252,33,42)" fg:x="139931" fg:w="24"/><text x="66.6814%" y="271.50"></text></g><g><title>mem_cgroup_update_lru_size (44 samples, 0.02%)</title><rect x="66.4427%" y="261" width="0.0209%" height="15" fill="rgb(209,212,41)" fg:x="139955" fg:w="44"/><text x="66.6927%" y="271.50"></text></g><g><title>__pagevec_lru_add_fn (1,160 samples, 0.55%)</title><rect x="65.9727%" y="277" width="0.5507%" height="15" fill="rgb(207,154,6)" fg:x="138965" fg:w="1160"/><text x="66.2227%" y="287.50"></text></g><g><title>page_mapping (126 samples, 0.06%)</title><rect x="66.4636%" y="261" width="0.0598%" height="15" fill="rgb(223,64,47)" fg:x="139999" fg:w="126"/><text x="66.7136%" y="271.50"></text></g><g><title>_raw_spin_lock_irqsave (81 samples, 0.04%)</title><rect x="66.5329%" y="261" width="0.0385%" height="15" fill="rgb(211,161,38)" fg:x="140145" fg:w="81"/><text x="66.7829%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (57 samples, 0.03%)</title><rect x="66.5443%" y="245" width="0.0271%" height="15" fill="rgb(219,138,40)" fg:x="140169" fg:w="57"/><text x="66.7943%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (57 samples, 0.03%)</title><rect x="66.5443%" y="229" width="0.0271%" height="15" fill="rgb(241,228,46)" fg:x="140169" fg:w="57"/><text x="66.7943%" y="239.50"></text></g><g><title>lock_page_lruvec_irqsave (99 samples, 0.05%)</title><rect x="66.5249%" y="277" width="0.0470%" height="15" fill="rgb(223,209,38)" fg:x="140128" fg:w="99"/><text x="66.7749%" y="287.50"></text></g><g><title>page_mapping (22 samples, 0.01%)</title><rect x="66.5757%" y="277" width="0.0104%" height="15" fill="rgb(236,164,45)" fg:x="140235" fg:w="22"/><text x="66.8257%" y="287.50"></text></g><g><title>__pagevec_lru_add (1,689 samples, 0.80%)</title><rect x="65.8882%" y="293" width="0.8018%" height="15" fill="rgb(231,15,5)" fg:x="138787" fg:w="1689"/><text x="66.1382%" y="303.50"></text></g><g><title>release_pages (209 samples, 0.10%)</title><rect x="66.5909%" y="277" width="0.0992%" height="15" fill="rgb(252,35,15)" fg:x="140267" fg:w="209"/><text x="66.8409%" y="287.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1,946 samples, 0.92%)</title><rect x="65.7734%" y="325" width="0.9239%" height="15" fill="rgb(248,181,18)" fg:x="138545" fg:w="1946"/><text x="66.0234%" y="335.50"></text></g><g><title>lru_cache_add (1,916 samples, 0.91%)</title><rect x="65.7876%" y="309" width="0.9096%" height="15" fill="rgb(233,39,42)" fg:x="138575" fg:w="1916"/><text x="66.0376%" y="319.50"></text></g><g><title>nvme_complete_rq (25 samples, 0.01%)</title><rect x="67.1321%" y="149" width="0.0119%" height="15" fill="rgb(238,110,33)" fg:x="141407" fg:w="25"/><text x="67.3821%" y="159.50"></text></g><g><title>blk_mq_end_request (25 samples, 0.01%)</title><rect x="67.1321%" y="133" width="0.0119%" height="15" fill="rgb(233,195,10)" fg:x="141407" fg:w="25"/><text x="67.3821%" y="143.50"></text></g><g><title>blk_update_request (23 samples, 0.01%)</title><rect x="67.1330%" y="117" width="0.0109%" height="15" fill="rgb(254,105,3)" fg:x="141409" fg:w="23"/><text x="67.3830%" y="127.50"></text></g><g><title>handle_edge_irq (31 samples, 0.01%)</title><rect x="67.1297%" y="245" width="0.0147%" height="15" fill="rgb(221,225,9)" fg:x="141402" fg:w="31"/><text x="67.3797%" y="255.50"></text></g><g><title>handle_irq_event (31 samples, 0.01%)</title><rect x="67.1297%" y="229" width="0.0147%" height="15" fill="rgb(224,227,45)" fg:x="141402" fg:w="31"/><text x="67.3797%" y="239.50"></text></g><g><title>__handle_irq_event_percpu (31 samples, 0.01%)</title><rect x="67.1297%" y="213" width="0.0147%" height="15" fill="rgb(229,198,43)" fg:x="141402" fg:w="31"/><text x="67.3797%" y="223.50"></text></g><g><title>nvme_irq (31 samples, 0.01%)</title><rect x="67.1297%" y="197" width="0.0147%" height="15" fill="rgb(206,209,35)" fg:x="141402" fg:w="31"/><text x="67.3797%" y="207.50"></text></g><g><title>nvme_process_cq (31 samples, 0.01%)</title><rect x="67.1297%" y="181" width="0.0147%" height="15" fill="rgb(245,195,53)" fg:x="141402" fg:w="31"/><text x="67.3797%" y="191.50"></text></g><g><title>nvme_pci_complete_rq (27 samples, 0.01%)</title><rect x="67.1316%" y="165" width="0.0128%" height="15" fill="rgb(240,92,26)" fg:x="141406" fg:w="27"/><text x="67.3816%" y="175.50"></text></g><g><title>__common_interrupt (32 samples, 0.02%)</title><rect x="67.1297%" y="261" width="0.0152%" height="15" fill="rgb(207,40,23)" fg:x="141402" fg:w="32"/><text x="67.3797%" y="271.50"></text></g><g><title>asm_common_interrupt (34 samples, 0.02%)</title><rect x="67.1297%" y="293" width="0.0161%" height="15" fill="rgb(223,111,35)" fg:x="141402" fg:w="34"/><text x="67.3797%" y="303.50"></text></g><g><title>common_interrupt (34 samples, 0.02%)</title><rect x="67.1297%" y="277" width="0.0161%" height="15" fill="rgb(229,147,28)" fg:x="141402" fg:w="34"/><text x="67.3797%" y="287.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (297 samples, 0.14%)</title><rect x="67.1563%" y="293" width="0.1410%" height="15" fill="rgb(211,29,28)" fg:x="141458" fg:w="297"/><text x="67.4063%" y="303.50"></text></g><g><title>cgroup_rstat_updated (198 samples, 0.09%)</title><rect x="67.2033%" y="277" width="0.0940%" height="15" fill="rgb(228,72,33)" fg:x="141557" fg:w="198"/><text x="67.4533%" y="287.50"></text></g><g><title>page_counter_try_charge (76 samples, 0.04%)</title><rect x="67.6296%" y="277" width="0.0361%" height="15" fill="rgb(205,214,31)" fg:x="142455" fg:w="76"/><text x="67.8796%" y="287.50"></text></g><g><title>__mem_cgroup_charge (1,908 samples, 0.91%)</title><rect x="66.7627%" y="309" width="0.9058%" height="15" fill="rgb(224,111,15)" fg:x="140629" fg:w="1908"/><text x="67.0127%" y="319.50"></text></g><g><title>try_charge (763 samples, 0.36%)</title><rect x="67.3063%" y="293" width="0.3622%" height="15" fill="rgb(253,21,26)" fg:x="141774" fg:w="763"/><text x="67.5563%" y="303.50"></text></g><g><title>get_mem_cgroup_from_mm (314 samples, 0.15%)</title><rect x="67.6709%" y="309" width="0.1491%" height="15" fill="rgb(245,139,43)" fg:x="142542" fg:w="314"/><text x="67.9209%" y="319.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (28 samples, 0.01%)</title><rect x="67.8200%" y="309" width="0.0133%" height="15" fill="rgb(252,170,7)" fg:x="142856" fg:w="28"/><text x="68.0700%" y="319.50"></text></g><g><title>memcg_check_events (197 samples, 0.09%)</title><rect x="67.8333%" y="309" width="0.0935%" height="15" fill="rgb(231,118,14)" fg:x="142884" fg:w="197"/><text x="68.0833%" y="319.50"></text></g><g><title>rcu_read_unlock_strict (71 samples, 0.03%)</title><rect x="67.9268%" y="309" width="0.0337%" height="15" fill="rgb(238,83,0)" fg:x="143081" fg:w="71"/><text x="68.1768%" y="319.50"></text></g><g><title>mem_cgroup_charge (2,692 samples, 1.28%)</title><rect x="66.6972%" y="325" width="1.2780%" height="15" fill="rgb(221,39,39)" fg:x="140491" fg:w="2692"/><text x="66.9472%" y="335.50"></text></g><g><title>try_charge (31 samples, 0.01%)</title><rect x="67.9605%" y="309" width="0.0147%" height="15" fill="rgb(222,119,46)" fg:x="143152" fg:w="31"/><text x="68.2105%" y="319.50"></text></g><g><title>__mod_memcg_state.part.0 (24 samples, 0.01%)</title><rect x="68.1328%" y="261" width="0.0114%" height="15" fill="rgb(222,165,49)" fg:x="143515" fg:w="24"/><text x="68.3828%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (187 samples, 0.09%)</title><rect x="68.0649%" y="277" width="0.0888%" height="15" fill="rgb(219,113,52)" fg:x="143372" fg:w="187"/><text x="68.3149%" y="287.50"></text></g><g><title>__mod_memcg_state.part.0 (24 samples, 0.01%)</title><rect x="68.1537%" y="277" width="0.0114%" height="15" fill="rgb(214,7,15)" fg:x="143559" fg:w="24"/><text x="68.4037%" y="287.50"></text></g><g><title>__mod_node_page_state (91 samples, 0.04%)</title><rect x="68.1651%" y="277" width="0.0432%" height="15" fill="rgb(235,32,4)" fg:x="143583" fg:w="91"/><text x="68.4151%" y="287.50"></text></g><g><title>__mod_lruvec_state (339 samples, 0.16%)</title><rect x="68.0488%" y="293" width="0.1609%" height="15" fill="rgb(238,90,54)" fg:x="143338" fg:w="339"/><text x="68.2988%" y="303.50"></text></g><g><title>__mod_node_page_state (38 samples, 0.02%)</title><rect x="68.2126%" y="293" width="0.0180%" height="15" fill="rgb(213,208,19)" fg:x="143683" fg:w="38"/><text x="68.4626%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (467 samples, 0.22%)</title><rect x="68.0137%" y="309" width="0.2217%" height="15" fill="rgb(233,156,4)" fg:x="143264" fg:w="467"/><text x="68.2637%" y="319.50"></text></g><g><title>__page_set_anon_rmap (41 samples, 0.02%)</title><rect x="68.2373%" y="309" width="0.0195%" height="15" fill="rgb(207,194,5)" fg:x="143735" fg:w="41"/><text x="68.4873%" y="319.50"></text></g><g><title>page_add_new_anon_rmap (595 samples, 0.28%)</title><rect x="67.9781%" y="325" width="0.2825%" height="15" fill="rgb(206,111,30)" fg:x="143189" fg:w="595"/><text x="68.2281%" y="335.50"></text></g><g><title>pmd_page_vaddr (34 samples, 0.02%)</title><rect x="68.2667%" y="325" width="0.0161%" height="15" fill="rgb(243,70,54)" fg:x="143797" fg:w="34"/><text x="68.5167%" y="335.50"></text></g><g><title>pmd_pfn (30 samples, 0.01%)</title><rect x="68.2829%" y="325" width="0.0142%" height="15" fill="rgb(242,28,8)" fg:x="143831" fg:w="30"/><text x="68.5329%" y="335.50"></text></g><g><title>pmd_val (31 samples, 0.01%)</title><rect x="68.2971%" y="325" width="0.0147%" height="15" fill="rgb(219,106,18)" fg:x="143861" fg:w="31"/><text x="68.5471%" y="335.50"></text></g><g><title>policy_node (22 samples, 0.01%)</title><rect x="68.3118%" y="325" width="0.0104%" height="15" fill="rgb(244,222,10)" fg:x="143892" fg:w="22"/><text x="68.5618%" y="335.50"></text></g><g><title>do_anonymous_page (12,873 samples, 6.11%)</title><rect x="62.2299%" y="341" width="6.1114%" height="15" fill="rgb(236,179,52)" fg:x="131081" fg:w="12873"/><text x="62.4799%" y="351.50">do_anony..</text></g><g><title>pfn_pte (24 samples, 0.01%)</title><rect x="68.3564%" y="341" width="0.0114%" height="15" fill="rgb(213,23,39)" fg:x="143986" fg:w="24"/><text x="68.6064%" y="351.50"></text></g><g><title>pmd_page_vaddr (52 samples, 0.02%)</title><rect x="68.3678%" y="341" width="0.0247%" height="15" fill="rgb(238,48,10)" fg:x="144010" fg:w="52"/><text x="68.6178%" y="351.50"></text></g><g><title>pmd_pfn (23 samples, 0.01%)</title><rect x="68.3925%" y="341" width="0.0109%" height="15" fill="rgb(251,196,23)" fg:x="144062" fg:w="23"/><text x="68.6425%" y="351.50"></text></g><g><title>pmd_val (56 samples, 0.03%)</title><rect x="68.4034%" y="341" width="0.0266%" height="15" fill="rgb(250,152,24)" fg:x="144085" fg:w="56"/><text x="68.6534%" y="351.50"></text></g><g><title>handle_pte_fault (13,475 samples, 6.40%)</title><rect x="62.0390%" y="357" width="6.3972%" height="15" fill="rgb(209,150,17)" fg:x="130679" fg:w="13475"/><text x="62.2890%" y="367.50">handle_p..</text></g><g><title>pmd_val (37 samples, 0.02%)</title><rect x="68.4424%" y="357" width="0.0176%" height="15" fill="rgb(234,202,34)" fg:x="144167" fg:w="37"/><text x="68.6924%" y="367.50"></text></g><g><title>__handle_mm_fault (14,179 samples, 6.73%)</title><rect x="61.7414%" y="373" width="6.7314%" height="15" fill="rgb(253,148,53)" fg:x="130052" fg:w="14179"/><text x="61.9914%" y="383.50">__handle_..</text></g><g><title>pud_val (27 samples, 0.01%)</title><rect x="68.4599%" y="357" width="0.0128%" height="15" fill="rgb(218,129,16)" fg:x="144204" fg:w="27"/><text x="68.7099%" y="367.50"></text></g><g><title>handle_pte_fault (24 samples, 0.01%)</title><rect x="68.4832%" y="373" width="0.0114%" height="15" fill="rgb(216,85,19)" fg:x="144253" fg:w="24"/><text x="68.7332%" y="383.50"></text></g><g><title>mem_cgroup_from_task (27 samples, 0.01%)</title><rect x="68.4946%" y="373" width="0.0128%" height="15" fill="rgb(235,228,7)" fg:x="144277" fg:w="27"/><text x="68.7446%" y="383.50"></text></g><g><title>pmd_val (23 samples, 0.01%)</title><rect x="68.5207%" y="373" width="0.0109%" height="15" fill="rgb(245,175,0)" fg:x="144332" fg:w="23"/><text x="68.7707%" y="383.50"></text></g><g><title>pud_val (48 samples, 0.02%)</title><rect x="68.5316%" y="373" width="0.0228%" height="15" fill="rgb(208,168,36)" fg:x="144355" fg:w="48"/><text x="68.7816%" y="383.50"></text></g><g><title>handle_mm_fault (14,707 samples, 6.98%)</title><rect x="61.5861%" y="389" width="6.9821%" height="15" fill="rgb(246,171,24)" fg:x="129725" fg:w="14707"/><text x="61.8361%" y="399.50">handle_mm..</text></g><g><title>mem_cgroup_from_task (32 samples, 0.02%)</title><rect x="68.5682%" y="389" width="0.0152%" height="15" fill="rgb(215,142,24)" fg:x="144432" fg:w="32"/><text x="68.8182%" y="399.50"></text></g><g><title>up_read (196 samples, 0.09%)</title><rect x="68.5919%" y="389" width="0.0930%" height="15" fill="rgb(250,187,7)" fg:x="144482" fg:w="196"/><text x="68.8419%" y="399.50"></text></g><g><title>do_user_addr_fault (15,630 samples, 7.42%)</title><rect x="61.2728%" y="405" width="7.4202%" height="15" fill="rgb(228,66,33)" fg:x="129065" fg:w="15630"/><text x="61.5228%" y="415.50">do_user_ad..</text></g><g><title>down_read_trylock (23 samples, 0.01%)</title><rect x="68.6930%" y="405" width="0.0109%" height="15" fill="rgb(234,215,21)" fg:x="144695" fg:w="23"/><text x="68.9430%" y="415.50"></text></g><g><title>exc_page_fault (15,891 samples, 7.54%)</title><rect x="61.1888%" y="421" width="7.5442%" height="15" fill="rgb(222,191,20)" fg:x="128888" fg:w="15891"/><text x="61.4388%" y="431.50">exc_page_f..</text></g><g><title>asm_exc_page_fault (15,927 samples, 7.56%)</title><rect x="61.1840%" y="437" width="7.5612%" height="15" fill="rgb(245,79,54)" fg:x="128878" fg:w="15927"/><text x="61.4340%" y="447.50">asm_exc_pa..</text></g><g><title>asm_sysvec_apic_timer_interrupt (25 samples, 0.01%)</title><rect x="68.7453%" y="437" width="0.0119%" height="15" fill="rgb(240,10,37)" fg:x="144805" fg:w="25"/><text x="68.9953%" y="447.50"></text></g><g><title>sysvec_apic_timer_interrupt (25 samples, 0.01%)</title><rect x="68.7453%" y="421" width="0.0119%" height="15" fill="rgb(214,192,32)" fg:x="144805" fg:w="25"/><text x="68.9953%" y="431.50"></text></g><g><title>copy_user_enhanced_fast_string (25,731 samples, 12.22%)</title><rect x="56.5420%" y="453" width="12.2156%" height="15" fill="rgb(209,36,54)" fg:x="119100" fg:w="25731"/><text x="56.7920%" y="463.50">copy_user_enhanced..</text></g><g><title>error_entry (220 samples, 0.10%)</title><rect x="68.7581%" y="453" width="0.1044%" height="15" fill="rgb(220,10,11)" fg:x="144832" fg:w="220"/><text x="69.0081%" y="463.50"></text></g><g><title>exc_page_fault (22 samples, 0.01%)</title><rect x="68.8677%" y="453" width="0.0104%" height="15" fill="rgb(221,106,17)" fg:x="145063" fg:w="22"/><text x="69.1177%" y="463.50"></text></g><g><title>__xas_next (22 samples, 0.01%)</title><rect x="68.8848%" y="437" width="0.0104%" height="15" fill="rgb(251,142,44)" fg:x="145099" fg:w="22"/><text x="69.1348%" y="447.50"></text></g><g><title>__common_interrupt (22 samples, 0.01%)</title><rect x="69.3643%" y="389" width="0.0104%" height="15" fill="rgb(238,13,15)" fg:x="146109" fg:w="22"/><text x="69.6143%" y="399.50"></text></g><g><title>asm_common_interrupt (23 samples, 0.01%)</title><rect x="69.3643%" y="421" width="0.0109%" height="15" fill="rgb(208,107,27)" fg:x="146109" fg:w="23"/><text x="69.6143%" y="431.50"></text></g><g><title>common_interrupt (23 samples, 0.01%)</title><rect x="69.3643%" y="405" width="0.0109%" height="15" fill="rgb(205,136,37)" fg:x="146109" fg:w="23"/><text x="69.6143%" y="415.50"></text></g><g><title>xas_load (62 samples, 0.03%)</title><rect x="69.3771%" y="421" width="0.0294%" height="15" fill="rgb(250,205,27)" fg:x="146136" fg:w="62"/><text x="69.6271%" y="431.50"></text></g><g><title>filemap_get_read_batch (1,085 samples, 0.52%)</title><rect x="68.8953%" y="437" width="0.5151%" height="15" fill="rgb(210,80,43)" fg:x="145121" fg:w="1085"/><text x="69.1453%" y="447.50"></text></g><g><title>clear_page_erms (57 samples, 0.03%)</title><rect x="69.7650%" y="309" width="0.0271%" height="15" fill="rgb(247,160,36)" fg:x="146953" fg:w="57"/><text x="70.0150%" y="319.50"></text></g><g><title>get_page_from_freelist (76 samples, 0.04%)</title><rect x="69.7622%" y="325" width="0.0361%" height="15" fill="rgb(234,13,49)" fg:x="146947" fg:w="76"/><text x="70.0122%" y="335.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (92 samples, 0.04%)</title><rect x="69.7593%" y="341" width="0.0437%" height="15" fill="rgb(234,122,0)" fg:x="146941" fg:w="92"/><text x="70.0093%" y="351.50"></text></g><g><title>__cond_resched (22 samples, 0.01%)</title><rect x="69.8030%" y="341" width="0.0104%" height="15" fill="rgb(207,146,38)" fg:x="147033" fg:w="22"/><text x="70.0530%" y="351.50"></text></g><g><title>__next_zones_zonelist (106 samples, 0.05%)</title><rect x="69.8134%" y="341" width="0.0503%" height="15" fill="rgb(207,177,25)" fg:x="147055" fg:w="106"/><text x="70.0634%" y="351.50"></text></g><g><title>__inc_numa_state (59 samples, 0.03%)</title><rect x="69.9962%" y="325" width="0.0280%" height="15" fill="rgb(211,178,42)" fg:x="147440" fg:w="59"/><text x="70.2462%" y="335.50"></text></g><g><title>clear_page_erms (3,182 samples, 1.51%)</title><rect x="70.0351%" y="325" width="1.5106%" height="15" fill="rgb(230,69,54)" fg:x="147522" fg:w="3182"/><text x="70.2851%" y="335.50"></text></g><g><title>kernel_init_free_pages (66 samples, 0.03%)</title><rect x="71.5458%" y="325" width="0.0313%" height="15" fill="rgb(214,135,41)" fg:x="150704" fg:w="66"/><text x="71.7958%" y="335.50"></text></g><g><title>rmqueue (1,532 samples, 0.73%)</title><rect x="71.5771%" y="325" width="0.7273%" height="15" fill="rgb(237,67,25)" fg:x="150770" fg:w="1532"/><text x="71.8271%" y="335.50"></text></g><g><title>rmqueue_bulk.constprop.0 (1,129 samples, 0.54%)</title><rect x="71.7684%" y="309" width="0.5360%" height="15" fill="rgb(222,189,50)" fg:x="151173" fg:w="1129"/><text x="72.0184%" y="319.50"></text></g><g><title>get_page_from_freelist (5,134 samples, 2.44%)</title><rect x="69.8680%" y="341" width="2.4373%" height="15" fill="rgb(245,148,34)" fg:x="147170" fg:w="5134"/><text x="70.1180%" y="351.50">ge..</text></g><g><title>__alloc_pages (5,715 samples, 2.71%)</title><rect x="69.6140%" y="357" width="2.7132%" height="15" fill="rgb(222,29,6)" fg:x="146635" fg:w="5715"/><text x="69.8640%" y="367.50">__..</text></g><g><title>policy_nodemask (27 samples, 0.01%)</title><rect x="72.3590%" y="357" width="0.0128%" height="15" fill="rgb(221,189,43)" fg:x="152417" fg:w="27"/><text x="72.6090%" y="367.50"></text></g><g><title>alloc_pages (5,937 samples, 2.82%)</title><rect x="69.5642%" y="373" width="2.8186%" height="15" fill="rgb(207,36,27)" fg:x="146530" fg:w="5937"/><text x="69.8142%" y="383.50">al..</text></g><g><title>should_fail_alloc_page (23 samples, 0.01%)</title><rect x="72.3718%" y="357" width="0.0109%" height="15" fill="rgb(217,90,24)" fg:x="152444" fg:w="23"/><text x="72.6218%" y="367.50"></text></g><g><title>__page_cache_alloc (6,018 samples, 2.86%)</title><rect x="69.5357%" y="389" width="2.8570%" height="15" fill="rgb(224,66,35)" fg:x="146470" fg:w="6018"/><text x="69.7857%" y="399.50">__..</text></g><g><title>PageHuge (43 samples, 0.02%)</title><rect x="72.4587%" y="373" width="0.0204%" height="15" fill="rgb(221,13,50)" fg:x="152627" fg:w="43"/><text x="72.7087%" y="383.50"></text></g><g><title>PageHuge (24 samples, 0.01%)</title><rect x="73.5630%" y="357" width="0.0114%" height="15" fill="rgb(236,68,49)" fg:x="154953" fg:w="24"/><text x="73.8130%" y="367.50"></text></g><g><title>__mod_memcg_state.part.0 (34 samples, 0.02%)</title><rect x="73.6964%" y="309" width="0.0161%" height="15" fill="rgb(229,146,28)" fg:x="155234" fg:w="34"/><text x="73.9464%" y="319.50"></text></g><g><title>cgroup_rstat_updated (27 samples, 0.01%)</title><rect x="73.6997%" y="293" width="0.0128%" height="15" fill="rgb(225,31,38)" fg:x="155241" fg:w="27"/><text x="73.9497%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (167 samples, 0.08%)</title><rect x="73.6389%" y="325" width="0.0793%" height="15" fill="rgb(250,208,3)" fg:x="155113" fg:w="167"/><text x="73.8889%" y="335.50"></text></g><g><title>__mod_memcg_state.part.0 (24 samples, 0.01%)</title><rect x="73.7182%" y="325" width="0.0114%" height="15" fill="rgb(246,54,23)" fg:x="155280" fg:w="24"/><text x="73.9682%" y="335.50"></text></g><g><title>__mod_lruvec_state (339 samples, 0.16%)</title><rect x="73.6228%" y="341" width="0.1609%" height="15" fill="rgb(243,76,11)" fg:x="155079" fg:w="339"/><text x="73.8728%" y="351.50"></text></g><g><title>__mod_node_page_state (114 samples, 0.05%)</title><rect x="73.7296%" y="325" width="0.0541%" height="15" fill="rgb(245,21,50)" fg:x="155304" fg:w="114"/><text x="73.9796%" y="335.50"></text></g><g><title>__mod_node_page_state (33 samples, 0.02%)</title><rect x="73.7861%" y="341" width="0.0157%" height="15" fill="rgb(228,9,43)" fg:x="155423" fg:w="33"/><text x="74.0361%" y="351.50"></text></g><g><title>__mod_lruvec_page_state (478 samples, 0.23%)</title><rect x="73.5777%" y="357" width="0.2269%" height="15" fill="rgb(208,100,47)" fg:x="154984" fg:w="478"/><text x="73.8277%" y="367.50"></text></g><g><title>_raw_spin_lock_irq (337 samples, 0.16%)</title><rect x="73.8098%" y="357" width="0.1600%" height="15" fill="rgb(232,26,8)" fg:x="155473" fg:w="337"/><text x="74.0598%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath (153 samples, 0.07%)</title><rect x="73.8972%" y="341" width="0.0726%" height="15" fill="rgb(216,166,38)" fg:x="155657" fg:w="153"/><text x="74.1472%" y="351.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (153 samples, 0.07%)</title><rect x="73.8972%" y="325" width="0.0726%" height="15" fill="rgb(251,202,51)" fg:x="155657" fg:w="153"/><text x="74.1472%" y="335.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (84 samples, 0.04%)</title><rect x="74.0961%" y="325" width="0.0399%" height="15" fill="rgb(254,216,34)" fg:x="156076" fg:w="84"/><text x="74.3461%" y="335.50"></text></g><g><title>cgroup_rstat_updated (35 samples, 0.02%)</title><rect x="74.1194%" y="309" width="0.0166%" height="15" fill="rgb(251,32,27)" fg:x="156125" fg:w="35"/><text x="74.3694%" y="319.50"></text></g><g><title>page_counter_try_charge (54 samples, 0.03%)</title><rect x="74.2276%" y="309" width="0.0256%" height="15" fill="rgb(208,127,28)" fg:x="156353" fg:w="54"/><text x="74.4776%" y="319.50"></text></g><g><title>__mem_cgroup_charge (496 samples, 0.24%)</title><rect x="74.0216%" y="341" width="0.2355%" height="15" fill="rgb(224,137,22)" fg:x="155919" fg:w="496"/><text x="74.2716%" y="351.50"></text></g><g><title>try_charge (243 samples, 0.12%)</title><rect x="74.1417%" y="325" width="0.1154%" height="15" fill="rgb(254,70,32)" fg:x="156172" fg:w="243"/><text x="74.3917%" y="335.50"></text></g><g><title>get_mem_cgroup_from_mm (90 samples, 0.04%)</title><rect x="74.2580%" y="341" width="0.0427%" height="15" fill="rgb(229,75,37)" fg:x="156417" fg:w="90"/><text x="74.5080%" y="351.50"></text></g><g><title>memcg_check_events (23 samples, 0.01%)</title><rect x="74.3073%" y="341" width="0.0109%" height="15" fill="rgb(252,64,23)" fg:x="156521" fg:w="23"/><text x="74.5573%" y="351.50"></text></g><g><title>rcu_read_unlock_strict (49 samples, 0.02%)</title><rect x="74.3183%" y="341" width="0.0233%" height="15" fill="rgb(232,162,48)" fg:x="156544" fg:w="49"/><text x="74.5683%" y="351.50"></text></g><g><title>mem_cgroup_charge (749 samples, 0.36%)</title><rect x="73.9921%" y="357" width="0.3556%" height="15" fill="rgb(246,160,12)" fg:x="155857" fg:w="749"/><text x="74.2421%" y="367.50"></text></g><g><title>rcu_read_unlock_strict (43 samples, 0.02%)</title><rect x="74.3482%" y="357" width="0.0204%" height="15" fill="rgb(247,166,0)" fg:x="156607" fg:w="43"/><text x="74.5982%" y="367.50"></text></g><g><title>xas_load (809 samples, 0.38%)</title><rect x="74.4635%" y="341" width="0.3841%" height="15" fill="rgb(249,219,21)" fg:x="156850" fg:w="809"/><text x="74.7135%" y="351.50"></text></g><g><title>xa_get_order (1,111 samples, 0.53%)</title><rect x="74.3771%" y="357" width="0.5274%" height="15" fill="rgb(205,209,3)" fg:x="156668" fg:w="1111"/><text x="74.6271%" y="367.50"></text></g><g><title>xas_start (120 samples, 0.06%)</title><rect x="74.8476%" y="341" width="0.0570%" height="15" fill="rgb(243,44,1)" fg:x="157659" fg:w="120"/><text x="75.0976%" y="351.50"></text></g><g><title>xas_find_conflict (358 samples, 0.17%)</title><rect x="74.9051%" y="357" width="0.1700%" height="15" fill="rgb(206,159,16)" fg:x="157780" fg:w="358"/><text x="75.1551%" y="367.50"></text></g><g><title>xas_load (32 samples, 0.02%)</title><rect x="75.0750%" y="357" width="0.0152%" height="15" fill="rgb(244,77,30)" fg:x="158138" fg:w="32"/><text x="75.3250%" y="367.50"></text></g><g><title>xas_nomem (29 samples, 0.01%)</title><rect x="75.0902%" y="357" width="0.0138%" height="15" fill="rgb(218,69,12)" fg:x="158170" fg:w="29"/><text x="75.3402%" y="367.50"></text></g><g><title>xas_start (45 samples, 0.02%)</title><rect x="75.1040%" y="357" width="0.0214%" height="15" fill="rgb(212,87,7)" fg:x="158199" fg:w="45"/><text x="75.3540%" y="367.50"></text></g><g><title>workingset_update_node (84 samples, 0.04%)</title><rect x="75.2288%" y="341" width="0.0399%" height="15" fill="rgb(245,114,25)" fg:x="158462" fg:w="84"/><text x="75.4788%" y="351.50"></text></g><g><title>list_lru_del (46 samples, 0.02%)</title><rect x="75.2469%" y="325" width="0.0218%" height="15" fill="rgb(210,61,42)" fg:x="158500" fg:w="46"/><text x="75.4969%" y="335.50"></text></g><g><title>mem_cgroup_from_obj (22 samples, 0.01%)</title><rect x="75.2583%" y="309" width="0.0104%" height="15" fill="rgb(211,52,33)" fg:x="158524" fg:w="22"/><text x="75.5083%" y="319.50"></text></g><g><title>__add_to_page_cache_locked (5,944 samples, 2.82%)</title><rect x="72.4791%" y="373" width="2.8219%" height="15" fill="rgb(234,58,33)" fg:x="152670" fg:w="5944"/><text x="72.7291%" y="383.50">__..</text></g><g><title>xas_store (370 samples, 0.18%)</title><rect x="75.1253%" y="357" width="0.1757%" height="15" fill="rgb(220,115,36)" fg:x="158244" fg:w="370"/><text x="75.3753%" y="367.50"></text></g><g><title>xas_create (68 samples, 0.03%)</title><rect x="75.2687%" y="341" width="0.0323%" height="15" fill="rgb(243,153,54)" fg:x="158546" fg:w="68"/><text x="75.5187%" y="351.50"></text></g><g><title>__mod_zone_page_state (38 samples, 0.02%)</title><rect x="75.4838%" y="341" width="0.0180%" height="15" fill="rgb(251,47,18)" fg:x="158999" fg:w="38"/><text x="75.7338%" y="351.50"></text></g><g><title>__mod_memcg_state.part.0 (30 samples, 0.01%)</title><rect x="75.8655%" y="293" width="0.0142%" height="15" fill="rgb(242,102,42)" fg:x="159803" fg:w="30"/><text x="76.1155%" y="303.50"></text></g><g><title>cgroup_rstat_updated (27 samples, 0.01%)</title><rect x="75.8669%" y="277" width="0.0128%" height="15" fill="rgb(234,31,38)" fg:x="159806" fg:w="27"/><text x="76.1169%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (132 samples, 0.06%)</title><rect x="75.8246%" y="309" width="0.0627%" height="15" fill="rgb(221,117,51)" fg:x="159717" fg:w="132"/><text x="76.0746%" y="319.50"></text></g><g><title>__mod_memcg_state.part.0 (31 samples, 0.01%)</title><rect x="75.8873%" y="309" width="0.0147%" height="15" fill="rgb(212,20,18)" fg:x="159849" fg:w="31"/><text x="76.1373%" y="319.50"></text></g><g><title>__mod_lruvec_state (237 samples, 0.11%)</title><rect x="75.8047%" y="325" width="0.1125%" height="15" fill="rgb(245,133,36)" fg:x="159675" fg:w="237"/><text x="76.0547%" y="335.50"></text></g><g><title>__mod_node_page_state (32 samples, 0.02%)</title><rect x="75.9020%" y="309" width="0.0152%" height="15" fill="rgb(212,6,19)" fg:x="159880" fg:w="32"/><text x="76.1520%" y="319.50"></text></g><g><title>mem_cgroup_update_lru_size (42 samples, 0.02%)</title><rect x="75.9357%" y="325" width="0.0199%" height="15" fill="rgb(218,1,36)" fg:x="159951" fg:w="42"/><text x="76.1857%" y="335.50"></text></g><g><title>page_mapping (124 samples, 0.06%)</title><rect x="75.9557%" y="325" width="0.0589%" height="15" fill="rgb(246,84,54)" fg:x="159993" fg:w="124"/><text x="76.2057%" y="335.50"></text></g><g><title>__pagevec_lru_add_fn (1,083 samples, 0.51%)</title><rect x="75.5018%" y="341" width="0.5141%" height="15" fill="rgb(242,110,6)" fg:x="159037" fg:w="1083"/><text x="75.7518%" y="351.50"></text></g><g><title>lock_page_lruvec_irqsave (87 samples, 0.04%)</title><rect x="76.0179%" y="341" width="0.0413%" height="15" fill="rgb(214,47,5)" fg:x="160124" fg:w="87"/><text x="76.2679%" y="351.50"></text></g><g><title>_raw_spin_lock_irqsave (74 samples, 0.04%)</title><rect x="76.0240%" y="325" width="0.0351%" height="15" fill="rgb(218,159,25)" fg:x="160137" fg:w="74"/><text x="76.2740%" y="335.50"></text></g><g><title>native_queued_spin_lock_slowpath (47 samples, 0.02%)</title><rect x="76.0368%" y="309" width="0.0223%" height="15" fill="rgb(215,211,28)" fg:x="160164" fg:w="47"/><text x="76.2868%" y="319.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (47 samples, 0.02%)</title><rect x="76.0368%" y="293" width="0.0223%" height="15" fill="rgb(238,59,32)" fg:x="160164" fg:w="47"/><text x="76.2868%" y="303.50"></text></g><g><title>page_mapping (30 samples, 0.01%)</title><rect x="76.0625%" y="341" width="0.0142%" height="15" fill="rgb(226,82,3)" fg:x="160218" fg:w="30"/><text x="76.3125%" y="351.50"></text></g><g><title>__pagevec_lru_add (1,597 samples, 0.76%)</title><rect x="75.4220%" y="357" width="0.7582%" height="15" fill="rgb(240,164,32)" fg:x="158869" fg:w="1597"/><text x="75.6720%" y="367.50"></text></g><g><title>release_pages (217 samples, 0.10%)</title><rect x="76.0772%" y="341" width="0.1030%" height="15" fill="rgb(232,46,7)" fg:x="160249" fg:w="217"/><text x="76.3272%" y="351.50"></text></g><g><title>lru_cache_add (1,820 samples, 0.86%)</title><rect x="75.3228%" y="373" width="0.8640%" height="15" fill="rgb(229,129,53)" fg:x="158660" fg:w="1820"/><text x="75.5728%" y="383.50"></text></g><g><title>idr_find (241 samples, 0.11%)</title><rect x="76.3853%" y="341" width="0.1144%" height="15" fill="rgb(234,188,29)" fg:x="160898" fg:w="241"/><text x="76.6353%" y="351.50"></text></g><g><title>radix_tree_lookup (223 samples, 0.11%)</title><rect x="76.3938%" y="325" width="0.1059%" height="15" fill="rgb(246,141,4)" fg:x="160916" fg:w="223"/><text x="76.6438%" y="335.50"></text></g><g><title>__radix_tree_lookup (223 samples, 0.11%)</title><rect x="76.3938%" y="309" width="0.1059%" height="15" fill="rgb(229,23,39)" fg:x="160916" fg:w="223"/><text x="76.6438%" y="319.50"></text></g><g><title>mem_cgroup_from_id (273 samples, 0.13%)</title><rect x="76.3777%" y="357" width="0.1296%" height="15" fill="rgb(206,12,3)" fg:x="160882" fg:w="273"/><text x="76.6277%" y="367.50"></text></g><g><title>mem_cgroup_get_nr_swap_pages (89 samples, 0.04%)</title><rect x="76.5073%" y="357" width="0.0423%" height="15" fill="rgb(252,226,20)" fg:x="161155" fg:w="89"/><text x="76.7573%" y="367.50"></text></g><g><title>__mod_memcg_state.part.0 (40 samples, 0.02%)</title><rect x="76.6640%" y="309" width="0.0190%" height="15" fill="rgb(216,123,35)" fg:x="161485" fg:w="40"/><text x="76.9140%" y="319.50"></text></g><g><title>cgroup_rstat_updated (35 samples, 0.02%)</title><rect x="76.6664%" y="293" width="0.0166%" height="15" fill="rgb(212,68,40)" fg:x="161490" fg:w="35"/><text x="76.9164%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (174 samples, 0.08%)</title><rect x="76.6056%" y="325" width="0.0826%" height="15" fill="rgb(254,125,32)" fg:x="161362" fg:w="174"/><text x="76.8556%" y="335.50"></text></g><g><title>__mod_memcg_state.part.0 (33 samples, 0.02%)</title><rect x="76.6882%" y="325" width="0.0157%" height="15" fill="rgb(253,97,22)" fg:x="161536" fg:w="33"/><text x="76.9382%" y="335.50"></text></g><g><title>__mod_lruvec_state (276 samples, 0.13%)</title><rect x="76.5880%" y="341" width="0.1310%" height="15" fill="rgb(241,101,14)" fg:x="161325" fg:w="276"/><text x="76.8380%" y="351.50"></text></g><g><title>__mod_node_page_state (32 samples, 0.02%)</title><rect x="76.7039%" y="325" width="0.0152%" height="15" fill="rgb(238,103,29)" fg:x="161569" fg:w="32"/><text x="76.9539%" y="335.50"></text></g><g><title>__mod_node_page_state (23 samples, 0.01%)</title><rect x="76.7224%" y="341" width="0.0109%" height="15" fill="rgb(233,195,47)" fg:x="161608" fg:w="23"/><text x="76.9724%" y="351.50"></text></g><g><title>mod_lruvec_state.constprop.0 (392 samples, 0.19%)</title><rect x="76.5496%" y="357" width="0.1861%" height="15" fill="rgb(246,218,30)" fg:x="161244" fg:w="392"/><text x="76.7996%" y="367.50"></text></g><g><title>workingset_refault (1,098 samples, 0.52%)</title><rect x="76.2163%" y="373" width="0.5213%" height="15" fill="rgb(219,145,47)" fg:x="160542" fg:w="1098"/><text x="76.4663%" y="383.50"></text></g><g><title>xa_get_order (27 samples, 0.01%)</title><rect x="76.7376%" y="373" width="0.0128%" height="15" fill="rgb(243,12,26)" fg:x="161640" fg:w="27"/><text x="76.9876%" y="383.50"></text></g><g><title>xas_find_conflict (45 samples, 0.02%)</title><rect x="76.7504%" y="373" width="0.0214%" height="15" fill="rgb(214,87,16)" fg:x="161667" fg:w="45"/><text x="77.0004%" y="383.50"></text></g><g><title>add_to_page_cache_lru (9,240 samples, 4.39%)</title><rect x="72.3927%" y="389" width="4.3866%" height="15" fill="rgb(208,99,42)" fg:x="152488" fg:w="9240"/><text x="72.6427%" y="399.50">add_t..</text></g><g><title>alloc_pages (23 samples, 0.01%)</title><rect x="76.7793%" y="389" width="0.0109%" height="15" fill="rgb(253,99,2)" fg:x="161728" fg:w="23"/><text x="77.0293%" y="399.50"></text></g><g><title>lru_cache_add (22 samples, 0.01%)</title><rect x="76.7922%" y="389" width="0.0104%" height="15" fill="rgb(220,168,23)" fg:x="161755" fg:w="22"/><text x="77.0422%" y="399.50"></text></g><g><title>__blk_bios_map_sg (36 samples, 0.02%)</title><rect x="76.8130%" y="229" width="0.0171%" height="15" fill="rgb(242,38,24)" fg:x="161799" fg:w="36"/><text x="77.0630%" y="239.50"></text></g><g><title>__blk_rq_map_sg (39 samples, 0.02%)</title><rect x="76.8126%" y="245" width="0.0185%" height="15" fill="rgb(225,182,9)" fg:x="161798" fg:w="39"/><text x="77.0626%" y="255.50"></text></g><g><title>nvme_pci_setup_prps (38 samples, 0.02%)</title><rect x="76.8477%" y="245" width="0.0180%" height="15" fill="rgb(243,178,37)" fg:x="161872" fg:w="38"/><text x="77.0977%" y="255.50"></text></g><g><title>nvme_map_data (120 samples, 0.06%)</title><rect x="76.8121%" y="261" width="0.0570%" height="15" fill="rgb(232,139,19)" fg:x="161797" fg:w="120"/><text x="77.0621%" y="271.50"></text></g><g><title>__blk_mq_try_issue_directly (133 samples, 0.06%)</title><rect x="76.8078%" y="293" width="0.0631%" height="15" fill="rgb(225,201,24)" fg:x="161788" fg:w="133"/><text x="77.0578%" y="303.50"></text></g><g><title>nvme_queue_rq (132 samples, 0.06%)</title><rect x="76.8083%" y="277" width="0.0627%" height="15" fill="rgb(221,47,46)" fg:x="161789" fg:w="132"/><text x="77.0583%" y="287.50"></text></g><g><title>blk_finish_plug (138 samples, 0.07%)</title><rect x="76.8059%" y="373" width="0.0655%" height="15" fill="rgb(249,23,13)" fg:x="161784" fg:w="138"/><text x="77.0559%" y="383.50"></text></g><g><title>blk_flush_plug_list (137 samples, 0.07%)</title><rect x="76.8064%" y="357" width="0.0650%" height="15" fill="rgb(219,9,5)" fg:x="161785" fg:w="137"/><text x="77.0564%" y="367.50"></text></g><g><title>blk_mq_flush_plug_list (136 samples, 0.06%)</title><rect x="76.8069%" y="341" width="0.0646%" height="15" fill="rgb(254,171,16)" fg:x="161786" fg:w="136"/><text x="77.0569%" y="351.50"></text></g><g><title>blk_mq_sched_insert_requests (135 samples, 0.06%)</title><rect x="76.8073%" y="325" width="0.0641%" height="15" fill="rgb(230,171,20)" fg:x="161787" fg:w="135"/><text x="77.0573%" y="335.50"></text></g><g><title>blk_mq_try_issue_list_directly (135 samples, 0.06%)</title><rect x="76.8073%" y="309" width="0.0641%" height="15" fill="rgb(210,71,41)" fg:x="161787" fg:w="135"/><text x="77.0573%" y="319.50"></text></g><g><title>__bio_add_page (41 samples, 0.02%)</title><rect x="77.3329%" y="325" width="0.0195%" height="15" fill="rgb(206,173,20)" fg:x="162894" fg:w="41"/><text x="77.5829%" y="335.50"></text></g><g><title>__bio_try_merge_page (127 samples, 0.06%)</title><rect x="77.3524%" y="325" width="0.0603%" height="15" fill="rgb(233,88,34)" fg:x="162935" fg:w="127"/><text x="77.6024%" y="335.50"></text></g><g><title>bio_add_page (217 samples, 0.10%)</title><rect x="77.3106%" y="341" width="0.1030%" height="15" fill="rgb(223,209,46)" fg:x="162847" fg:w="217"/><text x="77.5606%" y="351.50"></text></g><g><title>bio_alloc_bioset (42 samples, 0.02%)</title><rect x="77.4136%" y="341" width="0.0199%" height="15" fill="rgb(250,43,18)" fg:x="163064" fg:w="42"/><text x="77.6636%" y="351.50"></text></g><g><title>__check_block_validity.constprop.0 (30 samples, 0.01%)</title><rect x="77.4454%" y="325" width="0.0142%" height="15" fill="rgb(208,13,10)" fg:x="163131" fg:w="30"/><text x="77.6954%" y="335.50"></text></g><g><title>ext4_inode_block_valid (26 samples, 0.01%)</title><rect x="77.4473%" y="309" width="0.0123%" height="15" fill="rgb(212,200,36)" fg:x="163135" fg:w="26"/><text x="77.6973%" y="319.50"></text></g><g><title>ext4_map_blocks (71 samples, 0.03%)</title><rect x="77.4430%" y="341" width="0.0337%" height="15" fill="rgb(225,90,30)" fg:x="163126" fg:w="71"/><text x="77.6930%" y="351.50"></text></g><g><title>ext4_es_lookup_extent (36 samples, 0.02%)</title><rect x="77.4596%" y="325" width="0.0171%" height="15" fill="rgb(236,182,39)" fg:x="163161" fg:w="36"/><text x="77.7096%" y="335.50"></text></g><g><title>fscrypt_mergeable_bio (56 samples, 0.03%)</title><rect x="77.4767%" y="341" width="0.0266%" height="15" fill="rgb(212,144,35)" fg:x="163197" fg:w="56"/><text x="77.7267%" y="351.50"></text></g><g><title>__blk_mq_alloc_request (28 samples, 0.01%)</title><rect x="77.5166%" y="293" width="0.0133%" height="15" fill="rgb(228,63,44)" fg:x="163281" fg:w="28"/><text x="77.7666%" y="303.50"></text></g><g><title>bio_split (41 samples, 0.02%)</title><rect x="77.5869%" y="261" width="0.0195%" height="15" fill="rgb(228,109,6)" fg:x="163429" fg:w="41"/><text x="77.8369%" y="271.50"></text></g><g><title>blk_bio_segment_split (181 samples, 0.09%)</title><rect x="77.5337%" y="277" width="0.0859%" height="15" fill="rgb(238,117,24)" fg:x="163317" fg:w="181"/><text x="77.7837%" y="287.50"></text></g><g><title>bvec_split_segs (28 samples, 0.01%)</title><rect x="77.6063%" y="261" width="0.0133%" height="15" fill="rgb(242,26,26)" fg:x="163470" fg:w="28"/><text x="77.8563%" y="271.50"></text></g><g><title>__blk_queue_split (193 samples, 0.09%)</title><rect x="77.5309%" y="293" width="0.0916%" height="15" fill="rgb(221,92,48)" fg:x="163311" fg:w="193"/><text x="77.7809%" y="303.50"></text></g><g><title>__blk_bios_map_sg (99 samples, 0.05%)</title><rect x="77.6514%" y="165" width="0.0470%" height="15" fill="rgb(209,209,32)" fg:x="163565" fg:w="99"/><text x="77.9014%" y="175.50"></text></g><g><title>__blk_rq_map_sg (117 samples, 0.06%)</title><rect x="77.6510%" y="181" width="0.0555%" height="15" fill="rgb(221,70,22)" fg:x="163564" fg:w="117"/><text x="77.9010%" y="191.50"></text></g><g><title>dma_direct_map_sg (44 samples, 0.02%)</title><rect x="77.7065%" y="165" width="0.0209%" height="15" fill="rgb(248,145,5)" fg:x="163681" fg:w="44"/><text x="77.9565%" y="175.50"></text></g><g><title>dma_map_sg_attrs (60 samples, 0.03%)</title><rect x="77.7065%" y="181" width="0.0285%" height="15" fill="rgb(226,116,26)" fg:x="163681" fg:w="60"/><text x="77.9565%" y="191.50"></text></g><g><title>mempool_alloc (22 samples, 0.01%)</title><rect x="77.7350%" y="181" width="0.0104%" height="15" fill="rgb(244,5,17)" fg:x="163741" fg:w="22"/><text x="77.9850%" y="191.50"></text></g><g><title>nvme_pci_setup_prps (70 samples, 0.03%)</title><rect x="77.7483%" y="181" width="0.0332%" height="15" fill="rgb(252,159,33)" fg:x="163769" fg:w="70"/><text x="77.9983%" y="191.50"></text></g><g><title>nvme_map_data (290 samples, 0.14%)</title><rect x="77.6505%" y="197" width="0.1377%" height="15" fill="rgb(206,71,0)" fg:x="163563" fg:w="290"/><text x="77.9005%" y="207.50"></text></g><g><title>__blk_mq_try_issue_directly (326 samples, 0.15%)</title><rect x="77.6396%" y="229" width="0.1548%" height="15" fill="rgb(233,118,54)" fg:x="163540" fg:w="326"/><text x="77.8896%" y="239.50"></text></g><g><title>nvme_queue_rq (318 samples, 0.15%)</title><rect x="77.6434%" y="213" width="0.1510%" height="15" fill="rgb(234,83,48)" fg:x="163548" fg:w="318"/><text x="77.8934%" y="223.50"></text></g><g><title>blk_mq_sched_insert_requests (329 samples, 0.16%)</title><rect x="77.6391%" y="261" width="0.1562%" height="15" fill="rgb(228,3,54)" fg:x="163539" fg:w="329"/><text x="77.8891%" y="271.50"></text></g><g><title>blk_mq_try_issue_list_directly (328 samples, 0.16%)</title><rect x="77.6396%" y="245" width="0.1557%" height="15" fill="rgb(226,155,13)" fg:x="163540" fg:w="328"/><text x="77.8896%" y="255.50"></text></g><g><title>blk_flush_plug_list (330 samples, 0.16%)</title><rect x="77.6391%" y="293" width="0.1567%" height="15" fill="rgb(241,28,37)" fg:x="163539" fg:w="330"/><text x="77.8891%" y="303.50"></text></g><g><title>blk_mq_flush_plug_list (330 samples, 0.16%)</title><rect x="77.6391%" y="277" width="0.1567%" height="15" fill="rgb(233,93,10)" fg:x="163539" fg:w="330"/><text x="77.8891%" y="287.50"></text></g><g><title>blk_mq_submit_bio (601 samples, 0.29%)</title><rect x="77.5142%" y="309" width="0.2853%" height="15" fill="rgb(225,113,19)" fg:x="163276" fg:w="601"/><text x="77.7642%" y="319.50"></text></g><g><title>submit_bio (646 samples, 0.31%)</title><rect x="77.5066%" y="341" width="0.3067%" height="15" fill="rgb(241,2,18)" fg:x="163260" fg:w="646"/><text x="77.7566%" y="351.50"></text></g><g><title>submit_bio_noacct (644 samples, 0.31%)</title><rect x="77.5076%" y="325" width="0.3057%" height="15" fill="rgb(228,207,21)" fg:x="163262" fg:w="644"/><text x="77.7576%" y="335.50"></text></g><g><title>submit_bio_checks (26 samples, 0.01%)</title><rect x="77.8010%" y="309" width="0.0123%" height="15" fill="rgb(213,211,35)" fg:x="163880" fg:w="26"/><text x="78.0510%" y="319.50"></text></g><g><title>xas_load (276 samples, 0.13%)</title><rect x="77.8404%" y="325" width="0.1310%" height="15" fill="rgb(209,83,10)" fg:x="163963" fg:w="276"/><text x="78.0904%" y="335.50"></text></g><g><title>xa_load (396 samples, 0.19%)</title><rect x="77.8133%" y="341" width="0.1880%" height="15" fill="rgb(209,164,1)" fg:x="163906" fg:w="396"/><text x="78.0633%" y="351.50"></text></g><g><title>xas_start (63 samples, 0.03%)</title><rect x="77.9714%" y="325" width="0.0299%" height="15" fill="rgb(213,184,43)" fg:x="164239" fg:w="63"/><text x="78.2214%" y="335.50"></text></g><g><title>ext4_mpage_readpages (2,377 samples, 1.13%)</title><rect x="76.8776%" y="357" width="1.1285%" height="15" fill="rgb(231,61,34)" fg:x="161935" fg:w="2377"/><text x="77.1276%" y="367.50"></text></g><g><title>read_pages (2,555 samples, 1.21%)</title><rect x="76.8055%" y="389" width="1.2130%" height="15" fill="rgb(235,75,3)" fg:x="161783" fg:w="2555"/><text x="77.0555%" y="399.50"></text></g><g><title>ext4_readahead (2,415 samples, 1.15%)</title><rect x="76.8719%" y="373" width="1.1465%" height="15" fill="rgb(220,106,47)" fg:x="161923" fg:w="2415"/><text x="77.1219%" y="383.50"></text></g><g><title>xas_load (392 samples, 0.19%)</title><rect x="78.0474%" y="373" width="0.1861%" height="15" fill="rgb(210,196,33)" fg:x="164399" fg:w="392"/><text x="78.2974%" y="383.50"></text></g><g><title>xa_load (517 samples, 0.25%)</title><rect x="78.0213%" y="389" width="0.2454%" height="15" fill="rgb(229,154,42)" fg:x="164344" fg:w="517"/><text x="78.2713%" y="399.50"></text></g><g><title>xas_start (70 samples, 0.03%)</title><rect x="78.2335%" y="373" width="0.0332%" height="15" fill="rgb(228,114,26)" fg:x="164791" fg:w="70"/><text x="78.4835%" y="383.50"></text></g><g><title>page_cache_ra_unbounded (18,620 samples, 8.84%)</title><rect x="69.4346%" y="405" width="8.8397%" height="15" fill="rgb(208,144,1)" fg:x="146257" fg:w="18620"/><text x="69.6846%" y="415.50">page_cache_r..</text></g><g><title>page_cache_async_ra (18,668 samples, 8.86%)</title><rect x="69.4151%" y="437" width="8.8625%" height="15" fill="rgb(239,112,37)" fg:x="146216" fg:w="18668"/><text x="69.6651%" y="447.50">page_cache_as..</text></g><g><title>ondemand_readahead (18,661 samples, 8.86%)</title><rect x="69.4184%" y="421" width="8.8592%" height="15" fill="rgb(210,96,50)" fg:x="146223" fg:w="18661"/><text x="69.6684%" y="431.50">ondemand_read..</text></g><g><title>filemap_get_pages (19,808 samples, 9.40%)</title><rect x="68.8782%" y="453" width="9.4037%" height="15" fill="rgb(222,178,2)" fg:x="145085" fg:w="19808"/><text x="69.1282%" y="463.50">filemap_get_p..</text></g><g><title>__activate_page.part.0 (27 samples, 0.01%)</title><rect x="78.4395%" y="405" width="0.0128%" height="15" fill="rgb(226,74,18)" fg:x="165225" fg:w="27"/><text x="78.6895%" y="415.50"></text></g><g><title>__activate_page (28 samples, 0.01%)</title><rect x="78.4395%" y="421" width="0.0133%" height="15" fill="rgb(225,67,54)" fg:x="165225" fg:w="28"/><text x="78.6895%" y="431.50"></text></g><g><title>pagevec_lru_move_fn (41 samples, 0.02%)</title><rect x="78.4357%" y="437" width="0.0195%" height="15" fill="rgb(251,92,32)" fg:x="165217" fg:w="41"/><text x="78.6857%" y="447.50"></text></g><g><title>mark_page_accessed (375 samples, 0.18%)</title><rect x="78.2819%" y="453" width="0.1780%" height="15" fill="rgb(228,149,22)" fg:x="164893" fg:w="375"/><text x="78.5319%" y="463.50"></text></g><g><title>restore_regs_and_return_to_kernel (36 samples, 0.02%)</title><rect x="78.4661%" y="453" width="0.0171%" height="15" fill="rgb(243,54,13)" fg:x="165281" fg:w="36"/><text x="78.7161%" y="463.50"></text></g><g><title>filemap_read (55,268 samples, 26.24%)</title><rect x="52.2460%" y="469" width="26.2381%" height="15" fill="rgb(243,180,28)" fg:x="110051" fg:w="55268"/><text x="52.4960%" y="479.50">filemap_read</text></g><g><title>entry_SYSCALL_64_after_hwframe (55,290 samples, 26.25%)</title><rect x="52.2384%" y="597" width="26.2486%" height="15" fill="rgb(208,167,24)" fg:x="110035" fg:w="55290"/><text x="52.4884%" y="607.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (55,290 samples, 26.25%)</title><rect x="52.2384%" y="581" width="26.2486%" height="15" fill="rgb(245,73,45)" fg:x="110035" fg:w="55290"/><text x="52.4884%" y="591.50">do_syscall_64</text></g><g><title>__x64_sys_read (55,290 samples, 26.25%)</title><rect x="52.2384%" y="565" width="26.2486%" height="15" fill="rgb(237,203,48)" fg:x="110035" fg:w="55290"/><text x="52.4884%" y="575.50">__x64_sys_read</text></g><g><title>ksys_read (55,290 samples, 26.25%)</title><rect x="52.2384%" y="549" width="26.2486%" height="15" fill="rgb(211,197,16)" fg:x="110035" fg:w="55290"/><text x="52.4884%" y="559.50">ksys_read</text></g><g><title>vfs_read (55,290 samples, 26.25%)</title><rect x="52.2384%" y="533" width="26.2486%" height="15" fill="rgb(243,99,51)" fg:x="110035" fg:w="55290"/><text x="52.4884%" y="543.50">vfs_read</text></g><g><title>new_sync_read (55,289 samples, 26.25%)</title><rect x="52.2389%" y="517" width="26.2481%" height="15" fill="rgb(215,123,29)" fg:x="110036" fg:w="55289"/><text x="52.4889%" y="527.50">new_sync_read</text></g><g><title>ext4_file_read_iter (55,288 samples, 26.25%)</title><rect x="52.2394%" y="501" width="26.2476%" height="15" fill="rgb(239,186,37)" fg:x="110037" fg:w="55288"/><text x="52.4894%" y="511.50">ext4_file_read_iter</text></g><g><title>generic_file_read_iter (55,288 samples, 26.25%)</title><rect x="52.2394%" y="485" width="26.2476%" height="15" fill="rgb(252,136,39)" fg:x="110037" fg:w="55288"/><text x="52.4894%" y="495.50">generic_file_read_iter</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (55,312 samples, 26.26%)</title><rect x="52.2379%" y="677" width="26.2590%" height="15" fill="rgb(223,213,32)" fg:x="110034" fg:w="55312"/><text x="52.4879%" y="687.50">&lt;std::io::buffered::bufreader::BufReader&lt;R..</text></g><g><title>std::io::default_read_exact (55,312 samples, 26.26%)</title><rect x="52.2379%" y="661" width="26.2590%" height="15" fill="rgb(233,115,5)" fg:x="110034" fg:w="55312"/><text x="52.4879%" y="671.50">std::io::default_read_exact</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (55,312 samples, 26.26%)</title><rect x="52.2379%" y="645" width="26.2590%" height="15" fill="rgb(207,226,44)" fg:x="110034" fg:w="55312"/><text x="52.4879%" y="655.50">&lt;std::io::buffered::bufreader::BufReader&lt;R..</text></g><g><title>std::sys::unix::fd::FileDesc::read (55,312 samples, 26.26%)</title><rect x="52.2379%" y="629" width="26.2590%" height="15" fill="rgb(208,126,0)" fg:x="110034" fg:w="55312"/><text x="52.4879%" y="639.50">std::sys::unix::fd::FileDesc::read</text></g><g><title>__libc_read (55,312 samples, 26.26%)</title><rect x="52.2379%" y="613" width="26.2590%" height="15" fill="rgb(244,66,21)" fg:x="110034" fg:w="55312"/><text x="52.4879%" y="623.50">__libc_read</text></g><g><title>alloc::vec::from_elem (25 samples, 0.01%)</title><rect x="78.4970%" y="677" width="0.0119%" height="15" fill="rgb(222,97,12)" fg:x="165346" fg:w="25"/><text x="78.7470%" y="687.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (25 samples, 0.01%)</title><rect x="78.4970%" y="661" width="0.0119%" height="15" fill="rgb(219,213,19)" fg:x="165346" fg:w="25"/><text x="78.7470%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (25 samples, 0.01%)</title><rect x="78.4970%" y="645" width="0.0119%" height="15" fill="rgb(252,169,30)" fg:x="165346" fg:w="25"/><text x="78.7470%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (25 samples, 0.01%)</title><rect x="78.4970%" y="629" width="0.0119%" height="15" fill="rgb(206,32,51)" fg:x="165346" fg:w="25"/><text x="78.7470%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (25 samples, 0.01%)</title><rect x="78.4970%" y="613" width="0.0119%" height="15" fill="rgb(250,172,42)" fg:x="165346" fg:w="25"/><text x="78.7470%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (25 samples, 0.01%)</title><rect x="78.4970%" y="597" width="0.0119%" height="15" fill="rgb(209,34,43)" fg:x="165346" fg:w="25"/><text x="78.7470%" y="607.50"></text></g><g><title>alloc::alloc::alloc_zeroed (25 samples, 0.01%)</title><rect x="78.4970%" y="581" width="0.0119%" height="15" fill="rgb(223,11,35)" fg:x="165346" fg:w="25"/><text x="78.7470%" y="591.50"></text></g><g><title>__calloc (25 samples, 0.01%)</title><rect x="78.4970%" y="565" width="0.0119%" height="15" fill="rgb(251,219,26)" fg:x="165346" fg:w="25"/><text x="78.7470%" y="575.50"></text></g><g><title>_int_malloc (24 samples, 0.01%)</title><rect x="78.4974%" y="549" width="0.0114%" height="15" fill="rgb(231,119,3)" fg:x="165347" fg:w="24"/><text x="78.7474%" y="559.50"></text></g><g><title>sysmalloc (24 samples, 0.01%)</title><rect x="78.4974%" y="533" width="0.0114%" height="15" fill="rgb(216,97,11)" fg:x="165347" fg:w="24"/><text x="78.7474%" y="543.50"></text></g><g><title>futex_wait_queue_me (27 samples, 0.01%)</title><rect x="78.5107%" y="469" width="0.0128%" height="15" fill="rgb(223,59,9)" fg:x="165375" fg:w="27"/><text x="78.7607%" y="479.50"></text></g><g><title>schedule (27 samples, 0.01%)</title><rect x="78.5107%" y="453" width="0.0128%" height="15" fill="rgb(233,93,31)" fg:x="165375" fg:w="27"/><text x="78.7607%" y="463.50"></text></g><g><title>__schedule (27 samples, 0.01%)</title><rect x="78.5107%" y="437" width="0.0128%" height="15" fill="rgb(239,81,33)" fg:x="165375" fg:w="27"/><text x="78.7607%" y="447.50"></text></g><g><title>__x64_sys_futex (28 samples, 0.01%)</title><rect x="78.5107%" y="517" width="0.0133%" height="15" fill="rgb(213,120,34)" fg:x="165375" fg:w="28"/><text x="78.7607%" y="527.50"></text></g><g><title>do_futex (28 samples, 0.01%)</title><rect x="78.5107%" y="501" width="0.0133%" height="15" fill="rgb(243,49,53)" fg:x="165375" fg:w="28"/><text x="78.7607%" y="511.50"></text></g><g><title>futex_wait (28 samples, 0.01%)</title><rect x="78.5107%" y="485" width="0.0133%" height="15" fill="rgb(247,216,33)" fg:x="165375" fg:w="28"/><text x="78.7607%" y="495.50"></text></g><g><title>std::panic::catch_unwind (55,370 samples, 26.29%)</title><rect x="52.2379%" y="789" width="26.2866%" height="15" fill="rgb(226,26,14)" fg:x="110034" fg:w="55370"/><text x="52.4879%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (55,370 samples, 26.29%)</title><rect x="52.2379%" y="773" width="26.2866%" height="15" fill="rgb(215,49,53)" fg:x="110034" fg:w="55370"/><text x="52.4879%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (55,370 samples, 26.29%)</title><rect x="52.2379%" y="757" width="26.2866%" height="15" fill="rgb(245,162,40)" fg:x="110034" fg:w="55370"/><text x="52.4879%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (55,370 samples, 26.29%)</title><rect x="52.2379%" y="741" width="26.2866%" height="15" fill="rgb(229,68,17)" fg:x="110034" fg:w="55370"/><text x="52.4879%" y="751.50">&lt;core::panic::unwind_safe::AssertUnwindSaf..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (55,370 samples, 26.29%)</title><rect x="52.2379%" y="725" width="26.2866%" height="15" fill="rgb(213,182,10)" fg:x="110034" fg:w="55370"/><text x="52.4879%" y="735.50">std::thread::Builder::spawn_unchecked_::{{..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (55,370 samples, 26.29%)</title><rect x="52.2379%" y="709" width="26.2866%" height="15" fill="rgb(245,125,30)" fg:x="110034" fg:w="55370"/><text x="52.4879%" y="719.50">std::sys_common::backtrace::__rust_begin_s..</text></g><g><title>hprof_slurp::prefetch_reader::PrefetchReader::start::{{closure}} (55,370 samples, 26.29%)</title><rect x="52.2379%" y="693" width="26.2866%" height="15" fill="rgb(232,202,2)" fg:x="110034" fg:w="55370"/><text x="52.4879%" y="703.50">hprof_slurp::prefetch_reader::PrefetchRead..</text></g><g><title>std::sync::mpsc::SyncSender&lt;T&gt;::send (33 samples, 0.02%)</title><rect x="78.5088%" y="677" width="0.0157%" height="15" fill="rgb(237,140,51)" fg:x="165371" fg:w="33"/><text x="78.7588%" y="687.50"></text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::send (33 samples, 0.02%)</title><rect x="78.5088%" y="661" width="0.0157%" height="15" fill="rgb(236,157,25)" fg:x="165371" fg:w="33"/><text x="78.7588%" y="671.50"></text></g><g><title>std::sync::mpsc::sync::Packet&lt;T&gt;::acquire_send_slot (33 samples, 0.02%)</title><rect x="78.5088%" y="645" width="0.0157%" height="15" fill="rgb(219,209,0)" fg:x="165371" fg:w="33"/><text x="78.7588%" y="655.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (33 samples, 0.02%)</title><rect x="78.5088%" y="629" width="0.0157%" height="15" fill="rgb(240,116,54)" fg:x="165371" fg:w="33"/><text x="78.7588%" y="639.50"></text></g><g><title>std::thread::park (32 samples, 0.02%)</title><rect x="78.5093%" y="613" width="0.0152%" height="15" fill="rgb(216,10,36)" fg:x="165372" fg:w="32"/><text x="78.7593%" y="623.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (32 samples, 0.02%)</title><rect x="78.5093%" y="597" width="0.0152%" height="15" fill="rgb(222,72,44)" fg:x="165372" fg:w="32"/><text x="78.7593%" y="607.50"></text></g><g><title>std::sys::unix::futex::futex_wait (30 samples, 0.01%)</title><rect x="78.5103%" y="581" width="0.0142%" height="15" fill="rgb(232,159,9)" fg:x="165374" fg:w="30"/><text x="78.7603%" y="591.50"></text></g><g><title>syscall (30 samples, 0.01%)</title><rect x="78.5103%" y="565" width="0.0142%" height="15" fill="rgb(210,39,32)" fg:x="165374" fg:w="30"/><text x="78.7603%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (29 samples, 0.01%)</title><rect x="78.5107%" y="549" width="0.0138%" height="15" fill="rgb(216,194,45)" fg:x="165375" fg:w="29"/><text x="78.7607%" y="559.50"></text></g><g><title>do_syscall_64 (29 samples, 0.01%)</title><rect x="78.5107%" y="533" width="0.0138%" height="15" fill="rgb(218,18,35)" fg:x="165375" fg:w="29"/><text x="78.7607%" y="543.50"></text></g><g><title>__GI___clone (55,371 samples, 26.29%)</title><rect x="52.2379%" y="901" width="26.2870%" height="15" fill="rgb(207,83,51)" fg:x="110034" fg:w="55371"/><text x="52.4879%" y="911.50">__GI___clone</text></g><g><title>start_thread (55,371 samples, 26.29%)</title><rect x="52.2379%" y="885" width="26.2870%" height="15" fill="rgb(225,63,43)" fg:x="110034" fg:w="55371"/><text x="52.4879%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (55,371 samples, 26.29%)</title><rect x="52.2379%" y="869" width="26.2870%" height="15" fill="rgb(207,57,36)" fg:x="110034" fg:w="55371"/><text x="52.4879%" y="879.50">std::sys::unix::thread::Thread::new::threa..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (55,371 samples, 26.29%)</title><rect x="52.2379%" y="853" width="26.2870%" height="15" fill="rgb(216,99,33)" fg:x="110034" fg:w="55371"/><text x="52.4879%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::func..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (55,371 samples, 26.29%)</title><rect x="52.2379%" y="837" width="26.2870%" height="15" fill="rgb(225,42,16)" fg:x="110034" fg:w="55371"/><text x="52.4879%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::func..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (55,371 samples, 26.29%)</title><rect x="52.2379%" y="821" width="26.2870%" height="15" fill="rgb(220,201,45)" fg:x="110034" fg:w="55371"/><text x="52.4879%" y="831.50">core::ops::function::FnOnce::call_once{{vt..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (55,371 samples, 26.29%)</title><rect x="52.2379%" y="805" width="26.2870%" height="15" fill="rgb(225,33,4)" fg:x="110034" fg:w="55371"/><text x="52.4879%" y="815.50">std::thread::Builder::spawn_unchecked_::{{..</text></g><g><title>hprof-prefetch (55,421 samples, 26.31%)</title><rect x="52.2356%" y="917" width="26.3108%" height="15" fill="rgb(224,33,50)" fg:x="110029" fg:w="55421"/><text x="52.4856%" y="927.50">hprof-prefetch</text></g><g><title>entry_SYSCALL_64_after_hwframe (45 samples, 0.02%)</title><rect x="78.5250%" y="901" width="0.0214%" height="15" fill="rgb(246,198,51)" fg:x="165405" fg:w="45"/><text x="78.7750%" y="911.50"></text></g><g><title>do_syscall_64 (45 samples, 0.02%)</title><rect x="78.5250%" y="885" width="0.0214%" height="15" fill="rgb(205,22,4)" fg:x="165405" fg:w="45"/><text x="78.7750%" y="895.50"></text></g><g><title>__x64_sys_read (44 samples, 0.02%)</title><rect x="78.5254%" y="869" width="0.0209%" height="15" fill="rgb(206,3,8)" fg:x="165406" fg:w="44"/><text x="78.7754%" y="879.50"></text></g><g><title>ksys_read (44 samples, 0.02%)</title><rect x="78.5254%" y="853" width="0.0209%" height="15" fill="rgb(251,23,15)" fg:x="165406" fg:w="44"/><text x="78.7754%" y="863.50"></text></g><g><title>vfs_read (44 samples, 0.02%)</title><rect x="78.5254%" y="837" width="0.0209%" height="15" fill="rgb(252,88,28)" fg:x="165406" fg:w="44"/><text x="78.7754%" y="847.50"></text></g><g><title>new_sync_read (44 samples, 0.02%)</title><rect x="78.5254%" y="821" width="0.0209%" height="15" fill="rgb(212,127,14)" fg:x="165406" fg:w="44"/><text x="78.7754%" y="831.50"></text></g><g><title>ext4_file_read_iter (44 samples, 0.02%)</title><rect x="78.5254%" y="805" width="0.0209%" height="15" fill="rgb(247,145,37)" fg:x="165406" fg:w="44"/><text x="78.7754%" y="815.50"></text></g><g><title>generic_file_read_iter (44 samples, 0.02%)</title><rect x="78.5254%" y="789" width="0.0209%" height="15" fill="rgb(209,117,53)" fg:x="165406" fg:w="44"/><text x="78.7754%" y="799.50"></text></g><g><title>filemap_read (44 samples, 0.02%)</title><rect x="78.5254%" y="773" width="0.0209%" height="15" fill="rgb(212,90,42)" fg:x="165406" fg:w="44"/><text x="78.7754%" y="783.50"></text></g><g><title>_int_free (34 samples, 0.02%)</title><rect x="78.5473%" y="885" width="0.0161%" height="15" fill="rgb(218,164,37)" fg:x="165452" fg:w="34"/><text x="78.7973%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (711 samples, 0.34%)</title><rect x="78.5634%" y="885" width="0.3375%" height="15" fill="rgb(246,65,34)" fg:x="165486" fg:w="711"/><text x="78.8134%" y="895.50"></text></g><g><title>[anon] (752 samples, 0.36%)</title><rect x="78.5463%" y="901" width="0.3570%" height="15" fill="rgb(231,100,33)" fg:x="165450" fg:w="752"/><text x="78.7963%" y="911.50"></text></g><g><title>__free (23 samples, 0.01%)</title><rect x="78.9038%" y="885" width="0.0109%" height="15" fill="rgb(228,126,14)" fg:x="166203" fg:w="23"/><text x="79.1538%" y="895.50"></text></g><g><title>_int_free (34 samples, 0.02%)</title><rect x="78.9147%" y="885" width="0.0161%" height="15" fill="rgb(215,173,21)" fg:x="166226" fg:w="34"/><text x="79.1647%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (656 samples, 0.31%)</title><rect x="78.9309%" y="885" width="0.3114%" height="15" fill="rgb(210,6,40)" fg:x="166260" fg:w="656"/><text x="79.1809%" y="895.50"></text></g><g><title>[unknown] (1,385 samples, 0.66%)</title><rect x="78.9033%" y="901" width="0.6575%" height="15" fill="rgb(212,48,18)" fg:x="166202" fg:w="1385"/><text x="79.1533%" y="911.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (670 samples, 0.32%)</title><rect x="79.2428%" y="885" width="0.3181%" height="15" fill="rgb(230,214,11)" fg:x="166917" fg:w="670"/><text x="79.4928%" y="895.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (670 samples, 0.32%)</title><rect x="79.2428%" y="869" width="0.3181%" height="15" fill="rgb(254,105,39)" fg:x="166917" fg:w="670"/><text x="79.4928%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (670 samples, 0.32%)</title><rect x="79.2428%" y="853" width="0.3181%" height="15" fill="rgb(245,158,5)" fg:x="166917" fg:w="670"/><text x="79.4928%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (670 samples, 0.32%)</title><rect x="79.2428%" y="837" width="0.3181%" height="15" fill="rgb(249,208,11)" fg:x="166917" fg:w="670"/><text x="79.4928%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (670 samples, 0.32%)</title><rect x="79.2428%" y="821" width="0.3181%" height="15" fill="rgb(210,39,28)" fg:x="166917" fg:w="670"/><text x="79.4928%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.03%)</title><rect x="79.8595%" y="629" width="0.0280%" height="15" fill="rgb(211,56,53)" fg:x="168216" fg:w="59"/><text x="80.1095%" y="639.50"></text></g><g><title>__GI___lll_lock_wake_private (26 samples, 0.01%)</title><rect x="80.4187%" y="613" width="0.0123%" height="15" fill="rgb(226,201,30)" fg:x="169394" fg:w="26"/><text x="80.6687%" y="623.50"></text></g><g><title>__GI___munmap (28 samples, 0.01%)</title><rect x="80.4311%" y="613" width="0.0133%" height="15" fill="rgb(239,101,34)" fg:x="169420" fg:w="28"/><text x="80.6811%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (28 samples, 0.01%)</title><rect x="80.4311%" y="597" width="0.0133%" height="15" fill="rgb(226,209,5)" fg:x="169420" fg:w="28"/><text x="80.6811%" y="607.50"></text></g><g><title>do_syscall_64 (28 samples, 0.01%)</title><rect x="80.4311%" y="581" width="0.0133%" height="15" fill="rgb(250,105,47)" fg:x="169420" fg:w="28"/><text x="80.6811%" y="591.50"></text></g><g><title>__x64_sys_munmap (28 samples, 0.01%)</title><rect x="80.4311%" y="565" width="0.0133%" height="15" fill="rgb(230,72,3)" fg:x="169420" fg:w="28"/><text x="80.6811%" y="575.50"></text></g><g><title>__vm_munmap (28 samples, 0.01%)</title><rect x="80.4311%" y="549" width="0.0133%" height="15" fill="rgb(232,218,39)" fg:x="169420" fg:w="28"/><text x="80.6811%" y="559.50"></text></g><g><title>__do_munmap (28 samples, 0.01%)</title><rect x="80.4311%" y="533" width="0.0133%" height="15" fill="rgb(248,166,6)" fg:x="169420" fg:w="28"/><text x="80.6811%" y="543.50"></text></g><g><title>unmap_region (28 samples, 0.01%)</title><rect x="80.4311%" y="517" width="0.0133%" height="15" fill="rgb(247,89,20)" fg:x="169420" fg:w="28"/><text x="80.6811%" y="527.50"></text></g><g><title>unmap_vmas (25 samples, 0.01%)</title><rect x="80.4325%" y="501" width="0.0119%" height="15" fill="rgb(248,130,54)" fg:x="169423" fg:w="25"/><text x="80.6825%" y="511.50"></text></g><g><title>unmap_single_vma (25 samples, 0.01%)</title><rect x="80.4325%" y="485" width="0.0119%" height="15" fill="rgb(234,196,4)" fg:x="169423" fg:w="25"/><text x="80.6825%" y="495.50"></text></g><g><title>unmap_page_range (25 samples, 0.01%)</title><rect x="80.4325%" y="469" width="0.0119%" height="15" fill="rgb(250,143,31)" fg:x="169423" fg:w="25"/><text x="80.6825%" y="479.50"></text></g><g><title>zap_pmd_range.isra.0 (25 samples, 0.01%)</title><rect x="80.4325%" y="453" width="0.0119%" height="15" fill="rgb(211,110,34)" fg:x="169423" fg:w="25"/><text x="80.6825%" y="463.50"></text></g><g><title>zap_pte_range (24 samples, 0.01%)</title><rect x="80.4330%" y="437" width="0.0114%" height="15" fill="rgb(215,124,48)" fg:x="169424" fg:w="24"/><text x="80.6830%" y="447.50"></text></g><g><title>dequeue_entity (23 samples, 0.01%)</title><rect x="81.2505%" y="421" width="0.0109%" height="15" fill="rgb(216,46,13)" fg:x="171146" fg:w="23"/><text x="81.5005%" y="431.50"></text></g><g><title>dequeue_task (25 samples, 0.01%)</title><rect x="81.2500%" y="453" width="0.0119%" height="15" fill="rgb(205,184,25)" fg:x="171145" fg:w="25"/><text x="81.5000%" y="463.50"></text></g><g><title>dequeue_task_fair (25 samples, 0.01%)</title><rect x="81.2500%" y="437" width="0.0119%" height="15" fill="rgb(228,1,10)" fg:x="171145" fg:w="25"/><text x="81.5000%" y="447.50"></text></g><g><title>__schedule (69 samples, 0.03%)</title><rect x="81.2481%" y="469" width="0.0328%" height="15" fill="rgb(213,116,27)" fg:x="171141" fg:w="69"/><text x="81.4981%" y="479.50"></text></g><g><title>futex_wait_queue_me (77 samples, 0.04%)</title><rect x="81.2457%" y="501" width="0.0366%" height="15" fill="rgb(241,95,50)" fg:x="171136" fg:w="77"/><text x="81.4957%" y="511.50"></text></g><g><title>schedule (74 samples, 0.04%)</title><rect x="81.2472%" y="485" width="0.0351%" height="15" fill="rgb(238,48,32)" fg:x="171139" fg:w="74"/><text x="81.4972%" y="495.50"></text></g><g><title>__x64_sys_futex (99 samples, 0.05%)</title><rect x="81.2396%" y="549" width="0.0470%" height="15" fill="rgb(235,113,49)" fg:x="171123" fg:w="99"/><text x="81.4896%" y="559.50"></text></g><g><title>do_futex (98 samples, 0.05%)</title><rect x="81.2400%" y="533" width="0.0465%" height="15" fill="rgb(205,127,43)" fg:x="171124" fg:w="98"/><text x="81.4900%" y="543.50"></text></g><g><title>futex_wait (97 samples, 0.05%)</title><rect x="81.2405%" y="517" width="0.0461%" height="15" fill="rgb(250,162,2)" fg:x="171125" fg:w="97"/><text x="81.4905%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (114 samples, 0.05%)</title><rect x="81.2377%" y="581" width="0.0541%" height="15" fill="rgb(220,13,41)" fg:x="171119" fg:w="114"/><text x="81.4877%" y="591.50"></text></g><g><title>do_syscall_64 (111 samples, 0.05%)</title><rect x="81.2391%" y="565" width="0.0527%" height="15" fill="rgb(249,221,25)" fg:x="171122" fg:w="111"/><text x="81.4891%" y="575.50"></text></g><g><title>__GI___lll_lock_wait_private (138 samples, 0.07%)</title><rect x="81.2267%" y="597" width="0.0655%" height="15" fill="rgb(215,208,19)" fg:x="171096" fg:w="138"/><text x="81.4767%" y="607.50"></text></g><g><title>malloc_consolidate (346 samples, 0.16%)</title><rect x="81.2937%" y="597" width="0.1643%" height="15" fill="rgb(236,175,2)" fg:x="171237" fg:w="346"/><text x="81.5437%" y="607.50"></text></g><g><title>unlink_chunk.constprop.0 (82 samples, 0.04%)</title><rect x="81.4190%" y="581" width="0.0389%" height="15" fill="rgb(241,52,2)" fg:x="171501" fg:w="82"/><text x="81.6690%" y="591.50"></text></g><g><title>_int_free (2,167 samples, 1.03%)</title><rect x="80.4444%" y="613" width="1.0288%" height="15" fill="rgb(248,140,14)" fg:x="169448" fg:w="2167"/><text x="80.6944%" y="623.50"></text></g><g><title>unlink_chunk.constprop.0 (32 samples, 0.02%)</title><rect x="81.4579%" y="597" width="0.0152%" height="15" fill="rgb(253,22,42)" fg:x="171583" fg:w="32"/><text x="81.7079%" y="607.50"></text></g><g><title>__free (3,343 samples, 1.59%)</title><rect x="79.8875%" y="629" width="1.5871%" height="15" fill="rgb(234,61,47)" fg:x="168275" fg:w="3343"/><text x="80.1375%" y="639.50"></text></g><g><title>__rdl_dealloc (32 samples, 0.02%)</title><rect x="81.4746%" y="629" width="0.0152%" height="15" fill="rgb(208,226,15)" fg:x="171618" fg:w="32"/><text x="81.7246%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (32 samples, 0.02%)</title><rect x="81.4746%" y="613" width="0.0152%" height="15" fill="rgb(217,221,4)" fg:x="171618" fg:w="32"/><text x="81.7246%" y="623.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (27 samples, 0.01%)</title><rect x="86.3521%" y="613" width="0.0128%" height="15" fill="rgb(212,174,34)" fg:x="181892" fg:w="27"/><text x="86.6021%" y="623.50"></text></g><g><title>sysvec_apic_timer_interrupt (27 samples, 0.01%)</title><rect x="86.3521%" y="597" width="0.0128%" height="15" fill="rgb(253,83,4)" fg:x="181892" fg:w="27"/><text x="86.6021%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (16,616 samples, 7.89%)</title><rect x="79.5613%" y="677" width="7.8883%" height="15" fill="rgb(250,195,49)" fg:x="167588" fg:w="16616"/><text x="79.8113%" y="687.50">alloc::vec:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (16,616 samples, 7.89%)</title><rect x="79.5613%" y="661" width="7.8883%" height="15" fill="rgb(241,192,25)" fg:x="167588" fg:w="16616"/><text x="79.8113%" y="671.50">alloc::vec:..</text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (16,616 samples, 7.89%)</title><rect x="79.5613%" y="645" width="7.8883%" height="15" fill="rgb(208,124,10)" fg:x="167588" fg:w="16616"/><text x="79.8113%" y="655.50">core::ptr::..</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (12,540 samples, 5.95%)</title><rect x="81.4964%" y="629" width="5.9533%" height="15" fill="rgb(222,33,0)" fg:x="171664" fg:w="12540"/><text x="81.7464%" y="639.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::gc_record::GcRecord&gt; (2,279 samples, 1.08%)</title><rect x="86.3677%" y="613" width="1.0819%" height="15" fill="rgb(234,209,28)" fg:x="181925" fg:w="2279"/><text x="86.6177%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::gc_record::ArrayValue&gt; (153 samples, 0.07%)</title><rect x="87.3770%" y="597" width="0.0726%" height="15" fill="rgb(224,11,23)" fg:x="184051" fg:w="153"/><text x="87.6270%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.02%)</title><rect x="87.4497%" y="581" width="0.0180%" height="15" fill="rgb(232,99,1)" fg:x="184204" fg:w="38"/><text x="87.6997%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (38 samples, 0.02%)</title><rect x="87.4497%" y="565" width="0.0180%" height="15" fill="rgb(237,95,45)" fg:x="184204" fg:w="38"/><text x="87.6997%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (38 samples, 0.02%)</title><rect x="87.4497%" y="549" width="0.0180%" height="15" fill="rgb(208,109,11)" fg:x="184204" fg:w="38"/><text x="87.6997%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (38 samples, 0.02%)</title><rect x="87.4497%" y="533" width="0.0180%" height="15" fill="rgb(216,190,48)" fg:x="184204" fg:w="38"/><text x="87.6997%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,alloc::string::String)&gt; (38 samples, 0.02%)</title><rect x="87.4497%" y="517" width="0.0180%" height="15" fill="rgb(251,171,36)" fg:x="184204" fg:w="38"/><text x="87.6997%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (38 samples, 0.02%)</title><rect x="87.4497%" y="501" width="0.0180%" height="15" fill="rgb(230,62,22)" fg:x="184204" fg:w="38"/><text x="87.6997%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (38 samples, 0.02%)</title><rect x="87.4497%" y="485" width="0.0180%" height="15" fill="rgb(225,114,35)" fg:x="184204" fg:w="38"/><text x="87.6997%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (38 samples, 0.02%)</title><rect x="87.4497%" y="469" width="0.0180%" height="15" fill="rgb(215,118,42)" fg:x="184204" fg:w="38"/><text x="87.6997%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.02%)</title><rect x="87.4497%" y="453" width="0.0180%" height="15" fill="rgb(243,119,21)" fg:x="184204" fg:w="38"/><text x="87.6997%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.02%)</title><rect x="87.4497%" y="437" width="0.0180%" height="15" fill="rgb(252,177,53)" fg:x="184204" fg:w="38"/><text x="87.6997%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (38 samples, 0.02%)</title><rect x="87.4497%" y="421" width="0.0180%" height="15" fill="rgb(237,209,29)" fg:x="184204" fg:w="38"/><text x="87.6997%" y="431.50"></text></g><g><title>__free (38 samples, 0.02%)</title><rect x="87.4497%" y="405" width="0.0180%" height="15" fill="rgb(212,65,23)" fg:x="184204" fg:w="38"/><text x="87.6997%" y="415.50"></text></g><g><title>_int_free (29 samples, 0.01%)</title><rect x="87.4539%" y="389" width="0.0138%" height="15" fill="rgb(230,222,46)" fg:x="184213" fg:w="29"/><text x="87.7039%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;ahash::hash_map::AHashMap&lt;u64,alloc::string::String&gt;&gt; (39 samples, 0.02%)</title><rect x="87.4497%" y="645" width="0.0185%" height="15" fill="rgb(215,135,32)" fg:x="184204" fg:w="39"/><text x="87.6997%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (39 samples, 0.02%)</title><rect x="87.4497%" y="629" width="0.0185%" height="15" fill="rgb(246,101,22)" fg:x="184204" fg:w="39"/><text x="87.6997%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (39 samples, 0.02%)</title><rect x="87.4497%" y="613" width="0.0185%" height="15" fill="rgb(206,107,13)" fg:x="184204" fg:w="39"/><text x="87.6997%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (39 samples, 0.02%)</title><rect x="87.4497%" y="597" width="0.0185%" height="15" fill="rgb(250,100,44)" fg:x="184204" fg:w="39"/><text x="87.6997%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder::start::{{closure}}&gt; (41 samples, 0.02%)</title><rect x="87.4497%" y="677" width="0.0195%" height="15" fill="rgb(231,147,38)" fg:x="184204" fg:w="41"/><text x="87.6997%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder&gt; (41 samples, 0.02%)</title><rect x="87.4497%" y="661" width="0.0195%" height="15" fill="rgb(229,8,40)" fg:x="184204" fg:w="41"/><text x="87.6997%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (525 samples, 0.25%)</title><rect x="87.4691%" y="645" width="0.2492%" height="15" fill="rgb(221,135,30)" fg:x="184245" fg:w="525"/><text x="87.7191%" y="655.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (37 samples, 0.02%)</title><rect x="87.7008%" y="629" width="0.0176%" height="15" fill="rgb(249,193,18)" fg:x="184733" fg:w="37"/><text x="87.9508%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (37 samples, 0.02%)</title><rect x="87.7008%" y="613" width="0.0176%" height="15" fill="rgb(209,133,39)" fg:x="184733" fg:w="37"/><text x="87.9508%" y="623.50"></text></g><g><title>__sysvec_apic_timer_interrupt (28 samples, 0.01%)</title><rect x="93.2942%" y="597" width="0.0133%" height="15" fill="rgb(232,100,14)" fg:x="196515" fg:w="28"/><text x="93.5442%" y="607.50"></text></g><g><title>hrtimer_interrupt (25 samples, 0.01%)</title><rect x="93.2957%" y="581" width="0.0119%" height="15" fill="rgb(224,185,1)" fg:x="196518" fg:w="25"/><text x="93.5457%" y="591.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (33 samples, 0.02%)</title><rect x="93.2938%" y="629" width="0.0157%" height="15" fill="rgb(223,139,8)" fg:x="196514" fg:w="33"/><text x="93.5438%" y="639.50"></text></g><g><title>sysvec_apic_timer_interrupt (32 samples, 0.02%)</title><rect x="93.2942%" y="613" width="0.0152%" height="15" fill="rgb(232,213,38)" fg:x="196515" fg:w="32"/><text x="93.5442%" y="623.50"></text></g><g><title>hprof_slurp::result_recorder::ArrayCounter::add_elements_from_array (57 samples, 0.03%)</title><rect x="93.3099%" y="629" width="0.0271%" height="15" fill="rgb(207,94,22)" fg:x="196548" fg:w="57"/><text x="93.5599%" y="639.50"></text></g><g><title>hprof_slurp::result_recorder::ClassInstanceCounter::add_instance (2,085 samples, 0.99%)</title><rect x="93.3370%" y="629" width="0.9898%" height="15" fill="rgb(219,183,54)" fg:x="196605" fg:w="2085"/><text x="93.5870%" y="639.50"></text></g><g><title>ahash::operations::folded_multiply (981 samples, 0.47%)</title><rect x="94.3268%" y="549" width="0.4657%" height="15" fill="rgb(216,185,54)" fg:x="198690" fg:w="981"/><text x="94.5768%" y="559.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (751 samples, 0.36%)</title><rect x="94.4360%" y="533" width="0.3565%" height="15" fill="rgb(254,217,39)" fg:x="198920" fg:w="751"/><text x="94.6860%" y="543.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1,563 samples, 0.74%)</title><rect x="94.3268%" y="565" width="0.7420%" height="15" fill="rgb(240,178,23)" fg:x="198690" fg:w="1563"/><text x="94.5768%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (582 samples, 0.28%)</title><rect x="94.7925%" y="549" width="0.2763%" height="15" fill="rgb(218,11,47)" fg:x="199671" fg:w="582"/><text x="95.0425%" y="559.50"></text></g><g><title>&lt;hprof_slurp::parser::gc_record::FieldType as core::hash::Hash&gt;::hash (22 samples, 0.01%)</title><rect x="95.0688%" y="549" width="0.0104%" height="15" fill="rgb(218,51,51)" fg:x="200253" fg:w="22"/><text x="95.3188%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (22 samples, 0.01%)</title><rect x="95.0688%" y="533" width="0.0104%" height="15" fill="rgb(238,126,27)" fg:x="200253" fg:w="22"/><text x="95.3188%" y="543.50"></text></g><g><title>core::hash::Hasher::write_isize (22 samples, 0.01%)</title><rect x="95.0688%" y="517" width="0.0104%" height="15" fill="rgb(249,202,22)" fg:x="200253" fg:w="22"/><text x="95.3188%" y="527.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (22 samples, 0.01%)</title><rect x="95.0688%" y="501" width="0.0104%" height="15" fill="rgb(254,195,49)" fg:x="200253" fg:w="22"/><text x="95.3188%" y="511.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (22 samples, 0.01%)</title><rect x="95.0688%" y="485" width="0.0104%" height="15" fill="rgb(208,123,14)" fg:x="200253" fg:w="22"/><text x="95.3188%" y="495.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (22 samples, 0.01%)</title><rect x="95.0688%" y="469" width="0.0104%" height="15" fill="rgb(224,200,8)" fg:x="200253" fg:w="22"/><text x="95.3188%" y="479.50"></text></g><g><title>hashbrown::map::make_insert_hash (2,839 samples, 1.35%)</title><rect x="94.3268%" y="597" width="1.3478%" height="15" fill="rgb(217,61,36)" fg:x="198690" fg:w="2839"/><text x="94.5768%" y="607.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,839 samples, 1.35%)</title><rect x="94.3268%" y="581" width="1.3478%" height="15" fill="rgb(206,35,45)" fg:x="198690" fg:w="2839"/><text x="94.5768%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,276 samples, 0.61%)</title><rect x="95.0688%" y="565" width="0.6058%" height="15" fill="rgb(217,65,33)" fg:x="200253" fg:w="1276"/><text x="95.3188%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1,254 samples, 0.60%)</title><rect x="95.0793%" y="549" width="0.5953%" height="15" fill="rgb(222,158,48)" fg:x="200275" fg:w="1254"/><text x="95.3293%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1,254 samples, 0.60%)</title><rect x="95.0793%" y="533" width="0.5953%" height="15" fill="rgb(254,2,54)" fg:x="200275" fg:w="1254"/><text x="95.3293%" y="543.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1,254 samples, 0.60%)</title><rect x="95.0793%" y="517" width="0.5953%" height="15" fill="rgb(250,143,38)" fg:x="200275" fg:w="1254"/><text x="95.3293%" y="527.50"></text></g><g><title>ahash::operations::folded_multiply (868 samples, 0.41%)</title><rect x="95.2625%" y="501" width="0.4121%" height="15" fill="rgb(248,25,0)" fg:x="200661" fg:w="868"/><text x="95.5125%" y="511.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (711 samples, 0.34%)</title><rect x="95.3371%" y="485" width="0.3375%" height="15" fill="rgb(206,152,27)" fg:x="200818" fg:w="711"/><text x="95.5871%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,487 samples, 0.71%)</title><rect x="96.2913%" y="565" width="0.7059%" height="15" fill="rgb(240,77,30)" fg:x="202828" fg:w="1487"/><text x="96.5413%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,320 samples, 0.63%)</title><rect x="96.3706%" y="549" width="0.6267%" height="15" fill="rgb(231,5,3)" fg:x="202995" fg:w="1320"/><text x="96.6206%" y="559.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (29 samples, 0.01%)</title><rect x="97.0001%" y="565" width="0.0138%" height="15" fill="rgb(207,226,32)" fg:x="204321" fg:w="29"/><text x="97.2501%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (783 samples, 0.37%)</title><rect x="97.0139%" y="549" width="0.3717%" height="15" fill="rgb(222,207,47)" fg:x="204350" fg:w="783"/><text x="97.2639%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (783 samples, 0.37%)</title><rect x="97.0139%" y="533" width="0.3717%" height="15" fill="rgb(229,115,45)" fg:x="204350" fg:w="783"/><text x="97.2639%" y="543.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (764 samples, 0.36%)</title><rect x="97.0229%" y="517" width="0.3627%" height="15" fill="rgb(224,191,6)" fg:x="204369" fg:w="764"/><text x="97.2729%" y="527.50"></text></g><g><title>&lt;hprof_slurp::parser::gc_record::FieldType as core::cmp::PartialEq&gt;::eq (28 samples, 0.01%)</title><rect x="97.3856%" y="533" width="0.0133%" height="15" fill="rgb(230,227,24)" fg:x="205133" fg:w="28"/><text x="97.6356%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2,971 samples, 1.41%)</title><rect x="97.0139%" y="565" width="1.4105%" height="15" fill="rgb(228,80,19)" fg:x="204350" fg:w="2971"/><text x="97.2639%" y="575.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (2,188 samples, 1.04%)</title><rect x="97.3856%" y="549" width="1.0387%" height="15" fill="rgb(247,229,0)" fg:x="205133" fg:w="2188"/><text x="97.6356%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (2,160 samples, 1.03%)</title><rect x="97.3989%" y="533" width="1.0254%" height="15" fill="rgb(237,194,15)" fg:x="205161" fg:w="2160"/><text x="97.6489%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1,547 samples, 0.73%)</title><rect x="98.4243%" y="565" width="0.7344%" height="15" fill="rgb(219,203,20)" fg:x="207321" fg:w="1547"/><text x="98.6743%" y="575.50"></text></g><g><title>hashbrown::raw::h2 (195 samples, 0.09%)</title><rect x="99.1588%" y="565" width="0.0926%" height="15" fill="rgb(234,128,8)" fg:x="208868" fg:w="195"/><text x="99.4088%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (418 samples, 0.20%)</title><rect x="99.2513%" y="565" width="0.1984%" height="15" fill="rgb(248,202,8)" fg:x="209063" fg:w="418"/><text x="99.5013%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (418 samples, 0.20%)</title><rect x="99.2513%" y="549" width="0.1984%" height="15" fill="rgb(206,104,37)" fg:x="209063" fg:w="418"/><text x="99.5013%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (418 samples, 0.20%)</title><rect x="99.2513%" y="533" width="0.1984%" height="15" fill="rgb(223,8,27)" fg:x="209063" fg:w="418"/><text x="99.5013%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (847 samples, 0.40%)</title><rect x="99.4498%" y="565" width="0.4021%" height="15" fill="rgb(216,217,28)" fg:x="209481" fg:w="847"/><text x="99.6998%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (847 samples, 0.40%)</title><rect x="99.4498%" y="549" width="0.4021%" height="15" fill="rgb(249,199,1)" fg:x="209481" fg:w="847"/><text x="99.6998%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (11,831 samples, 5.62%)</title><rect x="94.3268%" y="629" width="5.6167%" height="15" fill="rgb(240,85,17)" fg:x="198690" fg:w="11831"/><text x="94.5768%" y="639.50">std::co..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (11,831 samples, 5.62%)</title><rect x="94.3268%" y="613" width="5.6167%" height="15" fill="rgb(206,108,45)" fg:x="198690" fg:w="11831"/><text x="94.5768%" y="623.50">hashbro..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8,992 samples, 4.27%)</title><rect x="95.6746%" y="597" width="4.2689%" height="15" fill="rgb(245,210,41)" fg:x="201529" fg:w="8992"/><text x="95.9246%" y="607.50">hashb..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8,992 samples, 4.27%)</title><rect x="95.6746%" y="581" width="4.2689%" height="15" fill="rgb(206,13,37)" fg:x="201529" fg:w="8992"/><text x="95.9246%" y="591.50">hashb..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (193 samples, 0.09%)</title><rect x="99.8519%" y="565" width="0.0916%" height="15" fill="rgb(250,61,18)" fg:x="210328" fg:w="193"/><text x="100.1019%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (193 samples, 0.09%)</title><rect x="99.8519%" y="549" width="0.0916%" height="15" fill="rgb(235,172,48)" fg:x="210328" fg:w="193"/><text x="100.1019%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (193 samples, 0.09%)</title><rect x="99.8519%" y="533" width="0.0916%" height="15" fill="rgb(249,201,17)" fg:x="210328" fg:w="193"/><text x="100.1019%" y="543.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (26,278 samples, 12.48%)</title><rect x="87.4691%" y="677" width="12.4753%" height="15" fill="rgb(219,208,6)" fg:x="184245" fg:w="26278"/><text x="87.7191%" y="687.50">hprof_slurp::result..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (26,278 samples, 12.48%)</title><rect x="87.4691%" y="661" width="12.4753%" height="15" fill="rgb(248,31,23)" fg:x="184245" fg:w="26278"/><text x="87.7191%" y="671.50">&lt;core::slice::iter:..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (25,753 samples, 12.23%)</title><rect x="87.7184%" y="645" width="12.2261%" height="15" fill="rgb(245,15,42)" fg:x="184770" fg:w="25753"/><text x="87.9684%" y="655.50">hprof_slurp::resul..</text></g><g><title>__GI___clone (42,954 samples, 20.39%)</title><rect x="79.5609%" y="901" width="20.3921%" height="15" fill="rgb(222,217,39)" fg:x="167587" fg:w="42954"/><text x="79.8109%" y="911.50">__GI___clone</text></g><g><title>start_thread (42,954 samples, 20.39%)</title><rect x="79.5609%" y="885" width="20.3921%" height="15" fill="rgb(210,219,27)" fg:x="167587" fg:w="42954"/><text x="79.8109%" y="895.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (42,954 samples, 20.39%)</title><rect x="79.5609%" y="869" width="20.3921%" height="15" fill="rgb(252,166,36)" fg:x="167587" fg:w="42954"/><text x="79.8109%" y="879.50">std::sys::unix::thread::Thread::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42,954 samples, 20.39%)</title><rect x="79.5609%" y="853" width="20.3921%" height="15" fill="rgb(245,132,34)" fg:x="167587" fg:w="42954"/><text x="79.8109%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (42,954 samples, 20.39%)</title><rect x="79.5609%" y="837" width="20.3921%" height="15" fill="rgb(236,54,3)" fg:x="167587" fg:w="42954"/><text x="79.8109%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (42,954 samples, 20.39%)</title><rect x="79.5609%" y="821" width="20.3921%" height="15" fill="rgb(241,173,43)" fg:x="167587" fg:w="42954"/><text x="79.8109%" y="831.50">core::ops::function::FnOnce::cal..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (42,954 samples, 20.39%)</title><rect x="79.5609%" y="805" width="20.3921%" height="15" fill="rgb(215,190,9)" fg:x="167587" fg:w="42954"/><text x="79.8109%" y="815.50">std::thread::Builder::spawn_unch..</text></g><g><title>std::panic::catch_unwind (42,954 samples, 20.39%)</title><rect x="79.5609%" y="789" width="20.3921%" height="15" fill="rgb(242,101,16)" fg:x="167587" fg:w="42954"/><text x="79.8109%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (42,954 samples, 20.39%)</title><rect x="79.5609%" y="773" width="20.3921%" height="15" fill="rgb(223,190,21)" fg:x="167587" fg:w="42954"/><text x="79.8109%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (42,954 samples, 20.39%)</title><rect x="79.5609%" y="757" width="20.3921%" height="15" fill="rgb(215,228,25)" fg:x="167587" fg:w="42954"/><text x="79.8109%" y="767.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42,954 samples, 20.39%)</title><rect x="79.5609%" y="741" width="20.3921%" height="15" fill="rgb(225,36,22)" fg:x="167587" fg:w="42954"/><text x="79.8109%" y="751.50">&lt;core::panic::unwind_safe::Asser..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (42,954 samples, 20.39%)</title><rect x="79.5609%" y="725" width="20.3921%" height="15" fill="rgb(251,106,46)" fg:x="167587" fg:w="42954"/><text x="79.8109%" y="735.50">std::thread::Builder::spawn_unch..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (42,954 samples, 20.39%)</title><rect x="79.5609%" y="709" width="20.3921%" height="15" fill="rgb(208,90,1)" fg:x="167587" fg:w="42954"/><text x="79.8109%" y="719.50">std::sys_common::backtrace::__ru..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (42,954 samples, 20.39%)</title><rect x="79.5609%" y="693" width="20.3921%" height="15" fill="rgb(243,10,4)" fg:x="167587" fg:w="42954"/><text x="79.8109%" y="703.50">hprof_slurp::result_recorder::Re..</text></g><g><title>hprof-recorder (45,111 samples, 21.42%)</title><rect x="78.5463%" y="917" width="21.4162%" height="15" fill="rgb(212,137,27)" fg:x="165450" fg:w="45111"/><text x="78.7963%" y="927.50">hprof-recorder</text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (36 samples, 0.02%)</title><rect x="99.9796%" y="565" width="0.0171%" height="15" fill="rgb(231,220,49)" fg:x="210597" fg:w="36"/><text x="100.2296%" y="575.50"></text></g><g><title>std::thread::park (35 samples, 0.02%)</title><rect x="99.9801%" y="549" width="0.0166%" height="15" fill="rgb(237,96,20)" fg:x="210598" fg:w="35"/><text x="100.2301%" y="559.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (35 samples, 0.02%)</title><rect x="99.9801%" y="533" width="0.0166%" height="15" fill="rgb(239,229,30)" fg:x="210598" fg:w="35"/><text x="100.2301%" y="543.50"></text></g><g><title>std::sys::unix::futex::futex_wait (35 samples, 0.02%)</title><rect x="99.9801%" y="517" width="0.0166%" height="15" fill="rgb(219,65,33)" fg:x="210598" fg:w="35"/><text x="100.2301%" y="527.50"></text></g><g><title>syscall (35 samples, 0.02%)</title><rect x="99.9801%" y="501" width="0.0166%" height="15" fill="rgb(243,134,7)" fg:x="210598" fg:w="35"/><text x="100.2301%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (35 samples, 0.02%)</title><rect x="99.9801%" y="485" width="0.0166%" height="15" fill="rgb(216,177,54)" fg:x="210598" fg:w="35"/><text x="100.2301%" y="495.50"></text></g><g><title>do_syscall_64 (35 samples, 0.02%)</title><rect x="99.9801%" y="469" width="0.0166%" height="15" fill="rgb(211,160,20)" fg:x="210598" fg:w="35"/><text x="100.2301%" y="479.50"></text></g><g><title>__x64_sys_futex (35 samples, 0.02%)</title><rect x="99.9801%" y="453" width="0.0166%" height="15" fill="rgb(239,85,39)" fg:x="210598" fg:w="35"/><text x="100.2301%" y="463.50"></text></g><g><title>do_futex (35 samples, 0.02%)</title><rect x="99.9801%" y="437" width="0.0166%" height="15" fill="rgb(232,125,22)" fg:x="210598" fg:w="35"/><text x="100.2301%" y="447.50"></text></g><g><title>futex_wait (35 samples, 0.02%)</title><rect x="99.9801%" y="421" width="0.0166%" height="15" fill="rgb(244,57,34)" fg:x="210598" fg:w="35"/><text x="100.2301%" y="431.50"></text></g><g><title>futex_wait_queue_me (35 samples, 0.02%)</title><rect x="99.9801%" y="405" width="0.0166%" height="15" fill="rgb(214,203,32)" fg:x="210598" fg:w="35"/><text x="100.2301%" y="415.50"></text></g><g><title>schedule (35 samples, 0.02%)</title><rect x="99.9801%" y="389" width="0.0166%" height="15" fill="rgb(207,58,43)" fg:x="210598" fg:w="35"/><text x="100.2301%" y="399.50"></text></g><g><title>__schedule (35 samples, 0.02%)</title><rect x="99.9801%" y="373" width="0.0166%" height="15" fill="rgb(215,193,15)" fg:x="210598" fg:w="35"/><text x="100.2301%" y="383.50"></text></g><g><title>finish_task_switch.isra.0 (35 samples, 0.02%)</title><rect x="99.9801%" y="357" width="0.0166%" height="15" fill="rgb(232,15,44)" fg:x="210598" fg:w="35"/><text x="100.2301%" y="367.50"></text></g><g><title>__perf_event_task_sched_in (33 samples, 0.02%)</title><rect x="99.9810%" y="341" width="0.0157%" height="15" fill="rgb(212,3,48)" fg:x="210600" fg:w="33"/><text x="100.2310%" y="351.50"></text></g><g><title>x86_pmu_enable (31 samples, 0.01%)</title><rect x="99.9820%" y="325" width="0.0147%" height="15" fill="rgb(218,128,7)" fg:x="210602" fg:w="31"/><text x="100.2320%" y="335.50"></text></g><g><title>intel_pmu_enable_all (30 samples, 0.01%)</title><rect x="99.9824%" y="309" width="0.0142%" height="15" fill="rgb(226,216,39)" fg:x="210603" fg:w="30"/><text x="100.2324%" y="319.50"></text></g><g><title>native_write_msr (30 samples, 0.01%)</title><rect x="99.9824%" y="293" width="0.0142%" height="15" fill="rgb(243,47,51)" fg:x="210603" fg:w="30"/><text x="100.2324%" y="303.50"></text></g><g><title>_start (51 samples, 0.02%)</title><rect x="99.9729%" y="901" width="0.0242%" height="15" fill="rgb(241,183,40)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="911.50"></text></g><g><title>__libc_start_main_alias_2 (51 samples, 0.02%)</title><rect x="99.9729%" y="885" width="0.0242%" height="15" fill="rgb(231,217,32)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="895.50"></text></g><g><title>__libc_start_call_main (51 samples, 0.02%)</title><rect x="99.9729%" y="869" width="0.0242%" height="15" fill="rgb(229,61,38)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="879.50"></text></g><g><title>main (51 samples, 0.02%)</title><rect x="99.9729%" y="853" width="0.0242%" height="15" fill="rgb(225,210,5)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="863.50"></text></g><g><title>std::rt::lang_start_internal (51 samples, 0.02%)</title><rect x="99.9729%" y="837" width="0.0242%" height="15" fill="rgb(231,79,45)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="847.50"></text></g><g><title>std::panic::catch_unwind (51 samples, 0.02%)</title><rect x="99.9729%" y="821" width="0.0242%" height="15" fill="rgb(224,100,7)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="831.50"></text></g><g><title>std::panicking::try (51 samples, 0.02%)</title><rect x="99.9729%" y="805" width="0.0242%" height="15" fill="rgb(241,198,18)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="815.50"></text></g><g><title>std::panicking::try::do_call (51 samples, 0.02%)</title><rect x="99.9729%" y="789" width="0.0242%" height="15" fill="rgb(252,97,53)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="799.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (51 samples, 0.02%)</title><rect x="99.9729%" y="773" width="0.0242%" height="15" fill="rgb(220,88,7)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="783.50"></text></g><g><title>std::panic::catch_unwind (51 samples, 0.02%)</title><rect x="99.9729%" y="757" width="0.0242%" height="15" fill="rgb(213,176,14)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="767.50"></text></g><g><title>std::panicking::try (51 samples, 0.02%)</title><rect x="99.9729%" y="741" width="0.0242%" height="15" fill="rgb(246,73,7)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="751.50"></text></g><g><title>std::panicking::try::do_call (51 samples, 0.02%)</title><rect x="99.9729%" y="725" width="0.0242%" height="15" fill="rgb(245,64,36)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (51 samples, 0.02%)</title><rect x="99.9729%" y="709" width="0.0242%" height="15" fill="rgb(245,80,10)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="719.50"></text></g><g><title>std::rt::lang_start::{{closure}} (51 samples, 0.02%)</title><rect x="99.9729%" y="693" width="0.0242%" height="15" fill="rgb(232,107,50)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="703.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (51 samples, 0.02%)</title><rect x="99.9729%" y="677" width="0.0242%" height="15" fill="rgb(253,3,0)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (51 samples, 0.02%)</title><rect x="99.9729%" y="661" width="0.0242%" height="15" fill="rgb(212,99,53)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="671.50"></text></g><g><title>hprof_slurp::main (51 samples, 0.02%)</title><rect x="99.9729%" y="645" width="0.0242%" height="15" fill="rgb(249,111,54)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="655.50"></text></g><g><title>hprof_slurp::main_result (51 samples, 0.02%)</title><rect x="99.9729%" y="629" width="0.0242%" height="15" fill="rgb(249,55,30)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="639.50"></text></g><g><title>hprof_slurp::slurp::slurp_file (51 samples, 0.02%)</title><rect x="99.9729%" y="613" width="0.0242%" height="15" fill="rgb(237,47,42)" fg:x="210583" fg:w="51"/><text x="100.2229%" y="623.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (37 samples, 0.02%)</title><rect x="99.9796%" y="597" width="0.0176%" height="15" fill="rgb(211,20,18)" fg:x="210597" fg:w="37"/><text x="100.2296%" y="607.50"></text></g><g><title>std::sync::mpsc::stream::Packet&lt;T&gt;::recv (37 samples, 0.02%)</title><rect x="99.9796%" y="581" width="0.0176%" height="15" fill="rgb(231,203,46)" fg:x="210597" fg:w="37"/><text x="100.2296%" y="591.50"></text></g><g><title>hprof-slurp (74 samples, 0.04%)</title><rect x="99.9625%" y="917" width="0.0351%" height="15" fill="rgb(237,142,3)" fg:x="210561" fg:w="74"/><text x="100.2125%" y="927.50"></text></g><g><title>all (210,640 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(241,107,1)" fg:x="0" fg:w="210640"/><text x="0.2500%" y="943.50"></text></g></svg></svg>