<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="870" onload="init(evt)" viewBox="0 0 1200 870" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="870" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="853.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="853.00"> </text><svg id="frames" x="10" width="1180" total_samples="276810"><g><title>[[heap]] (70 samples, 0.03%)</title><rect x="0.0043%" y="789" width="0.0253%" height="15" fill="rgb(227,0,7)" fg:x="12" fg:w="70"/><text x="0.2543%" y="799.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,267 samples, 0.46%)</title><rect x="0.0322%" y="773" width="0.4577%" height="15" fill="rgb(217,0,24)" fg:x="89" fg:w="1267"/><text x="0.2822%" y="783.50"></text></g><g><title>nom::multi::many1::{{closure}} (503 samples, 0.18%)</title><rect x="0.3082%" y="757" width="0.1817%" height="15" fill="rgb(221,193,54)" fg:x="853" fg:w="503"/><text x="0.5582%" y="767.50"></text></g><g><title>_int_free (51 samples, 0.02%)</title><rect x="0.5058%" y="773" width="0.0184%" height="15" fill="rgb(248,212,6)" fg:x="1400" fg:w="51"/><text x="0.7558%" y="783.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1,329 samples, 0.48%)</title><rect x="0.5394%" y="773" width="0.4801%" height="15" fill="rgb(208,68,35)" fg:x="1493" fg:w="1329"/><text x="0.7894%" y="783.50"></text></g><g><title>hashbrown::map::make_insert_hash (196 samples, 0.07%)</title><rect x="0.9487%" y="757" width="0.0708%" height="15" fill="rgb(232,128,0)" fg:x="2626" fg:w="196"/><text x="1.1987%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (185 samples, 0.07%)</title><rect x="0.9526%" y="741" width="0.0668%" height="15" fill="rgb(207,160,47)" fg:x="2637" fg:w="185"/><text x="1.2026%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u64 (185 samples, 0.07%)</title><rect x="0.9526%" y="725" width="0.0668%" height="15" fill="rgb(228,23,34)" fg:x="2637" fg:w="185"/><text x="1.2026%" y="735.50"></text></g><g><title>nom::number::streaming::be_u32 (1,843 samples, 0.67%)</title><rect x="1.0227%" y="773" width="0.6658%" height="15" fill="rgb(218,30,26)" fg:x="2831" fg:w="1843"/><text x="1.2727%" y="783.50"></text></g><g><title>nom::number::streaming::be_u64 (1,071 samples, 0.39%)</title><rect x="1.6885%" y="773" width="0.3869%" height="15" fill="rgb(220,122,19)" fg:x="4674" fg:w="1071"/><text x="1.9385%" y="783.50"></text></g><g><title>[[stack]] (5,674 samples, 2.05%)</title><rect x="0.0296%" y="789" width="2.0498%" height="15" fill="rgb(250,228,42)" fg:x="82" fg:w="5674"/><text x="0.2796%" y="799.50">[..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (52 samples, 0.02%)</title><rect x="2.0794%" y="773" width="0.0188%" height="15" fill="rgb(240,193,28)" fg:x="5756" fg:w="52"/><text x="2.3294%" y="783.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (33 samples, 0.01%)</title><rect x="2.0863%" y="757" width="0.0119%" height="15" fill="rgb(216,20,37)" fg:x="5775" fg:w="33"/><text x="2.3363%" y="767.50"></text></g><g><title>core::ops::function::FnMut::call_mut (33 samples, 0.01%)</title><rect x="2.0863%" y="741" width="0.0119%" height="15" fill="rgb(206,188,39)" fg:x="5775" fg:w="33"/><text x="2.3363%" y="751.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (29 samples, 0.01%)</title><rect x="2.0877%" y="725" width="0.0105%" height="15" fill="rgb(217,207,13)" fg:x="5779" fg:w="29"/><text x="2.3377%" y="735.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (29 samples, 0.01%)</title><rect x="2.0877%" y="709" width="0.0105%" height="15" fill="rgb(231,73,38)" fg:x="5779" fg:w="29"/><text x="2.3377%" y="719.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_instance_dump (430 samples, 0.16%)</title><rect x="2.3186%" y="725" width="0.1553%" height="15" fill="rgb(225,20,46)" fg:x="6418" fg:w="430"/><text x="2.5686%" y="735.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (430 samples, 0.16%)</title><rect x="2.3186%" y="709" width="0.1553%" height="15" fill="rgb(210,31,41)" fg:x="6418" fg:w="430"/><text x="2.5686%" y="719.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (430 samples, 0.16%)</title><rect x="2.3186%" y="693" width="0.1553%" height="15" fill="rgb(221,200,47)" fg:x="6418" fg:w="430"/><text x="2.5686%" y="703.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (430 samples, 0.16%)</title><rect x="2.3186%" y="677" width="0.1553%" height="15" fill="rgb(226,26,5)" fg:x="6418" fg:w="430"/><text x="2.5686%" y="687.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,068 samples, 0.39%)</title><rect x="2.0982%" y="773" width="0.3858%" height="15" fill="rgb(249,33,26)" fg:x="5808" fg:w="1068"/><text x="2.3482%" y="783.50"></text></g><g><title>core::ops::function::FnMut::call_mut (458 samples, 0.17%)</title><rect x="2.3186%" y="757" width="0.1655%" height="15" fill="rgb(235,183,28)" fg:x="6418" fg:w="458"/><text x="2.5686%" y="767.50"></text></g><g><title>hprof_slurp::record_parser::parse_sub_gc_record (458 samples, 0.17%)</title><rect x="2.3186%" y="741" width="0.1655%" height="15" fill="rgb(221,5,38)" fg:x="6418" fg:w="458"/><text x="2.5686%" y="751.50"></text></g><g><title>[anon] (1,146 samples, 0.41%)</title><rect x="2.0794%" y="789" width="0.4140%" height="15" fill="rgb(247,18,42)" fg:x="5756" fg:w="1146"/><text x="2.3294%" y="799.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (946 samples, 0.34%)</title><rect x="2.4992%" y="773" width="0.3418%" height="15" fill="rgb(241,131,45)" fg:x="6918" fg:w="946"/><text x="2.7492%" y="783.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i8 (172 samples, 0.06%)</title><rect x="3.3254%" y="709" width="0.0621%" height="15" fill="rgb(249,31,29)" fg:x="9205" fg:w="172"/><text x="3.5754%" y="719.50"></text></g><g><title>nom::number::streaming::be_i8 (172 samples, 0.06%)</title><rect x="3.3254%" y="693" width="0.0621%" height="15" fill="rgb(225,111,53)" fg:x="9205" fg:w="172"/><text x="3.5754%" y="703.50"></text></g><g><title>nom::combinator::mapc (172 samples, 0.06%)</title><rect x="3.3254%" y="677" width="0.0621%" height="15" fill="rgb(238,160,17)" fg:x="9205" fg:w="172"/><text x="3.5754%" y="687.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (172 samples, 0.06%)</title><rect x="3.3254%" y="661" width="0.0621%" height="15" fill="rgb(214,148,48)" fg:x="9205" fg:w="172"/><text x="3.5754%" y="671.50"></text></g><g><title>nom::combinator::map::{{closure}} (172 samples, 0.06%)</title><rect x="3.3254%" y="645" width="0.0621%" height="15" fill="rgb(232,36,49)" fg:x="9205" fg:w="172"/><text x="3.5754%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (229 samples, 0.08%)</title><rect x="3.3196%" y="741" width="0.0827%" height="15" fill="rgb(209,103,24)" fg:x="9189" fg:w="229"/><text x="3.5696%" y="751.50"></text></g><g><title>core::ops::function::FnMut::call_mut (229 samples, 0.08%)</title><rect x="3.3196%" y="725" width="0.0827%" height="15" fill="rgb(229,88,8)" fg:x="9189" fg:w="229"/><text x="3.5696%" y="735.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (41 samples, 0.01%)</title><rect x="3.3875%" y="709" width="0.0148%" height="15" fill="rgb(213,181,19)" fg:x="9377" fg:w="41"/><text x="3.6375%" y="719.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (41 samples, 0.01%)</title><rect x="3.3875%" y="693" width="0.0148%" height="15" fill="rgb(254,191,54)" fg:x="9377" fg:w="41"/><text x="3.6375%" y="703.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,564 samples, 0.57%)</title><rect x="2.8409%" y="773" width="0.5650%" height="15" fill="rgb(241,83,37)" fg:x="7864" fg:w="1564"/><text x="3.0909%" y="783.50"></text></g><g><title>nom::multi::count::{{closure}} (239 samples, 0.09%)</title><rect x="3.3196%" y="757" width="0.0863%" height="15" fill="rgb(233,36,39)" fg:x="9189" fg:w="239"/><text x="3.5696%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (594 samples, 0.21%)</title><rect x="3.4128%" y="773" width="0.2146%" height="15" fill="rgb(226,3,54)" fg:x="9447" fg:w="594"/><text x="3.6628%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (176 samples, 0.06%)</title><rect x="3.5638%" y="757" width="0.0636%" height="15" fill="rgb(245,192,40)" fg:x="9865" fg:w="176"/><text x="3.8138%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (176 samples, 0.06%)</title><rect x="3.5638%" y="741" width="0.0636%" height="15" fill="rgb(238,167,29)" fg:x="9865" fg:w="176"/><text x="3.8138%" y="751.50"></text></g><g><title>__GI___libc_free (30 samples, 0.01%)</title><rect x="3.6285%" y="773" width="0.0108%" height="15" fill="rgb(232,182,51)" fg:x="10044" fg:w="30"/><text x="3.8785%" y="783.50"></text></g><g><title>__GI___libc_malloc (31 samples, 0.01%)</title><rect x="3.6393%" y="773" width="0.0112%" height="15" fill="rgb(231,60,39)" fg:x="10074" fg:w="31"/><text x="3.8893%" y="783.50"></text></g><g><title>_int_free (43 samples, 0.02%)</title><rect x="3.6534%" y="773" width="0.0155%" height="15" fill="rgb(208,69,12)" fg:x="10113" fg:w="43"/><text x="3.9034%" y="783.50"></text></g><g><title>_int_malloc (38 samples, 0.01%)</title><rect x="3.6689%" y="773" width="0.0137%" height="15" fill="rgb(235,93,37)" fg:x="10156" fg:w="38"/><text x="3.9189%" y="783.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (191 samples, 0.07%)</title><rect x="3.6899%" y="773" width="0.0690%" height="15" fill="rgb(213,116,39)" fg:x="10214" fg:w="191"/><text x="3.9399%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (235 samples, 0.08%)</title><rect x="3.7593%" y="757" width="0.0849%" height="15" fill="rgb(222,207,29)" fg:x="10406" fg:w="235"/><text x="4.0093%" y="767.50"></text></g><g><title>hprof_slurp::main::{{closure}} (235 samples, 0.08%)</title><rect x="3.7593%" y="741" width="0.0849%" height="15" fill="rgb(206,96,30)" fg:x="10406" fg:w="235"/><text x="4.0093%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (235 samples, 0.08%)</title><rect x="3.7593%" y="725" width="0.0849%" height="15" fill="rgb(218,138,4)" fg:x="10406" fg:w="235"/><text x="4.0093%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;hprof_slurp::gc_record::GcRecord&gt;&gt; (1,163 samples, 0.42%)</title><rect x="3.8442%" y="757" width="0.4201%" height="15" fill="rgb(250,191,14)" fg:x="10641" fg:w="1163"/><text x="4.0942%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,163 samples, 0.42%)</title><rect x="3.8442%" y="741" width="0.4201%" height="15" fill="rgb(239,60,40)" fg:x="10641" fg:w="1163"/><text x="4.0942%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::gc_record::GcRecord]&gt; (1,163 samples, 0.42%)</title><rect x="3.8442%" y="725" width="0.4201%" height="15" fill="rgb(206,27,48)" fg:x="10641" fg:w="1163"/><text x="4.0942%" y="735.50"></text></g><g><title>hprof_slurp::main (1,401 samples, 0.51%)</title><rect x="3.7589%" y="773" width="0.5061%" height="15" fill="rgb(225,35,8)" fg:x="10405" fg:w="1401"/><text x="4.0089%" y="783.50"></text></g><g><title>[unknown] (4,953 samples, 1.79%)</title><rect x="2.4967%" y="789" width="1.7893%" height="15" fill="rgb(250,213,24)" fg:x="6911" fg:w="4953"/><text x="2.7467%" y="799.50">[..</text></g><g><title>__irqentry_text_end (46 samples, 0.02%)</title><rect x="4.2860%" y="789" width="0.0166%" height="15" fill="rgb(247,123,22)" fg:x="11864" fg:w="46"/><text x="4.5360%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (284 samples, 0.10%)</title><rect x="4.3080%" y="581" width="0.1026%" height="15" fill="rgb(231,138,38)" fg:x="11925" fg:w="284"/><text x="4.5580%" y="591.50"></text></g><g><title>hprof_slurp::analysis::ArrayCounter::add_elements_from_array (65 samples, 0.02%)</title><rect x="8.0391%" y="565" width="0.0235%" height="15" fill="rgb(231,145,46)" fg:x="22253" fg:w="65"/><text x="8.2891%" y="575.50"></text></g><g><title>hprof_slurp::analysis::ClassInstanceCounter::add_instance (1,310 samples, 0.47%)</title><rect x="8.0626%" y="565" width="0.4732%" height="15" fill="rgb(251,118,11)" fg:x="22318" fg:w="1310"/><text x="8.3126%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (57 samples, 0.02%)</title><rect x="9.6561%" y="405" width="0.0206%" height="15" fill="rgb(217,147,25)" fg:x="26729" fg:w="57"/><text x="9.9061%" y="415.50"></text></g><g><title>&lt;hprof_slurp::gc_record::FieldType as core::hash::Hash&gt;::hash (181 samples, 0.07%)</title><rect x="9.6232%" y="517" width="0.0654%" height="15" fill="rgb(247,81,37)" fg:x="26638" fg:w="181"/><text x="9.8732%" y="527.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (163 samples, 0.06%)</title><rect x="9.6297%" y="501" width="0.0589%" height="15" fill="rgb(209,12,38)" fg:x="26656" fg:w="163"/><text x="9.8797%" y="511.50"></text></g><g><title>core::hash::Hasher::write_isize (163 samples, 0.06%)</title><rect x="9.6297%" y="485" width="0.0589%" height="15" fill="rgb(227,1,9)" fg:x="26656" fg:w="163"/><text x="9.8797%" y="495.50"></text></g><g><title>core::hash::Hasher::write_usize (163 samples, 0.06%)</title><rect x="9.6297%" y="469" width="0.0589%" height="15" fill="rgb(248,47,43)" fg:x="26656" fg:w="163"/><text x="9.8797%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (153 samples, 0.06%)</title><rect x="9.6333%" y="453" width="0.0553%" height="15" fill="rgb(221,10,30)" fg:x="26666" fg:w="153"/><text x="9.8833%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (153 samples, 0.06%)</title><rect x="9.6333%" y="437" width="0.0553%" height="15" fill="rgb(210,229,1)" fg:x="26666" fg:w="153"/><text x="9.8833%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 samples, 0.06%)</title><rect x="9.6333%" y="421" width="0.0553%" height="15" fill="rgb(222,148,37)" fg:x="26666" fg:w="153"/><text x="9.8833%" y="431.50"></text></g><g><title>core::hash::sip::u8to64_le (33 samples, 0.01%)</title><rect x="9.6767%" y="405" width="0.0119%" height="15" fill="rgb(234,67,33)" fg:x="26786" fg:w="33"/><text x="9.9267%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (991 samples, 0.36%)</title><rect x="10.2204%" y="453" width="0.3580%" height="15" fill="rgb(247,98,35)" fg:x="28291" fg:w="991"/><text x="10.4704%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,000 samples, 0.72%)</title><rect x="10.0282%" y="469" width="0.7225%" height="15" fill="rgb(247,138,52)" fg:x="27759" fg:w="2000"/><text x="10.2782%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (477 samples, 0.17%)</title><rect x="10.5784%" y="453" width="0.1723%" height="15" fill="rgb(213,79,30)" fg:x="29282" fg:w="477"/><text x="10.8284%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2,861 samples, 1.03%)</title><rect x="11.1203%" y="453" width="1.0336%" height="15" fill="rgb(246,177,23)" fg:x="30782" fg:w="2861"/><text x="11.3703%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4,939 samples, 1.78%)</title><rect x="10.7507%" y="469" width="1.7843%" height="15" fill="rgb(230,62,27)" fg:x="29759" fg:w="4939"/><text x="11.0007%" y="479.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,055 samples, 0.38%)</title><rect x="12.1538%" y="453" width="0.3811%" height="15" fill="rgb(216,154,8)" fg:x="33643" fg:w="1055"/><text x="12.4038%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7,880 samples, 2.85%)</title><rect x="9.6886%" y="517" width="2.8467%" height="15" fill="rgb(244,35,45)" fg:x="26819" fg:w="7880"/><text x="9.9386%" y="527.50">&lt;s..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7,880 samples, 2.85%)</title><rect x="9.6886%" y="501" width="2.8467%" height="15" fill="rgb(251,115,12)" fg:x="26819" fg:w="7880"/><text x="9.9386%" y="511.50">&lt;c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7,880 samples, 2.85%)</title><rect x="9.6886%" y="485" width="2.8467%" height="15" fill="rgb(240,54,50)" fg:x="26819" fg:w="7880"/><text x="9.9386%" y="495.50">&lt;c..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1,535 samples, 0.55%)</title><rect x="12.5353%" y="517" width="0.5545%" height="15" fill="rgb(233,84,52)" fg:x="34699" fg:w="1535"/><text x="12.7853%" y="527.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (903 samples, 0.33%)</title><rect x="12.7636%" y="501" width="0.3262%" height="15" fill="rgb(207,117,47)" fg:x="35331" fg:w="903"/><text x="13.0136%" y="511.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (712 samples, 0.26%)</title><rect x="12.8326%" y="485" width="0.2572%" height="15" fill="rgb(249,43,39)" fg:x="35522" fg:w="712"/><text x="13.0826%" y="495.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (712 samples, 0.26%)</title><rect x="12.8326%" y="469" width="0.2572%" height="15" fill="rgb(209,38,44)" fg:x="35522" fg:w="712"/><text x="13.0826%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (903 samples, 0.33%)</title><rect x="14.2307%" y="421" width="0.3262%" height="15" fill="rgb(236,212,23)" fg:x="39392" fg:w="903"/><text x="14.4807%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,023 samples, 0.73%)</title><rect x="14.0046%" y="437" width="0.7308%" height="15" fill="rgb(242,79,21)" fg:x="38766" fg:w="2023"/><text x="14.2546%" y="447.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (494 samples, 0.18%)</title><rect x="14.5569%" y="421" width="0.1785%" height="15" fill="rgb(211,96,35)" fg:x="40295" fg:w="494"/><text x="14.8069%" y="431.50"></text></g><g><title>core::hash::sip::u8to64_le (1,422 samples, 0.51%)</title><rect x="14.7365%" y="437" width="0.5137%" height="15" fill="rgb(253,215,40)" fg:x="40792" fg:w="1422"/><text x="14.9865%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (5,855 samples, 2.12%)</title><rect x="13.2578%" y="485" width="2.1152%" height="15" fill="rgb(211,81,21)" fg:x="36699" fg:w="5855"/><text x="13.5078%" y="495.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5,855 samples, 2.12%)</title><rect x="13.2578%" y="469" width="2.1152%" height="15" fill="rgb(208,190,38)" fg:x="36699" fg:w="5855"/><text x="13.5078%" y="479.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5,855 samples, 2.12%)</title><rect x="13.2578%" y="453" width="2.1152%" height="15" fill="rgb(235,213,38)" fg:x="36699" fg:w="5855"/><text x="13.5078%" y="463.50">&lt;..</text></g><g><title>core::intrinsics::copy_nonoverlapping (340 samples, 0.12%)</title><rect x="15.2502%" y="437" width="0.1228%" height="15" fill="rgb(237,122,38)" fg:x="42214" fg:w="340"/><text x="15.5002%" y="447.50"></text></g><g><title>hashbrown::map::make_insert_hash (15,918 samples, 5.75%)</title><rect x="9.6232%" y="533" width="5.7505%" height="15" fill="rgb(244,218,35)" fg:x="26638" fg:w="15918"/><text x="9.8732%" y="543.50">hashbro..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (6,322 samples, 2.28%)</title><rect x="13.0898%" y="517" width="2.2839%" height="15" fill="rgb(240,68,47)" fg:x="36234" fg:w="6322"/><text x="13.3398%" y="527.50">c..</text></g><g><title>core::hash::Hasher::write_u64 (6,322 samples, 2.28%)</title><rect x="13.0898%" y="501" width="2.2839%" height="15" fill="rgb(210,16,53)" fg:x="36234" fg:w="6322"/><text x="13.3398%" y="511.50">c..</text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,095 samples, 0.40%)</title><rect x="15.8838%" y="469" width="0.3956%" height="15" fill="rgb(235,124,12)" fg:x="43968" fg:w="1095"/><text x="16.1338%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,215 samples, 0.44%)</title><rect x="15.8795%" y="485" width="0.4389%" height="15" fill="rgb(224,169,11)" fg:x="43956" fg:w="1215"/><text x="16.1295%" y="495.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (108 samples, 0.04%)</title><rect x="16.2794%" y="469" width="0.0390%" height="15" fill="rgb(250,166,2)" fg:x="45063" fg:w="108"/><text x="16.5294%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (55 samples, 0.02%)</title><rect x="16.3256%" y="485" width="0.0199%" height="15" fill="rgb(242,216,29)" fg:x="45191" fg:w="55"/><text x="16.5756%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (55 samples, 0.02%)</title><rect x="16.3256%" y="469" width="0.0199%" height="15" fill="rgb(230,116,27)" fg:x="45191" fg:w="55"/><text x="16.5756%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (55 samples, 0.02%)</title><rect x="16.3256%" y="453" width="0.0199%" height="15" fill="rgb(228,99,48)" fg:x="45191" fg:w="55"/><text x="16.5756%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,760 samples, 0.64%)</title><rect x="15.7111%" y="501" width="0.6358%" height="15" fill="rgb(253,11,6)" fg:x="43490" fg:w="1760"/><text x="15.9611%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,780 samples, 0.64%)</title><rect x="15.7111%" y="517" width="0.6430%" height="15" fill="rgb(247,143,39)" fg:x="43490" fg:w="1780"/><text x="15.9611%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (697 samples, 0.25%)</title><rect x="16.3560%" y="517" width="0.2518%" height="15" fill="rgb(236,97,10)" fg:x="45275" fg:w="697"/><text x="16.6060%" y="527.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (697 samples, 0.25%)</title><rect x="16.3560%" y="501" width="0.2518%" height="15" fill="rgb(233,208,19)" fg:x="45275" fg:w="697"/><text x="16.6060%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (697 samples, 0.25%)</title><rect x="16.3560%" y="485" width="0.2518%" height="15" fill="rgb(216,164,2)" fg:x="45275" fg:w="697"/><text x="16.6060%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (697 samples, 0.25%)</title><rect x="16.3560%" y="469" width="0.2518%" height="15" fill="rgb(220,129,5)" fg:x="45275" fg:w="697"/><text x="16.6060%" y="479.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (483 samples, 0.17%)</title><rect x="16.7772%" y="469" width="0.1745%" height="15" fill="rgb(242,17,10)" fg:x="46441" fg:w="483"/><text x="17.0272%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (483 samples, 0.17%)</title><rect x="16.7772%" y="453" width="0.1745%" height="15" fill="rgb(242,107,0)" fg:x="46441" fg:w="483"/><text x="17.0272%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (483 samples, 0.17%)</title><rect x="16.7772%" y="437" width="0.1745%" height="15" fill="rgb(251,28,31)" fg:x="46441" fg:w="483"/><text x="17.0272%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1,407 samples, 0.51%)</title><rect x="16.6078%" y="517" width="0.5083%" height="15" fill="rgb(233,223,10)" fg:x="45972" fg:w="1407"/><text x="16.8578%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1,407 samples, 0.51%)</title><rect x="16.6078%" y="501" width="0.5083%" height="15" fill="rgb(215,21,27)" fg:x="45972" fg:w="1407"/><text x="16.8578%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1,407 samples, 0.51%)</title><rect x="16.6078%" y="485" width="0.5083%" height="15" fill="rgb(232,23,21)" fg:x="45972" fg:w="1407"/><text x="16.8578%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (455 samples, 0.16%)</title><rect x="16.9517%" y="469" width="0.1644%" height="15" fill="rgb(244,5,23)" fg:x="46924" fg:w="455"/><text x="17.2017%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (455 samples, 0.16%)</title><rect x="16.9517%" y="453" width="0.1644%" height="15" fill="rgb(226,81,46)" fg:x="46924" fg:w="455"/><text x="17.2017%" y="463.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (455 samples, 0.16%)</title><rect x="16.9517%" y="437" width="0.1644%" height="15" fill="rgb(247,70,30)" fg:x="46924" fg:w="455"/><text x="17.2017%" y="447.50"></text></g><g><title>core::core_arch::simd::i8x16::new (455 samples, 0.16%)</title><rect x="16.9517%" y="421" width="0.1644%" height="15" fill="rgb(212,68,19)" fg:x="46924" fg:w="455"/><text x="17.2017%" y="431.50"></text></g><g><title>&lt;hprof_slurp::gc_record::FieldType as core::cmp::PartialEq&gt;::eq (71 samples, 0.03%)</title><rect x="17.1161%" y="501" width="0.0256%" height="15" fill="rgb(240,187,13)" fg:x="47379" fg:w="71"/><text x="17.3661%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7,766 samples, 2.81%)</title><rect x="15.3737%" y="533" width="2.8055%" height="15" fill="rgb(223,113,26)" fg:x="42556" fg:w="7766"/><text x="15.6237%" y="543.50">ha..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (2,943 samples, 1.06%)</title><rect x="17.1161%" y="517" width="1.0632%" height="15" fill="rgb(206,192,2)" fg:x="47379" fg:w="2943"/><text x="17.3661%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (2,872 samples, 1.04%)</title><rect x="17.1417%" y="501" width="1.0375%" height="15" fill="rgb(241,108,4)" fg:x="47450" fg:w="2872"/><text x="17.3917%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (26,376 samples, 9.53%)</title><rect x="8.6511%" y="549" width="9.5286%" height="15" fill="rgb(247,173,49)" fg:x="23947" fg:w="26376"/><text x="8.9011%" y="559.50">hashbrown::rus..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (27,211 samples, 9.83%)</title><rect x="8.5365%" y="565" width="9.8302%" height="15" fill="rgb(224,114,35)" fg:x="23630" fg:w="27211"/><text x="8.7865%" y="575.50">std::collectio..</text></g><g><title>std::collections::hash::map::map_entry (518 samples, 0.19%)</title><rect x="18.1796%" y="549" width="0.1871%" height="15" fill="rgb(245,159,27)" fg:x="50323" fg:w="518"/><text x="18.4296%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (38,917 samples, 14.06%)</title><rect x="4.3080%" y="597" width="14.0591%" height="15" fill="rgb(245,172,44)" fg:x="11925" fg:w="38917"/><text x="4.5580%" y="607.50">&lt;core::slice::iter::I..</text></g><g><title>hprof_slurp::main::{{closure}} (38,633 samples, 13.96%)</title><rect x="4.4106%" y="581" width="13.9565%" height="15" fill="rgb(236,23,11)" fg:x="12209" fg:w="38633"/><text x="4.6606%" y="591.50">hprof_slurp::main::{{..</text></g><g><title>asm_exc_page_fault (10,197 samples, 3.68%)</title><rect x="18.5456%" y="309" width="3.6838%" height="15" fill="rgb(205,117,38)" fg:x="51336" fg:w="10197"/><text x="18.7956%" y="319.50">asm_..</text></g><g><title>__read_end_io (52 samples, 0.02%)</title><rect x="23.9872%" y="69" width="0.0188%" height="15" fill="rgb(237,72,25)" fg:x="66399" fg:w="52"/><text x="24.2372%" y="79.50"></text></g><g><title>blk_update_request (79 samples, 0.03%)</title><rect x="23.9865%" y="117" width="0.0285%" height="15" fill="rgb(244,70,9)" fg:x="66397" fg:w="79"/><text x="24.2365%" y="127.50"></text></g><g><title>bio_endio (78 samples, 0.03%)</title><rect x="23.9869%" y="101" width="0.0282%" height="15" fill="rgb(217,125,39)" fg:x="66398" fg:w="78"/><text x="24.2369%" y="111.50"></text></g><g><title>mpage_end_io (77 samples, 0.03%)</title><rect x="23.9872%" y="85" width="0.0278%" height="15" fill="rgb(235,36,10)" fg:x="66399" fg:w="77"/><text x="24.2372%" y="95.50"></text></g><g><title>nvme_complete_rq (84 samples, 0.03%)</title><rect x="23.9854%" y="149" width="0.0303%" height="15" fill="rgb(251,123,47)" fg:x="66394" fg:w="84"/><text x="24.2354%" y="159.50"></text></g><g><title>blk_mq_end_request (83 samples, 0.03%)</title><rect x="23.9858%" y="133" width="0.0300%" height="15" fill="rgb(221,13,13)" fg:x="66395" fg:w="83"/><text x="24.2358%" y="143.50"></text></g><g><title>__handle_irq_event_percpu (101 samples, 0.04%)</title><rect x="23.9829%" y="213" width="0.0365%" height="15" fill="rgb(238,131,9)" fg:x="66387" fg:w="101"/><text x="24.2329%" y="223.50"></text></g><g><title>nvme_irq (101 samples, 0.04%)</title><rect x="23.9829%" y="197" width="0.0365%" height="15" fill="rgb(211,50,8)" fg:x="66387" fg:w="101"/><text x="24.2329%" y="207.50"></text></g><g><title>nvme_process_cq (100 samples, 0.04%)</title><rect x="23.9832%" y="181" width="0.0361%" height="15" fill="rgb(245,182,24)" fg:x="66388" fg:w="100"/><text x="24.2332%" y="191.50"></text></g><g><title>nvme_pci_complete_rq (94 samples, 0.03%)</title><rect x="23.9854%" y="165" width="0.0340%" height="15" fill="rgb(242,14,37)" fg:x="66394" fg:w="94"/><text x="24.2354%" y="175.50"></text></g><g><title>asm_common_interrupt (106 samples, 0.04%)</title><rect x="23.9818%" y="293" width="0.0383%" height="15" fill="rgb(246,228,12)" fg:x="66384" fg:w="106"/><text x="24.2318%" y="303.50"></text></g><g><title>common_interrupt (106 samples, 0.04%)</title><rect x="23.9818%" y="277" width="0.0383%" height="15" fill="rgb(213,55,15)" fg:x="66384" fg:w="106"/><text x="24.2318%" y="287.50"></text></g><g><title>asm_call_sysvec_on_stack (105 samples, 0.04%)</title><rect x="23.9822%" y="261" width="0.0379%" height="15" fill="rgb(209,9,3)" fg:x="66385" fg:w="105"/><text x="24.2322%" y="271.50"></text></g><g><title>handle_edge_irq (105 samples, 0.04%)</title><rect x="23.9822%" y="245" width="0.0379%" height="15" fill="rgb(230,59,30)" fg:x="66385" fg:w="105"/><text x="24.2322%" y="255.50"></text></g><g><title>handle_irq_event (103 samples, 0.04%)</title><rect x="23.9829%" y="229" width="0.0372%" height="15" fill="rgb(209,121,21)" fg:x="66387" fg:w="103"/><text x="24.2329%" y="239.50"></text></g><g><title>blk_update_request (44 samples, 0.02%)</title><rect x="24.1451%" y="69" width="0.0159%" height="15" fill="rgb(220,109,13)" fg:x="66836" fg:w="44"/><text x="24.3951%" y="79.50"></text></g><g><title>bio_endio (44 samples, 0.02%)</title><rect x="24.1451%" y="53" width="0.0159%" height="15" fill="rgb(232,18,1)" fg:x="66836" fg:w="44"/><text x="24.3951%" y="63.50"></text></g><g><title>mpage_end_io (43 samples, 0.02%)</title><rect x="24.1454%" y="37" width="0.0155%" height="15" fill="rgb(215,41,42)" fg:x="66837" fg:w="43"/><text x="24.3954%" y="47.50"></text></g><g><title>nvme_complete_rq (47 samples, 0.02%)</title><rect x="24.1444%" y="101" width="0.0170%" height="15" fill="rgb(224,123,36)" fg:x="66834" fg:w="47"/><text x="24.3944%" y="111.50"></text></g><g><title>blk_mq_end_request (47 samples, 0.02%)</title><rect x="24.1444%" y="85" width="0.0170%" height="15" fill="rgb(240,125,3)" fg:x="66834" fg:w="47"/><text x="24.3944%" y="95.50"></text></g><g><title>handle_irq_event (54 samples, 0.02%)</title><rect x="24.1440%" y="181" width="0.0195%" height="15" fill="rgb(205,98,50)" fg:x="66833" fg:w="54"/><text x="24.3940%" y="191.50"></text></g><g><title>__handle_irq_event_percpu (54 samples, 0.02%)</title><rect x="24.1440%" y="165" width="0.0195%" height="15" fill="rgb(205,185,37)" fg:x="66833" fg:w="54"/><text x="24.3940%" y="175.50"></text></g><g><title>nvme_irq (54 samples, 0.02%)</title><rect x="24.1440%" y="149" width="0.0195%" height="15" fill="rgb(238,207,15)" fg:x="66833" fg:w="54"/><text x="24.3940%" y="159.50"></text></g><g><title>nvme_process_cq (54 samples, 0.02%)</title><rect x="24.1440%" y="133" width="0.0195%" height="15" fill="rgb(213,199,42)" fg:x="66833" fg:w="54"/><text x="24.3940%" y="143.50"></text></g><g><title>nvme_pci_complete_rq (53 samples, 0.02%)</title><rect x="24.1444%" y="117" width="0.0191%" height="15" fill="rgb(235,201,11)" fg:x="66834" fg:w="53"/><text x="24.3944%" y="127.50"></text></g><g><title>handle_edge_irq (56 samples, 0.02%)</title><rect x="24.1440%" y="197" width="0.0202%" height="15" fill="rgb(207,46,11)" fg:x="66833" fg:w="56"/><text x="24.3940%" y="207.50"></text></g><g><title>asm_common_interrupt (57 samples, 0.02%)</title><rect x="24.1440%" y="245" width="0.0206%" height="15" fill="rgb(241,35,35)" fg:x="66833" fg:w="57"/><text x="24.3940%" y="255.50"></text></g><g><title>common_interrupt (57 samples, 0.02%)</title><rect x="24.1440%" y="229" width="0.0206%" height="15" fill="rgb(243,32,47)" fg:x="66833" fg:w="57"/><text x="24.3940%" y="239.50"></text></g><g><title>asm_call_sysvec_on_stack (57 samples, 0.02%)</title><rect x="24.1440%" y="213" width="0.0206%" height="15" fill="rgb(247,202,23)" fg:x="66833" fg:w="57"/><text x="24.3940%" y="223.50"></text></g><g><title>down_read_trylock (134 samples, 0.05%)</title><rect x="24.1682%" y="245" width="0.0484%" height="15" fill="rgb(219,102,11)" fg:x="66900" fg:w="134"/><text x="24.4182%" y="255.50"></text></g><g><title>find_vma (67 samples, 0.02%)</title><rect x="24.2166%" y="245" width="0.0242%" height="15" fill="rgb(243,110,44)" fg:x="67034" fg:w="67"/><text x="24.4666%" y="255.50"></text></g><g><title>vmacache_find (52 samples, 0.02%)</title><rect x="24.2220%" y="229" width="0.0188%" height="15" fill="rgb(222,74,54)" fg:x="67049" fg:w="52"/><text x="24.4720%" y="239.50"></text></g><g><title>__count_memcg_events (36 samples, 0.01%)</title><rect x="24.3517%" y="229" width="0.0130%" height="15" fill="rgb(216,99,12)" fg:x="67408" fg:w="36"/><text x="24.6017%" y="239.50"></text></g><g><title>__count_memcg_events.part.0 (36 samples, 0.01%)</title><rect x="24.3517%" y="213" width="0.0130%" height="15" fill="rgb(226,22,26)" fg:x="67408" fg:w="36"/><text x="24.6017%" y="223.50"></text></g><g><title>_raw_spin_lock (126 samples, 0.05%)</title><rect x="24.5728%" y="197" width="0.0455%" height="15" fill="rgb(217,163,10)" fg:x="68020" fg:w="126"/><text x="24.8228%" y="207.50"></text></g><g><title>clear_page_erms (2,424 samples, 0.88%)</title><rect x="24.9427%" y="133" width="0.8757%" height="15" fill="rgb(213,25,53)" fg:x="69044" fg:w="2424"/><text x="25.1927%" y="143.50"></text></g><g><title>kernel_init_free_pages (28 samples, 0.01%)</title><rect x="25.8184%" y="133" width="0.0101%" height="15" fill="rgb(252,105,26)" fg:x="71468" fg:w="28"/><text x="26.0684%" y="143.50"></text></g><g><title>__inc_numa_state (35 samples, 0.01%)</title><rect x="25.8712%" y="117" width="0.0126%" height="15" fill="rgb(220,39,43)" fg:x="71614" fg:w="35"/><text x="26.1212%" y="127.50"></text></g><g><title>rmqueue (991 samples, 0.36%)</title><rect x="25.8285%" y="133" width="0.3580%" height="15" fill="rgb(229,68,48)" fg:x="71496" fg:w="991"/><text x="26.0785%" y="143.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (835 samples, 0.30%)</title><rect x="25.8849%" y="117" width="0.3017%" height="15" fill="rgb(252,8,32)" fg:x="71652" fg:w="835"/><text x="26.1349%" y="127.50"></text></g><g><title>rmqueue_bulk.constprop.0 (512 samples, 0.18%)</title><rect x="26.0016%" y="101" width="0.1850%" height="15" fill="rgb(223,20,43)" fg:x="71975" fg:w="512"/><text x="26.2516%" y="111.50"></text></g><g><title>get_page_from_freelist (3,638 samples, 1.31%)</title><rect x="24.8741%" y="149" width="1.3143%" height="15" fill="rgb(229,81,49)" fg:x="68854" fg:w="3638"/><text x="25.1241%" y="159.50"></text></g><g><title>__alloc_pages_nodemask (3,871 samples, 1.40%)</title><rect x="24.8037%" y="165" width="1.3984%" height="15" fill="rgb(236,28,36)" fg:x="68659" fg:w="3871"/><text x="25.0537%" y="175.50"></text></g><g><title>alloc_pages_vma (4,098 samples, 1.48%)</title><rect x="24.7401%" y="181" width="1.4804%" height="15" fill="rgb(249,185,26)" fg:x="68483" fg:w="4098"/><text x="24.9901%" y="191.50"></text></g><g><title>cgroup_throttle_swaprate (561 samples, 0.20%)</title><rect x="26.2212%" y="181" width="0.2027%" height="15" fill="rgb(249,174,33)" fg:x="72583" fg:w="561"/><text x="26.4712%" y="191.50"></text></g><g><title>__mod_memcg_lruvec_state (154 samples, 0.06%)</title><rect x="26.7328%" y="101" width="0.0556%" height="15" fill="rgb(233,201,37)" fg:x="73999" fg:w="154"/><text x="26.9828%" y="111.50"></text></g><g><title>__mod_memcg_state.part.0 (89 samples, 0.03%)</title><rect x="26.7563%" y="85" width="0.0322%" height="15" fill="rgb(221,78,26)" fg:x="74064" fg:w="89"/><text x="27.0063%" y="95.50"></text></g><g><title>__mod_lruvec_state (194 samples, 0.07%)</title><rect x="26.7274%" y="117" width="0.0701%" height="15" fill="rgb(250,127,30)" fg:x="73984" fg:w="194"/><text x="26.9774%" y="127.50"></text></g><g><title>__mod_node_page_state (41 samples, 0.01%)</title><rect x="26.7982%" y="117" width="0.0148%" height="15" fill="rgb(230,49,44)" fg:x="74180" fg:w="41"/><text x="27.0482%" y="127.50"></text></g><g><title>mem_cgroup_update_lru_size (28 samples, 0.01%)</title><rect x="26.8191%" y="117" width="0.0101%" height="15" fill="rgb(229,67,23)" fg:x="74238" fg:w="28"/><text x="27.0691%" y="127.50"></text></g><g><title>__pagevec_lru_add_fn (952 samples, 0.34%)</title><rect x="26.5258%" y="133" width="0.3439%" height="15" fill="rgb(249,83,47)" fg:x="73426" fg:w="952"/><text x="26.7758%" y="143.50"></text></g><g><title>page_mapping (112 samples, 0.04%)</title><rect x="26.8292%" y="117" width="0.0405%" height="15" fill="rgb(215,43,3)" fg:x="74266" fg:w="112"/><text x="27.0792%" y="127.50"></text></g><g><title>lock_page_lruvec_irqsave (34 samples, 0.01%)</title><rect x="26.8701%" y="133" width="0.0123%" height="15" fill="rgb(238,154,13)" fg:x="74379" fg:w="34"/><text x="27.1201%" y="143.50"></text></g><g><title>__pagevec_lru_add (1,227 samples, 0.44%)</title><rect x="26.4987%" y="149" width="0.4433%" height="15" fill="rgb(219,56,2)" fg:x="73351" fg:w="1227"/><text x="26.7487%" y="159.50"></text></g><g><title>release_pages (143 samples, 0.05%)</title><rect x="26.8903%" y="133" width="0.0517%" height="15" fill="rgb(233,0,4)" fg:x="74435" fg:w="143"/><text x="27.1403%" y="143.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1,407 samples, 0.51%)</title><rect x="26.4369%" y="181" width="0.5083%" height="15" fill="rgb(235,30,7)" fg:x="73180" fg:w="1407"/><text x="26.6869%" y="191.50"></text></g><g><title>lru_cache_add (1,384 samples, 0.50%)</title><rect x="26.4452%" y="165" width="0.5000%" height="15" fill="rgb(250,79,13)" fg:x="73203" fg:w="1384"/><text x="26.6952%" y="175.50"></text></g><g><title>get_mem_cgroup_from_mm (371 samples, 0.13%)</title><rect x="27.0890%" y="165" width="0.1340%" height="15" fill="rgb(211,146,34)" fg:x="74985" fg:w="371"/><text x="27.3390%" y="175.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (98 samples, 0.04%)</title><rect x="27.2230%" y="165" width="0.0354%" height="15" fill="rgb(228,22,38)" fg:x="75356" fg:w="98"/><text x="27.4730%" y="175.50"></text></g><g><title>__count_memcg_events.part.0 (66 samples, 0.02%)</title><rect x="27.2346%" y="149" width="0.0238%" height="15" fill="rgb(235,168,5)" fg:x="75388" fg:w="66"/><text x="27.4846%" y="159.50"></text></g><g><title>page_counter_try_charge (84 samples, 0.03%)</title><rect x="27.3899%" y="149" width="0.0303%" height="15" fill="rgb(221,155,16)" fg:x="75818" fg:w="84"/><text x="27.6399%" y="159.50"></text></g><g><title>mem_cgroup_charge (1,326 samples, 0.48%)</title><rect x="26.9452%" y="181" width="0.4790%" height="15" fill="rgb(215,215,53)" fg:x="74587" fg:w="1326"/><text x="27.1952%" y="191.50"></text></g><g><title>try_charge (435 samples, 0.16%)</title><rect x="27.2671%" y="165" width="0.1571%" height="15" fill="rgb(223,4,10)" fg:x="75478" fg:w="435"/><text x="27.5171%" y="175.50"></text></g><g><title>__mod_memcg_lruvec_state (156 samples, 0.06%)</title><rect x="27.4654%" y="133" width="0.0564%" height="15" fill="rgb(234,103,6)" fg:x="76027" fg:w="156"/><text x="27.7154%" y="143.50"></text></g><g><title>__mod_memcg_state.part.0 (86 samples, 0.03%)</title><rect x="27.4907%" y="117" width="0.0311%" height="15" fill="rgb(227,97,0)" fg:x="76097" fg:w="86"/><text x="27.7407%" y="127.50"></text></g><g><title>__mod_lruvec_state (211 samples, 0.08%)</title><rect x="27.4567%" y="149" width="0.0762%" height="15" fill="rgb(234,150,53)" fg:x="76003" fg:w="211"/><text x="27.7067%" y="159.50"></text></g><g><title>__mod_lruvec_page_state (297 samples, 0.11%)</title><rect x="27.4495%" y="165" width="0.1073%" height="15" fill="rgb(228,201,54)" fg:x="75983" fg:w="297"/><text x="27.6995%" y="175.50"></text></g><g><title>__mod_node_page_state (59 samples, 0.02%)</title><rect x="27.5355%" y="149" width="0.0213%" height="15" fill="rgb(222,22,37)" fg:x="76221" fg:w="59"/><text x="27.7855%" y="159.50"></text></g><g><title>page_add_new_anon_rmap (373 samples, 0.13%)</title><rect x="27.4361%" y="181" width="0.1347%" height="15" fill="rgb(237,53,32)" fg:x="75946" fg:w="373"/><text x="27.6861%" y="191.50"></text></g><g><title>do_anonymous_page (8,214 samples, 2.97%)</title><rect x="24.6331%" y="197" width="2.9674%" height="15" fill="rgb(233,25,53)" fg:x="68187" fg:w="8214"/><text x="24.8831%" y="207.50">do_..</text></g><g><title>handle_pte_fault (8,636 samples, 3.12%)</title><rect x="24.5071%" y="213" width="3.1198%" height="15" fill="rgb(210,40,34)" fg:x="67838" fg:w="8636"/><text x="24.7571%" y="223.50">han..</text></g><g><title>__handle_mm_fault (9,047 samples, 3.27%)</title><rect x="24.3647%" y="229" width="3.2683%" height="15" fill="rgb(241,220,44)" fg:x="67444" fg:w="9047"/><text x="24.6147%" y="239.50">__h..</text></g><g><title>handle_mm_fault (9,457 samples, 3.42%)</title><rect x="24.2408%" y="245" width="3.4164%" height="15" fill="rgb(235,28,35)" fg:x="67101" fg:w="9457"/><text x="24.4908%" y="255.50">han..</text></g><g><title>rcu_read_unlock_strict (64 samples, 0.02%)</title><rect x="27.6648%" y="245" width="0.0231%" height="15" fill="rgb(210,56,17)" fg:x="76579" fg:w="64"/><text x="27.9148%" y="255.50"></text></g><g><title>up_read (128 samples, 0.05%)</title><rect x="27.6883%" y="245" width="0.0462%" height="15" fill="rgb(224,130,29)" fg:x="76644" fg:w="128"/><text x="27.9383%" y="255.50"></text></g><g><title>do_user_addr_fault (10,147 samples, 3.67%)</title><rect x="24.0728%" y="261" width="3.6657%" height="15" fill="rgb(235,212,8)" fg:x="66636" fg:w="10147"/><text x="24.3228%" y="271.50">do_u..</text></g><g><title>exc_page_fault (10,348 samples, 3.74%)</title><rect x="24.0226%" y="277" width="3.7383%" height="15" fill="rgb(223,33,50)" fg:x="66497" fg:w="10348"/><text x="24.2726%" y="287.50">exc_..</text></g><g><title>asm_exc_page_fault (10,391 samples, 3.75%)</title><rect x="24.0201%" y="293" width="3.7538%" height="15" fill="rgb(219,149,13)" fg:x="66490" fg:w="10391"/><text x="24.2701%" y="303.50">asm_..</text></g><g><title>copy_user_enhanced_fast_string (15,367 samples, 5.55%)</title><rect x="22.2300%" y="309" width="5.5515%" height="15" fill="rgb(250,156,29)" fg:x="61535" fg:w="15367"/><text x="22.4800%" y="319.50">copy_us..</text></g><g><title>copyout (36 samples, 0.01%)</title><rect x="27.7815%" y="309" width="0.0130%" height="15" fill="rgb(216,193,19)" fg:x="76902" fg:w="36"/><text x="28.0315%" y="319.50"></text></g><g><title>error_entry (169 samples, 0.06%)</title><rect x="27.7945%" y="309" width="0.0611%" height="15" fill="rgb(216,135,14)" fg:x="76938" fg:w="169"/><text x="28.0445%" y="319.50"></text></g><g><title>copy_page_to_iter_iovec (25,989 samples, 9.39%)</title><rect x="18.4856%" y="325" width="9.3888%" height="15" fill="rgb(241,47,5)" fg:x="51170" fg:w="25989"/><text x="18.7356%" y="335.50">copy_page_to_..</text></g><g><title>copy_page_to_iter (26,059 samples, 9.41%)</title><rect x="18.4730%" y="341" width="9.4140%" height="15" fill="rgb(233,42,35)" fg:x="51135" fg:w="26059"/><text x="18.7230%" y="351.50">copy_page_to_..</text></g><g><title>copyout (35 samples, 0.01%)</title><rect x="27.8744%" y="325" width="0.0126%" height="15" fill="rgb(231,13,6)" fg:x="77159" fg:w="35"/><text x="28.1244%" y="335.50"></text></g><g><title>find_get_pages_contig (300 samples, 0.11%)</title><rect x="27.9188%" y="325" width="0.1084%" height="15" fill="rgb(207,181,40)" fg:x="77282" fg:w="300"/><text x="28.1688%" y="335.50"></text></g><g><title>nvme_complete_rq (28 samples, 0.01%)</title><rect x="29.0719%" y="53" width="0.0101%" height="15" fill="rgb(254,173,49)" fg:x="80474" fg:w="28"/><text x="29.3219%" y="63.50"></text></g><g><title>blk_mq_end_request (28 samples, 0.01%)</title><rect x="29.0719%" y="37" width="0.0101%" height="15" fill="rgb(221,1,38)" fg:x="80474" fg:w="28"/><text x="29.3219%" y="47.50"></text></g><g><title>__handle_irq_event_percpu (31 samples, 0.01%)</title><rect x="29.0712%" y="117" width="0.0112%" height="15" fill="rgb(206,124,46)" fg:x="80472" fg:w="31"/><text x="29.3212%" y="127.50"></text></g><g><title>nvme_irq (31 samples, 0.01%)</title><rect x="29.0712%" y="101" width="0.0112%" height="15" fill="rgb(249,21,11)" fg:x="80472" fg:w="31"/><text x="29.3212%" y="111.50"></text></g><g><title>nvme_process_cq (31 samples, 0.01%)</title><rect x="29.0712%" y="85" width="0.0112%" height="15" fill="rgb(222,201,40)" fg:x="80472" fg:w="31"/><text x="29.3212%" y="95.50"></text></g><g><title>nvme_pci_complete_rq (30 samples, 0.01%)</title><rect x="29.0716%" y="69" width="0.0108%" height="15" fill="rgb(235,61,29)" fg:x="80473" fg:w="30"/><text x="29.3216%" y="79.50"></text></g><g><title>handle_irq_event (32 samples, 0.01%)</title><rect x="29.0712%" y="133" width="0.0116%" height="15" fill="rgb(219,207,3)" fg:x="80472" fg:w="32"/><text x="29.3212%" y="143.50"></text></g><g><title>asm_common_interrupt (34 samples, 0.01%)</title><rect x="29.0712%" y="197" width="0.0123%" height="15" fill="rgb(222,56,46)" fg:x="80472" fg:w="34"/><text x="29.3212%" y="207.50"></text></g><g><title>common_interrupt (34 samples, 0.01%)</title><rect x="29.0712%" y="181" width="0.0123%" height="15" fill="rgb(239,76,54)" fg:x="80472" fg:w="34"/><text x="29.3212%" y="191.50"></text></g><g><title>asm_call_sysvec_on_stack (34 samples, 0.01%)</title><rect x="29.0712%" y="165" width="0.0123%" height="15" fill="rgb(231,124,27)" fg:x="80472" fg:w="34"/><text x="29.3212%" y="175.50"></text></g><g><title>handle_edge_irq (34 samples, 0.01%)</title><rect x="29.0712%" y="149" width="0.0123%" height="15" fill="rgb(249,195,6)" fg:x="80472" fg:w="34"/><text x="29.3212%" y="159.50"></text></g><g><title>clear_page_erms (2,298 samples, 0.83%)</title><rect x="28.2537%" y="213" width="0.8302%" height="15" fill="rgb(237,174,47)" fg:x="78209" fg:w="2298"/><text x="28.5037%" y="223.50"></text></g><g><title>kernel_init_free_pages (48 samples, 0.02%)</title><rect x="29.0838%" y="213" width="0.0173%" height="15" fill="rgb(206,201,31)" fg:x="80507" fg:w="48"/><text x="29.3338%" y="223.50"></text></g><g><title>__inc_numa_state (34 samples, 0.01%)</title><rect x="29.1373%" y="197" width="0.0123%" height="15" fill="rgb(231,57,52)" fg:x="80655" fg:w="34"/><text x="29.3873%" y="207.50"></text></g><g><title>rmqueue (946 samples, 0.34%)</title><rect x="29.1012%" y="213" width="0.3418%" height="15" fill="rgb(248,177,22)" fg:x="80555" fg:w="946"/><text x="29.3512%" y="223.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (806 samples, 0.29%)</title><rect x="29.1518%" y="197" width="0.2912%" height="15" fill="rgb(215,211,37)" fg:x="80695" fg:w="806"/><text x="29.4018%" y="207.50"></text></g><g><title>rmqueue_bulk.constprop.0 (549 samples, 0.20%)</title><rect x="29.2446%" y="181" width="0.1983%" height="15" fill="rgb(241,128,51)" fg:x="80952" fg:w="549"/><text x="29.4946%" y="191.50"></text></g><g><title>get_page_from_freelist (3,498 samples, 1.26%)</title><rect x="28.1814%" y="229" width="1.2637%" height="15" fill="rgb(227,165,31)" fg:x="78009" fg:w="3498"/><text x="28.4314%" y="239.50"></text></g><g><title>__alloc_pages_nodemask (3,715 samples, 1.34%)</title><rect x="28.1186%" y="245" width="1.3421%" height="15" fill="rgb(228,167,24)" fg:x="77835" fg:w="3715"/><text x="28.3686%" y="255.50"></text></g><g><title>alloc_pages_current (3,840 samples, 1.39%)</title><rect x="28.0922%" y="261" width="1.3872%" height="15" fill="rgb(228,143,12)" fg:x="77762" fg:w="3840"/><text x="28.3422%" y="271.50"></text></g><g><title>__page_cache_alloc (3,879 samples, 1.40%)</title><rect x="28.0864%" y="277" width="1.4013%" height="15" fill="rgb(249,149,8)" fg:x="77746" fg:w="3879"/><text x="28.3364%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (160 samples, 0.06%)</title><rect x="30.2048%" y="213" width="0.0578%" height="15" fill="rgb(243,35,44)" fg:x="83610" fg:w="160"/><text x="30.4548%" y="223.50"></text></g><g><title>__mod_memcg_state.part.0 (92 samples, 0.03%)</title><rect x="30.2294%" y="197" width="0.0332%" height="15" fill="rgb(246,89,9)" fg:x="83678" fg:w="92"/><text x="30.4794%" y="207.50"></text></g><g><title>__mod_lruvec_state (236 samples, 0.09%)</title><rect x="30.1954%" y="229" width="0.0853%" height="15" fill="rgb(233,213,13)" fg:x="83584" fg:w="236"/><text x="30.4454%" y="239.50"></text></g><g><title>__mod_node_page_state (43 samples, 0.02%)</title><rect x="30.2652%" y="213" width="0.0155%" height="15" fill="rgb(233,141,41)" fg:x="83777" fg:w="43"/><text x="30.5152%" y="223.50"></text></g><g><title>__mod_lruvec_page_state (333 samples, 0.12%)</title><rect x="30.1839%" y="245" width="0.1203%" height="15" fill="rgb(239,167,4)" fg:x="83552" fg:w="333"/><text x="30.4339%" y="255.50"></text></g><g><title>__mod_node_page_state (57 samples, 0.02%)</title><rect x="30.2836%" y="229" width="0.0206%" height="15" fill="rgb(209,217,16)" fg:x="83828" fg:w="57"/><text x="30.5336%" y="239.50"></text></g><g><title>_raw_spin_lock_irq (150 samples, 0.05%)</title><rect x="30.3085%" y="245" width="0.0542%" height="15" fill="rgb(219,88,35)" fg:x="83897" fg:w="150"/><text x="30.5585%" y="255.50"></text></g><g><title>nvme_complete_rq (43 samples, 0.02%)</title><rect x="30.3656%" y="101" width="0.0155%" height="15" fill="rgb(220,193,23)" fg:x="84055" fg:w="43"/><text x="30.6156%" y="111.50"></text></g><g><title>blk_mq_end_request (43 samples, 0.02%)</title><rect x="30.3656%" y="85" width="0.0155%" height="15" fill="rgb(230,90,52)" fg:x="84055" fg:w="43"/><text x="30.6156%" y="95.50"></text></g><g><title>blk_update_request (42 samples, 0.02%)</title><rect x="30.3660%" y="69" width="0.0152%" height="15" fill="rgb(252,106,19)" fg:x="84056" fg:w="42"/><text x="30.6160%" y="79.50"></text></g><g><title>bio_endio (42 samples, 0.02%)</title><rect x="30.3660%" y="53" width="0.0152%" height="15" fill="rgb(206,74,20)" fg:x="84056" fg:w="42"/><text x="30.6160%" y="63.50"></text></g><g><title>mpage_end_io (41 samples, 0.01%)</title><rect x="30.3663%" y="37" width="0.0148%" height="15" fill="rgb(230,138,44)" fg:x="84057" fg:w="41"/><text x="30.6163%" y="47.50"></text></g><g><title>__handle_irq_event_percpu (50 samples, 0.02%)</title><rect x="30.3638%" y="165" width="0.0181%" height="15" fill="rgb(235,182,43)" fg:x="84050" fg:w="50"/><text x="30.6138%" y="175.50"></text></g><g><title>nvme_irq (49 samples, 0.02%)</title><rect x="30.3641%" y="149" width="0.0177%" height="15" fill="rgb(242,16,51)" fg:x="84051" fg:w="49"/><text x="30.6141%" y="159.50"></text></g><g><title>nvme_process_cq (49 samples, 0.02%)</title><rect x="30.3641%" y="133" width="0.0177%" height="15" fill="rgb(248,9,4)" fg:x="84051" fg:w="49"/><text x="30.6141%" y="143.50"></text></g><g><title>nvme_pci_complete_rq (45 samples, 0.02%)</title><rect x="30.3656%" y="117" width="0.0163%" height="15" fill="rgb(210,31,22)" fg:x="84055" fg:w="45"/><text x="30.6156%" y="127.50"></text></g><g><title>asm_common_interrupt (54 samples, 0.02%)</title><rect x="30.3627%" y="245" width="0.0195%" height="15" fill="rgb(239,54,39)" fg:x="84047" fg:w="54"/><text x="30.6127%" y="255.50"></text></g><g><title>common_interrupt (54 samples, 0.02%)</title><rect x="30.3627%" y="229" width="0.0195%" height="15" fill="rgb(230,99,41)" fg:x="84047" fg:w="54"/><text x="30.6127%" y="239.50"></text></g><g><title>asm_call_sysvec_on_stack (51 samples, 0.02%)</title><rect x="30.3638%" y="213" width="0.0184%" height="15" fill="rgb(253,106,12)" fg:x="84050" fg:w="51"/><text x="30.6138%" y="223.50"></text></g><g><title>handle_edge_irq (51 samples, 0.02%)</title><rect x="30.3638%" y="197" width="0.0184%" height="15" fill="rgb(213,46,41)" fg:x="84050" fg:w="51"/><text x="30.6138%" y="207.50"></text></g><g><title>handle_irq_event (51 samples, 0.02%)</title><rect x="30.3638%" y="181" width="0.0184%" height="15" fill="rgb(215,133,35)" fg:x="84050" fg:w="51"/><text x="30.6138%" y="191.50"></text></g><g><title>get_mem_cgroup_from_mm (56 samples, 0.02%)</title><rect x="30.4722%" y="229" width="0.0202%" height="15" fill="rgb(213,28,5)" fg:x="84350" fg:w="56"/><text x="30.7222%" y="239.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (53 samples, 0.02%)</title><rect x="30.4924%" y="229" width="0.0191%" height="15" fill="rgb(215,77,49)" fg:x="84406" fg:w="53"/><text x="30.7424%" y="239.50"></text></g><g><title>__count_memcg_events.part.0 (30 samples, 0.01%)</title><rect x="30.5007%" y="213" width="0.0108%" height="15" fill="rgb(248,100,22)" fg:x="84429" fg:w="30"/><text x="30.7507%" y="223.50"></text></g><g><title>page_counter_try_charge (71 samples, 0.03%)</title><rect x="30.6232%" y="213" width="0.0256%" height="15" fill="rgb(208,67,9)" fg:x="84768" fg:w="71"/><text x="30.8732%" y="223.50"></text></g><g><title>mem_cgroup_charge (720 samples, 0.26%)</title><rect x="30.3905%" y="245" width="0.2601%" height="15" fill="rgb(219,133,21)" fg:x="84124" fg:w="720"/><text x="30.6405%" y="255.50"></text></g><g><title>try_charge (357 samples, 0.13%)</title><rect x="30.5217%" y="229" width="0.1290%" height="15" fill="rgb(246,46,29)" fg:x="84487" fg:w="357"/><text x="30.7717%" y="239.50"></text></g><g><title>xas_load (617 samples, 0.22%)</title><rect x="30.7373%" y="229" width="0.2229%" height="15" fill="rgb(246,185,52)" fg:x="85084" fg:w="617"/><text x="30.9873%" y="239.50"></text></g><g><title>xa_get_order (837 samples, 0.30%)</title><rect x="30.6860%" y="245" width="0.3024%" height="15" fill="rgb(252,136,11)" fg:x="84942" fg:w="837"/><text x="30.9360%" y="255.50"></text></g><g><title>xas_start (78 samples, 0.03%)</title><rect x="30.9602%" y="229" width="0.0282%" height="15" fill="rgb(219,138,53)" fg:x="85701" fg:w="78"/><text x="31.2102%" y="239.50"></text></g><g><title>xas_find_conflict (198 samples, 0.07%)</title><rect x="30.9895%" y="245" width="0.0715%" height="15" fill="rgb(211,51,23)" fg:x="85782" fg:w="198"/><text x="31.2395%" y="255.50"></text></g><g><title>xas_load (30 samples, 0.01%)</title><rect x="31.0610%" y="245" width="0.0108%" height="15" fill="rgb(247,221,28)" fg:x="85980" fg:w="30"/><text x="31.3110%" y="255.50"></text></g><g><title>xas_start (33 samples, 0.01%)</title><rect x="31.0798%" y="245" width="0.0119%" height="15" fill="rgb(251,222,45)" fg:x="86032" fg:w="33"/><text x="31.3298%" y="255.50"></text></g><g><title>workingset_update_node (53 samples, 0.02%)</title><rect x="31.1325%" y="229" width="0.0191%" height="15" fill="rgb(217,162,53)" fg:x="86178" fg:w="53"/><text x="31.3825%" y="239.50"></text></g><g><title>__add_to_page_cache_locked (4,523 samples, 1.63%)</title><rect x="29.5347%" y="261" width="1.6340%" height="15" fill="rgb(229,93,14)" fg:x="81755" fg:w="4523"/><text x="29.7847%" y="271.50"></text></g><g><title>xas_store (213 samples, 0.08%)</title><rect x="31.0917%" y="245" width="0.0769%" height="15" fill="rgb(209,67,49)" fg:x="86065" fg:w="213"/><text x="31.3417%" y="255.50"></text></g><g><title>xas_create (47 samples, 0.02%)</title><rect x="31.1517%" y="229" width="0.0170%" height="15" fill="rgb(213,87,29)" fg:x="86231" fg:w="47"/><text x="31.4017%" y="239.50"></text></g><g><title>__mod_memcg_lruvec_state (136 samples, 0.05%)</title><rect x="31.4609%" y="197" width="0.0491%" height="15" fill="rgb(205,151,52)" fg:x="87087" fg:w="136"/><text x="31.7109%" y="207.50"></text></g><g><title>__mod_memcg_state.part.0 (66 samples, 0.02%)</title><rect x="31.4862%" y="181" width="0.0238%" height="15" fill="rgb(253,215,39)" fg:x="87157" fg:w="66"/><text x="31.7362%" y="191.50"></text></g><g><title>__mod_lruvec_state (195 samples, 0.07%)</title><rect x="31.4505%" y="213" width="0.0704%" height="15" fill="rgb(221,220,41)" fg:x="87058" fg:w="195"/><text x="31.7005%" y="223.50"></text></g><g><title>mem_cgroup_update_lru_size (33 samples, 0.01%)</title><rect x="31.5397%" y="213" width="0.0119%" height="15" fill="rgb(218,133,21)" fg:x="87305" fg:w="33"/><text x="31.7897%" y="223.50"></text></g><g><title>__pagevec_lru_add_fn (902 samples, 0.33%)</title><rect x="31.2709%" y="229" width="0.3259%" height="15" fill="rgb(221,193,43)" fg:x="86561" fg:w="902"/><text x="31.5209%" y="239.50"></text></g><g><title>page_mapping (125 samples, 0.05%)</title><rect x="31.5516%" y="213" width="0.0452%" height="15" fill="rgb(240,128,52)" fg:x="87338" fg:w="125"/><text x="31.8016%" y="223.50"></text></g><g><title>lock_page_lruvec_irqsave (40 samples, 0.01%)</title><rect x="31.5978%" y="229" width="0.0145%" height="15" fill="rgb(253,114,12)" fg:x="87466" fg:w="40"/><text x="31.8478%" y="239.50"></text></g><g><title>__pagevec_lru_add (1,236 samples, 0.45%)</title><rect x="31.2355%" y="245" width="0.4465%" height="15" fill="rgb(215,223,47)" fg:x="86463" fg:w="1236"/><text x="31.4855%" y="255.50"></text></g><g><title>release_pages (163 samples, 0.06%)</title><rect x="31.6231%" y="229" width="0.0589%" height="15" fill="rgb(248,225,23)" fg:x="87536" fg:w="163"/><text x="31.8731%" y="239.50"></text></g><g><title>lru_cache_add (1,383 samples, 0.50%)</title><rect x="31.1885%" y="261" width="0.4996%" height="15" fill="rgb(250,108,0)" fg:x="86333" fg:w="1383"/><text x="31.4385%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (139 samples, 0.05%)</title><rect x="31.8272%" y="229" width="0.0502%" height="15" fill="rgb(228,208,7)" fg:x="88101" fg:w="139"/><text x="32.0772%" y="239.50"></text></g><g><title>__mod_memcg_state.part.0 (66 samples, 0.02%)</title><rect x="31.8536%" y="213" width="0.0238%" height="15" fill="rgb(244,45,10)" fg:x="88174" fg:w="66"/><text x="32.1036%" y="223.50"></text></g><g><title>__mod_lruvec_state (195 samples, 0.07%)</title><rect x="31.8168%" y="245" width="0.0704%" height="15" fill="rgb(207,125,25)" fg:x="88072" fg:w="195"/><text x="32.0668%" y="255.50"></text></g><g><title>idr_find (146 samples, 0.05%)</title><rect x="31.9060%" y="229" width="0.0527%" height="15" fill="rgb(210,195,18)" fg:x="88319" fg:w="146"/><text x="32.1560%" y="239.50"></text></g><g><title>radix_tree_lookup (130 samples, 0.05%)</title><rect x="31.9118%" y="213" width="0.0470%" height="15" fill="rgb(249,80,12)" fg:x="88335" fg:w="130"/><text x="32.1618%" y="223.50"></text></g><g><title>__radix_tree_lookup (130 samples, 0.05%)</title><rect x="31.9118%" y="197" width="0.0470%" height="15" fill="rgb(221,65,9)" fg:x="88335" fg:w="130"/><text x="32.1618%" y="207.50"></text></g><g><title>mem_cgroup_from_id (176 samples, 0.06%)</title><rect x="31.9020%" y="245" width="0.0636%" height="15" fill="rgb(235,49,36)" fg:x="88308" fg:w="176"/><text x="32.1520%" y="255.50"></text></g><g><title>workingset_refault (766 samples, 0.28%)</title><rect x="31.7001%" y="261" width="0.2767%" height="15" fill="rgb(225,32,20)" fg:x="87749" fg:w="766"/><text x="31.9501%" y="271.50"></text></g><g><title>xas_find_conflict (32 samples, 0.01%)</title><rect x="31.9819%" y="261" width="0.0116%" height="15" fill="rgb(215,141,46)" fg:x="88529" fg:w="32"/><text x="32.2319%" y="271.50"></text></g><g><title>add_to_page_cache_lru (6,955 samples, 2.51%)</title><rect x="29.4877%" y="277" width="2.5126%" height="15" fill="rgb(250,160,47)" fg:x="81625" fg:w="6955"/><text x="29.7377%" y="287.50">ad..</text></g><g><title>__blk_bios_map_sg (29 samples, 0.01%)</title><rect x="32.0180%" y="117" width="0.0105%" height="15" fill="rgb(216,222,40)" fg:x="88629" fg:w="29"/><text x="32.2680%" y="127.50"></text></g><g><title>__blk_rq_map_sg (31 samples, 0.01%)</title><rect x="32.0176%" y="133" width="0.0112%" height="15" fill="rgb(234,217,39)" fg:x="88628" fg:w="31"/><text x="32.2676%" y="143.50"></text></g><g><title>nvme_map_data (90 samples, 0.03%)</title><rect x="32.0173%" y="149" width="0.0325%" height="15" fill="rgb(207,178,40)" fg:x="88627" fg:w="90"/><text x="32.2673%" y="159.50"></text></g><g><title>__blk_mq_try_issue_directly (100 samples, 0.04%)</title><rect x="32.0147%" y="181" width="0.0361%" height="15" fill="rgb(221,136,13)" fg:x="88620" fg:w="100"/><text x="32.2647%" y="191.50"></text></g><g><title>nvme_queue_rq (98 samples, 0.04%)</title><rect x="32.0155%" y="165" width="0.0354%" height="15" fill="rgb(249,199,10)" fg:x="88622" fg:w="98"/><text x="32.2655%" y="175.50"></text></g><g><title>blk_mq_flush_plug_list (102 samples, 0.04%)</title><rect x="32.0144%" y="229" width="0.0368%" height="15" fill="rgb(249,222,13)" fg:x="88619" fg:w="102"/><text x="32.2644%" y="239.50"></text></g><g><title>blk_mq_sched_insert_requests (101 samples, 0.04%)</title><rect x="32.0147%" y="213" width="0.0365%" height="15" fill="rgb(244,185,38)" fg:x="88620" fg:w="101"/><text x="32.2647%" y="223.50"></text></g><g><title>blk_mq_try_issue_list_directly (101 samples, 0.04%)</title><rect x="32.0147%" y="197" width="0.0365%" height="15" fill="rgb(236,202,9)" fg:x="88620" fg:w="101"/><text x="32.2647%" y="207.50"></text></g><g><title>blk_finish_plug (103 samples, 0.04%)</title><rect x="32.0144%" y="261" width="0.0372%" height="15" fill="rgb(250,229,37)" fg:x="88619" fg:w="103"/><text x="32.2644%" y="271.50"></text></g><g><title>blk_flush_plug_list (103 samples, 0.04%)</title><rect x="32.0144%" y="245" width="0.0372%" height="15" fill="rgb(206,174,23)" fg:x="88619" fg:w="103"/><text x="32.2644%" y="255.50"></text></g><g><title>__bio_try_merge_page (85 samples, 0.03%)</title><rect x="32.2904%" y="213" width="0.0307%" height="15" fill="rgb(211,33,43)" fg:x="89383" fg:w="85"/><text x="32.5404%" y="223.50"></text></g><g><title>bio_add_page (136 samples, 0.05%)</title><rect x="32.2723%" y="229" width="0.0491%" height="15" fill="rgb(245,58,50)" fg:x="89333" fg:w="136"/><text x="32.5223%" y="239.50"></text></g><g><title>ext4_map_blocks (46 samples, 0.02%)</title><rect x="32.3283%" y="229" width="0.0166%" height="15" fill="rgb(244,68,36)" fg:x="89488" fg:w="46"/><text x="32.5783%" y="239.50"></text></g><g><title>fscrypt_mergeable_bio (36 samples, 0.01%)</title><rect x="32.3449%" y="229" width="0.0130%" height="15" fill="rgb(232,229,15)" fg:x="89534" fg:w="36"/><text x="32.5949%" y="239.50"></text></g><g><title>blk_bio_segment_split (74 samples, 0.03%)</title><rect x="32.3702%" y="149" width="0.0267%" height="15" fill="rgb(254,30,23)" fg:x="89604" fg:w="74"/><text x="32.6202%" y="159.50"></text></g><g><title>bvec_split_segs (28 samples, 0.01%)</title><rect x="32.3868%" y="133" width="0.0101%" height="15" fill="rgb(235,160,14)" fg:x="89650" fg:w="28"/><text x="32.6368%" y="143.50"></text></g><g><title>__blk_queue_split (78 samples, 0.03%)</title><rect x="32.3702%" y="165" width="0.0282%" height="15" fill="rgb(212,155,44)" fg:x="89604" fg:w="78"/><text x="32.6202%" y="175.50"></text></g><g><title>nvme_map_data (33 samples, 0.01%)</title><rect x="32.4020%" y="69" width="0.0119%" height="15" fill="rgb(226,2,50)" fg:x="89692" fg:w="33"/><text x="32.6520%" y="79.50"></text></g><g><title>blk_flush_plug_list (37 samples, 0.01%)</title><rect x="32.4009%" y="165" width="0.0134%" height="15" fill="rgb(234,177,6)" fg:x="89689" fg:w="37"/><text x="32.6509%" y="175.50"></text></g><g><title>blk_mq_flush_plug_list (36 samples, 0.01%)</title><rect x="32.4013%" y="149" width="0.0130%" height="15" fill="rgb(217,24,9)" fg:x="89690" fg:w="36"/><text x="32.6513%" y="159.50"></text></g><g><title>blk_mq_sched_insert_requests (36 samples, 0.01%)</title><rect x="32.4013%" y="133" width="0.0130%" height="15" fill="rgb(220,13,46)" fg:x="89690" fg:w="36"/><text x="32.6513%" y="143.50"></text></g><g><title>blk_mq_try_issue_list_directly (36 samples, 0.01%)</title><rect x="32.4013%" y="117" width="0.0130%" height="15" fill="rgb(239,221,27)" fg:x="89690" fg:w="36"/><text x="32.6513%" y="127.50"></text></g><g><title>__blk_mq_try_issue_directly (36 samples, 0.01%)</title><rect x="32.4013%" y="101" width="0.0130%" height="15" fill="rgb(222,198,25)" fg:x="89690" fg:w="36"/><text x="32.6513%" y="111.50"></text></g><g><title>nvme_queue_rq (36 samples, 0.01%)</title><rect x="32.4013%" y="85" width="0.0130%" height="15" fill="rgb(211,99,13)" fg:x="89690" fg:w="36"/><text x="32.6513%" y="95.50"></text></g><g><title>blk_mq_submit_bio (145 samples, 0.05%)</title><rect x="32.3634%" y="181" width="0.0524%" height="15" fill="rgb(232,111,31)" fg:x="89585" fg:w="145"/><text x="32.6134%" y="191.50"></text></g><g><title>__submit_bio_noacct_mq (151 samples, 0.05%)</title><rect x="32.3630%" y="197" width="0.0546%" height="15" fill="rgb(245,82,37)" fg:x="89584" fg:w="151"/><text x="32.6130%" y="207.50"></text></g><g><title>submit_bio (175 samples, 0.06%)</title><rect x="32.3612%" y="229" width="0.0632%" height="15" fill="rgb(227,149,46)" fg:x="89579" fg:w="175"/><text x="32.6112%" y="239.50"></text></g><g><title>submit_bio_noacct (171 samples, 0.06%)</title><rect x="32.3626%" y="213" width="0.0618%" height="15" fill="rgb(218,36,50)" fg:x="89583" fg:w="171"/><text x="32.6126%" y="223.50"></text></g><g><title>xas_load (171 samples, 0.06%)</title><rect x="32.4331%" y="213" width="0.0618%" height="15" fill="rgb(226,80,48)" fg:x="89778" fg:w="171"/><text x="32.6831%" y="223.50"></text></g><g><title>xa_load (224 samples, 0.08%)</title><rect x="32.4244%" y="229" width="0.0809%" height="15" fill="rgb(238,224,15)" fg:x="89754" fg:w="224"/><text x="32.6744%" y="239.50"></text></g><g><title>xas_start (29 samples, 0.01%)</title><rect x="32.4949%" y="213" width="0.0105%" height="15" fill="rgb(241,136,10)" fg:x="89949" fg:w="29"/><text x="32.7449%" y="223.50"></text></g><g><title>ext4_mpage_readpages (1,253 samples, 0.45%)</title><rect x="32.0548%" y="245" width="0.4527%" height="15" fill="rgb(208,32,45)" fg:x="88731" fg:w="1253"/><text x="32.3048%" y="255.50"></text></g><g><title>read_pages (1,389 samples, 0.50%)</title><rect x="32.0140%" y="277" width="0.5018%" height="15" fill="rgb(207,135,9)" fg:x="88618" fg:w="1389"/><text x="32.2640%" y="287.50"></text></g><g><title>ext4_readahead (1,284 samples, 0.46%)</title><rect x="32.0519%" y="261" width="0.4639%" height="15" fill="rgb(206,86,44)" fg:x="88723" fg:w="1284"/><text x="32.3019%" y="271.50"></text></g><g><title>xas_load (388 samples, 0.14%)</title><rect x="32.5303%" y="261" width="0.1402%" height="15" fill="rgb(245,177,15)" fg:x="90047" fg:w="388"/><text x="32.7803%" y="271.50"></text></g><g><title>xa_load (467 samples, 0.17%)</title><rect x="32.5183%" y="277" width="0.1687%" height="15" fill="rgb(206,64,50)" fg:x="90014" fg:w="467"/><text x="32.7683%" y="287.50"></text></g><g><title>xas_start (46 samples, 0.02%)</title><rect x="32.6704%" y="261" width="0.0166%" height="15" fill="rgb(234,36,40)" fg:x="90435" fg:w="46"/><text x="32.9204%" y="271.50"></text></g><g><title>page_cache_ra_unbounded (12,863 samples, 4.65%)</title><rect x="28.0438%" y="293" width="4.6469%" height="15" fill="rgb(213,64,8)" fg:x="77628" fg:w="12863"/><text x="28.2938%" y="303.50">page_..</text></g><g><title>page_cache_async_ra (12,905 samples, 4.66%)</title><rect x="28.0322%" y="325" width="4.6620%" height="15" fill="rgb(210,75,36)" fg:x="77596" fg:w="12905"/><text x="28.2822%" y="335.50">page_..</text></g><g><title>ondemand_readahead (12,902 samples, 4.66%)</title><rect x="28.0333%" y="309" width="4.6610%" height="15" fill="rgb(229,88,21)" fg:x="77599" fg:w="12902"/><text x="28.2833%" y="319.50">ondem..</text></g><g><title>generic_file_buffered_read_get_pages (13,299 samples, 4.80%)</title><rect x="27.8902%" y="341" width="4.8044%" height="15" fill="rgb(252,204,47)" fg:x="77203" fg:w="13299"/><text x="28.1402%" y="351.50">generi..</text></g><g><title>mark_page_accessed (208 samples, 0.08%)</title><rect x="32.6946%" y="341" width="0.0751%" height="15" fill="rgb(208,77,27)" fg:x="90502" fg:w="208"/><text x="32.9446%" y="351.50"></text></g><g><title>generic_file_buffered_read (39,863 samples, 14.40%)</title><rect x="18.3693%" y="357" width="14.4009%" height="15" fill="rgb(221,76,26)" fg:x="50848" fg:w="39863"/><text x="18.6193%" y="367.50">generic_file_buffered_..</text></g><g><title>new_sync_read (39,877 samples, 14.41%)</title><rect x="18.3671%" y="405" width="14.4059%" height="15" fill="rgb(225,139,18)" fg:x="50842" fg:w="39877"/><text x="18.6171%" y="415.50">new_sync_read</text></g><g><title>ext4_file_read_iter (39,877 samples, 14.41%)</title><rect x="18.3671%" y="389" width="14.4059%" height="15" fill="rgb(230,137,11)" fg:x="50842" fg:w="39877"/><text x="18.6171%" y="399.50">ext4_file_read_iter</text></g><g><title>generic_file_read_iter (39,877 samples, 14.41%)</title><rect x="18.3671%" y="373" width="14.4059%" height="15" fill="rgb(212,28,1)" fg:x="50842" fg:w="39877"/><text x="18.6171%" y="383.50">generic_file_read_iter</text></g><g><title>entry_SYSCALL_64_after_hwframe (39,878 samples, 14.41%)</title><rect x="18.3671%" y="485" width="14.4063%" height="15" fill="rgb(248,164,17)" fg:x="50842" fg:w="39878"/><text x="18.6171%" y="495.50">entry_SYSCALL_64_after..</text></g><g><title>do_syscall_64 (39,878 samples, 14.41%)</title><rect x="18.3671%" y="469" width="14.4063%" height="15" fill="rgb(222,171,42)" fg:x="50842" fg:w="39878"/><text x="18.6171%" y="479.50">do_syscall_64</text></g><g><title>__x64_sys_read (39,878 samples, 14.41%)</title><rect x="18.3671%" y="453" width="14.4063%" height="15" fill="rgb(243,84,45)" fg:x="50842" fg:w="39878"/><text x="18.6171%" y="463.50">__x64_sys_read</text></g><g><title>ksys_read (39,878 samples, 14.41%)</title><rect x="18.3671%" y="437" width="14.4063%" height="15" fill="rgb(252,49,23)" fg:x="50842" fg:w="39878"/><text x="18.6171%" y="447.50">ksys_read</text></g><g><title>vfs_read (39,878 samples, 14.41%)</title><rect x="18.3671%" y="421" width="14.4063%" height="15" fill="rgb(215,19,7)" fg:x="50842" fg:w="39878"/><text x="18.6171%" y="431.50">vfs_read</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (39,893 samples, 14.41%)</title><rect x="18.3671%" y="597" width="14.4117%" height="15" fill="rgb(238,81,41)" fg:x="50842" fg:w="39893"/><text x="18.6171%" y="607.50">&lt;std::io::buffered::bu..</text></g><g><title>std::io::default_read_exact (39,893 samples, 14.41%)</title><rect x="18.3671%" y="581" width="14.4117%" height="15" fill="rgb(210,199,37)" fg:x="50842" fg:w="39893"/><text x="18.6171%" y="591.50">std::io::default_read_..</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (39,893 samples, 14.41%)</title><rect x="18.3671%" y="565" width="14.4117%" height="15" fill="rgb(244,192,49)" fg:x="50842" fg:w="39893"/><text x="18.6171%" y="575.50">&lt;std::io::buffered::bu..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (39,893 samples, 14.41%)</title><rect x="18.3671%" y="549" width="14.4117%" height="15" fill="rgb(226,211,11)" fg:x="50842" fg:w="39893"/><text x="18.6171%" y="559.50">&lt;std::fs::File as std:..</text></g><g><title>std::sys::unix::fs::File::read (39,893 samples, 14.41%)</title><rect x="18.3671%" y="533" width="14.4117%" height="15" fill="rgb(236,162,54)" fg:x="50842" fg:w="39893"/><text x="18.6171%" y="543.50">std::sys::unix::fs::Fi..</text></g><g><title>std::sys::unix::fd::FileDesc::read (39,893 samples, 14.41%)</title><rect x="18.3671%" y="517" width="14.4117%" height="15" fill="rgb(220,229,9)" fg:x="50842" fg:w="39893"/><text x="18.6171%" y="527.50">std::sys::unix::fd::Fi..</text></g><g><title>__libc_read (39,893 samples, 14.41%)</title><rect x="18.3671%" y="501" width="14.4117%" height="15" fill="rgb(250,87,22)" fg:x="50842" fg:w="39893"/><text x="18.6171%" y="511.50">__libc_read</text></g><g><title>__GI___libc_malloc (34 samples, 0.01%)</title><rect x="32.7788%" y="437" width="0.0123%" height="15" fill="rgb(239,43,17)" fg:x="90735" fg:w="34"/><text x="33.0288%" y="447.50"></text></g><g><title>_int_malloc (34 samples, 0.01%)</title><rect x="32.7788%" y="421" width="0.0123%" height="15" fill="rgb(231,177,25)" fg:x="90735" fg:w="34"/><text x="33.0288%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (36 samples, 0.01%)</title><rect x="32.7788%" y="533" width="0.0130%" height="15" fill="rgb(219,179,1)" fg:x="90735" fg:w="36"/><text x="33.0288%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (36 samples, 0.01%)</title><rect x="32.7788%" y="517" width="0.0130%" height="15" fill="rgb(238,219,53)" fg:x="90735" fg:w="36"/><text x="33.0288%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (36 samples, 0.01%)</title><rect x="32.7788%" y="501" width="0.0130%" height="15" fill="rgb(232,167,36)" fg:x="90735" fg:w="36"/><text x="33.0288%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.01%)</title><rect x="32.7788%" y="485" width="0.0130%" height="15" fill="rgb(244,19,51)" fg:x="90735" fg:w="36"/><text x="33.0288%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.01%)</title><rect x="32.7788%" y="469" width="0.0130%" height="15" fill="rgb(224,6,22)" fg:x="90735" fg:w="36"/><text x="33.0288%" y="479.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.01%)</title><rect x="32.7788%" y="453" width="0.0130%" height="15" fill="rgb(224,145,5)" fg:x="90735" fg:w="36"/><text x="33.0288%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (21,256 samples, 7.68%)</title><rect x="32.7788%" y="597" width="7.6789%" height="15" fill="rgb(234,130,49)" fg:x="90735" fg:w="21256"/><text x="33.0288%" y="607.50">alloc::slic..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21,256 samples, 7.68%)</title><rect x="32.7788%" y="581" width="7.6789%" height="15" fill="rgb(254,6,2)" fg:x="90735" fg:w="21256"/><text x="33.0288%" y="591.50">alloc::slic..</text></g><g><title>alloc::slice::hack::to_vec (21,256 samples, 7.68%)</title><rect x="32.7788%" y="565" width="7.6789%" height="15" fill="rgb(208,96,46)" fg:x="90735" fg:w="21256"/><text x="33.0288%" y="575.50">alloc::slic..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21,256 samples, 7.68%)</title><rect x="32.7788%" y="549" width="7.6789%" height="15" fill="rgb(239,3,39)" fg:x="90735" fg:w="21256"/><text x="33.0288%" y="559.50">&lt;T as alloc..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (21,220 samples, 7.67%)</title><rect x="32.7918%" y="533" width="7.6659%" height="15" fill="rgb(233,210,1)" fg:x="90771" fg:w="21220"/><text x="33.0418%" y="543.50">core::ptr:..</text></g><g><title>core::intrinsics::copy_nonoverlapping (21,220 samples, 7.67%)</title><rect x="32.7918%" y="517" width="7.6659%" height="15" fill="rgb(244,137,37)" fg:x="90771" fg:w="21220"/><text x="33.0418%" y="527.50">core::intr..</text></g><g><title>__memmove_avx_unaligned_erms (21,219 samples, 7.67%)</title><rect x="32.7922%" y="501" width="7.6655%" height="15" fill="rgb(240,136,2)" fg:x="90772" fg:w="21219"/><text x="33.0422%" y="511.50">__memmove_..</text></g><g><title>__irqentry_text_end (48 samples, 0.02%)</title><rect x="44.7925%" y="517" width="0.0173%" height="15" fill="rgb(239,18,37)" fg:x="123990" fg:w="48"/><text x="45.0425%" y="527.50"></text></g><g><title>down_read_trylock (116 samples, 0.04%)</title><rect x="44.9854%" y="469" width="0.0419%" height="15" fill="rgb(218,185,22)" fg:x="124524" fg:w="116"/><text x="45.2354%" y="479.50"></text></g><g><title>find_vma (58 samples, 0.02%)</title><rect x="45.0273%" y="469" width="0.0210%" height="15" fill="rgb(225,218,4)" fg:x="124640" fg:w="58"/><text x="45.2773%" y="479.50"></text></g><g><title>vmacache_find (36 samples, 0.01%)</title><rect x="45.0352%" y="453" width="0.0130%" height="15" fill="rgb(230,182,32)" fg:x="124662" fg:w="36"/><text x="45.2852%" y="463.50"></text></g><g><title>__count_memcg_events (33 samples, 0.01%)</title><rect x="45.1617%" y="453" width="0.0119%" height="15" fill="rgb(242,56,43)" fg:x="125012" fg:w="33"/><text x="45.4117%" y="463.50"></text></g><g><title>__count_memcg_events.part.0 (33 samples, 0.01%)</title><rect x="45.1617%" y="437" width="0.0119%" height="15" fill="rgb(233,99,24)" fg:x="125012" fg:w="33"/><text x="45.4117%" y="447.50"></text></g><g><title>_raw_spin_lock (97 samples, 0.04%)</title><rect x="45.3557%" y="421" width="0.0350%" height="15" fill="rgb(234,209,42)" fg:x="125549" fg:w="97"/><text x="45.6057%" y="431.50"></text></g><g><title>clear_page_erms (2,240 samples, 0.81%)</title><rect x="45.6924%" y="357" width="0.8092%" height="15" fill="rgb(227,7,12)" fg:x="126481" fg:w="2240"/><text x="45.9424%" y="367.50"></text></g><g><title>kernel_init_free_pages (38 samples, 0.01%)</title><rect x="46.5016%" y="357" width="0.0137%" height="15" fill="rgb(245,203,43)" fg:x="128721" fg:w="38"/><text x="46.7516%" y="367.50"></text></g><g><title>__inc_numa_state (35 samples, 0.01%)</title><rect x="46.5615%" y="341" width="0.0126%" height="15" fill="rgb(238,205,33)" fg:x="128887" fg:w="35"/><text x="46.8115%" y="351.50"></text></g><g><title>rmqueue (835 samples, 0.30%)</title><rect x="46.5153%" y="357" width="0.3017%" height="15" fill="rgb(231,56,7)" fg:x="128759" fg:w="835"/><text x="46.7653%" y="367.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (671 samples, 0.24%)</title><rect x="46.5745%" y="341" width="0.2424%" height="15" fill="rgb(244,186,29)" fg:x="128923" fg:w="671"/><text x="46.8245%" y="351.50"></text></g><g><title>rmqueue_bulk.constprop.0 (370 samples, 0.13%)</title><rect x="46.6833%" y="325" width="0.1337%" height="15" fill="rgb(234,111,31)" fg:x="129224" fg:w="370"/><text x="46.9333%" y="335.50"></text></g><g><title>get_page_from_freelist (3,350 samples, 1.21%)</title><rect x="45.6107%" y="373" width="1.2102%" height="15" fill="rgb(241,149,10)" fg:x="126255" fg:w="3350"/><text x="45.8607%" y="383.50"></text></g><g><title>__alloc_pages_nodemask (3,608 samples, 1.30%)</title><rect x="45.5255%" y="389" width="1.3034%" height="15" fill="rgb(249,206,44)" fg:x="126019" fg:w="3608"/><text x="45.7755%" y="399.50"></text></g><g><title>alloc_pages_vma (3,784 samples, 1.37%)</title><rect x="45.4846%" y="405" width="1.3670%" height="15" fill="rgb(251,153,30)" fg:x="125906" fg:w="3784"/><text x="45.7346%" y="415.50"></text></g><g><title>cgroup_throttle_swaprate (574 samples, 0.21%)</title><rect x="46.8516%" y="405" width="0.2074%" height="15" fill="rgb(239,152,38)" fg:x="129690" fg:w="574"/><text x="47.1016%" y="415.50"></text></g><g><title>__mod_memcg_lruvec_state (109 samples, 0.04%)</title><rect x="47.3184%" y="325" width="0.0394%" height="15" fill="rgb(249,139,47)" fg:x="130982" fg:w="109"/><text x="47.5684%" y="335.50"></text></g><g><title>__mod_memcg_state.part.0 (53 samples, 0.02%)</title><rect x="47.3386%" y="309" width="0.0191%" height="15" fill="rgb(244,64,35)" fg:x="131038" fg:w="53"/><text x="47.5886%" y="319.50"></text></g><g><title>__mod_lruvec_state (159 samples, 0.06%)</title><rect x="47.3086%" y="341" width="0.0574%" height="15" fill="rgb(216,46,15)" fg:x="130955" fg:w="159"/><text x="47.5586%" y="351.50"></text></g><g><title>__pagevec_lru_add_fn (779 samples, 0.28%)</title><rect x="47.1457%" y="357" width="0.2814%" height="15" fill="rgb(250,74,19)" fg:x="130504" fg:w="779"/><text x="47.3957%" y="367.50"></text></g><g><title>page_mapping (90 samples, 0.03%)</title><rect x="47.3946%" y="341" width="0.0325%" height="15" fill="rgb(249,42,33)" fg:x="131193" fg:w="90"/><text x="47.6446%" y="351.50"></text></g><g><title>__pagevec_lru_add (1,036 samples, 0.37%)</title><rect x="47.1211%" y="373" width="0.3743%" height="15" fill="rgb(242,149,17)" fg:x="130436" fg:w="1036"/><text x="47.3711%" y="383.50"></text></g><g><title>release_pages (142 samples, 0.05%)</title><rect x="47.4441%" y="357" width="0.0513%" height="15" fill="rgb(244,29,21)" fg:x="131330" fg:w="142"/><text x="47.6941%" y="367.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1,182 samples, 0.43%)</title><rect x="47.0698%" y="405" width="0.4270%" height="15" fill="rgb(220,130,37)" fg:x="130294" fg:w="1182"/><text x="47.3198%" y="415.50"></text></g><g><title>lru_cache_add (1,163 samples, 0.42%)</title><rect x="47.0767%" y="389" width="0.4201%" height="15" fill="rgb(211,67,2)" fg:x="130313" fg:w="1163"/><text x="47.3267%" y="399.50"></text></g><g><title>get_mem_cgroup_from_mm (304 samples, 0.11%)</title><rect x="47.6030%" y="389" width="0.1098%" height="15" fill="rgb(235,68,52)" fg:x="131770" fg:w="304"/><text x="47.8530%" y="399.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (58 samples, 0.02%)</title><rect x="47.7129%" y="389" width="0.0210%" height="15" fill="rgb(246,142,3)" fg:x="132074" fg:w="58"/><text x="47.9629%" y="399.50"></text></g><g><title>__count_memcg_events.part.0 (35 samples, 0.01%)</title><rect x="47.7212%" y="373" width="0.0126%" height="15" fill="rgb(241,25,7)" fg:x="132097" fg:w="35"/><text x="47.9712%" y="383.50"></text></g><g><title>page_counter_try_charge (63 samples, 0.02%)</title><rect x="47.8494%" y="373" width="0.0228%" height="15" fill="rgb(242,119,39)" fg:x="132452" fg:w="63"/><text x="48.0994%" y="383.50"></text></g><g><title>mem_cgroup_charge (1,047 samples, 0.38%)</title><rect x="47.4968%" y="405" width="0.3782%" height="15" fill="rgb(241,98,45)" fg:x="131476" fg:w="1047"/><text x="47.7468%" y="415.50"></text></g><g><title>try_charge (360 samples, 0.13%)</title><rect x="47.7450%" y="389" width="0.1301%" height="15" fill="rgb(254,28,30)" fg:x="132163" fg:w="360"/><text x="47.9950%" y="399.50"></text></g><g><title>__mod_memcg_lruvec_state (118 samples, 0.04%)</title><rect x="47.9181%" y="357" width="0.0426%" height="15" fill="rgb(241,142,54)" fg:x="132642" fg:w="118"/><text x="48.1681%" y="367.50"></text></g><g><title>__mod_memcg_state.part.0 (62 samples, 0.02%)</title><rect x="47.9383%" y="341" width="0.0224%" height="15" fill="rgb(222,85,15)" fg:x="132698" fg:w="62"/><text x="48.1883%" y="351.50"></text></g><g><title>__mod_lruvec_state (178 samples, 0.06%)</title><rect x="47.9108%" y="373" width="0.0643%" height="15" fill="rgb(210,85,47)" fg:x="132622" fg:w="178"/><text x="48.1608%" y="383.50"></text></g><g><title>__mod_node_page_state (31 samples, 0.01%)</title><rect x="47.9639%" y="357" width="0.0112%" height="15" fill="rgb(224,206,25)" fg:x="132769" fg:w="31"/><text x="48.2139%" y="367.50"></text></g><g><title>__mod_lruvec_page_state (251 samples, 0.09%)</title><rect x="47.9011%" y="389" width="0.0907%" height="15" fill="rgb(243,201,19)" fg:x="132595" fg:w="251"/><text x="48.1511%" y="399.50"></text></g><g><title>__mod_node_page_state (43 samples, 0.02%)</title><rect x="47.9762%" y="373" width="0.0155%" height="15" fill="rgb(236,59,4)" fg:x="132803" fg:w="43"/><text x="48.2262%" y="383.50"></text></g><g><title>page_add_new_anon_rmap (326 samples, 0.12%)</title><rect x="47.8856%" y="405" width="0.1178%" height="15" fill="rgb(254,179,45)" fg:x="132552" fg:w="326"/><text x="48.1356%" y="415.50"></text></g><g><title>do_anonymous_page (7,300 samples, 2.64%)</title><rect x="45.4019%" y="421" width="2.6372%" height="15" fill="rgb(226,14,10)" fg:x="125677" fg:w="7300"/><text x="45.6519%" y="431.50">do..</text></g><g><title>handle_pte_fault (7,625 samples, 2.75%)</title><rect x="45.3105%" y="437" width="2.7546%" height="15" fill="rgb(244,27,41)" fg:x="125424" fg:w="7625"/><text x="45.5605%" y="447.50">ha..</text></g><g><title>__handle_mm_fault (8,012 samples, 2.89%)</title><rect x="45.1736%" y="453" width="2.8944%" height="15" fill="rgb(235,35,32)" fg:x="125045" fg:w="8012"/><text x="45.4236%" y="463.50">__..</text></g><g><title>handle_mm_fault (8,401 samples, 3.03%)</title><rect x="45.0482%" y="469" width="3.0349%" height="15" fill="rgb(218,68,31)" fg:x="124698" fg:w="8401"/><text x="45.2982%" y="479.50">han..</text></g><g><title>rcu_read_unlock_strict (46 samples, 0.02%)</title><rect x="48.0886%" y="469" width="0.0166%" height="15" fill="rgb(207,120,37)" fg:x="133114" fg:w="46"/><text x="48.3386%" y="479.50"></text></g><g><title>up_read (138 samples, 0.05%)</title><rect x="48.1056%" y="469" width="0.0499%" height="15" fill="rgb(227,98,0)" fg:x="133161" fg:w="138"/><text x="48.3556%" y="479.50"></text></g><g><title>do_user_addr_fault (9,003 samples, 3.25%)</title><rect x="44.9095%" y="485" width="3.2524%" height="15" fill="rgb(207,7,3)" fg:x="124314" fg:w="9003"/><text x="45.1595%" y="495.50">do_..</text></g><g><title>exit_to_user_mode_prepare (29 samples, 0.01%)</title><rect x="48.1937%" y="453" width="0.0105%" height="15" fill="rgb(206,98,19)" fg:x="133405" fg:w="29"/><text x="48.4437%" y="463.50"></text></g><g><title>irqentry_exit (60 samples, 0.02%)</title><rect x="48.1847%" y="485" width="0.0217%" height="15" fill="rgb(217,5,26)" fg:x="133380" fg:w="60"/><text x="48.4347%" y="495.50"></text></g><g><title>irqentry_exit_to_user_mode (41 samples, 0.01%)</title><rect x="48.1915%" y="469" width="0.0148%" height="15" fill="rgb(235,190,38)" fg:x="133399" fg:w="41"/><text x="48.4415%" y="479.50"></text></g><g><title>exc_page_fault (9,223 samples, 3.33%)</title><rect x="44.8770%" y="501" width="3.3319%" height="15" fill="rgb(247,86,24)" fg:x="124224" fg:w="9223"/><text x="45.1270%" y="511.50">exc..</text></g><g><title>asm_exc_page_fault (9,434 samples, 3.41%)</title><rect x="44.8098%" y="517" width="3.4081%" height="15" fill="rgb(205,101,16)" fg:x="124038" fg:w="9434"/><text x="45.0598%" y="527.50">asm..</text></g><g><title>error_entry (284 samples, 0.10%)</title><rect x="48.2190%" y="517" width="0.1026%" height="15" fill="rgb(246,168,33)" fg:x="133475" fg:w="284"/><text x="48.4690%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23,046 samples, 8.33%)</title><rect x="40.4577%" y="597" width="8.3256%" height="15" fill="rgb(231,114,1)" fg:x="111991" fg:w="23046"/><text x="40.7077%" y="607.50">alloc::vec::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (23,046 samples, 8.33%)</title><rect x="40.4577%" y="581" width="8.3256%" height="15" fill="rgb(207,184,53)" fg:x="111991" fg:w="23046"/><text x="40.7077%" y="591.50">&lt;alloc::vec:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23,046 samples, 8.33%)</title><rect x="40.4577%" y="565" width="8.3256%" height="15" fill="rgb(224,95,51)" fg:x="111991" fg:w="23046"/><text x="40.7077%" y="575.50">alloc::vec::..</text></g><g><title>core::intrinsics::copy_nonoverlapping (23,019 samples, 8.32%)</title><rect x="40.4675%" y="549" width="8.3158%" height="15" fill="rgb(212,188,45)" fg:x="112018" fg:w="23019"/><text x="40.7175%" y="559.50">core::intrin..</text></g><g><title>__memmove_avx_unaligned_erms (23,019 samples, 8.32%)</title><rect x="40.4675%" y="533" width="8.3158%" height="15" fill="rgb(223,154,38)" fg:x="112018" fg:w="23019"/><text x="40.7175%" y="543.50">__memmove_av..</text></g><g><title>sync_regs (1,269 samples, 0.46%)</title><rect x="48.3248%" y="517" width="0.4584%" height="15" fill="rgb(251,22,52)" fg:x="133768" fg:w="1269"/><text x="48.5748%" y="527.50"></text></g><g><title>malloc_consolidate (47 samples, 0.02%)</title><rect x="48.7833%" y="453" width="0.0170%" height="15" fill="rgb(229,209,22)" fg:x="135037" fg:w="47"/><text x="49.0333%" y="463.50"></text></g><g><title>__libc_calloc (48 samples, 0.02%)</title><rect x="48.7833%" y="485" width="0.0173%" height="15" fill="rgb(234,138,34)" fg:x="135037" fg:w="48"/><text x="49.0333%" y="495.50"></text></g><g><title>_int_malloc (48 samples, 0.02%)</title><rect x="48.7833%" y="469" width="0.0173%" height="15" fill="rgb(212,95,11)" fg:x="135037" fg:w="48"/><text x="49.0333%" y="479.50"></text></g><g><title>alloc::vec::from_elem (53 samples, 0.02%)</title><rect x="48.7833%" y="597" width="0.0191%" height="15" fill="rgb(240,179,47)" fg:x="135037" fg:w="53"/><text x="49.0333%" y="607.50"></text></g><g><title>&lt;u8 as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (53 samples, 0.02%)</title><rect x="48.7833%" y="581" width="0.0191%" height="15" fill="rgb(240,163,11)" fg:x="135037" fg:w="53"/><text x="49.0333%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (53 samples, 0.02%)</title><rect x="48.7833%" y="565" width="0.0191%" height="15" fill="rgb(236,37,12)" fg:x="135037" fg:w="53"/><text x="49.0333%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (53 samples, 0.02%)</title><rect x="48.7833%" y="549" width="0.0191%" height="15" fill="rgb(232,164,16)" fg:x="135037" fg:w="53"/><text x="49.0333%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (53 samples, 0.02%)</title><rect x="48.7833%" y="533" width="0.0191%" height="15" fill="rgb(244,205,15)" fg:x="135037" fg:w="53"/><text x="49.0333%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (53 samples, 0.02%)</title><rect x="48.7833%" y="517" width="0.0191%" height="15" fill="rgb(223,117,47)" fg:x="135037" fg:w="53"/><text x="49.0333%" y="527.50"></text></g><g><title>alloc::alloc::alloc_zeroed (53 samples, 0.02%)</title><rect x="48.7833%" y="501" width="0.0191%" height="15" fill="rgb(244,107,35)" fg:x="135037" fg:w="53"/><text x="49.0333%" y="511.50"></text></g><g><title>malloc_consolidate (607 samples, 0.22%)</title><rect x="49.3017%" y="517" width="0.2193%" height="15" fill="rgb(205,140,8)" fg:x="136472" fg:w="607"/><text x="49.5517%" y="527.50"></text></g><g><title>unlink_chunk (190 samples, 0.07%)</title><rect x="49.4523%" y="501" width="0.0686%" height="15" fill="rgb(228,84,46)" fg:x="136889" fg:w="190"/><text x="49.7023%" y="511.50"></text></g><g><title>__GI___libc_free (1,207 samples, 0.44%)</title><rect x="49.0853%" y="549" width="0.4360%" height="15" fill="rgb(254,188,9)" fg:x="135873" fg:w="1207"/><text x="49.3353%" y="559.50"></text></g><g><title>_int_free (1,043 samples, 0.38%)</title><rect x="49.1445%" y="533" width="0.3768%" height="15" fill="rgb(206,112,54)" fg:x="136037" fg:w="1043"/><text x="49.3945%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::ArrayValue&gt; (108 samples, 0.04%)</title><rect x="54.7036%" y="533" width="0.0390%" height="15" fill="rgb(216,84,49)" fg:x="151425" fg:w="108"/><text x="54.9536%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::GcRecord&gt; (14,414 samples, 5.21%)</title><rect x="49.5369%" y="549" width="5.2072%" height="15" fill="rgb(214,194,35)" fg:x="137123" fg:w="14414"/><text x="49.7869%" y="559.50">core::..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,448 samples, 5.94%)</title><rect x="48.8024%" y="581" width="5.9420%" height="15" fill="rgb(249,28,3)" fg:x="135090" fg:w="16448"/><text x="49.0524%" y="591.50">&lt;alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::gc_record::GcRecord]&gt; (16,448 samples, 5.94%)</title><rect x="48.8024%" y="565" width="5.9420%" height="15" fill="rgb(222,56,52)" fg:x="135090" fg:w="16448"/><text x="49.0524%" y="575.50">core::pt..</text></g><g><title>vm_normal_page (33 samples, 0.01%)</title><rect x="54.7701%" y="341" width="0.0119%" height="15" fill="rgb(245,217,50)" fg:x="151609" fg:w="33"/><text x="55.0201%" y="351.50"></text></g><g><title>__tlb_remove_page_size (52 samples, 0.02%)</title><rect x="55.2968%" y="325" width="0.0188%" height="15" fill="rgb(213,201,24)" fg:x="153067" fg:w="52"/><text x="55.5468%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (314 samples, 0.11%)</title><rect x="55.5363%" y="277" width="0.1134%" height="15" fill="rgb(248,116,28)" fg:x="153730" fg:w="314"/><text x="55.7863%" y="287.50"></text></g><g><title>__mod_memcg_state.part.0 (127 samples, 0.05%)</title><rect x="55.6038%" y="261" width="0.0459%" height="15" fill="rgb(219,72,43)" fg:x="153917" fg:w="127"/><text x="55.8538%" y="271.50"></text></g><g><title>__mod_memcg_state.part.0 (39 samples, 0.01%)</title><rect x="55.6497%" y="277" width="0.0141%" height="15" fill="rgb(209,138,14)" fg:x="154044" fg:w="39"/><text x="55.8997%" y="287.50"></text></g><g><title>__mod_lruvec_state (462 samples, 0.17%)</title><rect x="55.5128%" y="293" width="0.1669%" height="15" fill="rgb(222,18,33)" fg:x="153665" fg:w="462"/><text x="55.7628%" y="303.50"></text></g><g><title>__mod_node_page_state (44 samples, 0.02%)</title><rect x="55.6638%" y="277" width="0.0159%" height="15" fill="rgb(213,199,7)" fg:x="154083" fg:w="44"/><text x="55.9138%" y="287.50"></text></g><g><title>__mod_node_page_state (50 samples, 0.02%)</title><rect x="55.6869%" y="293" width="0.0181%" height="15" fill="rgb(250,110,10)" fg:x="154147" fg:w="50"/><text x="55.9369%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (577 samples, 0.21%)</title><rect x="55.4969%" y="309" width="0.2084%" height="15" fill="rgb(248,123,6)" fg:x="153621" fg:w="577"/><text x="55.7469%" y="319.50"></text></g><g><title>lock_page_memcg (81 samples, 0.03%)</title><rect x="55.7101%" y="309" width="0.0293%" height="15" fill="rgb(206,91,31)" fg:x="154211" fg:w="81"/><text x="55.9601%" y="319.50"></text></g><g><title>page_remove_rmap (1,198 samples, 0.43%)</title><rect x="55.3231%" y="325" width="0.4328%" height="15" fill="rgb(211,154,13)" fg:x="153140" fg:w="1198"/><text x="55.5731%" y="335.50"></text></g><g><title>__mod_zone_page_state (58 samples, 0.02%)</title><rect x="55.8932%" y="293" width="0.0210%" height="15" fill="rgb(225,148,7)" fg:x="154718" fg:w="58"/><text x="56.1432%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (339 samples, 0.12%)</title><rect x="56.2693%" y="261" width="0.1225%" height="15" fill="rgb(220,160,43)" fg:x="155759" fg:w="339"/><text x="56.5193%" y="271.50"></text></g><g><title>__mod_memcg_state.part.0 (156 samples, 0.06%)</title><rect x="56.3354%" y="245" width="0.0564%" height="15" fill="rgb(213,52,39)" fg:x="155942" fg:w="156"/><text x="56.5854%" y="255.50"></text></g><g><title>__mod_memcg_state.part.0 (48 samples, 0.02%)</title><rect x="56.3917%" y="261" width="0.0173%" height="15" fill="rgb(243,137,7)" fg:x="156098" fg:w="48"/><text x="56.6417%" y="271.50"></text></g><g><title>__mod_lruvec_state (505 samples, 0.18%)</title><rect x="56.2425%" y="277" width="0.1824%" height="15" fill="rgb(230,79,13)" fg:x="155685" fg:w="505"/><text x="56.4925%" y="287.50"></text></g><g><title>__mod_node_page_state (44 samples, 0.02%)</title><rect x="56.4091%" y="261" width="0.0159%" height="15" fill="rgb(247,105,23)" fg:x="156146" fg:w="44"/><text x="56.6591%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (33 samples, 0.01%)</title><rect x="56.4250%" y="277" width="0.0119%" height="15" fill="rgb(223,179,41)" fg:x="156190" fg:w="33"/><text x="56.6750%" y="287.50"></text></g><g><title>__mod_node_page_state (62 samples, 0.02%)</title><rect x="56.4369%" y="277" width="0.0224%" height="15" fill="rgb(218,9,34)" fg:x="156223" fg:w="62"/><text x="56.6869%" y="287.50"></text></g><g><title>__mod_zone_page_state (57 samples, 0.02%)</title><rect x="56.4593%" y="277" width="0.0206%" height="15" fill="rgb(222,106,8)" fg:x="156285" fg:w="57"/><text x="56.7093%" y="287.50"></text></g><g><title>free_pcp_prepare (30 samples, 0.01%)</title><rect x="56.4803%" y="277" width="0.0108%" height="15" fill="rgb(211,220,0)" fg:x="156343" fg:w="30"/><text x="56.7303%" y="287.50"></text></g><g><title>free_unref_page_commit (35 samples, 0.01%)</title><rect x="56.4911%" y="277" width="0.0126%" height="15" fill="rgb(229,52,16)" fg:x="156373" fg:w="35"/><text x="56.7411%" y="287.50"></text></g><g><title>free_pcp_prepare (103 samples, 0.04%)</title><rect x="56.5897%" y="261" width="0.0372%" height="15" fill="rgb(212,155,18)" fg:x="156646" fg:w="103"/><text x="56.8397%" y="271.50"></text></g><g><title>__free_one_page (1,135 samples, 0.41%)</title><rect x="56.8870%" y="229" width="0.4100%" height="15" fill="rgb(242,21,14)" fg:x="157469" fg:w="1135"/><text x="57.1370%" y="239.50"></text></g><g><title>__mod_zone_page_state (71 samples, 0.03%)</title><rect x="57.2714%" y="213" width="0.0256%" height="15" fill="rgb(222,19,48)" fg:x="158533" fg:w="71"/><text x="57.5214%" y="223.50"></text></g><g><title>free_unref_page_list (2,228 samples, 0.80%)</title><rect x="56.5037%" y="277" width="0.8049%" height="15" fill="rgb(232,45,27)" fg:x="156408" fg:w="2228"/><text x="56.7537%" y="287.50"></text></g><g><title>free_unref_page_commit (1,886 samples, 0.68%)</title><rect x="56.6273%" y="261" width="0.6813%" height="15" fill="rgb(249,103,42)" fg:x="156750" fg:w="1886"/><text x="56.8773%" y="271.50"></text></g><g><title>free_pcppages_bulk (1,656 samples, 0.60%)</title><rect x="56.7104%" y="245" width="0.5982%" height="15" fill="rgb(246,81,33)" fg:x="156980" fg:w="1656"/><text x="56.9604%" y="255.50"></text></g><g><title>__mod_zone_page_state (32 samples, 0.01%)</title><rect x="57.2971%" y="229" width="0.0116%" height="15" fill="rgb(252,33,42)" fg:x="158604" fg:w="32"/><text x="57.5471%" y="239.50"></text></g><g><title>mem_cgroup_uncharge_list (261 samples, 0.09%)</title><rect x="57.3155%" y="277" width="0.0943%" height="15" fill="rgb(209,212,41)" fg:x="158655" fg:w="261"/><text x="57.5655%" y="287.50"></text></g><g><title>uncharge_page (168 samples, 0.06%)</title><rect x="57.3491%" y="261" width="0.0607%" height="15" fill="rgb(207,154,6)" fg:x="158748" fg:w="168"/><text x="57.5991%" y="271.50"></text></g><g><title>mem_cgroup_update_lru_size (62 samples, 0.02%)</title><rect x="57.4098%" y="277" width="0.0224%" height="15" fill="rgb(223,64,47)" fg:x="158916" fg:w="62"/><text x="57.6598%" y="287.50"></text></g><g><title>tlb_flush_mmu (4,683 samples, 1.69%)</title><rect x="55.7559%" y="325" width="1.6918%" height="15" fill="rgb(211,161,38)" fg:x="154338" fg:w="4683"/><text x="56.0059%" y="335.50"></text></g><g><title>free_pages_and_swap_cache (4,677 samples, 1.69%)</title><rect x="55.7581%" y="309" width="1.6896%" height="15" fill="rgb(219,138,40)" fg:x="154344" fg:w="4677"/><text x="56.0081%" y="319.50"></text></g><g><title>release_pages (4,214 samples, 1.52%)</title><rect x="55.9254%" y="293" width="1.5223%" height="15" fill="rgb(241,228,46)" fg:x="154807" fg:w="4214"/><text x="56.1754%" y="303.50"></text></g><g><title>uncharge_page (41 samples, 0.01%)</title><rect x="57.4329%" y="277" width="0.0148%" height="15" fill="rgb(223,209,38)" fg:x="158980" fg:w="41"/><text x="57.6829%" y="287.50"></text></g><g><title>unlock_page_memcg (31 samples, 0.01%)</title><rect x="57.4477%" y="325" width="0.0112%" height="15" fill="rgb(236,164,45)" fg:x="159021" fg:w="31"/><text x="57.6977%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;hprof_slurp::gc_record::GcRecord&gt;&gt; (24,041 samples, 8.69%)</title><rect x="48.8024%" y="597" width="8.6850%" height="15" fill="rgb(231,15,5)" fg:x="135090" fg:w="24041"/><text x="49.0524%" y="607.50">core::ptr::d..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;hprof_slurp::gc_record::GcRecord&gt;&gt; (7,593 samples, 2.74%)</title><rect x="54.7444%" y="581" width="2.7430%" height="15" fill="rgb(252,35,15)" fg:x="151538" fg:w="7593"/><text x="54.9944%" y="591.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7,593 samples, 2.74%)</title><rect x="54.7444%" y="565" width="2.7430%" height="15" fill="rgb(248,181,18)" fg:x="151538" fg:w="7593"/><text x="54.9944%" y="575.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7,593 samples, 2.74%)</title><rect x="54.7444%" y="549" width="2.7430%" height="15" fill="rgb(233,39,42)" fg:x="151538" fg:w="7593"/><text x="54.9944%" y="559.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (7,593 samples, 2.74%)</title><rect x="54.7444%" y="533" width="2.7430%" height="15" fill="rgb(238,110,33)" fg:x="151538" fg:w="7593"/><text x="54.9944%" y="543.50">al..</text></g><g><title>__GI___libc_free (7,593 samples, 2.74%)</title><rect x="54.7444%" y="517" width="2.7430%" height="15" fill="rgb(233,195,10)" fg:x="151538" fg:w="7593"/><text x="54.9944%" y="527.50">__..</text></g><g><title>__GI_munmap (7,593 samples, 2.74%)</title><rect x="54.7444%" y="501" width="2.7430%" height="15" fill="rgb(254,105,3)" fg:x="151538" fg:w="7593"/><text x="54.9944%" y="511.50">__..</text></g><g><title>entry_SYSCALL_64_after_hwframe (7,593 samples, 2.74%)</title><rect x="54.7444%" y="485" width="2.7430%" height="15" fill="rgb(221,225,9)" fg:x="151538" fg:w="7593"/><text x="54.9944%" y="495.50">en..</text></g><g><title>do_syscall_64 (7,593 samples, 2.74%)</title><rect x="54.7444%" y="469" width="2.7430%" height="15" fill="rgb(224,227,45)" fg:x="151538" fg:w="7593"/><text x="54.9944%" y="479.50">do..</text></g><g><title>__x64_sys_munmap (7,593 samples, 2.74%)</title><rect x="54.7444%" y="453" width="2.7430%" height="15" fill="rgb(229,198,43)" fg:x="151538" fg:w="7593"/><text x="54.9944%" y="463.50">__..</text></g><g><title>__vm_munmap (7,593 samples, 2.74%)</title><rect x="54.7444%" y="437" width="2.7430%" height="15" fill="rgb(206,209,35)" fg:x="151538" fg:w="7593"/><text x="54.9944%" y="447.50">__..</text></g><g><title>__do_munmap (7,593 samples, 2.74%)</title><rect x="54.7444%" y="421" width="2.7430%" height="15" fill="rgb(245,195,53)" fg:x="151538" fg:w="7593"/><text x="54.9944%" y="431.50">__..</text></g><g><title>unmap_region (7,593 samples, 2.74%)</title><rect x="54.7444%" y="405" width="2.7430%" height="15" fill="rgb(240,92,26)" fg:x="151538" fg:w="7593"/><text x="54.9944%" y="415.50">un..</text></g><g><title>unmap_vmas (7,562 samples, 2.73%)</title><rect x="54.7556%" y="389" width="2.7318%" height="15" fill="rgb(207,40,23)" fg:x="151569" fg:w="7562"/><text x="55.0056%" y="399.50">un..</text></g><g><title>unmap_single_vma (7,562 samples, 2.73%)</title><rect x="54.7556%" y="373" width="2.7318%" height="15" fill="rgb(223,111,35)" fg:x="151569" fg:w="7562"/><text x="55.0056%" y="383.50">un..</text></g><g><title>unmap_page_range (7,562 samples, 2.73%)</title><rect x="54.7556%" y="357" width="2.7318%" height="15" fill="rgb(229,147,28)" fg:x="151569" fg:w="7562"/><text x="55.0056%" y="367.50">un..</text></g><g><title>zap_pte_range (7,489 samples, 2.71%)</title><rect x="54.7820%" y="341" width="2.7055%" height="15" fill="rgb(211,29,28)" fg:x="151642" fg:w="7489"/><text x="55.0320%" y="351.50">za..</text></g><g><title>vm_normal_page (79 samples, 0.03%)</title><rect x="57.4589%" y="325" width="0.0285%" height="15" fill="rgb(228,72,33)" fg:x="159052" fg:w="79"/><text x="57.7089%" y="335.50"></text></g><g><title>__tlb_remove_page_size (32 samples, 0.01%)</title><rect x="57.8162%" y="325" width="0.0116%" height="15" fill="rgb(205,214,31)" fg:x="160041" fg:w="32"/><text x="58.0662%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (210 samples, 0.08%)</title><rect x="57.9770%" y="277" width="0.0759%" height="15" fill="rgb(224,111,15)" fg:x="160486" fg:w="210"/><text x="58.2270%" y="287.50"></text></g><g><title>__mod_memcg_state.part.0 (88 samples, 0.03%)</title><rect x="58.0210%" y="261" width="0.0318%" height="15" fill="rgb(253,21,26)" fg:x="160608" fg:w="88"/><text x="58.2710%" y="271.50"></text></g><g><title>__mod_lruvec_state (287 samples, 0.10%)</title><rect x="57.9650%" y="293" width="0.1037%" height="15" fill="rgb(245,139,43)" fg:x="160453" fg:w="287"/><text x="58.2150%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (28 samples, 0.01%)</title><rect x="58.0687%" y="293" width="0.0101%" height="15" fill="rgb(252,170,7)" fg:x="160740" fg:w="28"/><text x="58.3187%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (389 samples, 0.14%)</title><rect x="57.9535%" y="309" width="0.1405%" height="15" fill="rgb(231,118,14)" fg:x="160421" fg:w="389"/><text x="58.2035%" y="319.50"></text></g><g><title>__mod_node_page_state (42 samples, 0.02%)</title><rect x="58.0788%" y="293" width="0.0152%" height="15" fill="rgb(238,83,0)" fg:x="160768" fg:w="42"/><text x="58.3288%" y="303.50"></text></g><g><title>lock_page_memcg (42 samples, 0.02%)</title><rect x="58.1009%" y="309" width="0.0152%" height="15" fill="rgb(221,39,39)" fg:x="160829" fg:w="42"/><text x="58.3509%" y="319.50"></text></g><g><title>page_remove_rmap (833 samples, 0.30%)</title><rect x="57.8328%" y="325" width="0.3009%" height="15" fill="rgb(222,119,46)" fg:x="160087" fg:w="833"/><text x="58.0828%" y="335.50"></text></g><g><title>__mod_zone_page_state (39 samples, 0.01%)</title><rect x="58.2233%" y="293" width="0.0141%" height="15" fill="rgb(222,165,49)" fg:x="161168" fg:w="39"/><text x="58.4733%" y="303.50"></text></g><g><title>mem_cgroup_update_lru_size (31 samples, 0.01%)</title><rect x="58.2374%" y="293" width="0.0112%" height="15" fill="rgb(219,113,52)" fg:x="161207" fg:w="31"/><text x="58.4874%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (253 samples, 0.09%)</title><rect x="58.4610%" y="261" width="0.0914%" height="15" fill="rgb(214,7,15)" fg:x="161826" fg:w="253"/><text x="58.7110%" y="271.50"></text></g><g><title>__mod_memcg_state.part.0 (116 samples, 0.04%)</title><rect x="58.5105%" y="245" width="0.0419%" height="15" fill="rgb(235,32,4)" fg:x="161963" fg:w="116"/><text x="58.7605%" y="255.50"></text></g><g><title>__mod_lruvec_state (366 samples, 0.13%)</title><rect x="58.4462%" y="277" width="0.1322%" height="15" fill="rgb(238,90,54)" fg:x="161785" fg:w="366"/><text x="58.6962%" y="287.50"></text></g><g><title>__mod_node_page_state (45 samples, 0.02%)</title><rect x="58.5622%" y="261" width="0.0163%" height="15" fill="rgb(213,208,19)" fg:x="162106" fg:w="45"/><text x="58.8122%" y="271.50"></text></g><g><title>__mod_node_page_state (47 samples, 0.02%)</title><rect x="58.5846%" y="277" width="0.0170%" height="15" fill="rgb(233,156,4)" fg:x="162168" fg:w="47"/><text x="58.8346%" y="287.50"></text></g><g><title>__mod_zone_page_state (35 samples, 0.01%)</title><rect x="58.6016%" y="277" width="0.0126%" height="15" fill="rgb(207,194,5)" fg:x="162215" fg:w="35"/><text x="58.8516%" y="287.50"></text></g><g><title>free_pcp_prepare (72 samples, 0.03%)</title><rect x="58.6926%" y="261" width="0.0260%" height="15" fill="rgb(206,111,30)" fg:x="162467" fg:w="72"/><text x="58.9426%" y="271.50"></text></g><g><title>__free_one_page (765 samples, 0.28%)</title><rect x="58.8743%" y="229" width="0.2764%" height="15" fill="rgb(243,70,54)" fg:x="162970" fg:w="765"/><text x="59.1243%" y="239.50"></text></g><g><title>__mod_zone_page_state (37 samples, 0.01%)</title><rect x="59.1373%" y="213" width="0.0134%" height="15" fill="rgb(242,28,8)" fg:x="163698" fg:w="37"/><text x="59.3873%" y="223.50"></text></g><g><title>free_unref_page_list (1,475 samples, 0.53%)</title><rect x="58.6305%" y="277" width="0.5329%" height="15" fill="rgb(219,106,18)" fg:x="162295" fg:w="1475"/><text x="58.8805%" y="287.50"></text></g><g><title>free_unref_page_commit (1,231 samples, 0.44%)</title><rect x="58.7186%" y="261" width="0.4447%" height="15" fill="rgb(244,222,10)" fg:x="162539" fg:w="1231"/><text x="58.9686%" y="271.50"></text></g><g><title>free_pcppages_bulk (1,066 samples, 0.39%)</title><rect x="58.7782%" y="245" width="0.3851%" height="15" fill="rgb(236,179,52)" fg:x="162704" fg:w="1066"/><text x="59.0282%" y="255.50"></text></g><g><title>__mod_zone_page_state (35 samples, 0.01%)</title><rect x="59.1507%" y="229" width="0.0126%" height="15" fill="rgb(213,23,39)" fg:x="163735" fg:w="35"/><text x="59.4007%" y="239.50"></text></g><g><title>mem_cgroup_uncharge_list (170 samples, 0.06%)</title><rect x="59.1695%" y="277" width="0.0614%" height="15" fill="rgb(238,48,10)" fg:x="163787" fg:w="170"/><text x="59.4195%" y="287.50"></text></g><g><title>uncharge_page (113 samples, 0.04%)</title><rect x="59.1901%" y="261" width="0.0408%" height="15" fill="rgb(251,196,23)" fg:x="163844" fg:w="113"/><text x="59.4401%" y="271.50"></text></g><g><title>mem_cgroup_update_lru_size (42 samples, 0.02%)</title><rect x="59.2309%" y="277" width="0.0152%" height="15" fill="rgb(250,152,24)" fg:x="163957" fg:w="42"/><text x="59.4809%" y="287.50"></text></g><g><title>tlb_flush_mmu (3,118 samples, 1.13%)</title><rect x="58.1341%" y="325" width="1.1264%" height="15" fill="rgb(209,150,17)" fg:x="160921" fg:w="3118"/><text x="58.3841%" y="335.50"></text></g><g><title>free_pages_and_swap_cache (3,117 samples, 1.13%)</title><rect x="58.1345%" y="309" width="1.1260%" height="15" fill="rgb(234,202,34)" fg:x="160922" fg:w="3117"/><text x="58.3845%" y="319.50"></text></g><g><title>release_pages (2,801 samples, 1.01%)</title><rect x="58.2486%" y="293" width="1.0119%" height="15" fill="rgb(253,148,53)" fg:x="161238" fg:w="2801"/><text x="58.4986%" y="303.50"></text></g><g><title>uncharge_page (39 samples, 0.01%)</title><rect x="59.2464%" y="277" width="0.0141%" height="15" fill="rgb(218,129,16)" fg:x="164000" fg:w="39"/><text x="59.4964%" y="287.50"></text></g><g><title>__GI_munmap (4,969 samples, 1.80%)</title><rect x="57.4921%" y="501" width="1.7951%" height="15" fill="rgb(216,85,19)" fg:x="159144" fg:w="4969"/><text x="57.7421%" y="511.50">_..</text></g><g><title>entry_SYSCALL_64_after_hwframe (4,969 samples, 1.80%)</title><rect x="57.4921%" y="485" width="1.7951%" height="15" fill="rgb(235,228,7)" fg:x="159144" fg:w="4969"/><text x="57.7421%" y="495.50">e..</text></g><g><title>do_syscall_64 (4,969 samples, 1.80%)</title><rect x="57.4921%" y="469" width="1.7951%" height="15" fill="rgb(245,175,0)" fg:x="159144" fg:w="4969"/><text x="57.7421%" y="479.50">d..</text></g><g><title>__x64_sys_munmap (4,969 samples, 1.80%)</title><rect x="57.4921%" y="453" width="1.7951%" height="15" fill="rgb(208,168,36)" fg:x="159144" fg:w="4969"/><text x="57.7421%" y="463.50">_..</text></g><g><title>__vm_munmap (4,969 samples, 1.80%)</title><rect x="57.4921%" y="437" width="1.7951%" height="15" fill="rgb(246,171,24)" fg:x="159144" fg:w="4969"/><text x="57.7421%" y="447.50">_..</text></g><g><title>__do_munmap (4,969 samples, 1.80%)</title><rect x="57.4921%" y="421" width="1.7951%" height="15" fill="rgb(215,142,24)" fg:x="159144" fg:w="4969"/><text x="57.7421%" y="431.50">_..</text></g><g><title>unmap_region (4,968 samples, 1.79%)</title><rect x="57.4925%" y="405" width="1.7947%" height="15" fill="rgb(250,187,7)" fg:x="159145" fg:w="4968"/><text x="57.7425%" y="415.50">u..</text></g><g><title>unmap_vmas (4,952 samples, 1.79%)</title><rect x="57.4983%" y="389" width="1.7890%" height="15" fill="rgb(228,66,33)" fg:x="159161" fg:w="4952"/><text x="57.7483%" y="399.50">u..</text></g><g><title>unmap_single_vma (4,952 samples, 1.79%)</title><rect x="57.4983%" y="373" width="1.7890%" height="15" fill="rgb(234,215,21)" fg:x="159161" fg:w="4952"/><text x="57.7483%" y="383.50">u..</text></g><g><title>unmap_page_range (4,952 samples, 1.79%)</title><rect x="57.4983%" y="357" width="1.7890%" height="15" fill="rgb(222,191,20)" fg:x="159161" fg:w="4952"/><text x="57.7483%" y="367.50">u..</text></g><g><title>zap_pte_range (4,913 samples, 1.77%)</title><rect x="57.5124%" y="341" width="1.7749%" height="15" fill="rgb(245,79,54)" fg:x="159200" fg:w="4913"/><text x="57.7624%" y="351.50">z..</text></g><g><title>vm_normal_page (50 samples, 0.02%)</title><rect x="59.2692%" y="325" width="0.0181%" height="15" fill="rgb(240,10,37)" fg:x="164063" fg:w="50"/><text x="59.5192%" y="335.50"></text></g><g><title>__GI___libc_free (4,993 samples, 1.80%)</title><rect x="57.4874%" y="517" width="1.8038%" height="15" fill="rgb(214,192,32)" fg:x="159131" fg:w="4993"/><text x="57.7374%" y="527.50">_..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4,996 samples, 1.80%)</title><rect x="57.4874%" y="597" width="1.8048%" height="15" fill="rgb(209,36,54)" fg:x="159131" fg:w="4996"/><text x="57.7374%" y="607.50">c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4,996 samples, 1.80%)</title><rect x="57.4874%" y="581" width="1.8048%" height="15" fill="rgb(220,10,11)" fg:x="159131" fg:w="4996"/><text x="57.7374%" y="591.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,996 samples, 1.80%)</title><rect x="57.4874%" y="565" width="1.8048%" height="15" fill="rgb(221,106,17)" fg:x="159131" fg:w="4996"/><text x="57.7374%" y="575.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,996 samples, 1.80%)</title><rect x="57.4874%" y="549" width="1.8048%" height="15" fill="rgb(251,142,44)" fg:x="159131" fg:w="4996"/><text x="57.7374%" y="559.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (4,996 samples, 1.80%)</title><rect x="57.4874%" y="533" width="1.8048%" height="15" fill="rgb(238,13,15)" fg:x="159131" fg:w="4996"/><text x="57.7374%" y="543.50">a..</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.01%)</title><rect x="59.2923%" y="549" width="0.0116%" height="15" fill="rgb(208,107,27)" fg:x="164127" fg:w="32"/><text x="59.5423%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (32 samples, 0.01%)</title><rect x="59.2923%" y="533" width="0.0116%" height="15" fill="rgb(205,136,37)" fg:x="164127" fg:w="32"/><text x="59.5423%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (32 samples, 0.01%)</title><rect x="59.2923%" y="517" width="0.0116%" height="15" fill="rgb(250,205,27)" fg:x="164127" fg:w="32"/><text x="59.5423%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (32 samples, 0.01%)</title><rect x="59.2923%" y="501" width="0.0116%" height="15" fill="rgb(210,80,43)" fg:x="164127" fg:w="32"/><text x="59.5423%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,alloc::string::String)&gt; (32 samples, 0.01%)</title><rect x="59.2923%" y="485" width="0.0116%" height="15" fill="rgb(247,160,36)" fg:x="164127" fg:w="32"/><text x="59.5423%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (32 samples, 0.01%)</title><rect x="59.2923%" y="469" width="0.0116%" height="15" fill="rgb(234,13,49)" fg:x="164127" fg:w="32"/><text x="59.5423%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (32 samples, 0.01%)</title><rect x="59.2923%" y="453" width="0.0116%" height="15" fill="rgb(234,122,0)" fg:x="164127" fg:w="32"/><text x="59.5423%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (32 samples, 0.01%)</title><rect x="59.2923%" y="437" width="0.0116%" height="15" fill="rgb(207,146,38)" fg:x="164127" fg:w="32"/><text x="59.5423%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.01%)</title><rect x="59.2923%" y="421" width="0.0116%" height="15" fill="rgb(207,177,25)" fg:x="164127" fg:w="32"/><text x="59.5423%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.01%)</title><rect x="59.2930%" y="405" width="0.0108%" height="15" fill="rgb(211,178,42)" fg:x="164129" fg:w="30"/><text x="59.5430%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.01%)</title><rect x="59.2930%" y="389" width="0.0108%" height="15" fill="rgb(230,69,54)" fg:x="164129" fg:w="30"/><text x="59.5430%" y="399.50"></text></g><g><title>__GI___libc_free (30 samples, 0.01%)</title><rect x="59.2930%" y="373" width="0.0108%" height="15" fill="rgb(214,135,41)" fg:x="164129" fg:w="30"/><text x="59.5430%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String&gt;&gt; (33 samples, 0.01%)</title><rect x="59.2923%" y="597" width="0.0119%" height="15" fill="rgb(237,67,25)" fg:x="164127" fg:w="33"/><text x="59.5423%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (33 samples, 0.01%)</title><rect x="59.2923%" y="581" width="0.0119%" height="15" fill="rgb(222,189,50)" fg:x="164127" fg:w="33"/><text x="59.5423%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (33 samples, 0.01%)</title><rect x="59.2923%" y="565" width="0.0119%" height="15" fill="rgb(245,148,34)" fg:x="164127" fg:w="33"/><text x="59.5423%" y="575.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u8_complete (1,397 samples, 0.50%)</title><rect x="64.2415%" y="469" width="0.5047%" height="15" fill="rgb(222,29,6)" fg:x="177827" fg:w="1397"/><text x="64.4915%" y="479.50"></text></g><g><title>nom::number::complete::u8 (1,397 samples, 0.50%)</title><rect x="64.2415%" y="453" width="0.5047%" height="15" fill="rgb(221,189,43)" fg:x="177827" fg:w="1397"/><text x="64.4915%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,387 samples, 0.50%)</title><rect x="64.2452%" y="437" width="0.5011%" height="15" fill="rgb(207,36,27)" fg:x="177837" fg:w="1387"/><text x="64.4952%" y="447.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1,387 samples, 0.50%)</title><rect x="64.2452%" y="421" width="0.5011%" height="15" fill="rgb(217,90,24)" fg:x="177837" fg:w="1387"/><text x="64.4952%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,387 samples, 0.50%)</title><rect x="64.2452%" y="405" width="0.5011%" height="15" fill="rgb(224,66,35)" fg:x="177837" fg:w="1387"/><text x="64.4952%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (423 samples, 0.15%)</title><rect x="65.0779%" y="405" width="0.1528%" height="15" fill="rgb(221,13,50)" fg:x="180142" fg:w="423"/><text x="65.3279%" y="415.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (423 samples, 0.15%)</title><rect x="65.0779%" y="389" width="0.1528%" height="15" fill="rgb(236,68,49)" fg:x="180142" fg:w="423"/><text x="65.3279%" y="399.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (414 samples, 0.15%)</title><rect x="65.0811%" y="373" width="0.1496%" height="15" fill="rgb(229,146,28)" fg:x="180151" fg:w="414"/><text x="65.3311%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (414 samples, 0.15%)</title><rect x="65.0811%" y="357" width="0.1496%" height="15" fill="rgb(225,31,38)" fg:x="180151" fg:w="414"/><text x="65.3311%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (414 samples, 0.15%)</title><rect x="65.0811%" y="341" width="0.1496%" height="15" fill="rgb(250,208,3)" fg:x="180151" fg:w="414"/><text x="65.3311%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (414 samples, 0.15%)</title><rect x="65.0811%" y="325" width="0.1496%" height="15" fill="rgb(246,54,23)" fg:x="180151" fg:w="414"/><text x="65.3311%" y="335.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (414 samples, 0.15%)</title><rect x="65.0811%" y="309" width="0.1496%" height="15" fill="rgb(243,76,11)" fg:x="180151" fg:w="414"/><text x="65.3311%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (414 samples, 0.15%)</title><rect x="65.0811%" y="293" width="0.1496%" height="15" fill="rgb(245,21,50)" fg:x="180151" fg:w="414"/><text x="65.3311%" y="303.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (414 samples, 0.15%)</title><rect x="65.0811%" y="277" width="0.1496%" height="15" fill="rgb(228,9,43)" fg:x="180151" fg:w="414"/><text x="65.3311%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (414 samples, 0.15%)</title><rect x="65.0811%" y="261" width="0.1496%" height="15" fill="rgb(208,100,47)" fg:x="180151" fg:w="414"/><text x="65.3311%" y="271.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::from_error (454 samples, 0.16%)</title><rect x="65.2307%" y="405" width="0.1640%" height="15" fill="rgb(232,26,8)" fg:x="180565" fg:w="454"/><text x="65.4807%" y="415.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,351 samples, 0.49%)</title><rect x="64.9073%" y="421" width="0.4881%" height="15" fill="rgb(216,166,38)" fg:x="179670" fg:w="1351"/><text x="65.1573%" y="431.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u32 (2,173 samples, 0.79%)</title><rect x="66.7378%" y="357" width="0.7850%" height="15" fill="rgb(251,202,51)" fg:x="184737" fg:w="2173"/><text x="66.9878%" y="367.50"></text></g><g><title>nom::number::streaming::be_u32 (2,173 samples, 0.79%)</title><rect x="66.7378%" y="341" width="0.7850%" height="15" fill="rgb(254,216,34)" fg:x="184737" fg:w="2173"/><text x="66.9878%" y="351.50"></text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (274 samples, 0.10%)</title><rect x="69.1594%" y="309" width="0.0990%" height="15" fill="rgb(251,32,27)" fg:x="191440" fg:w="274"/><text x="69.4094%" y="319.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (274 samples, 0.10%)</title><rect x="69.1594%" y="293" width="0.0990%" height="15" fill="rgb(208,127,28)" fg:x="191440" fg:w="274"/><text x="69.4094%" y="303.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (274 samples, 0.10%)</title><rect x="69.1594%" y="277" width="0.0990%" height="15" fill="rgb(224,137,22)" fg:x="191440" fg:w="274"/><text x="69.4094%" y="287.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (274 samples, 0.10%)</title><rect x="69.1594%" y="261" width="0.0990%" height="15" fill="rgb(254,70,32)" fg:x="191440" fg:w="274"/><text x="69.4094%" y="271.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (274 samples, 0.10%)</title><rect x="69.1594%" y="245" width="0.0990%" height="15" fill="rgb(229,75,37)" fg:x="191440" fg:w="274"/><text x="69.4094%" y="255.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (257 samples, 0.09%)</title><rect x="69.1655%" y="229" width="0.0928%" height="15" fill="rgb(252,64,23)" fg:x="191457" fg:w="257"/><text x="69.4155%" y="239.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (257 samples, 0.09%)</title><rect x="69.1655%" y="213" width="0.0928%" height="15" fill="rgb(232,162,48)" fg:x="191457" fg:w="257"/><text x="69.4155%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,217 samples, 0.80%)</title><rect x="69.2583%" y="309" width="0.8009%" height="15" fill="rgb(246,160,12)" fg:x="191714" fg:w="2217"/><text x="69.5083%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,217 samples, 0.80%)</title><rect x="69.2583%" y="293" width="0.8009%" height="15" fill="rgb(247,166,0)" fg:x="191714" fg:w="2217"/><text x="69.5083%" y="303.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (2,217 samples, 0.80%)</title><rect x="69.2583%" y="277" width="0.8009%" height="15" fill="rgb(249,219,21)" fg:x="191714" fg:w="2217"/><text x="69.5083%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,217 samples, 0.80%)</title><rect x="69.2583%" y="261" width="0.8009%" height="15" fill="rgb(205,209,3)" fg:x="191714" fg:w="2217"/><text x="69.5083%" y="271.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9,205 samples, 3.33%)</title><rect x="66.7378%" y="389" width="3.3254%" height="15" fill="rgb(243,44,1)" fg:x="184737" fg:w="9205"/><text x="66.9878%" y="399.50">&lt;F ..</text></g><g><title>core::ops::function::FnMut::call_mut (9,205 samples, 3.33%)</title><rect x="66.7378%" y="373" width="3.3254%" height="15" fill="rgb(206,159,16)" fg:x="184737" fg:w="9205"/><text x="66.9878%" y="383.50">cor..</text></g><g><title>hprof_slurp::record_parser::parse_id (7,032 samples, 2.54%)</title><rect x="67.5228%" y="357" width="2.5404%" height="15" fill="rgb(244,77,30)" fg:x="186910" fg:w="7032"/><text x="67.7728%" y="367.50">hp..</text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (7,032 samples, 2.54%)</title><rect x="67.5228%" y="341" width="2.5404%" height="15" fill="rgb(218,69,12)" fg:x="186910" fg:w="7032"/><text x="67.7728%" y="351.50">hp..</text></g><g><title>nom::number::streaming::be_u64 (6,560 samples, 2.37%)</title><rect x="67.6934%" y="325" width="2.3699%" height="15" fill="rgb(212,87,7)" fg:x="187382" fg:w="6560"/><text x="67.9434%" y="335.50">no..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (17,502 samples, 6.32%)</title><rect x="70.0632%" y="389" width="6.3227%" height="15" fill="rgb(245,114,25)" fg:x="193942" fg:w="17502"/><text x="70.3132%" y="399.50">&lt;core::r..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (30,469 samples, 11.01%)</title><rect x="65.3954%" y="405" width="11.0072%" height="15" fill="rgb(210,61,42)" fg:x="181021" fg:w="30469"/><text x="65.6454%" y="415.50">&lt;(FnA,FnB,FnC,Fn..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (31,822 samples, 11.50%)</title><rect x="64.9073%" y="437" width="11.4960%" height="15" fill="rgb(211,52,33)" fg:x="179670" fg:w="31822"/><text x="65.1573%" y="447.50">&lt;F as nom::intern..</text></g><g><title>nom::sequence::tuple::{{closure}} (30,471 samples, 11.01%)</title><rect x="65.3954%" y="421" width="11.0079%" height="15" fill="rgb(234,58,33)" fg:x="181021" fg:w="30471"/><text x="65.6454%" y="431.50">nom::sequence::t..</text></g><g><title>hprof_slurp::record_parser::parse_gc_instance_dump (32,769 samples, 11.84%)</title><rect x="64.7477%" y="469" width="11.8381%" height="15" fill="rgb(220,115,36)" fg:x="179228" fg:w="32769"/><text x="64.9977%" y="479.50">hprof_slurp::recor..</text></g><g><title>nom::combinator::flat_map::{{closure}} (32,769 samples, 11.84%)</title><rect x="64.7477%" y="453" width="11.8381%" height="15" fill="rgb(243,153,54)" fg:x="179228" fg:w="32769"/><text x="64.9977%" y="463.50">nom::combinator::f..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (505 samples, 0.18%)</title><rect x="76.4033%" y="437" width="0.1824%" height="15" fill="rgb(251,47,18)" fg:x="211492" fg:w="505"/><text x="76.6533%" y="447.50"></text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (46 samples, 0.02%)</title><rect x="76.7552%" y="293" width="0.0166%" height="15" fill="rgb(242,102,42)" fg:x="212466" fg:w="46"/><text x="77.0052%" y="303.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (46 samples, 0.02%)</title><rect x="76.7552%" y="277" width="0.0166%" height="15" fill="rgb(234,31,38)" fg:x="212466" fg:w="46"/><text x="77.0052%" y="287.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (46 samples, 0.02%)</title><rect x="76.7552%" y="261" width="0.0166%" height="15" fill="rgb(221,117,51)" fg:x="212466" fg:w="46"/><text x="77.0052%" y="271.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (46 samples, 0.02%)</title><rect x="76.7552%" y="245" width="0.0166%" height="15" fill="rgb(212,20,18)" fg:x="212466" fg:w="46"/><text x="77.0052%" y="255.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (46 samples, 0.02%)</title><rect x="76.7552%" y="229" width="0.0166%" height="15" fill="rgb(245,133,36)" fg:x="212466" fg:w="46"/><text x="77.0052%" y="239.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (506 samples, 0.18%)</title><rect x="76.6421%" y="373" width="0.1828%" height="15" fill="rgb(212,6,19)" fg:x="212153" fg:w="506"/><text x="76.8921%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (506 samples, 0.18%)</title><rect x="76.6421%" y="357" width="0.1828%" height="15" fill="rgb(218,1,36)" fg:x="212153" fg:w="506"/><text x="76.8921%" y="367.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (506 samples, 0.18%)</title><rect x="76.6421%" y="341" width="0.1828%" height="15" fill="rgb(246,84,54)" fg:x="212153" fg:w="506"/><text x="76.8921%" y="351.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (506 samples, 0.18%)</title><rect x="76.6421%" y="325" width="0.1828%" height="15" fill="rgb(242,110,6)" fg:x="212153" fg:w="506"/><text x="76.8921%" y="335.50"></text></g><g><title>nom::number::streaming::be_u64 (475 samples, 0.17%)</title><rect x="76.6533%" y="309" width="0.1716%" height="15" fill="rgb(214,47,5)" fg:x="212184" fg:w="475"/><text x="76.9033%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (147 samples, 0.05%)</title><rect x="76.7718%" y="293" width="0.0531%" height="15" fill="rgb(218,159,25)" fg:x="212512" fg:w="147"/><text x="77.0218%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (147 samples, 0.05%)</title><rect x="76.7718%" y="277" width="0.0531%" height="15" fill="rgb(215,211,28)" fg:x="212512" fg:w="147"/><text x="77.0218%" y="287.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (147 samples, 0.05%)</title><rect x="76.7718%" y="261" width="0.0531%" height="15" fill="rgb(238,59,32)" fg:x="212512" fg:w="147"/><text x="77.0218%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (147 samples, 0.05%)</title><rect x="76.7718%" y="245" width="0.0531%" height="15" fill="rgb(226,82,3)" fg:x="212512" fg:w="147"/><text x="77.0218%" y="255.50"></text></g><g><title>do_anonymous_page (45 samples, 0.02%)</title><rect x="76.8704%" y="245" width="0.0163%" height="15" fill="rgb(240,164,32)" fg:x="212785" fg:w="45"/><text x="77.1204%" y="255.50"></text></g><g><title>handle_pte_fault (56 samples, 0.02%)</title><rect x="76.8675%" y="261" width="0.0202%" height="15" fill="rgb(232,46,7)" fg:x="212777" fg:w="56"/><text x="77.1175%" y="271.50"></text></g><g><title>do_user_addr_fault (64 samples, 0.02%)</title><rect x="76.8650%" y="309" width="0.0231%" height="15" fill="rgb(229,129,53)" fg:x="212770" fg:w="64"/><text x="77.1150%" y="319.50"></text></g><g><title>handle_mm_fault (60 samples, 0.02%)</title><rect x="76.8664%" y="293" width="0.0217%" height="15" fill="rgb(234,188,29)" fg:x="212774" fg:w="60"/><text x="77.1164%" y="303.50"></text></g><g><title>__handle_mm_fault (59 samples, 0.02%)</title><rect x="76.8668%" y="277" width="0.0213%" height="15" fill="rgb(246,141,4)" fg:x="212775" fg:w="59"/><text x="77.1168%" y="287.50"></text></g><g><title>asm_exc_page_fault (68 samples, 0.02%)</title><rect x="76.8646%" y="341" width="0.0246%" height="15" fill="rgb(229,23,39)" fg:x="212769" fg:w="68"/><text x="77.1146%" y="351.50"></text></g><g><title>exc_page_fault (67 samples, 0.02%)</title><rect x="76.8650%" y="325" width="0.0242%" height="15" fill="rgb(206,12,3)" fg:x="212770" fg:w="67"/><text x="77.1150%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (188 samples, 0.07%)</title><rect x="76.8249%" y="373" width="0.0679%" height="15" fill="rgb(252,226,20)" fg:x="212659" fg:w="188"/><text x="77.0749%" y="383.50"></text></g><g><title>core::ptr::write (143 samples, 0.05%)</title><rect x="76.8412%" y="357" width="0.0517%" height="15" fill="rgb(216,123,35)" fg:x="212704" fg:w="143"/><text x="77.0912%" y="367.50"></text></g><g><title>_int_malloc (117 samples, 0.04%)</title><rect x="76.9149%" y="245" width="0.0423%" height="15" fill="rgb(212,68,40)" fg:x="212908" fg:w="117"/><text x="77.1649%" y="255.50"></text></g><g><title>__GI___libc_malloc (165 samples, 0.06%)</title><rect x="76.8979%" y="261" width="0.0596%" height="15" fill="rgb(254,125,32)" fg:x="212861" fg:w="165"/><text x="77.1479%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (180 samples, 0.07%)</title><rect x="76.8971%" y="309" width="0.0650%" height="15" fill="rgb(253,97,22)" fg:x="212859" fg:w="180"/><text x="77.1471%" y="319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (180 samples, 0.07%)</title><rect x="76.8971%" y="293" width="0.0650%" height="15" fill="rgb(241,101,14)" fg:x="212859" fg:w="180"/><text x="77.1471%" y="303.50"></text></g><g><title>alloc::alloc::alloc (180 samples, 0.07%)</title><rect x="76.8971%" y="277" width="0.0650%" height="15" fill="rgb(238,103,29)" fg:x="212859" fg:w="180"/><text x="77.1471%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (196 samples, 0.07%)</title><rect x="76.8928%" y="373" width="0.0708%" height="15" fill="rgb(233,195,47)" fg:x="212847" fg:w="196"/><text x="77.1428%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (196 samples, 0.07%)</title><rect x="76.8928%" y="357" width="0.0708%" height="15" fill="rgb(246,218,30)" fg:x="212847" fg:w="196"/><text x="77.1428%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (189 samples, 0.07%)</title><rect x="76.8953%" y="341" width="0.0683%" height="15" fill="rgb(219,145,47)" fg:x="212854" fg:w="189"/><text x="77.1453%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (189 samples, 0.07%)</title><rect x="76.8953%" y="325" width="0.0683%" height="15" fill="rgb(243,12,26)" fg:x="212854" fg:w="189"/><text x="77.1453%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,056 samples, 0.38%)</title><rect x="76.5919%" y="405" width="0.3815%" height="15" fill="rgb(214,87,16)" fg:x="212014" fg:w="1056"/><text x="76.8419%" y="415.50"></text></g><g><title>nom::multi::count::{{closure}} (1,055 samples, 0.38%)</title><rect x="76.5922%" y="389" width="0.3811%" height="15" fill="rgb(208,99,42)" fg:x="212015" fg:w="1055"/><text x="76.8422%" y="399.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,139 samples, 0.41%)</title><rect x="76.5868%" y="421" width="0.4115%" height="15" fill="rgb(253,99,2)" fg:x="212000" fg:w="1139"/><text x="76.8368%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (69 samples, 0.02%)</title><rect x="76.9734%" y="405" width="0.0249%" height="15" fill="rgb(220,168,23)" fg:x="213070" fg:w="69"/><text x="77.2234%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (62 samples, 0.02%)</title><rect x="77.0044%" y="389" width="0.0224%" height="15" fill="rgb(242,38,24)" fg:x="213156" fg:w="62"/><text x="77.2544%" y="399.50"></text></g><g><title>core::ops::function::FnMut::call_mut (62 samples, 0.02%)</title><rect x="77.0044%" y="373" width="0.0224%" height="15" fill="rgb(225,182,9)" fg:x="213156" fg:w="62"/><text x="77.2544%" y="383.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (42 samples, 0.02%)</title><rect x="77.0117%" y="357" width="0.0152%" height="15" fill="rgb(243,178,37)" fg:x="213176" fg:w="42"/><text x="77.2617%" y="367.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (42 samples, 0.02%)</title><rect x="77.0117%" y="341" width="0.0152%" height="15" fill="rgb(232,139,19)" fg:x="213176" fg:w="42"/><text x="77.2617%" y="351.50"></text></g><g><title>nom::number::streaming::be_u64 (42 samples, 0.02%)</title><rect x="77.0117%" y="325" width="0.0152%" height="15" fill="rgb(225,201,24)" fg:x="213176" fg:w="42"/><text x="77.2617%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,335 samples, 0.48%)</title><rect x="76.5868%" y="437" width="0.4823%" height="15" fill="rgb(221,47,46)" fg:x="212000" fg:w="1335"/><text x="76.8368%" y="447.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (196 samples, 0.07%)</title><rect x="76.9983%" y="421" width="0.0708%" height="15" fill="rgb(249,23,13)" fg:x="213139" fg:w="196"/><text x="77.2483%" y="431.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (196 samples, 0.07%)</title><rect x="76.9983%" y="405" width="0.0708%" height="15" fill="rgb(219,9,5)" fg:x="213139" fg:w="196"/><text x="77.2483%" y="415.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (117 samples, 0.04%)</title><rect x="77.0268%" y="389" width="0.0423%" height="15" fill="rgb(254,171,16)" fg:x="213218" fg:w="117"/><text x="77.2768%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (1,353 samples, 0.49%)</title><rect x="76.5857%" y="469" width="0.4888%" height="15" fill="rgb(230,171,20)" fg:x="211997" fg:w="1353"/><text x="76.8357%" y="479.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (1,353 samples, 0.49%)</title><rect x="76.5857%" y="453" width="0.4888%" height="15" fill="rgb(210,71,41)" fg:x="211997" fg:w="1353"/><text x="76.8357%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (55 samples, 0.02%)</title><rect x="77.1815%" y="293" width="0.0199%" height="15" fill="rgb(206,173,20)" fg:x="213646" fg:w="55"/><text x="77.4315%" y="303.50"></text></g><g><title>nom::number::streaming::be_i32::{{closure}} (54 samples, 0.02%)</title><rect x="77.1818%" y="277" width="0.0195%" height="15" fill="rgb(233,88,34)" fg:x="213647" fg:w="54"/><text x="77.4318%" y="287.50"></text></g><g><title>nom::number::streaming::be_u32 (54 samples, 0.02%)</title><rect x="77.1818%" y="261" width="0.0195%" height="15" fill="rgb(223,209,46)" fg:x="213647" fg:w="54"/><text x="77.4318%" y="271.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i32 (111 samples, 0.04%)</title><rect x="77.1721%" y="373" width="0.0401%" height="15" fill="rgb(250,43,18)" fg:x="213620" fg:w="111"/><text x="77.4221%" y="383.50"></text></g><g><title>nom::number::streaming::be_i32 (111 samples, 0.04%)</title><rect x="77.1721%" y="357" width="0.0401%" height="15" fill="rgb(208,13,10)" fg:x="213620" fg:w="111"/><text x="77.4221%" y="367.50"></text></g><g><title>nom::combinator::mapc (111 samples, 0.04%)</title><rect x="77.1721%" y="341" width="0.0401%" height="15" fill="rgb(212,200,36)" fg:x="213620" fg:w="111"/><text x="77.4221%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (111 samples, 0.04%)</title><rect x="77.1721%" y="325" width="0.0401%" height="15" fill="rgb(225,90,30)" fg:x="213620" fg:w="111"/><text x="77.4221%" y="335.50"></text></g><g><title>nom::combinator::map::{{closure}} (111 samples, 0.04%)</title><rect x="77.1721%" y="309" width="0.0401%" height="15" fill="rgb(236,182,39)" fg:x="213620" fg:w="111"/><text x="77.4221%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (30 samples, 0.01%)</title><rect x="77.2013%" y="293" width="0.0108%" height="15" fill="rgb(212,144,35)" fg:x="213701" fg:w="30"/><text x="77.4513%" y="303.50"></text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (158 samples, 0.06%)</title><rect x="77.6103%" y="245" width="0.0571%" height="15" fill="rgb(228,63,44)" fg:x="214833" fg:w="158"/><text x="77.8603%" y="255.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (158 samples, 0.06%)</title><rect x="77.6103%" y="229" width="0.0571%" height="15" fill="rgb(228,109,6)" fg:x="214833" fg:w="158"/><text x="77.8603%" y="239.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (158 samples, 0.06%)</title><rect x="77.6103%" y="213" width="0.0571%" height="15" fill="rgb(238,117,24)" fg:x="214833" fg:w="158"/><text x="77.8603%" y="223.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (158 samples, 0.06%)</title><rect x="77.6103%" y="197" width="0.0571%" height="15" fill="rgb(242,26,26)" fg:x="214833" fg:w="158"/><text x="77.8603%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (158 samples, 0.06%)</title><rect x="77.6103%" y="181" width="0.0571%" height="15" fill="rgb(221,92,48)" fg:x="214833" fg:w="158"/><text x="77.8603%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (116 samples, 0.04%)</title><rect x="77.6254%" y="165" width="0.0419%" height="15" fill="rgb(209,209,32)" fg:x="214875" fg:w="116"/><text x="77.8754%" y="175.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (116 samples, 0.04%)</title><rect x="77.6254%" y="149" width="0.0419%" height="15" fill="rgb(221,70,22)" fg:x="214875" fg:w="116"/><text x="77.8754%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (160 samples, 0.06%)</title><rect x="77.6674%" y="245" width="0.0578%" height="15" fill="rgb(248,145,5)" fg:x="214991" fg:w="160"/><text x="77.9174%" y="255.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (160 samples, 0.06%)</title><rect x="77.6674%" y="229" width="0.0578%" height="15" fill="rgb(226,116,26)" fg:x="214991" fg:w="160"/><text x="77.9174%" y="239.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (160 samples, 0.06%)</title><rect x="77.6674%" y="213" width="0.0578%" height="15" fill="rgb(244,5,17)" fg:x="214991" fg:w="160"/><text x="77.9174%" y="223.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,058 samples, 0.38%)</title><rect x="77.3433%" y="293" width="0.3822%" height="15" fill="rgb(252,159,33)" fg:x="214094" fg:w="1058"/><text x="77.5933%" y="303.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (903 samples, 0.33%)</title><rect x="77.3993%" y="277" width="0.3262%" height="15" fill="rgb(206,71,0)" fg:x="214249" fg:w="903"/><text x="77.6493%" y="287.50"></text></g><g><title>nom::number::streaming::be_u8 (903 samples, 0.33%)</title><rect x="77.3993%" y="261" width="0.3262%" height="15" fill="rgb(233,118,54)" fg:x="214249" fg:w="903"/><text x="77.6493%" y="271.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (966 samples, 0.35%)</title><rect x="77.7255%" y="293" width="0.3490%" height="15" fill="rgb(234,83,48)" fg:x="215152" fg:w="966"/><text x="77.9755%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,500 samples, 0.90%)</title><rect x="77.1717%" y="405" width="0.9031%" height="15" fill="rgb(228,3,54)" fg:x="213619" fg:w="2500"/><text x="77.4217%" y="415.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2,500 samples, 0.90%)</title><rect x="77.1717%" y="389" width="0.9031%" height="15" fill="rgb(226,155,13)" fg:x="213619" fg:w="2500"/><text x="77.4217%" y="399.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i8 (2,369 samples, 0.86%)</title><rect x="77.2190%" y="373" width="0.8558%" height="15" fill="rgb(241,28,37)" fg:x="213750" fg:w="2369"/><text x="77.4690%" y="383.50"></text></g><g><title>nom::number::streaming::be_i8 (2,369 samples, 0.86%)</title><rect x="77.2190%" y="357" width="0.8558%" height="15" fill="rgb(233,93,10)" fg:x="213750" fg:w="2369"/><text x="77.4690%" y="367.50"></text></g><g><title>nom::combinator::mapc (2,369 samples, 0.86%)</title><rect x="77.2190%" y="341" width="0.8558%" height="15" fill="rgb(225,113,19)" fg:x="213750" fg:w="2369"/><text x="77.4690%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,369 samples, 0.86%)</title><rect x="77.2190%" y="325" width="0.8558%" height="15" fill="rgb(241,2,18)" fg:x="213750" fg:w="2369"/><text x="77.4690%" y="335.50"></text></g><g><title>nom::combinator::map::{{closure}} (2,369 samples, 0.86%)</title><rect x="77.2190%" y="309" width="0.8558%" height="15" fill="rgb(228,207,21)" fg:x="213750" fg:w="2369"/><text x="77.4690%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (107 samples, 0.04%)</title><rect x="78.1702%" y="389" width="0.0387%" height="15" fill="rgb(213,211,35)" fg:x="216383" fg:w="107"/><text x="78.4202%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (698 samples, 0.25%)</title><rect x="78.0749%" y="405" width="0.2522%" height="15" fill="rgb(209,83,10)" fg:x="216119" fg:w="698"/><text x="78.3249%" y="415.50"></text></g><g><title>core::ptr::write (327 samples, 0.12%)</title><rect x="78.2089%" y="389" width="0.1181%" height="15" fill="rgb(209,164,1)" fg:x="216490" fg:w="327"/><text x="78.4589%" y="399.50"></text></g><g><title>handle_mm_fault (34 samples, 0.01%)</title><rect x="78.5831%" y="213" width="0.0123%" height="15" fill="rgb(213,184,43)" fg:x="217526" fg:w="34"/><text x="78.8331%" y="223.50"></text></g><g><title>__handle_mm_fault (33 samples, 0.01%)</title><rect x="78.5835%" y="197" width="0.0119%" height="15" fill="rgb(231,61,34)" fg:x="217527" fg:w="33"/><text x="78.8335%" y="207.50"></text></g><g><title>handle_pte_fault (32 samples, 0.01%)</title><rect x="78.5839%" y="181" width="0.0116%" height="15" fill="rgb(235,75,3)" fg:x="217528" fg:w="32"/><text x="78.8339%" y="191.50"></text></g><g><title>do_anonymous_page (30 samples, 0.01%)</title><rect x="78.5846%" y="165" width="0.0108%" height="15" fill="rgb(220,106,47)" fg:x="217530" fg:w="30"/><text x="78.8346%" y="175.50"></text></g><g><title>asm_exc_page_fault (36 samples, 0.01%)</title><rect x="78.5831%" y="261" width="0.0130%" height="15" fill="rgb(210,196,33)" fg:x="217526" fg:w="36"/><text x="78.8331%" y="271.50"></text></g><g><title>exc_page_fault (36 samples, 0.01%)</title><rect x="78.5831%" y="245" width="0.0130%" height="15" fill="rgb(229,154,42)" fg:x="217526" fg:w="36"/><text x="78.8331%" y="255.50"></text></g><g><title>do_user_addr_fault (36 samples, 0.01%)</title><rect x="78.5831%" y="229" width="0.0130%" height="15" fill="rgb(228,114,26)" fg:x="217526" fg:w="36"/><text x="78.8331%" y="239.50"></text></g><g><title>_int_malloc (575 samples, 0.21%)</title><rect x="78.3967%" y="277" width="0.2077%" height="15" fill="rgb(208,144,1)" fg:x="217010" fg:w="575"/><text x="78.6467%" y="287.50"></text></g><g><title>__GI___libc_malloc (737 samples, 0.27%)</title><rect x="78.3425%" y="293" width="0.2662%" height="15" fill="rgb(239,112,37)" fg:x="216860" fg:w="737"/><text x="78.5925%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (781 samples, 0.28%)</title><rect x="78.3375%" y="341" width="0.2821%" height="15" fill="rgb(210,96,50)" fg:x="216846" fg:w="781"/><text x="78.5875%" y="351.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (781 samples, 0.28%)</title><rect x="78.3375%" y="325" width="0.2821%" height="15" fill="rgb(222,178,2)" fg:x="216846" fg:w="781"/><text x="78.5875%" y="335.50"></text></g><g><title>alloc::alloc::alloc (776 samples, 0.28%)</title><rect x="78.3393%" y="309" width="0.2803%" height="15" fill="rgb(226,74,18)" fg:x="216851" fg:w="776"/><text x="78.5893%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (811 samples, 0.29%)</title><rect x="78.3270%" y="405" width="0.2930%" height="15" fill="rgb(225,67,54)" fg:x="216817" fg:w="811"/><text x="78.5770%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (811 samples, 0.29%)</title><rect x="78.3270%" y="389" width="0.2930%" height="15" fill="rgb(251,92,32)" fg:x="216817" fg:w="811"/><text x="78.5770%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (784 samples, 0.28%)</title><rect x="78.3368%" y="373" width="0.2832%" height="15" fill="rgb(228,149,22)" fg:x="216844" fg:w="784"/><text x="78.5868%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (784 samples, 0.28%)</title><rect x="78.3368%" y="357" width="0.2832%" height="15" fill="rgb(243,54,13)" fg:x="216844" fg:w="784"/><text x="78.5868%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,198 samples, 1.52%)</title><rect x="77.1345%" y="437" width="1.5166%" height="15" fill="rgb(243,180,28)" fg:x="213516" fg:w="4198"/><text x="77.3845%" y="447.50"></text></g><g><title>nom::multi::count::{{closure}} (4,190 samples, 1.51%)</title><rect x="77.1374%" y="421" width="1.5137%" height="15" fill="rgb(208,167,24)" fg:x="213524" fg:w="4190"/><text x="77.3874%" y="431.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (86 samples, 0.03%)</title><rect x="78.6200%" y="405" width="0.0311%" height="15" fill="rgb(245,73,45)" fg:x="217628" fg:w="86"/><text x="78.8700%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (81 samples, 0.03%)</title><rect x="78.6218%" y="389" width="0.0293%" height="15" fill="rgb(237,203,48)" fg:x="217633" fg:w="81"/><text x="78.8718%" y="399.50"></text></g><g><title>nom::combinator::map::{{closure}} (4,240 samples, 1.53%)</title><rect x="77.1302%" y="453" width="1.5317%" height="15" fill="rgb(211,197,16)" fg:x="213504" fg:w="4240"/><text x="77.3802%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try::Try&gt;::into_result (30 samples, 0.01%)</title><rect x="78.6511%" y="437" width="0.0108%" height="15" fill="rgb(243,99,51)" fg:x="217714" fg:w="30"/><text x="78.9011%" y="447.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u32 (120 samples, 0.04%)</title><rect x="78.6720%" y="389" width="0.0434%" height="15" fill="rgb(215,123,29)" fg:x="217772" fg:w="120"/><text x="78.9220%" y="399.50"></text></g><g><title>nom::number::streaming::be_u32 (100 samples, 0.04%)</title><rect x="78.6792%" y="373" width="0.0361%" height="15" fill="rgb(239,186,37)" fg:x="217792" fg:w="100"/><text x="78.9292%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (40 samples, 0.01%)</title><rect x="78.7190%" y="245" width="0.0145%" height="15" fill="rgb(252,136,39)" fg:x="217902" fg:w="40"/><text x="78.9690%" y="255.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (40 samples, 0.01%)</title><rect x="78.7190%" y="229" width="0.0145%" height="15" fill="rgb(223,213,32)" fg:x="217902" fg:w="40"/><text x="78.9690%" y="239.50"></text></g><g><title>nom::number::streaming::be_u8 (40 samples, 0.01%)</title><rect x="78.7190%" y="213" width="0.0145%" height="15" fill="rgb(233,115,5)" fg:x="217902" fg:w="40"/><text x="78.9690%" y="223.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (69 samples, 0.02%)</title><rect x="78.7154%" y="357" width="0.0249%" height="15" fill="rgb(207,226,44)" fg:x="217892" fg:w="69"/><text x="78.9654%" y="367.50"></text></g><g><title>core::ops::function::FnMut::call_mut (69 samples, 0.02%)</title><rect x="78.7154%" y="341" width="0.0249%" height="15" fill="rgb(208,126,0)" fg:x="217892" fg:w="69"/><text x="78.9654%" y="351.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i8 (69 samples, 0.02%)</title><rect x="78.7154%" y="325" width="0.0249%" height="15" fill="rgb(244,66,21)" fg:x="217892" fg:w="69"/><text x="78.9654%" y="335.50"></text></g><g><title>nom::number::streaming::be_i8 (69 samples, 0.02%)</title><rect x="78.7154%" y="309" width="0.0249%" height="15" fill="rgb(222,97,12)" fg:x="217892" fg:w="69"/><text x="78.9654%" y="319.50"></text></g><g><title>nom::combinator::mapc (69 samples, 0.02%)</title><rect x="78.7154%" y="293" width="0.0249%" height="15" fill="rgb(219,213,19)" fg:x="217892" fg:w="69"/><text x="78.9654%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (69 samples, 0.02%)</title><rect x="78.7154%" y="277" width="0.0249%" height="15" fill="rgb(252,169,30)" fg:x="217892" fg:w="69"/><text x="78.9654%" y="287.50"></text></g><g><title>nom::combinator::map::{{closure}} (69 samples, 0.02%)</title><rect x="78.7154%" y="261" width="0.0249%" height="15" fill="rgb(206,32,51)" fg:x="217892" fg:w="69"/><text x="78.9654%" y="271.50"></text></g><g><title>hprof_slurp::record_parser::parse_field_type (74 samples, 0.03%)</title><rect x="78.7154%" y="389" width="0.0267%" height="15" fill="rgb(250,172,42)" fg:x="217892" fg:w="74"/><text x="78.9654%" y="399.50"></text></g><g><title>nom::combinator::map::{{closure}} (74 samples, 0.03%)</title><rect x="78.7154%" y="373" width="0.0267%" height="15" fill="rgb(209,34,43)" fg:x="217892" fg:w="74"/><text x="78.9654%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.01%)</title><rect x="78.7775%" y="341" width="0.0123%" height="15" fill="rgb(223,11,35)" fg:x="218064" fg:w="34"/><text x="79.0275%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.01%)</title><rect x="78.7775%" y="325" width="0.0123%" height="15" fill="rgb(251,219,26)" fg:x="218064" fg:w="34"/><text x="79.0275%" y="335.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (34 samples, 0.01%)</title><rect x="78.7775%" y="309" width="0.0123%" height="15" fill="rgb(231,119,3)" fg:x="218064" fg:w="34"/><text x="79.0275%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (34 samples, 0.01%)</title><rect x="78.7775%" y="293" width="0.0123%" height="15" fill="rgb(216,97,11)" fg:x="218064" fg:w="34"/><text x="79.0275%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (327 samples, 0.12%)</title><rect x="78.6720%" y="421" width="0.1181%" height="15" fill="rgb(223,59,9)" fg:x="217772" fg:w="327"/><text x="78.9220%" y="431.50"></text></g><g><title>core::ops::function::FnMut::call_mut (327 samples, 0.12%)</title><rect x="78.6720%" y="405" width="0.1181%" height="15" fill="rgb(233,93,31)" fg:x="217772" fg:w="327"/><text x="78.9220%" y="415.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (133 samples, 0.05%)</title><rect x="78.7421%" y="389" width="0.0480%" height="15" fill="rgb(239,81,33)" fg:x="217966" fg:w="133"/><text x="78.9921%" y="399.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (133 samples, 0.05%)</title><rect x="78.7421%" y="373" width="0.0480%" height="15" fill="rgb(213,120,34)" fg:x="217966" fg:w="133"/><text x="78.9921%" y="383.50"></text></g><g><title>nom::number::streaming::be_u64 (125 samples, 0.05%)</title><rect x="78.7450%" y="357" width="0.0452%" height="15" fill="rgb(243,49,53)" fg:x="217974" fg:w="125"/><text x="78.9950%" y="367.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_primitive_array_dump (4,775 samples, 1.73%)</title><rect x="77.0745%" y="469" width="1.7250%" height="15" fill="rgb(247,216,33)" fg:x="213350" fg:w="4775"/><text x="77.3245%" y="479.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (381 samples, 0.14%)</title><rect x="78.6619%" y="453" width="0.1376%" height="15" fill="rgb(226,26,14)" fg:x="217744" fg:w="381"/><text x="78.9119%" y="463.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (381 samples, 0.14%)</title><rect x="78.6619%" y="437" width="0.1376%" height="15" fill="rgb(215,49,53)" fg:x="217744" fg:w="381"/><text x="78.9119%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (41,372 samples, 14.95%)</title><rect x="63.8539%" y="517" width="14.9460%" height="15" fill="rgb(245,162,40)" fg:x="176754" fg:w="41372"/><text x="64.1039%" y="527.50">&lt;F as nom::internal::Pa..</text></g><g><title>core::ops::function::FnMut::call_mut (41,358 samples, 14.94%)</title><rect x="63.8590%" y="501" width="14.9409%" height="15" fill="rgb(229,68,17)" fg:x="176768" fg:w="41358"/><text x="64.1090%" y="511.50">core::ops::function::Fn..</text></g><g><title>hprof_slurp::record_parser::parse_sub_gc_record (41,358 samples, 14.94%)</title><rect x="63.8590%" y="485" width="14.9409%" height="15" fill="rgb(213,182,10)" fg:x="176768" fg:w="41358"/><text x="64.1090%" y="495.50">hprof_slurp::record_par..</text></g><g><title>clear_page_erms (146 samples, 0.05%)</title><rect x="79.5603%" y="165" width="0.0527%" height="15" fill="rgb(245,125,30)" fg:x="220231" fg:w="146"/><text x="79.8103%" y="175.50"></text></g><g><title>get_page_from_freelist (271 samples, 0.10%)</title><rect x="79.5538%" y="181" width="0.0979%" height="15" fill="rgb(232,202,2)" fg:x="220213" fg:w="271"/><text x="79.8038%" y="191.50"></text></g><g><title>rmqueue (105 samples, 0.04%)</title><rect x="79.6138%" y="165" width="0.0379%" height="15" fill="rgb(237,140,51)" fg:x="220379" fg:w="105"/><text x="79.8638%" y="175.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (93 samples, 0.03%)</title><rect x="79.6181%" y="149" width="0.0336%" height="15" fill="rgb(236,157,25)" fg:x="220391" fg:w="93"/><text x="79.8681%" y="159.50"></text></g><g><title>rmqueue_bulk.constprop.0 (80 samples, 0.03%)</title><rect x="79.6228%" y="133" width="0.0289%" height="15" fill="rgb(219,209,0)" fg:x="220404" fg:w="80"/><text x="79.8728%" y="143.50"></text></g><g><title>__alloc_pages_nodemask (285 samples, 0.10%)</title><rect x="79.5495%" y="197" width="0.1030%" height="15" fill="rgb(240,116,54)" fg:x="220201" fg:w="285"/><text x="79.7995%" y="207.50"></text></g><g><title>alloc_pages_vma (299 samples, 0.11%)</title><rect x="79.5459%" y="213" width="0.1080%" height="15" fill="rgb(216,10,36)" fg:x="220191" fg:w="299"/><text x="79.7959%" y="223.50"></text></g><g><title>cgroup_throttle_swaprate (30 samples, 0.01%)</title><rect x="79.6539%" y="213" width="0.0108%" height="15" fill="rgb(222,72,44)" fg:x="220490" fg:w="30"/><text x="79.9039%" y="223.50"></text></g><g><title>__pagevec_lru_add_fn (49 samples, 0.02%)</title><rect x="79.6691%" y="165" width="0.0177%" height="15" fill="rgb(232,159,9)" fg:x="220532" fg:w="49"/><text x="79.9191%" y="175.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (64 samples, 0.02%)</title><rect x="79.6658%" y="213" width="0.0231%" height="15" fill="rgb(210,39,32)" fg:x="220523" fg:w="64"/><text x="79.9158%" y="223.50"></text></g><g><title>lru_cache_add (62 samples, 0.02%)</title><rect x="79.6666%" y="197" width="0.0224%" height="15" fill="rgb(216,194,45)" fg:x="220525" fg:w="62"/><text x="79.9166%" y="207.50"></text></g><g><title>__pagevec_lru_add (59 samples, 0.02%)</title><rect x="79.6676%" y="181" width="0.0213%" height="15" fill="rgb(218,18,35)" fg:x="220528" fg:w="59"/><text x="79.9176%" y="191.50"></text></g><g><title>mem_cgroup_charge (76 samples, 0.03%)</title><rect x="79.6890%" y="213" width="0.0275%" height="15" fill="rgb(207,83,51)" fg:x="220587" fg:w="76"/><text x="79.9390%" y="223.50"></text></g><g><title>try_charge (31 samples, 0.01%)</title><rect x="79.7052%" y="197" width="0.0112%" height="15" fill="rgb(225,63,43)" fg:x="220632" fg:w="31"/><text x="79.9552%" y="207.50"></text></g><g><title>do_anonymous_page (512 samples, 0.18%)</title><rect x="79.5416%" y="229" width="0.1850%" height="15" fill="rgb(207,57,36)" fg:x="220179" fg:w="512"/><text x="79.7916%" y="239.50"></text></g><g><title>__handle_mm_fault (563 samples, 0.20%)</title><rect x="79.5253%" y="261" width="0.2034%" height="15" fill="rgb(216,99,33)" fg:x="220134" fg:w="563"/><text x="79.7753%" y="271.50"></text></g><g><title>handle_pte_fault (536 samples, 0.19%)</title><rect x="79.5351%" y="245" width="0.1936%" height="15" fill="rgb(225,42,16)" fg:x="220161" fg:w="536"/><text x="79.7851%" y="255.50"></text></g><g><title>handle_mm_fault (588 samples, 0.21%)</title><rect x="79.5166%" y="277" width="0.2124%" height="15" fill="rgb(220,201,45)" fg:x="220110" fg:w="588"/><text x="79.7666%" y="287.50"></text></g><g><title>do_user_addr_fault (640 samples, 0.23%)</title><rect x="79.5040%" y="293" width="0.2312%" height="15" fill="rgb(225,33,4)" fg:x="220075" fg:w="640"/><text x="79.7540%" y="303.50"></text></g><g><title>exc_page_fault (649 samples, 0.23%)</title><rect x="79.5025%" y="309" width="0.2345%" height="15" fill="rgb(224,33,50)" fg:x="220071" fg:w="649"/><text x="79.7525%" y="319.50"></text></g><g><title>asm_exc_page_fault (658 samples, 0.24%)</title><rect x="79.4997%" y="325" width="0.2377%" height="15" fill="rgb(246,198,51)" fg:x="220063" fg:w="658"/><text x="79.7497%" y="335.50"></text></g><g><title>_int_realloc (1,765 samples, 0.64%)</title><rect x="79.1348%" y="357" width="0.6376%" height="15" fill="rgb(205,22,4)" fg:x="219053" fg:w="1765"/><text x="79.3848%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (1,765 samples, 0.64%)</title><rect x="79.1348%" y="341" width="0.6376%" height="15" fill="rgb(206,3,8)" fg:x="219053" fg:w="1765"/><text x="79.3848%" y="351.50"></text></g><g><title>sync_regs (70 samples, 0.03%)</title><rect x="79.7471%" y="325" width="0.0253%" height="15" fill="rgb(251,23,15)" fg:x="220748" fg:w="70"/><text x="79.9971%" y="335.50"></text></g><g><title>unmap_page_range (87 samples, 0.03%)</title><rect x="79.7789%" y="165" width="0.0314%" height="15" fill="rgb(252,88,28)" fg:x="220836" fg:w="87"/><text x="80.0289%" y="175.50"></text></g><g><title>zap_pte_range (81 samples, 0.03%)</title><rect x="79.7811%" y="149" width="0.0293%" height="15" fill="rgb(212,127,14)" fg:x="220842" fg:w="81"/><text x="80.0311%" y="159.50"></text></g><g><title>do_munmap (105 samples, 0.04%)</title><rect x="79.7728%" y="245" width="0.0379%" height="15" fill="rgb(247,145,37)" fg:x="220819" fg:w="105"/><text x="80.0228%" y="255.50"></text></g><g><title>__do_munmap (105 samples, 0.04%)</title><rect x="79.7728%" y="229" width="0.0379%" height="15" fill="rgb(209,117,53)" fg:x="220819" fg:w="105"/><text x="80.0228%" y="239.50"></text></g><g><title>unmap_region (105 samples, 0.04%)</title><rect x="79.7728%" y="213" width="0.0379%" height="15" fill="rgb(212,90,42)" fg:x="220819" fg:w="105"/><text x="80.0228%" y="223.50"></text></g><g><title>unmap_vmas (88 samples, 0.03%)</title><rect x="79.7789%" y="197" width="0.0318%" height="15" fill="rgb(218,164,37)" fg:x="220836" fg:w="88"/><text x="80.0289%" y="207.50"></text></g><g><title>unmap_single_vma (88 samples, 0.03%)</title><rect x="79.7789%" y="181" width="0.0318%" height="15" fill="rgb(246,65,34)" fg:x="220836" fg:w="88"/><text x="80.0289%" y="191.50"></text></g><g><title>__alloc_pages_nodemask (43 samples, 0.02%)</title><rect x="79.8143%" y="181" width="0.0155%" height="15" fill="rgb(231,100,33)" fg:x="220934" fg:w="43"/><text x="80.0643%" y="191.50"></text></g><g><title>__pte_alloc (52 samples, 0.02%)</title><rect x="79.8114%" y="229" width="0.0188%" height="15" fill="rgb(228,126,14)" fg:x="220926" fg:w="52"/><text x="80.0614%" y="239.50"></text></g><g><title>pte_alloc_one (51 samples, 0.02%)</title><rect x="79.8118%" y="213" width="0.0184%" height="15" fill="rgb(215,173,21)" fg:x="220927" fg:w="51"/><text x="80.0618%" y="223.50"></text></g><g><title>alloc_pages_current (46 samples, 0.02%)</title><rect x="79.8136%" y="197" width="0.0166%" height="15" fill="rgb(210,6,40)" fg:x="220932" fg:w="46"/><text x="80.0636%" y="207.50"></text></g><g><title>move_ptes.constprop.0 (422 samples, 0.15%)</title><rect x="79.8371%" y="229" width="0.1525%" height="15" fill="rgb(212,48,18)" fg:x="220997" fg:w="422"/><text x="80.0871%" y="239.50"></text></g><g><title>move_page_tables (514 samples, 0.19%)</title><rect x="79.8107%" y="245" width="0.1857%" height="15" fill="rgb(230,214,11)" fg:x="220924" fg:w="514"/><text x="80.0607%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,386 samples, 0.86%)</title><rect x="79.1348%" y="501" width="0.8620%" height="15" fill="rgb(254,105,39)" fg:x="219053" fg:w="2386"/><text x="79.3848%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,386 samples, 0.86%)</title><rect x="79.1348%" y="485" width="0.8620%" height="15" fill="rgb(245,158,5)" fg:x="219053" fg:w="2386"/><text x="79.3848%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,386 samples, 0.86%)</title><rect x="79.1348%" y="469" width="0.8620%" height="15" fill="rgb(249,208,11)" fg:x="219053" fg:w="2386"/><text x="79.3848%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,386 samples, 0.86%)</title><rect x="79.1348%" y="453" width="0.8620%" height="15" fill="rgb(210,39,28)" fg:x="219053" fg:w="2386"/><text x="79.3848%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,386 samples, 0.86%)</title><rect x="79.1348%" y="437" width="0.8620%" height="15" fill="rgb(211,56,53)" fg:x="219053" fg:w="2386"/><text x="79.3848%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,386 samples, 0.86%)</title><rect x="79.1348%" y="421" width="0.8620%" height="15" fill="rgb(226,201,30)" fg:x="219053" fg:w="2386"/><text x="79.3848%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,386 samples, 0.86%)</title><rect x="79.1348%" y="405" width="0.8620%" height="15" fill="rgb(239,101,34)" fg:x="219053" fg:w="2386"/><text x="79.3848%" y="415.50"></text></g><g><title>alloc::alloc::realloc (2,386 samples, 0.86%)</title><rect x="79.1348%" y="389" width="0.8620%" height="15" fill="rgb(226,209,5)" fg:x="219053" fg:w="2386"/><text x="79.3848%" y="399.50"></text></g><g><title>__GI___libc_realloc (2,386 samples, 0.86%)</title><rect x="79.1348%" y="373" width="0.8620%" height="15" fill="rgb(250,105,47)" fg:x="219053" fg:w="2386"/><text x="79.3848%" y="383.50"></text></g><g><title>mremap_chunk (621 samples, 0.22%)</title><rect x="79.7724%" y="357" width="0.2243%" height="15" fill="rgb(230,72,3)" fg:x="220818" fg:w="621"/><text x="80.0224%" y="367.50"></text></g><g><title>__GI___mremap (621 samples, 0.22%)</title><rect x="79.7724%" y="341" width="0.2243%" height="15" fill="rgb(232,218,39)" fg:x="220818" fg:w="621"/><text x="80.0224%" y="351.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (621 samples, 0.22%)</title><rect x="79.7724%" y="325" width="0.2243%" height="15" fill="rgb(248,166,6)" fg:x="220818" fg:w="621"/><text x="80.0224%" y="335.50"></text></g><g><title>do_syscall_64 (621 samples, 0.22%)</title><rect x="79.7724%" y="309" width="0.2243%" height="15" fill="rgb(247,89,20)" fg:x="220818" fg:w="621"/><text x="80.0224%" y="319.50"></text></g><g><title>__x64_sys_mremap (621 samples, 0.22%)</title><rect x="79.7724%" y="293" width="0.2243%" height="15" fill="rgb(248,130,54)" fg:x="220818" fg:w="621"/><text x="80.0224%" y="303.50"></text></g><g><title>__do_sys_mremap (621 samples, 0.22%)</title><rect x="79.7724%" y="277" width="0.2243%" height="15" fill="rgb(234,196,4)" fg:x="220818" fg:w="621"/><text x="80.0224%" y="287.50"></text></g><g><title>move_vma (621 samples, 0.22%)</title><rect x="79.7724%" y="261" width="0.2243%" height="15" fill="rgb(250,143,31)" fg:x="220818" fg:w="621"/><text x="80.0224%" y="271.50"></text></g><g><title>__irqentry_text_end (117 samples, 0.04%)</title><rect x="82.6325%" y="485" width="0.0423%" height="15" fill="rgb(211,110,34)" fg:x="228735" fg:w="117"/><text x="82.8825%" y="495.50"></text></g><g><title>_cond_resched (30 samples, 0.01%)</title><rect x="82.9533%" y="453" width="0.0108%" height="15" fill="rgb(215,124,48)" fg:x="229623" fg:w="30"/><text x="83.2033%" y="463.50"></text></g><g><title>__count_memcg_events (30 samples, 0.01%)</title><rect x="83.1343%" y="437" width="0.0108%" height="15" fill="rgb(216,46,13)" fg:x="230124" fg:w="30"/><text x="83.3843%" y="447.50"></text></g><g><title>down_read_trylock (329 samples, 0.12%)</title><rect x="83.1693%" y="437" width="0.1189%" height="15" fill="rgb(205,184,25)" fg:x="230221" fg:w="329"/><text x="83.4193%" y="447.50"></text></g><g><title>find_vma (168 samples, 0.06%)</title><rect x="83.2882%" y="437" width="0.0607%" height="15" fill="rgb(228,1,10)" fg:x="230550" fg:w="168"/><text x="83.5382%" y="447.50"></text></g><g><title>vmacache_find (121 samples, 0.04%)</title><rect x="83.3052%" y="421" width="0.0437%" height="15" fill="rgb(213,116,27)" fg:x="230597" fg:w="121"/><text x="83.5552%" y="431.50"></text></g><g><title>__count_memcg_events.part.0 (52 samples, 0.02%)</title><rect x="83.6173%" y="421" width="0.0188%" height="15" fill="rgb(241,95,50)" fg:x="231461" fg:w="52"/><text x="83.8673%" y="431.50"></text></g><g><title>__count_memcg_events (100 samples, 0.04%)</title><rect x="83.6361%" y="421" width="0.0361%" height="15" fill="rgb(238,48,32)" fg:x="231513" fg:w="100"/><text x="83.8861%" y="431.50"></text></g><g><title>__count_memcg_events.part.0 (100 samples, 0.04%)</title><rect x="83.6361%" y="405" width="0.0361%" height="15" fill="rgb(235,113,49)" fg:x="231513" fg:w="100"/><text x="83.8861%" y="415.50"></text></g><g><title>_raw_spin_lock (300 samples, 0.11%)</title><rect x="84.2509%" y="389" width="0.1084%" height="15" fill="rgb(205,127,43)" fg:x="233215" fg:w="300"/><text x="84.5009%" y="399.50"></text></g><g><title>add_mm_counter_fast (34 samples, 0.01%)</title><rect x="84.3593%" y="389" width="0.0123%" height="15" fill="rgb(250,162,2)" fg:x="233515" fg:w="34"/><text x="84.6093%" y="399.50"></text></g><g><title>alloc_pages_vma (31 samples, 0.01%)</title><rect x="84.3716%" y="389" width="0.0112%" height="15" fill="rgb(220,13,41)" fg:x="233549" fg:w="31"/><text x="84.6216%" y="399.50"></text></g><g><title>__get_vma_policy (30 samples, 0.01%)</title><rect x="84.5631%" y="373" width="0.0108%" height="15" fill="rgb(249,221,25)" fg:x="234079" fg:w="30"/><text x="84.8131%" y="383.50"></text></g><g><title>__mod_lruvec_page_state (60 samples, 0.02%)</title><rect x="84.5739%" y="373" width="0.0217%" height="15" fill="rgb(215,208,19)" fg:x="234109" fg:w="60"/><text x="84.8239%" y="383.50"></text></g><g><title>__pte_alloc (69 samples, 0.02%)</title><rect x="84.6039%" y="373" width="0.0249%" height="15" fill="rgb(236,175,2)" fg:x="234192" fg:w="69"/><text x="84.8539%" y="383.50"></text></g><g><title>pte_alloc_one (67 samples, 0.02%)</title><rect x="84.6046%" y="357" width="0.0242%" height="15" fill="rgb(241,52,2)" fg:x="234194" fg:w="67"/><text x="84.8546%" y="367.50"></text></g><g><title>alloc_pages_current (60 samples, 0.02%)</title><rect x="84.6071%" y="341" width="0.0217%" height="15" fill="rgb(248,140,14)" fg:x="234201" fg:w="60"/><text x="84.8571%" y="351.50"></text></g><g><title>__alloc_pages_nodemask (60 samples, 0.02%)</title><rect x="84.6071%" y="325" width="0.0217%" height="15" fill="rgb(253,22,42)" fg:x="234201" fg:w="60"/><text x="84.8571%" y="335.50"></text></g><g><title>get_page_from_freelist (42 samples, 0.02%)</title><rect x="84.6136%" y="309" width="0.0152%" height="15" fill="rgb(234,61,47)" fg:x="234219" fg:w="42"/><text x="84.8636%" y="319.50"></text></g><g><title>_cond_resched (31 samples, 0.01%)</title><rect x="85.0255%" y="341" width="0.0112%" height="15" fill="rgb(208,226,15)" fg:x="235359" fg:w="31"/><text x="85.2755%" y="351.50"></text></g><g><title>clear_page_erms (6,425 samples, 2.32%)</title><rect x="85.2968%" y="325" width="2.3211%" height="15" fill="rgb(217,221,4)" fg:x="236110" fg:w="6425"/><text x="85.5468%" y="335.50">c..</text></g><g><title>kernel_init_free_pages (117 samples, 0.04%)</title><rect x="87.6179%" y="325" width="0.0423%" height="15" fill="rgb(212,174,34)" fg:x="242535" fg:w="117"/><text x="87.8679%" y="335.50"></text></g><g><title>__inc_numa_state (96 samples, 0.03%)</title><rect x="87.7801%" y="309" width="0.0347%" height="15" fill="rgb(253,83,4)" fg:x="242984" fg:w="96"/><text x="88.0301%" y="319.50"></text></g><g><title>_raw_spin_lock (88 samples, 0.03%)</title><rect x="88.1413%" y="293" width="0.0318%" height="15" fill="rgb(250,195,49)" fg:x="243984" fg:w="88"/><text x="88.3913%" y="303.50"></text></g><g><title>rmqueue (2,818 samples, 1.02%)</title><rect x="87.6601%" y="325" width="1.0180%" height="15" fill="rgb(241,192,25)" fg:x="242652" fg:w="2818"/><text x="87.9101%" y="335.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (2,380 samples, 0.86%)</title><rect x="87.8184%" y="309" width="0.8598%" height="15" fill="rgb(208,124,10)" fg:x="243090" fg:w="2380"/><text x="88.0684%" y="319.50"></text></g><g><title>rmqueue_bulk.constprop.0 (1,387 samples, 0.50%)</title><rect x="88.1771%" y="293" width="0.5011%" height="15" fill="rgb(222,33,0)" fg:x="244083" fg:w="1387"/><text x="88.4271%" y="303.50"></text></g><g><title>get_page_from_freelist (10,094 samples, 3.65%)</title><rect x="85.0374%" y="341" width="3.6465%" height="15" fill="rgb(234,209,28)" fg:x="235392" fg:w="10094"/><text x="85.2874%" y="351.50">get_..</text></g><g><title>kernel_init_free_pages (42 samples, 0.02%)</title><rect x="88.6839%" y="341" width="0.0152%" height="15" fill="rgb(224,11,23)" fg:x="245486" fg:w="42"/><text x="88.9339%" y="351.50"></text></g><g><title>rcu_all_qs (29 samples, 0.01%)</title><rect x="88.6991%" y="341" width="0.0105%" height="15" fill="rgb(232,99,1)" fg:x="245528" fg:w="29"/><text x="88.9491%" y="351.50"></text></g><g><title>__alloc_pages_nodemask (10,922 samples, 3.95%)</title><rect x="84.7704%" y="357" width="3.9457%" height="15" fill="rgb(237,95,45)" fg:x="234653" fg:w="10922"/><text x="85.0204%" y="367.50">__al..</text></g><g><title>_cond_resched (38 samples, 0.01%)</title><rect x="88.7161%" y="357" width="0.0137%" height="15" fill="rgb(208,109,11)" fg:x="245575" fg:w="38"/><text x="88.9661%" y="367.50"></text></g><g><title>get_page_from_freelist (33 samples, 0.01%)</title><rect x="88.7302%" y="357" width="0.0119%" height="15" fill="rgb(216,190,48)" fg:x="245614" fg:w="33"/><text x="88.9802%" y="367.50"></text></g><g><title>policy_nodemask (58 samples, 0.02%)</title><rect x="88.7497%" y="357" width="0.0210%" height="15" fill="rgb(251,171,36)" fg:x="245668" fg:w="58"/><text x="88.9997%" y="367.50"></text></g><g><title>alloc_pages_vma (11,498 samples, 4.15%)</title><rect x="84.6292%" y="373" width="4.1538%" height="15" fill="rgb(230,62,22)" fg:x="234262" fg:w="11498"/><text x="84.8792%" y="383.50">alloc..</text></g><g><title>should_fail_alloc_page (34 samples, 0.01%)</title><rect x="88.7706%" y="357" width="0.0123%" height="15" fill="rgb(225,114,35)" fg:x="245726" fg:w="34"/><text x="89.0206%" y="367.50"></text></g><g><title>kthread_blkcg (67 samples, 0.02%)</title><rect x="89.4119%" y="357" width="0.0242%" height="15" fill="rgb(215,118,42)" fg:x="247501" fg:w="67"/><text x="89.6619%" y="367.50"></text></g><g><title>cgroup_throttle_swaprate (1,818 samples, 0.66%)</title><rect x="88.7847%" y="373" width="0.6568%" height="15" fill="rgb(243,119,21)" fg:x="245765" fg:w="1818"/><text x="89.0347%" y="383.50"></text></g><g><title>get_mem_cgroup_from_mm (29 samples, 0.01%)</title><rect x="89.4415%" y="373" width="0.0105%" height="15" fill="rgb(252,177,53)" fg:x="247583" fg:w="29"/><text x="89.6915%" y="383.50"></text></g><g><title>kthread_blkcg (42 samples, 0.02%)</title><rect x="89.4520%" y="373" width="0.0152%" height="15" fill="rgb(237,209,29)" fg:x="247612" fg:w="42"/><text x="89.7020%" y="383.50"></text></g><g><title>lru_cache_add (34 samples, 0.01%)</title><rect x="89.4671%" y="373" width="0.0123%" height="15" fill="rgb(212,65,23)" fg:x="247654" fg:w="34"/><text x="89.7171%" y="383.50"></text></g><g><title>__mod_zone_page_state (47 samples, 0.02%)</title><rect x="89.6879%" y="325" width="0.0170%" height="15" fill="rgb(230,222,46)" fg:x="248265" fg:w="47"/><text x="89.9379%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (320 samples, 0.12%)</title><rect x="90.1709%" y="293" width="0.1156%" height="15" fill="rgb(215,135,32)" fg:x="249602" fg:w="320"/><text x="90.4209%" y="303.50"></text></g><g><title>__mod_memcg_state.part.0 (162 samples, 0.06%)</title><rect x="90.2280%" y="277" width="0.0585%" height="15" fill="rgb(246,101,22)" fg:x="249760" fg:w="162"/><text x="90.4780%" y="287.50"></text></g><g><title>__mod_lruvec_state (438 samples, 0.16%)</title><rect x="90.1525%" y="309" width="0.1582%" height="15" fill="rgb(206,107,13)" fg:x="249551" fg:w="438"/><text x="90.4025%" y="319.50"></text></g><g><title>__mod_node_page_state (52 samples, 0.02%)</title><rect x="90.2919%" y="293" width="0.0188%" height="15" fill="rgb(250,100,44)" fg:x="249937" fg:w="52"/><text x="90.5419%" y="303.50"></text></g><g><title>__mod_node_page_state (69 samples, 0.02%)</title><rect x="90.3157%" y="309" width="0.0249%" height="15" fill="rgb(231,147,38)" fg:x="250003" fg:w="69"/><text x="90.5657%" y="319.50"></text></g><g><title>__mod_zone_page_state (71 samples, 0.03%)</title><rect x="90.3407%" y="309" width="0.0256%" height="15" fill="rgb(229,8,40)" fg:x="250072" fg:w="71"/><text x="90.5907%" y="319.50"></text></g><g><title>mem_cgroup_update_lru_size (79 samples, 0.03%)</title><rect x="90.3663%" y="309" width="0.0285%" height="15" fill="rgb(221,135,30)" fg:x="250143" fg:w="79"/><text x="90.6163%" y="319.50"></text></g><g><title>__pagevec_lru_add_fn (2,188 samples, 0.79%)</title><rect x="89.7049%" y="325" width="0.7904%" height="15" fill="rgb(249,193,18)" fg:x="248312" fg:w="2188"/><text x="89.9549%" y="335.50"></text></g><g><title>page_mapping (278 samples, 0.10%)</title><rect x="90.3949%" y="309" width="0.1004%" height="15" fill="rgb(209,133,39)" fg:x="250222" fg:w="278"/><text x="90.6449%" y="319.50"></text></g><g><title>lock_page_lruvec_irqsave (107 samples, 0.04%)</title><rect x="90.4971%" y="325" width="0.0387%" height="15" fill="rgb(232,100,14)" fg:x="250505" fg:w="107"/><text x="90.7471%" y="335.50"></text></g><g><title>_raw_spin_lock_irqsave (87 samples, 0.03%)</title><rect x="90.5043%" y="309" width="0.0314%" height="15" fill="rgb(224,185,1)" fg:x="250525" fg:w="87"/><text x="90.7543%" y="319.50"></text></g><g><title>native_queued_spin_lock_slowpath (29 samples, 0.01%)</title><rect x="90.5253%" y="293" width="0.0105%" height="15" fill="rgb(223,139,8)" fg:x="250583" fg:w="29"/><text x="90.7753%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (29 samples, 0.01%)</title><rect x="90.5253%" y="277" width="0.0105%" height="15" fill="rgb(232,213,38)" fg:x="250583" fg:w="29"/><text x="90.7753%" y="287.50"></text></g><g><title>mem_cgroup_update_lru_size (28 samples, 0.01%)</title><rect x="90.5365%" y="325" width="0.0101%" height="15" fill="rgb(207,94,22)" fg:x="250614" fg:w="28"/><text x="90.7865%" y="335.50"></text></g><g><title>page_mapping (29 samples, 0.01%)</title><rect x="90.5466%" y="325" width="0.0105%" height="15" fill="rgb(219,183,54)" fg:x="250642" fg:w="29"/><text x="90.7966%" y="335.50"></text></g><g><title>free_unref_page_list (52 samples, 0.02%)</title><rect x="90.6802%" y="309" width="0.0188%" height="15" fill="rgb(216,185,54)" fg:x="251012" fg:w="52"/><text x="90.9302%" y="319.50"></text></g><g><title>__pagevec_lru_add (2,947 samples, 1.06%)</title><rect x="89.6362%" y="341" width="1.0646%" height="15" fill="rgb(254,217,39)" fg:x="248122" fg:w="2947"/><text x="89.8862%" y="351.50"></text></g><g><title>release_pages (393 samples, 0.14%)</title><rect x="90.5589%" y="325" width="0.1420%" height="15" fill="rgb(240,178,23)" fg:x="250676" fg:w="393"/><text x="90.8089%" y="335.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (3,404 samples, 1.23%)</title><rect x="89.4794%" y="373" width="1.2297%" height="15" fill="rgb(218,11,47)" fg:x="247688" fg:w="3404"/><text x="89.7294%" y="383.50"></text></g><g><title>lru_cache_add (3,353 samples, 1.21%)</title><rect x="89.4979%" y="357" width="1.2113%" height="15" fill="rgb(218,51,51)" fg:x="247739" fg:w="3353"/><text x="89.7479%" y="367.50"></text></g><g><title>__count_memcg_events.part.0 (65 samples, 0.02%)</title><rect x="90.9649%" y="357" width="0.0235%" height="15" fill="rgb(238,126,27)" fg:x="251800" fg:w="65"/><text x="91.2149%" y="367.50"></text></g><g><title>get_mem_cgroup_from_mm (750 samples, 0.27%)</title><rect x="90.9917%" y="357" width="0.2709%" height="15" fill="rgb(249,202,22)" fg:x="251874" fg:w="750"/><text x="91.2417%" y="367.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (219 samples, 0.08%)</title><rect x="91.2626%" y="357" width="0.0791%" height="15" fill="rgb(254,195,49)" fg:x="252624" fg:w="219"/><text x="91.5126%" y="367.50"></text></g><g><title>__count_memcg_events.part.0 (126 samples, 0.05%)</title><rect x="91.2962%" y="341" width="0.0455%" height="15" fill="rgb(208,123,14)" fg:x="252717" fg:w="126"/><text x="91.5462%" y="351.50"></text></g><g><title>memcg_check_events (35 samples, 0.01%)</title><rect x="91.3417%" y="357" width="0.0126%" height="15" fill="rgb(224,200,8)" fg:x="252843" fg:w="35"/><text x="91.5917%" y="367.50"></text></g><g><title>rcu_read_unlock_strict (53 samples, 0.02%)</title><rect x="91.3551%" y="357" width="0.0191%" height="15" fill="rgb(217,61,36)" fg:x="252880" fg:w="53"/><text x="91.6051%" y="367.50"></text></g><g><title>page_counter_try_charge (237 samples, 0.09%)</title><rect x="91.6921%" y="341" width="0.0856%" height="15" fill="rgb(206,35,45)" fg:x="253813" fg:w="237"/><text x="91.9421%" y="351.50"></text></g><g><title>mem_cgroup_charge (2,988 samples, 1.08%)</title><rect x="90.7092%" y="373" width="1.0794%" height="15" fill="rgb(217,65,33)" fg:x="251092" fg:w="2988"/><text x="90.9592%" y="383.50"></text></g><g><title>try_charge (1,147 samples, 0.41%)</title><rect x="91.3742%" y="357" width="0.4144%" height="15" fill="rgb(222,158,48)" fg:x="252933" fg:w="1147"/><text x="91.6242%" y="367.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (32 samples, 0.01%)</title><rect x="91.7886%" y="373" width="0.0116%" height="15" fill="rgb(254,2,54)" fg:x="254080" fg:w="32"/><text x="92.0386%" y="383.50"></text></g><g><title>memcg_check_events (47 samples, 0.02%)</title><rect x="91.8002%" y="373" width="0.0170%" height="15" fill="rgb(250,143,38)" fg:x="254112" fg:w="47"/><text x="92.0502%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (352 samples, 0.13%)</title><rect x="91.9031%" y="325" width="0.1272%" height="15" fill="rgb(248,25,0)" fg:x="254397" fg:w="352"/><text x="92.1531%" y="335.50"></text></g><g><title>__mod_memcg_state.part.0 (200 samples, 0.07%)</title><rect x="91.9580%" y="309" width="0.0723%" height="15" fill="rgb(206,152,27)" fg:x="254549" fg:w="200"/><text x="92.2080%" y="319.50"></text></g><g><title>__mod_lruvec_state (523 samples, 0.19%)</title><rect x="91.8818%" y="341" width="0.1889%" height="15" fill="rgb(240,77,30)" fg:x="254338" fg:w="523"/><text x="92.1318%" y="351.50"></text></g><g><title>__mod_node_page_state (88 samples, 0.03%)</title><rect x="92.0389%" y="325" width="0.0318%" height="15" fill="rgb(231,5,3)" fg:x="254773" fg:w="88"/><text x="92.2889%" y="335.50"></text></g><g><title>__mod_lruvec_page_state (764 samples, 0.28%)</title><rect x="91.8554%" y="357" width="0.2760%" height="15" fill="rgb(207,226,32)" fg:x="254265" fg:w="764"/><text x="92.1054%" y="367.50"></text></g><g><title>__mod_node_page_state (148 samples, 0.05%)</title><rect x="92.0780%" y="341" width="0.0535%" height="15" fill="rgb(222,207,47)" fg:x="254881" fg:w="148"/><text x="92.3280%" y="351.50"></text></g><g><title>page_add_new_anon_rmap (981 samples, 0.35%)</title><rect x="91.8171%" y="373" width="0.3544%" height="15" fill="rgb(229,115,45)" fg:x="254159" fg:w="981"/><text x="92.0671%" y="383.50"></text></g><g><title>__page_set_anon_rmap (88 samples, 0.03%)</title><rect x="92.1397%" y="357" width="0.0318%" height="15" fill="rgb(224,191,6)" fg:x="255052" fg:w="88"/><text x="92.3897%" y="367.50"></text></g><g><title>pfn_pte (56 samples, 0.02%)</title><rect x="92.1715%" y="373" width="0.0202%" height="15" fill="rgb(230,227,24)" fg:x="255140" fg:w="56"/><text x="92.4215%" y="383.50"></text></g><g><title>pmd_page_vaddr (35 samples, 0.01%)</title><rect x="92.1918%" y="373" width="0.0126%" height="15" fill="rgb(228,80,19)" fg:x="255196" fg:w="35"/><text x="92.4418%" y="383.50"></text></g><g><title>pmd_pfn (35 samples, 0.01%)</title><rect x="92.2044%" y="373" width="0.0126%" height="15" fill="rgb(247,229,0)" fg:x="255231" fg:w="35"/><text x="92.4544%" y="383.50"></text></g><g><title>policy_node (30 samples, 0.01%)</title><rect x="92.2170%" y="373" width="0.0108%" height="15" fill="rgb(237,194,15)" fg:x="255266" fg:w="30"/><text x="92.4670%" y="383.50"></text></g><g><title>rcu_read_unlock_strict (45 samples, 0.02%)</title><rect x="92.2369%" y="373" width="0.0163%" height="15" fill="rgb(219,203,20)" fg:x="255321" fg:w="45"/><text x="92.4869%" y="383.50"></text></g><g><title>do_anonymous_page (21,791 samples, 7.87%)</title><rect x="84.3900%" y="389" width="7.8722%" height="15" fill="rgb(234,128,8)" fg:x="233600" fg:w="21791"/><text x="84.6400%" y="399.50">do_anonymou..</text></g><g><title>pfn_pte (32 samples, 0.01%)</title><rect x="92.2853%" y="389" width="0.0116%" height="15" fill="rgb(248,202,8)" fg:x="255455" fg:w="32"/><text x="92.5353%" y="399.50"></text></g><g><title>pmd_pfn (43 samples, 0.02%)</title><rect x="92.3045%" y="389" width="0.0155%" height="15" fill="rgb(206,104,37)" fg:x="255508" fg:w="43"/><text x="92.5545%" y="399.50"></text></g><g><title>handle_pte_fault (22,741 samples, 8.22%)</title><rect x="84.1111%" y="405" width="8.2154%" height="15" fill="rgb(223,8,27)" fg:x="232828" fg:w="22741"/><text x="84.3611%" y="415.50">handle_pte_..</text></g><g><title>__handle_mm_fault (23,972 samples, 8.66%)</title><rect x="83.6722%" y="421" width="8.6601%" height="15" fill="rgb(216,217,28)" fg:x="231613" fg:w="23972"/><text x="83.9222%" y="431.50">__handle_mm_..</text></g><g><title>p4d_offset (29 samples, 0.01%)</title><rect x="92.3503%" y="421" width="0.0105%" height="15" fill="rgb(249,199,1)" fg:x="255635" fg:w="29"/><text x="92.6003%" y="431.50"></text></g><g><title>pmd_val (49 samples, 0.02%)</title><rect x="92.3608%" y="421" width="0.0177%" height="15" fill="rgb(240,85,17)" fg:x="255664" fg:w="49"/><text x="92.6108%" y="431.50"></text></g><g><title>handle_mm_fault (25,025 samples, 9.04%)</title><rect x="83.3489%" y="437" width="9.0405%" height="15" fill="rgb(206,108,45)" fg:x="230718" fg:w="25025"/><text x="83.5989%" y="447.50">handle_mm_fau..</text></g><g><title>mem_cgroup_from_task (52 samples, 0.02%)</title><rect x="92.3894%" y="437" width="0.0188%" height="15" fill="rgb(245,210,41)" fg:x="255743" fg:w="52"/><text x="92.6394%" y="447.50"></text></g><g><title>rcu_all_qs (33 samples, 0.01%)</title><rect x="92.4081%" y="437" width="0.0119%" height="15" fill="rgb(206,13,37)" fg:x="255795" fg:w="33"/><text x="92.6581%" y="447.50"></text></g><g><title>rcu_read_unlock_strict (155 samples, 0.06%)</title><rect x="92.4201%" y="437" width="0.0560%" height="15" fill="rgb(250,61,18)" fg:x="255828" fg:w="155"/><text x="92.6701%" y="447.50"></text></g><g><title>up_read (397 samples, 0.14%)</title><rect x="92.4764%" y="437" width="0.1434%" height="15" fill="rgb(235,172,48)" fg:x="255984" fg:w="397"/><text x="92.7264%" y="447.50"></text></g><g><title>do_user_addr_fault (26,758 samples, 9.67%)</title><rect x="82.9685%" y="453" width="9.6666%" height="15" fill="rgb(249,201,17)" fg:x="229665" fg:w="26758"/><text x="83.2185%" y="463.50">do_user_addr_f..</text></g><g><title>vmacache_find (42 samples, 0.02%)</title><rect x="92.6198%" y="437" width="0.0152%" height="15" fill="rgb(219,208,6)" fg:x="256381" fg:w="42"/><text x="92.8698%" y="447.50"></text></g><g><title>down_read_trylock (31 samples, 0.01%)</title><rect x="92.6350%" y="453" width="0.0112%" height="15" fill="rgb(248,31,23)" fg:x="256423" fg:w="31"/><text x="92.8850%" y="463.50"></text></g><g><title>handle_mm_fault (34 samples, 0.01%)</title><rect x="92.6592%" y="453" width="0.0123%" height="15" fill="rgb(245,15,42)" fg:x="256490" fg:w="34"/><text x="92.9092%" y="463.50"></text></g><g><title>exit_to_user_mode_prepare (38 samples, 0.01%)</title><rect x="92.6925%" y="437" width="0.0137%" height="15" fill="rgb(222,217,39)" fg:x="256582" fg:w="38"/><text x="92.9425%" y="447.50"></text></g><g><title>exit_to_user_mode_prepare (85 samples, 0.03%)</title><rect x="92.7105%" y="421" width="0.0307%" height="15" fill="rgb(210,219,27)" fg:x="256632" fg:w="85"/><text x="92.9605%" y="431.50"></text></g><g><title>fpregs_assert_state_consistent (47 samples, 0.02%)</title><rect x="92.7243%" y="405" width="0.0170%" height="15" fill="rgb(252,166,36)" fg:x="256670" fg:w="47"/><text x="92.9743%" y="415.50"></text></g><g><title>irqentry_exit (177 samples, 0.06%)</title><rect x="92.6860%" y="453" width="0.0639%" height="15" fill="rgb(245,132,34)" fg:x="256564" fg:w="177"/><text x="92.9360%" y="463.50"></text></g><g><title>irqentry_exit_to_user_mode (121 samples, 0.04%)</title><rect x="92.7062%" y="437" width="0.0437%" height="15" fill="rgb(236,54,3)" fg:x="256620" fg:w="121"/><text x="92.9562%" y="447.50"></text></g><g><title>exc_page_fault (27,382 samples, 9.89%)</title><rect x="82.8684%" y="469" width="9.8920%" height="15" fill="rgb(241,173,43)" fg:x="229388" fg:w="27382"/><text x="83.1184%" y="479.50">exc_page_fault</text></g><g><title>asm_exc_page_fault (27,966 samples, 10.10%)</title><rect x="82.6748%" y="485" width="10.1030%" height="15" fill="rgb(215,190,9)" fg:x="228852" fg:w="27966"/><text x="82.9248%" y="495.50">asm_exc_page_fa..</text></g><g><title>error_entry (804 samples, 0.29%)</title><rect x="92.7846%" y="485" width="0.2905%" height="15" fill="rgb(242,101,16)" fg:x="256837" fg:w="804"/><text x="93.0346%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (43,102 samples, 15.57%)</title><rect x="78.7999%" y="517" width="15.5710%" height="15" fill="rgb(223,190,21)" fg:x="218126" fg:w="43102"/><text x="79.0499%" y="527.50">alloc::vec::Vec&lt;T,A&gt;::pu..</text></g><g><title>core::ptr::write (39,787 samples, 14.37%)</title><rect x="79.9975%" y="501" width="14.3734%" height="15" fill="rgb(215,228,25)" fg:x="221441" fg:w="39787"/><text x="80.2475%" y="511.50">core::ptr::write</text></g><g><title>sync_regs (3,561 samples, 1.29%)</title><rect x="93.0844%" y="485" width="1.2864%" height="15" fill="rgb(225,36,22)" fg:x="257667" fg:w="3561"/><text x="93.3344%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::parse_heap_dump_segment (97,104 samples, 35.08%)</title><rect x="59.3057%" y="581" width="35.0797%" height="15" fill="rgb(251,106,46)" fg:x="164164" fg:w="97104"/><text x="59.5557%" y="591.50">hprof_slurp::record_parser::parse_heap_dump_segment</text></g><g><title>nom::combinator::map::{{closure}} (97,104 samples, 35.08%)</title><rect x="59.3057%" y="565" width="35.0797%" height="15" fill="rgb(208,90,1)" fg:x="164164" fg:w="97104"/><text x="59.5557%" y="575.50">nom::combinator::map::{{closure}}</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (97,104 samples, 35.08%)</title><rect x="59.3057%" y="549" width="35.0797%" height="15" fill="rgb(243,10,4)" fg:x="164164" fg:w="97104"/><text x="59.5557%" y="559.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>nom::multi::many1::{{closure}} (97,104 samples, 35.08%)</title><rect x="59.3057%" y="533" width="35.0797%" height="15" fill="rgb(212,137,27)" fg:x="164164" fg:w="97104"/><text x="59.5557%" y="543.50">nom::multi::many1::{{closure}}</text></g><g><title>hprof_slurp::record_parser::parse_hprof_record (97,125 samples, 35.09%)</title><rect x="59.3057%" y="597" width="35.0872%" height="15" fill="rgb(231,220,49)" fg:x="164164" fg:w="97125"/><text x="59.5557%" y="607.50">hprof_slurp::record_parser::parse_hprof_record</text></g><g><title>_int_free (53 samples, 0.02%)</title><rect x="94.4540%" y="85" width="0.0191%" height="15" fill="rgb(237,96,20)" fg:x="261458" fg:w="53"/><text x="94.7040%" y="95.50"></text></g><g><title>malloc_consolidate (51 samples, 0.02%)</title><rect x="94.4547%" y="69" width="0.0184%" height="15" fill="rgb(239,229,30)" fg:x="261460" fg:w="51"/><text x="94.7047%" y="79.50"></text></g><g><title>unlink_chunk (28 samples, 0.01%)</title><rect x="94.4630%" y="53" width="0.0101%" height="15" fill="rgb(219,65,33)" fg:x="261483" fg:w="28"/><text x="94.7130%" y="63.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (61 samples, 0.02%)</title><rect x="94.4525%" y="165" width="0.0220%" height="15" fill="rgb(243,134,7)" fg:x="261454" fg:w="61"/><text x="94.7025%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (61 samples, 0.02%)</title><rect x="94.4525%" y="149" width="0.0220%" height="15" fill="rgb(216,177,54)" fg:x="261454" fg:w="61"/><text x="94.7025%" y="159.50"></text></g><g><title>alloc::alloc::realloc (61 samples, 0.02%)</title><rect x="94.4525%" y="133" width="0.0220%" height="15" fill="rgb(211,160,20)" fg:x="261454" fg:w="61"/><text x="94.7025%" y="143.50"></text></g><g><title>__GI___libc_realloc (61 samples, 0.02%)</title><rect x="94.4525%" y="117" width="0.0220%" height="15" fill="rgb(239,85,39)" fg:x="261454" fg:w="61"/><text x="94.7025%" y="127.50"></text></g><g><title>_int_realloc (59 samples, 0.02%)</title><rect x="94.4532%" y="101" width="0.0213%" height="15" fill="rgb(232,125,22)" fg:x="261456" fg:w="59"/><text x="94.7032%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (67 samples, 0.02%)</title><rect x="94.4507%" y="341" width="0.0242%" height="15" fill="rgb(244,57,34)" fg:x="261449" fg:w="67"/><text x="94.7007%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (66 samples, 0.02%)</title><rect x="94.4511%" y="325" width="0.0238%" height="15" fill="rgb(214,203,32)" fg:x="261450" fg:w="66"/><text x="94.7011%" y="335.50"></text></g><g><title>alloc::string::String::push_str (66 samples, 0.02%)</title><rect x="94.4511%" y="309" width="0.0238%" height="15" fill="rgb(207,58,43)" fg:x="261450" fg:w="66"/><text x="94.7011%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (66 samples, 0.02%)</title><rect x="94.4511%" y="293" width="0.0238%" height="15" fill="rgb(215,193,15)" fg:x="261450" fg:w="66"/><text x="94.7011%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (66 samples, 0.02%)</title><rect x="94.4511%" y="277" width="0.0238%" height="15" fill="rgb(232,15,44)" fg:x="261450" fg:w="66"/><text x="94.7011%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (66 samples, 0.02%)</title><rect x="94.4511%" y="261" width="0.0238%" height="15" fill="rgb(212,3,48)" fg:x="261450" fg:w="66"/><text x="94.7011%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (66 samples, 0.02%)</title><rect x="94.4511%" y="245" width="0.0238%" height="15" fill="rgb(218,128,7)" fg:x="261450" fg:w="66"/><text x="94.7011%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (66 samples, 0.02%)</title><rect x="94.4511%" y="229" width="0.0238%" height="15" fill="rgb(226,216,39)" fg:x="261450" fg:w="66"/><text x="94.7011%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (66 samples, 0.02%)</title><rect x="94.4511%" y="213" width="0.0238%" height="15" fill="rgb(243,47,51)" fg:x="261450" fg:w="66"/><text x="94.7011%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (66 samples, 0.02%)</title><rect x="94.4511%" y="197" width="0.0238%" height="15" fill="rgb(241,183,40)" fg:x="261450" fg:w="66"/><text x="94.7011%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (64 samples, 0.02%)</title><rect x="94.4518%" y="181" width="0.0231%" height="15" fill="rgb(231,217,32)" fg:x="261452" fg:w="64"/><text x="94.7018%" y="191.50"></text></g><g><title>core::fmt::Formatter::write_fmt (78 samples, 0.03%)</title><rect x="94.4478%" y="373" width="0.0282%" height="15" fill="rgb(229,61,38)" fg:x="261441" fg:w="78"/><text x="94.6978%" y="383.50"></text></g><g><title>core::fmt::write (71 samples, 0.03%)</title><rect x="94.4503%" y="357" width="0.0256%" height="15" fill="rgb(225,210,5)" fg:x="261448" fg:w="71"/><text x="94.7003%" y="367.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (104 samples, 0.04%)</title><rect x="94.4395%" y="437" width="0.0376%" height="15" fill="rgb(231,79,45)" fg:x="261418" fg:w="104"/><text x="94.6895%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (104 samples, 0.04%)</title><rect x="94.4395%" y="421" width="0.0376%" height="15" fill="rgb(224,100,7)" fg:x="261418" fg:w="104"/><text x="94.6895%" y="431.50"></text></g><g><title>core::fmt::write (104 samples, 0.04%)</title><rect x="94.4395%" y="405" width="0.0376%" height="15" fill="rgb(241,198,18)" fg:x="261418" fg:w="104"/><text x="94.6895%" y="415.50"></text></g><g><title>&lt;console::utils::StyledObject&lt;D&gt; as core::fmt::Display&gt;::fmt (103 samples, 0.04%)</title><rect x="94.4399%" y="389" width="0.0372%" height="15" fill="rgb(252,97,53)" fg:x="261419" fg:w="103"/><text x="94.6899%" y="399.50"></text></g><g><title>&lt;number_prefix::Prefix as core::fmt::Display&gt;::fmt (28 samples, 0.01%)</title><rect x="94.5331%" y="309" width="0.0101%" height="15" fill="rgb(220,88,7)" fg:x="261677" fg:w="28"/><text x="94.7831%" y="319.50"></text></g><g><title>core::fmt::float::float_to_decimal_common_exact (72 samples, 0.03%)</title><rect x="94.5435%" y="309" width="0.0260%" height="15" fill="rgb(213,176,14)" fg:x="261706" fg:w="72"/><text x="94.7935%" y="319.50"></text></g><g><title>core::num::flt2dec::to_exact_fixed_str (59 samples, 0.02%)</title><rect x="94.5482%" y="293" width="0.0213%" height="15" fill="rgb(246,73,7)" fg:x="261719" fg:w="59"/><text x="94.7982%" y="303.50"></text></g><g><title>core::ops::function::FnMut::call_mut (51 samples, 0.02%)</title><rect x="94.5511%" y="277" width="0.0184%" height="15" fill="rgb(245,64,36)" fg:x="261727" fg:w="51"/><text x="94.8011%" y="287.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact (51 samples, 0.02%)</title><rect x="94.5511%" y="261" width="0.0184%" height="15" fill="rgb(245,80,10)" fg:x="261727" fg:w="51"/><text x="94.8011%" y="271.50"></text></g><g><title>core::num::flt2dec::strategy::grisu::format_exact_opt (46 samples, 0.02%)</title><rect x="94.5529%" y="245" width="0.0166%" height="15" fill="rgb(232,107,50)" fg:x="261732" fg:w="46"/><text x="94.8029%" y="255.50"></text></g><g><title>core::fmt::Formatter::write_fmt (132 samples, 0.05%)</title><rect x="94.5226%" y="357" width="0.0477%" height="15" fill="rgb(253,3,0)" fg:x="261648" fg:w="132"/><text x="94.7726%" y="367.50"></text></g><g><title>core::fmt::write (122 samples, 0.04%)</title><rect x="94.5262%" y="341" width="0.0441%" height="15" fill="rgb(212,99,53)" fg:x="261658" fg:w="122"/><text x="94.7762%" y="351.50"></text></g><g><title>core::fmt::run (106 samples, 0.04%)</title><rect x="94.5320%" y="325" width="0.0383%" height="15" fill="rgb(249,111,54)" fg:x="261674" fg:w="106"/><text x="94.7820%" y="335.50"></text></g><g><title>&lt;indicatif::format::HumanBytes as core::fmt::Display&gt;::fmt (137 samples, 0.05%)</title><rect x="94.5215%" y="373" width="0.0495%" height="15" fill="rgb(249,55,30)" fg:x="261645" fg:w="137"/><text x="94.7715%" y="383.50"></text></g><g><title>alloc::fmt::format (192 samples, 0.07%)</title><rect x="94.5049%" y="421" width="0.0694%" height="15" fill="rgb(237,47,42)" fg:x="261599" fg:w="192"/><text x="94.7549%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (188 samples, 0.07%)</title><rect x="94.5063%" y="405" width="0.0679%" height="15" fill="rgb(211,20,18)" fg:x="261603" fg:w="188"/><text x="94.7563%" y="415.50"></text></g><g><title>core::fmt::write (185 samples, 0.07%)</title><rect x="94.5074%" y="389" width="0.0668%" height="15" fill="rgb(231,203,46)" fg:x="261606" fg:w="185"/><text x="94.7574%" y="399.50"></text></g><g><title>_int_free (58 samples, 0.02%)</title><rect x="94.6089%" y="53" width="0.0210%" height="15" fill="rgb(237,142,3)" fg:x="261887" fg:w="58"/><text x="94.8589%" y="63.50"></text></g><g><title>malloc_consolidate (57 samples, 0.02%)</title><rect x="94.6093%" y="37" width="0.0206%" height="15" fill="rgb(241,107,1)" fg:x="261888" fg:w="57"/><text x="94.8593%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (67 samples, 0.02%)</title><rect x="94.6086%" y="149" width="0.0242%" height="15" fill="rgb(229,83,13)" fg:x="261886" fg:w="67"/><text x="94.8586%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (67 samples, 0.02%)</title><rect x="94.6086%" y="133" width="0.0242%" height="15" fill="rgb(241,91,40)" fg:x="261886" fg:w="67"/><text x="94.8586%" y="143.50"></text></g><g><title>alloc::alloc::Global::grow_impl (67 samples, 0.02%)</title><rect x="94.6086%" y="117" width="0.0242%" height="15" fill="rgb(225,3,45)" fg:x="261886" fg:w="67"/><text x="94.8586%" y="127.50"></text></g><g><title>alloc::alloc::realloc (67 samples, 0.02%)</title><rect x="94.6086%" y="101" width="0.0242%" height="15" fill="rgb(244,223,14)" fg:x="261886" fg:w="67"/><text x="94.8586%" y="111.50"></text></g><g><title>__GI___libc_realloc (67 samples, 0.02%)</title><rect x="94.6086%" y="85" width="0.0242%" height="15" fill="rgb(224,124,37)" fg:x="261886" fg:w="67"/><text x="94.8586%" y="95.50"></text></g><g><title>_int_realloc (67 samples, 0.02%)</title><rect x="94.6086%" y="69" width="0.0242%" height="15" fill="rgb(251,171,30)" fg:x="261886" fg:w="67"/><text x="94.8586%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 samples, 0.03%)</title><rect x="94.6082%" y="309" width="0.0253%" height="15" fill="rgb(236,46,54)" fg:x="261885" fg:w="70"/><text x="94.8582%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (70 samples, 0.03%)</title><rect x="94.6082%" y="293" width="0.0253%" height="15" fill="rgb(245,213,5)" fg:x="261885" fg:w="70"/><text x="94.8582%" y="303.50"></text></g><g><title>alloc::string::String::push_str (70 samples, 0.03%)</title><rect x="94.6082%" y="277" width="0.0253%" height="15" fill="rgb(230,144,27)" fg:x="261885" fg:w="70"/><text x="94.8582%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (70 samples, 0.03%)</title><rect x="94.6082%" y="261" width="0.0253%" height="15" fill="rgb(220,86,6)" fg:x="261885" fg:w="70"/><text x="94.8582%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (70 samples, 0.03%)</title><rect x="94.6082%" y="245" width="0.0253%" height="15" fill="rgb(240,20,13)" fg:x="261885" fg:w="70"/><text x="94.8582%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (70 samples, 0.03%)</title><rect x="94.6082%" y="229" width="0.0253%" height="15" fill="rgb(217,89,34)" fg:x="261885" fg:w="70"/><text x="94.8582%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (70 samples, 0.03%)</title><rect x="94.6082%" y="213" width="0.0253%" height="15" fill="rgb(229,13,5)" fg:x="261885" fg:w="70"/><text x="94.8582%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (70 samples, 0.03%)</title><rect x="94.6082%" y="197" width="0.0253%" height="15" fill="rgb(244,67,35)" fg:x="261885" fg:w="70"/><text x="94.8582%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (70 samples, 0.03%)</title><rect x="94.6082%" y="181" width="0.0253%" height="15" fill="rgb(221,40,2)" fg:x="261885" fg:w="70"/><text x="94.8582%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (70 samples, 0.03%)</title><rect x="94.6082%" y="165" width="0.0253%" height="15" fill="rgb(237,157,21)" fg:x="261885" fg:w="70"/><text x="94.8582%" y="175.50"></text></g><g><title>alloc::fmt::format (129 samples, 0.05%)</title><rect x="94.5883%" y="405" width="0.0466%" height="15" fill="rgb(222,94,11)" fg:x="261830" fg:w="129"/><text x="94.8383%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (128 samples, 0.05%)</title><rect x="94.5887%" y="389" width="0.0462%" height="15" fill="rgb(249,113,6)" fg:x="261831" fg:w="128"/><text x="94.8387%" y="399.50"></text></g><g><title>core::fmt::write (128 samples, 0.05%)</title><rect x="94.5887%" y="373" width="0.0462%" height="15" fill="rgb(238,137,36)" fg:x="261831" fg:w="128"/><text x="94.8387%" y="383.50"></text></g><g><title>&lt;console::utils::StyledObject&lt;D&gt; as core::fmt::Display&gt;::fmt (108 samples, 0.04%)</title><rect x="94.5959%" y="357" width="0.0390%" height="15" fill="rgb(210,102,26)" fg:x="261851" fg:w="108"/><text x="94.8459%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (78 samples, 0.03%)</title><rect x="94.6068%" y="341" width="0.0282%" height="15" fill="rgb(218,30,30)" fg:x="261881" fg:w="78"/><text x="94.8568%" y="351.50"></text></g><g><title>core::fmt::write (76 samples, 0.03%)</title><rect x="94.6075%" y="325" width="0.0275%" height="15" fill="rgb(214,67,26)" fg:x="261883" fg:w="76"/><text x="94.8575%" y="335.50"></text></g><g><title>indicatif::style::ProgressStyle::format_bar (163 samples, 0.06%)</title><rect x="94.5865%" y="421" width="0.0589%" height="15" fill="rgb(251,9,53)" fg:x="261825" fg:w="163"/><text x="94.8365%" y="431.50"></text></g><g><title>indicatif::style::ProgressStyle::format_state::{{closure}} (413 samples, 0.15%)</title><rect x="94.4977%" y="437" width="0.1492%" height="15" fill="rgb(228,204,25)" fg:x="261579" fg:w="413"/><text x="94.7477%" y="447.50"></text></g><g><title>regex::re_unicode::Captures::get (28 samples, 0.01%)</title><rect x="94.6505%" y="437" width="0.0101%" height="15" fill="rgb(207,153,8)" fg:x="262002" fg:w="28"/><text x="94.9005%" y="447.50"></text></g><g><title>regex::re_unicode::Regex::capture_locations (37 samples, 0.01%)</title><rect x="94.6653%" y="421" width="0.0134%" height="15" fill="rgb(242,9,16)" fg:x="262043" fg:w="37"/><text x="94.9153%" y="431.50"></text></g><g><title>regex::re_trait::RegularExpression::locations (35 samples, 0.01%)</title><rect x="94.6660%" y="405" width="0.0126%" height="15" fill="rgb(217,211,10)" fg:x="262045" fg:w="35"/><text x="94.9160%" y="415.50"></text></g><g><title>alloc::vec::from_elem (33 samples, 0.01%)</title><rect x="94.6667%" y="389" width="0.0119%" height="15" fill="rgb(219,228,52)" fg:x="262047" fg:w="33"/><text x="94.9167%" y="399.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (33 samples, 0.01%)</title><rect x="94.6667%" y="373" width="0.0119%" height="15" fill="rgb(231,92,29)" fg:x="262047" fg:w="33"/><text x="94.9167%" y="383.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::at (52 samples, 0.02%)</title><rect x="94.7206%" y="261" width="0.0188%" height="15" fill="rgb(232,8,23)" fg:x="262196" fg:w="52"/><text x="94.9706%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (28 samples, 0.01%)</title><rect x="94.7404%" y="261" width="0.0101%" height="15" fill="rgb(216,211,34)" fg:x="262251" fg:w="28"/><text x="94.9904%" y="271.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::has_visited (61 samples, 0.02%)</title><rect x="94.7516%" y="261" width="0.0220%" height="15" fill="rgb(236,151,0)" fg:x="262282" fg:w="61"/><text x="95.0016%" y="271.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (268 samples, 0.10%)</title><rect x="94.6891%" y="293" width="0.0968%" height="15" fill="rgb(209,168,3)" fg:x="262109" fg:w="268"/><text x="94.9391%" y="303.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (247 samples, 0.09%)</title><rect x="94.6967%" y="277" width="0.0892%" height="15" fill="rgb(208,129,28)" fg:x="262130" fg:w="247"/><text x="94.9467%" y="287.50"></text></g><g><title>regex::prog::InstRanges::matches (34 samples, 0.01%)</title><rect x="94.7737%" y="261" width="0.0123%" height="15" fill="rgb(229,78,22)" fg:x="262343" fg:w="34"/><text x="95.0237%" y="271.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (317 samples, 0.11%)</title><rect x="94.6790%" y="405" width="0.1145%" height="15" fill="rgb(228,187,13)" fg:x="262081" fg:w="317"/><text x="94.9290%" y="415.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (316 samples, 0.11%)</title><rect x="94.6794%" y="389" width="0.1142%" height="15" fill="rgb(240,119,24)" fg:x="262082" fg:w="316"/><text x="94.9294%" y="399.50"></text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (304 samples, 0.11%)</title><rect x="94.6837%" y="373" width="0.1098%" height="15" fill="rgb(209,194,42)" fg:x="262094" fg:w="304"/><text x="94.9337%" y="383.50"></text></g><g><title>regex::exec::ExecNoSync::exec_nfa (302 samples, 0.11%)</title><rect x="94.6844%" y="357" width="0.1091%" height="15" fill="rgb(247,200,46)" fg:x="262096" fg:w="302"/><text x="94.9344%" y="367.50"></text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (298 samples, 0.11%)</title><rect x="94.6859%" y="341" width="0.1077%" height="15" fill="rgb(218,76,16)" fg:x="262100" fg:w="298"/><text x="94.9359%" y="351.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (297 samples, 0.11%)</title><rect x="94.6862%" y="325" width="0.1073%" height="15" fill="rgb(225,21,48)" fg:x="262101" fg:w="297"/><text x="94.9362%" y="335.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (290 samples, 0.10%)</title><rect x="94.6888%" y="309" width="0.1048%" height="15" fill="rgb(239,223,50)" fg:x="262108" fg:w="290"/><text x="94.9388%" y="319.50"></text></g><g><title>&lt;F as regex::re_unicode::Replacer&gt;::replace_append (1,061 samples, 0.38%)</title><rect x="94.4131%" y="469" width="0.3833%" height="15" fill="rgb(244,45,21)" fg:x="261345" fg:w="1061"/><text x="94.6631%" y="479.50"></text></g><g><title>indicatif::utils::expand_template::{{closure}} (1,018 samples, 0.37%)</title><rect x="94.4287%" y="453" width="0.3678%" height="15" fill="rgb(232,33,43)" fg:x="261388" fg:w="1018"/><text x="94.6787%" y="463.50"></text></g><g><title>regex::re_unicode::Regex::captures (376 samples, 0.14%)</title><rect x="94.6606%" y="437" width="0.1358%" height="15" fill="rgb(209,8,3)" fg:x="262030" fg:w="376"/><text x="94.9106%" y="447.50"></text></g><g><title>regex::re_unicode::Regex::captures_read_at (326 samples, 0.12%)</title><rect x="94.6787%" y="421" width="0.1178%" height="15" fill="rgb(214,25,53)" fg:x="262080" fg:w="326"/><text x="94.9287%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (44 samples, 0.02%)</title><rect x="94.8354%" y="277" width="0.0159%" height="15" fill="rgb(254,186,54)" fg:x="262514" fg:w="44"/><text x="95.0854%" y="287.50"></text></g><g><title>&lt;regex::input::CharInput as regex::input::Input&gt;::at (28 samples, 0.01%)</title><rect x="94.8875%" y="261" width="0.0101%" height="15" fill="rgb(208,174,49)" fg:x="262658" fg:w="28"/><text x="95.1375%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (44 samples, 0.02%)</title><rect x="94.8990%" y="261" width="0.0159%" height="15" fill="rgb(233,191,51)" fg:x="262690" fg:w="44"/><text x="95.1490%" y="271.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::has_visited (144 samples, 0.05%)</title><rect x="94.9156%" y="261" width="0.0520%" height="15" fill="rgb(222,134,10)" fg:x="262736" fg:w="144"/><text x="95.1656%" y="271.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (440 samples, 0.16%)</title><rect x="94.8149%" y="293" width="0.1590%" height="15" fill="rgb(230,226,20)" fg:x="262457" fg:w="440"/><text x="95.0649%" y="303.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (324 samples, 0.12%)</title><rect x="94.8568%" y="277" width="0.1170%" height="15" fill="rgb(251,111,25)" fg:x="262573" fg:w="324"/><text x="95.1068%" y="287.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (485 samples, 0.18%)</title><rect x="94.8018%" y="405" width="0.1752%" height="15" fill="rgb(224,40,46)" fg:x="262421" fg:w="485"/><text x="95.0518%" y="415.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (485 samples, 0.18%)</title><rect x="94.8018%" y="389" width="0.1752%" height="15" fill="rgb(236,108,47)" fg:x="262421" fg:w="485"/><text x="95.0518%" y="399.50"></text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (475 samples, 0.17%)</title><rect x="94.8055%" y="373" width="0.1716%" height="15" fill="rgb(234,93,0)" fg:x="262431" fg:w="475"/><text x="95.0555%" y="383.50"></text></g><g><title>regex::exec::ExecNoSync::exec_nfa (474 samples, 0.17%)</title><rect x="94.8058%" y="357" width="0.1712%" height="15" fill="rgb(224,213,32)" fg:x="262432" fg:w="474"/><text x="95.0558%" y="367.50"></text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (469 samples, 0.17%)</title><rect x="94.8076%" y="341" width="0.1694%" height="15" fill="rgb(251,11,48)" fg:x="262437" fg:w="469"/><text x="95.0576%" y="351.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (469 samples, 0.17%)</title><rect x="94.8076%" y="325" width="0.1694%" height="15" fill="rgb(236,173,5)" fg:x="262437" fg:w="469"/><text x="95.0576%" y="335.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (461 samples, 0.17%)</title><rect x="94.8105%" y="309" width="0.1665%" height="15" fill="rgb(230,95,12)" fg:x="262445" fg:w="461"/><text x="95.0605%" y="319.50"></text></g><g><title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (512 samples, 0.18%)</title><rect x="94.8004%" y="421" width="0.1850%" height="15" fill="rgb(232,209,1)" fg:x="262417" fg:w="512"/><text x="95.0504%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (539 samples, 0.19%)</title><rect x="94.7964%" y="469" width="0.1947%" height="15" fill="rgb(232,6,1)" fg:x="262406" fg:w="539"/><text x="95.0464%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (539 samples, 0.19%)</title><rect x="94.7964%" y="453" width="0.1947%" height="15" fill="rgb(210,224,50)" fg:x="262406" fg:w="539"/><text x="95.0464%" y="463.50"></text></g><g><title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (529 samples, 0.19%)</title><rect x="94.8000%" y="437" width="0.1911%" height="15" fill="rgb(228,127,35)" fg:x="262416" fg:w="529"/><text x="95.0500%" y="447.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::backtrack (83 samples, 0.03%)</title><rect x="95.0023%" y="261" width="0.0300%" height="15" fill="rgb(245,102,45)" fg:x="262976" fg:w="83"/><text x="95.2523%" y="271.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::step (66 samples, 0.02%)</title><rect x="95.0085%" y="245" width="0.0238%" height="15" fill="rgb(214,1,49)" fg:x="262993" fg:w="66"/><text x="95.2585%" y="255.50"></text></g><g><title>&lt;regex::exec::ExecNoSyncStr as regex::re_trait::RegularExpression&gt;::captures_read_at (99 samples, 0.04%)</title><rect x="94.9977%" y="373" width="0.0358%" height="15" fill="rgb(226,163,40)" fg:x="262963" fg:w="99"/><text x="95.2477%" y="383.50"></text></g><g><title>&lt;regex::exec::ExecNoSync as regex::re_trait::RegularExpression&gt;::captures_read_at (99 samples, 0.04%)</title><rect x="94.9977%" y="357" width="0.0358%" height="15" fill="rgb(239,212,28)" fg:x="262963" fg:w="99"/><text x="95.2477%" y="367.50"></text></g><g><title>regex::exec::ExecNoSync::captures_nfa_type (93 samples, 0.03%)</title><rect x="94.9998%" y="341" width="0.0336%" height="15" fill="rgb(220,20,13)" fg:x="262969" fg:w="93"/><text x="95.2498%" y="351.50"></text></g><g><title>regex::exec::ExecNoSync::exec_nfa (93 samples, 0.03%)</title><rect x="94.9998%" y="325" width="0.0336%" height="15" fill="rgb(210,164,35)" fg:x="262969" fg:w="93"/><text x="95.2498%" y="335.50"></text></g><g><title>regex::exec::ExecNoSync::exec_backtrack (92 samples, 0.03%)</title><rect x="95.0002%" y="309" width="0.0332%" height="15" fill="rgb(248,109,41)" fg:x="262970" fg:w="92"/><text x="95.2502%" y="319.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec (92 samples, 0.03%)</title><rect x="95.0002%" y="293" width="0.0332%" height="15" fill="rgb(238,23,50)" fg:x="262970" fg:w="92"/><text x="95.2502%" y="303.50"></text></g><g><title>regex::backtrack::Bounded&lt;I&gt;::exec_ (89 samples, 0.03%)</title><rect x="95.0013%" y="277" width="0.0322%" height="15" fill="rgb(211,48,49)" fg:x="262973" fg:w="89"/><text x="95.2513%" y="287.50"></text></g><g><title>&lt;regex::re_trait::CaptureMatches&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (114 samples, 0.04%)</title><rect x="94.9962%" y="389" width="0.0412%" height="15" fill="rgb(223,36,21)" fg:x="262959" fg:w="114"/><text x="95.2462%" y="399.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (121 samples, 0.04%)</title><rect x="94.9951%" y="469" width="0.0437%" height="15" fill="rgb(207,123,46)" fg:x="262956" fg:w="121"/><text x="95.2451%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (121 samples, 0.04%)</title><rect x="94.9951%" y="453" width="0.0437%" height="15" fill="rgb(240,218,32)" fg:x="262956" fg:w="121"/><text x="95.2451%" y="463.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (120 samples, 0.04%)</title><rect x="94.9955%" y="437" width="0.0434%" height="15" fill="rgb(252,5,43)" fg:x="262957" fg:w="120"/><text x="95.2455%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (120 samples, 0.04%)</title><rect x="94.9955%" y="421" width="0.0434%" height="15" fill="rgb(252,84,19)" fg:x="262957" fg:w="120"/><text x="95.2455%" y="431.50"></text></g><g><title>&lt;regex::re_unicode::CaptureMatches as core::iter::traits::iterator::Iterator&gt;::next (118 samples, 0.04%)</title><rect x="94.9962%" y="405" width="0.0426%" height="15" fill="rgb(243,152,39)" fg:x="262959" fg:w="118"/><text x="95.2462%" y="415.50"></text></g><g><title>indicatif::state::ProgressState::draw (1,828 samples, 0.66%)</title><rect x="94.3933%" y="549" width="0.6604%" height="15" fill="rgb(234,160,15)" fg:x="261290" fg:w="1828"/><text x="94.6433%" y="559.50"></text></g><g><title>indicatif::style::ProgressStyle::format_state (1,814 samples, 0.66%)</title><rect x="94.3983%" y="533" width="0.6553%" height="15" fill="rgb(237,34,20)" fg:x="261304" fg:w="1814"/><text x="94.6483%" y="543.50"></text></g><g><title>indicatif::utils::expand_template (1,781 samples, 0.64%)</title><rect x="94.4102%" y="517" width="0.6434%" height="15" fill="rgb(229,97,13)" fg:x="261337" fg:w="1781"/><text x="94.6602%" y="527.50"></text></g><g><title>regex::re_unicode::Regex::replace_all (1,780 samples, 0.64%)</title><rect x="94.4106%" y="501" width="0.6430%" height="15" fill="rgb(234,71,50)" fg:x="261338" fg:w="1780"/><text x="94.6606%" y="511.50"></text></g><g><title>regex::re_unicode::Regex::replacen (1,780 samples, 0.64%)</title><rect x="94.4106%" y="485" width="0.6430%" height="15" fill="rgb(253,155,4)" fg:x="261338" fg:w="1780"/><text x="94.6606%" y="495.50"></text></g><g><title>indicatif::state::ProgressState::update_and_draw (1,840 samples, 0.66%)</title><rect x="94.3933%" y="565" width="0.6647%" height="15" fill="rgb(222,185,37)" fg:x="261290" fg:w="1840"/><text x="94.6433%" y="575.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::set_position (1,854 samples, 0.67%)</title><rect x="94.3929%" y="597" width="0.6698%" height="15" fill="rgb(251,177,13)" fg:x="261289" fg:w="1854"/><text x="94.6429%" y="607.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::update_and_draw (1,854 samples, 0.67%)</title><rect x="94.3929%" y="581" width="0.6698%" height="15" fill="rgb(250,179,40)" fg:x="261289" fg:w="1854"/><text x="94.6429%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (35 samples, 0.01%)</title><rect x="95.0645%" y="565" width="0.0126%" height="15" fill="rgb(242,44,2)" fg:x="263148" fg:w="35"/><text x="95.3145%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (35 samples, 0.01%)</title><rect x="95.0645%" y="549" width="0.0126%" height="15" fill="rgb(216,177,13)" fg:x="263148" fg:w="35"/><text x="95.3145%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (30 samples, 0.01%)</title><rect x="95.0663%" y="533" width="0.0108%" height="15" fill="rgb(216,106,43)" fg:x="263153" fg:w="30"/><text x="95.3163%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (30 samples, 0.01%)</title><rect x="95.0663%" y="517" width="0.0108%" height="15" fill="rgb(216,183,2)" fg:x="263153" fg:w="30"/><text x="95.3163%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (30 samples, 0.01%)</title><rect x="95.0663%" y="501" width="0.0108%" height="15" fill="rgb(249,75,3)" fg:x="263153" fg:w="30"/><text x="95.3163%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (30 samples, 0.01%)</title><rect x="95.0663%" y="485" width="0.0108%" height="15" fill="rgb(219,67,39)" fg:x="263153" fg:w="30"/><text x="95.3163%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (30 samples, 0.01%)</title><rect x="95.0663%" y="469" width="0.0108%" height="15" fill="rgb(253,228,2)" fg:x="263153" fg:w="30"/><text x="95.3163%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (30 samples, 0.01%)</title><rect x="95.0663%" y="453" width="0.0108%" height="15" fill="rgb(235,138,27)" fg:x="263153" fg:w="30"/><text x="95.3163%" y="463.50"></text></g><g><title>_start (251,293 samples, 90.78%)</title><rect x="4.3037%" y="789" width="90.7818%" height="15" fill="rgb(236,97,51)" fg:x="11913" fg:w="251293"/><text x="4.5537%" y="799.50">_start</text></g><g><title>__libc_start_main (251,293 samples, 90.78%)</title><rect x="4.3037%" y="773" width="90.7818%" height="15" fill="rgb(240,80,30)" fg:x="11913" fg:w="251293"/><text x="4.5537%" y="783.50">__libc_start_main</text></g><g><title>main (251,293 samples, 90.78%)</title><rect x="4.3037%" y="757" width="90.7818%" height="15" fill="rgb(230,178,19)" fg:x="11913" fg:w="251293"/><text x="4.5537%" y="767.50">main</text></g><g><title>std::rt::lang_start_internal (251,293 samples, 90.78%)</title><rect x="4.3037%" y="741" width="90.7818%" height="15" fill="rgb(210,190,27)" fg:x="11913" fg:w="251293"/><text x="4.5537%" y="751.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (251,293 samples, 90.78%)</title><rect x="4.3037%" y="725" width="90.7818%" height="15" fill="rgb(222,107,31)" fg:x="11913" fg:w="251293"/><text x="4.5537%" y="735.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (251,293 samples, 90.78%)</title><rect x="4.3037%" y="709" width="90.7818%" height="15" fill="rgb(216,127,34)" fg:x="11913" fg:w="251293"/><text x="4.5537%" y="719.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (251,293 samples, 90.78%)</title><rect x="4.3037%" y="693" width="90.7818%" height="15" fill="rgb(234,116,52)" fg:x="11913" fg:w="251293"/><text x="4.5537%" y="703.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (251,293 samples, 90.78%)</title><rect x="4.3037%" y="677" width="90.7818%" height="15" fill="rgb(222,124,15)" fg:x="11913" fg:w="251293"/><text x="4.5537%" y="687.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (251,293 samples, 90.78%)</title><rect x="4.3037%" y="661" width="90.7818%" height="15" fill="rgb(231,179,28)" fg:x="11913" fg:w="251293"/><text x="4.5537%" y="671.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (251,293 samples, 90.78%)</title><rect x="4.3037%" y="645" width="90.7818%" height="15" fill="rgb(226,93,45)" fg:x="11913" fg:w="251293"/><text x="4.5537%" y="655.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (251,293 samples, 90.78%)</title><rect x="4.3037%" y="629" width="90.7818%" height="15" fill="rgb(215,8,51)" fg:x="11913" fg:w="251293"/><text x="4.5537%" y="639.50">core::ops::function::FnOnce::call_once</text></g><g><title>hprof_slurp::main (251,293 samples, 90.78%)</title><rect x="4.3037%" y="613" width="90.7818%" height="15" fill="rgb(223,106,5)" fg:x="11913" fg:w="251293"/><text x="4.5537%" y="623.50">hprof_slurp::main</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (63 samples, 0.02%)</title><rect x="95.0627%" y="597" width="0.0228%" height="15" fill="rgb(250,191,5)" fg:x="263143" fg:w="63"/><text x="95.3127%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (63 samples, 0.02%)</title><rect x="95.0627%" y="581" width="0.0228%" height="15" fill="rgb(242,132,44)" fg:x="263143" fg:w="63"/><text x="95.3127%" y="591.50"></text></g><g><title>asm_exc_page_fault (13,415 samples, 4.85%)</title><rect x="95.0854%" y="789" width="4.8463%" height="15" fill="rgb(251,152,29)" fg:x="263206" fg:w="13415"/><text x="95.3354%" y="799.50">asm_ex..</text></g><g><title>asm_sysvec_call_function_single (48 samples, 0.02%)</title><rect x="99.9357%" y="789" width="0.0173%" height="15" fill="rgb(218,179,5)" fg:x="276632" fg:w="48"/><text x="100.1857%" y="799.50"></text></g><g><title>copy_page_to_iter (55 samples, 0.02%)</title><rect x="99.9639%" y="645" width="0.0199%" height="15" fill="rgb(227,67,19)" fg:x="276710" fg:w="55"/><text x="100.2139%" y="655.50"></text></g><g><title>copy_page_to_iter_iovec (55 samples, 0.02%)</title><rect x="99.9639%" y="629" width="0.0199%" height="15" fill="rgb(233,119,31)" fg:x="276710" fg:w="55"/><text x="100.2139%" y="639.50"></text></g><g><title>copy_user_enhanced_fast_string (35 samples, 0.01%)</title><rect x="99.9711%" y="613" width="0.0126%" height="15" fill="rgb(241,120,22)" fg:x="276730" fg:w="35"/><text x="100.2211%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (103 samples, 0.04%)</title><rect x="99.9538%" y="789" width="0.0372%" height="15" fill="rgb(224,102,30)" fg:x="276682" fg:w="103"/><text x="100.2038%" y="799.50"></text></g><g><title>do_syscall_64 (103 samples, 0.04%)</title><rect x="99.9538%" y="773" width="0.0372%" height="15" fill="rgb(210,164,37)" fg:x="276682" fg:w="103"/><text x="100.2038%" y="783.50"></text></g><g><title>__x64_sys_read (76 samples, 0.03%)</title><rect x="99.9635%" y="757" width="0.0275%" height="15" fill="rgb(226,191,16)" fg:x="276709" fg:w="76"/><text x="100.2135%" y="767.50"></text></g><g><title>ksys_read (76 samples, 0.03%)</title><rect x="99.9635%" y="741" width="0.0275%" height="15" fill="rgb(214,40,45)" fg:x="276709" fg:w="76"/><text x="100.2135%" y="751.50"></text></g><g><title>vfs_read (76 samples, 0.03%)</title><rect x="99.9635%" y="725" width="0.0275%" height="15" fill="rgb(244,29,26)" fg:x="276709" fg:w="76"/><text x="100.2135%" y="735.50"></text></g><g><title>new_sync_read (76 samples, 0.03%)</title><rect x="99.9635%" y="709" width="0.0275%" height="15" fill="rgb(216,16,5)" fg:x="276709" fg:w="76"/><text x="100.2135%" y="719.50"></text></g><g><title>ext4_file_read_iter (76 samples, 0.03%)</title><rect x="99.9635%" y="693" width="0.0275%" height="15" fill="rgb(249,76,35)" fg:x="276709" fg:w="76"/><text x="100.2135%" y="703.50"></text></g><g><title>generic_file_read_iter (76 samples, 0.03%)</title><rect x="99.9635%" y="677" width="0.0275%" height="15" fill="rgb(207,11,44)" fg:x="276709" fg:w="76"/><text x="100.2135%" y="687.50"></text></g><g><title>generic_file_buffered_read (76 samples, 0.03%)</title><rect x="99.9635%" y="661" width="0.0275%" height="15" fill="rgb(228,190,49)" fg:x="276709" fg:w="76"/><text x="100.2135%" y="671.50"></text></g><g><title>hprof-slurp (276,805 samples, 100.00%)</title><rect x="0.0000%" y="805" width="99.9982%" height="15" fill="rgb(214,173,12)" fg:x="0" fg:w="276805"/><text x="0.2500%" y="815.50">hprof-slurp</text></g><g><title>all (276,810 samples, 100%)</title><rect x="0.0000%" y="821" width="100.0000%" height="15" fill="rgb(218,26,35)" fg:x="0" fg:w="276810"/><text x="0.2500%" y="831.50"></text></g></svg></svg>