<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="949.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="250093"><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (1,089 samples, 0.44%)</title><rect x="0.0000%" y="869" width="0.4354%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1089"/><text x="0.2500%" y="879.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,186 samples, 0.47%)</title><rect x="0.4354%" y="869" width="0.4742%" height="15" fill="rgb(217,0,24)" fg:x="1089" fg:w="1186"/><text x="0.6854%" y="879.50"></text></g><g><title>__memcpy_avx_unaligned_erms (1,161 samples, 0.46%)</title><rect x="0.9153%" y="869" width="0.4642%" height="15" fill="rgb(221,193,54)" fg:x="2289" fg:w="1161"/><text x="1.1653%" y="879.50"></text></g><g><title>[anon] (3,491 samples, 1.40%)</title><rect x="0.0000%" y="885" width="1.3959%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="3491"/><text x="0.2500%" y="895.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (1,106 samples, 0.44%)</title><rect x="1.3959%" y="869" width="0.4422%" height="15" fill="rgb(208,68,35)" fg:x="3491" fg:w="1106"/><text x="1.6459%" y="879.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (706 samples, 0.28%)</title><rect x="2.3631%" y="853" width="0.2823%" height="15" fill="rgb(232,128,0)" fg:x="5910" fg:w="706"/><text x="2.6131%" y="863.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record (50 samples, 0.02%)</title><rect x="2.6254%" y="837" width="0.0200%" height="15" fill="rgb(207,160,47)" fg:x="6566" fg:w="50"/><text x="2.8754%" y="847.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (26 samples, 0.01%)</title><rect x="2.6350%" y="821" width="0.0104%" height="15" fill="rgb(228,23,34)" fg:x="6590" fg:w="26"/><text x="2.8850%" y="831.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (30 samples, 0.01%)</title><rect x="2.6454%" y="837" width="0.0120%" height="15" fill="rgb(218,30,26)" fg:x="6616" fg:w="30"/><text x="2.8954%" y="847.50"></text></g><g><title>core::ops::function::FnMut::call_mut (30 samples, 0.01%)</title><rect x="2.6454%" y="821" width="0.0120%" height="15" fill="rgb(220,122,19)" fg:x="6616" fg:w="30"/><text x="2.8954%" y="831.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (30 samples, 0.01%)</title><rect x="2.6454%" y="805" width="0.0120%" height="15" fill="rgb(250,228,42)" fg:x="6616" fg:w="30"/><text x="2.8954%" y="815.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,055 samples, 0.82%)</title><rect x="1.8381%" y="869" width="0.8217%" height="15" fill="rgb(240,193,28)" fg:x="4597" fg:w="2055"/><text x="2.0881%" y="879.50"></text></g><g><title>nom::multi::count::{{closure}} (36 samples, 0.01%)</title><rect x="2.6454%" y="853" width="0.0144%" height="15" fill="rgb(216,20,37)" fg:x="6616" fg:w="36"/><text x="2.8954%" y="863.50"></text></g><g><title>__memcpy_avx_unaligned_erms (485 samples, 0.19%)</title><rect x="2.6622%" y="869" width="0.1939%" height="15" fill="rgb(206,188,39)" fg:x="6658" fg:w="485"/><text x="2.9122%" y="879.50"></text></g><g><title>_int_malloc (39 samples, 0.02%)</title><rect x="2.8569%" y="869" width="0.0156%" height="15" fill="rgb(217,207,13)" fg:x="7145" fg:w="39"/><text x="3.1069%" y="879.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (156 samples, 0.06%)</title><rect x="2.8765%" y="869" width="0.0624%" height="15" fill="rgb(231,73,38)" fg:x="7194" fg:w="156"/><text x="3.1265%" y="879.50"></text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (1,682 samples, 0.67%)</title><rect x="2.9389%" y="869" width="0.6725%" height="15" fill="rgb(225,20,46)" fg:x="7350" fg:w="1682"/><text x="3.1889%" y="879.50"></text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (1,682 samples, 0.67%)</title><rect x="2.9389%" y="853" width="0.6725%" height="15" fill="rgb(210,31,41)" fg:x="7350" fg:w="1682"/><text x="3.1889%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (530 samples, 0.21%)</title><rect x="3.3995%" y="837" width="0.2119%" height="15" fill="rgb(221,200,47)" fg:x="8502" fg:w="530"/><text x="3.6495%" y="847.50"></text></g><g><title>core::ptr::write (530 samples, 0.21%)</title><rect x="3.3995%" y="821" width="0.2119%" height="15" fill="rgb(226,26,5)" fg:x="8502" fg:w="530"/><text x="3.6495%" y="831.50"></text></g><g><title>[unknown] (5,555 samples, 2.22%)</title><rect x="1.3959%" y="885" width="2.2212%" height="15" fill="rgb(249,33,26)" fg:x="3491" fg:w="5555"/><text x="1.6459%" y="895.50">[..</text></g><g><title>alloc_pages_vma (26 samples, 0.01%)</title><rect x="6.6995%" y="469" width="0.0104%" height="15" fill="rgb(235,183,28)" fg:x="16755" fg:w="26"/><text x="6.9495%" y="479.50"></text></g><g><title>handle_pte_fault (51 samples, 0.02%)</title><rect x="6.6987%" y="501" width="0.0204%" height="15" fill="rgb(221,5,38)" fg:x="16753" fg:w="51"/><text x="6.9487%" y="511.50"></text></g><g><title>do_anonymous_page (51 samples, 0.02%)</title><rect x="6.6987%" y="485" width="0.0204%" height="15" fill="rgb(247,18,42)" fg:x="16753" fg:w="51"/><text x="6.9487%" y="495.50"></text></g><g><title>__handle_mm_fault (55 samples, 0.02%)</title><rect x="6.6975%" y="517" width="0.0220%" height="15" fill="rgb(241,131,45)" fg:x="16750" fg:w="55"/><text x="6.9475%" y="527.50"></text></g><g><title>do_user_addr_fault (62 samples, 0.02%)</title><rect x="6.6951%" y="549" width="0.0248%" height="15" fill="rgb(249,31,29)" fg:x="16744" fg:w="62"/><text x="6.9451%" y="559.50"></text></g><g><title>handle_mm_fault (60 samples, 0.02%)</title><rect x="6.6959%" y="533" width="0.0240%" height="15" fill="rgb(225,111,53)" fg:x="16746" fg:w="60"/><text x="6.9459%" y="543.50"></text></g><g><title>asm_exc_page_fault (68 samples, 0.03%)</title><rect x="6.6939%" y="581" width="0.0272%" height="15" fill="rgb(238,160,17)" fg:x="16741" fg:w="68"/><text x="6.9439%" y="591.50"></text></g><g><title>exc_page_fault (67 samples, 0.03%)</title><rect x="6.6943%" y="565" width="0.0268%" height="15" fill="rgb(214,148,48)" fg:x="16742" fg:w="67"/><text x="6.9443%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7,782 samples, 3.11%)</title><rect x="3.6175%" y="661" width="3.1116%" height="15" fill="rgb(232,36,49)" fg:x="9047" fg:w="7782"/><text x="3.8675%" y="671.50">all..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7,782 samples, 3.11%)</title><rect x="3.6175%" y="645" width="3.1116%" height="15" fill="rgb(209,103,24)" fg:x="9047" fg:w="7782"/><text x="3.8675%" y="655.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7,782 samples, 3.11%)</title><rect x="3.6175%" y="629" width="3.1116%" height="15" fill="rgb(229,88,8)" fg:x="9047" fg:w="7782"/><text x="3.8675%" y="639.50">all..</text></g><g><title>core::intrinsics::copy_nonoverlapping (7,780 samples, 3.11%)</title><rect x="3.6183%" y="613" width="3.1108%" height="15" fill="rgb(213,181,19)" fg:x="9049" fg:w="7780"/><text x="3.8683%" y="623.50">cor..</text></g><g><title>__memcpy_avx_unaligned_erms (7,780 samples, 3.11%)</title><rect x="3.6183%" y="597" width="3.1108%" height="15" fill="rgb(254,191,54)" fg:x="9049" fg:w="7780"/><text x="3.8683%" y="607.50">__m..</text></g><g><title>__mod_memcg_lruvec_state (37 samples, 0.01%)</title><rect x="6.8371%" y="389" width="0.0148%" height="15" fill="rgb(241,83,37)" fg:x="17099" fg:w="37"/><text x="7.0871%" y="399.50"></text></g><g><title>__mod_lruvec_state (61 samples, 0.02%)</title><rect x="6.8323%" y="405" width="0.0244%" height="15" fill="rgb(233,36,39)" fg:x="17087" fg:w="61"/><text x="7.0823%" y="415.50"></text></g><g><title>__free_one_page (241 samples, 0.10%)</title><rect x="6.9490%" y="357" width="0.0964%" height="15" fill="rgb(226,3,54)" fg:x="17379" fg:w="241"/><text x="7.1990%" y="367.50"></text></g><g><title>free_unref_page_list (452 samples, 0.18%)</title><rect x="6.8682%" y="405" width="0.1807%" height="15" fill="rgb(245,192,40)" fg:x="17177" fg:w="452"/><text x="7.1182%" y="415.50"></text></g><g><title>free_unref_page_commit (377 samples, 0.15%)</title><rect x="6.8982%" y="389" width="0.1507%" height="15" fill="rgb(238,167,29)" fg:x="17252" fg:w="377"/><text x="7.1482%" y="399.50"></text></g><g><title>free_pcppages_bulk (341 samples, 0.14%)</title><rect x="6.9126%" y="373" width="0.1363%" height="15" fill="rgb(232,182,51)" fg:x="17288" fg:w="341"/><text x="7.1626%" y="383.50"></text></g><g><title>mem_cgroup_uncharge_list (59 samples, 0.02%)</title><rect x="7.0490%" y="405" width="0.0236%" height="15" fill="rgb(231,60,39)" fg:x="17629" fg:w="59"/><text x="7.2990%" y="415.50"></text></g><g><title>uncharge_page (40 samples, 0.02%)</title><rect x="7.0566%" y="389" width="0.0160%" height="15" fill="rgb(208,69,12)" fg:x="17648" fg:w="40"/><text x="7.3066%" y="399.50"></text></g><g><title>tlb_finish_mmu (852 samples, 0.34%)</title><rect x="6.7343%" y="453" width="0.3407%" height="15" fill="rgb(235,93,37)" fg:x="16842" fg:w="852"/><text x="6.9843%" y="463.50"></text></g><g><title>free_pages_and_swap_cache (846 samples, 0.34%)</title><rect x="6.7367%" y="437" width="0.3383%" height="15" fill="rgb(213,116,39)" fg:x="16848" fg:w="846"/><text x="6.9867%" y="447.50"></text></g><g><title>release_pages (757 samples, 0.30%)</title><rect x="6.7723%" y="421" width="0.3027%" height="15" fill="rgb(222,207,29)" fg:x="16937" fg:w="757"/><text x="7.0223%" y="431.50"></text></g><g><title>__mod_memcg_state.part.0 (34 samples, 0.01%)</title><rect x="7.5896%" y="309" width="0.0136%" height="15" fill="rgb(206,96,30)" fg:x="18981" fg:w="34"/><text x="7.8396%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (132 samples, 0.05%)</title><rect x="7.5540%" y="325" width="0.0528%" height="15" fill="rgb(218,138,4)" fg:x="18892" fg:w="132"/><text x="7.8040%" y="335.50"></text></g><g><title>__mod_lruvec_state (215 samples, 0.09%)</title><rect x="7.5376%" y="341" width="0.0860%" height="15" fill="rgb(250,191,14)" fg:x="18851" fg:w="215"/><text x="7.7876%" y="351.50"></text></g><g><title>__mod_lruvec_page_state (283 samples, 0.11%)</title><rect x="7.5220%" y="357" width="0.1132%" height="15" fill="rgb(239,60,40)" fg:x="18812" fg:w="283"/><text x="7.7720%" y="367.50"></text></g><g><title>lock_page_memcg (43 samples, 0.02%)</title><rect x="7.6396%" y="357" width="0.0172%" height="15" fill="rgb(206,27,48)" fg:x="19106" fg:w="43"/><text x="7.8896%" y="367.50"></text></g><g><title>page_remove_rmap (560 samples, 0.22%)</title><rect x="7.4456%" y="373" width="0.2239%" height="15" fill="rgb(225,35,8)" fg:x="18621" fg:w="560"/><text x="7.6956%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (62 samples, 0.02%)</title><rect x="7.8275%" y="309" width="0.0248%" height="15" fill="rgb(250,213,24)" fg:x="19576" fg:w="62"/><text x="8.0775%" y="319.50"></text></g><g><title>__mod_lruvec_state (104 samples, 0.04%)</title><rect x="7.8215%" y="325" width="0.0416%" height="15" fill="rgb(247,123,22)" fg:x="19561" fg:w="104"/><text x="8.0715%" y="335.50"></text></g><g><title>__free_one_page (359 samples, 0.14%)</title><rect x="8.0030%" y="277" width="0.1435%" height="15" fill="rgb(231,138,38)" fg:x="20015" fg:w="359"/><text x="8.2530%" y="287.50"></text></g><g><title>free_unref_page_list (667 samples, 0.27%)</title><rect x="7.8839%" y="325" width="0.2667%" height="15" fill="rgb(231,145,46)" fg:x="19717" fg:w="667"/><text x="8.1339%" y="335.50"></text></g><g><title>free_unref_page_commit (558 samples, 0.22%)</title><rect x="7.9275%" y="309" width="0.2231%" height="15" fill="rgb(251,118,11)" fg:x="19826" fg:w="558"/><text x="8.1775%" y="319.50"></text></g><g><title>free_pcppages_bulk (509 samples, 0.20%)</title><rect x="7.9470%" y="293" width="0.2035%" height="15" fill="rgb(217,147,25)" fg:x="19875" fg:w="509"/><text x="8.1970%" y="303.50"></text></g><g><title>mem_cgroup_uncharge_list (63 samples, 0.03%)</title><rect x="8.1518%" y="325" width="0.0252%" height="15" fill="rgb(247,81,37)" fg:x="20387" fg:w="63"/><text x="8.4018%" y="335.50"></text></g><g><title>uncharge_page (48 samples, 0.02%)</title><rect x="8.1578%" y="309" width="0.0192%" height="15" fill="rgb(209,12,38)" fg:x="20402" fg:w="48"/><text x="8.4078%" y="319.50"></text></g><g><title>tlb_flush_mmu (1,287 samples, 0.51%)</title><rect x="7.6695%" y="373" width="0.5146%" height="15" fill="rgb(227,1,9)" fg:x="19181" fg:w="1287"/><text x="7.9195%" y="383.50"></text></g><g><title>free_pages_and_swap_cache (1,287 samples, 0.51%)</title><rect x="7.6695%" y="357" width="0.5146%" height="15" fill="rgb(248,47,43)" fg:x="19181" fg:w="1287"/><text x="7.9195%" y="367.50"></text></g><g><title>release_pages (1,130 samples, 0.45%)</title><rect x="7.7323%" y="341" width="0.4518%" height="15" fill="rgb(221,10,30)" fg:x="19338" fg:w="1130"/><text x="7.9823%" y="351.50"></text></g><g><title>__vm_munmap (3,694 samples, 1.48%)</title><rect x="6.7291%" y="501" width="1.4771%" height="15" fill="rgb(210,229,1)" fg:x="16829" fg:w="3694"/><text x="6.9791%" y="511.50"></text></g><g><title>__do_munmap (3,694 samples, 1.48%)</title><rect x="6.7291%" y="485" width="1.4771%" height="15" fill="rgb(222,148,37)" fg:x="16829" fg:w="3694"/><text x="6.9791%" y="495.50"></text></g><g><title>unmap_region (3,689 samples, 1.48%)</title><rect x="6.7311%" y="469" width="1.4751%" height="15" fill="rgb(234,67,33)" fg:x="16834" fg:w="3689"/><text x="6.9811%" y="479.50"></text></g><g><title>unmap_vmas (2,829 samples, 1.13%)</title><rect x="7.0750%" y="453" width="1.1312%" height="15" fill="rgb(247,98,35)" fg:x="17694" fg:w="2829"/><text x="7.3250%" y="463.50"></text></g><g><title>unmap_single_vma (2,829 samples, 1.13%)</title><rect x="7.0750%" y="437" width="1.1312%" height="15" fill="rgb(247,138,52)" fg:x="17694" fg:w="2829"/><text x="7.3250%" y="447.50"></text></g><g><title>unmap_page_range (2,829 samples, 1.13%)</title><rect x="7.0750%" y="421" width="1.1312%" height="15" fill="rgb(213,79,30)" fg:x="17694" fg:w="2829"/><text x="7.3250%" y="431.50"></text></g><g><title>zap_pmd_range.isra.0 (2,829 samples, 1.13%)</title><rect x="7.0750%" y="405" width="1.1312%" height="15" fill="rgb(246,177,23)" fg:x="17694" fg:w="2829"/><text x="7.3250%" y="415.50"></text></g><g><title>zap_pte_range (2,788 samples, 1.11%)</title><rect x="7.0914%" y="389" width="1.1148%" height="15" fill="rgb(230,62,27)" fg:x="17735" fg:w="2788"/><text x="7.3414%" y="399.50"></text></g><g><title>vm_normal_page (38 samples, 0.02%)</title><rect x="8.1910%" y="373" width="0.0152%" height="15" fill="rgb(216,154,8)" fg:x="20485" fg:w="38"/><text x="8.4410%" y="383.50"></text></g><g><title>__GI___munmap (3,695 samples, 1.48%)</title><rect x="6.7291%" y="565" width="1.4775%" height="15" fill="rgb(244,35,45)" fg:x="16829" fg:w="3695"/><text x="6.9791%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3,695 samples, 1.48%)</title><rect x="6.7291%" y="549" width="1.4775%" height="15" fill="rgb(251,115,12)" fg:x="16829" fg:w="3695"/><text x="6.9791%" y="559.50"></text></g><g><title>do_syscall_64 (3,695 samples, 1.48%)</title><rect x="6.7291%" y="533" width="1.4775%" height="15" fill="rgb(240,54,50)" fg:x="16829" fg:w="3695"/><text x="6.9791%" y="543.50"></text></g><g><title>__x64_sys_munmap (3,695 samples, 1.48%)</title><rect x="6.7291%" y="517" width="1.4775%" height="15" fill="rgb(233,84,52)" fg:x="16829" fg:w="3695"/><text x="6.9791%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3,696 samples, 1.48%)</title><rect x="6.7291%" y="661" width="1.4779%" height="15" fill="rgb(207,117,47)" fg:x="16829" fg:w="3696"/><text x="6.9791%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3,696 samples, 1.48%)</title><rect x="6.7291%" y="645" width="1.4779%" height="15" fill="rgb(249,43,39)" fg:x="16829" fg:w="3696"/><text x="6.9791%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3,696 samples, 1.48%)</title><rect x="6.7291%" y="629" width="1.4779%" height="15" fill="rgb(209,38,44)" fg:x="16829" fg:w="3696"/><text x="6.9791%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,696 samples, 1.48%)</title><rect x="6.7291%" y="613" width="1.4779%" height="15" fill="rgb(236,212,23)" fg:x="16829" fg:w="3696"/><text x="6.9791%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (3,696 samples, 1.48%)</title><rect x="6.7291%" y="597" width="1.4779%" height="15" fill="rgb(242,79,21)" fg:x="16829" fg:w="3696"/><text x="6.9791%" y="607.50"></text></g><g><title>__free (3,696 samples, 1.48%)</title><rect x="6.7291%" y="581" width="1.4779%" height="15" fill="rgb(211,96,35)" fg:x="16829" fg:w="3696"/><text x="6.9791%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (28 samples, 0.01%)</title><rect x="8.2097%" y="645" width="0.0112%" height="15" fill="rgb(253,215,40)" fg:x="20532" fg:w="28"/><text x="8.4597%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (28 samples, 0.01%)</title><rect x="8.2097%" y="629" width="0.0112%" height="15" fill="rgb(211,81,21)" fg:x="20532" fg:w="28"/><text x="8.4597%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="8.2097%" y="613" width="0.0112%" height="15" fill="rgb(208,190,38)" fg:x="20532" fg:w="28"/><text x="8.4597%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.01%)</title><rect x="8.2097%" y="597" width="0.0112%" height="15" fill="rgb(235,213,38)" fg:x="20532" fg:w="28"/><text x="8.4597%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.01%)</title><rect x="8.2097%" y="581" width="0.0112%" height="15" fill="rgb(237,122,38)" fg:x="20532" fg:w="28"/><text x="8.4597%" y="591.50"></text></g><g><title>__free (28 samples, 0.01%)</title><rect x="8.2097%" y="565" width="0.0112%" height="15" fill="rgb(244,218,35)" fg:x="20532" fg:w="28"/><text x="8.4597%" y="575.50"></text></g><g><title>__GI___munmap (28 samples, 0.01%)</title><rect x="8.2097%" y="549" width="0.0112%" height="15" fill="rgb(240,68,47)" fg:x="20532" fg:w="28"/><text x="8.4597%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (28 samples, 0.01%)</title><rect x="8.2097%" y="533" width="0.0112%" height="15" fill="rgb(210,16,53)" fg:x="20532" fg:w="28"/><text x="8.4597%" y="543.50"></text></g><g><title>do_syscall_64 (28 samples, 0.01%)</title><rect x="8.2097%" y="517" width="0.0112%" height="15" fill="rgb(235,124,12)" fg:x="20532" fg:w="28"/><text x="8.4597%" y="527.50"></text></g><g><title>__x64_sys_munmap (28 samples, 0.01%)</title><rect x="8.2097%" y="501" width="0.0112%" height="15" fill="rgb(224,169,11)" fg:x="20532" fg:w="28"/><text x="8.4597%" y="511.50"></text></g><g><title>__vm_munmap (28 samples, 0.01%)</title><rect x="8.2097%" y="485" width="0.0112%" height="15" fill="rgb(250,166,2)" fg:x="20532" fg:w="28"/><text x="8.4597%" y="495.50"></text></g><g><title>__do_munmap (28 samples, 0.01%)</title><rect x="8.2097%" y="469" width="0.0112%" height="15" fill="rgb(242,216,29)" fg:x="20532" fg:w="28"/><text x="8.4597%" y="479.50"></text></g><g><title>unmap_region (28 samples, 0.01%)</title><rect x="8.2097%" y="453" width="0.0112%" height="15" fill="rgb(230,116,27)" fg:x="20532" fg:w="28"/><text x="8.4597%" y="463.50"></text></g><g><title>unmap_vmas (27 samples, 0.01%)</title><rect x="8.2101%" y="437" width="0.0108%" height="15" fill="rgb(228,99,48)" fg:x="20533" fg:w="27"/><text x="8.4601%" y="447.50"></text></g><g><title>unmap_single_vma (27 samples, 0.01%)</title><rect x="8.2101%" y="421" width="0.0108%" height="15" fill="rgb(253,11,6)" fg:x="20533" fg:w="27"/><text x="8.4601%" y="431.50"></text></g><g><title>unmap_page_range (27 samples, 0.01%)</title><rect x="8.2101%" y="405" width="0.0108%" height="15" fill="rgb(247,143,39)" fg:x="20533" fg:w="27"/><text x="8.4601%" y="415.50"></text></g><g><title>zap_pmd_range.isra.0 (27 samples, 0.01%)</title><rect x="8.2101%" y="389" width="0.0108%" height="15" fill="rgb(236,97,10)" fg:x="20533" fg:w="27"/><text x="8.4601%" y="399.50"></text></g><g><title>zap_pte_range (27 samples, 0.01%)</title><rect x="8.2101%" y="373" width="0.0108%" height="15" fill="rgb(233,208,19)" fg:x="20533" fg:w="27"/><text x="8.4601%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}}&gt; (44 samples, 0.02%)</title><rect x="8.2069%" y="661" width="0.0176%" height="15" fill="rgb(216,164,2)" fg:x="20525" fg:w="44"/><text x="8.4569%" y="671.50"></text></g><g><title>core::intrinsics::copy (5,837 samples, 2.33%)</title><rect x="8.2245%" y="629" width="2.3339%" height="15" fill="rgb(220,129,5)" fg:x="20569" fg:w="5837"/><text x="8.4745%" y="639.50">c..</text></g><g><title>__memcpy_avx_unaligned_erms (5,837 samples, 2.33%)</title><rect x="8.2245%" y="613" width="2.3339%" height="15" fill="rgb(242,17,10)" fg:x="20569" fg:w="5837"/><text x="8.4745%" y="623.50">_..</text></g><g><title>core::slice::&lt;impl [T]&gt;::rotate_left (5,857 samples, 2.34%)</title><rect x="8.2245%" y="661" width="2.3419%" height="15" fill="rgb(242,107,0)" fg:x="20569" fg:w="5857"/><text x="8.4745%" y="671.50">c..</text></g><g><title>core::slice::rotate::ptr_rotate (5,857 samples, 2.34%)</title><rect x="8.2245%" y="645" width="2.3419%" height="15" fill="rgb(251,28,31)" fg:x="20569" fg:w="5857"/><text x="8.4745%" y="655.50">c..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (9,822 samples, 3.93%)</title><rect x="13.7013%" y="597" width="3.9273%" height="15" fill="rgb(233,223,10)" fg:x="34266" fg:w="9822"/><text x="13.9513%" y="607.50">&lt;cor..</text></g><g><title>__hrtimer_run_queues (35 samples, 0.01%)</title><rect x="31.0145%" y="517" width="0.0140%" height="15" fill="rgb(215,21,27)" fg:x="77565" fg:w="35"/><text x="31.2645%" y="527.50"></text></g><g><title>tick_sched_timer (28 samples, 0.01%)</title><rect x="31.0173%" y="501" width="0.0112%" height="15" fill="rgb(232,23,21)" fg:x="77572" fg:w="28"/><text x="31.2673%" y="511.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (42 samples, 0.02%)</title><rect x="31.0129%" y="581" width="0.0168%" height="15" fill="rgb(244,5,23)" fg:x="77561" fg:w="42"/><text x="31.2629%" y="591.50"></text></g><g><title>sysvec_apic_timer_interrupt (42 samples, 0.02%)</title><rect x="31.0129%" y="565" width="0.0168%" height="15" fill="rgb(226,81,46)" fg:x="77561" fg:w="42"/><text x="31.2629%" y="575.50"></text></g><g><title>__sysvec_apic_timer_interrupt (42 samples, 0.02%)</title><rect x="31.0129%" y="549" width="0.0168%" height="15" fill="rgb(247,70,30)" fg:x="77561" fg:w="42"/><text x="31.2629%" y="559.50"></text></g><g><title>hrtimer_interrupt (41 samples, 0.02%)</title><rect x="31.0133%" y="533" width="0.0164%" height="15" fill="rgb(212,68,19)" fg:x="77562" fg:w="41"/><text x="31.2633%" y="543.50"></text></g><g><title>__memcpy_avx_unaligned_erms (33,518 samples, 13.40%)</title><rect x="17.6286%" y="597" width="13.4022%" height="15" fill="rgb(240,187,13)" fg:x="44088" fg:w="33518"/><text x="17.8786%" y="607.50">__memcpy_avx_unalign..</text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u8 (1,507 samples, 0.60%)</title><rect x="31.7566%" y="581" width="0.6026%" height="15" fill="rgb(223,113,26)" fg:x="79421" fg:w="1507"/><text x="32.0066%" y="591.50"></text></g><g><title>nom::number::streaming::be_u8 (1,507 samples, 0.60%)</title><rect x="31.7566%" y="565" width="0.6026%" height="15" fill="rgb(206,192,2)" fg:x="79421" fg:w="1507"/><text x="32.0066%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (903 samples, 0.36%)</title><rect x="31.9981%" y="549" width="0.3611%" height="15" fill="rgb(241,108,4)" fg:x="80025" fg:w="903"/><text x="32.2481%" y="559.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (903 samples, 0.36%)</title><rect x="31.9981%" y="533" width="0.3611%" height="15" fill="rgb(247,173,49)" fg:x="80025" fg:w="903"/><text x="32.2481%" y="543.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (565 samples, 0.23%)</title><rect x="38.5185%" y="485" width="0.2259%" height="15" fill="rgb(224,114,35)" fg:x="96332" fg:w="565"/><text x="38.7685%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,584 samples, 0.63%)</title><rect x="38.1114%" y="533" width="0.6334%" height="15" fill="rgb(245,159,27)" fg:x="95314" fg:w="1584"/><text x="38.3614%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (566 samples, 0.23%)</title><rect x="38.5185%" y="517" width="0.2263%" height="15" fill="rgb(245,172,44)" fg:x="96332" fg:w="566"/><text x="38.7685%" y="527.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (566 samples, 0.23%)</title><rect x="38.5185%" y="501" width="0.2263%" height="15" fill="rgb(236,23,11)" fg:x="96332" fg:w="566"/><text x="38.7685%" y="511.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (1,744 samples, 0.70%)</title><rect x="39.8236%" y="469" width="0.6973%" height="15" fill="rgb(205,117,38)" fg:x="99596" fg:w="1744"/><text x="40.0736%" y="479.50"></text></g><g><title>nom::number::streaming::be_u32 (1,744 samples, 0.70%)</title><rect x="39.8236%" y="453" width="0.6973%" height="15" fill="rgb(237,72,25)" fg:x="99596" fg:w="1744"/><text x="40.0736%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,413 samples, 1.76%)</title><rect x="39.8236%" y="501" width="1.7645%" height="15" fill="rgb(244,70,9)" fg:x="99596" fg:w="4413"/><text x="40.0736%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (4,413 samples, 1.76%)</title><rect x="39.8236%" y="485" width="1.7645%" height="15" fill="rgb(217,125,39)" fg:x="99596" fg:w="4413"/><text x="40.0736%" y="495.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (2,669 samples, 1.07%)</title><rect x="40.5209%" y="469" width="1.0672%" height="15" fill="rgb(235,36,10)" fg:x="101340" fg:w="2669"/><text x="40.7709%" y="479.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (2,669 samples, 1.07%)</title><rect x="40.5209%" y="453" width="1.0672%" height="15" fill="rgb(251,123,47)" fg:x="101340" fg:w="2669"/><text x="40.7709%" y="463.50"></text></g><g><title>nom::number::streaming::be_u64 (2,669 samples, 1.07%)</title><rect x="40.5209%" y="437" width="1.0672%" height="15" fill="rgb(221,13,13)" fg:x="101340" fg:w="2669"/><text x="40.7709%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (8,701 samples, 3.48%)</title><rect x="38.1114%" y="549" width="3.4791%" height="15" fill="rgb(238,131,9)" fg:x="95314" fg:w="8701"/><text x="38.3614%" y="559.50">&lt;F ..</text></g><g><title>nom::sequence::tuple::{{closure}} (7,117 samples, 2.85%)</title><rect x="38.7448%" y="533" width="2.8457%" height="15" fill="rgb(211,50,8)" fg:x="96898" fg:w="7117"/><text x="38.9948%" y="543.50">no..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (7,107 samples, 2.84%)</title><rect x="38.7488%" y="517" width="2.8417%" height="15" fill="rgb(245,182,24)" fg:x="96908" fg:w="7107"/><text x="38.9988%" y="527.50">&lt;(..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (556 samples, 0.22%)</title><rect x="41.5905%" y="549" width="0.2223%" height="15" fill="rgb(242,14,37)" fg:x="104015" fg:w="556"/><text x="41.8405%" y="559.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_instance_dump (23,653 samples, 9.46%)</title><rect x="32.3612%" y="581" width="9.4577%" height="15" fill="rgb(246,228,12)" fg:x="80933" fg:w="23653"/><text x="32.6112%" y="591.50">hprof_slurp::p..</text></g><g><title>nom::combinator::flat_map::{{closure}} (23,653 samples, 9.46%)</title><rect x="32.3612%" y="565" width="9.4577%" height="15" fill="rgb(213,55,15)" fg:x="80933" fg:w="23653"/><text x="32.6112%" y="575.50">nom::combinato..</text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (51 samples, 0.02%)</title><rect x="42.2307%" y="405" width="0.0204%" height="15" fill="rgb(209,9,3)" fg:x="105616" fg:w="51"/><text x="42.4807%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (51 samples, 0.02%)</title><rect x="42.2307%" y="389" width="0.0204%" height="15" fill="rgb(230,59,30)" fg:x="105616" fg:w="51"/><text x="42.4807%" y="399.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (51 samples, 0.02%)</title><rect x="42.2307%" y="373" width="0.0204%" height="15" fill="rgb(209,121,21)" fg:x="105616" fg:w="51"/><text x="42.4807%" y="383.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (51 samples, 0.02%)</title><rect x="42.2307%" y="357" width="0.0204%" height="15" fill="rgb(220,109,13)" fg:x="105616" fg:w="51"/><text x="42.4807%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (51 samples, 0.02%)</title><rect x="42.2307%" y="341" width="0.0204%" height="15" fill="rgb(232,18,1)" fg:x="105616" fg:w="51"/><text x="42.4807%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (349 samples, 0.14%)</title><rect x="42.2511%" y="405" width="0.1395%" height="15" fill="rgb(215,41,42)" fg:x="105667" fg:w="349"/><text x="42.5011%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (349 samples, 0.14%)</title><rect x="42.2511%" y="389" width="0.1395%" height="15" fill="rgb(224,123,36)" fg:x="105667" fg:w="349"/><text x="42.5011%" y="399.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (349 samples, 0.14%)</title><rect x="42.2511%" y="373" width="0.1395%" height="15" fill="rgb(240,125,3)" fg:x="105667" fg:w="349"/><text x="42.5011%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,211 samples, 0.48%)</title><rect x="41.9068%" y="485" width="0.4842%" height="15" fill="rgb(205,98,50)" fg:x="104806" fg:w="1211"/><text x="42.1568%" y="495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,211 samples, 0.48%)</title><rect x="41.9068%" y="469" width="0.4842%" height="15" fill="rgb(205,185,37)" fg:x="104806" fg:w="1211"/><text x="42.1568%" y="479.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (1,211 samples, 0.48%)</title><rect x="41.9068%" y="453" width="0.4842%" height="15" fill="rgb(238,207,15)" fg:x="104806" fg:w="1211"/><text x="42.1568%" y="463.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (1,110 samples, 0.44%)</title><rect x="41.9472%" y="437" width="0.4438%" height="15" fill="rgb(213,199,42)" fg:x="104907" fg:w="1110"/><text x="42.1972%" y="447.50"></text></g><g><title>nom::number::streaming::be_u64 (1,028 samples, 0.41%)</title><rect x="41.9800%" y="421" width="0.4110%" height="15" fill="rgb(235,201,11)" fg:x="104989" fg:w="1028"/><text x="42.2300%" y="431.50"></text></g><g><title>clear_page_erms (71 samples, 0.03%)</title><rect x="42.5446%" y="293" width="0.0284%" height="15" fill="rgb(207,46,11)" fg:x="106401" fg:w="71"/><text x="42.7946%" y="303.50"></text></g><g><title>get_page_from_freelist (107 samples, 0.04%)</title><rect x="42.5418%" y="309" width="0.0428%" height="15" fill="rgb(241,35,35)" fg:x="106394" fg:w="107"/><text x="42.7918%" y="319.50"></text></g><g><title>rmqueue (27 samples, 0.01%)</title><rect x="42.5738%" y="293" width="0.0108%" height="15" fill="rgb(243,32,47)" fg:x="106474" fg:w="27"/><text x="42.8238%" y="303.50"></text></g><g><title>__alloc_pages (119 samples, 0.05%)</title><rect x="42.5378%" y="325" width="0.0476%" height="15" fill="rgb(247,202,23)" fg:x="106384" fg:w="119"/><text x="42.7878%" y="335.50"></text></g><g><title>alloc_pages_vma (125 samples, 0.05%)</title><rect x="42.5362%" y="341" width="0.0500%" height="15" fill="rgb(219,102,11)" fg:x="106380" fg:w="125"/><text x="42.7862%" y="351.50"></text></g><g><title>__pagevec_lru_add_fn (37 samples, 0.01%)</title><rect x="42.5918%" y="293" width="0.0148%" height="15" fill="rgb(243,110,44)" fg:x="106519" fg:w="37"/><text x="42.8418%" y="303.50"></text></g><g><title>__pagevec_lru_add (45 samples, 0.02%)</title><rect x="42.5914%" y="309" width="0.0180%" height="15" fill="rgb(222,74,54)" fg:x="106518" fg:w="45"/><text x="42.8414%" y="319.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (52 samples, 0.02%)</title><rect x="42.5894%" y="341" width="0.0208%" height="15" fill="rgb(216,99,12)" fg:x="106513" fg:w="52"/><text x="42.8394%" y="351.50"></text></g><g><title>lru_cache_add (51 samples, 0.02%)</title><rect x="42.5898%" y="325" width="0.0204%" height="15" fill="rgb(226,22,26)" fg:x="106514" fg:w="51"/><text x="42.8398%" y="335.50"></text></g><g><title>__mem_cgroup_charge (37 samples, 0.01%)</title><rect x="42.6105%" y="325" width="0.0148%" height="15" fill="rgb(217,163,10)" fg:x="106566" fg:w="37"/><text x="42.8605%" y="335.50"></text></g><g><title>mem_cgroup_charge (52 samples, 0.02%)</title><rect x="42.6101%" y="341" width="0.0208%" height="15" fill="rgb(213,25,53)" fg:x="106565" fg:w="52"/><text x="42.8601%" y="351.50"></text></g><g><title>do_anonymous_page (267 samples, 0.11%)</title><rect x="42.5330%" y="357" width="0.1068%" height="15" fill="rgb(252,105,26)" fg:x="106372" fg:w="267"/><text x="42.7830%" y="367.50"></text></g><g><title>handle_pte_fault (279 samples, 0.11%)</title><rect x="42.5298%" y="373" width="0.1116%" height="15" fill="rgb(220,39,43)" fg:x="106364" fg:w="279"/><text x="42.7798%" y="383.50"></text></g><g><title>__handle_mm_fault (292 samples, 0.12%)</title><rect x="42.5250%" y="389" width="0.1168%" height="15" fill="rgb(229,68,48)" fg:x="106352" fg:w="292"/><text x="42.7750%" y="399.50"></text></g><g><title>handle_mm_fault (304 samples, 0.12%)</title><rect x="42.5206%" y="405" width="0.1216%" height="15" fill="rgb(252,8,32)" fg:x="106341" fg:w="304"/><text x="42.7706%" y="415.50"></text></g><g><title>do_user_addr_fault (329 samples, 0.13%)</title><rect x="42.5134%" y="421" width="0.1316%" height="15" fill="rgb(223,20,43)" fg:x="106323" fg:w="329"/><text x="42.7634%" y="431.50"></text></g><g><title>exc_page_fault (344 samples, 0.14%)</title><rect x="42.5118%" y="437" width="0.1375%" height="15" fill="rgb(229,81,49)" fg:x="106319" fg:w="344"/><text x="42.7618%" y="447.50"></text></g><g><title>asm_exc_page_fault (348 samples, 0.14%)</title><rect x="42.5106%" y="453" width="0.1391%" height="15" fill="rgb(236,28,36)" fg:x="106316" fg:w="348"/><text x="42.7606%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (696 samples, 0.28%)</title><rect x="42.3910%" y="485" width="0.2783%" height="15" fill="rgb(249,185,26)" fg:x="106017" fg:w="696"/><text x="42.6410%" y="495.50"></text></g><g><title>core::ptr::write (522 samples, 0.21%)</title><rect x="42.4606%" y="469" width="0.2087%" height="15" fill="rgb(249,174,33)" fg:x="106191" fg:w="522"/><text x="42.7106%" y="479.50"></text></g><g><title>sync_regs (45 samples, 0.02%)</title><rect x="42.6513%" y="453" width="0.0180%" height="15" fill="rgb(233,201,37)" fg:x="106668" fg:w="45"/><text x="42.9013%" y="463.50"></text></g><g><title>malloc_consolidate (328 samples, 0.13%)</title><rect x="43.0588%" y="341" width="0.1312%" height="15" fill="rgb(221,78,26)" fg:x="107687" fg:w="328"/><text x="43.3088%" y="351.50"></text></g><g><title>unlink_chunk.constprop.0 (73 samples, 0.03%)</title><rect x="43.1607%" y="325" width="0.0292%" height="15" fill="rgb(250,127,30)" fg:x="107942" fg:w="73"/><text x="43.4107%" y="335.50"></text></g><g><title>__GI___libc_malloc (1,353 samples, 0.54%)</title><rect x="42.6729%" y="373" width="0.5410%" height="15" fill="rgb(230,49,44)" fg:x="106722" fg:w="1353"/><text x="42.9229%" y="383.50"></text></g><g><title>_int_malloc (1,029 samples, 0.41%)</title><rect x="42.8025%" y="357" width="0.4114%" height="15" fill="rgb(229,67,23)" fg:x="107046" fg:w="1029"/><text x="43.0525%" y="367.50"></text></g><g><title>unlink_chunk.constprop.0 (60 samples, 0.02%)</title><rect x="43.1899%" y="341" width="0.0240%" height="15" fill="rgb(249,83,47)" fg:x="108015" fg:w="60"/><text x="43.4399%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,372 samples, 0.55%)</title><rect x="42.6713%" y="421" width="0.5486%" height="15" fill="rgb(215,43,3)" fg:x="106718" fg:w="1372"/><text x="42.9213%" y="431.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,372 samples, 0.55%)</title><rect x="42.6713%" y="405" width="0.5486%" height="15" fill="rgb(238,154,13)" fg:x="106718" fg:w="1372"/><text x="42.9213%" y="415.50"></text></g><g><title>alloc::alloc::alloc (1,371 samples, 0.55%)</title><rect x="42.6717%" y="389" width="0.5482%" height="15" fill="rgb(219,56,2)" fg:x="106719" fg:w="1371"/><text x="42.9217%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,385 samples, 0.55%)</title><rect x="42.6693%" y="485" width="0.5538%" height="15" fill="rgb(233,0,4)" fg:x="106713" fg:w="1385"/><text x="42.9193%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,385 samples, 0.55%)</title><rect x="42.6693%" y="469" width="0.5538%" height="15" fill="rgb(235,30,7)" fg:x="106713" fg:w="1385"/><text x="42.9193%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,381 samples, 0.55%)</title><rect x="42.6709%" y="453" width="0.5522%" height="15" fill="rgb(250,79,13)" fg:x="106717" fg:w="1381"/><text x="42.9209%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,381 samples, 0.55%)</title><rect x="42.6709%" y="437" width="0.5522%" height="15" fill="rgb(211,146,34)" fg:x="106717" fg:w="1381"/><text x="42.9209%" y="447.50"></text></g><g><title>tlb_flush_mmu (34 samples, 0.01%)</title><rect x="43.2363%" y="197" width="0.0136%" height="15" fill="rgb(228,22,38)" fg:x="108131" fg:w="34"/><text x="43.4863%" y="207.50"></text></g><g><title>free_pages_and_swap_cache (34 samples, 0.01%)</title><rect x="43.2363%" y="181" width="0.0136%" height="15" fill="rgb(235,168,5)" fg:x="108131" fg:w="34"/><text x="43.4863%" y="191.50"></text></g><g><title>release_pages (29 samples, 0.01%)</title><rect x="43.2383%" y="165" width="0.0116%" height="15" fill="rgb(221,155,16)" fg:x="108136" fg:w="29"/><text x="43.4883%" y="175.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,571 samples, 1.43%)</title><rect x="41.8224%" y="517" width="1.4279%" height="15" fill="rgb(215,215,53)" fg:x="104595" fg:w="3571"/><text x="42.0724%" y="527.50"></text></g><g><title>nom::multi::count::{{closure}} (3,570 samples, 1.43%)</title><rect x="41.8228%" y="501" width="1.4275%" height="15" fill="rgb(223,4,10)" fg:x="104596" fg:w="3570"/><text x="42.0728%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u64&gt;&gt; (68 samples, 0.03%)</title><rect x="43.2231%" y="485" width="0.0272%" height="15" fill="rgb(234,103,6)" fg:x="108098" fg:w="68"/><text x="43.4731%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u64&gt;&gt; (68 samples, 0.03%)</title><rect x="43.2231%" y="469" width="0.0272%" height="15" fill="rgb(227,97,0)" fg:x="108098" fg:w="68"/><text x="43.4731%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (68 samples, 0.03%)</title><rect x="43.2231%" y="453" width="0.0272%" height="15" fill="rgb(234,150,53)" fg:x="108098" fg:w="68"/><text x="43.4731%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (68 samples, 0.03%)</title><rect x="43.2231%" y="437" width="0.0272%" height="15" fill="rgb(228,201,54)" fg:x="108098" fg:w="68"/><text x="43.4731%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (68 samples, 0.03%)</title><rect x="43.2231%" y="421" width="0.0272%" height="15" fill="rgb(222,22,37)" fg:x="108098" fg:w="68"/><text x="43.4731%" y="431.50"></text></g><g><title>__free (68 samples, 0.03%)</title><rect x="43.2231%" y="405" width="0.0272%" height="15" fill="rgb(237,53,32)" fg:x="108098" fg:w="68"/><text x="43.4731%" y="415.50"></text></g><g><title>__GI___munmap (68 samples, 0.03%)</title><rect x="43.2231%" y="389" width="0.0272%" height="15" fill="rgb(233,25,53)" fg:x="108098" fg:w="68"/><text x="43.4731%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (68 samples, 0.03%)</title><rect x="43.2231%" y="373" width="0.0272%" height="15" fill="rgb(210,40,34)" fg:x="108098" fg:w="68"/><text x="43.4731%" y="383.50"></text></g><g><title>do_syscall_64 (68 samples, 0.03%)</title><rect x="43.2231%" y="357" width="0.0272%" height="15" fill="rgb(241,220,44)" fg:x="108098" fg:w="68"/><text x="43.4731%" y="367.50"></text></g><g><title>__x64_sys_munmap (68 samples, 0.03%)</title><rect x="43.2231%" y="341" width="0.0272%" height="15" fill="rgb(235,28,35)" fg:x="108098" fg:w="68"/><text x="43.4731%" y="351.50"></text></g><g><title>__vm_munmap (68 samples, 0.03%)</title><rect x="43.2231%" y="325" width="0.0272%" height="15" fill="rgb(210,56,17)" fg:x="108098" fg:w="68"/><text x="43.4731%" y="335.50"></text></g><g><title>__do_munmap (68 samples, 0.03%)</title><rect x="43.2231%" y="309" width="0.0272%" height="15" fill="rgb(224,130,29)" fg:x="108098" fg:w="68"/><text x="43.4731%" y="319.50"></text></g><g><title>unmap_region (68 samples, 0.03%)</title><rect x="43.2231%" y="293" width="0.0272%" height="15" fill="rgb(235,212,8)" fg:x="108098" fg:w="68"/><text x="43.4731%" y="303.50"></text></g><g><title>unmap_vmas (65 samples, 0.03%)</title><rect x="43.2243%" y="277" width="0.0260%" height="15" fill="rgb(223,33,50)" fg:x="108101" fg:w="65"/><text x="43.4743%" y="287.50"></text></g><g><title>unmap_single_vma (65 samples, 0.03%)</title><rect x="43.2243%" y="261" width="0.0260%" height="15" fill="rgb(219,149,13)" fg:x="108101" fg:w="65"/><text x="43.4743%" y="271.50"></text></g><g><title>unmap_page_range (65 samples, 0.03%)</title><rect x="43.2243%" y="245" width="0.0260%" height="15" fill="rgb(250,156,29)" fg:x="108101" fg:w="65"/><text x="43.4743%" y="255.50"></text></g><g><title>zap_pmd_range.isra.0 (65 samples, 0.03%)</title><rect x="43.2243%" y="229" width="0.0260%" height="15" fill="rgb(216,193,19)" fg:x="108101" fg:w="65"/><text x="43.4743%" y="239.50"></text></g><g><title>zap_pte_range (65 samples, 0.03%)</title><rect x="43.2243%" y="213" width="0.0260%" height="15" fill="rgb(216,135,14)" fg:x="108101" fg:w="65"/><text x="43.4743%" y="223.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (54 samples, 0.02%)</title><rect x="43.2503%" y="517" width="0.0216%" height="15" fill="rgb(241,47,5)" fg:x="108166" fg:w="54"/><text x="43.5003%" y="527.50"></text></g><g><title>nom::combinator::map::{{closure}} (3,631 samples, 1.45%)</title><rect x="41.8204%" y="533" width="1.4519%" height="15" fill="rgb(233,42,35)" fg:x="104590" fg:w="3631"/><text x="42.0704%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,670 samples, 1.47%)</title><rect x="41.8192%" y="549" width="1.4675%" height="15" fill="rgb(231,13,6)" fg:x="104587" fg:w="3670"/><text x="42.0692%" y="559.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (36 samples, 0.01%)</title><rect x="43.2723%" y="533" width="0.0144%" height="15" fill="rgb(207,181,40)" fg:x="108221" fg:w="36"/><text x="43.5223%" y="543.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (36 samples, 0.01%)</title><rect x="43.2723%" y="517" width="0.0144%" height="15" fill="rgb(254,173,49)" fg:x="108221" fg:w="36"/><text x="43.5223%" y="527.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_object_array_dump (3,683 samples, 1.47%)</title><rect x="41.8188%" y="581" width="1.4727%" height="15" fill="rgb(221,1,38)" fg:x="104586" fg:w="3683"/><text x="42.0688%" y="591.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (3,683 samples, 1.47%)</title><rect x="41.8188%" y="565" width="1.4727%" height="15" fill="rgb(206,124,46)" fg:x="104586" fg:w="3683"/><text x="42.0688%" y="575.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_i8 (231 samples, 0.09%)</title><rect x="43.3991%" y="485" width="0.0924%" height="15" fill="rgb(249,21,11)" fg:x="108538" fg:w="231"/><text x="43.6491%" y="495.50"></text></g><g><title>nom::number::streaming::be_i8 (231 samples, 0.09%)</title><rect x="43.3991%" y="469" width="0.0924%" height="15" fill="rgb(222,201,40)" fg:x="108538" fg:w="231"/><text x="43.6491%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (231 samples, 0.09%)</title><rect x="43.3991%" y="453" width="0.0924%" height="15" fill="rgb(235,61,29)" fg:x="108538" fg:w="231"/><text x="43.6491%" y="463.50"></text></g><g><title>nom::combinator::map::{{closure}} (231 samples, 0.09%)</title><rect x="43.3991%" y="437" width="0.0924%" height="15" fill="rgb(219,207,3)" fg:x="108538" fg:w="231"/><text x="43.6491%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (231 samples, 0.09%)</title><rect x="43.3991%" y="421" width="0.0924%" height="15" fill="rgb(222,56,46)" fg:x="108538" fg:w="231"/><text x="43.6491%" y="431.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (231 samples, 0.09%)</title><rect x="43.3991%" y="405" width="0.0924%" height="15" fill="rgb(239,76,54)" fg:x="108538" fg:w="231"/><text x="43.6491%" y="415.50"></text></g><g><title>nom::number::streaming::be_u8 (231 samples, 0.09%)</title><rect x="43.3991%" y="389" width="0.0924%" height="15" fill="rgb(231,124,27)" fg:x="108538" fg:w="231"/><text x="43.6491%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.02%)</title><rect x="43.4714%" y="373" width="0.0200%" height="15" fill="rgb(249,195,6)" fg:x="108719" fg:w="50"/><text x="43.7214%" y="383.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (50 samples, 0.02%)</title><rect x="43.4714%" y="357" width="0.0200%" height="15" fill="rgb(237,174,47)" fg:x="108719" fg:w="50"/><text x="43.7214%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (264 samples, 0.11%)</title><rect x="43.3863%" y="517" width="0.1056%" height="15" fill="rgb(206,201,31)" fg:x="108506" fg:w="264"/><text x="43.6363%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (264 samples, 0.11%)</title><rect x="43.3863%" y="501" width="0.1056%" height="15" fill="rgb(231,57,52)" fg:x="108506" fg:w="264"/><text x="43.6363%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (161 samples, 0.06%)</title><rect x="43.6945%" y="501" width="0.0644%" height="15" fill="rgb(248,177,22)" fg:x="109277" fg:w="161"/><text x="43.9445%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,127 samples, 0.45%)</title><rect x="43.4918%" y="517" width="0.4506%" height="15" fill="rgb(215,211,37)" fg:x="108770" fg:w="1127"/><text x="43.7418%" y="527.50"></text></g><g><title>core::ptr::write (459 samples, 0.18%)</title><rect x="43.7589%" y="501" width="0.1835%" height="15" fill="rgb(241,128,51)" fg:x="109438" fg:w="459"/><text x="44.0089%" y="511.50"></text></g><g><title>malloc_consolidate (284 samples, 0.11%)</title><rect x="44.8309%" y="373" width="0.1136%" height="15" fill="rgb(227,165,31)" fg:x="112119" fg:w="284"/><text x="45.0809%" y="383.50"></text></g><g><title>unlink_chunk.constprop.0 (83 samples, 0.03%)</title><rect x="44.9113%" y="357" width="0.0332%" height="15" fill="rgb(228,167,24)" fg:x="112320" fg:w="83"/><text x="45.1613%" y="367.50"></text></g><g><title>__GI___libc_malloc (2,596 samples, 1.04%)</title><rect x="43.9556%" y="405" width="1.0380%" height="15" fill="rgb(228,143,12)" fg:x="109930" fg:w="2596"/><text x="44.2056%" y="415.50"></text></g><g><title>_int_malloc (1,749 samples, 0.70%)</title><rect x="44.2943%" y="389" width="0.6993%" height="15" fill="rgb(249,149,8)" fg:x="110777" fg:w="1749"/><text x="44.5443%" y="399.50"></text></g><g><title>unlink_chunk.constprop.0 (119 samples, 0.05%)</title><rect x="44.9461%" y="373" width="0.0476%" height="15" fill="rgb(243,35,44)" fg:x="112407" fg:w="119"/><text x="45.1961%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2,650 samples, 1.06%)</title><rect x="43.9473%" y="453" width="1.0596%" height="15" fill="rgb(246,89,9)" fg:x="109909" fg:w="2650"/><text x="44.1973%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2,650 samples, 1.06%)</title><rect x="43.9473%" y="437" width="1.0596%" height="15" fill="rgb(233,213,13)" fg:x="109909" fg:w="2650"/><text x="44.1973%" y="447.50"></text></g><g><title>alloc::alloc::alloc (2,641 samples, 1.06%)</title><rect x="43.9509%" y="421" width="1.0560%" height="15" fill="rgb(233,141,41)" fg:x="109918" fg:w="2641"/><text x="44.2009%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2,669 samples, 1.07%)</title><rect x="43.9425%" y="517" width="1.0672%" height="15" fill="rgb(239,167,4)" fg:x="109897" fg:w="2669"/><text x="44.1925%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2,669 samples, 1.07%)</title><rect x="43.9425%" y="501" width="1.0672%" height="15" fill="rgb(209,217,16)" fg:x="109897" fg:w="2669"/><text x="44.1925%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2,658 samples, 1.06%)</title><rect x="43.9469%" y="485" width="1.0628%" height="15" fill="rgb(219,88,35)" fg:x="109908" fg:w="2658"/><text x="44.1969%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2,658 samples, 1.06%)</title><rect x="43.9469%" y="469" width="1.0628%" height="15" fill="rgb(220,193,23)" fg:x="109908" fg:w="2658"/><text x="44.1969%" y="479.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (28 samples, 0.01%)</title><rect x="45.0141%" y="485" width="0.0112%" height="15" fill="rgb(230,90,52)" fg:x="112577" fg:w="28"/><text x="45.2641%" y="495.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (28 samples, 0.01%)</title><rect x="45.0141%" y="469" width="0.0112%" height="15" fill="rgb(252,106,19)" fg:x="112577" fg:w="28"/><text x="45.2641%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,360 samples, 1.74%)</title><rect x="43.3423%" y="549" width="1.7434%" height="15" fill="rgb(206,74,20)" fg:x="108396" fg:w="4360"/><text x="43.5923%" y="559.50"></text></g><g><title>nom::multi::count::{{closure}} (4,341 samples, 1.74%)</title><rect x="43.3499%" y="533" width="1.7358%" height="15" fill="rgb(230,138,44)" fg:x="108415" fg:w="4341"/><text x="43.5999%" y="543.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (190 samples, 0.08%)</title><rect x="45.0097%" y="517" width="0.0760%" height="15" fill="rgb(235,182,43)" fg:x="112566" fg:w="190"/><text x="45.2597%" y="527.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (190 samples, 0.08%)</title><rect x="45.0097%" y="501" width="0.0760%" height="15" fill="rgb(242,16,51)" fg:x="112566" fg:w="190"/><text x="45.2597%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (151 samples, 0.06%)</title><rect x="45.0253%" y="485" width="0.0604%" height="15" fill="rgb(248,9,4)" fg:x="112605" fg:w="151"/><text x="45.2753%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (4,405 samples, 1.76%)</title><rect x="43.3419%" y="565" width="1.7613%" height="15" fill="rgb(210,31,22)" fg:x="108395" fg:w="4405"/><text x="43.5919%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (44 samples, 0.02%)</title><rect x="45.0856%" y="549" width="0.0176%" height="15" fill="rgb(239,54,39)" fg:x="112756" fg:w="44"/><text x="45.3356%" y="559.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u32 (64 samples, 0.03%)</title><rect x="45.1224%" y="501" width="0.0256%" height="15" fill="rgb(230,99,41)" fg:x="112848" fg:w="64"/><text x="45.3724%" y="511.50"></text></g><g><title>nom::number::streaming::be_u32 (64 samples, 0.03%)</title><rect x="45.1224%" y="485" width="0.0256%" height="15" fill="rgb(253,106,12)" fg:x="112848" fg:w="64"/><text x="45.3724%" y="495.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_field_type (58 samples, 0.02%)</title><rect x="45.1480%" y="501" width="0.0232%" height="15" fill="rgb(213,46,41)" fg:x="112912" fg:w="58"/><text x="45.3980%" y="511.50"></text></g><g><title>nom::combinator::map::{{closure}} (58 samples, 0.02%)</title><rect x="45.1480%" y="485" width="0.0232%" height="15" fill="rgb(215,133,35)" fg:x="112912" fg:w="58"/><text x="45.3980%" y="495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (43 samples, 0.02%)</title><rect x="45.1540%" y="469" width="0.0172%" height="15" fill="rgb(213,28,5)" fg:x="112927" fg:w="43"/><text x="45.4040%" y="479.50"></text></g><g><title>hprof_slurp::parser::gc_record::FieldType::from_value (35 samples, 0.01%)</title><rect x="45.1572%" y="453" width="0.0140%" height="15" fill="rgb(215,77,49)" fg:x="112935" fg:w="35"/><text x="45.4072%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (248 samples, 0.10%)</title><rect x="45.1160%" y="533" width="0.0992%" height="15" fill="rgb(248,100,22)" fg:x="112832" fg:w="248"/><text x="45.3660%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (232 samples, 0.09%)</title><rect x="45.1224%" y="517" width="0.0928%" height="15" fill="rgb(208,67,9)" fg:x="112848" fg:w="232"/><text x="45.3724%" y="527.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_id (110 samples, 0.04%)</title><rect x="45.1712%" y="501" width="0.0440%" height="15" fill="rgb(219,133,21)" fg:x="112970" fg:w="110"/><text x="45.4212%" y="511.50"></text></g><g><title>hprof_slurp::parser::primitive_parsers::parse_u64 (100 samples, 0.04%)</title><rect x="45.1752%" y="485" width="0.0400%" height="15" fill="rgb(246,46,29)" fg:x="112980" fg:w="100"/><text x="45.4252%" y="495.50"></text></g><g><title>nom::number::streaming::be_u64 (92 samples, 0.04%)</title><rect x="45.1784%" y="469" width="0.0368%" height="15" fill="rgb(246,185,52)" fg:x="112988" fg:w="92"/><text x="45.4284%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.01%)</title><rect x="45.2028%" y="453" width="0.0124%" height="15" fill="rgb(252,136,11)" fg:x="113049" fg:w="31"/><text x="45.4528%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.01%)</title><rect x="45.2028%" y="437" width="0.0124%" height="15" fill="rgb(219,138,53)" fg:x="113049" fg:w="31"/><text x="45.4528%" y="447.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (31 samples, 0.01%)</title><rect x="45.2028%" y="421" width="0.0124%" height="15" fill="rgb(211,51,23)" fg:x="113049" fg:w="31"/><text x="45.4528%" y="431.50"></text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_record (35,528 samples, 14.21%)</title><rect x="31.0325%" y="597" width="14.2059%" height="15" fill="rgb(247,221,28)" fg:x="77610" fg:w="35528"/><text x="31.2825%" y="607.50">hprof_slurp::parser::r..</text></g><g><title>hprof_slurp::parser::record_parser::parse_gc_primitive_array_dump (4,869 samples, 1.95%)</title><rect x="43.2915%" y="581" width="1.9469%" height="15" fill="rgb(251,222,45)" fg:x="108269" fg:w="4869"/><text x="43.5415%" y="591.50">h..</text></g><g><title>nom::sequence::tuple::{{closure}} (338 samples, 0.14%)</title><rect x="45.1032%" y="565" width="0.1351%" height="15" fill="rgb(217,162,53)" fg:x="112800" fg:w="338"/><text x="45.3532%" y="575.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (338 samples, 0.14%)</title><rect x="45.1032%" y="549" width="0.1351%" height="15" fill="rgb(229,93,14)" fg:x="112800" fg:w="338"/><text x="45.3532%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (58 samples, 0.02%)</title><rect x="45.2152%" y="533" width="0.0232%" height="15" fill="rgb(209,67,49)" fg:x="113080" fg:w="58"/><text x="45.4652%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (84,757 samples, 33.89%)</title><rect x="11.3594%" y="629" width="33.8902%" height="15" fill="rgb(213,87,29)" fg:x="28409" fg:w="84757"/><text x="11.6094%" y="639.50">&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (84,170 samples, 33.66%)</title><rect x="11.5941%" y="613" width="33.6555%" height="15" fill="rgb(205,151,52)" fg:x="28996" fg:w="84170"/><text x="11.8441%" y="623.50">hprof_slurp::parser::record_parser::HprofRecordParser::..</text></g><g><title>hprof_slurp::parser::record_parser::parse_utf8_string (26 samples, 0.01%)</title><rect x="45.2392%" y="597" width="0.0104%" height="15" fill="rgb(253,215,39)" fg:x="113140" fg:w="26"/><text x="45.4892%" y="607.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (26 samples, 0.01%)</title><rect x="45.2392%" y="581" width="0.0104%" height="15" fill="rgb(221,220,41)" fg:x="113140" fg:w="26"/><text x="45.4892%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (26 samples, 0.01%)</title><rect x="45.2392%" y="565" width="0.0104%" height="15" fill="rgb(218,133,21)" fg:x="113140" fg:w="26"/><text x="45.4892%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17,386 samples, 6.95%)</title><rect x="45.2496%" y="629" width="6.9518%" height="15" fill="rgb(221,193,43)" fg:x="113166" fg:w="17386"/><text x="45.4996%" y="639.50">__memcpy_..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (599 samples, 0.24%)</title><rect x="52.4293%" y="613" width="0.2395%" height="15" fill="rgb(240,128,52)" fg:x="131122" fg:w="599"/><text x="52.6793%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (599 samples, 0.24%)</title><rect x="52.4293%" y="597" width="0.2395%" height="15" fill="rgb(253,114,12)" fg:x="131122" fg:w="599"/><text x="52.6793%" y="607.50"></text></g><g><title>__handle_mm_fault (41 samples, 0.02%)</title><rect x="59.5802%" y="517" width="0.0164%" height="15" fill="rgb(215,223,47)" fg:x="149006" fg:w="41"/><text x="59.8302%" y="527.50"></text></g><g><title>handle_pte_fault (41 samples, 0.02%)</title><rect x="59.5802%" y="501" width="0.0164%" height="15" fill="rgb(248,225,23)" fg:x="149006" fg:w="41"/><text x="59.8302%" y="511.50"></text></g><g><title>do_anonymous_page (40 samples, 0.02%)</title><rect x="59.5806%" y="485" width="0.0160%" height="15" fill="rgb(250,108,0)" fg:x="149007" fg:w="40"/><text x="59.8306%" y="495.50"></text></g><g><title>handle_mm_fault (42 samples, 0.02%)</title><rect x="59.5802%" y="533" width="0.0168%" height="15" fill="rgb(228,208,7)" fg:x="149006" fg:w="42"/><text x="59.8302%" y="543.50"></text></g><g><title>do_user_addr_fault (46 samples, 0.02%)</title><rect x="59.5798%" y="549" width="0.0184%" height="15" fill="rgb(244,45,10)" fg:x="149005" fg:w="46"/><text x="59.8298%" y="559.50"></text></g><g><title>asm_exc_page_fault (50 samples, 0.02%)</title><rect x="59.5790%" y="581" width="0.0200%" height="15" fill="rgb(207,125,25)" fg:x="149003" fg:w="50"/><text x="59.8290%" y="591.50"></text></g><g><title>exc_page_fault (48 samples, 0.02%)</title><rect x="59.5798%" y="565" width="0.0192%" height="15" fill="rgb(210,195,18)" fg:x="149005" fg:w="48"/><text x="59.8298%" y="575.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17,357 samples, 6.94%)</title><rect x="52.6692%" y="597" width="6.9402%" height="15" fill="rgb(249,80,12)" fg:x="131722" fg:w="17357"/><text x="52.9192%" y="607.50">__memcpy_..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18,528 samples, 7.41%)</title><rect x="52.2014%" y="629" width="7.4084%" height="15" fill="rgb(221,65,9)" fg:x="130552" fg:w="18528"/><text x="52.4514%" y="639.50">alloc::vec..</text></g><g><title>core::ptr::write (17,359 samples, 6.94%)</title><rect x="52.6688%" y="613" width="6.9410%" height="15" fill="rgb(235,49,36)" fg:x="131721" fg:w="17359"/><text x="52.9188%" y="623.50">core::ptr..</text></g><g><title>hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming (122,962 samples, 49.17%)</title><rect x="10.5665%" y="661" width="49.1665%" height="15" fill="rgb(225,32,20)" fg:x="26426" fg:w="122962"/><text x="10.8165%" y="671.50">hprof_slurp::parser::record_parser::HprofRecordParser::parse_streaming</text></g><g><title>hprof_slurp::parser::record_parser::lazy_many1::{{closure}} (122,962 samples, 49.17%)</title><rect x="10.5665%" y="645" width="49.1665%" height="15" fill="rgb(215,141,46)" fg:x="26426" fg:w="122962"/><text x="10.8165%" y="655.50">hprof_slurp::parser::record_parser::lazy_many1::{{closure}}</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (303 samples, 0.12%)</title><rect x="59.6118%" y="629" width="0.1212%" height="15" fill="rgb(250,160,47)" fg:x="149085" fg:w="303"/><text x="59.8618%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (303 samples, 0.12%)</title><rect x="59.6118%" y="613" width="0.1212%" height="15" fill="rgb(216,222,40)" fg:x="149085" fg:w="303"/><text x="59.8618%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (303 samples, 0.12%)</title><rect x="59.6118%" y="597" width="0.1212%" height="15" fill="rgb(234,217,39)" fg:x="149085" fg:w="303"/><text x="59.8618%" y="607.50"></text></g><g><title>std::panic::catch_unwind (140,351 samples, 56.12%)</title><rect x="3.6171%" y="773" width="56.1195%" height="15" fill="rgb(207,178,40)" fg:x="9046" fg:w="140351"/><text x="3.8671%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (140,351 samples, 56.12%)</title><rect x="3.6171%" y="757" width="56.1195%" height="15" fill="rgb(221,136,13)" fg:x="9046" fg:w="140351"/><text x="3.8671%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (140,351 samples, 56.12%)</title><rect x="3.6171%" y="741" width="56.1195%" height="15" fill="rgb(249,199,10)" fg:x="9046" fg:w="140351"/><text x="3.8671%" y="751.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (140,351 samples, 56.12%)</title><rect x="3.6171%" y="725" width="56.1195%" height="15" fill="rgb(249,222,13)" fg:x="9046" fg:w="140351"/><text x="3.8671%" y="735.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (140,351 samples, 56.12%)</title><rect x="3.6171%" y="709" width="56.1195%" height="15" fill="rgb(244,185,38)" fg:x="9046" fg:w="140351"/><text x="3.8671%" y="719.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (140,351 samples, 56.12%)</title><rect x="3.6171%" y="693" width="56.1195%" height="15" fill="rgb(236,202,9)" fg:x="9046" fg:w="140351"/><text x="3.8671%" y="703.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}} (140,351 samples, 56.12%)</title><rect x="3.6171%" y="677" width="56.1195%" height="15" fill="rgb(250,229,37)" fg:x="9046" fg:w="140351"/><text x="3.8671%" y="687.50">hprof_slurp::parser::record_stream_parser::HprofRecordStreamParser::start::{{closure}}</text></g><g><title>__GI___clone (140,352 samples, 56.12%)</title><rect x="3.6171%" y="885" width="56.1199%" height="15" fill="rgb(206,174,23)" fg:x="9046" fg:w="140352"/><text x="3.8671%" y="895.50">__GI___clone</text></g><g><title>start_thread (140,352 samples, 56.12%)</title><rect x="3.6171%" y="869" width="56.1199%" height="15" fill="rgb(211,33,43)" fg:x="9046" fg:w="140352"/><text x="3.8671%" y="879.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (140,352 samples, 56.12%)</title><rect x="3.6171%" y="853" width="56.1199%" height="15" fill="rgb(245,58,50)" fg:x="9046" fg:w="140352"/><text x="3.8671%" y="863.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (140,352 samples, 56.12%)</title><rect x="3.6171%" y="837" width="56.1199%" height="15" fill="rgb(244,68,36)" fg:x="9046" fg:w="140352"/><text x="3.8671%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (140,352 samples, 56.12%)</title><rect x="3.6171%" y="821" width="56.1199%" height="15" fill="rgb(232,229,15)" fg:x="9046" fg:w="140352"/><text x="3.8671%" y="831.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (140,352 samples, 56.12%)</title><rect x="3.6171%" y="805" width="56.1199%" height="15" fill="rgb(254,30,23)" fg:x="9046" fg:w="140352"/><text x="3.8671%" y="815.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (140,352 samples, 56.12%)</title><rect x="3.6171%" y="789" width="56.1199%" height="15" fill="rgb(235,160,14)" fg:x="9046" fg:w="140352"/><text x="3.8671%" y="799.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>asm_exc_page_fault (142 samples, 0.06%)</title><rect x="59.7374%" y="885" width="0.0568%" height="15" fill="rgb(212,155,44)" fg:x="149399" fg:w="142"/><text x="59.9874%" y="895.50"></text></g><g><title>hprof-parser (149,555 samples, 59.80%)</title><rect x="0.0000%" y="901" width="59.7998%" height="15" fill="rgb(226,2,50)" fg:x="0" fg:w="149555"/><text x="0.2500%" y="911.50">hprof-parser</text></g><g><title>asm_exc_page_fault (7,057 samples, 2.82%)</title><rect x="59.9637%" y="437" width="2.8218%" height="15" fill="rgb(234,177,6)" fg:x="149965" fg:w="7057"/><text x="60.2137%" y="447.50">as..</text></g><g><title>__cond_resched (26 samples, 0.01%)</title><rect x="62.8942%" y="421" width="0.0104%" height="15" fill="rgb(217,24,9)" fg:x="157294" fg:w="26"/><text x="63.1442%" y="431.50"></text></g><g><title>copy_page_to_iter (301 samples, 0.12%)</title><rect x="62.7874%" y="437" width="0.1204%" height="15" fill="rgb(220,13,46)" fg:x="157027" fg:w="301"/><text x="63.0374%" y="447.50"></text></g><g><title>__read_end_io (94 samples, 0.04%)</title><rect x="66.4225%" y="197" width="0.0376%" height="15" fill="rgb(239,221,27)" fg:x="166118" fg:w="94"/><text x="66.6725%" y="207.50"></text></g><g><title>blk_mq_end_request (159 samples, 0.06%)</title><rect x="66.4133%" y="261" width="0.0636%" height="15" fill="rgb(222,198,25)" fg:x="166095" fg:w="159"/><text x="66.6633%" y="271.50"></text></g><g><title>blk_update_request (153 samples, 0.06%)</title><rect x="66.4157%" y="245" width="0.0612%" height="15" fill="rgb(211,99,13)" fg:x="166101" fg:w="153"/><text x="66.6657%" y="255.50"></text></g><g><title>bio_endio (141 samples, 0.06%)</title><rect x="66.4205%" y="229" width="0.0564%" height="15" fill="rgb(232,111,31)" fg:x="166113" fg:w="141"/><text x="66.6705%" y="239.50"></text></g><g><title>mpage_end_io (136 samples, 0.05%)</title><rect x="66.4225%" y="213" width="0.0544%" height="15" fill="rgb(245,82,37)" fg:x="166118" fg:w="136"/><text x="66.6725%" y="223.50"></text></g><g><title>unlock_page (42 samples, 0.02%)</title><rect x="66.4601%" y="197" width="0.0168%" height="15" fill="rgb(227,149,46)" fg:x="166212" fg:w="42"/><text x="66.7101%" y="207.50"></text></g><g><title>nvme_complete_rq (160 samples, 0.06%)</title><rect x="66.4133%" y="277" width="0.0640%" height="15" fill="rgb(218,36,50)" fg:x="166095" fg:w="160"/><text x="66.6633%" y="287.50"></text></g><g><title>__handle_irq_event_percpu (192 samples, 0.08%)</title><rect x="66.4073%" y="341" width="0.0768%" height="15" fill="rgb(226,80,48)" fg:x="166080" fg:w="192"/><text x="66.6573%" y="351.50"></text></g><g><title>nvme_irq (191 samples, 0.08%)</title><rect x="66.4077%" y="325" width="0.0764%" height="15" fill="rgb(238,224,15)" fg:x="166081" fg:w="191"/><text x="66.6577%" y="335.50"></text></g><g><title>nvme_process_cq (191 samples, 0.08%)</title><rect x="66.4077%" y="309" width="0.0764%" height="15" fill="rgb(241,136,10)" fg:x="166081" fg:w="191"/><text x="66.6577%" y="319.50"></text></g><g><title>nvme_pci_complete_rq (179 samples, 0.07%)</title><rect x="66.4125%" y="293" width="0.0716%" height="15" fill="rgb(208,32,45)" fg:x="166093" fg:w="179"/><text x="66.6625%" y="303.50"></text></g><g><title>handle_edge_irq (197 samples, 0.08%)</title><rect x="66.4061%" y="373" width="0.0788%" height="15" fill="rgb(207,135,9)" fg:x="166077" fg:w="197"/><text x="66.6561%" y="383.50"></text></g><g><title>handle_irq_event (194 samples, 0.08%)</title><rect x="66.4073%" y="357" width="0.0776%" height="15" fill="rgb(206,86,44)" fg:x="166080" fg:w="194"/><text x="66.6573%" y="367.50"></text></g><g><title>__common_interrupt (201 samples, 0.08%)</title><rect x="66.4049%" y="389" width="0.0804%" height="15" fill="rgb(245,177,15)" fg:x="166074" fg:w="201"/><text x="66.6549%" y="399.50"></text></g><g><title>common_interrupt (202 samples, 0.08%)</title><rect x="66.4049%" y="405" width="0.0808%" height="15" fill="rgb(206,64,50)" fg:x="166074" fg:w="202"/><text x="66.6549%" y="415.50"></text></g><g><title>asm_common_interrupt (203 samples, 0.08%)</title><rect x="66.4049%" y="421" width="0.0812%" height="15" fill="rgb(234,36,40)" fg:x="166074" fg:w="203"/><text x="66.6549%" y="431.50"></text></g><g><title>__read_end_io (53 samples, 0.02%)</title><rect x="66.6472%" y="149" width="0.0212%" height="15" fill="rgb(213,64,8)" fg:x="166680" fg:w="53"/><text x="66.8972%" y="159.50"></text></g><g><title>nvme_complete_rq (82 samples, 0.03%)</title><rect x="66.6432%" y="229" width="0.0328%" height="15" fill="rgb(210,75,36)" fg:x="166670" fg:w="82"/><text x="66.8932%" y="239.50"></text></g><g><title>blk_mq_end_request (82 samples, 0.03%)</title><rect x="66.6432%" y="213" width="0.0328%" height="15" fill="rgb(229,88,21)" fg:x="166670" fg:w="82"/><text x="66.8932%" y="223.50"></text></g><g><title>blk_update_request (80 samples, 0.03%)</title><rect x="66.6440%" y="197" width="0.0320%" height="15" fill="rgb(252,204,47)" fg:x="166672" fg:w="80"/><text x="66.8940%" y="207.50"></text></g><g><title>bio_endio (75 samples, 0.03%)</title><rect x="66.6460%" y="181" width="0.0300%" height="15" fill="rgb(208,77,27)" fg:x="166677" fg:w="75"/><text x="66.8960%" y="191.50"></text></g><g><title>mpage_end_io (72 samples, 0.03%)</title><rect x="66.6472%" y="165" width="0.0288%" height="15" fill="rgb(221,76,26)" fg:x="166680" fg:w="72"/><text x="66.8972%" y="175.50"></text></g><g><title>__handle_irq_event_percpu (93 samples, 0.04%)</title><rect x="66.6412%" y="293" width="0.0372%" height="15" fill="rgb(225,139,18)" fg:x="166665" fg:w="93"/><text x="66.8912%" y="303.50"></text></g><g><title>nvme_irq (93 samples, 0.04%)</title><rect x="66.6412%" y="277" width="0.0372%" height="15" fill="rgb(230,137,11)" fg:x="166665" fg:w="93"/><text x="66.8912%" y="287.50"></text></g><g><title>nvme_process_cq (93 samples, 0.04%)</title><rect x="66.6412%" y="261" width="0.0372%" height="15" fill="rgb(212,28,1)" fg:x="166665" fg:w="93"/><text x="66.8912%" y="271.50"></text></g><g><title>nvme_pci_complete_rq (90 samples, 0.04%)</title><rect x="66.6424%" y="245" width="0.0360%" height="15" fill="rgb(248,164,17)" fg:x="166668" fg:w="90"/><text x="66.8924%" y="255.50"></text></g><g><title>handle_irq_event (94 samples, 0.04%)</title><rect x="66.6412%" y="309" width="0.0376%" height="15" fill="rgb(222,171,42)" fg:x="166665" fg:w="94"/><text x="66.8912%" y="319.50"></text></g><g><title>__common_interrupt (98 samples, 0.04%)</title><rect x="66.6404%" y="341" width="0.0392%" height="15" fill="rgb(243,84,45)" fg:x="166663" fg:w="98"/><text x="66.8904%" y="351.50"></text></g><g><title>handle_edge_irq (97 samples, 0.04%)</title><rect x="66.6408%" y="325" width="0.0388%" height="15" fill="rgb(252,49,23)" fg:x="166664" fg:w="97"/><text x="66.8908%" y="335.50"></text></g><g><title>asm_common_interrupt (99 samples, 0.04%)</title><rect x="66.6404%" y="373" width="0.0396%" height="15" fill="rgb(215,19,7)" fg:x="166663" fg:w="99"/><text x="66.8904%" y="383.50"></text></g><g><title>common_interrupt (99 samples, 0.04%)</title><rect x="66.6404%" y="357" width="0.0396%" height="15" fill="rgb(238,81,41)" fg:x="166663" fg:w="99"/><text x="66.8904%" y="367.50"></text></g><g><title>down_read_trylock (172 samples, 0.07%)</title><rect x="66.6848%" y="373" width="0.0688%" height="15" fill="rgb(210,199,37)" fg:x="166774" fg:w="172"/><text x="66.9348%" y="383.50"></text></g><g><title>find_vma (92 samples, 0.04%)</title><rect x="66.7536%" y="373" width="0.0368%" height="15" fill="rgb(244,192,49)" fg:x="166946" fg:w="92"/><text x="67.0036%" y="383.50"></text></g><g><title>vmacache_find (67 samples, 0.03%)</title><rect x="66.7636%" y="357" width="0.0268%" height="15" fill="rgb(226,211,11)" fg:x="166971" fg:w="67"/><text x="67.0136%" y="367.50"></text></g><g><title>__count_memcg_events (80 samples, 0.03%)</title><rect x="66.8863%" y="357" width="0.0320%" height="15" fill="rgb(236,162,54)" fg:x="167278" fg:w="80"/><text x="67.1363%" y="367.50"></text></g><g><title>cgroup_rstat_updated (46 samples, 0.02%)</title><rect x="66.8999%" y="341" width="0.0184%" height="15" fill="rgb(220,229,9)" fg:x="167312" fg:w="46"/><text x="67.1499%" y="351.50"></text></g><g><title>_raw_spin_lock (138 samples, 0.06%)</title><rect x="67.1838%" y="325" width="0.0552%" height="15" fill="rgb(250,87,22)" fg:x="168022" fg:w="138"/><text x="67.4338%" y="335.50"></text></g><g><title>__get_vma_policy (39 samples, 0.02%)</title><rect x="67.3497%" y="309" width="0.0156%" height="15" fill="rgb(239,43,17)" fg:x="168437" fg:w="39"/><text x="67.5997%" y="319.50"></text></g><g><title>clear_page_erms (28 samples, 0.01%)</title><rect x="67.5517%" y="245" width="0.0112%" height="15" fill="rgb(231,177,25)" fg:x="168942" fg:w="28"/><text x="67.8017%" y="255.50"></text></g><g><title>get_page_from_freelist (39 samples, 0.02%)</title><rect x="67.5505%" y="261" width="0.0156%" height="15" fill="rgb(219,179,1)" fg:x="168939" fg:w="39"/><text x="67.8005%" y="271.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (45 samples, 0.02%)</title><rect x="67.5505%" y="277" width="0.0180%" height="15" fill="rgb(238,219,53)" fg:x="168939" fg:w="45"/><text x="67.8005%" y="287.50"></text></g><g><title>__next_zones_zonelist (115 samples, 0.05%)</title><rect x="67.5769%" y="277" width="0.0460%" height="15" fill="rgb(232,167,36)" fg:x="169005" fg:w="115"/><text x="67.8269%" y="287.50"></text></g><g><title>__inc_numa_state (53 samples, 0.02%)</title><rect x="67.7192%" y="261" width="0.0212%" height="15" fill="rgb(244,19,51)" fg:x="169361" fg:w="53"/><text x="67.9692%" y="271.50"></text></g><g><title>nvme_complete_rq (42 samples, 0.02%)</title><rect x="68.9919%" y="101" width="0.0168%" height="15" fill="rgb(224,6,22)" fg:x="172544" fg:w="42"/><text x="69.2419%" y="111.50"></text></g><g><title>blk_mq_end_request (42 samples, 0.02%)</title><rect x="68.9919%" y="85" width="0.0168%" height="15" fill="rgb(224,145,5)" fg:x="172544" fg:w="42"/><text x="69.2419%" y="95.50"></text></g><g><title>blk_update_request (41 samples, 0.02%)</title><rect x="68.9923%" y="69" width="0.0164%" height="15" fill="rgb(234,130,49)" fg:x="172545" fg:w="41"/><text x="69.2423%" y="79.50"></text></g><g><title>bio_endio (38 samples, 0.02%)</title><rect x="68.9935%" y="53" width="0.0152%" height="15" fill="rgb(254,6,2)" fg:x="172548" fg:w="38"/><text x="69.2435%" y="63.50"></text></g><g><title>mpage_end_io (34 samples, 0.01%)</title><rect x="68.9951%" y="37" width="0.0136%" height="15" fill="rgb(208,96,46)" fg:x="172552" fg:w="34"/><text x="69.2451%" y="47.50"></text></g><g><title>asm_common_interrupt (52 samples, 0.02%)</title><rect x="68.9911%" y="245" width="0.0208%" height="15" fill="rgb(239,3,39)" fg:x="172542" fg:w="52"/><text x="69.2411%" y="255.50"></text></g><g><title>common_interrupt (52 samples, 0.02%)</title><rect x="68.9911%" y="229" width="0.0208%" height="15" fill="rgb(233,210,1)" fg:x="172542" fg:w="52"/><text x="69.2411%" y="239.50"></text></g><g><title>__common_interrupt (52 samples, 0.02%)</title><rect x="68.9911%" y="213" width="0.0208%" height="15" fill="rgb(244,137,37)" fg:x="172542" fg:w="52"/><text x="69.2411%" y="223.50"></text></g><g><title>handle_edge_irq (52 samples, 0.02%)</title><rect x="68.9911%" y="197" width="0.0208%" height="15" fill="rgb(240,136,2)" fg:x="172542" fg:w="52"/><text x="69.2411%" y="207.50"></text></g><g><title>handle_irq_event (51 samples, 0.02%)</title><rect x="68.9915%" y="181" width="0.0204%" height="15" fill="rgb(239,18,37)" fg:x="172543" fg:w="51"/><text x="69.2415%" y="191.50"></text></g><g><title>__handle_irq_event_percpu (51 samples, 0.02%)</title><rect x="68.9915%" y="165" width="0.0204%" height="15" fill="rgb(218,185,22)" fg:x="172543" fg:w="51"/><text x="69.2415%" y="175.50"></text></g><g><title>nvme_irq (51 samples, 0.02%)</title><rect x="68.9915%" y="149" width="0.0204%" height="15" fill="rgb(225,218,4)" fg:x="172543" fg:w="51"/><text x="69.2415%" y="159.50"></text></g><g><title>nvme_process_cq (51 samples, 0.02%)</title><rect x="68.9915%" y="133" width="0.0204%" height="15" fill="rgb(230,182,32)" fg:x="172543" fg:w="51"/><text x="69.2415%" y="143.50"></text></g><g><title>nvme_pci_complete_rq (50 samples, 0.02%)</title><rect x="68.9919%" y="117" width="0.0200%" height="15" fill="rgb(242,56,43)" fg:x="172544" fg:w="50"/><text x="69.2419%" y="127.50"></text></g><g><title>clear_page_erms (3,166 samples, 1.27%)</title><rect x="67.7484%" y="261" width="1.2659%" height="15" fill="rgb(233,99,24)" fg:x="169434" fg:w="3166"/><text x="67.9984%" y="271.50"></text></g><g><title>kernel_init_free_pages (52 samples, 0.02%)</title><rect x="69.0143%" y="261" width="0.0208%" height="15" fill="rgb(234,209,42)" fg:x="172600" fg:w="52"/><text x="69.2643%" y="271.50"></text></g><g><title>rmqueue (1,123 samples, 0.45%)</title><rect x="69.0351%" y="261" width="0.4490%" height="15" fill="rgb(227,7,12)" fg:x="172652" fg:w="1123"/><text x="69.2851%" y="271.50"></text></g><g><title>rmqueue_bulk.constprop.0 (795 samples, 0.32%)</title><rect x="69.1663%" y="245" width="0.3179%" height="15" fill="rgb(245,203,43)" fg:x="172980" fg:w="795"/><text x="69.4163%" y="255.50"></text></g><g><title>get_page_from_freelist (4,649 samples, 1.86%)</title><rect x="67.6264%" y="277" width="1.8589%" height="15" fill="rgb(238,205,33)" fg:x="169129" fg:w="4649"/><text x="67.8764%" y="287.50">g..</text></g><g><title>__alloc_pages (5,091 samples, 2.04%)</title><rect x="67.4665%" y="293" width="2.0356%" height="15" fill="rgb(231,56,7)" fg:x="168729" fg:w="5091"/><text x="67.7165%" y="303.50">_..</text></g><g><title>alloc_pages_vma (5,372 samples, 2.15%)</title><rect x="67.3937%" y="309" width="2.1480%" height="15" fill="rgb(244,186,29)" fg:x="168547" fg:w="5372"/><text x="67.6437%" y="319.50">a..</text></g><g><title>cgroup_throttle_swaprate (172 samples, 0.07%)</title><rect x="69.5433%" y="309" width="0.0688%" height="15" fill="rgb(234,111,31)" fg:x="173923" fg:w="172"/><text x="69.7933%" y="319.50"></text></g><g><title>get_mem_cgroup_from_mm (40 samples, 0.02%)</title><rect x="69.6121%" y="309" width="0.0160%" height="15" fill="rgb(241,149,10)" fg:x="174095" fg:w="40"/><text x="69.8621%" y="319.50"></text></g><g><title>__lock_text_start (27 samples, 0.01%)</title><rect x="69.7393%" y="261" width="0.0108%" height="15" fill="rgb(249,206,44)" fg:x="174413" fg:w="27"/><text x="69.9893%" y="271.50"></text></g><g><title>__mod_zone_page_state (33 samples, 0.01%)</title><rect x="69.7509%" y="261" width="0.0132%" height="15" fill="rgb(251,153,30)" fg:x="174442" fg:w="33"/><text x="70.0009%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (156 samples, 0.06%)</title><rect x="70.0200%" y="229" width="0.0624%" height="15" fill="rgb(239,152,38)" fg:x="175115" fg:w="156"/><text x="70.2700%" y="239.50"></text></g><g><title>__mod_lruvec_state (248 samples, 0.10%)</title><rect x="70.0072%" y="245" width="0.0992%" height="15" fill="rgb(249,139,47)" fg:x="175083" fg:w="248"/><text x="70.2572%" y="255.50"></text></g><g><title>__mod_node_page_state (39 samples, 0.02%)</title><rect x="70.0907%" y="229" width="0.0156%" height="15" fill="rgb(244,64,35)" fg:x="175292" fg:w="39"/><text x="70.3407%" y="239.50"></text></g><g><title>__pagevec_lru_add_fn (1,051 samples, 0.42%)</title><rect x="69.7640%" y="261" width="0.4202%" height="15" fill="rgb(216,46,15)" fg:x="174475" fg:w="1051"/><text x="70.0140%" y="271.50"></text></g><g><title>page_mapping (123 samples, 0.05%)</title><rect x="70.1351%" y="245" width="0.0492%" height="15" fill="rgb(250,74,19)" fg:x="175403" fg:w="123"/><text x="70.3851%" y="255.50"></text></g><g><title>_raw_spin_lock_irqsave (63 samples, 0.03%)</title><rect x="70.1931%" y="245" width="0.0252%" height="15" fill="rgb(249,42,33)" fg:x="175548" fg:w="63"/><text x="70.4431%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath (35 samples, 0.01%)</title><rect x="70.2043%" y="229" width="0.0140%" height="15" fill="rgb(242,149,17)" fg:x="175576" fg:w="35"/><text x="70.4543%" y="239.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (35 samples, 0.01%)</title><rect x="70.2043%" y="213" width="0.0140%" height="15" fill="rgb(244,29,21)" fg:x="175576" fg:w="35"/><text x="70.4543%" y="223.50"></text></g><g><title>lock_page_lruvec_irqsave (85 samples, 0.03%)</title><rect x="70.1847%" y="261" width="0.0340%" height="15" fill="rgb(220,130,37)" fg:x="175527" fg:w="85"/><text x="70.4347%" y="271.50"></text></g><g><title>__pagevec_lru_add (1,460 samples, 0.58%)</title><rect x="69.7169%" y="277" width="0.5838%" height="15" fill="rgb(211,67,2)" fg:x="174357" fg:w="1460"/><text x="69.9669%" y="287.50"></text></g><g><title>release_pages (173 samples, 0.07%)</title><rect x="70.2315%" y="261" width="0.0692%" height="15" fill="rgb(235,68,52)" fg:x="175644" fg:w="173"/><text x="70.4815%" y="271.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1,688 samples, 0.67%)</title><rect x="69.6369%" y="309" width="0.6749%" height="15" fill="rgb(246,142,3)" fg:x="174157" fg:w="1688"/><text x="69.8869%" y="319.50"></text></g><g><title>lru_cache_add (1,664 samples, 0.67%)</title><rect x="69.6465%" y="293" width="0.6654%" height="15" fill="rgb(241,25,7)" fg:x="174181" fg:w="1664"/><text x="69.8965%" y="303.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (280 samples, 0.11%)</title><rect x="70.6693%" y="277" width="0.1120%" height="15" fill="rgb(242,119,39)" fg:x="176739" fg:w="280"/><text x="70.9193%" y="287.50"></text></g><g><title>cgroup_rstat_updated (118 samples, 0.05%)</title><rect x="70.7341%" y="261" width="0.0472%" height="15" fill="rgb(241,98,45)" fg:x="176901" fg:w="118"/><text x="70.9841%" y="271.50"></text></g><g><title>page_counter_try_charge (86 samples, 0.03%)</title><rect x="71.0012%" y="261" width="0.0344%" height="15" fill="rgb(254,28,30)" fg:x="177569" fg:w="86"/><text x="71.2512%" y="271.50"></text></g><g><title>__mem_cgroup_charge (1,718 samples, 0.69%)</title><rect x="70.3542%" y="293" width="0.6869%" height="15" fill="rgb(241,142,54)" fg:x="175951" fg:w="1718"/><text x="70.6042%" y="303.50"></text></g><g><title>try_charge (640 samples, 0.26%)</title><rect x="70.7853%" y="277" width="0.2559%" height="15" fill="rgb(222,85,15)" fg:x="177029" fg:w="640"/><text x="71.0353%" y="287.50"></text></g><g><title>get_mem_cgroup_from_mm (272 samples, 0.11%)</title><rect x="71.0420%" y="293" width="0.1088%" height="15" fill="rgb(210,85,47)" fg:x="177671" fg:w="272"/><text x="71.2920%" y="303.50"></text></g><g><title>memcg_check_events (244 samples, 0.10%)</title><rect x="71.1599%" y="293" width="0.0976%" height="15" fill="rgb(224,206,25)" fg:x="177966" fg:w="244"/><text x="71.4099%" y="303.50"></text></g><g><title>rcu_read_unlock_strict (50 samples, 0.02%)</title><rect x="71.2575%" y="293" width="0.0200%" height="15" fill="rgb(243,201,19)" fg:x="178210" fg:w="50"/><text x="71.5075%" y="303.50"></text></g><g><title>mem_cgroup_charge (2,436 samples, 0.97%)</title><rect x="70.3118%" y="309" width="0.9740%" height="15" fill="rgb(236,59,4)" fg:x="175845" fg:w="2436"/><text x="70.5618%" y="319.50"></text></g><g><title>__mod_memcg_state.part.0 (27 samples, 0.01%)</title><rect x="71.4026%" y="245" width="0.0108%" height="15" fill="rgb(254,179,45)" fg:x="178573" fg:w="27"/><text x="71.6526%" y="255.50"></text></g><g><title>__mod_memcg_lruvec_state (157 samples, 0.06%)</title><rect x="71.3539%" y="261" width="0.0628%" height="15" fill="rgb(226,14,10)" fg:x="178451" fg:w="157"/><text x="71.6039%" y="271.50"></text></g><g><title>__mod_node_page_state (87 samples, 0.03%)</title><rect x="71.4262%" y="261" width="0.0348%" height="15" fill="rgb(244,27,41)" fg:x="178632" fg:w="87"/><text x="71.6762%" y="271.50"></text></g><g><title>__mod_lruvec_state (303 samples, 0.12%)</title><rect x="71.3407%" y="277" width="0.1212%" height="15" fill="rgb(235,35,32)" fg:x="178418" fg:w="303"/><text x="71.5907%" y="287.50"></text></g><g><title>__mod_lruvec_page_state (419 samples, 0.17%)</title><rect x="71.3123%" y="293" width="0.1675%" height="15" fill="rgb(218,68,31)" fg:x="178347" fg:w="419"/><text x="71.5623%" y="303.50"></text></g><g><title>__page_set_anon_rmap (43 samples, 0.02%)</title><rect x="71.4834%" y="293" width="0.0172%" height="15" fill="rgb(207,120,37)" fg:x="178775" fg:w="43"/><text x="71.7334%" y="303.50"></text></g><g><title>page_add_new_anon_rmap (533 samples, 0.21%)</title><rect x="71.2903%" y="309" width="0.2131%" height="15" fill="rgb(227,98,0)" fg:x="178292" fg:w="533"/><text x="71.5403%" y="319.50"></text></g><g><title>pmd_page_vaddr (40 samples, 0.02%)</title><rect x="71.5094%" y="309" width="0.0160%" height="15" fill="rgb(207,7,3)" fg:x="178840" fg:w="40"/><text x="71.7594%" y="319.50"></text></g><g><title>pmd_pfn (39 samples, 0.02%)</title><rect x="71.5254%" y="309" width="0.0156%" height="15" fill="rgb(206,98,19)" fg:x="178880" fg:w="39"/><text x="71.7754%" y="319.50"></text></g><g><title>pmd_val (32 samples, 0.01%)</title><rect x="71.5410%" y="309" width="0.0128%" height="15" fill="rgb(217,5,26)" fg:x="178919" fg:w="32"/><text x="71.7910%" y="319.50"></text></g><g><title>do_anonymous_page (10,791 samples, 4.31%)</title><rect x="67.2570%" y="325" width="4.3148%" height="15" fill="rgb(235,190,38)" fg:x="168205" fg:w="10791"/><text x="67.5070%" y="335.50">do_an..</text></g><g><title>pmd_page_vaddr (63 samples, 0.03%)</title><rect x="71.5886%" y="325" width="0.0252%" height="15" fill="rgb(247,86,24)" fg:x="179038" fg:w="63"/><text x="71.8386%" y="335.50"></text></g><g><title>pmd_val (39 samples, 0.02%)</title><rect x="71.6202%" y="325" width="0.0156%" height="15" fill="rgb(205,101,16)" fg:x="179117" fg:w="39"/><text x="71.8702%" y="335.50"></text></g><g><title>handle_pte_fault (11,313 samples, 4.52%)</title><rect x="67.1170%" y="341" width="4.5235%" height="15" fill="rgb(246,168,33)" fg:x="167855" fg:w="11313"/><text x="67.3670%" y="351.50">handl..</text></g><g><title>pmd_val (37 samples, 0.01%)</title><rect x="71.6413%" y="341" width="0.0148%" height="15" fill="rgb(231,114,1)" fg:x="179170" fg:w="37"/><text x="71.8913%" y="351.50"></text></g><g><title>__handle_mm_fault (11,891 samples, 4.75%)</title><rect x="66.9183%" y="357" width="4.7546%" height="15" fill="rgb(207,184,53)" fg:x="167358" fg:w="11891"/><text x="67.1683%" y="367.50">__hand..</text></g><g><title>pud_val (42 samples, 0.02%)</title><rect x="71.6561%" y="341" width="0.0168%" height="15" fill="rgb(224,95,51)" fg:x="179207" fg:w="42"/><text x="71.9061%" y="351.50"></text></g><g><title>pud_val (37 samples, 0.01%)</title><rect x="71.7073%" y="357" width="0.0148%" height="15" fill="rgb(212,188,45)" fg:x="179335" fg:w="37"/><text x="71.9573%" y="367.50"></text></g><g><title>handle_mm_fault (12,352 samples, 4.94%)</title><rect x="66.7904%" y="373" width="4.9390%" height="15" fill="rgb(223,154,38)" fg:x="167038" fg:w="12352"/><text x="67.0404%" y="383.50">handle..</text></g><g><title>mem_cgroup_from_task (63 samples, 0.03%)</title><rect x="71.7293%" y="373" width="0.0252%" height="15" fill="rgb(251,22,52)" fg:x="179390" fg:w="63"/><text x="71.9793%" y="383.50"></text></g><g><title>up_read (185 samples, 0.07%)</title><rect x="71.7649%" y="373" width="0.0740%" height="15" fill="rgb(229,209,22)" fg:x="179479" fg:w="185"/><text x="72.0149%" y="383.50"></text></g><g><title>do_user_addr_fault (13,262 samples, 5.30%)</title><rect x="66.5388%" y="389" width="5.3028%" height="15" fill="rgb(234,138,34)" fg:x="166409" fg:w="13262"/><text x="66.7888%" y="399.50">do_use..</text></g><g><title>exc_page_fault (13,460 samples, 5.38%)</title><rect x="66.4885%" y="405" width="5.3820%" height="15" fill="rgb(212,95,11)" fg:x="166283" fg:w="13460"/><text x="66.7385%" y="415.50">exc_pag..</text></g><g><title>asm_exc_page_fault (13,492 samples, 5.39%)</title><rect x="66.4861%" y="421" width="5.3948%" height="15" fill="rgb(240,179,47)" fg:x="166277" fg:w="13492"/><text x="66.7361%" y="431.50">asm_exc..</text></g><g><title>copy_user_enhanced_fast_string (22,468 samples, 8.98%)</title><rect x="62.9078%" y="437" width="8.9839%" height="15" fill="rgb(240,163,11)" fg:x="157328" fg:w="22468"/><text x="63.1578%" y="447.50">copy_user_enh..</text></g><g><title>asm_sysvec_apic_timer_interrupt (27 samples, 0.01%)</title><rect x="71.8809%" y="421" width="0.0108%" height="15" fill="rgb(236,37,12)" fg:x="179769" fg:w="27"/><text x="72.1309%" y="431.50"></text></g><g><title>sysvec_apic_timer_interrupt (27 samples, 0.01%)</title><rect x="71.8809%" y="405" width="0.0108%" height="15" fill="rgb(232,164,16)" fg:x="179769" fg:w="27"/><text x="72.1309%" y="415.50"></text></g><g><title>error_entry (179 samples, 0.07%)</title><rect x="71.8921%" y="437" width="0.0716%" height="15" fill="rgb(244,205,15)" fg:x="179797" fg:w="179"/><text x="72.1421%" y="447.50"></text></g><g><title>__xas_next (27 samples, 0.01%)</title><rect x="71.9796%" y="421" width="0.0108%" height="15" fill="rgb(223,117,47)" fg:x="180016" fg:w="27"/><text x="72.2296%" y="431.50"></text></g><g><title>xas_load (61 samples, 0.02%)</title><rect x="72.2911%" y="405" width="0.0244%" height="15" fill="rgb(244,107,35)" fg:x="180795" fg:w="61"/><text x="72.5411%" y="415.50"></text></g><g><title>filemap_get_read_batch (819 samples, 0.33%)</title><rect x="71.9904%" y="421" width="0.3275%" height="15" fill="rgb(205,140,8)" fg:x="180043" fg:w="819"/><text x="72.2404%" y="431.50"></text></g><g><title>clear_page_erms (26 samples, 0.01%)</title><rect x="72.5538%" y="293" width="0.0104%" height="15" fill="rgb(228,84,46)" fg:x="181452" fg:w="26"/><text x="72.8038%" y="303.50"></text></g><g><title>get_page_from_freelist (40 samples, 0.02%)</title><rect x="72.5522%" y="309" width="0.0160%" height="15" fill="rgb(254,188,9)" fg:x="181448" fg:w="40"/><text x="72.8022%" y="319.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (51 samples, 0.02%)</title><rect x="72.5494%" y="325" width="0.0204%" height="15" fill="rgb(206,112,54)" fg:x="181441" fg:w="51"/><text x="72.7994%" y="335.50"></text></g><g><title>__next_zones_zonelist (66 samples, 0.03%)</title><rect x="72.5738%" y="325" width="0.0264%" height="15" fill="rgb(216,84,49)" fg:x="181502" fg:w="66"/><text x="72.8238%" y="335.50"></text></g><g><title>__inc_numa_state (52 samples, 0.02%)</title><rect x="72.6922%" y="309" width="0.0208%" height="15" fill="rgb(214,194,35)" fg:x="181798" fg:w="52"/><text x="72.9422%" y="319.50"></text></g><g><title>blk_update_request (27 samples, 0.01%)</title><rect x="73.8261%" y="117" width="0.0108%" height="15" fill="rgb(249,28,3)" fg:x="184634" fg:w="27"/><text x="74.0761%" y="127.50"></text></g><g><title>bio_endio (26 samples, 0.01%)</title><rect x="73.8265%" y="101" width="0.0104%" height="15" fill="rgb(222,56,52)" fg:x="184635" fg:w="26"/><text x="74.0765%" y="111.50"></text></g><g><title>nvme_complete_rq (30 samples, 0.01%)</title><rect x="73.8253%" y="149" width="0.0120%" height="15" fill="rgb(245,217,50)" fg:x="184632" fg:w="30"/><text x="74.0753%" y="159.50"></text></g><g><title>blk_mq_end_request (30 samples, 0.01%)</title><rect x="73.8253%" y="133" width="0.0120%" height="15" fill="rgb(213,201,24)" fg:x="184632" fg:w="30"/><text x="74.0753%" y="143.50"></text></g><g><title>asm_common_interrupt (35 samples, 0.01%)</title><rect x="73.8237%" y="293" width="0.0140%" height="15" fill="rgb(248,116,28)" fg:x="184628" fg:w="35"/><text x="74.0737%" y="303.50"></text></g><g><title>common_interrupt (35 samples, 0.01%)</title><rect x="73.8237%" y="277" width="0.0140%" height="15" fill="rgb(219,72,43)" fg:x="184628" fg:w="35"/><text x="74.0737%" y="287.50"></text></g><g><title>__common_interrupt (35 samples, 0.01%)</title><rect x="73.8237%" y="261" width="0.0140%" height="15" fill="rgb(209,138,14)" fg:x="184628" fg:w="35"/><text x="74.0737%" y="271.50"></text></g><g><title>handle_edge_irq (35 samples, 0.01%)</title><rect x="73.8237%" y="245" width="0.0140%" height="15" fill="rgb(222,18,33)" fg:x="184628" fg:w="35"/><text x="74.0737%" y="255.50"></text></g><g><title>handle_irq_event (34 samples, 0.01%)</title><rect x="73.8241%" y="229" width="0.0136%" height="15" fill="rgb(213,199,7)" fg:x="184629" fg:w="34"/><text x="74.0741%" y="239.50"></text></g><g><title>__handle_irq_event_percpu (34 samples, 0.01%)</title><rect x="73.8241%" y="213" width="0.0136%" height="15" fill="rgb(250,110,10)" fg:x="184629" fg:w="34"/><text x="74.0741%" y="223.50"></text></g><g><title>nvme_irq (34 samples, 0.01%)</title><rect x="73.8241%" y="197" width="0.0136%" height="15" fill="rgb(248,123,6)" fg:x="184629" fg:w="34"/><text x="74.0741%" y="207.50"></text></g><g><title>nvme_process_cq (34 samples, 0.01%)</title><rect x="73.8241%" y="181" width="0.0136%" height="15" fill="rgb(206,91,31)" fg:x="184629" fg:w="34"/><text x="74.0741%" y="191.50"></text></g><g><title>nvme_pci_complete_rq (32 samples, 0.01%)</title><rect x="73.8249%" y="165" width="0.0128%" height="15" fill="rgb(211,154,13)" fg:x="184631" fg:w="32"/><text x="74.0749%" y="175.50"></text></g><g><title>clear_page_erms (2,794 samples, 1.12%)</title><rect x="72.7209%" y="309" width="1.1172%" height="15" fill="rgb(225,148,7)" fg:x="181870" fg:w="2794"/><text x="72.9709%" y="319.50"></text></g><g><title>kernel_init_free_pages (62 samples, 0.02%)</title><rect x="73.8381%" y="309" width="0.0248%" height="15" fill="rgb(220,160,43)" fg:x="184664" fg:w="62"/><text x="74.0881%" y="319.50"></text></g><g><title>get_page_from_freelist (4,307 samples, 1.72%)</title><rect x="72.6022%" y="325" width="1.7222%" height="15" fill="rgb(213,52,39)" fg:x="181573" fg:w="4307"/><text x="72.8522%" y="335.50"></text></g><g><title>rmqueue (1,154 samples, 0.46%)</title><rect x="73.8629%" y="309" width="0.4614%" height="15" fill="rgb(243,137,7)" fg:x="184726" fg:w="1154"/><text x="74.1129%" y="319.50"></text></g><g><title>rmqueue_bulk.constprop.0 (836 samples, 0.33%)</title><rect x="73.9901%" y="293" width="0.3343%" height="15" fill="rgb(230,79,13)" fg:x="185044" fg:w="836"/><text x="74.2401%" y="303.50"></text></g><g><title>kernel_init_free_pages (29 samples, 0.01%)</title><rect x="74.3244%" y="325" width="0.0116%" height="15" fill="rgb(247,105,23)" fg:x="185880" fg:w="29"/><text x="74.5744%" y="335.50"></text></g><g><title>__alloc_pages (4,737 samples, 1.89%)</title><rect x="72.4494%" y="341" width="1.8941%" height="15" fill="rgb(223,179,41)" fg:x="181191" fg:w="4737"/><text x="72.6994%" y="351.50">_..</text></g><g><title>alloc_pages (4,904 samples, 1.96%)</title><rect x="72.4175%" y="357" width="1.9609%" height="15" fill="rgb(218,9,34)" fg:x="181111" fg:w="4904"/><text x="72.6675%" y="367.50">a..</text></g><g><title>__page_cache_alloc (4,958 samples, 1.98%)</title><rect x="72.4031%" y="373" width="1.9825%" height="15" fill="rgb(222,106,8)" fg:x="181075" fg:w="4958"/><text x="72.6531%" y="383.50">_..</text></g><g><title>PageHuge (31 samples, 0.01%)</title><rect x="74.4383%" y="357" width="0.0124%" height="15" fill="rgb(211,220,0)" fg:x="186165" fg:w="31"/><text x="74.6883%" y="367.50"></text></g><g><title>__mod_memcg_lruvec_state (125 samples, 0.05%)</title><rect x="75.3568%" y="309" width="0.0500%" height="15" fill="rgb(229,52,16)" fg:x="188462" fg:w="125"/><text x="75.6068%" y="319.50"></text></g><g><title>__mod_lruvec_state (249 samples, 0.10%)</title><rect x="75.3492%" y="325" width="0.0996%" height="15" fill="rgb(212,155,18)" fg:x="188443" fg:w="249"/><text x="75.5992%" y="335.50"></text></g><g><title>__mod_node_page_state (85 samples, 0.03%)</title><rect x="75.4147%" y="309" width="0.0340%" height="15" fill="rgb(242,21,14)" fg:x="188607" fg:w="85"/><text x="75.6647%" y="319.50"></text></g><g><title>__mod_node_page_state (26 samples, 0.01%)</title><rect x="75.4531%" y="325" width="0.0104%" height="15" fill="rgb(222,19,48)" fg:x="188703" fg:w="26"/><text x="75.7031%" y="335.50"></text></g><g><title>__mod_lruvec_page_state (359 samples, 0.14%)</title><rect x="75.3224%" y="341" width="0.1435%" height="15" fill="rgb(232,45,27)" fg:x="188376" fg:w="359"/><text x="75.5724%" y="351.50"></text></g><g><title>_raw_spin_lock_irq (331 samples, 0.13%)</title><rect x="75.4711%" y="341" width="0.1324%" height="15" fill="rgb(249,103,42)" fg:x="188748" fg:w="331"/><text x="75.7211%" y="351.50"></text></g><g><title>native_queued_spin_lock_slowpath (176 samples, 0.07%)</title><rect x="75.5331%" y="325" width="0.0704%" height="15" fill="rgb(246,81,33)" fg:x="188903" fg:w="176"/><text x="75.7831%" y="335.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (176 samples, 0.07%)</title><rect x="75.5331%" y="309" width="0.0704%" height="15" fill="rgb(252,33,42)" fg:x="188903" fg:w="176"/><text x="75.7831%" y="319.50"></text></g><g><title>__read_end_io (31 samples, 0.01%)</title><rect x="75.6067%" y="117" width="0.0124%" height="15" fill="rgb(209,212,41)" fg:x="189087" fg:w="31"/><text x="75.8567%" y="127.50"></text></g><g><title>nvme_complete_rq (49 samples, 0.02%)</title><rect x="75.6059%" y="197" width="0.0196%" height="15" fill="rgb(207,154,6)" fg:x="189085" fg:w="49"/><text x="75.8559%" y="207.50"></text></g><g><title>blk_mq_end_request (49 samples, 0.02%)</title><rect x="75.6059%" y="181" width="0.0196%" height="15" fill="rgb(223,64,47)" fg:x="189085" fg:w="49"/><text x="75.8559%" y="191.50"></text></g><g><title>blk_update_request (49 samples, 0.02%)</title><rect x="75.6059%" y="165" width="0.0196%" height="15" fill="rgb(211,161,38)" fg:x="189085" fg:w="49"/><text x="75.8559%" y="175.50"></text></g><g><title>bio_endio (49 samples, 0.02%)</title><rect x="75.6059%" y="149" width="0.0196%" height="15" fill="rgb(219,138,40)" fg:x="189085" fg:w="49"/><text x="75.8559%" y="159.50"></text></g><g><title>mpage_end_io (47 samples, 0.02%)</title><rect x="75.6067%" y="133" width="0.0188%" height="15" fill="rgb(241,228,46)" fg:x="189087" fg:w="47"/><text x="75.8567%" y="143.50"></text></g><g><title>__handle_irq_event_percpu (56 samples, 0.02%)</title><rect x="75.6039%" y="261" width="0.0224%" height="15" fill="rgb(223,209,38)" fg:x="189080" fg:w="56"/><text x="75.8539%" y="271.50"></text></g><g><title>nvme_irq (54 samples, 0.02%)</title><rect x="75.6047%" y="245" width="0.0216%" height="15" fill="rgb(236,164,45)" fg:x="189082" fg:w="54"/><text x="75.8547%" y="255.50"></text></g><g><title>nvme_process_cq (54 samples, 0.02%)</title><rect x="75.6047%" y="229" width="0.0216%" height="15" fill="rgb(231,15,5)" fg:x="189082" fg:w="54"/><text x="75.8547%" y="239.50"></text></g><g><title>nvme_pci_complete_rq (51 samples, 0.02%)</title><rect x="75.6059%" y="213" width="0.0204%" height="15" fill="rgb(252,35,15)" fg:x="189085" fg:w="51"/><text x="75.8559%" y="223.50"></text></g><g><title>asm_common_interrupt (58 samples, 0.02%)</title><rect x="75.6035%" y="341" width="0.0232%" height="15" fill="rgb(248,181,18)" fg:x="189079" fg:w="58"/><text x="75.8535%" y="351.50"></text></g><g><title>common_interrupt (58 samples, 0.02%)</title><rect x="75.6035%" y="325" width="0.0232%" height="15" fill="rgb(233,39,42)" fg:x="189079" fg:w="58"/><text x="75.8535%" y="335.50"></text></g><g><title>__common_interrupt (58 samples, 0.02%)</title><rect x="75.6035%" y="309" width="0.0232%" height="15" fill="rgb(238,110,33)" fg:x="189079" fg:w="58"/><text x="75.8535%" y="319.50"></text></g><g><title>handle_edge_irq (58 samples, 0.02%)</title><rect x="75.6035%" y="293" width="0.0232%" height="15" fill="rgb(233,195,10)" fg:x="189079" fg:w="58"/><text x="75.8535%" y="303.50"></text></g><g><title>handle_irq_event (57 samples, 0.02%)</title><rect x="75.6039%" y="277" width="0.0228%" height="15" fill="rgb(254,105,3)" fg:x="189080" fg:w="57"/><text x="75.8539%" y="287.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (70 samples, 0.03%)</title><rect x="75.7034%" y="309" width="0.0280%" height="15" fill="rgb(221,225,9)" fg:x="189329" fg:w="70"/><text x="75.9534%" y="319.50"></text></g><g><title>cgroup_rstat_updated (29 samples, 0.01%)</title><rect x="75.7198%" y="293" width="0.0116%" height="15" fill="rgb(224,227,45)" fg:x="189370" fg:w="29"/><text x="75.9698%" y="303.50"></text></g><g><title>page_counter_try_charge (35 samples, 0.01%)</title><rect x="75.7902%" y="293" width="0.0140%" height="15" fill="rgb(229,198,43)" fg:x="189546" fg:w="35"/><text x="76.0402%" y="303.50"></text></g><g><title>__mem_cgroup_charge (378 samples, 0.15%)</title><rect x="75.6547%" y="325" width="0.1511%" height="15" fill="rgb(206,209,35)" fg:x="189207" fg:w="378"/><text x="75.9047%" y="335.50"></text></g><g><title>try_charge (176 samples, 0.07%)</title><rect x="75.7354%" y="309" width="0.0704%" height="15" fill="rgb(245,195,53)" fg:x="189409" fg:w="176"/><text x="75.9854%" y="319.50"></text></g><g><title>get_mem_cgroup_from_mm (60 samples, 0.02%)</title><rect x="75.8058%" y="325" width="0.0240%" height="15" fill="rgb(240,92,26)" fg:x="189585" fg:w="60"/><text x="76.0558%" y="335.50"></text></g><g><title>memcg_check_events (26 samples, 0.01%)</title><rect x="75.8322%" y="325" width="0.0104%" height="15" fill="rgb(207,40,23)" fg:x="189651" fg:w="26"/><text x="76.0822%" y="335.50"></text></g><g><title>rcu_read_unlock_strict (46 samples, 0.02%)</title><rect x="75.8426%" y="325" width="0.0184%" height="15" fill="rgb(223,111,35)" fg:x="189677" fg:w="46"/><text x="76.0926%" y="335.50"></text></g><g><title>mem_cgroup_charge (573 samples, 0.23%)</title><rect x="75.6359%" y="341" width="0.2291%" height="15" fill="rgb(229,147,28)" fg:x="189160" fg:w="573"/><text x="75.8859%" y="351.50"></text></g><g><title>xas_load (781 samples, 0.31%)</title><rect x="75.9417%" y="325" width="0.3123%" height="15" fill="rgb(211,29,28)" fg:x="189925" fg:w="781"/><text x="76.1917%" y="335.50"></text></g><g><title>xa_get_order (1,048 samples, 0.42%)</title><rect x="75.8846%" y="341" width="0.4190%" height="15" fill="rgb(228,72,33)" fg:x="189782" fg:w="1048"/><text x="76.1346%" y="351.50"></text></g><g><title>xas_start (124 samples, 0.05%)</title><rect x="76.2540%" y="325" width="0.0496%" height="15" fill="rgb(205,214,31)" fg:x="190706" fg:w="124"/><text x="76.5040%" y="335.50"></text></g><g><title>xas_find_conflict (311 samples, 0.12%)</title><rect x="76.3044%" y="341" width="0.1244%" height="15" fill="rgb(224,111,15)" fg:x="190832" fg:w="311"/><text x="76.5544%" y="351.50"></text></g><g><title>xas_load (32 samples, 0.01%)</title><rect x="76.4288%" y="341" width="0.0128%" height="15" fill="rgb(253,21,26)" fg:x="191143" fg:w="32"/><text x="76.6788%" y="351.50"></text></g><g><title>xas_nomem (26 samples, 0.01%)</title><rect x="76.4416%" y="341" width="0.0104%" height="15" fill="rgb(245,139,43)" fg:x="191175" fg:w="26"/><text x="76.6916%" y="351.50"></text></g><g><title>xas_start (52 samples, 0.02%)</title><rect x="76.4520%" y="341" width="0.0208%" height="15" fill="rgb(252,170,7)" fg:x="191201" fg:w="52"/><text x="76.7020%" y="351.50"></text></g><g><title>workingset_update_node (81 samples, 0.03%)</title><rect x="76.5467%" y="325" width="0.0324%" height="15" fill="rgb(231,118,14)" fg:x="191438" fg:w="81"/><text x="76.7967%" y="335.50"></text></g><g><title>list_lru_del (35 samples, 0.01%)</title><rect x="76.5651%" y="309" width="0.0140%" height="15" fill="rgb(238,83,0)" fg:x="191484" fg:w="35"/><text x="76.8151%" y="319.50"></text></g><g><title>__add_to_page_cache_locked (5,385 samples, 2.15%)</title><rect x="74.4507%" y="357" width="2.1532%" height="15" fill="rgb(221,39,39)" fg:x="186196" fg:w="5385"/><text x="74.7007%" y="367.50">_..</text></g><g><title>xas_store (328 samples, 0.13%)</title><rect x="76.4728%" y="341" width="0.1312%" height="15" fill="rgb(222,119,46)" fg:x="191253" fg:w="328"/><text x="76.7228%" y="351.50"></text></g><g><title>xas_create (62 samples, 0.02%)</title><rect x="76.5791%" y="325" width="0.0248%" height="15" fill="rgb(222,165,49)" fg:x="191519" fg:w="62"/><text x="76.8291%" y="335.50"></text></g><g><title>__mod_zone_page_state (29 samples, 0.01%)</title><rect x="76.7243%" y="325" width="0.0116%" height="15" fill="rgb(219,113,52)" fg:x="191882" fg:w="29"/><text x="76.9743%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (98 samples, 0.04%)</title><rect x="76.9666%" y="293" width="0.0392%" height="15" fill="rgb(214,7,15)" fg:x="192488" fg:w="98"/><text x="77.2166%" y="303.50"></text></g><g><title>__mod_memcg_state.part.0 (27 samples, 0.01%)</title><rect x="77.0058%" y="293" width="0.0108%" height="15" fill="rgb(235,32,4)" fg:x="192586" fg:w="27"/><text x="77.2558%" y="303.50"></text></g><g><title>__mod_lruvec_state (196 samples, 0.08%)</title><rect x="76.9526%" y="309" width="0.0784%" height="15" fill="rgb(238,90,54)" fg:x="192453" fg:w="196"/><text x="77.2026%" y="319.50"></text></g><g><title>__mod_node_page_state (36 samples, 0.01%)</title><rect x="77.0165%" y="293" width="0.0144%" height="15" fill="rgb(213,208,19)" fg:x="192613" fg:w="36"/><text x="77.2665%" y="303.50"></text></g><g><title>__mod_node_page_state (26 samples, 0.01%)</title><rect x="77.0345%" y="309" width="0.0104%" height="15" fill="rgb(233,156,4)" fg:x="192658" fg:w="26"/><text x="77.2845%" y="319.50"></text></g><g><title>mem_cgroup_update_lru_size (36 samples, 0.01%)</title><rect x="77.0545%" y="309" width="0.0144%" height="15" fill="rgb(207,194,5)" fg:x="192708" fg:w="36"/><text x="77.3045%" y="319.50"></text></g><g><title>page_mapping (109 samples, 0.04%)</title><rect x="77.0689%" y="309" width="0.0436%" height="15" fill="rgb(206,111,30)" fg:x="192744" fg:w="109"/><text x="77.3189%" y="319.50"></text></g><g><title>__pagevec_lru_add_fn (948 samples, 0.38%)</title><rect x="76.7359%" y="325" width="0.3791%" height="15" fill="rgb(243,70,54)" fg:x="191911" fg:w="948"/><text x="76.9859%" y="335.50"></text></g><g><title>lock_page_lruvec_irqsave (54 samples, 0.02%)</title><rect x="77.1161%" y="325" width="0.0216%" height="15" fill="rgb(242,28,8)" fg:x="192862" fg:w="54"/><text x="77.3661%" y="335.50"></text></g><g><title>_raw_spin_lock_irqsave (46 samples, 0.02%)</title><rect x="77.1193%" y="309" width="0.0184%" height="15" fill="rgb(219,106,18)" fg:x="192870" fg:w="46"/><text x="77.3693%" y="319.50"></text></g><g><title>__pagevec_lru_add (1,325 samples, 0.53%)</title><rect x="76.6915%" y="341" width="0.5298%" height="15" fill="rgb(244,222,10)" fg:x="191800" fg:w="1325"/><text x="76.9415%" y="351.50"></text></g><g><title>release_pages (171 samples, 0.07%)</title><rect x="77.1529%" y="325" width="0.0684%" height="15" fill="rgb(236,179,52)" fg:x="192954" fg:w="171"/><text x="77.4029%" y="335.50"></text></g><g><title>lru_cache_add (1,522 samples, 0.61%)</title><rect x="76.6167%" y="357" width="0.6086%" height="15" fill="rgb(213,23,39)" fg:x="191613" fg:w="1522"/><text x="76.8667%" y="367.50"></text></g><g><title>idr_find (178 samples, 0.07%)</title><rect x="77.3756%" y="325" width="0.0712%" height="15" fill="rgb(238,48,10)" fg:x="193511" fg:w="178"/><text x="77.6256%" y="335.50"></text></g><g><title>radix_tree_lookup (163 samples, 0.07%)</title><rect x="77.3816%" y="309" width="0.0652%" height="15" fill="rgb(251,196,23)" fg:x="193526" fg:w="163"/><text x="77.6316%" y="319.50"></text></g><g><title>__radix_tree_lookup (163 samples, 0.07%)</title><rect x="77.3816%" y="293" width="0.0652%" height="15" fill="rgb(250,152,24)" fg:x="193526" fg:w="163"/><text x="77.6316%" y="303.50"></text></g><g><title>mem_cgroup_from_id (208 samples, 0.08%)</title><rect x="77.3700%" y="341" width="0.0832%" height="15" fill="rgb(209,150,17)" fg:x="193497" fg:w="208"/><text x="77.6200%" y="351.50"></text></g><g><title>mem_cgroup_get_nr_swap_pages (64 samples, 0.03%)</title><rect x="77.4532%" y="341" width="0.0256%" height="15" fill="rgb(234,202,34)" fg:x="193705" fg:w="64"/><text x="77.7032%" y="351.50"></text></g><g><title>__mod_memcg_state.part.0 (26 samples, 0.01%)</title><rect x="77.5615%" y="293" width="0.0104%" height="15" fill="rgb(253,148,53)" fg:x="193976" fg:w="26"/><text x="77.8115%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (149 samples, 0.06%)</title><rect x="77.5188%" y="309" width="0.0596%" height="15" fill="rgb(218,129,16)" fg:x="193869" fg:w="149"/><text x="77.7688%" y="319.50"></text></g><g><title>__mod_lruvec_state (237 samples, 0.09%)</title><rect x="77.5040%" y="325" width="0.0948%" height="15" fill="rgb(216,85,19)" fg:x="193832" fg:w="237"/><text x="77.7540%" y="335.50"></text></g><g><title>__mod_node_page_state (30 samples, 0.01%)</title><rect x="77.5867%" y="309" width="0.0120%" height="15" fill="rgb(235,228,7)" fg:x="194039" fg:w="30"/><text x="77.8367%" y="319.50"></text></g><g><title>mod_lruvec_state.constprop.0 (340 samples, 0.14%)</title><rect x="77.4788%" y="341" width="0.1359%" height="15" fill="rgb(245,175,0)" fg:x="193769" fg:w="340"/><text x="77.7288%" y="351.50"></text></g><g><title>workingset_refault (936 samples, 0.37%)</title><rect x="77.2429%" y="357" width="0.3743%" height="15" fill="rgb(208,168,36)" fg:x="193179" fg:w="936"/><text x="77.4929%" y="367.50"></text></g><g><title>xas_find_conflict (51 samples, 0.02%)</title><rect x="77.6259%" y="357" width="0.0204%" height="15" fill="rgb(246,171,24)" fg:x="194137" fg:w="51"/><text x="77.8759%" y="367.50"></text></g><g><title>add_to_page_cache_lru (8,177 samples, 3.27%)</title><rect x="74.3855%" y="373" width="3.2696%" height="15" fill="rgb(215,142,24)" fg:x="186033" fg:w="8177"/><text x="74.6355%" y="383.50">add..</text></g><g><title>__blk_bios_map_sg (59 samples, 0.02%)</title><rect x="77.6811%" y="213" width="0.0236%" height="15" fill="rgb(250,187,7)" fg:x="194275" fg:w="59"/><text x="77.9311%" y="223.50"></text></g><g><title>__blk_rq_map_sg (63 samples, 0.03%)</title><rect x="77.6807%" y="229" width="0.0252%" height="15" fill="rgb(228,66,33)" fg:x="194274" fg:w="63"/><text x="77.9307%" y="239.50"></text></g><g><title>nvme_pci_setup_prps (33 samples, 0.01%)</title><rect x="77.7179%" y="229" width="0.0132%" height="15" fill="rgb(234,215,21)" fg:x="194367" fg:w="33"/><text x="77.9679%" y="239.50"></text></g><g><title>nvme_map_data (131 samples, 0.05%)</title><rect x="77.6799%" y="245" width="0.0524%" height="15" fill="rgb(222,191,20)" fg:x="194272" fg:w="131"/><text x="77.9299%" y="255.50"></text></g><g><title>__blk_mq_try_issue_directly (147 samples, 0.06%)</title><rect x="77.6759%" y="277" width="0.0588%" height="15" fill="rgb(245,79,54)" fg:x="194262" fg:w="147"/><text x="77.9259%" y="287.50"></text></g><g><title>nvme_queue_rq (146 samples, 0.06%)</title><rect x="77.6763%" y="261" width="0.0584%" height="15" fill="rgb(240,10,37)" fg:x="194263" fg:w="146"/><text x="77.9263%" y="271.50"></text></g><g><title>blk_finish_plug (150 samples, 0.06%)</title><rect x="77.6751%" y="357" width="0.0600%" height="15" fill="rgb(214,192,32)" fg:x="194260" fg:w="150"/><text x="77.9251%" y="367.50"></text></g><g><title>blk_flush_plug_list (150 samples, 0.06%)</title><rect x="77.6751%" y="341" width="0.0600%" height="15" fill="rgb(209,36,54)" fg:x="194260" fg:w="150"/><text x="77.9251%" y="351.50"></text></g><g><title>blk_mq_flush_plug_list (149 samples, 0.06%)</title><rect x="77.6755%" y="325" width="0.0596%" height="15" fill="rgb(220,10,11)" fg:x="194261" fg:w="149"/><text x="77.9255%" y="335.50"></text></g><g><title>blk_mq_sched_insert_requests (148 samples, 0.06%)</title><rect x="77.6759%" y="309" width="0.0592%" height="15" fill="rgb(221,106,17)" fg:x="194262" fg:w="148"/><text x="77.9259%" y="319.50"></text></g><g><title>blk_mq_try_issue_list_directly (148 samples, 0.06%)</title><rect x="77.6759%" y="293" width="0.0592%" height="15" fill="rgb(251,142,44)" fg:x="194262" fg:w="148"/><text x="77.9259%" y="303.50"></text></g><g><title>bio_add_page (177 samples, 0.07%)</title><rect x="78.0758%" y="325" width="0.0708%" height="15" fill="rgb(238,13,15)" fg:x="195262" fg:w="177"/><text x="78.3258%" y="335.50"></text></g><g><title>__bio_try_merge_page (118 samples, 0.05%)</title><rect x="78.0993%" y="309" width="0.0472%" height="15" fill="rgb(208,107,27)" fg:x="195321" fg:w="118"/><text x="78.3493%" y="319.50"></text></g><g><title>bio_alloc_bioset (28 samples, 0.01%)</title><rect x="78.1465%" y="325" width="0.0112%" height="15" fill="rgb(205,136,37)" fg:x="195439" fg:w="28"/><text x="78.3965%" y="335.50"></text></g><g><title>ext4_map_blocks (50 samples, 0.02%)</title><rect x="78.1657%" y="325" width="0.0200%" height="15" fill="rgb(250,205,27)" fg:x="195487" fg:w="50"/><text x="78.4157%" y="335.50"></text></g><g><title>ext4_es_lookup_extent (27 samples, 0.01%)</title><rect x="78.1749%" y="309" width="0.0108%" height="15" fill="rgb(210,80,43)" fg:x="195510" fg:w="27"/><text x="78.4249%" y="319.50"></text></g><g><title>fscrypt_mergeable_bio (45 samples, 0.02%)</title><rect x="78.1857%" y="325" width="0.0180%" height="15" fill="rgb(247,160,36)" fg:x="195537" fg:w="45"/><text x="78.4357%" y="335.50"></text></g><g><title>blk_bio_segment_split (100 samples, 0.04%)</title><rect x="78.2261%" y="261" width="0.0400%" height="15" fill="rgb(234,13,49)" fg:x="195638" fg:w="100"/><text x="78.4761%" y="271.50"></text></g><g><title>bvec_split_segs (29 samples, 0.01%)</title><rect x="78.2545%" y="245" width="0.0116%" height="15" fill="rgb(234,122,0)" fg:x="195709" fg:w="29"/><text x="78.5045%" y="255.50"></text></g><g><title>__blk_queue_split (111 samples, 0.04%)</title><rect x="78.2249%" y="277" width="0.0444%" height="15" fill="rgb(207,146,38)" fg:x="195635" fg:w="111"/><text x="78.4749%" y="287.50"></text></g><g><title>__blk_bios_map_sg (56 samples, 0.02%)</title><rect x="78.2805%" y="149" width="0.0224%" height="15" fill="rgb(207,177,25)" fg:x="195774" fg:w="56"/><text x="78.5305%" y="159.50"></text></g><g><title>__blk_rq_map_sg (57 samples, 0.02%)</title><rect x="78.2805%" y="165" width="0.0228%" height="15" fill="rgb(211,178,42)" fg:x="195774" fg:w="57"/><text x="78.5305%" y="175.50"></text></g><g><title>nvme_pci_setup_prps (28 samples, 0.01%)</title><rect x="78.3157%" y="165" width="0.0112%" height="15" fill="rgb(230,69,54)" fg:x="195862" fg:w="28"/><text x="78.5657%" y="175.50"></text></g><g><title>nvme_map_data (121 samples, 0.05%)</title><rect x="78.2805%" y="181" width="0.0484%" height="15" fill="rgb(214,135,41)" fg:x="195774" fg:w="121"/><text x="78.5305%" y="191.50"></text></g><g><title>__blk_mq_try_issue_directly (133 samples, 0.05%)</title><rect x="78.2785%" y="213" width="0.0532%" height="15" fill="rgb(237,67,25)" fg:x="195769" fg:w="133"/><text x="78.5285%" y="223.50"></text></g><g><title>nvme_queue_rq (132 samples, 0.05%)</title><rect x="78.2789%" y="197" width="0.0528%" height="15" fill="rgb(222,189,50)" fg:x="195770" fg:w="132"/><text x="78.5289%" y="207.50"></text></g><g><title>blk_flush_plug_list (138 samples, 0.06%)</title><rect x="78.2769%" y="277" width="0.0552%" height="15" fill="rgb(245,148,34)" fg:x="195765" fg:w="138"/><text x="78.5269%" y="287.50"></text></g><g><title>blk_mq_flush_plug_list (138 samples, 0.06%)</title><rect x="78.2769%" y="261" width="0.0552%" height="15" fill="rgb(222,29,6)" fg:x="195765" fg:w="138"/><text x="78.5269%" y="271.50"></text></g><g><title>blk_mq_sched_insert_requests (137 samples, 0.05%)</title><rect x="78.2773%" y="245" width="0.0548%" height="15" fill="rgb(221,189,43)" fg:x="195766" fg:w="137"/><text x="78.5273%" y="255.50"></text></g><g><title>blk_mq_try_issue_list_directly (136 samples, 0.05%)</title><rect x="78.2777%" y="229" width="0.0544%" height="15" fill="rgb(207,36,27)" fg:x="195767" fg:w="136"/><text x="78.5277%" y="239.50"></text></g><g><title>blk_mq_submit_bio (301 samples, 0.12%)</title><rect x="78.2121%" y="293" width="0.1204%" height="15" fill="rgb(217,90,24)" fg:x="195603" fg:w="301"/><text x="78.4621%" y="303.50"></text></g><g><title>submit_bio (349 samples, 0.14%)</title><rect x="78.2065%" y="325" width="0.1395%" height="15" fill="rgb(224,66,35)" fg:x="195589" fg:w="349"/><text x="78.4565%" y="335.50"></text></g><g><title>submit_bio_noacct (346 samples, 0.14%)</title><rect x="78.2077%" y="309" width="0.1383%" height="15" fill="rgb(221,13,50)" fg:x="195592" fg:w="346"/><text x="78.4577%" y="319.50"></text></g><g><title>submit_bio_checks (30 samples, 0.01%)</title><rect x="78.3341%" y="293" width="0.0120%" height="15" fill="rgb(236,68,49)" fg:x="195908" fg:w="30"/><text x="78.5841%" y="303.50"></text></g><g><title>xas_load (251 samples, 0.10%)</title><rect x="78.3640%" y="309" width="0.1004%" height="15" fill="rgb(229,146,28)" fg:x="195983" fg:w="251"/><text x="78.6140%" y="319.50"></text></g><g><title>xa_load (350 samples, 0.14%)</title><rect x="78.3461%" y="325" width="0.1399%" height="15" fill="rgb(225,31,38)" fg:x="195938" fg:w="350"/><text x="78.5961%" y="335.50"></text></g><g><title>xas_start (54 samples, 0.02%)</title><rect x="78.4644%" y="309" width="0.0216%" height="15" fill="rgb(250,208,3)" fg:x="196234" fg:w="54"/><text x="78.7144%" y="319.50"></text></g><g><title>ext4_mpage_readpages (1,882 samples, 0.75%)</title><rect x="77.7379%" y="341" width="0.7525%" height="15" fill="rgb(246,54,23)" fg:x="194417" fg:w="1882"/><text x="77.9879%" y="351.50"></text></g><g><title>read_pages (2,065 samples, 0.83%)</title><rect x="77.6735%" y="373" width="0.8257%" height="15" fill="rgb(243,76,11)" fg:x="194256" fg:w="2065"/><text x="77.9235%" y="383.50"></text></g><g><title>ext4_readahead (1,911 samples, 0.76%)</title><rect x="77.7351%" y="357" width="0.7641%" height="15" fill="rgb(245,21,50)" fg:x="194410" fg:w="1911"/><text x="77.9851%" y="367.50"></text></g><g><title>xas_load (384 samples, 0.15%)</title><rect x="78.5200%" y="357" width="0.1535%" height="15" fill="rgb(228,9,43)" fg:x="196373" fg:w="384"/><text x="78.7700%" y="367.50"></text></g><g><title>xa_load (490 samples, 0.20%)</title><rect x="78.5016%" y="373" width="0.1959%" height="15" fill="rgb(208,100,47)" fg:x="196327" fg:w="490"/><text x="78.7516%" y="383.50"></text></g><g><title>xas_start (60 samples, 0.02%)</title><rect x="78.6735%" y="357" width="0.0240%" height="15" fill="rgb(232,26,8)" fg:x="196757" fg:w="60"/><text x="78.9235%" y="367.50"></text></g><g><title>page_cache_ra_unbounded (15,910 samples, 6.36%)</title><rect x="72.3415%" y="389" width="6.3616%" height="15" fill="rgb(216,166,38)" fg:x="180921" fg:w="15910"/><text x="72.5915%" y="399.50">page_cac..</text></g><g><title>page_cache_async_ra (15,959 samples, 6.38%)</title><rect x="72.3231%" y="421" width="6.3812%" height="15" fill="rgb(251,202,51)" fg:x="180875" fg:w="15959"/><text x="72.5731%" y="431.50">page_cac..</text></g><g><title>ondemand_readahead (15,947 samples, 6.38%)</title><rect x="72.3279%" y="405" width="6.3764%" height="15" fill="rgb(254,216,34)" fg:x="180887" fg:w="15947"/><text x="72.5779%" y="415.50">ondemand..</text></g><g><title>filemap_get_pages (16,837 samples, 6.73%)</title><rect x="71.9732%" y="437" width="6.7323%" height="15" fill="rgb(251,32,27)" fg:x="180000" fg:w="16837"/><text x="72.2232%" y="447.50">filemap_g..</text></g><g><title>mark_page_accessed (296 samples, 0.12%)</title><rect x="78.7059%" y="437" width="0.1184%" height="15" fill="rgb(208,127,28)" fg:x="196838" fg:w="296"/><text x="78.9559%" y="447.50"></text></g><g><title>filemap_read (47,606 samples, 19.04%)</title><rect x="59.8086%" y="453" width="19.0353%" height="15" fill="rgb(224,137,22)" fg:x="149577" fg:w="47606"/><text x="60.0586%" y="463.50">filemap_read</text></g><g><title>restore_regs_and_return_to_kernel (36 samples, 0.01%)</title><rect x="78.8295%" y="437" width="0.0144%" height="15" fill="rgb(254,70,32)" fg:x="197147" fg:w="36"/><text x="79.0795%" y="447.50"></text></g><g><title>new_sync_read (47,630 samples, 19.04%)</title><rect x="59.8014%" y="501" width="19.0449%" height="15" fill="rgb(229,75,37)" fg:x="149559" fg:w="47630"/><text x="60.0514%" y="511.50">new_sync_read</text></g><g><title>ext4_file_read_iter (47,630 samples, 19.04%)</title><rect x="59.8014%" y="485" width="19.0449%" height="15" fill="rgb(252,64,23)" fg:x="149559" fg:w="47630"/><text x="60.0514%" y="495.50">ext4_file_read_iter</text></g><g><title>generic_file_read_iter (47,629 samples, 19.04%)</title><rect x="59.8018%" y="469" width="19.0445%" height="15" fill="rgb(232,162,48)" fg:x="149560" fg:w="47629"/><text x="60.0518%" y="479.50">generic_file_read_iter</text></g><g><title>entry_SYSCALL_64_after_hwframe (47,632 samples, 19.05%)</title><rect x="59.8010%" y="581" width="19.0457%" height="15" fill="rgb(246,160,12)" fg:x="149558" fg:w="47632"/><text x="60.0510%" y="591.50">entry_SYSCALL_64_after_hwframe</text></g><g><title>do_syscall_64 (47,632 samples, 19.05%)</title><rect x="59.8010%" y="565" width="19.0457%" height="15" fill="rgb(247,166,0)" fg:x="149558" fg:w="47632"/><text x="60.0510%" y="575.50">do_syscall_64</text></g><g><title>__x64_sys_read (47,632 samples, 19.05%)</title><rect x="59.8010%" y="549" width="19.0457%" height="15" fill="rgb(249,219,21)" fg:x="149558" fg:w="47632"/><text x="60.0510%" y="559.50">__x64_sys_read</text></g><g><title>ksys_read (47,632 samples, 19.05%)</title><rect x="59.8010%" y="533" width="19.0457%" height="15" fill="rgb(205,209,3)" fg:x="149558" fg:w="47632"/><text x="60.0510%" y="543.50">ksys_read</text></g><g><title>vfs_read (47,631 samples, 19.05%)</title><rect x="59.8014%" y="517" width="19.0453%" height="15" fill="rgb(243,44,1)" fg:x="149559" fg:w="47631"/><text x="60.0514%" y="527.50">vfs_read</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (47,652 samples, 19.05%)</title><rect x="59.8006%" y="629" width="19.0537%" height="15" fill="rgb(206,159,16)" fg:x="149557" fg:w="47652"/><text x="60.0506%" y="639.50">&lt;std::io::buffered::bufreader:..</text></g><g><title>std::sys::unix::fd::FileDesc::read (47,652 samples, 19.05%)</title><rect x="59.8006%" y="613" width="19.0537%" height="15" fill="rgb(244,77,30)" fg:x="149557" fg:w="47652"/><text x="60.0506%" y="623.50">std::sys::unix::fd::FileDesc::..</text></g><g><title>__libc_read (47,652 samples, 19.05%)</title><rect x="59.8006%" y="597" width="19.0537%" height="15" fill="rgb(218,69,12)" fg:x="149557" fg:w="47652"/><text x="60.0506%" y="607.50">__libc_read</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (47,653 samples, 19.05%)</title><rect x="59.8006%" y="661" width="19.0541%" height="15" fill="rgb(212,87,7)" fg:x="149557" fg:w="47653"/><text x="60.0506%" y="671.50">&lt;std::io::buffered::bufreader:..</text></g><g><title>std::io::default_read_exact (47,653 samples, 19.05%)</title><rect x="59.8006%" y="645" width="19.0541%" height="15" fill="rgb(245,114,25)" fg:x="149557" fg:w="47653"/><text x="60.0506%" y="655.50">std::io::default_read_exact</text></g><g><title>std::panic::catch_unwind (47,682 samples, 19.07%)</title><rect x="59.8006%" y="773" width="19.0657%" height="15" fill="rgb(210,61,42)" fg:x="149557" fg:w="47682"/><text x="60.0506%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (47,682 samples, 19.07%)</title><rect x="59.8006%" y="757" width="19.0657%" height="15" fill="rgb(211,52,33)" fg:x="149557" fg:w="47682"/><text x="60.0506%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (47,682 samples, 19.07%)</title><rect x="59.8006%" y="741" width="19.0657%" height="15" fill="rgb(234,58,33)" fg:x="149557" fg:w="47682"/><text x="60.0506%" y="751.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (47,682 samples, 19.07%)</title><rect x="59.8006%" y="725" width="19.0657%" height="15" fill="rgb(220,115,36)" fg:x="149557" fg:w="47682"/><text x="60.0506%" y="735.50">&lt;core::panic::unwind_safe::Ass..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (47,682 samples, 19.07%)</title><rect x="59.8006%" y="709" width="19.0657%" height="15" fill="rgb(243,153,54)" fg:x="149557" fg:w="47682"/><text x="60.0506%" y="719.50">std::thread::Builder::spawn_un..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (47,682 samples, 19.07%)</title><rect x="59.8006%" y="693" width="19.0657%" height="15" fill="rgb(251,47,18)" fg:x="149557" fg:w="47682"/><text x="60.0506%" y="703.50">std::sys_common::backtrace::__..</text></g><g><title>hprof_slurp::prefetch_reader::PrefetchReader::start::{{closure}} (47,682 samples, 19.07%)</title><rect x="59.8006%" y="677" width="19.0657%" height="15" fill="rgb(242,102,42)" fg:x="149557" fg:w="47682"/><text x="60.0506%" y="687.50">hprof_slurp::prefetch_reader::..</text></g><g><title>__GI___clone (47,684 samples, 19.07%)</title><rect x="59.8002%" y="885" width="19.0665%" height="15" fill="rgb(234,31,38)" fg:x="149556" fg:w="47684"/><text x="60.0502%" y="895.50">__GI___clone</text></g><g><title>start_thread (47,684 samples, 19.07%)</title><rect x="59.8002%" y="869" width="19.0665%" height="15" fill="rgb(221,117,51)" fg:x="149556" fg:w="47684"/><text x="60.0502%" y="879.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (47,683 samples, 19.07%)</title><rect x="59.8006%" y="853" width="19.0661%" height="15" fill="rgb(212,20,18)" fg:x="149557" fg:w="47683"/><text x="60.0506%" y="863.50">std::sys::unix::thread::Thread..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (47,683 samples, 19.07%)</title><rect x="59.8006%" y="837" width="19.0661%" height="15" fill="rgb(245,133,36)" fg:x="149557" fg:w="47683"/><text x="60.0506%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as cor..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (47,683 samples, 19.07%)</title><rect x="59.8006%" y="821" width="19.0661%" height="15" fill="rgb(212,6,19)" fg:x="149557" fg:w="47683"/><text x="60.0506%" y="831.50">&lt;alloc::boxed::Box&lt;F,A&gt; as cor..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (47,683 samples, 19.07%)</title><rect x="59.8006%" y="805" width="19.0661%" height="15" fill="rgb(218,1,36)" fg:x="149557" fg:w="47683"/><text x="60.0506%" y="815.50">core::ops::function::FnOnce::c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (47,683 samples, 19.07%)</title><rect x="59.8006%" y="789" width="19.0661%" height="15" fill="rgb(246,84,54)" fg:x="149557" fg:w="47683"/><text x="60.0506%" y="799.50">std::thread::Builder::spawn_un..</text></g><g><title>copy_user_enhanced_fast_string (38 samples, 0.02%)</title><rect x="78.8695%" y="741" width="0.0152%" height="15" fill="rgb(242,110,6)" fg:x="197247" fg:w="38"/><text x="79.1195%" y="751.50"></text></g><g><title>hprof-prefetch (47,756 samples, 19.10%)</title><rect x="59.7998%" y="901" width="19.0953%" height="15" fill="rgb(214,47,5)" fg:x="149555" fg:w="47756"/><text x="60.0498%" y="911.50">hprof-prefetch</text></g><g><title>entry_SYSCALL_64_after_hwframe (71 samples, 0.03%)</title><rect x="78.8667%" y="885" width="0.0284%" height="15" fill="rgb(218,159,25)" fg:x="197240" fg:w="71"/><text x="79.1167%" y="895.50"></text></g><g><title>do_syscall_64 (71 samples, 0.03%)</title><rect x="78.8667%" y="869" width="0.0284%" height="15" fill="rgb(215,211,28)" fg:x="197240" fg:w="71"/><text x="79.1167%" y="879.50"></text></g><g><title>__x64_sys_read (71 samples, 0.03%)</title><rect x="78.8667%" y="853" width="0.0284%" height="15" fill="rgb(238,59,32)" fg:x="197240" fg:w="71"/><text x="79.1167%" y="863.50"></text></g><g><title>ksys_read (71 samples, 0.03%)</title><rect x="78.8667%" y="837" width="0.0284%" height="15" fill="rgb(226,82,3)" fg:x="197240" fg:w="71"/><text x="79.1167%" y="847.50"></text></g><g><title>vfs_read (71 samples, 0.03%)</title><rect x="78.8667%" y="821" width="0.0284%" height="15" fill="rgb(240,164,32)" fg:x="197240" fg:w="71"/><text x="79.1167%" y="831.50"></text></g><g><title>new_sync_read (71 samples, 0.03%)</title><rect x="78.8667%" y="805" width="0.0284%" height="15" fill="rgb(232,46,7)" fg:x="197240" fg:w="71"/><text x="79.1167%" y="815.50"></text></g><g><title>ext4_file_read_iter (71 samples, 0.03%)</title><rect x="78.8667%" y="789" width="0.0284%" height="15" fill="rgb(229,129,53)" fg:x="197240" fg:w="71"/><text x="79.1167%" y="799.50"></text></g><g><title>generic_file_read_iter (71 samples, 0.03%)</title><rect x="78.8667%" y="773" width="0.0284%" height="15" fill="rgb(234,188,29)" fg:x="197240" fg:w="71"/><text x="79.1167%" y="783.50"></text></g><g><title>filemap_read (71 samples, 0.03%)</title><rect x="78.8667%" y="757" width="0.0284%" height="15" fill="rgb(246,141,4)" fg:x="197240" fg:w="71"/><text x="79.1167%" y="767.50"></text></g><g><title>_int_free (74 samples, 0.03%)</title><rect x="78.8955%" y="869" width="0.0296%" height="15" fill="rgb(229,23,39)" fg:x="197312" fg:w="74"/><text x="79.1455%" y="879.50"></text></g><g><title>[anon] (82 samples, 0.03%)</title><rect x="78.8951%" y="885" width="0.0328%" height="15" fill="rgb(206,12,3)" fg:x="197311" fg:w="82"/><text x="79.1451%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (1,148 samples, 0.46%)</title><rect x="78.9426%" y="869" width="0.4590%" height="15" fill="rgb(252,226,20)" fg:x="197430" fg:w="1148"/><text x="79.1926%" y="879.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (557 samples, 0.22%)</title><rect x="79.4021%" y="869" width="0.2227%" height="15" fill="rgb(216,123,35)" fg:x="198579" fg:w="557"/><text x="79.6521%" y="879.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (557 samples, 0.22%)</title><rect x="79.4021%" y="853" width="0.2227%" height="15" fill="rgb(212,68,40)" fg:x="198579" fg:w="557"/><text x="79.6521%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (557 samples, 0.22%)</title><rect x="79.4021%" y="837" width="0.2227%" height="15" fill="rgb(254,125,32)" fg:x="198579" fg:w="557"/><text x="79.6521%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (557 samples, 0.22%)</title><rect x="79.4021%" y="821" width="0.2227%" height="15" fill="rgb(253,97,22)" fg:x="198579" fg:w="557"/><text x="79.6521%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (557 samples, 0.22%)</title><rect x="79.4021%" y="805" width="0.2227%" height="15" fill="rgb(241,101,14)" fg:x="198579" fg:w="557"/><text x="79.6521%" y="815.50"></text></g><g><title>[unknown] (1,745 samples, 0.70%)</title><rect x="78.9282%" y="885" width="0.6977%" height="15" fill="rgb(238,103,29)" fg:x="197394" fg:w="1745"/><text x="79.1782%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 0.03%)</title><rect x="79.8619%" y="613" width="0.0296%" height="15" fill="rgb(233,195,47)" fg:x="199729" fg:w="74"/><text x="80.1119%" y="623.50"></text></g><g><title>__GI___munmap (34 samples, 0.01%)</title><rect x="80.3189%" y="597" width="0.0136%" height="15" fill="rgb(246,218,30)" fg:x="200872" fg:w="34"/><text x="80.5689%" y="607.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (34 samples, 0.01%)</title><rect x="80.3189%" y="581" width="0.0136%" height="15" fill="rgb(219,145,47)" fg:x="200872" fg:w="34"/><text x="80.5689%" y="591.50"></text></g><g><title>do_syscall_64 (34 samples, 0.01%)</title><rect x="80.3189%" y="565" width="0.0136%" height="15" fill="rgb(243,12,26)" fg:x="200872" fg:w="34"/><text x="80.5689%" y="575.50"></text></g><g><title>__x64_sys_munmap (34 samples, 0.01%)</title><rect x="80.3189%" y="549" width="0.0136%" height="15" fill="rgb(214,87,16)" fg:x="200872" fg:w="34"/><text x="80.5689%" y="559.50"></text></g><g><title>__vm_munmap (34 samples, 0.01%)</title><rect x="80.3189%" y="533" width="0.0136%" height="15" fill="rgb(208,99,42)" fg:x="200872" fg:w="34"/><text x="80.5689%" y="543.50"></text></g><g><title>__do_munmap (34 samples, 0.01%)</title><rect x="80.3189%" y="517" width="0.0136%" height="15" fill="rgb(253,99,2)" fg:x="200872" fg:w="34"/><text x="80.5689%" y="527.50"></text></g><g><title>unmap_region (34 samples, 0.01%)</title><rect x="80.3189%" y="501" width="0.0136%" height="15" fill="rgb(220,168,23)" fg:x="200872" fg:w="34"/><text x="80.5689%" y="511.50"></text></g><g><title>unmap_vmas (32 samples, 0.01%)</title><rect x="80.3197%" y="485" width="0.0128%" height="15" fill="rgb(242,38,24)" fg:x="200874" fg:w="32"/><text x="80.5697%" y="495.50"></text></g><g><title>unmap_single_vma (32 samples, 0.01%)</title><rect x="80.3197%" y="469" width="0.0128%" height="15" fill="rgb(225,182,9)" fg:x="200874" fg:w="32"/><text x="80.5697%" y="479.50"></text></g><g><title>unmap_page_range (32 samples, 0.01%)</title><rect x="80.3197%" y="453" width="0.0128%" height="15" fill="rgb(243,178,37)" fg:x="200874" fg:w="32"/><text x="80.5697%" y="463.50"></text></g><g><title>zap_pmd_range.isra.0 (32 samples, 0.01%)</title><rect x="80.3197%" y="437" width="0.0128%" height="15" fill="rgb(232,139,19)" fg:x="200874" fg:w="32"/><text x="80.5697%" y="447.50"></text></g><g><title>zap_pte_range (31 samples, 0.01%)</title><rect x="80.3201%" y="421" width="0.0124%" height="15" fill="rgb(225,201,24)" fg:x="200875" fg:w="31"/><text x="80.5701%" y="431.50"></text></g><g><title>futex_wait_queue_me (48 samples, 0.02%)</title><rect x="80.9255%" y="485" width="0.0192%" height="15" fill="rgb(221,47,46)" fg:x="202389" fg:w="48"/><text x="81.1755%" y="495.50"></text></g><g><title>schedule (47 samples, 0.02%)</title><rect x="80.9259%" y="469" width="0.0188%" height="15" fill="rgb(249,23,13)" fg:x="202390" fg:w="47"/><text x="81.1759%" y="479.50"></text></g><g><title>__schedule (46 samples, 0.02%)</title><rect x="80.9263%" y="453" width="0.0184%" height="15" fill="rgb(219,9,5)" fg:x="202391" fg:w="46"/><text x="81.1763%" y="463.50"></text></g><g><title>do_futex (61 samples, 0.02%)</title><rect x="80.9231%" y="517" width="0.0244%" height="15" fill="rgb(254,171,16)" fg:x="202383" fg:w="61"/><text x="81.1731%" y="527.50"></text></g><g><title>futex_wait (61 samples, 0.02%)</title><rect x="80.9231%" y="501" width="0.0244%" height="15" fill="rgb(230,171,20)" fg:x="202383" fg:w="61"/><text x="81.1731%" y="511.50"></text></g><g><title>__x64_sys_futex (62 samples, 0.02%)</title><rect x="80.9231%" y="533" width="0.0248%" height="15" fill="rgb(210,71,41)" fg:x="202383" fg:w="62"/><text x="81.1731%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (70 samples, 0.03%)</title><rect x="80.9231%" y="565" width="0.0280%" height="15" fill="rgb(206,173,20)" fg:x="202383" fg:w="70"/><text x="81.1731%" y="575.50"></text></g><g><title>do_syscall_64 (70 samples, 0.03%)</title><rect x="80.9231%" y="549" width="0.0280%" height="15" fill="rgb(233,88,34)" fg:x="202383" fg:w="70"/><text x="81.1731%" y="559.50"></text></g><g><title>__GI___lll_lock_wait_private (83 samples, 0.03%)</title><rect x="80.9191%" y="581" width="0.0332%" height="15" fill="rgb(223,209,46)" fg:x="202373" fg:w="83"/><text x="81.1691%" y="591.50"></text></g><g><title>malloc_consolidate (259 samples, 0.10%)</title><rect x="80.9535%" y="581" width="0.1036%" height="15" fill="rgb(250,43,18)" fg:x="202459" fg:w="259"/><text x="81.2035%" y="591.50"></text></g><g><title>unlink_chunk.constprop.0 (52 samples, 0.02%)</title><rect x="81.0363%" y="565" width="0.0208%" height="15" fill="rgb(208,13,10)" fg:x="202666" fg:w="52"/><text x="81.2863%" y="575.50"></text></g><g><title>_int_free (1,831 samples, 0.73%)</title><rect x="80.3325%" y="597" width="0.7321%" height="15" fill="rgb(212,200,36)" fg:x="200906" fg:w="1831"/><text x="80.5825%" y="607.50"></text></g><g><title>__free (2,937 samples, 1.17%)</title><rect x="79.8915%" y="613" width="1.1744%" height="15" fill="rgb(225,90,30)" fg:x="199803" fg:w="2937"/><text x="80.1415%" y="623.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (31 samples, 0.01%)</title><rect x="86.4031%" y="597" width="0.0124%" height="15" fill="rgb(236,182,39)" fg:x="216088" fg:w="31"/><text x="86.6531%" y="607.50"></text></g><g><title>sysvec_apic_timer_interrupt (31 samples, 0.01%)</title><rect x="86.4031%" y="581" width="0.0124%" height="15" fill="rgb(212,144,35)" fg:x="216088" fg:w="31"/><text x="86.6531%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (19,135 samples, 7.65%)</title><rect x="79.6260%" y="661" width="7.6512%" height="15" fill="rgb(228,63,44)" fg:x="199139" fg:w="19135"/><text x="79.8760%" y="671.50">alloc::vec..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (19,135 samples, 7.65%)</title><rect x="79.6260%" y="645" width="7.6512%" height="15" fill="rgb(228,109,6)" fg:x="199139" fg:w="19135"/><text x="79.8760%" y="655.50">alloc::vec..</text></g><g><title>core::ptr::drop_in_place&lt;[hprof_slurp::parser::record::Record]&gt; (19,135 samples, 7.65%)</title><rect x="79.6260%" y="629" width="7.6512%" height="15" fill="rgb(238,117,24)" fg:x="199139" fg:w="19135"/><text x="79.8760%" y="639.50">core::ptr:..</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::record::Record&gt; (15,502 samples, 6.20%)</title><rect x="81.0786%" y="613" width="6.1985%" height="15" fill="rgb(242,26,26)" fg:x="202772" fg:w="15502"/><text x="81.3286%" y="623.50">core::pt..</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::gc_record::GcRecord&gt; (2,155 samples, 0.86%)</title><rect x="86.4155%" y="597" width="0.8617%" height="15" fill="rgb(221,92,48)" fg:x="216119" fg:w="2155"/><text x="86.6655%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::parser::gc_record::ArrayValue&gt; (176 samples, 0.07%)</title><rect x="87.2068%" y="581" width="0.0704%" height="15" fill="rgb(209,209,32)" fg:x="218098" fg:w="176"/><text x="87.4568%" y="591.50"></text></g><g><title>__free (32 samples, 0.01%)</title><rect x="87.2775%" y="389" width="0.0128%" height="15" fill="rgb(221,70,22)" fg:x="218275" fg:w="32"/><text x="87.5275%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.01%)</title><rect x="87.2771%" y="565" width="0.0136%" height="15" fill="rgb(248,145,5)" fg:x="218274" fg:w="34"/><text x="87.5271%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (34 samples, 0.01%)</title><rect x="87.2771%" y="549" width="0.0136%" height="15" fill="rgb(226,116,26)" fg:x="218274" fg:w="34"/><text x="87.5271%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (33 samples, 0.01%)</title><rect x="87.2775%" y="533" width="0.0132%" height="15" fill="rgb(244,5,17)" fg:x="218275" fg:w="33"/><text x="87.5275%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (33 samples, 0.01%)</title><rect x="87.2775%" y="517" width="0.0132%" height="15" fill="rgb(252,159,33)" fg:x="218275" fg:w="33"/><text x="87.5275%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u64,alloc::string::String)&gt; (33 samples, 0.01%)</title><rect x="87.2775%" y="501" width="0.0132%" height="15" fill="rgb(206,71,0)" fg:x="218275" fg:w="33"/><text x="87.5275%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (33 samples, 0.01%)</title><rect x="87.2775%" y="485" width="0.0132%" height="15" fill="rgb(233,118,54)" fg:x="218275" fg:w="33"/><text x="87.5275%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (33 samples, 0.01%)</title><rect x="87.2775%" y="469" width="0.0132%" height="15" fill="rgb(234,83,48)" fg:x="218275" fg:w="33"/><text x="87.5275%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (33 samples, 0.01%)</title><rect x="87.2775%" y="453" width="0.0132%" height="15" fill="rgb(228,3,54)" fg:x="218275" fg:w="33"/><text x="87.5275%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.01%)</title><rect x="87.2775%" y="437" width="0.0132%" height="15" fill="rgb(226,155,13)" fg:x="218275" fg:w="33"/><text x="87.5275%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.01%)</title><rect x="87.2775%" y="421" width="0.0132%" height="15" fill="rgb(241,28,37)" fg:x="218275" fg:w="33"/><text x="87.5275%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.01%)</title><rect x="87.2775%" y="405" width="0.0132%" height="15" fill="rgb(233,93,10)" fg:x="218275" fg:w="33"/><text x="87.5275%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder::start::{{closure}}&gt; (35 samples, 0.01%)</title><rect x="87.2771%" y="661" width="0.0140%" height="15" fill="rgb(225,113,19)" fg:x="218274" fg:w="35"/><text x="87.5271%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder&gt; (35 samples, 0.01%)</title><rect x="87.2771%" y="645" width="0.0140%" height="15" fill="rgb(241,2,18)" fg:x="218274" fg:w="35"/><text x="87.5271%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;ahash::hash_map::AHashMap&lt;u64,alloc::string::String&gt;&gt; (35 samples, 0.01%)</title><rect x="87.2771%" y="629" width="0.0140%" height="15" fill="rgb(228,207,21)" fg:x="218274" fg:w="35"/><text x="87.5271%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (35 samples, 0.01%)</title><rect x="87.2771%" y="613" width="0.0140%" height="15" fill="rgb(213,211,35)" fg:x="218274" fg:w="35"/><text x="87.5271%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,ahash::random_state::RandomState&gt;&gt; (35 samples, 0.01%)</title><rect x="87.2771%" y="597" width="0.0140%" height="15" fill="rgb(209,83,10)" fg:x="218274" fg:w="35"/><text x="87.5271%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (35 samples, 0.01%)</title><rect x="87.2771%" y="581" width="0.0140%" height="15" fill="rgb(209,164,1)" fg:x="218274" fg:w="35"/><text x="87.5271%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (522 samples, 0.21%)</title><rect x="87.2911%" y="629" width="0.2087%" height="15" fill="rgb(213,184,43)" fg:x="218309" fg:w="522"/><text x="87.5411%" y="639.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (44 samples, 0.02%)</title><rect x="87.4823%" y="613" width="0.0176%" height="15" fill="rgb(231,61,34)" fg:x="218787" fg:w="44"/><text x="87.7323%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (44 samples, 0.02%)</title><rect x="87.4823%" y="597" width="0.0176%" height="15" fill="rgb(235,75,3)" fg:x="218787" fg:w="44"/><text x="87.7323%" y="607.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (28 samples, 0.01%)</title><rect x="94.6956%" y="613" width="0.0112%" height="15" fill="rgb(220,106,47)" fg:x="236827" fg:w="28"/><text x="94.9456%" y="623.50"></text></g><g><title>sysvec_apic_timer_interrupt (28 samples, 0.01%)</title><rect x="94.6956%" y="597" width="0.0112%" height="15" fill="rgb(210,196,33)" fg:x="236827" fg:w="28"/><text x="94.9456%" y="607.50"></text></g><g><title>hprof_slurp::result_recorder::ArrayCounter::add_elements_from_array (57 samples, 0.02%)</title><rect x="94.7076%" y="613" width="0.0228%" height="15" fill="rgb(229,154,42)" fg:x="236857" fg:w="57"/><text x="94.9576%" y="623.50"></text></g><g><title>hprof_slurp::result_recorder::ClassInstanceCounter::add_instance (1,863 samples, 0.74%)</title><rect x="94.7304%" y="613" width="0.7449%" height="15" fill="rgb(228,114,26)" fg:x="236914" fg:w="1863"/><text x="94.9804%" y="623.50"></text></g><g><title>ahash::operations::folded_multiply (955 samples, 0.38%)</title><rect x="95.4757%" y="533" width="0.3819%" height="15" fill="rgb(208,144,1)" fg:x="238778" fg:w="955"/><text x="95.7257%" y="543.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (702 samples, 0.28%)</title><rect x="95.5768%" y="517" width="0.2807%" height="15" fill="rgb(239,112,37)" fg:x="239031" fg:w="702"/><text x="95.8268%" y="527.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1,489 samples, 0.60%)</title><rect x="95.4757%" y="549" width="0.5954%" height="15" fill="rgb(210,96,50)" fg:x="238778" fg:w="1489"/><text x="95.7257%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (534 samples, 0.21%)</title><rect x="95.8575%" y="533" width="0.2135%" height="15" fill="rgb(222,178,2)" fg:x="239733" fg:w="534"/><text x="96.1075%" y="543.50"></text></g><g><title>hashbrown::map::make_insert_hash (2,643 samples, 1.06%)</title><rect x="95.4757%" y="581" width="1.0568%" height="15" fill="rgb(226,74,18)" fg:x="238778" fg:w="2643"/><text x="95.7257%" y="591.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,643 samples, 1.06%)</title><rect x="95.4757%" y="565" width="1.0568%" height="15" fill="rgb(225,67,54)" fg:x="238778" fg:w="2643"/><text x="95.7257%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,154 samples, 0.46%)</title><rect x="96.0711%" y="549" width="0.4614%" height="15" fill="rgb(251,92,32)" fg:x="240267" fg:w="1154"/><text x="96.3211%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1,135 samples, 0.45%)</title><rect x="96.0787%" y="533" width="0.4538%" height="15" fill="rgb(228,149,22)" fg:x="240286" fg:w="1135"/><text x="96.3287%" y="543.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1,135 samples, 0.45%)</title><rect x="96.0787%" y="517" width="0.4538%" height="15" fill="rgb(243,54,13)" fg:x="240286" fg:w="1135"/><text x="96.3287%" y="527.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1,135 samples, 0.45%)</title><rect x="96.0787%" y="501" width="0.4538%" height="15" fill="rgb(243,180,28)" fg:x="240286" fg:w="1135"/><text x="96.3287%" y="511.50"></text></g><g><title>ahash::operations::folded_multiply (849 samples, 0.34%)</title><rect x="96.1930%" y="485" width="0.3395%" height="15" fill="rgb(208,167,24)" fg:x="240572" fg:w="849"/><text x="96.4430%" y="495.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (668 samples, 0.27%)</title><rect x="96.2654%" y="469" width="0.2671%" height="15" fill="rgb(245,73,45)" fg:x="240753" fg:w="668"/><text x="96.5154%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,365 samples, 0.55%)</title><rect x="96.9651%" y="549" width="0.5458%" height="15" fill="rgb(237,203,48)" fg:x="242503" fg:w="1365"/><text x="97.2151%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1,188 samples, 0.48%)</title><rect x="97.0359%" y="533" width="0.4750%" height="15" fill="rgb(211,197,16)" fg:x="242680" fg:w="1188"/><text x="97.2859%" y="543.50"></text></g><g><title>hashbrown::raw::ProbeSeq::move_next (41 samples, 0.02%)</title><rect x="97.5121%" y="549" width="0.0164%" height="15" fill="rgb(243,99,51)" fg:x="243871" fg:w="41"/><text x="97.7621%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (676 samples, 0.27%)</title><rect x="97.5285%" y="533" width="0.2703%" height="15" fill="rgb(215,123,29)" fg:x="243912" fg:w="676"/><text x="97.7785%" y="543.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (676 samples, 0.27%)</title><rect x="97.5285%" y="517" width="0.2703%" height="15" fill="rgb(239,186,37)" fg:x="243912" fg:w="676"/><text x="97.7785%" y="527.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (662 samples, 0.26%)</title><rect x="97.5341%" y="501" width="0.2647%" height="15" fill="rgb(252,136,39)" fg:x="243926" fg:w="662"/><text x="97.7841%" y="511.50"></text></g><g><title>&lt;hprof_slurp::parser::gc_record::FieldType as core::cmp::PartialEq&gt;::eq (27 samples, 0.01%)</title><rect x="97.7988%" y="517" width="0.0108%" height="15" fill="rgb(223,213,32)" fg:x="244588" fg:w="27"/><text x="98.0488%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2,643 samples, 1.06%)</title><rect x="97.5285%" y="549" width="1.0568%" height="15" fill="rgb(233,115,5)" fg:x="243912" fg:w="2643"/><text x="97.7785%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (1,967 samples, 0.79%)</title><rect x="97.7988%" y="533" width="0.7865%" height="15" fill="rgb(207,226,44)" fg:x="244588" fg:w="1967"/><text x="98.0488%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (1,940 samples, 0.78%)</title><rect x="97.8096%" y="517" width="0.7757%" height="15" fill="rgb(208,126,0)" fg:x="244615" fg:w="1940"/><text x="98.0596%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1,381 samples, 0.55%)</title><rect x="98.5853%" y="549" width="0.5522%" height="15" fill="rgb(244,66,21)" fg:x="246555" fg:w="1381"/><text x="98.8353%" y="559.50"></text></g><g><title>hashbrown::raw::h2 (214 samples, 0.09%)</title><rect x="99.1387%" y="549" width="0.0856%" height="15" fill="rgb(222,97,12)" fg:x="247939" fg:w="214"/><text x="99.3887%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (566 samples, 0.23%)</title><rect x="99.2243%" y="549" width="0.2263%" height="15" fill="rgb(219,213,19)" fg:x="248153" fg:w="566"/><text x="99.4743%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (566 samples, 0.23%)</title><rect x="99.2243%" y="533" width="0.2263%" height="15" fill="rgb(252,169,30)" fg:x="248153" fg:w="566"/><text x="99.4743%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (566 samples, 0.23%)</title><rect x="99.2243%" y="517" width="0.2263%" height="15" fill="rgb(206,32,51)" fg:x="248153" fg:w="566"/><text x="99.4743%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (988 samples, 0.40%)</title><rect x="99.4506%" y="549" width="0.3951%" height="15" fill="rgb(250,172,42)" fg:x="248719" fg:w="988"/><text x="99.7006%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (988 samples, 0.40%)</title><rect x="99.4506%" y="533" width="0.3951%" height="15" fill="rgb(209,34,43)" fg:x="248719" fg:w="988"/><text x="99.7006%" y="543.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (31,688 samples, 12.67%)</title><rect x="87.2911%" y="661" width="12.6705%" height="15" fill="rgb(223,11,35)" fg:x="218309" fg:w="31688"/><text x="87.5411%" y="671.50">hprof_slurp::result..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (31,688 samples, 12.67%)</title><rect x="87.2911%" y="645" width="12.6705%" height="15" fill="rgb(251,219,26)" fg:x="218309" fg:w="31688"/><text x="87.5411%" y="655.50">&lt;core::slice::iter:..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (31,166 samples, 12.46%)</title><rect x="87.4999%" y="629" width="12.4618%" height="15" fill="rgb(231,119,3)" fg:x="218831" fg:w="31166"/><text x="87.7499%" y="639.50">hprof_slurp::result..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (11,219 samples, 4.49%)</title><rect x="95.4757%" y="613" width="4.4859%" height="15" fill="rgb(216,97,11)" fg:x="238778" fg:w="11219"/><text x="95.7257%" y="623.50">std::..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (11,219 samples, 4.49%)</title><rect x="95.4757%" y="597" width="4.4859%" height="15" fill="rgb(223,59,9)" fg:x="238778" fg:w="11219"/><text x="95.7257%" y="607.50">hashb..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8,576 samples, 3.43%)</title><rect x="96.5325%" y="581" width="3.4291%" height="15" fill="rgb(233,93,31)" fg:x="241421" fg:w="8576"/><text x="96.7825%" y="591.50">has..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (8,576 samples, 3.43%)</title><rect x="96.5325%" y="565" width="3.4291%" height="15" fill="rgb(239,81,33)" fg:x="241421" fg:w="8576"/><text x="96.7825%" y="575.50">has..</text></g><g><title>hashbrown::raw::sse2::Group::match_empty (290 samples, 0.12%)</title><rect x="99.8457%" y="549" width="0.1160%" height="15" fill="rgb(213,120,34)" fg:x="249707" fg:w="290"/><text x="100.0957%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (290 samples, 0.12%)</title><rect x="99.8457%" y="533" width="0.1160%" height="15" fill="rgb(243,49,53)" fg:x="249707" fg:w="290"/><text x="100.0957%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (290 samples, 0.12%)</title><rect x="99.8457%" y="517" width="0.1160%" height="15" fill="rgb(247,216,33)" fg:x="249707" fg:w="290"/><text x="100.0957%" y="527.50"></text></g><g><title>std::panic::catch_unwind (50,872 samples, 20.34%)</title><rect x="79.6260%" y="773" width="20.3412%" height="15" fill="rgb(226,26,14)" fg:x="199139" fg:w="50872"/><text x="79.8760%" y="783.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (50,872 samples, 20.34%)</title><rect x="79.6260%" y="757" width="20.3412%" height="15" fill="rgb(215,49,53)" fg:x="199139" fg:w="50872"/><text x="79.8760%" y="767.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (50,872 samples, 20.34%)</title><rect x="79.6260%" y="741" width="20.3412%" height="15" fill="rgb(245,162,40)" fg:x="199139" fg:w="50872"/><text x="79.8760%" y="751.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (50,872 samples, 20.34%)</title><rect x="79.6260%" y="725" width="20.3412%" height="15" fill="rgb(229,68,17)" fg:x="199139" fg:w="50872"/><text x="79.8760%" y="735.50">&lt;core::panic::unwind_safe::Asser..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (50,872 samples, 20.34%)</title><rect x="79.6260%" y="709" width="20.3412%" height="15" fill="rgb(213,182,10)" fg:x="199139" fg:w="50872"/><text x="79.8760%" y="719.50">std::thread::Builder::spawn_unch..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (50,872 samples, 20.34%)</title><rect x="79.6260%" y="693" width="20.3412%" height="15" fill="rgb(245,125,30)" fg:x="199139" fg:w="50872"/><text x="79.8760%" y="703.50">std::sys_common::backtrace::__ru..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start::{{closure}} (50,872 samples, 20.34%)</title><rect x="79.6260%" y="677" width="20.3412%" height="15" fill="rgb(232,202,2)" fg:x="199139" fg:w="50872"/><text x="79.8760%" y="687.50">hprof_slurp::result_recorder::Re..</text></g><g><title>__GI___clone (50,873 samples, 20.34%)</title><rect x="79.6260%" y="885" width="20.3416%" height="15" fill="rgb(237,140,51)" fg:x="199139" fg:w="50873"/><text x="79.8760%" y="895.50">__GI___clone</text></g><g><title>start_thread (50,873 samples, 20.34%)</title><rect x="79.6260%" y="869" width="20.3416%" height="15" fill="rgb(236,157,25)" fg:x="199139" fg:w="50873"/><text x="79.8760%" y="879.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (50,873 samples, 20.34%)</title><rect x="79.6260%" y="853" width="20.3416%" height="15" fill="rgb(219,209,0)" fg:x="199139" fg:w="50873"/><text x="79.8760%" y="863.50">std::sys::unix::thread::Thread::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50,873 samples, 20.34%)</title><rect x="79.6260%" y="837" width="20.3416%" height="15" fill="rgb(240,116,54)" fg:x="199139" fg:w="50873"/><text x="79.8760%" y="847.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50,873 samples, 20.34%)</title><rect x="79.6260%" y="821" width="20.3416%" height="15" fill="rgb(216,10,36)" fg:x="199139" fg:w="50873"/><text x="79.8760%" y="831.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (50,873 samples, 20.34%)</title><rect x="79.6260%" y="805" width="20.3416%" height="15" fill="rgb(222,72,44)" fg:x="199139" fg:w="50873"/><text x="79.8760%" y="815.50">core::ops::function::FnOnce::cal..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (50,873 samples, 20.34%)</title><rect x="79.6260%" y="789" width="20.3416%" height="15" fill="rgb(232,159,9)" fg:x="199139" fg:w="50873"/><text x="79.8760%" y="799.50">std::thread::Builder::spawn_unch..</text></g><g><title>hprof-recorder (52,704 samples, 21.07%)</title><rect x="78.8951%" y="901" width="21.0738%" height="15" fill="rgb(210,39,32)" fg:x="197311" fg:w="52704"/><text x="79.1451%" y="911.50">hprof-recorder</text></g><g><title>_start (47 samples, 0.02%)</title><rect x="99.9768%" y="885" width="0.0188%" height="15" fill="rgb(216,194,45)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="895.50"></text></g><g><title>__libc_start_main_alias_2 (47 samples, 0.02%)</title><rect x="99.9768%" y="869" width="0.0188%" height="15" fill="rgb(218,18,35)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="879.50"></text></g><g><title>__libc_start_call_main (47 samples, 0.02%)</title><rect x="99.9768%" y="853" width="0.0188%" height="15" fill="rgb(207,83,51)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="863.50"></text></g><g><title>main (47 samples, 0.02%)</title><rect x="99.9768%" y="837" width="0.0188%" height="15" fill="rgb(225,63,43)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="847.50"></text></g><g><title>std::rt::lang_start_internal (47 samples, 0.02%)</title><rect x="99.9768%" y="821" width="0.0188%" height="15" fill="rgb(207,57,36)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="831.50"></text></g><g><title>std::panic::catch_unwind (47 samples, 0.02%)</title><rect x="99.9768%" y="805" width="0.0188%" height="15" fill="rgb(216,99,33)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="815.50"></text></g><g><title>std::panicking::try (47 samples, 0.02%)</title><rect x="99.9768%" y="789" width="0.0188%" height="15" fill="rgb(225,42,16)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="799.50"></text></g><g><title>std::panicking::try::do_call (47 samples, 0.02%)</title><rect x="99.9768%" y="773" width="0.0188%" height="15" fill="rgb(220,201,45)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="783.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (47 samples, 0.02%)</title><rect x="99.9768%" y="757" width="0.0188%" height="15" fill="rgb(225,33,4)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="767.50"></text></g><g><title>std::panic::catch_unwind (47 samples, 0.02%)</title><rect x="99.9768%" y="741" width="0.0188%" height="15" fill="rgb(224,33,50)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="751.50"></text></g><g><title>std::panicking::try (47 samples, 0.02%)</title><rect x="99.9768%" y="725" width="0.0188%" height="15" fill="rgb(246,198,51)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="735.50"></text></g><g><title>std::panicking::try::do_call (47 samples, 0.02%)</title><rect x="99.9768%" y="709" width="0.0188%" height="15" fill="rgb(205,22,4)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (47 samples, 0.02%)</title><rect x="99.9768%" y="693" width="0.0188%" height="15" fill="rgb(206,3,8)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="703.50"></text></g><g><title>std::rt::lang_start::{{closure}} (47 samples, 0.02%)</title><rect x="99.9768%" y="677" width="0.0188%" height="15" fill="rgb(251,23,15)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="687.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (47 samples, 0.02%)</title><rect x="99.9768%" y="661" width="0.0188%" height="15" fill="rgb(252,88,28)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (47 samples, 0.02%)</title><rect x="99.9768%" y="645" width="0.0188%" height="15" fill="rgb(212,127,14)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="655.50"></text></g><g><title>hprof_slurp::main (47 samples, 0.02%)</title><rect x="99.9768%" y="629" width="0.0188%" height="15" fill="rgb(247,145,37)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="639.50"></text></g><g><title>hprof_slurp::main_result (47 samples, 0.02%)</title><rect x="99.9768%" y="613" width="0.0188%" height="15" fill="rgb(209,117,53)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="623.50"></text></g><g><title>hprof_slurp::slurp::slurp_file (47 samples, 0.02%)</title><rect x="99.9768%" y="597" width="0.0188%" height="15" fill="rgb(212,90,42)" fg:x="250035" fg:w="47"/><text x="100.2268%" y="607.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (27 samples, 0.01%)</title><rect x="99.9848%" y="581" width="0.0108%" height="15" fill="rgb(218,164,37)" fg:x="250055" fg:w="27"/><text x="100.2348%" y="591.50"></text></g><g><title>std::sync::mpsc::stream::Packet&lt;T&gt;::recv (27 samples, 0.01%)</title><rect x="99.9848%" y="565" width="0.0108%" height="15" fill="rgb(246,65,34)" fg:x="250055" fg:w="27"/><text x="100.2348%" y="575.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (26 samples, 0.01%)</title><rect x="99.9852%" y="549" width="0.0104%" height="15" fill="rgb(231,100,33)" fg:x="250056" fg:w="26"/><text x="100.2352%" y="559.50"></text></g><g><title>std::thread::park (26 samples, 0.01%)</title><rect x="99.9852%" y="533" width="0.0104%" height="15" fill="rgb(228,126,14)" fg:x="250056" fg:w="26"/><text x="100.2352%" y="543.50"></text></g><g><title>std::sys_common::thread_parker::futex::Parker::park (26 samples, 0.01%)</title><rect x="99.9852%" y="517" width="0.0104%" height="15" fill="rgb(215,173,21)" fg:x="250056" fg:w="26"/><text x="100.2352%" y="527.50"></text></g><g><title>std::sys::unix::futex::futex_wait (26 samples, 0.01%)</title><rect x="99.9852%" y="501" width="0.0104%" height="15" fill="rgb(210,6,40)" fg:x="250056" fg:w="26"/><text x="100.2352%" y="511.50"></text></g><g><title>syscall (26 samples, 0.01%)</title><rect x="99.9852%" y="485" width="0.0104%" height="15" fill="rgb(212,48,18)" fg:x="250056" fg:w="26"/><text x="100.2352%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (26 samples, 0.01%)</title><rect x="99.9852%" y="469" width="0.0104%" height="15" fill="rgb(230,214,11)" fg:x="250056" fg:w="26"/><text x="100.2352%" y="479.50"></text></g><g><title>do_syscall_64 (26 samples, 0.01%)</title><rect x="99.9852%" y="453" width="0.0104%" height="15" fill="rgb(254,105,39)" fg:x="250056" fg:w="26"/><text x="100.2352%" y="463.50"></text></g><g><title>__x64_sys_futex (26 samples, 0.01%)</title><rect x="99.9852%" y="437" width="0.0104%" height="15" fill="rgb(245,158,5)" fg:x="250056" fg:w="26"/><text x="100.2352%" y="447.50"></text></g><g><title>do_futex (26 samples, 0.01%)</title><rect x="99.9852%" y="421" width="0.0104%" height="15" fill="rgb(249,208,11)" fg:x="250056" fg:w="26"/><text x="100.2352%" y="431.50"></text></g><g><title>futex_wait (26 samples, 0.01%)</title><rect x="99.9852%" y="405" width="0.0104%" height="15" fill="rgb(210,39,28)" fg:x="250056" fg:w="26"/><text x="100.2352%" y="415.50"></text></g><g><title>futex_wait_queue_me (26 samples, 0.01%)</title><rect x="99.9852%" y="389" width="0.0104%" height="15" fill="rgb(211,56,53)" fg:x="250056" fg:w="26"/><text x="100.2352%" y="399.50"></text></g><g><title>hprof-slurp (73 samples, 0.03%)</title><rect x="99.9688%" y="901" width="0.0292%" height="15" fill="rgb(226,201,30)" fg:x="250015" fg:w="73"/><text x="100.2188%" y="911.50"></text></g><g><title>all (250,093 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(239,101,34)" fg:x="0" fg:w="250093"/><text x="0.2500%" y="927.50"></text></g></svg></svg>