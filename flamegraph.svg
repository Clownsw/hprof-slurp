<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="998" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="981.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="981.00"> </text><svg id="frames" x="10" width="1180" total_samples="304599"><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (319 samples, 0.10%)</title><rect x="0.0279%" y="885" width="0.1047%" height="15" fill="rgb(227,0,7)" fg:x="85" fg:w="319"/><text x="0.2779%" y="895.50"></text></g><g><title>core::ops::function::FnMut::call_mut (319 samples, 0.10%)</title><rect x="0.0279%" y="869" width="0.1047%" height="15" fill="rgb(217,0,24)" fg:x="85" fg:w="319"/><text x="0.2779%" y="879.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i8 (307 samples, 0.10%)</title><rect x="0.0318%" y="853" width="0.1008%" height="15" fill="rgb(221,193,54)" fg:x="97" fg:w="307"/><text x="0.2818%" y="863.50"></text></g><g><title>nom::number::streaming::be_i8 (307 samples, 0.10%)</title><rect x="0.0318%" y="837" width="0.1008%" height="15" fill="rgb(248,212,6)" fg:x="97" fg:w="307"/><text x="0.2818%" y="847.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (335 samples, 0.11%)</title><rect x="0.0240%" y="917" width="0.1100%" height="15" fill="rgb(208,68,35)" fg:x="73" fg:w="335"/><text x="0.2740%" y="927.50"></text></g><g><title>nom::multi::count::{{closure}} (323 samples, 0.11%)</title><rect x="0.0279%" y="901" width="0.1060%" height="15" fill="rgb(232,128,0)" fg:x="85" fg:w="323"/><text x="0.2779%" y="911.50"></text></g><g><title>nom::combinator::mapc (469 samples, 0.15%)</title><rect x="0.1513%" y="901" width="0.1540%" height="15" fill="rgb(207,160,47)" fg:x="461" fg:w="469"/><text x="0.4013%" y="911.50"></text></g><g><title>[[heap]] (524 samples, 0.17%)</title><rect x="0.1339%" y="917" width="0.1720%" height="15" fill="rgb(228,23,34)" fg:x="408" fg:w="524"/><text x="0.3839%" y="927.50"></text></g><g><title>nom::combinator::mapc (88 samples, 0.03%)</title><rect x="0.3073%" y="901" width="0.0289%" height="15" fill="rgb(218,30,26)" fg:x="936" fg:w="88"/><text x="0.5573%" y="911.50"></text></g><g><title>[[stack]] (118 samples, 0.04%)</title><rect x="0.3060%" y="917" width="0.0387%" height="15" fill="rgb(220,122,19)" fg:x="932" fg:w="118"/><text x="0.5560%" y="927.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u32 (1,025 samples, 0.34%)</title><rect x="0.5007%" y="853" width="0.3365%" height="15" fill="rgb(250,228,42)" fg:x="1525" fg:w="1025"/><text x="0.7507%" y="863.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (2,275 samples, 0.75%)</title><rect x="0.3447%" y="901" width="0.7469%" height="15" fill="rgb(240,193,28)" fg:x="1050" fg:w="2275"/><text x="0.5947%" y="911.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,800 samples, 0.59%)</title><rect x="0.5007%" y="885" width="0.5909%" height="15" fill="rgb(216,20,37)" fg:x="1525" fg:w="1800"/><text x="0.7507%" y="895.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,800 samples, 0.59%)</title><rect x="0.5007%" y="869" width="0.5909%" height="15" fill="rgb(206,188,39)" fg:x="1525" fg:w="1800"/><text x="0.7507%" y="879.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (775 samples, 0.25%)</title><rect x="0.8372%" y="853" width="0.2544%" height="15" fill="rgb(217,207,13)" fg:x="2550" fg:w="775"/><text x="1.0872%" y="863.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (775 samples, 0.25%)</title><rect x="0.8372%" y="837" width="0.2544%" height="15" fill="rgb(231,73,38)" fg:x="2550" fg:w="775"/><text x="1.0872%" y="847.50"></text></g><g><title>__GI___libc_free (31 samples, 0.01%)</title><rect x="1.0916%" y="901" width="0.0102%" height="15" fill="rgb(225,20,46)" fg:x="3325" fg:w="31"/><text x="1.3416%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (447 samples, 0.15%)</title><rect x="1.1103%" y="901" width="0.1468%" height="15" fill="rgb(210,31,41)" fg:x="3382" fg:w="447"/><text x="1.3603%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::GcRecord&gt; (427 samples, 0.14%)</title><rect x="1.2676%" y="901" width="0.1402%" height="15" fill="rgb(221,200,47)" fg:x="3861" fg:w="427"/><text x="1.5176%" y="911.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1,649 samples, 0.54%)</title><rect x="1.4078%" y="901" width="0.5414%" height="15" fill="rgb(226,26,5)" fg:x="4288" fg:w="1649"/><text x="1.6578%" y="911.50"></text></g><g><title>hashbrown::map::make_insert_hash (91 samples, 0.03%)</title><rect x="1.9192%" y="885" width="0.0299%" height="15" fill="rgb(249,33,26)" fg:x="5846" fg:w="91"/><text x="2.1692%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (78 samples, 0.03%)</title><rect x="1.9235%" y="869" width="0.0256%" height="15" fill="rgb(235,183,28)" fg:x="5859" fg:w="78"/><text x="2.1735%" y="879.50"></text></g><g><title>core::hash::Hasher::write_u64 (78 samples, 0.03%)</title><rect x="1.9235%" y="853" width="0.0256%" height="15" fill="rgb(221,5,38)" fg:x="5859" fg:w="78"/><text x="2.1735%" y="863.50"></text></g><g><title>[anon] (5,320 samples, 1.75%)</title><rect x="0.3447%" y="917" width="1.7466%" height="15" fill="rgb(247,18,42)" fg:x="1050" fg:w="5320"/><text x="0.5947%" y="927.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (433 samples, 0.14%)</title><rect x="1.9491%" y="901" width="0.1422%" height="15" fill="rgb(241,131,45)" fg:x="5937" fg:w="433"/><text x="2.1991%" y="911.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (1,204 samples, 0.40%)</title><rect x="2.0936%" y="901" width="0.3953%" height="15" fill="rgb(249,31,29)" fg:x="6377" fg:w="1204"/><text x="2.3436%" y="911.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (127 samples, 0.04%)</title><rect x="2.5079%" y="869" width="0.0417%" height="15" fill="rgb(225,111,53)" fg:x="7639" fg:w="127"/><text x="2.7579%" y="879.50"></text></g><g><title>core::ops::function::FnMut::call_mut (127 samples, 0.04%)</title><rect x="2.5079%" y="853" width="0.0417%" height="15" fill="rgb(238,160,17)" fg:x="7639" fg:w="127"/><text x="2.7579%" y="863.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (127 samples, 0.04%)</title><rect x="2.5079%" y="837" width="0.0417%" height="15" fill="rgb(214,148,48)" fg:x="7639" fg:w="127"/><text x="2.7579%" y="847.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (127 samples, 0.04%)</title><rect x="2.5079%" y="821" width="0.0417%" height="15" fill="rgb(232,36,49)" fg:x="7639" fg:w="127"/><text x="2.7579%" y="831.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (189 samples, 0.06%)</title><rect x="2.4888%" y="901" width="0.0620%" height="15" fill="rgb(209,103,24)" fg:x="7581" fg:w="189"/><text x="2.7388%" y="911.50"></text></g><g><title>nom::multi::count::{{closure}} (131 samples, 0.04%)</title><rect x="2.5079%" y="885" width="0.0430%" height="15" fill="rgb(229,88,8)" fg:x="7639" fg:w="131"/><text x="2.7579%" y="895.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (526 samples, 0.17%)</title><rect x="2.5558%" y="901" width="0.1727%" height="15" fill="rgb(213,181,19)" fg:x="7785" fg:w="526"/><text x="2.8058%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (101 samples, 0.03%)</title><rect x="2.7288%" y="901" width="0.0332%" height="15" fill="rgb(254,191,54)" fg:x="8312" fg:w="101"/><text x="2.9788%" y="911.50"></text></g><g><title>_int_malloc (63 samples, 0.02%)</title><rect x="2.7735%" y="901" width="0.0207%" height="15" fill="rgb(241,83,37)" fg:x="8448" fg:w="63"/><text x="3.0235%" y="911.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (84 samples, 0.03%)</title><rect x="2.7955%" y="901" width="0.0276%" height="15" fill="rgb(233,36,39)" fg:x="8515" fg:w="84"/><text x="3.0455%" y="911.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_instance_dump (325 samples, 0.11%)</title><rect x="3.3799%" y="869" width="0.1067%" height="15" fill="rgb(226,3,54)" fg:x="10295" fg:w="325"/><text x="3.6299%" y="879.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (325 samples, 0.11%)</title><rect x="3.3799%" y="853" width="0.1067%" height="15" fill="rgb(245,192,40)" fg:x="10295" fg:w="325"/><text x="3.6299%" y="863.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (325 samples, 0.11%)</title><rect x="3.3799%" y="837" width="0.1067%" height="15" fill="rgb(238,167,29)" fg:x="10295" fg:w="325"/><text x="3.6299%" y="847.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (325 samples, 0.11%)</title><rect x="3.3799%" y="821" width="0.1067%" height="15" fill="rgb(232,182,51)" fg:x="10295" fg:w="325"/><text x="3.6299%" y="831.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (2,094 samples, 0.69%)</title><rect x="2.8231%" y="901" width="0.6875%" height="15" fill="rgb(231,60,39)" fg:x="8599" fg:w="2094"/><text x="3.0731%" y="911.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (398 samples, 0.13%)</title><rect x="3.3799%" y="885" width="0.1307%" height="15" fill="rgb(208,69,12)" fg:x="10295" fg:w="398"/><text x="3.6299%" y="895.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_primitive_array_dump (65 samples, 0.02%)</title><rect x="3.4892%" y="869" width="0.0213%" height="15" fill="rgb(235,93,37)" fg:x="10628" fg:w="65"/><text x="3.7392%" y="879.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (58 samples, 0.02%)</title><rect x="3.4915%" y="853" width="0.0190%" height="15" fill="rgb(213,116,39)" fg:x="10635" fg:w="58"/><text x="3.7415%" y="863.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (58 samples, 0.02%)</title><rect x="3.4915%" y="837" width="0.0190%" height="15" fill="rgb(222,207,29)" fg:x="10635" fg:w="58"/><text x="3.7415%" y="847.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (58 samples, 0.02%)</title><rect x="3.4915%" y="821" width="0.0190%" height="15" fill="rgb(206,96,30)" fg:x="10635" fg:w="58"/><text x="3.7415%" y="831.50"></text></g><g><title>core::ops::function::FnMut::call_mut (58 samples, 0.02%)</title><rect x="3.4915%" y="805" width="0.0190%" height="15" fill="rgb(218,138,4)" fg:x="10635" fg:w="58"/><text x="3.7415%" y="815.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (186 samples, 0.06%)</title><rect x="3.8408%" y="869" width="0.0611%" height="15" fill="rgb(250,191,14)" fg:x="11699" fg:w="186"/><text x="4.0908%" y="879.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (1,639 samples, 0.54%)</title><rect x="3.5105%" y="901" width="0.5381%" height="15" fill="rgb(239,60,40)" fg:x="10693" fg:w="1639"/><text x="3.7605%" y="911.50"></text></g><g><title>hprof_slurp::record_parser::many1_streaming::{{closure}} (1,638 samples, 0.54%)</title><rect x="3.5108%" y="885" width="0.5378%" height="15" fill="rgb(206,27,48)" fg:x="10694" fg:w="1638"/><text x="3.7608%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (447 samples, 0.15%)</title><rect x="3.9019%" y="869" width="0.1468%" height="15" fill="rgb(225,35,8)" fg:x="11885" fg:w="447"/><text x="4.1519%" y="879.50"></text></g><g><title>core::ptr::write (447 samples, 0.15%)</title><rect x="3.9019%" y="853" width="0.1468%" height="15" fill="rgb(250,213,24)" fg:x="11885" fg:w="447"/><text x="4.1519%" y="863.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (1,036 samples, 0.34%)</title><rect x="4.0489%" y="901" width="0.3401%" height="15" fill="rgb(247,123,22)" fg:x="12333" fg:w="1036"/><text x="4.2989%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1,036 samples, 0.34%)</title><rect x="4.0489%" y="885" width="0.3401%" height="15" fill="rgb(231,138,38)" fg:x="12333" fg:w="1036"/><text x="4.2989%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1,036 samples, 0.34%)</title><rect x="4.0489%" y="869" width="0.3401%" height="15" fill="rgb(231,145,46)" fg:x="12333" fg:w="1036"/><text x="4.2989%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1,036 samples, 0.34%)</title><rect x="4.0489%" y="853" width="0.3401%" height="15" fill="rgb(251,118,11)" fg:x="12333" fg:w="1036"/><text x="4.2989%" y="863.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (486 samples, 0.16%)</title><rect x="4.2295%" y="837" width="0.1596%" height="15" fill="rgb(217,147,25)" fg:x="12883" fg:w="486"/><text x="4.4795%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (65 samples, 0.02%)</title><rect x="4.3677%" y="821" width="0.0213%" height="15" fill="rgb(247,81,37)" fg:x="13304" fg:w="65"/><text x="4.6177%" y="831.50"></text></g><g><title>nom::combinator::mapc (46 samples, 0.02%)</title><rect x="4.3897%" y="901" width="0.0151%" height="15" fill="rgb(209,12,38)" fg:x="13371" fg:w="46"/><text x="4.6397%" y="911.50"></text></g><g><title>nom::number::streaming::be_u64 (200 samples, 0.07%)</title><rect x="4.4110%" y="901" width="0.0657%" height="15" fill="rgb(227,1,9)" fg:x="13436" fg:w="200"/><text x="4.6610%" y="911.50"></text></g><g><title>[unknown] (7,266 samples, 2.39%)</title><rect x="2.0932%" y="917" width="2.3854%" height="15" fill="rgb(248,47,43)" fg:x="6376" fg:w="7266"/><text x="2.3432%" y="927.50">[u..</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::result_recorder::ResultRecorder&gt; (31 samples, 0.01%)</title><rect x="4.4833%" y="693" width="0.0102%" height="15" fill="rgb(221,10,30)" fg:x="13656" fg:w="31"/><text x="4.7333%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u64,alloc::string::String&gt;&gt; (31 samples, 0.01%)</title><rect x="4.4833%" y="677" width="0.0102%" height="15" fill="rgb(210,229,1)" fg:x="13656" fg:w="31"/><text x="4.7333%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u64,alloc::string::String,std::collections::hash::map::RandomState&gt;&gt; (31 samples, 0.01%)</title><rect x="4.4833%" y="661" width="0.0102%" height="15" fill="rgb(222,148,37)" fg:x="13656" fg:w="31"/><text x="4.7333%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u64,alloc::string::String)&gt;&gt; (31 samples, 0.01%)</title><rect x="4.4833%" y="645" width="0.0102%" height="15" fill="rgb(234,67,33)" fg:x="13656" fg:w="31"/><text x="4.7333%" y="655.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (556 samples, 0.18%)</title><rect x="4.6674%" y="645" width="0.1825%" height="15" fill="rgb(247,98,35)" fg:x="14217" fg:w="556"/><text x="4.9174%" y="655.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (526 samples, 0.17%)</title><rect x="4.6773%" y="629" width="0.1727%" height="15" fill="rgb(247,138,52)" fg:x="14247" fg:w="526"/><text x="4.9273%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (12,374 samples, 4.06%)</title><rect x="5.0141%" y="629" width="4.0624%" height="15" fill="rgb(213,79,30)" fg:x="15273" fg:w="12374"/><text x="5.2641%" y="639.50">__me..</text></g><g><title>malloc_consolidate (115 samples, 0.04%)</title><rect x="11.3736%" y="581" width="0.0378%" height="15" fill="rgb(246,177,23)" fg:x="34644" fg:w="115"/><text x="11.6236%" y="591.50"></text></g><g><title>__GI___libc_free (1,083 samples, 0.36%)</title><rect x="11.0562%" y="613" width="0.3555%" height="15" fill="rgb(230,62,27)" fg:x="33677" fg:w="1083"/><text x="11.3062%" y="623.50"></text></g><g><title>_int_free (928 samples, 0.30%)</title><rect x="11.1071%" y="597" width="0.3047%" height="15" fill="rgb(216,154,8)" fg:x="33832" fg:w="928"/><text x="11.3571%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::GcRecord&gt; (213 samples, 0.07%)</title><rect x="11.4229%" y="613" width="0.0699%" height="15" fill="rgb(244,35,45)" fg:x="34794" fg:w="213"/><text x="11.6729%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::ArrayValue&gt; (68 samples, 0.02%)</title><rect x="11.4705%" y="597" width="0.0223%" height="15" fill="rgb(251,115,12)" fg:x="34939" fg:w="68"/><text x="11.7205%" y="607.50"></text></g><g><title>hprof_slurp::result_recorder::ArrayCounter::add_elements_from_array (38 samples, 0.01%)</title><rect x="11.4928%" y="613" width="0.0125%" height="15" fill="rgb(240,54,50)" fg:x="35007" fg:w="38"/><text x="11.7428%" y="623.50"></text></g><g><title>hprof_slurp::result_recorder::ClassInstanceCounter::add_instance (1,526 samples, 0.50%)</title><rect x="11.5053%" y="613" width="0.5010%" height="15" fill="rgb(233,84,52)" fg:x="35045" fg:w="1526"/><text x="11.7553%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (56 samples, 0.02%)</title><rect x="13.2000%" y="453" width="0.0184%" height="15" fill="rgb(207,117,47)" fg:x="40207" fg:w="56"/><text x="13.4500%" y="463.50"></text></g><g><title>&lt;hprof_slurp::gc_record::FieldType as core::hash::Hash&gt;::hash (183 samples, 0.06%)</title><rect x="13.1691%" y="565" width="0.0601%" height="15" fill="rgb(249,43,39)" fg:x="40113" fg:w="183"/><text x="13.4191%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (168 samples, 0.06%)</title><rect x="13.1740%" y="549" width="0.0552%" height="15" fill="rgb(209,38,44)" fg:x="40128" fg:w="168"/><text x="13.4240%" y="559.50"></text></g><g><title>core::hash::Hasher::write_isize (168 samples, 0.06%)</title><rect x="13.1740%" y="533" width="0.0552%" height="15" fill="rgb(236,212,23)" fg:x="40128" fg:w="168"/><text x="13.4240%" y="543.50"></text></g><g><title>core::hash::Hasher::write_usize (168 samples, 0.06%)</title><rect x="13.1740%" y="517" width="0.0552%" height="15" fill="rgb(242,79,21)" fg:x="40128" fg:w="168"/><text x="13.4240%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (166 samples, 0.05%)</title><rect x="13.1747%" y="501" width="0.0545%" height="15" fill="rgb(211,96,35)" fg:x="40130" fg:w="166"/><text x="13.4247%" y="511.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (166 samples, 0.05%)</title><rect x="13.1747%" y="485" width="0.0545%" height="15" fill="rgb(253,215,40)" fg:x="40130" fg:w="166"/><text x="13.4247%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (166 samples, 0.05%)</title><rect x="13.1747%" y="469" width="0.0545%" height="15" fill="rgb(211,81,21)" fg:x="40130" fg:w="166"/><text x="13.4247%" y="479.50"></text></g><g><title>core::hash::sip::u8to64_le (32 samples, 0.01%)</title><rect x="13.2187%" y="453" width="0.0105%" height="15" fill="rgb(208,190,38)" fg:x="40264" fg:w="32"/><text x="13.4687%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1,110 samples, 0.36%)</title><rect x="13.8205%" y="501" width="0.3644%" height="15" fill="rgb(235,213,38)" fg:x="42097" fg:w="1110"/><text x="14.0705%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,282 samples, 0.75%)</title><rect x="13.6232%" y="517" width="0.7492%" height="15" fill="rgb(237,122,38)" fg:x="41496" fg:w="2282"/><text x="13.8732%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (571 samples, 0.19%)</title><rect x="14.1849%" y="501" width="0.1875%" height="15" fill="rgb(244,218,35)" fg:x="43207" fg:w="571"/><text x="14.4349%" y="511.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3,454 samples, 1.13%)</title><rect x="14.8021%" y="501" width="1.1339%" height="15" fill="rgb(240,68,47)" fg:x="45087" fg:w="3454"/><text x="15.0521%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5,974 samples, 1.96%)</title><rect x="14.3723%" y="517" width="1.9613%" height="15" fill="rgb(210,16,53)" fg:x="43778" fg:w="5974"/><text x="14.6223%" y="527.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1,211 samples, 0.40%)</title><rect x="15.9360%" y="501" width="0.3976%" height="15" fill="rgb(235,124,12)" fg:x="48541" fg:w="1211"/><text x="16.1860%" y="511.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9,457 samples, 3.10%)</title><rect x="13.2292%" y="565" width="3.1047%" height="15" fill="rgb(224,169,11)" fg:x="40296" fg:w="9457"/><text x="13.4792%" y="575.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (9,457 samples, 3.10%)</title><rect x="13.2292%" y="549" width="3.1047%" height="15" fill="rgb(250,166,2)" fg:x="40296" fg:w="9457"/><text x="13.4792%" y="559.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9,457 samples, 3.10%)</title><rect x="13.2292%" y="533" width="3.1047%" height="15" fill="rgb(242,216,29)" fg:x="40296" fg:w="9457"/><text x="13.4792%" y="543.50">&lt;co..</text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2,218 samples, 0.73%)</title><rect x="16.3339%" y="565" width="0.7282%" height="15" fill="rgb(230,116,27)" fg:x="49753" fg:w="2218"/><text x="16.5839%" y="575.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1,198 samples, 0.39%)</title><rect x="16.6688%" y="549" width="0.3933%" height="15" fill="rgb(228,99,48)" fg:x="50773" fg:w="1198"/><text x="16.9188%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1,075 samples, 0.35%)</title><rect x="16.7092%" y="533" width="0.3529%" height="15" fill="rgb(253,11,6)" fg:x="50896" fg:w="1075"/><text x="16.9592%" y="543.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1,075 samples, 0.35%)</title><rect x="16.7092%" y="517" width="0.3529%" height="15" fill="rgb(247,143,39)" fg:x="50896" fg:w="1075"/><text x="16.9592%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (608 samples, 0.20%)</title><rect x="18.4314%" y="469" width="0.1996%" height="15" fill="rgb(236,97,10)" fg:x="56142" fg:w="608"/><text x="18.6814%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2,126 samples, 0.70%)</title><rect x="18.1081%" y="485" width="0.6980%" height="15" fill="rgb(233,208,19)" fg:x="55157" fg:w="2126"/><text x="18.3581%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (533 samples, 0.17%)</title><rect x="18.6311%" y="469" width="0.1750%" height="15" fill="rgb(216,164,2)" fg:x="56750" fg:w="533"/><text x="18.8811%" y="479.50"></text></g><g><title>core::hash::sip::u8to64_le (1,548 samples, 0.51%)</title><rect x="18.8077%" y="485" width="0.5082%" height="15" fill="rgb(220,129,5)" fg:x="57288" fg:w="1548"/><text x="19.0577%" y="495.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6,417 samples, 2.11%)</title><rect x="17.2397%" y="533" width="2.1067%" height="15" fill="rgb(242,17,10)" fg:x="52512" fg:w="6417"/><text x="17.4897%" y="543.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6,417 samples, 2.11%)</title><rect x="17.2397%" y="517" width="2.1067%" height="15" fill="rgb(242,107,0)" fg:x="52512" fg:w="6417"/><text x="17.4897%" y="527.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6,417 samples, 2.11%)</title><rect x="17.2397%" y="501" width="2.1067%" height="15" fill="rgb(251,28,31)" fg:x="52512" fg:w="6417"/><text x="17.4897%" y="511.50">&lt;..</text></g><g><title>core::intrinsics::copy_nonoverlapping (93 samples, 0.03%)</title><rect x="19.3159%" y="485" width="0.0305%" height="15" fill="rgb(233,223,10)" fg:x="58836" fg:w="93"/><text x="19.5659%" y="495.50"></text></g><g><title>hashbrown::map::make_insert_hash (18,817 samples, 6.18%)</title><rect x="13.1691%" y="581" width="6.1776%" height="15" fill="rgb(215,21,27)" fg:x="40113" fg:w="18817"/><text x="13.4191%" y="591.50">hashbrow..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (6,959 samples, 2.28%)</title><rect x="17.0621%" y="565" width="2.2846%" height="15" fill="rgb(232,23,21)" fg:x="51971" fg:w="6959"/><text x="17.3121%" y="575.50">c..</text></g><g><title>core::hash::Hasher::write_u64 (6,959 samples, 2.28%)</title><rect x="17.0621%" y="549" width="2.2846%" height="15" fill="rgb(244,5,23)" fg:x="51971" fg:w="6959"/><text x="17.3121%" y="559.50">c..</text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2,043 samples, 0.67%)</title><rect x="20.0329%" y="517" width="0.6707%" height="15" fill="rgb(226,81,46)" fg:x="61020" fg:w="2043"/><text x="20.2829%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2,059 samples, 0.68%)</title><rect x="20.0280%" y="533" width="0.6760%" height="15" fill="rgb(247,70,30)" fg:x="61005" fg:w="2059"/><text x="20.2780%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (147 samples, 0.05%)</title><rect x="20.7138%" y="533" width="0.0483%" height="15" fill="rgb(212,68,19)" fg:x="63094" fg:w="147"/><text x="20.9638%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (147 samples, 0.05%)</title><rect x="20.7138%" y="517" width="0.0483%" height="15" fill="rgb(240,187,13)" fg:x="63094" fg:w="147"/><text x="20.9638%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (147 samples, 0.05%)</title><rect x="20.7138%" y="501" width="0.0483%" height="15" fill="rgb(223,113,26)" fg:x="63094" fg:w="147"/><text x="20.9638%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,800 samples, 0.92%)</title><rect x="19.8651%" y="549" width="0.9192%" height="15" fill="rgb(206,192,2)" fg:x="60509" fg:w="2800"/><text x="20.1151%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (68 samples, 0.02%)</title><rect x="20.7621%" y="533" width="0.0223%" height="15" fill="rgb(241,108,4)" fg:x="63241" fg:w="68"/><text x="21.0121%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (68 samples, 0.02%)</title><rect x="20.7621%" y="517" width="0.0223%" height="15" fill="rgb(247,173,49)" fg:x="63241" fg:w="68"/><text x="21.0121%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (68 samples, 0.02%)</title><rect x="20.7621%" y="501" width="0.0223%" height="15" fill="rgb(224,114,35)" fg:x="63241" fg:w="68"/><text x="21.0121%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,827 samples, 0.93%)</title><rect x="19.8651%" y="565" width="0.9281%" height="15" fill="rgb(245,159,27)" fg:x="60509" fg:w="2827"/><text x="20.1151%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (939 samples, 0.31%)</title><rect x="20.7969%" y="565" width="0.3083%" height="15" fill="rgb(245,172,44)" fg:x="63347" fg:w="939"/><text x="21.0469%" y="575.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (939 samples, 0.31%)</title><rect x="20.7969%" y="549" width="0.3083%" height="15" fill="rgb(236,23,11)" fg:x="63347" fg:w="939"/><text x="21.0469%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (939 samples, 0.31%)</title><rect x="20.7969%" y="533" width="0.3083%" height="15" fill="rgb(205,117,38)" fg:x="63347" fg:w="939"/><text x="21.0469%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (939 samples, 0.31%)</title><rect x="20.7969%" y="517" width="0.3083%" height="15" fill="rgb(237,72,25)" fg:x="63347" fg:w="939"/><text x="21.0469%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (49 samples, 0.02%)</title><rect x="21.2601%" y="517" width="0.0161%" height="15" fill="rgb(244,70,9)" fg:x="64758" fg:w="49"/><text x="21.5101%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1,756 samples, 0.58%)</title><rect x="21.2795%" y="517" width="0.5765%" height="15" fill="rgb(217,125,39)" fg:x="64817" fg:w="1756"/><text x="21.5295%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,756 samples, 0.58%)</title><rect x="21.2795%" y="501" width="0.5765%" height="15" fill="rgb(235,36,10)" fg:x="64817" fg:w="1756"/><text x="21.5295%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,756 samples, 0.58%)</title><rect x="21.2795%" y="485" width="0.5765%" height="15" fill="rgb(251,123,47)" fg:x="64817" fg:w="1756"/><text x="21.5295%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2,826 samples, 0.93%)</title><rect x="21.1051%" y="565" width="0.9278%" height="15" fill="rgb(221,13,13)" fg:x="64286" fg:w="2826"/><text x="21.3551%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2,826 samples, 0.93%)</title><rect x="21.1051%" y="549" width="0.9278%" height="15" fill="rgb(238,131,9)" fg:x="64286" fg:w="2826"/><text x="21.3551%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2,826 samples, 0.93%)</title><rect x="21.1051%" y="533" width="0.9278%" height="15" fill="rgb(211,50,8)" fg:x="64286" fg:w="2826"/><text x="21.3551%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (539 samples, 0.18%)</title><rect x="21.8559%" y="517" width="0.1770%" height="15" fill="rgb(245,182,24)" fg:x="66573" fg:w="539"/><text x="22.1059%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (539 samples, 0.18%)</title><rect x="21.8559%" y="501" width="0.1770%" height="15" fill="rgb(242,14,37)" fg:x="66573" fg:w="539"/><text x="22.1059%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (539 samples, 0.18%)</title><rect x="21.8559%" y="485" width="0.1770%" height="15" fill="rgb(246,228,12)" fg:x="66573" fg:w="539"/><text x="22.1059%" y="495.50"></text></g><g><title>core::core_arch::simd::i8x16::new (539 samples, 0.18%)</title><rect x="21.8559%" y="469" width="0.1770%" height="15" fill="rgb(213,55,15)" fg:x="66573" fg:w="539"/><text x="22.1059%" y="479.50"></text></g><g><title>&lt;hprof_slurp::gc_record::FieldType as core::cmp::PartialEq&gt;::eq (84 samples, 0.03%)</title><rect x="22.0329%" y="549" width="0.0276%" height="15" fill="rgb(209,9,3)" fg:x="67112" fg:w="84"/><text x="22.2829%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (35,485 samples, 11.65%)</title><rect x="12.1773%" y="597" width="11.6497%" height="15" fill="rgb(230,59,30)" fg:x="37092" fg:w="35485"/><text x="12.4273%" y="607.50">hashbrown::rustc_..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13,647 samples, 4.48%)</title><rect x="19.3467%" y="581" width="4.4803%" height="15" fill="rgb(209,121,21)" fg:x="58930" fg:w="13647"/><text x="19.5967%" y="591.50">hashb..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (5,465 samples, 1.79%)</title><rect x="22.0329%" y="565" width="1.7942%" height="15" fill="rgb(220,109,13)" fg:x="67112" fg:w="5465"/><text x="22.2829%" y="575.50">h..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (5,381 samples, 1.77%)</title><rect x="22.0605%" y="549" width="1.7666%" height="15" fill="rgb(232,18,1)" fg:x="67196" fg:w="5381"/><text x="22.3105%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (36,545 samples, 12.00%)</title><rect x="12.0063%" y="613" width="11.9977%" height="15" fill="rgb(215,41,42)" fg:x="36571" fg:w="36545"/><text x="12.2563%" y="623.50">std::collections::..</text></g><g><title>std::collections::hash::map::map_entry (539 samples, 0.18%)</title><rect x="23.8271%" y="597" width="0.1770%" height="15" fill="rgb(224,123,36)" fg:x="72577" fg:w="539"/><text x="24.0771%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (58,352 samples, 19.16%)</title><rect x="4.8500%" y="645" width="19.1570%" height="15" fill="rgb(240,125,3)" fg:x="14773" fg:w="58352"/><text x="5.1000%" y="655.50">core::iter::traits::iterator::..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (45,476 samples, 14.93%)</title><rect x="9.0772%" y="629" width="14.9298%" height="15" fill="rgb(205,98,50)" fg:x="27649" fg:w="45476"/><text x="9.3272%" y="639.50">hprof_slurp::result_rec..</text></g><g><title>__free_one_page (56 samples, 0.02%)</title><rect x="24.0523%" y="293" width="0.0184%" height="15" fill="rgb(205,185,37)" fg:x="73263" fg:w="56"/><text x="24.3023%" y="303.50"></text></g><g><title>free_unref_page_list (105 samples, 0.03%)</title><rect x="24.0382%" y="341" width="0.0345%" height="15" fill="rgb(238,207,15)" fg:x="73220" fg:w="105"/><text x="24.2882%" y="351.50"></text></g><g><title>free_unref_page_commit (92 samples, 0.03%)</title><rect x="24.0424%" y="325" width="0.0302%" height="15" fill="rgb(213,199,42)" fg:x="73233" fg:w="92"/><text x="24.2924%" y="335.50"></text></g><g><title>free_pcppages_bulk (82 samples, 0.03%)</title><rect x="24.0457%" y="309" width="0.0269%" height="15" fill="rgb(235,201,11)" fg:x="73243" fg:w="82"/><text x="24.2957%" y="319.50"></text></g><g><title>tlb_finish_mmu (201 samples, 0.07%)</title><rect x="24.0149%" y="389" width="0.0660%" height="15" fill="rgb(207,46,11)" fg:x="73149" fg:w="201"/><text x="24.2649%" y="399.50"></text></g><g><title>free_pages_and_swap_cache (198 samples, 0.07%)</title><rect x="24.0158%" y="373" width="0.0650%" height="15" fill="rgb(241,35,35)" fg:x="73152" fg:w="198"/><text x="24.2658%" y="383.50"></text></g><g><title>release_pages (181 samples, 0.06%)</title><rect x="24.0214%" y="357" width="0.0594%" height="15" fill="rgb(243,32,47)" fg:x="73169" fg:w="181"/><text x="24.2714%" y="367.50"></text></g><g><title>__mod_lruvec_page_state (38 samples, 0.01%)</title><rect x="24.5733%" y="325" width="0.0125%" height="15" fill="rgb(247,202,23)" fg:x="74850" fg:w="38"/><text x="24.8233%" y="335.50"></text></g><g><title>__tlb_remove_page_size (70 samples, 0.02%)</title><rect x="24.5858%" y="325" width="0.0230%" height="15" fill="rgb(219,102,11)" fg:x="74888" fg:w="70"/><text x="24.8358%" y="335.50"></text></g><g><title>__mod_memcg_state.part.0 (178 samples, 0.06%)</title><rect x="24.8980%" y="261" width="0.0584%" height="15" fill="rgb(243,110,44)" fg:x="75839" fg:w="178"/><text x="25.1480%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (375 samples, 0.12%)</title><rect x="24.8336%" y="277" width="0.1231%" height="15" fill="rgb(222,74,54)" fg:x="75643" fg:w="375"/><text x="25.0836%" y="287.50"></text></g><g><title>__mod_memcg_state.part.0 (42 samples, 0.01%)</title><rect x="24.9567%" y="277" width="0.0138%" height="15" fill="rgb(216,99,12)" fg:x="76018" fg:w="42"/><text x="25.2067%" y="287.50"></text></g><g><title>__mod_lruvec_state (545 samples, 0.18%)</title><rect x="24.8149%" y="293" width="0.1789%" height="15" fill="rgb(226,22,26)" fg:x="75586" fg:w="545"/><text x="25.0649%" y="303.50"></text></g><g><title>__mod_node_page_state (71 samples, 0.02%)</title><rect x="24.9705%" y="277" width="0.0233%" height="15" fill="rgb(217,163,10)" fg:x="76060" fg:w="71"/><text x="25.2205%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (31 samples, 0.01%)</title><rect x="24.9938%" y="293" width="0.0102%" height="15" fill="rgb(213,25,53)" fg:x="76131" fg:w="31"/><text x="25.2438%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (709 samples, 0.23%)</title><rect x="24.7952%" y="309" width="0.2328%" height="15" fill="rgb(252,105,26)" fg:x="75526" fg:w="709"/><text x="25.0452%" y="319.50"></text></g><g><title>__mod_node_page_state (73 samples, 0.02%)</title><rect x="25.0040%" y="293" width="0.0240%" height="15" fill="rgb(220,39,43)" fg:x="76162" fg:w="73"/><text x="25.2540%" y="303.50"></text></g><g><title>lock_page_memcg (115 samples, 0.04%)</title><rect x="25.0336%" y="309" width="0.0378%" height="15" fill="rgb(229,68,48)" fg:x="76252" fg:w="115"/><text x="25.2836%" y="319.50"></text></g><g><title>page_remove_rmap (1,455 samples, 0.48%)</title><rect x="24.6202%" y="325" width="0.4777%" height="15" fill="rgb(252,8,32)" fg:x="74993" fg:w="1455"/><text x="24.8702%" y="335.50"></text></g><g><title>unlock_page_memcg (52 samples, 0.02%)</title><rect x="25.0808%" y="309" width="0.0171%" height="15" fill="rgb(223,20,43)" fg:x="76396" fg:w="52"/><text x="25.3308%" y="319.50"></text></g><g><title>__mod_zone_page_state (71 samples, 0.02%)</title><rect x="25.2453%" y="293" width="0.0233%" height="15" fill="rgb(229,81,49)" fg:x="76897" fg:w="71"/><text x="25.4953%" y="303.50"></text></g><g><title>mem_cgroup_update_lru_size (38 samples, 0.01%)</title><rect x="25.2696%" y="293" width="0.0125%" height="15" fill="rgb(236,28,36)" fg:x="76971" fg:w="38"/><text x="25.5196%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (448 samples, 0.15%)</title><rect x="25.6130%" y="261" width="0.1471%" height="15" fill="rgb(249,185,26)" fg:x="78017" fg:w="448"/><text x="25.8630%" y="271.50"></text></g><g><title>__mod_memcg_state.part.0 (218 samples, 0.07%)</title><rect x="25.6885%" y="245" width="0.0716%" height="15" fill="rgb(249,174,33)" fg:x="78247" fg:w="218"/><text x="25.9385%" y="255.50"></text></g><g><title>__mod_memcg_state.part.0 (39 samples, 0.01%)</title><rect x="25.7601%" y="261" width="0.0128%" height="15" fill="rgb(233,201,37)" fg:x="78465" fg:w="39"/><text x="26.0101%" y="271.50"></text></g><g><title>__mod_lruvec_state (624 samples, 0.20%)</title><rect x="25.5950%" y="277" width="0.2049%" height="15" fill="rgb(221,78,26)" fg:x="77962" fg:w="624"/><text x="25.8450%" y="287.50"></text></g><g><title>__mod_node_page_state (82 samples, 0.03%)</title><rect x="25.7729%" y="261" width="0.0269%" height="15" fill="rgb(250,127,30)" fg:x="78504" fg:w="82"/><text x="26.0229%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (32 samples, 0.01%)</title><rect x="25.7998%" y="277" width="0.0105%" height="15" fill="rgb(230,49,44)" fg:x="78586" fg:w="32"/><text x="26.0498%" y="287.50"></text></g><g><title>__mod_node_page_state (70 samples, 0.02%)</title><rect x="25.8103%" y="277" width="0.0230%" height="15" fill="rgb(229,67,23)" fg:x="78618" fg:w="70"/><text x="26.0603%" y="287.50"></text></g><g><title>__mod_zone_page_state (63 samples, 0.02%)</title><rect x="25.8333%" y="277" width="0.0207%" height="15" fill="rgb(249,83,47)" fg:x="78688" fg:w="63"/><text x="26.0833%" y="287.50"></text></g><g><title>free_pcp_prepare (34 samples, 0.01%)</title><rect x="25.8543%" y="277" width="0.0112%" height="15" fill="rgb(215,43,3)" fg:x="78752" fg:w="34"/><text x="26.1043%" y="287.50"></text></g><g><title>free_unref_page_commit (39 samples, 0.01%)</title><rect x="25.8655%" y="277" width="0.0128%" height="15" fill="rgb(238,154,13)" fg:x="78786" fg:w="39"/><text x="26.1155%" y="287.50"></text></g><g><title>free_pcp_prepare (100 samples, 0.03%)</title><rect x="25.9771%" y="261" width="0.0328%" height="15" fill="rgb(219,56,2)" fg:x="79126" fg:w="100"/><text x="26.2271%" y="271.50"></text></g><g><title>__free_one_page (1,267 samples, 0.42%)</title><rect x="26.2647%" y="229" width="0.4160%" height="15" fill="rgb(233,0,4)" fg:x="80002" fg:w="1267"/><text x="26.5147%" y="239.50"></text></g><g><title>__mod_zone_page_state (89 samples, 0.03%)</title><rect x="26.6514%" y="213" width="0.0292%" height="15" fill="rgb(235,30,7)" fg:x="81180" fg:w="89"/><text x="26.9014%" y="223.50"></text></g><g><title>__mod_zone_page_state (48 samples, 0.02%)</title><rect x="26.6807%" y="229" width="0.0158%" height="15" fill="rgb(250,79,13)" fg:x="81269" fg:w="48"/><text x="26.9307%" y="239.50"></text></g><g><title>free_unref_page_list (2,510 samples, 0.82%)</title><rect x="25.8783%" y="277" width="0.8240%" height="15" fill="rgb(211,146,34)" fg:x="78825" fg:w="2510"/><text x="26.1283%" y="287.50"></text></g><g><title>free_unref_page_commit (2,108 samples, 0.69%)</title><rect x="26.0103%" y="261" width="0.6921%" height="15" fill="rgb(228,22,38)" fg:x="79227" fg:w="2108"/><text x="26.2603%" y="271.50"></text></g><g><title>free_pcppages_bulk (1,844 samples, 0.61%)</title><rect x="26.0969%" y="245" width="0.6054%" height="15" fill="rgb(235,168,5)" fg:x="79491" fg:w="1844"/><text x="26.3469%" y="255.50"></text></g><g><title>_raw_spin_lock_irqsave (134 samples, 0.04%)</title><rect x="26.7040%" y="261" width="0.0440%" height="15" fill="rgb(221,155,16)" fg:x="81340" fg:w="134"/><text x="26.9540%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (106 samples, 0.03%)</title><rect x="26.7132%" y="245" width="0.0348%" height="15" fill="rgb(215,215,53)" fg:x="81368" fg:w="106"/><text x="26.9632%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (106 samples, 0.03%)</title><rect x="26.7132%" y="229" width="0.0348%" height="15" fill="rgb(223,4,10)" fg:x="81368" fg:w="106"/><text x="26.9632%" y="239.50"></text></g><g><title>lock_page_lruvec_irqsave (140 samples, 0.05%)</title><rect x="26.7023%" y="277" width="0.0460%" height="15" fill="rgb(234,103,6)" fg:x="81335" fg:w="140"/><text x="26.9523%" y="287.50"></text></g><g><title>uncharge_batch (48 samples, 0.02%)</title><rect x="26.7716%" y="261" width="0.0158%" height="15" fill="rgb(227,97,0)" fg:x="81546" fg:w="48"/><text x="27.0216%" y="271.50"></text></g><g><title>mem_cgroup_uncharge_list (336 samples, 0.11%)</title><rect x="26.7483%" y="277" width="0.1103%" height="15" fill="rgb(234,150,53)" fg:x="81475" fg:w="336"/><text x="26.9983%" y="287.50"></text></g><g><title>uncharge_page (217 samples, 0.07%)</title><rect x="26.7873%" y="261" width="0.0712%" height="15" fill="rgb(228,201,54)" fg:x="81594" fg:w="217"/><text x="27.0373%" y="271.50"></text></g><g><title>mem_cgroup_update_lru_size (88 samples, 0.03%)</title><rect x="26.8586%" y="277" width="0.0289%" height="15" fill="rgb(222,22,37)" fg:x="81811" fg:w="88"/><text x="27.1086%" y="287.50"></text></g><g><title>tlb_flush_mmu (5,497 samples, 1.80%)</title><rect x="25.0979%" y="325" width="1.8047%" height="15" fill="rgb(237,53,32)" fg:x="76448" fg:w="5497"/><text x="25.3479%" y="335.50">t..</text></g><g><title>free_pages_and_swap_cache (5,492 samples, 1.80%)</title><rect x="25.0996%" y="309" width="1.8030%" height="15" fill="rgb(233,25,53)" fg:x="76453" fg:w="5492"/><text x="25.3496%" y="319.50">f..</text></g><g><title>release_pages (4,936 samples, 1.62%)</title><rect x="25.2821%" y="293" width="1.6205%" height="15" fill="rgb(210,40,34)" fg:x="77009" fg:w="4936"/><text x="25.5321%" y="303.50"></text></g><g><title>uncharge_page (45 samples, 0.01%)</title><rect x="26.8878%" y="277" width="0.0148%" height="15" fill="rgb(241,220,44)" fg:x="81900" fg:w="45"/><text x="27.1378%" y="287.50"></text></g><g><title>unlock_page_memcg (41 samples, 0.01%)</title><rect x="26.9026%" y="325" width="0.0135%" height="15" fill="rgb(235,28,35)" fg:x="81945" fg:w="41"/><text x="27.1526%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;hprof_slurp::record::Record&gt;&gt; (8,942 samples, 2.94%)</title><rect x="24.0070%" y="645" width="2.9357%" height="15" fill="rgb(210,56,17)" fg:x="73125" fg:w="8942"/><text x="24.2570%" y="655.50">co..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,942 samples, 2.94%)</title><rect x="24.0070%" y="629" width="2.9357%" height="15" fill="rgb(224,130,29)" fg:x="73125" fg:w="8942"/><text x="24.2570%" y="639.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;hprof_slurp::record::Record,alloc::alloc::Global&gt;&gt; (8,942 samples, 2.94%)</title><rect x="24.0070%" y="613" width="2.9357%" height="15" fill="rgb(235,212,8)" fg:x="73125" fg:w="8942"/><text x="24.2570%" y="623.50">co..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,942 samples, 2.94%)</title><rect x="24.0070%" y="597" width="2.9357%" height="15" fill="rgb(223,33,50)" fg:x="73125" fg:w="8942"/><text x="24.2570%" y="607.50">&lt;&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;hprof_slurp::record::Record&gt;&gt; (8,942 samples, 2.94%)</title><rect x="24.0070%" y="581" width="2.9357%" height="15" fill="rgb(219,149,13)" fg:x="73125" fg:w="8942"/><text x="24.2570%" y="591.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,942 samples, 2.94%)</title><rect x="24.0070%" y="565" width="2.9357%" height="15" fill="rgb(250,156,29)" fg:x="73125" fg:w="8942"/><text x="24.2570%" y="575.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8,942 samples, 2.94%)</title><rect x="24.0070%" y="549" width="2.9357%" height="15" fill="rgb(216,193,19)" fg:x="73125" fg:w="8942"/><text x="24.2570%" y="559.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (8,942 samples, 2.94%)</title><rect x="24.0070%" y="533" width="2.9357%" height="15" fill="rgb(216,135,14)" fg:x="73125" fg:w="8942"/><text x="24.2570%" y="543.50">al..</text></g><g><title>__GI___libc_free (8,942 samples, 2.94%)</title><rect x="24.0070%" y="517" width="2.9357%" height="15" fill="rgb(241,47,5)" fg:x="73125" fg:w="8942"/><text x="24.2570%" y="527.50">__..</text></g><g><title>__GI_munmap (8,942 samples, 2.94%)</title><rect x="24.0070%" y="501" width="2.9357%" height="15" fill="rgb(233,42,35)" fg:x="73125" fg:w="8942"/><text x="24.2570%" y="511.50">__..</text></g><g><title>entry_SYSCALL_64_after_hwframe (8,942 samples, 2.94%)</title><rect x="24.0070%" y="485" width="2.9357%" height="15" fill="rgb(231,13,6)" fg:x="73125" fg:w="8942"/><text x="24.2570%" y="495.50">en..</text></g><g><title>do_syscall_64 (8,942 samples, 2.94%)</title><rect x="24.0070%" y="469" width="2.9357%" height="15" fill="rgb(207,181,40)" fg:x="73125" fg:w="8942"/><text x="24.2570%" y="479.50">do..</text></g><g><title>__x64_sys_munmap (8,942 samples, 2.94%)</title><rect x="24.0070%" y="453" width="2.9357%" height="15" fill="rgb(254,173,49)" fg:x="73125" fg:w="8942"/><text x="24.2570%" y="463.50">__..</text></g><g><title>__vm_munmap (8,942 samples, 2.94%)</title><rect x="24.0070%" y="437" width="2.9357%" height="15" fill="rgb(221,1,38)" fg:x="73125" fg:w="8942"/><text x="24.2570%" y="447.50">__..</text></g><g><title>__do_munmap (8,942 samples, 2.94%)</title><rect x="24.0070%" y="421" width="2.9357%" height="15" fill="rgb(206,124,46)" fg:x="73125" fg:w="8942"/><text x="24.2570%" y="431.50">__..</text></g><g><title>unmap_region (8,941 samples, 2.94%)</title><rect x="24.0073%" y="405" width="2.9353%" height="15" fill="rgb(249,21,11)" fg:x="73126" fg:w="8941"/><text x="24.2573%" y="415.50">un..</text></g><g><title>unmap_vmas (8,717 samples, 2.86%)</title><rect x="24.0808%" y="389" width="2.8618%" height="15" fill="rgb(222,201,40)" fg:x="73350" fg:w="8717"/><text x="24.3308%" y="399.50">un..</text></g><g><title>unmap_single_vma (8,717 samples, 2.86%)</title><rect x="24.0808%" y="373" width="2.8618%" height="15" fill="rgb(235,61,29)" fg:x="73350" fg:w="8717"/><text x="24.3308%" y="383.50">un..</text></g><g><title>unmap_page_range (8,717 samples, 2.86%)</title><rect x="24.0808%" y="357" width="2.8618%" height="15" fill="rgb(219,207,3)" fg:x="73350" fg:w="8717"/><text x="24.3308%" y="367.50">un..</text></g><g><title>zap_pte_range (8,646 samples, 2.84%)</title><rect x="24.1042%" y="341" width="2.8385%" height="15" fill="rgb(222,56,46)" fg:x="73421" fg:w="8646"/><text x="24.3542%" y="351.50">za..</text></g><g><title>vm_normal_page (81 samples, 0.03%)</title><rect x="26.9160%" y="325" width="0.0266%" height="15" fill="rgb(239,76,54)" fg:x="81986" fg:w="81"/><text x="27.1660%" y="335.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (68,376 samples, 22.45%)</title><rect x="4.4951%" y="693" width="22.4479%" height="15" fill="rgb(231,124,27)" fg:x="13692" fg:w="68376"/><text x="4.7451%" y="703.50">hprof_slurp::result_recorder::Result..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (68,376 samples, 22.45%)</title><rect x="4.4951%" y="677" width="22.4479%" height="15" fill="rgb(249,195,6)" fg:x="13692" fg:w="68376"/><text x="4.7451%" y="687.50">core::iter::traits::iterator::Iterat..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (68,376 samples, 22.45%)</title><rect x="4.4951%" y="661" width="22.4479%" height="15" fill="rgb(237,174,47)" fg:x="13692" fg:w="68376"/><text x="4.7451%" y="671.50">core::iter::traits::iterator::Iterat..</text></g><g><title>std::panic::catch_unwind (68,445 samples, 22.47%)</title><rect x="4.4833%" y="805" width="22.4705%" height="15" fill="rgb(206,201,31)" fg:x="13656" fg:w="68445"/><text x="4.7333%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (68,445 samples, 22.47%)</title><rect x="4.4833%" y="789" width="22.4705%" height="15" fill="rgb(231,57,52)" fg:x="13656" fg:w="68445"/><text x="4.7333%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (68,445 samples, 22.47%)</title><rect x="4.4833%" y="773" width="22.4705%" height="15" fill="rgb(248,177,22)" fg:x="13656" fg:w="68445"/><text x="4.7333%" y="783.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (68,445 samples, 22.47%)</title><rect x="4.4833%" y="757" width="22.4705%" height="15" fill="rgb(215,211,37)" fg:x="13656" fg:w="68445"/><text x="4.7333%" y="767.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as ..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (68,445 samples, 22.47%)</title><rect x="4.4833%" y="741" width="22.4705%" height="15" fill="rgb(241,128,51)" fg:x="13656" fg:w="68445"/><text x="4.7333%" y="751.50">std::thread::Builder::spawn_unchecke..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (68,445 samples, 22.47%)</title><rect x="4.4833%" y="725" width="22.4705%" height="15" fill="rgb(227,165,31)" fg:x="13656" fg:w="68445"/><text x="4.7333%" y="735.50">std::sys_common::backtrace::__rust_b..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start_recorder::{{closure}} (68,445 samples, 22.47%)</title><rect x="4.4833%" y="709" width="22.4705%" height="15" fill="rgb(228,167,24)" fg:x="13656" fg:w="68445"/><text x="4.7333%" y="719.50">hprof_slurp::result_recorder::Result..</text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (33 samples, 0.01%)</title><rect x="26.9430%" y="693" width="0.0108%" height="15" fill="rgb(228,143,12)" fg:x="82068" fg:w="33"/><text x="27.1930%" y="703.50"></text></g><g><title>std::sync::mpsc::stream::Packet&lt;T&gt;::recv (33 samples, 0.01%)</title><rect x="26.9430%" y="677" width="0.0108%" height="15" fill="rgb(249,149,8)" fg:x="82068" fg:w="33"/><text x="27.1930%" y="687.50"></text></g><g><title>__GI___clone (68,460 samples, 22.48%)</title><rect x="4.4787%" y="917" width="22.4755%" height="15" fill="rgb(243,35,44)" fg:x="13642" fg:w="68460"/><text x="4.7287%" y="927.50">__GI___clone</text></g><g><title>start_thread (68,455 samples, 22.47%)</title><rect x="4.4803%" y="901" width="22.4738%" height="15" fill="rgb(246,89,9)" fg:x="13647" fg:w="68455"/><text x="4.7303%" y="911.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (68,446 samples, 22.47%)</title><rect x="4.4833%" y="885" width="22.4709%" height="15" fill="rgb(233,213,13)" fg:x="13656" fg:w="68446"/><text x="4.7333%" y="895.50">std::sys::unix::thread::Thread::new:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (68,446 samples, 22.47%)</title><rect x="4.4833%" y="869" width="22.4709%" height="15" fill="rgb(233,141,41)" fg:x="13656" fg:w="68446"/><text x="4.7333%" y="879.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (68,446 samples, 22.47%)</title><rect x="4.4833%" y="853" width="22.4709%" height="15" fill="rgb(239,167,4)" fg:x="13656" fg:w="68446"/><text x="4.7333%" y="863.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (68,446 samples, 22.47%)</title><rect x="4.4833%" y="837" width="22.4709%" height="15" fill="rgb(209,217,16)" fg:x="13656" fg:w="68446"/><text x="4.7333%" y="847.50">core::ops::function::FnOnce::call_on..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (68,446 samples, 22.47%)</title><rect x="4.4833%" y="821" width="22.4709%" height="15" fill="rgb(219,88,35)" fg:x="13656" fg:w="68446"/><text x="4.7333%" y="831.50">std::thread::Builder::spawn_unchecke..</text></g><g><title>__irqentry_text_end (72 samples, 0.02%)</title><rect x="26.9564%" y="917" width="0.0236%" height="15" fill="rgb(220,193,23)" fg:x="82109" fg:w="72"/><text x="27.2064%" y="927.50"></text></g><g><title>asm_exc_page_fault (6,080 samples, 2.00%)</title><rect x="27.1705%" y="357" width="1.9961%" height="15" fill="rgb(230,90,52)" fg:x="82761" fg:w="6080"/><text x="27.4205%" y="367.50">a..</text></g><g><title>__read_end_io (44 samples, 0.01%)</title><rect x="31.4880%" y="117" width="0.0144%" height="15" fill="rgb(252,106,19)" fg:x="95912" fg:w="44"/><text x="31.7380%" y="127.50"></text></g><g><title>blk_mq_end_request (65 samples, 0.02%)</title><rect x="31.4866%" y="181" width="0.0213%" height="15" fill="rgb(206,74,20)" fg:x="95908" fg:w="65"/><text x="31.7366%" y="191.50"></text></g><g><title>blk_update_request (64 samples, 0.02%)</title><rect x="31.4870%" y="165" width="0.0210%" height="15" fill="rgb(230,138,44)" fg:x="95909" fg:w="64"/><text x="31.7370%" y="175.50"></text></g><g><title>bio_endio (61 samples, 0.02%)</title><rect x="31.4880%" y="149" width="0.0200%" height="15" fill="rgb(235,182,43)" fg:x="95912" fg:w="61"/><text x="31.7380%" y="159.50"></text></g><g><title>mpage_end_io (61 samples, 0.02%)</title><rect x="31.4880%" y="133" width="0.0200%" height="15" fill="rgb(242,16,51)" fg:x="95912" fg:w="61"/><text x="31.7380%" y="143.50"></text></g><g><title>nvme_complete_rq (66 samples, 0.02%)</title><rect x="31.4866%" y="197" width="0.0217%" height="15" fill="rgb(248,9,4)" fg:x="95908" fg:w="66"/><text x="31.7366%" y="207.50"></text></g><g><title>handle_irq_event (78 samples, 0.03%)</title><rect x="31.4850%" y="277" width="0.0256%" height="15" fill="rgb(210,31,22)" fg:x="95903" fg:w="78"/><text x="31.7350%" y="287.50"></text></g><g><title>__handle_irq_event_percpu (77 samples, 0.03%)</title><rect x="31.4853%" y="261" width="0.0253%" height="15" fill="rgb(239,54,39)" fg:x="95904" fg:w="77"/><text x="31.7353%" y="271.50"></text></g><g><title>nvme_irq (77 samples, 0.03%)</title><rect x="31.4853%" y="245" width="0.0253%" height="15" fill="rgb(230,99,41)" fg:x="95904" fg:w="77"/><text x="31.7353%" y="255.50"></text></g><g><title>nvme_process_cq (76 samples, 0.02%)</title><rect x="31.4857%" y="229" width="0.0250%" height="15" fill="rgb(253,106,12)" fg:x="95905" fg:w="76"/><text x="31.7357%" y="239.50"></text></g><g><title>nvme_pci_complete_rq (73 samples, 0.02%)</title><rect x="31.4866%" y="213" width="0.0240%" height="15" fill="rgb(213,46,41)" fg:x="95908" fg:w="73"/><text x="31.7366%" y="223.50"></text></g><g><title>asm_call_sysvec_on_stack (79 samples, 0.03%)</title><rect x="31.4850%" y="309" width="0.0259%" height="15" fill="rgb(215,133,35)" fg:x="95903" fg:w="79"/><text x="31.7350%" y="319.50"></text></g><g><title>handle_edge_irq (79 samples, 0.03%)</title><rect x="31.4850%" y="293" width="0.0259%" height="15" fill="rgb(213,28,5)" fg:x="95903" fg:w="79"/><text x="31.7350%" y="303.50"></text></g><g><title>asm_common_interrupt (81 samples, 0.03%)</title><rect x="31.4847%" y="341" width="0.0266%" height="15" fill="rgb(215,77,49)" fg:x="95902" fg:w="81"/><text x="31.7347%" y="351.50"></text></g><g><title>common_interrupt (81 samples, 0.03%)</title><rect x="31.4847%" y="325" width="0.0266%" height="15" fill="rgb(248,100,22)" fg:x="95902" fg:w="81"/><text x="31.7347%" y="335.50"></text></g><g><title>handle_irq_event (34 samples, 0.01%)</title><rect x="31.6232%" y="229" width="0.0112%" height="15" fill="rgb(208,67,9)" fg:x="96324" fg:w="34"/><text x="31.8732%" y="239.50"></text></g><g><title>__handle_irq_event_percpu (34 samples, 0.01%)</title><rect x="31.6232%" y="213" width="0.0112%" height="15" fill="rgb(219,133,21)" fg:x="96324" fg:w="34"/><text x="31.8732%" y="223.50"></text></g><g><title>nvme_irq (33 samples, 0.01%)</title><rect x="31.6235%" y="197" width="0.0108%" height="15" fill="rgb(246,46,29)" fg:x="96325" fg:w="33"/><text x="31.8735%" y="207.50"></text></g><g><title>nvme_process_cq (33 samples, 0.01%)</title><rect x="31.6235%" y="181" width="0.0108%" height="15" fill="rgb(246,185,52)" fg:x="96325" fg:w="33"/><text x="31.8735%" y="191.50"></text></g><g><title>nvme_pci_complete_rq (32 samples, 0.01%)</title><rect x="31.6239%" y="165" width="0.0105%" height="15" fill="rgb(252,136,11)" fg:x="96326" fg:w="32"/><text x="31.8739%" y="175.50"></text></g><g><title>asm_common_interrupt (37 samples, 0.01%)</title><rect x="31.6226%" y="293" width="0.0121%" height="15" fill="rgb(219,138,53)" fg:x="96322" fg:w="37"/><text x="31.8726%" y="303.50"></text></g><g><title>common_interrupt (36 samples, 0.01%)</title><rect x="31.6229%" y="277" width="0.0118%" height="15" fill="rgb(211,51,23)" fg:x="96323" fg:w="36"/><text x="31.8729%" y="287.50"></text></g><g><title>asm_call_sysvec_on_stack (36 samples, 0.01%)</title><rect x="31.6229%" y="261" width="0.0118%" height="15" fill="rgb(247,221,28)" fg:x="96323" fg:w="36"/><text x="31.8729%" y="271.50"></text></g><g><title>handle_edge_irq (36 samples, 0.01%)</title><rect x="31.6229%" y="245" width="0.0118%" height="15" fill="rgb(251,222,45)" fg:x="96323" fg:w="36"/><text x="31.8729%" y="255.50"></text></g><g><title>down_read_trylock (151 samples, 0.05%)</title><rect x="31.6370%" y="293" width="0.0496%" height="15" fill="rgb(217,162,53)" fg:x="96366" fg:w="151"/><text x="31.8870%" y="303.50"></text></g><g><title>find_vma (77 samples, 0.03%)</title><rect x="31.6866%" y="293" width="0.0253%" height="15" fill="rgb(229,93,14)" fg:x="96517" fg:w="77"/><text x="31.9366%" y="303.50"></text></g><g><title>vmacache_find (52 samples, 0.02%)</title><rect x="31.6948%" y="277" width="0.0171%" height="15" fill="rgb(209,67,49)" fg:x="96542" fg:w="52"/><text x="31.9448%" y="287.50"></text></g><g><title>__count_memcg_events (40 samples, 0.01%)</title><rect x="31.8153%" y="277" width="0.0131%" height="15" fill="rgb(213,87,29)" fg:x="96909" fg:w="40"/><text x="32.0653%" y="287.50"></text></g><g><title>__count_memcg_events.part.0 (40 samples, 0.01%)</title><rect x="31.8153%" y="261" width="0.0131%" height="15" fill="rgb(205,151,52)" fg:x="96909" fg:w="40"/><text x="32.0653%" y="271.50"></text></g><g><title>_raw_spin_lock (140 samples, 0.05%)</title><rect x="32.0398%" y="245" width="0.0460%" height="15" fill="rgb(253,215,39)" fg:x="97593" fg:w="140"/><text x="32.2898%" y="255.50"></text></g><g><title>__pte_alloc (32 samples, 0.01%)</title><rect x="32.1817%" y="229" width="0.0105%" height="15" fill="rgb(221,220,41)" fg:x="98025" fg:w="32"/><text x="32.4317%" y="239.50"></text></g><g><title>clear_page_erms (2,635 samples, 0.87%)</title><rect x="32.3931%" y="181" width="0.8651%" height="15" fill="rgb(218,133,21)" fg:x="98669" fg:w="2635"/><text x="32.6431%" y="191.50"></text></g><g><title>kernel_init_free_pages (42 samples, 0.01%)</title><rect x="33.2582%" y="181" width="0.0138%" height="15" fill="rgb(221,193,43)" fg:x="101304" fg:w="42"/><text x="33.5082%" y="191.50"></text></g><g><title>__inc_numa_state (39 samples, 0.01%)</title><rect x="33.3159%" y="165" width="0.0128%" height="15" fill="rgb(240,128,52)" fg:x="101480" fg:w="39"/><text x="33.5659%" y="175.50"></text></g><g><title>rmqueue (1,109 samples, 0.36%)</title><rect x="33.2719%" y="181" width="0.3641%" height="15" fill="rgb(253,114,12)" fg:x="101346" fg:w="1109"/><text x="33.5219%" y="191.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (932 samples, 0.31%)</title><rect x="33.3301%" y="165" width="0.3060%" height="15" fill="rgb(215,223,47)" fg:x="101523" fg:w="932"/><text x="33.5801%" y="175.50"></text></g><g><title>rmqueue_bulk.constprop.0 (529 samples, 0.17%)</title><rect x="33.4624%" y="149" width="0.1737%" height="15" fill="rgb(248,225,23)" fg:x="101926" fg:w="529"/><text x="33.7124%" y="159.50"></text></g><g><title>get_page_from_freelist (3,982 samples, 1.31%)</title><rect x="32.3320%" y="197" width="1.3073%" height="15" fill="rgb(250,108,0)" fg:x="98483" fg:w="3982"/><text x="32.5820%" y="207.50"></text></g><g><title>__alloc_pages_nodemask (4,258 samples, 1.40%)</title><rect x="32.2545%" y="213" width="1.3979%" height="15" fill="rgb(228,208,7)" fg:x="98247" fg:w="4258"/><text x="32.5045%" y="223.50"></text></g><g><title>alloc_pages_vma (4,519 samples, 1.48%)</title><rect x="32.1931%" y="229" width="1.4836%" height="15" fill="rgb(244,45,10)" fg:x="98060" fg:w="4519"/><text x="32.4431%" y="239.50"></text></g><g><title>kthread_blkcg (32 samples, 0.01%)</title><rect x="33.8671%" y="213" width="0.0105%" height="15" fill="rgb(207,125,25)" fg:x="103159" fg:w="32"/><text x="34.1171%" y="223.50"></text></g><g><title>cgroup_throttle_swaprate (617 samples, 0.20%)</title><rect x="33.6771%" y="229" width="0.2026%" height="15" fill="rgb(210,195,18)" fg:x="102580" fg:w="617"/><text x="33.9271%" y="239.50"></text></g><g><title>__mod_memcg_lruvec_state (168 samples, 0.06%)</title><rect x="34.1751%" y="149" width="0.0552%" height="15" fill="rgb(249,80,12)" fg:x="104097" fg:w="168"/><text x="34.4251%" y="159.50"></text></g><g><title>__mod_memcg_state.part.0 (91 samples, 0.03%)</title><rect x="34.2004%" y="133" width="0.0299%" height="15" fill="rgb(221,65,9)" fg:x="104174" fg:w="91"/><text x="34.4504%" y="143.50"></text></g><g><title>__mod_lruvec_state (231 samples, 0.08%)</title><rect x="34.1643%" y="165" width="0.0758%" height="15" fill="rgb(235,49,36)" fg:x="104064" fg:w="231"/><text x="34.4143%" y="175.50"></text></g><g><title>__pagevec_lru_add_fn (980 samples, 0.32%)</title><rect x="33.9840%" y="181" width="0.3217%" height="15" fill="rgb(225,32,20)" fg:x="103515" fg:w="980"/><text x="34.2340%" y="191.50"></text></g><g><title>page_mapping (109 samples, 0.04%)</title><rect x="34.2700%" y="165" width="0.0358%" height="15" fill="rgb(215,141,46)" fg:x="104386" fg:w="109"/><text x="34.5200%" y="175.50"></text></g><g><title>__pagevec_lru_add (1,292 samples, 0.42%)</title><rect x="33.9548%" y="197" width="0.4242%" height="15" fill="rgb(250,160,47)" fg:x="103426" fg:w="1292"/><text x="34.2048%" y="207.50"></text></g><g><title>release_pages (175 samples, 0.06%)</title><rect x="34.3215%" y="181" width="0.0575%" height="15" fill="rgb(216,222,40)" fg:x="104543" fg:w="175"/><text x="34.5715%" y="191.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1,494 samples, 0.49%)</title><rect x="33.8937%" y="229" width="0.4905%" height="15" fill="rgb(234,217,39)" fg:x="103240" fg:w="1494"/><text x="34.1437%" y="239.50"></text></g><g><title>lru_cache_add (1,471 samples, 0.48%)</title><rect x="33.9013%" y="213" width="0.4829%" height="15" fill="rgb(207,178,40)" fg:x="103263" fg:w="1471"/><text x="34.1513%" y="223.50"></text></g><g><title>get_mem_cgroup_from_mm (445 samples, 0.15%)</title><rect x="34.5366%" y="213" width="0.1461%" height="15" fill="rgb(221,136,13)" fg:x="105198" fg:w="445"/><text x="34.7866%" y="223.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (95 samples, 0.03%)</title><rect x="34.6826%" y="213" width="0.0312%" height="15" fill="rgb(249,199,10)" fg:x="105643" fg:w="95"/><text x="34.9326%" y="223.50"></text></g><g><title>__count_memcg_events.part.0 (55 samples, 0.02%)</title><rect x="34.6958%" y="197" width="0.0181%" height="15" fill="rgb(249,222,13)" fg:x="105683" fg:w="55"/><text x="34.9458%" y="207.50"></text></g><g><title>page_counter_try_charge (84 samples, 0.03%)</title><rect x="34.8386%" y="197" width="0.0276%" height="15" fill="rgb(244,185,38)" fg:x="106118" fg:w="84"/><text x="35.0886%" y="207.50"></text></g><g><title>mem_cgroup_charge (1,480 samples, 0.49%)</title><rect x="34.3842%" y="229" width="0.4859%" height="15" fill="rgb(236,202,9)" fg:x="104734" fg:w="1480"/><text x="34.6342%" y="239.50"></text></g><g><title>try_charge (439 samples, 0.14%)</title><rect x="34.7260%" y="213" width="0.1441%" height="15" fill="rgb(250,229,37)" fg:x="105775" fg:w="439"/><text x="34.9760%" y="223.50"></text></g><g><title>__mod_memcg_state.part.0 (79 samples, 0.03%)</title><rect x="34.9391%" y="165" width="0.0259%" height="15" fill="rgb(206,174,23)" fg:x="106424" fg:w="79"/><text x="35.1891%" y="175.50"></text></g><g><title>__mod_memcg_lruvec_state (155 samples, 0.05%)</title><rect x="34.9144%" y="181" width="0.0509%" height="15" fill="rgb(211,33,43)" fg:x="106349" fg:w="155"/><text x="35.1644%" y="191.50"></text></g><g><title>__mod_lruvec_state (224 samples, 0.07%)</title><rect x="34.9072%" y="197" width="0.0735%" height="15" fill="rgb(245,58,50)" fg:x="106327" fg:w="224"/><text x="35.1572%" y="207.50"></text></g><g><title>__mod_node_page_state (38 samples, 0.01%)</title><rect x="34.9683%" y="181" width="0.0125%" height="15" fill="rgb(244,68,36)" fg:x="106513" fg:w="38"/><text x="35.2183%" y="191.50"></text></g><g><title>__mod_lruvec_page_state (314 samples, 0.10%)</title><rect x="34.8970%" y="213" width="0.1031%" height="15" fill="rgb(232,229,15)" fg:x="106296" fg:w="314"/><text x="35.1470%" y="223.50"></text></g><g><title>__mod_node_page_state (50 samples, 0.02%)</title><rect x="34.9837%" y="197" width="0.0164%" height="15" fill="rgb(254,30,23)" fg:x="106560" fg:w="50"/><text x="35.2337%" y="207.50"></text></g><g><title>__page_set_anon_rmap (49 samples, 0.02%)</title><rect x="35.0021%" y="213" width="0.0161%" height="15" fill="rgb(235,160,14)" fg:x="106616" fg:w="49"/><text x="35.2521%" y="223.50"></text></g><g><title>page_add_new_anon_rmap (418 samples, 0.14%)</title><rect x="34.8816%" y="229" width="0.1372%" height="15" fill="rgb(212,155,44)" fg:x="106249" fg:w="418"/><text x="35.1316%" y="239.50"></text></g><g><title>do_anonymous_page (8,994 samples, 2.95%)</title><rect x="32.0979%" y="245" width="2.9527%" height="15" fill="rgb(226,2,50)" fg:x="97770" fg:w="8994"/><text x="32.3479%" y="255.50">do_..</text></g><g><title>handle_pte_fault (9,399 samples, 3.09%)</title><rect x="31.9896%" y="261" width="3.0857%" height="15" fill="rgb(234,177,6)" fg:x="97440" fg:w="9399"/><text x="32.2396%" y="271.50">han..</text></g><g><title>__handle_mm_fault (9,907 samples, 3.25%)</title><rect x="31.8284%" y="277" width="3.2525%" height="15" fill="rgb(217,24,9)" fg:x="96949" fg:w="9907"/><text x="32.0784%" y="287.50">__h..</text></g><g><title>pmd_val (32 samples, 0.01%)</title><rect x="35.0953%" y="277" width="0.0105%" height="15" fill="rgb(220,13,46)" fg:x="106900" fg:w="32"/><text x="35.3453%" y="287.50"></text></g><g><title>handle_mm_fault (10,352 samples, 3.40%)</title><rect x="31.7119%" y="293" width="3.3986%" height="15" fill="rgb(239,221,27)" fg:x="96594" fg:w="10352"/><text x="31.9619%" y="303.50">han..</text></g><g><title>mem_cgroup_from_task (34 samples, 0.01%)</title><rect x="35.1104%" y="293" width="0.0112%" height="15" fill="rgb(222,198,25)" fg:x="106946" fg:w="34"/><text x="35.3604%" y="303.50"></text></g><g><title>rcu_read_unlock_strict (56 samples, 0.02%)</title><rect x="35.1252%" y="293" width="0.0184%" height="15" fill="rgb(211,99,13)" fg:x="106991" fg:w="56"/><text x="35.3752%" y="303.50"></text></g><g><title>up_read (182 samples, 0.06%)</title><rect x="35.1436%" y="293" width="0.0598%" height="15" fill="rgb(232,111,31)" fg:x="107047" fg:w="182"/><text x="35.3936%" y="303.50"></text></g><g><title>do_user_addr_fault (11,123 samples, 3.65%)</title><rect x="31.5572%" y="309" width="3.6517%" height="15" fill="rgb(245,82,37)" fg:x="96123" fg:w="11123"/><text x="31.8072%" y="319.50">do_u..</text></g><g><title>exc_page_fault (11,336 samples, 3.72%)</title><rect x="31.5129%" y="325" width="3.7216%" height="15" fill="rgb(227,149,46)" fg:x="95988" fg:w="11336"/><text x="31.7629%" y="335.50">exc_..</text></g><g><title>asm_exc_page_fault (11,366 samples, 3.73%)</title><rect x="31.5113%" y="341" width="3.7315%" height="15" fill="rgb(218,36,50)" fg:x="95983" fg:w="11366"/><text x="31.7613%" y="351.50">asm_..</text></g><g><title>copy_user_enhanced_fast_string (18,516 samples, 6.08%)</title><rect x="29.1669%" y="357" width="6.0788%" height="15" fill="rgb(226,80,48)" fg:x="88842" fg:w="18516"/><text x="29.4169%" y="367.50">copy_use..</text></g><g><title>copyout (48 samples, 0.02%)</title><rect x="35.2457%" y="357" width="0.0158%" height="15" fill="rgb(238,224,15)" fg:x="107358" fg:w="48"/><text x="35.4957%" y="367.50"></text></g><g><title>error_entry (185 samples, 0.06%)</title><rect x="35.2614%" y="357" width="0.0607%" height="15" fill="rgb(241,136,10)" fg:x="107406" fg:w="185"/><text x="35.5114%" y="367.50"></text></g><g><title>copy_page_to_iter_iovec (25,043 samples, 8.22%)</title><rect x="27.1199%" y="373" width="8.2216%" height="15" fill="rgb(208,32,45)" fg:x="82607" fg:w="25043"/><text x="27.3699%" y="383.50">copy_page_t..</text></g><g><title>copy_page_to_iter (25,139 samples, 8.25%)</title><rect x="27.1025%" y="389" width="8.2531%" height="15" fill="rgb(207,135,9)" fg:x="82554" fg:w="25139"/><text x="27.3525%" y="399.50">copy_page_t..</text></g><g><title>copyout (43 samples, 0.01%)</title><rect x="35.3415%" y="373" width="0.0141%" height="15" fill="rgb(206,86,44)" fg:x="107650" fg:w="43"/><text x="35.5915%" y="383.50"></text></g><g><title>find_get_pages_contig (323 samples, 0.11%)</title><rect x="35.3921%" y="373" width="0.1060%" height="15" fill="rgb(245,177,15)" fg:x="107804" fg:w="323"/><text x="35.6421%" y="383.50"></text></g><g><title>blk_update_request (53 samples, 0.02%)</title><rect x="36.5238%" y="69" width="0.0174%" height="15" fill="rgb(206,64,50)" fg:x="111251" fg:w="53"/><text x="36.7738%" y="79.50"></text></g><g><title>bio_endio (51 samples, 0.02%)</title><rect x="36.5244%" y="53" width="0.0167%" height="15" fill="rgb(234,36,40)" fg:x="111253" fg:w="51"/><text x="36.7744%" y="63.50"></text></g><g><title>mpage_end_io (49 samples, 0.02%)</title><rect x="36.5251%" y="37" width="0.0161%" height="15" fill="rgb(213,64,8)" fg:x="111255" fg:w="49"/><text x="36.7751%" y="47.50"></text></g><g><title>nvme_complete_rq (55 samples, 0.02%)</title><rect x="36.5234%" y="101" width="0.0181%" height="15" fill="rgb(210,75,36)" fg:x="111250" fg:w="55"/><text x="36.7734%" y="111.50"></text></g><g><title>blk_mq_end_request (55 samples, 0.02%)</title><rect x="36.5234%" y="85" width="0.0181%" height="15" fill="rgb(229,88,21)" fg:x="111250" fg:w="55"/><text x="36.7734%" y="95.50"></text></g><g><title>__handle_irq_event_percpu (59 samples, 0.02%)</title><rect x="36.5231%" y="165" width="0.0194%" height="15" fill="rgb(252,204,47)" fg:x="111249" fg:w="59"/><text x="36.7731%" y="175.50"></text></g><g><title>nvme_irq (59 samples, 0.02%)</title><rect x="36.5231%" y="149" width="0.0194%" height="15" fill="rgb(208,77,27)" fg:x="111249" fg:w="59"/><text x="36.7731%" y="159.50"></text></g><g><title>nvme_process_cq (59 samples, 0.02%)</title><rect x="36.5231%" y="133" width="0.0194%" height="15" fill="rgb(221,76,26)" fg:x="111249" fg:w="59"/><text x="36.7731%" y="143.50"></text></g><g><title>nvme_pci_complete_rq (58 samples, 0.02%)</title><rect x="36.5234%" y="117" width="0.0190%" height="15" fill="rgb(225,139,18)" fg:x="111250" fg:w="58"/><text x="36.7734%" y="127.50"></text></g><g><title>handle_irq_event (60 samples, 0.02%)</title><rect x="36.5231%" y="181" width="0.0197%" height="15" fill="rgb(230,137,11)" fg:x="111249" fg:w="60"/><text x="36.7731%" y="191.50"></text></g><g><title>asm_common_interrupt (63 samples, 0.02%)</title><rect x="36.5228%" y="245" width="0.0207%" height="15" fill="rgb(212,28,1)" fg:x="111248" fg:w="63"/><text x="36.7728%" y="255.50"></text></g><g><title>common_interrupt (63 samples, 0.02%)</title><rect x="36.5228%" y="229" width="0.0207%" height="15" fill="rgb(248,164,17)" fg:x="111248" fg:w="63"/><text x="36.7728%" y="239.50"></text></g><g><title>asm_call_sysvec_on_stack (63 samples, 0.02%)</title><rect x="36.5228%" y="213" width="0.0207%" height="15" fill="rgb(222,171,42)" fg:x="111248" fg:w="63"/><text x="36.7728%" y="223.50"></text></g><g><title>handle_edge_irq (63 samples, 0.02%)</title><rect x="36.5228%" y="197" width="0.0207%" height="15" fill="rgb(243,84,45)" fg:x="111248" fg:w="63"/><text x="36.7728%" y="207.50"></text></g><g><title>clear_page_erms (2,536 samples, 0.83%)</title><rect x="35.7115%" y="261" width="0.8326%" height="15" fill="rgb(252,49,23)" fg:x="108777" fg:w="2536"/><text x="35.9615%" y="271.50"></text></g><g><title>kernel_init_free_pages (38 samples, 0.01%)</title><rect x="36.5441%" y="261" width="0.0125%" height="15" fill="rgb(215,19,7)" fg:x="111313" fg:w="38"/><text x="36.7941%" y="271.50"></text></g><g><title>__inc_numa_state (45 samples, 0.01%)</title><rect x="36.5924%" y="245" width="0.0148%" height="15" fill="rgb(238,81,41)" fg:x="111460" fg:w="45"/><text x="36.8424%" y="255.50"></text></g><g><title>rmqueue (1,035 samples, 0.34%)</title><rect x="36.5566%" y="261" width="0.3398%" height="15" fill="rgb(210,199,37)" fg:x="111351" fg:w="1035"/><text x="36.8066%" y="271.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (874 samples, 0.29%)</title><rect x="36.6094%" y="245" width="0.2869%" height="15" fill="rgb(244,192,49)" fg:x="111512" fg:w="874"/><text x="36.8594%" y="255.50"></text></g><g><title>rmqueue_bulk.constprop.0 (553 samples, 0.18%)</title><rect x="36.7148%" y="229" width="0.1816%" height="15" fill="rgb(226,211,11)" fg:x="111833" fg:w="553"/><text x="36.9648%" y="239.50"></text></g><g><title>get_page_from_freelist (3,847 samples, 1.26%)</title><rect x="35.6360%" y="277" width="1.2630%" height="15" fill="rgb(236,162,54)" fg:x="108547" fg:w="3847"/><text x="35.8860%" y="287.50"></text></g><g><title>__alloc_pages_nodemask (4,065 samples, 1.33%)</title><rect x="35.5743%" y="293" width="1.3345%" height="15" fill="rgb(220,229,9)" fg:x="108359" fg:w="4065"/><text x="35.8243%" y="303.50"></text></g><g><title>alloc_pages_current (4,211 samples, 1.38%)</title><rect x="35.5517%" y="309" width="1.3825%" height="15" fill="rgb(250,87,22)" fg:x="108290" fg:w="4211"/><text x="35.8017%" y="319.50"></text></g><g><title>__page_cache_alloc (4,258 samples, 1.40%)</title><rect x="35.5454%" y="325" width="1.3979%" height="15" fill="rgb(239,43,17)" fg:x="108271" fg:w="4258"/><text x="35.7954%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (158 samples, 0.05%)</title><rect x="37.6518%" y="261" width="0.0519%" height="15" fill="rgb(231,177,25)" fg:x="114687" fg:w="158"/><text x="37.9018%" y="271.50"></text></g><g><title>__mod_memcg_state.part.0 (74 samples, 0.02%)</title><rect x="37.6794%" y="245" width="0.0243%" height="15" fill="rgb(219,179,1)" fg:x="114771" fg:w="74"/><text x="37.9294%" y="255.50"></text></g><g><title>__mod_lruvec_state (233 samples, 0.08%)</title><rect x="37.6426%" y="277" width="0.0765%" height="15" fill="rgb(238,219,53)" fg:x="114659" fg:w="233"/><text x="37.8926%" y="287.50"></text></g><g><title>__mod_node_page_state (41 samples, 0.01%)</title><rect x="37.7056%" y="261" width="0.0135%" height="15" fill="rgb(232,167,36)" fg:x="114851" fg:w="41"/><text x="37.9556%" y="271.50"></text></g><g><title>__mod_lruvec_page_state (359 samples, 0.12%)</title><rect x="37.6242%" y="293" width="0.1179%" height="15" fill="rgb(244,19,51)" fg:x="114603" fg:w="359"/><text x="37.8742%" y="303.50"></text></g><g><title>__mod_node_page_state (65 samples, 0.02%)</title><rect x="37.7207%" y="277" width="0.0213%" height="15" fill="rgb(224,6,22)" fg:x="114897" fg:w="65"/><text x="37.9707%" y="287.50"></text></g><g><title>_raw_spin_lock_irq (135 samples, 0.04%)</title><rect x="37.7480%" y="293" width="0.0443%" height="15" fill="rgb(224,145,5)" fg:x="114980" fg:w="135"/><text x="37.9980%" y="303.50"></text></g><g><title>nvme_complete_rq (61 samples, 0.02%)</title><rect x="37.7940%" y="149" width="0.0200%" height="15" fill="rgb(234,130,49)" fg:x="115120" fg:w="61"/><text x="38.0440%" y="159.50"></text></g><g><title>blk_mq_end_request (61 samples, 0.02%)</title><rect x="37.7940%" y="133" width="0.0200%" height="15" fill="rgb(254,6,2)" fg:x="115120" fg:w="61"/><text x="38.0440%" y="143.50"></text></g><g><title>blk_update_request (59 samples, 0.02%)</title><rect x="37.7946%" y="117" width="0.0194%" height="15" fill="rgb(208,96,46)" fg:x="115122" fg:w="59"/><text x="38.0446%" y="127.50"></text></g><g><title>bio_endio (57 samples, 0.02%)</title><rect x="37.7953%" y="101" width="0.0187%" height="15" fill="rgb(239,3,39)" fg:x="115124" fg:w="57"/><text x="38.0453%" y="111.50"></text></g><g><title>mpage_end_io (57 samples, 0.02%)</title><rect x="37.7953%" y="85" width="0.0187%" height="15" fill="rgb(233,210,1)" fg:x="115124" fg:w="57"/><text x="38.0453%" y="95.50"></text></g><g><title>__handle_irq_event_percpu (70 samples, 0.02%)</title><rect x="37.7930%" y="213" width="0.0230%" height="15" fill="rgb(244,137,37)" fg:x="115117" fg:w="70"/><text x="38.0430%" y="223.50"></text></g><g><title>nvme_irq (70 samples, 0.02%)</title><rect x="37.7930%" y="197" width="0.0230%" height="15" fill="rgb(240,136,2)" fg:x="115117" fg:w="70"/><text x="38.0430%" y="207.50"></text></g><g><title>nvme_process_cq (70 samples, 0.02%)</title><rect x="37.7930%" y="181" width="0.0230%" height="15" fill="rgb(239,18,37)" fg:x="115117" fg:w="70"/><text x="38.0430%" y="191.50"></text></g><g><title>nvme_pci_complete_rq (67 samples, 0.02%)</title><rect x="37.7940%" y="165" width="0.0220%" height="15" fill="rgb(218,185,22)" fg:x="115120" fg:w="67"/><text x="38.0440%" y="175.50"></text></g><g><title>handle_irq_event (72 samples, 0.02%)</title><rect x="37.7930%" y="229" width="0.0236%" height="15" fill="rgb(225,218,4)" fg:x="115117" fg:w="72"/><text x="38.0430%" y="239.50"></text></g><g><title>asm_call_sysvec_on_stack (75 samples, 0.02%)</title><rect x="37.7926%" y="261" width="0.0246%" height="15" fill="rgb(230,182,32)" fg:x="115116" fg:w="75"/><text x="38.0426%" y="271.50"></text></g><g><title>handle_edge_irq (75 samples, 0.02%)</title><rect x="37.7926%" y="245" width="0.0246%" height="15" fill="rgb(242,56,43)" fg:x="115116" fg:w="75"/><text x="38.0426%" y="255.50"></text></g><g><title>common_interrupt (77 samples, 0.03%)</title><rect x="37.7923%" y="277" width="0.0253%" height="15" fill="rgb(233,99,24)" fg:x="115115" fg:w="77"/><text x="38.0423%" y="287.50"></text></g><g><title>asm_common_interrupt (78 samples, 0.03%)</title><rect x="37.7923%" y="293" width="0.0256%" height="15" fill="rgb(234,209,42)" fg:x="115115" fg:w="78"/><text x="38.0423%" y="303.50"></text></g><g><title>get_mem_cgroup_from_mm (56 samples, 0.02%)</title><rect x="37.9066%" y="277" width="0.0184%" height="15" fill="rgb(227,7,12)" fg:x="115463" fg:w="56"/><text x="38.1566%" y="287.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (65 samples, 0.02%)</title><rect x="37.9249%" y="277" width="0.0213%" height="15" fill="rgb(245,203,43)" fg:x="115519" fg:w="65"/><text x="38.1749%" y="287.50"></text></g><g><title>__count_memcg_events.part.0 (38 samples, 0.01%)</title><rect x="37.9338%" y="261" width="0.0125%" height="15" fill="rgb(238,205,33)" fg:x="115546" fg:w="38"/><text x="38.1838%" y="271.50"></text></g><g><title>page_counter_try_charge (64 samples, 0.02%)</title><rect x="38.0727%" y="261" width="0.0210%" height="15" fill="rgb(231,56,7)" fg:x="115969" fg:w="64"/><text x="38.3227%" y="271.50"></text></g><g><title>mem_cgroup_charge (825 samples, 0.27%)</title><rect x="37.8268%" y="293" width="0.2708%" height="15" fill="rgb(244,186,29)" fg:x="115220" fg:w="825"/><text x="38.0768%" y="303.50"></text></g><g><title>try_charge (429 samples, 0.14%)</title><rect x="37.9568%" y="277" width="0.1408%" height="15" fill="rgb(234,111,31)" fg:x="115616" fg:w="429"/><text x="38.2068%" y="287.50"></text></g><g><title>xas_load (318 samples, 0.10%)</title><rect x="38.1360%" y="277" width="0.1044%" height="15" fill="rgb(241,149,10)" fg:x="116162" fg:w="318"/><text x="38.3860%" y="287.50"></text></g><g><title>xa_get_order (420 samples, 0.14%)</title><rect x="38.1193%" y="293" width="0.1379%" height="15" fill="rgb(249,206,44)" fg:x="116111" fg:w="420"/><text x="38.3693%" y="303.50"></text></g><g><title>xas_start (51 samples, 0.02%)</title><rect x="38.2404%" y="277" width="0.0167%" height="15" fill="rgb(251,153,30)" fg:x="116480" fg:w="51"/><text x="38.4904%" y="287.50"></text></g><g><title>xas_find_conflict (177 samples, 0.06%)</title><rect x="38.2595%" y="293" width="0.0581%" height="15" fill="rgb(239,152,38)" fg:x="116538" fg:w="177"/><text x="38.5095%" y="303.50"></text></g><g><title>allocate_slab (31 samples, 0.01%)</title><rect x="38.4190%" y="197" width="0.0102%" height="15" fill="rgb(249,139,47)" fg:x="117024" fg:w="31"/><text x="38.6690%" y="207.50"></text></g><g><title>__slab_alloc (35 samples, 0.01%)</title><rect x="38.4181%" y="229" width="0.0115%" height="15" fill="rgb(244,64,35)" fg:x="117021" fg:w="35"/><text x="38.6681%" y="239.50"></text></g><g><title>___slab_alloc (35 samples, 0.01%)</title><rect x="38.4181%" y="213" width="0.0115%" height="15" fill="rgb(216,46,15)" fg:x="117021" fg:w="35"/><text x="38.6681%" y="223.50"></text></g><g><title>__add_to_page_cache_locked (4,414 samples, 1.45%)</title><rect x="36.9929%" y="309" width="1.4491%" height="15" fill="rgb(250,74,19)" fg:x="112680" fg:w="4414"/><text x="37.2429%" y="319.50"></text></g><g><title>xas_store (319 samples, 0.10%)</title><rect x="38.3373%" y="293" width="0.1047%" height="15" fill="rgb(249,42,33)" fg:x="116775" fg:w="319"/><text x="38.5873%" y="303.50"></text></g><g><title>xas_create (153 samples, 0.05%)</title><rect x="38.3918%" y="277" width="0.0502%" height="15" fill="rgb(242,149,17)" fg:x="116941" fg:w="153"/><text x="38.6418%" y="287.50"></text></g><g><title>xas_alloc (87 samples, 0.03%)</title><rect x="38.4135%" y="261" width="0.0286%" height="15" fill="rgb(244,29,21)" fg:x="117007" fg:w="87"/><text x="38.6635%" y="271.50"></text></g><g><title>kmem_cache_alloc (84 samples, 0.03%)</title><rect x="38.4144%" y="245" width="0.0276%" height="15" fill="rgb(220,130,37)" fg:x="117010" fg:w="84"/><text x="38.6644%" y="255.50"></text></g><g><title>__lock_text_start (41 samples, 0.01%)</title><rect x="38.5274%" y="277" width="0.0135%" height="15" fill="rgb(211,67,2)" fg:x="117354" fg:w="41"/><text x="38.7774%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (138 samples, 0.05%)</title><rect x="38.7385%" y="245" width="0.0453%" height="15" fill="rgb(235,68,52)" fg:x="117997" fg:w="138"/><text x="38.9885%" y="255.50"></text></g><g><title>__mod_memcg_state.part.0 (68 samples, 0.02%)</title><rect x="38.7615%" y="229" width="0.0223%" height="15" fill="rgb(246,142,3)" fg:x="118067" fg:w="68"/><text x="39.0115%" y="239.50"></text></g><g><title>__mod_lruvec_state (190 samples, 0.06%)</title><rect x="38.7299%" y="261" width="0.0624%" height="15" fill="rgb(241,25,7)" fg:x="117971" fg:w="190"/><text x="38.9799%" y="271.50"></text></g><g><title>mem_cgroup_update_lru_size (44 samples, 0.01%)</title><rect x="38.8097%" y="261" width="0.0144%" height="15" fill="rgb(242,119,39)" fg:x="118214" fg:w="44"/><text x="39.0597%" y="271.50"></text></g><g><title>__pagevec_lru_add_fn (938 samples, 0.31%)</title><rect x="38.5513%" y="277" width="0.3079%" height="15" fill="rgb(241,98,45)" fg:x="117427" fg:w="938"/><text x="38.8013%" y="287.50"></text></g><g><title>page_mapping (107 samples, 0.04%)</title><rect x="38.8242%" y="261" width="0.0351%" height="15" fill="rgb(254,28,30)" fg:x="118258" fg:w="107"/><text x="39.0742%" y="271.50"></text></g><g><title>lock_page_lruvec_irqsave (32 samples, 0.01%)</title><rect x="38.8599%" y="277" width="0.0105%" height="15" fill="rgb(241,142,54)" fg:x="118367" fg:w="32"/><text x="39.1099%" y="287.50"></text></g><g><title>free_unref_page_list (35 samples, 0.01%)</title><rect x="38.9332%" y="261" width="0.0115%" height="15" fill="rgb(222,85,15)" fg:x="118590" fg:w="35"/><text x="39.1832%" y="271.50"></text></g><g><title>__pagevec_lru_add (1,311 samples, 0.43%)</title><rect x="38.5146%" y="293" width="0.4304%" height="15" fill="rgb(210,85,47)" fg:x="117315" fg:w="1311"/><text x="38.7646%" y="303.50"></text></g><g><title>release_pages (193 samples, 0.06%)</title><rect x="38.8816%" y="277" width="0.0634%" height="15" fill="rgb(224,206,25)" fg:x="118433" fg:w="193"/><text x="39.1316%" y="287.50"></text></g><g><title>lru_cache_add (1,506 samples, 0.49%)</title><rect x="38.4551%" y="309" width="0.4944%" height="15" fill="rgb(243,201,19)" fg:x="117134" fg:w="1506"/><text x="38.7051%" y="319.50"></text></g><g><title>add_to_page_cache_lru (6,165 samples, 2.02%)</title><rect x="36.9433%" y="325" width="2.0240%" height="15" fill="rgb(236,59,4)" fg:x="112529" fg:w="6165"/><text x="37.1933%" y="335.50">a..</text></g><g><title>__blk_bios_map_sg (38 samples, 0.01%)</title><rect x="38.9844%" y="165" width="0.0125%" height="15" fill="rgb(254,179,45)" fg:x="118746" fg:w="38"/><text x="39.2344%" y="175.50"></text></g><g><title>__blk_rq_map_sg (39 samples, 0.01%)</title><rect x="38.9844%" y="181" width="0.0128%" height="15" fill="rgb(226,14,10)" fg:x="118746" fg:w="39"/><text x="39.2344%" y="191.50"></text></g><g><title>nvme_pci_setup_prps (32 samples, 0.01%)</title><rect x="39.0051%" y="181" width="0.0105%" height="15" fill="rgb(244,27,41)" fg:x="118809" fg:w="32"/><text x="39.2551%" y="191.50"></text></g><g><title>nvme_map_data (98 samples, 0.03%)</title><rect x="38.9844%" y="197" width="0.0322%" height="15" fill="rgb(235,35,32)" fg:x="118746" fg:w="98"/><text x="39.2344%" y="207.50"></text></g><g><title>__blk_mq_try_issue_directly (113 samples, 0.04%)</title><rect x="38.9817%" y="229" width="0.0371%" height="15" fill="rgb(218,68,31)" fg:x="118738" fg:w="113"/><text x="39.2317%" y="239.50"></text></g><g><title>nvme_queue_rq (111 samples, 0.04%)</title><rect x="38.9824%" y="213" width="0.0364%" height="15" fill="rgb(207,120,37)" fg:x="118740" fg:w="111"/><text x="39.2324%" y="223.50"></text></g><g><title>blk_finish_plug (115 samples, 0.04%)</title><rect x="38.9814%" y="309" width="0.0378%" height="15" fill="rgb(227,98,0)" fg:x="118737" fg:w="115"/><text x="39.2314%" y="319.50"></text></g><g><title>blk_flush_plug_list (115 samples, 0.04%)</title><rect x="38.9814%" y="293" width="0.0378%" height="15" fill="rgb(207,7,3)" fg:x="118737" fg:w="115"/><text x="39.2314%" y="303.50"></text></g><g><title>blk_mq_flush_plug_list (115 samples, 0.04%)</title><rect x="38.9814%" y="277" width="0.0378%" height="15" fill="rgb(206,98,19)" fg:x="118737" fg:w="115"/><text x="39.2314%" y="287.50"></text></g><g><title>blk_mq_sched_insert_requests (115 samples, 0.04%)</title><rect x="38.9814%" y="261" width="0.0378%" height="15" fill="rgb(217,5,26)" fg:x="118737" fg:w="115"/><text x="39.2314%" y="271.50"></text></g><g><title>blk_mq_try_issue_list_directly (114 samples, 0.04%)</title><rect x="38.9817%" y="245" width="0.0374%" height="15" fill="rgb(235,190,38)" fg:x="118738" fg:w="114"/><text x="39.2317%" y="255.50"></text></g><g><title>bio_add_page (160 samples, 0.05%)</title><rect x="39.2204%" y="277" width="0.0525%" height="15" fill="rgb(247,86,24)" fg:x="119465" fg:w="160"/><text x="39.4704%" y="287.50"></text></g><g><title>__bio_try_merge_page (108 samples, 0.04%)</title><rect x="39.2375%" y="261" width="0.0355%" height="15" fill="rgb(205,101,16)" fg:x="119517" fg:w="108"/><text x="39.4875%" y="271.50"></text></g><g><title>ext4_map_blocks (42 samples, 0.01%)</title><rect x="39.2815%" y="277" width="0.0138%" height="15" fill="rgb(246,168,33)" fg:x="119651" fg:w="42"/><text x="39.5315%" y="287.50"></text></g><g><title>fscrypt_mergeable_bio (43 samples, 0.01%)</title><rect x="39.2953%" y="277" width="0.0141%" height="15" fill="rgb(231,114,1)" fg:x="119693" fg:w="43"/><text x="39.5453%" y="287.50"></text></g><g><title>blk_bio_segment_split (53 samples, 0.02%)</title><rect x="39.3212%" y="197" width="0.0174%" height="15" fill="rgb(207,184,53)" fg:x="119772" fg:w="53"/><text x="39.5712%" y="207.50"></text></g><g><title>__blk_queue_split (57 samples, 0.02%)</title><rect x="39.3212%" y="213" width="0.0187%" height="15" fill="rgb(224,95,51)" fg:x="119772" fg:w="57"/><text x="39.5712%" y="223.50"></text></g><g><title>nvme_map_data (49 samples, 0.02%)</title><rect x="39.3452%" y="117" width="0.0161%" height="15" fill="rgb(212,188,45)" fg:x="119845" fg:w="49"/><text x="39.5952%" y="127.50"></text></g><g><title>__blk_mq_try_issue_directly (53 samples, 0.02%)</title><rect x="39.3445%" y="149" width="0.0174%" height="15" fill="rgb(223,154,38)" fg:x="119843" fg:w="53"/><text x="39.5945%" y="159.50"></text></g><g><title>nvme_queue_rq (52 samples, 0.02%)</title><rect x="39.3448%" y="133" width="0.0171%" height="15" fill="rgb(251,22,52)" fg:x="119844" fg:w="52"/><text x="39.5948%" y="143.50"></text></g><g><title>blk_flush_plug_list (54 samples, 0.02%)</title><rect x="39.3445%" y="213" width="0.0177%" height="15" fill="rgb(229,209,22)" fg:x="119843" fg:w="54"/><text x="39.5945%" y="223.50"></text></g><g><title>blk_mq_flush_plug_list (54 samples, 0.02%)</title><rect x="39.3445%" y="197" width="0.0177%" height="15" fill="rgb(234,138,34)" fg:x="119843" fg:w="54"/><text x="39.5945%" y="207.50"></text></g><g><title>blk_mq_sched_insert_requests (54 samples, 0.02%)</title><rect x="39.3445%" y="181" width="0.0177%" height="15" fill="rgb(212,95,11)" fg:x="119843" fg:w="54"/><text x="39.5945%" y="191.50"></text></g><g><title>blk_mq_try_issue_list_directly (54 samples, 0.02%)</title><rect x="39.3445%" y="165" width="0.0177%" height="15" fill="rgb(240,179,47)" fg:x="119843" fg:w="54"/><text x="39.5945%" y="175.50"></text></g><g><title>blk_mq_submit_bio (156 samples, 0.05%)</title><rect x="39.3130%" y="229" width="0.0512%" height="15" fill="rgb(240,163,11)" fg:x="119747" fg:w="156"/><text x="39.5630%" y="239.50"></text></g><g><title>__submit_bio_noacct_mq (159 samples, 0.05%)</title><rect x="39.3130%" y="245" width="0.0522%" height="15" fill="rgb(236,37,12)" fg:x="119747" fg:w="159"/><text x="39.5630%" y="255.50"></text></g><g><title>submit_bio (188 samples, 0.06%)</title><rect x="39.3104%" y="277" width="0.0617%" height="15" fill="rgb(232,164,16)" fg:x="119739" fg:w="188"/><text x="39.5604%" y="287.50"></text></g><g><title>submit_bio_noacct (185 samples, 0.06%)</title><rect x="39.3114%" y="261" width="0.0607%" height="15" fill="rgb(244,205,15)" fg:x="119742" fg:w="185"/><text x="39.5614%" y="271.50"></text></g><g><title>xas_load (164 samples, 0.05%)</title><rect x="39.3829%" y="261" width="0.0538%" height="15" fill="rgb(223,117,47)" fg:x="119960" fg:w="164"/><text x="39.6329%" y="271.50"></text></g><g><title>xa_load (223 samples, 0.07%)</title><rect x="39.3721%" y="277" width="0.0732%" height="15" fill="rgb(244,107,35)" fg:x="119927" fg:w="223"/><text x="39.6221%" y="287.50"></text></g><g><title>ext4_mpage_readpages (1,299 samples, 0.43%)</title><rect x="39.0211%" y="293" width="0.4265%" height="15" fill="rgb(205,140,8)" fg:x="118858" fg:w="1299"/><text x="39.2711%" y="303.50"></text></g><g><title>read_pages (1,445 samples, 0.47%)</title><rect x="38.9811%" y="325" width="0.4744%" height="15" fill="rgb(228,84,46)" fg:x="118736" fg:w="1445"/><text x="39.2311%" y="335.50"></text></g><g><title>ext4_readahead (1,329 samples, 0.44%)</title><rect x="39.0192%" y="309" width="0.4363%" height="15" fill="rgb(254,188,9)" fg:x="118852" fg:w="1329"/><text x="39.2692%" y="319.50"></text></g><g><title>xas_load (274 samples, 0.09%)</title><rect x="39.4703%" y="309" width="0.0900%" height="15" fill="rgb(206,112,54)" fg:x="120226" fg:w="274"/><text x="39.7203%" y="319.50"></text></g><g><title>xa_load (356 samples, 0.12%)</title><rect x="39.4555%" y="325" width="0.1169%" height="15" fill="rgb(216,84,49)" fg:x="120181" fg:w="356"/><text x="39.7055%" y="335.50"></text></g><g><title>xas_start (37 samples, 0.01%)</title><rect x="39.5602%" y="309" width="0.0121%" height="15" fill="rgb(214,194,35)" fg:x="120500" fg:w="37"/><text x="39.8102%" y="319.50"></text></g><g><title>page_cache_ra_unbounded (12,368 samples, 4.06%)</title><rect x="35.5149%" y="341" width="4.0604%" height="15" fill="rgb(249,28,3)" fg:x="108178" fg:w="12368"/><text x="35.7649%" y="351.50">page..</text></g><g><title>page_cache_async_ra (12,413 samples, 4.08%)</title><rect x="35.5031%" y="373" width="4.0752%" height="15" fill="rgb(222,56,52)" fg:x="108142" fg:w="12413"/><text x="35.7531%" y="383.50">page..</text></g><g><title>ondemand_readahead (12,403 samples, 4.07%)</title><rect x="35.5064%" y="357" width="4.0719%" height="15" fill="rgb(245,217,50)" fg:x="108152" fg:w="12403"/><text x="35.7564%" y="367.50">onde..</text></g><g><title>generic_file_buffered_read_get_pages (12,859 samples, 4.22%)</title><rect x="35.3570%" y="389" width="4.2216%" height="15" fill="rgb(213,201,24)" fg:x="107697" fg:w="12859"/><text x="35.6070%" y="399.50">gener..</text></g><g><title>mark_page_accessed (208 samples, 0.07%)</title><rect x="39.5786%" y="389" width="0.0683%" height="15" fill="rgb(248,116,28)" fg:x="120556" fg:w="208"/><text x="39.8286%" y="399.50"></text></g><g><title>generic_file_buffered_read (38,567 samples, 12.66%)</title><rect x="26.9856%" y="405" width="12.6616%" height="15" fill="rgb(219,72,43)" fg:x="82198" fg:w="38567"/><text x="27.2356%" y="415.50">generic_file_buffer..</text></g><g><title>new_sync_read (38,588 samples, 12.67%)</title><rect x="26.9820%" y="453" width="12.6685%" height="15" fill="rgb(209,138,14)" fg:x="82187" fg:w="38588"/><text x="27.2320%" y="463.50">new_sync_read</text></g><g><title>ext4_file_read_iter (38,588 samples, 12.67%)</title><rect x="26.9820%" y="437" width="12.6685%" height="15" fill="rgb(222,18,33)" fg:x="82187" fg:w="38588"/><text x="27.2320%" y="447.50">ext4_file_read_iter</text></g><g><title>generic_file_read_iter (38,588 samples, 12.67%)</title><rect x="26.9820%" y="421" width="12.6685%" height="15" fill="rgb(213,199,7)" fg:x="82187" fg:w="38588"/><text x="27.2320%" y="431.50">generic_file_read_i..</text></g><g><title>__x64_sys_read (38,592 samples, 12.67%)</title><rect x="26.9810%" y="501" width="12.6698%" height="15" fill="rgb(250,110,10)" fg:x="82184" fg:w="38592"/><text x="27.2310%" y="511.50">__x64_sys_read</text></g><g><title>ksys_read (38,591 samples, 12.67%)</title><rect x="26.9814%" y="485" width="12.6694%" height="15" fill="rgb(248,123,6)" fg:x="82185" fg:w="38591"/><text x="27.2314%" y="495.50">ksys_read</text></g><g><title>vfs_read (38,591 samples, 12.67%)</title><rect x="26.9814%" y="469" width="12.6694%" height="15" fill="rgb(206,91,31)" fg:x="82185" fg:w="38591"/><text x="27.2314%" y="479.50">vfs_read</text></g><g><title>entry_SYSCALL_64_after_hwframe (38,593 samples, 12.67%)</title><rect x="26.9810%" y="533" width="12.6701%" height="15" fill="rgb(211,154,13)" fg:x="82184" fg:w="38593"/><text x="27.2310%" y="543.50">entry_SYSCALL_64_af..</text></g><g><title>do_syscall_64 (38,593 samples, 12.67%)</title><rect x="26.9810%" y="517" width="12.6701%" height="15" fill="rgb(225,148,7)" fg:x="82184" fg:w="38593"/><text x="27.2310%" y="527.50">do_syscall_64</text></g><g><title>__libc_read (38,602 samples, 12.67%)</title><rect x="26.9807%" y="565" width="12.6731%" height="15" fill="rgb(220,160,43)" fg:x="82183" fg:w="38602"/><text x="27.2307%" y="575.50">__libc_read</text></g><g><title>__libc_read (38,602 samples, 12.67%)</title><rect x="26.9807%" y="549" width="12.6731%" height="15" fill="rgb(213,52,39)" fg:x="82183" fg:w="38602"/><text x="27.2307%" y="559.50">__libc_read</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (38,604 samples, 12.67%)</title><rect x="26.9804%" y="661" width="12.6737%" height="15" fill="rgb(243,137,7)" fg:x="82182" fg:w="38604"/><text x="27.2304%" y="671.50">&lt;std::io::buffered:..</text></g><g><title>std::io::default_read_exact (38,604 samples, 12.67%)</title><rect x="26.9804%" y="645" width="12.6737%" height="15" fill="rgb(230,79,13)" fg:x="82182" fg:w="38604"/><text x="27.2304%" y="655.50">std::io::default_re..</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (38,604 samples, 12.67%)</title><rect x="26.9804%" y="629" width="12.6737%" height="15" fill="rgb(247,105,23)" fg:x="82182" fg:w="38604"/><text x="27.2304%" y="639.50">&lt;std::io::buffered:..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (38,603 samples, 12.67%)</title><rect x="26.9807%" y="613" width="12.6734%" height="15" fill="rgb(223,179,41)" fg:x="82183" fg:w="38603"/><text x="27.2307%" y="623.50">&lt;std::fs::File as s..</text></g><g><title>std::sys::unix::fs::File::read (38,603 samples, 12.67%)</title><rect x="26.9807%" y="597" width="12.6734%" height="15" fill="rgb(218,9,34)" fg:x="82183" fg:w="38603"/><text x="27.2307%" y="607.50">std::sys::unix::fs:..</text></g><g><title>std::sys::unix::fd::FileDesc::read (38,603 samples, 12.67%)</title><rect x="26.9807%" y="581" width="12.6734%" height="15" fill="rgb(222,106,8)" fg:x="82183" fg:w="38603"/><text x="27.2307%" y="591.50">std::sys::unix::fd:..</text></g><g><title>malloc_consolidate (374 samples, 0.12%)</title><rect x="39.6567%" y="437" width="0.1228%" height="15" fill="rgb(211,220,0)" fg:x="120794" fg:w="374"/><text x="39.9067%" y="447.50"></text></g><g><title>unlink_chunk (92 samples, 0.03%)</title><rect x="39.7493%" y="421" width="0.0302%" height="15" fill="rgb(229,52,16)" fg:x="121076" fg:w="92"/><text x="39.9993%" y="431.50"></text></g><g><title>_int_realloc (395 samples, 0.13%)</title><rect x="39.6544%" y="469" width="0.1297%" height="15" fill="rgb(212,155,18)" fg:x="120787" fg:w="395"/><text x="39.9044%" y="479.50"></text></g><g><title>_int_malloc (395 samples, 0.13%)</title><rect x="39.6544%" y="453" width="0.1297%" height="15" fill="rgb(242,21,14)" fg:x="120787" fg:w="395"/><text x="39.9044%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (398 samples, 0.13%)</title><rect x="39.6541%" y="533" width="0.1307%" height="15" fill="rgb(222,19,48)" fg:x="120786" fg:w="398"/><text x="39.9041%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (398 samples, 0.13%)</title><rect x="39.6541%" y="517" width="0.1307%" height="15" fill="rgb(232,45,27)" fg:x="120786" fg:w="398"/><text x="39.9041%" y="527.50"></text></g><g><title>alloc::alloc::realloc (398 samples, 0.13%)</title><rect x="39.6541%" y="501" width="0.1307%" height="15" fill="rgb(249,103,42)" fg:x="120786" fg:w="398"/><text x="39.9041%" y="511.50"></text></g><g><title>__GI___libc_realloc (398 samples, 0.13%)</title><rect x="39.6541%" y="485" width="0.1307%" height="15" fill="rgb(246,81,33)" fg:x="120786" fg:w="398"/><text x="39.9041%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (407 samples, 0.13%)</title><rect x="39.6541%" y="613" width="0.1336%" height="15" fill="rgb(252,33,42)" fg:x="120786" fg:w="407"/><text x="39.9041%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (407 samples, 0.13%)</title><rect x="39.6541%" y="597" width="0.1336%" height="15" fill="rgb(209,212,41)" fg:x="120786" fg:w="407"/><text x="39.9041%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (407 samples, 0.13%)</title><rect x="39.6541%" y="581" width="0.1336%" height="15" fill="rgb(207,154,6)" fg:x="120786" fg:w="407"/><text x="39.9041%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (407 samples, 0.13%)</title><rect x="39.6541%" y="565" width="0.1336%" height="15" fill="rgb(223,64,47)" fg:x="120786" fg:w="407"/><text x="39.9041%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (407 samples, 0.13%)</title><rect x="39.6541%" y="549" width="0.1336%" height="15" fill="rgb(211,161,38)" fg:x="120786" fg:w="407"/><text x="39.9041%" y="559.50"></text></g><g><title>__irqentry_text_end (49 samples, 0.02%)</title><rect x="44.7047%" y="581" width="0.0161%" height="15" fill="rgb(219,138,40)" fg:x="136170" fg:w="49"/><text x="44.9547%" y="591.50"></text></g><g><title>down_read_trylock (193 samples, 0.06%)</title><rect x="44.9072%" y="533" width="0.0634%" height="15" fill="rgb(241,228,46)" fg:x="136787" fg:w="193"/><text x="45.1572%" y="543.50"></text></g><g><title>find_vma (56 samples, 0.02%)</title><rect x="44.9706%" y="533" width="0.0184%" height="15" fill="rgb(223,209,38)" fg:x="136980" fg:w="56"/><text x="45.2206%" y="543.50"></text></g><g><title>vmacache_find (43 samples, 0.01%)</title><rect x="44.9749%" y="517" width="0.0141%" height="15" fill="rgb(236,164,45)" fg:x="136993" fg:w="43"/><text x="45.2249%" y="527.50"></text></g><g><title>__count_memcg_events (42 samples, 0.01%)</title><rect x="45.1006%" y="517" width="0.0138%" height="15" fill="rgb(231,15,5)" fg:x="137376" fg:w="42"/><text x="45.3506%" y="527.50"></text></g><g><title>__count_memcg_events.part.0 (42 samples, 0.01%)</title><rect x="45.1006%" y="501" width="0.0138%" height="15" fill="rgb(252,35,15)" fg:x="137376" fg:w="42"/><text x="45.3506%" y="511.50"></text></g><g><title>_raw_spin_lock (129 samples, 0.04%)</title><rect x="45.3265%" y="485" width="0.0424%" height="15" fill="rgb(248,181,18)" fg:x="138064" fg:w="129"/><text x="45.5765%" y="495.50"></text></g><g><title>__pte_alloc (31 samples, 0.01%)</title><rect x="45.4640%" y="469" width="0.0102%" height="15" fill="rgb(233,39,42)" fg:x="138483" fg:w="31"/><text x="45.7140%" y="479.50"></text></g><g><title>get_page_from_freelist (37 samples, 0.01%)</title><rect x="45.6265%" y="421" width="0.0121%" height="15" fill="rgb(238,110,33)" fg:x="138978" fg:w="37"/><text x="45.8765%" y="431.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (42 samples, 0.01%)</title><rect x="45.6265%" y="437" width="0.0138%" height="15" fill="rgb(233,195,10)" fg:x="138978" fg:w="42"/><text x="45.8765%" y="447.50"></text></g><g><title>clear_page_erms (2,639 samples, 0.87%)</title><rect x="45.7457%" y="421" width="0.8664%" height="15" fill="rgb(254,105,3)" fg:x="139341" fg:w="2639"/><text x="45.9957%" y="431.50"></text></g><g><title>kernel_init_free_pages (53 samples, 0.02%)</title><rect x="46.6121%" y="421" width="0.0174%" height="15" fill="rgb(221,225,9)" fg:x="141980" fg:w="53"/><text x="46.8621%" y="431.50"></text></g><g><title>__inc_numa_state (47 samples, 0.02%)</title><rect x="46.6820%" y="405" width="0.0154%" height="15" fill="rgb(224,227,45)" fg:x="142193" fg:w="47"/><text x="46.9320%" y="415.50"></text></g><g><title>rmqueue (1,003 samples, 0.33%)</title><rect x="46.6295%" y="421" width="0.3293%" height="15" fill="rgb(229,198,43)" fg:x="142033" fg:w="1003"/><text x="46.8795%" y="431.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (794 samples, 0.26%)</title><rect x="46.6981%" y="405" width="0.2607%" height="15" fill="rgb(206,209,35)" fg:x="142242" fg:w="794"/><text x="46.9481%" y="415.50"></text></g><g><title>rmqueue_bulk.constprop.0 (469 samples, 0.15%)</title><rect x="46.8048%" y="389" width="0.1540%" height="15" fill="rgb(245,195,53)" fg:x="142567" fg:w="469"/><text x="47.0548%" y="399.50"></text></g><g><title>get_page_from_freelist (4,003 samples, 1.31%)</title><rect x="45.6485%" y="437" width="1.3142%" height="15" fill="rgb(240,92,26)" fg:x="139045" fg:w="4003"/><text x="45.8985%" y="447.50"></text></g><g><title>__alloc_pages_nodemask (4,391 samples, 1.44%)</title><rect x="45.5333%" y="453" width="1.4416%" height="15" fill="rgb(207,40,23)" fg:x="138694" fg:w="4391"/><text x="45.7833%" y="463.50"></text></g><g><title>alloc_pages_vma (4,624 samples, 1.52%)</title><rect x="45.4742%" y="469" width="1.5181%" height="15" fill="rgb(223,111,35)" fg:x="138514" fg:w="4624"/><text x="45.7242%" y="479.50"></text></g><g><title>kthread_blkcg (31 samples, 0.01%)</title><rect x="47.1906%" y="453" width="0.0102%" height="15" fill="rgb(229,147,28)" fg:x="143742" fg:w="31"/><text x="47.4406%" y="463.50"></text></g><g><title>cgroup_throttle_swaprate (639 samples, 0.21%)</title><rect x="46.9926%" y="469" width="0.2098%" height="15" fill="rgb(211,29,28)" fg:x="143139" fg:w="639"/><text x="47.2426%" y="479.50"></text></g><g><title>__mod_memcg_lruvec_state (141 samples, 0.05%)</title><rect x="47.4910%" y="389" width="0.0463%" height="15" fill="rgb(228,72,33)" fg:x="144657" fg:w="141"/><text x="47.7410%" y="399.50"></text></g><g><title>__mod_memcg_state.part.0 (79 samples, 0.03%)</title><rect x="47.5113%" y="373" width="0.0259%" height="15" fill="rgb(205,214,31)" fg:x="144719" fg:w="79"/><text x="47.7613%" y="383.50"></text></g><g><title>__mod_lruvec_state (187 samples, 0.06%)</title><rect x="47.4860%" y="405" width="0.0614%" height="15" fill="rgb(224,111,15)" fg:x="144642" fg:w="187"/><text x="47.7360%" y="415.50"></text></g><g><title>__mod_zone_page_state (49 samples, 0.02%)</title><rect x="47.5570%" y="405" width="0.0161%" height="15" fill="rgb(253,21,26)" fg:x="144858" fg:w="49"/><text x="47.8070%" y="415.50"></text></g><g><title>mem_cgroup_update_lru_size (41 samples, 0.01%)</title><rect x="47.5730%" y="405" width="0.0135%" height="15" fill="rgb(245,139,43)" fg:x="144907" fg:w="41"/><text x="47.8230%" y="415.50"></text></g><g><title>__pagevec_lru_add_fn (994 samples, 0.33%)</title><rect x="47.2969%" y="421" width="0.3263%" height="15" fill="rgb(252,170,7)" fg:x="144066" fg:w="994"/><text x="47.5469%" y="431.50"></text></g><g><title>page_mapping (112 samples, 0.04%)</title><rect x="47.5865%" y="405" width="0.0368%" height="15" fill="rgb(231,118,14)" fg:x="144948" fg:w="112"/><text x="47.8365%" y="415.50"></text></g><g><title>_raw_spin_lock_irqsave (72 samples, 0.02%)</title><rect x="47.6285%" y="405" width="0.0236%" height="15" fill="rgb(238,83,0)" fg:x="145076" fg:w="72"/><text x="47.8785%" y="415.50"></text></g><g><title>native_queued_spin_lock_slowpath (51 samples, 0.02%)</title><rect x="47.6354%" y="389" width="0.0167%" height="15" fill="rgb(221,39,39)" fg:x="145097" fg:w="51"/><text x="47.8854%" y="399.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (51 samples, 0.02%)</title><rect x="47.6354%" y="373" width="0.0167%" height="15" fill="rgb(222,119,46)" fg:x="145097" fg:w="51"/><text x="47.8854%" y="383.50"></text></g><g><title>lock_page_lruvec_irqsave (88 samples, 0.03%)</title><rect x="47.6236%" y="421" width="0.0289%" height="15" fill="rgb(222,165,49)" fg:x="145061" fg:w="88"/><text x="47.8736%" y="431.50"></text></g><g><title>__pagevec_lru_add (1,338 samples, 0.44%)</title><rect x="47.2733%" y="437" width="0.4393%" height="15" fill="rgb(219,113,52)" fg:x="143994" fg:w="1338"/><text x="47.5233%" y="447.50"></text></g><g><title>release_pages (160 samples, 0.05%)</title><rect x="47.6600%" y="421" width="0.0525%" height="15" fill="rgb(214,7,15)" fg:x="145172" fg:w="160"/><text x="47.9100%" y="431.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1,519 samples, 0.50%)</title><rect x="47.2178%" y="469" width="0.4987%" height="15" fill="rgb(235,32,4)" fg:x="143825" fg:w="1519"/><text x="47.4678%" y="479.50"></text></g><g><title>lru_cache_add (1,497 samples, 0.49%)</title><rect x="47.2250%" y="453" width="0.4915%" height="15" fill="rgb(238,90,54)" fg:x="143847" fg:w="1497"/><text x="47.4750%" y="463.50"></text></g><g><title>get_mem_cgroup_from_mm (434 samples, 0.14%)</title><rect x="47.8294%" y="453" width="0.1425%" height="15" fill="rgb(213,208,19)" fg:x="145688" fg:w="434"/><text x="48.0794%" y="463.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (78 samples, 0.03%)</title><rect x="47.9719%" y="453" width="0.0256%" height="15" fill="rgb(233,156,4)" fg:x="146122" fg:w="78"/><text x="48.2219%" y="463.50"></text></g><g><title>__count_memcg_events.part.0 (50 samples, 0.02%)</title><rect x="47.9811%" y="437" width="0.0164%" height="15" fill="rgb(207,194,5)" fg:x="146150" fg:w="50"/><text x="48.2311%" y="447.50"></text></g><g><title>page_counter_try_charge (113 samples, 0.04%)</title><rect x="48.1206%" y="437" width="0.0371%" height="15" fill="rgb(206,111,30)" fg:x="146575" fg:w="113"/><text x="48.3706%" y="447.50"></text></g><g><title>mem_cgroup_charge (1,356 samples, 0.45%)</title><rect x="47.7165%" y="469" width="0.4452%" height="15" fill="rgb(243,70,54)" fg:x="145344" fg:w="1356"/><text x="47.9665%" y="479.50"></text></g><g><title>try_charge (476 samples, 0.16%)</title><rect x="48.0054%" y="453" width="0.1563%" height="15" fill="rgb(242,28,8)" fg:x="146224" fg:w="476"/><text x="48.2554%" y="463.50"></text></g><g><title>__mod_memcg_state.part.0 (87 samples, 0.03%)</title><rect x="48.2434%" y="405" width="0.0286%" height="15" fill="rgb(219,106,18)" fg:x="146949" fg:w="87"/><text x="48.4934%" y="415.50"></text></g><g><title>__mod_memcg_lruvec_state (173 samples, 0.06%)</title><rect x="48.2155%" y="421" width="0.0568%" height="15" fill="rgb(244,222,10)" fg:x="146864" fg:w="173"/><text x="48.4655%" y="431.50"></text></g><g><title>__mod_lruvec_state (241 samples, 0.08%)</title><rect x="48.2073%" y="437" width="0.0791%" height="15" fill="rgb(236,179,52)" fg:x="146839" fg:w="241"/><text x="48.4573%" y="447.50"></text></g><g><title>__mod_node_page_state (35 samples, 0.01%)</title><rect x="48.2749%" y="421" width="0.0115%" height="15" fill="rgb(213,23,39)" fg:x="147045" fg:w="35"/><text x="48.5249%" y="431.50"></text></g><g><title>__mod_lruvec_page_state (387 samples, 0.13%)</title><rect x="48.1873%" y="453" width="0.1271%" height="15" fill="rgb(238,48,10)" fg:x="146778" fg:w="387"/><text x="48.4373%" y="463.50"></text></g><g><title>__mod_node_page_state (83 samples, 0.03%)</title><rect x="48.2871%" y="437" width="0.0272%" height="15" fill="rgb(251,196,23)" fg:x="147082" fg:w="83"/><text x="48.5371%" y="447.50"></text></g><g><title>page_add_new_anon_rmap (479 samples, 0.16%)</title><rect x="48.1719%" y="469" width="0.1573%" height="15" fill="rgb(250,152,24)" fg:x="146731" fg:w="479"/><text x="48.4219%" y="479.50"></text></g><g><title>__page_set_anon_rmap (35 samples, 0.01%)</title><rect x="48.3176%" y="453" width="0.0115%" height="15" fill="rgb(209,150,17)" fg:x="147175" fg:w="35"/><text x="48.5676%" y="463.50"></text></g><g><title>do_anonymous_page (9,083 samples, 2.98%)</title><rect x="45.3806%" y="485" width="2.9820%" height="15" fill="rgb(234,202,34)" fg:x="138229" fg:w="9083"/><text x="45.6306%" y="495.50">do_..</text></g><g><title>handle_pte_fault (9,506 samples, 3.12%)</title><rect x="45.2654%" y="501" width="3.1208%" height="15" fill="rgb(253,148,53)" fg:x="137878" fg:w="9506"/><text x="45.5154%" y="511.50">han..</text></g><g><title>__handle_mm_fault (9,984 samples, 3.28%)</title><rect x="45.1144%" y="517" width="3.2778%" height="15" fill="rgb(218,129,16)" fg:x="137418" fg:w="9984"/><text x="45.3644%" y="527.50">__h..</text></g><g><title>handle_mm_fault (10,446 samples, 3.43%)</title><rect x="44.9890%" y="533" width="3.4294%" height="15" fill="rgb(216,85,19)" fg:x="137036" fg:w="10446"/><text x="45.2390%" y="543.50">han..</text></g><g><title>mem_cgroup_from_task (34 samples, 0.01%)</title><rect x="48.4184%" y="533" width="0.0112%" height="15" fill="rgb(235,228,7)" fg:x="147482" fg:w="34"/><text x="48.6684%" y="543.50"></text></g><g><title>rcu_read_unlock_strict (62 samples, 0.02%)</title><rect x="48.4335%" y="533" width="0.0204%" height="15" fill="rgb(245,175,0)" fg:x="147528" fg:w="62"/><text x="48.6835%" y="543.50"></text></g><g><title>up_read (179 samples, 0.06%)</title><rect x="48.4539%" y="533" width="0.0588%" height="15" fill="rgb(208,168,36)" fg:x="147590" fg:w="179"/><text x="48.7039%" y="543.50"></text></g><g><title>do_user_addr_fault (11,249 samples, 3.69%)</title><rect x="44.8232%" y="549" width="3.6931%" height="15" fill="rgb(246,171,24)" fg:x="136531" fg:w="11249"/><text x="45.0732%" y="559.50">do_u..</text></g><g><title>exit_to_user_mode_prepare (51 samples, 0.02%)</title><rect x="48.5524%" y="517" width="0.0167%" height="15" fill="rgb(215,142,24)" fg:x="147890" fg:w="51"/><text x="48.8024%" y="527.50"></text></g><g><title>irqentry_exit (95 samples, 0.03%)</title><rect x="48.5422%" y="549" width="0.0312%" height="15" fill="rgb(250,187,7)" fg:x="147859" fg:w="95"/><text x="48.7922%" y="559.50"></text></g><g><title>irqentry_exit_to_user_mode (67 samples, 0.02%)</title><rect x="48.5514%" y="533" width="0.0220%" height="15" fill="rgb(228,66,33)" fg:x="147887" fg:w="67"/><text x="48.8014%" y="543.50"></text></g><g><title>exc_page_fault (11,540 samples, 3.79%)</title><rect x="44.7897%" y="565" width="3.7886%" height="15" fill="rgb(234,215,21)" fg:x="136429" fg:w="11540"/><text x="45.0397%" y="575.50">exc_..</text></g><g><title>asm_exc_page_fault (11,780 samples, 3.87%)</title><rect x="44.7211%" y="581" width="3.8674%" height="15" fill="rgb(222,191,20)" fg:x="136220" fg:w="11780"/><text x="44.9711%" y="591.50">asm_..</text></g><g><title>error_entry (380 samples, 0.12%)</title><rect x="48.5950%" y="581" width="0.1248%" height="15" fill="rgb(245,79,54)" fg:x="148020" fg:w="380"/><text x="48.8450%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (29,116 samples, 9.56%)</title><rect x="39.6541%" y="661" width="9.5588%" height="15" fill="rgb(240,10,37)" fg:x="120786" fg:w="29116"/><text x="39.9041%" y="671.50">alloc::vec::Ve..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (29,116 samples, 9.56%)</title><rect x="39.6541%" y="645" width="9.5588%" height="15" fill="rgb(214,192,32)" fg:x="120786" fg:w="29116"/><text x="39.9041%" y="655.50">&lt;alloc::vec::V..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (29,116 samples, 9.56%)</title><rect x="39.6541%" y="629" width="9.5588%" height="15" fill="rgb(209,36,54)" fg:x="120786" fg:w="29116"/><text x="39.9041%" y="639.50">alloc::vec::Ve..</text></g><g><title>core::intrinsics::copy_nonoverlapping (28,709 samples, 9.43%)</title><rect x="39.7877%" y="613" width="9.4252%" height="15" fill="rgb(220,10,11)" fg:x="121193" fg:w="28709"/><text x="40.0377%" y="623.50">core::intrins..</text></g><g><title>__memmove_avx_unaligned_erms (28,709 samples, 9.43%)</title><rect x="39.7877%" y="597" width="9.4252%" height="15" fill="rgb(221,106,17)" fg:x="121193" fg:w="28709"/><text x="40.0377%" y="607.50">__memmove_avx..</text></g><g><title>sync_regs (1,494 samples, 0.49%)</title><rect x="48.7224%" y="581" width="0.4905%" height="15" fill="rgb(251,142,44)" fg:x="148408" fg:w="1494"/><text x="48.9724%" y="591.50"></text></g><g><title>__mod_memcg_lruvec_state (61 samples, 0.02%)</title><rect x="49.2782%" y="389" width="0.0200%" height="15" fill="rgb(238,13,15)" fg:x="150101" fg:w="61"/><text x="49.5282%" y="399.50"></text></g><g><title>__mod_memcg_state.part.0 (33 samples, 0.01%)</title><rect x="49.2874%" y="373" width="0.0108%" height="15" fill="rgb(208,107,27)" fg:x="150129" fg:w="33"/><text x="49.5374%" y="383.50"></text></g><g><title>__mod_lruvec_state (89 samples, 0.03%)</title><rect x="49.2756%" y="405" width="0.0292%" height="15" fill="rgb(205,136,37)" fg:x="150093" fg:w="89"/><text x="49.5256%" y="415.50"></text></g><g><title>__free_one_page (194 samples, 0.06%)</title><rect x="49.3715%" y="357" width="0.0637%" height="15" fill="rgb(250,205,27)" fg:x="150385" fg:w="194"/><text x="49.6215%" y="367.50"></text></g><g><title>free_unref_page_list (369 samples, 0.12%)</title><rect x="49.3173%" y="405" width="0.1211%" height="15" fill="rgb(210,80,43)" fg:x="150220" fg:w="369"/><text x="49.5673%" y="415.50"></text></g><g><title>free_unref_page_commit (315 samples, 0.10%)</title><rect x="49.3350%" y="389" width="0.1034%" height="15" fill="rgb(247,160,36)" fg:x="150274" fg:w="315"/><text x="49.5850%" y="399.50"></text></g><g><title>free_pcppages_bulk (290 samples, 0.10%)</title><rect x="49.3432%" y="373" width="0.0952%" height="15" fill="rgb(234,13,49)" fg:x="150299" fg:w="290"/><text x="49.5932%" y="383.50"></text></g><g><title>mem_cgroup_uncharge_list (38 samples, 0.01%)</title><rect x="49.4394%" y="405" width="0.0125%" height="15" fill="rgb(234,122,0)" fg:x="150592" fg:w="38"/><text x="49.6894%" y="415.50"></text></g><g><title>tlb_finish_mmu (720 samples, 0.24%)</title><rect x="49.2191%" y="453" width="0.2364%" height="15" fill="rgb(207,146,38)" fg:x="149921" fg:w="720"/><text x="49.4691%" y="463.50"></text></g><g><title>free_pages_and_swap_cache (716 samples, 0.24%)</title><rect x="49.2205%" y="437" width="0.2351%" height="15" fill="rgb(207,177,25)" fg:x="149925" fg:w="716"/><text x="49.4705%" y="447.50"></text></g><g><title>release_pages (664 samples, 0.22%)</title><rect x="49.2375%" y="421" width="0.2180%" height="15" fill="rgb(211,178,42)" fg:x="149977" fg:w="664"/><text x="49.4875%" y="431.50"></text></g><g><title>__mod_memcg_lruvec_state (122 samples, 0.04%)</title><rect x="49.7224%" y="341" width="0.0401%" height="15" fill="rgb(230,69,54)" fg:x="151454" fg:w="122"/><text x="49.9724%" y="351.50"></text></g><g><title>__mod_memcg_state.part.0 (46 samples, 0.02%)</title><rect x="49.7474%" y="325" width="0.0151%" height="15" fill="rgb(214,135,41)" fg:x="151530" fg:w="46"/><text x="49.9974%" y="335.50"></text></g><g><title>__mod_lruvec_state (177 samples, 0.06%)</title><rect x="49.7155%" y="357" width="0.0581%" height="15" fill="rgb(237,67,25)" fg:x="151433" fg:w="177"/><text x="49.9655%" y="367.50"></text></g><g><title>__mod_lruvec_page_state (228 samples, 0.07%)</title><rect x="49.7099%" y="373" width="0.0749%" height="15" fill="rgb(222,189,50)" fg:x="151416" fg:w="228"/><text x="49.9599%" y="383.50"></text></g><g><title>lock_page_memcg (34 samples, 0.01%)</title><rect x="49.7871%" y="373" width="0.0112%" height="15" fill="rgb(245,148,34)" fg:x="151651" fg:w="34"/><text x="50.0371%" y="383.50"></text></g><g><title>page_remove_rmap (477 samples, 0.16%)</title><rect x="49.6499%" y="389" width="0.1566%" height="15" fill="rgb(222,29,6)" fg:x="151233" fg:w="477"/><text x="49.8999%" y="399.50"></text></g><g><title>__mod_memcg_lruvec_state (89 samples, 0.03%)</title><rect x="49.9089%" y="325" width="0.0292%" height="15" fill="rgb(221,189,43)" fg:x="152022" fg:w="89"/><text x="50.1589%" y="335.50"></text></g><g><title>__mod_memcg_state.part.0 (47 samples, 0.02%)</title><rect x="49.9227%" y="309" width="0.0154%" height="15" fill="rgb(207,36,27)" fg:x="152064" fg:w="47"/><text x="50.1727%" y="319.50"></text></g><g><title>__mod_lruvec_state (132 samples, 0.04%)</title><rect x="49.9027%" y="341" width="0.0433%" height="15" fill="rgb(217,90,24)" fg:x="152003" fg:w="132"/><text x="50.1527%" y="351.50"></text></g><g><title>__free_one_page (277 samples, 0.09%)</title><rect x="50.0399%" y="293" width="0.0909%" height="15" fill="rgb(224,66,35)" fg:x="152421" fg:w="277"/><text x="50.2899%" y="303.50"></text></g><g><title>free_unref_page_list (528 samples, 0.17%)</title><rect x="49.9621%" y="341" width="0.1733%" height="15" fill="rgb(221,13,50)" fg:x="152184" fg:w="528"/><text x="50.2121%" y="351.50"></text></g><g><title>free_unref_page_commit (445 samples, 0.15%)</title><rect x="49.9893%" y="325" width="0.1461%" height="15" fill="rgb(236,68,49)" fg:x="152267" fg:w="445"/><text x="50.2393%" y="335.50"></text></g><g><title>free_pcppages_bulk (397 samples, 0.13%)</title><rect x="50.0051%" y="309" width="0.1303%" height="15" fill="rgb(229,146,28)" fg:x="152315" fg:w="397"/><text x="50.2551%" y="319.50"></text></g><g><title>mem_cgroup_uncharge_list (68 samples, 0.02%)</title><rect x="50.1377%" y="341" width="0.0223%" height="15" fill="rgb(225,31,38)" fg:x="152719" fg:w="68"/><text x="50.3877%" y="351.50"></text></g><g><title>uncharge_page (50 samples, 0.02%)</title><rect x="50.1436%" y="325" width="0.0164%" height="15" fill="rgb(250,208,3)" fg:x="152737" fg:w="50"/><text x="50.3936%" y="335.50"></text></g><g><title>tlb_flush_mmu (1,106 samples, 0.36%)</title><rect x="49.8065%" y="389" width="0.3631%" height="15" fill="rgb(246,54,23)" fg:x="151710" fg:w="1106"/><text x="50.0565%" y="399.50"></text></g><g><title>free_pages_and_swap_cache (1,104 samples, 0.36%)</title><rect x="49.8071%" y="373" width="0.3624%" height="15" fill="rgb(243,76,11)" fg:x="151712" fg:w="1104"/><text x="50.0571%" y="383.50"></text></g><g><title>release_pages (990 samples, 0.33%)</title><rect x="49.8445%" y="357" width="0.3250%" height="15" fill="rgb(245,21,50)" fg:x="151826" fg:w="990"/><text x="50.0945%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,960 samples, 0.97%)</title><rect x="49.2155%" y="661" width="0.9718%" height="15" fill="rgb(228,9,43)" fg:x="149910" fg:w="2960"/><text x="49.4655%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,960 samples, 0.97%)</title><rect x="49.2155%" y="645" width="0.9718%" height="15" fill="rgb(208,100,47)" fg:x="149910" fg:w="2960"/><text x="49.4655%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,960 samples, 0.97%)</title><rect x="49.2155%" y="629" width="0.9718%" height="15" fill="rgb(232,26,8)" fg:x="149910" fg:w="2960"/><text x="49.4655%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,960 samples, 0.97%)</title><rect x="49.2155%" y="613" width="0.9718%" height="15" fill="rgb(216,166,38)" fg:x="149910" fg:w="2960"/><text x="49.4655%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (2,960 samples, 0.97%)</title><rect x="49.2155%" y="597" width="0.9718%" height="15" fill="rgb(251,202,51)" fg:x="149910" fg:w="2960"/><text x="49.4655%" y="607.50"></text></g><g><title>__GI___libc_free (2,960 samples, 0.97%)</title><rect x="49.2155%" y="581" width="0.9718%" height="15" fill="rgb(254,216,34)" fg:x="149910" fg:w="2960"/><text x="49.4655%" y="591.50"></text></g><g><title>__GI_munmap (2,960 samples, 0.97%)</title><rect x="49.2155%" y="565" width="0.9718%" height="15" fill="rgb(251,32,27)" fg:x="149910" fg:w="2960"/><text x="49.4655%" y="575.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,960 samples, 0.97%)</title><rect x="49.2155%" y="549" width="0.9718%" height="15" fill="rgb(208,127,28)" fg:x="149910" fg:w="2960"/><text x="49.4655%" y="559.50"></text></g><g><title>do_syscall_64 (2,960 samples, 0.97%)</title><rect x="49.2155%" y="533" width="0.9718%" height="15" fill="rgb(224,137,22)" fg:x="149910" fg:w="2960"/><text x="49.4655%" y="543.50"></text></g><g><title>__x64_sys_munmap (2,960 samples, 0.97%)</title><rect x="49.2155%" y="517" width="0.9718%" height="15" fill="rgb(254,70,32)" fg:x="149910" fg:w="2960"/><text x="49.4655%" y="527.50"></text></g><g><title>__vm_munmap (2,960 samples, 0.97%)</title><rect x="49.2155%" y="501" width="0.9718%" height="15" fill="rgb(229,75,37)" fg:x="149910" fg:w="2960"/><text x="49.4655%" y="511.50"></text></g><g><title>__do_munmap (2,960 samples, 0.97%)</title><rect x="49.2155%" y="485" width="0.9718%" height="15" fill="rgb(252,64,23)" fg:x="149910" fg:w="2960"/><text x="49.4655%" y="495.50"></text></g><g><title>unmap_region (2,958 samples, 0.97%)</title><rect x="49.2162%" y="469" width="0.9711%" height="15" fill="rgb(232,162,48)" fg:x="149912" fg:w="2958"/><text x="49.4662%" y="479.50"></text></g><g><title>unmap_vmas (2,229 samples, 0.73%)</title><rect x="49.4555%" y="453" width="0.7318%" height="15" fill="rgb(246,160,12)" fg:x="150641" fg:w="2229"/><text x="49.7055%" y="463.50"></text></g><g><title>unmap_single_vma (2,229 samples, 0.73%)</title><rect x="49.4555%" y="437" width="0.7318%" height="15" fill="rgb(247,166,0)" fg:x="150641" fg:w="2229"/><text x="49.7055%" y="447.50"></text></g><g><title>unmap_page_range (2,229 samples, 0.73%)</title><rect x="49.4555%" y="421" width="0.7318%" height="15" fill="rgb(249,219,21)" fg:x="150641" fg:w="2229"/><text x="49.7055%" y="431.50"></text></g><g><title>zap_pte_range (2,196 samples, 0.72%)</title><rect x="49.4663%" y="405" width="0.7209%" height="15" fill="rgb(205,209,3)" fg:x="150674" fg:w="2196"/><text x="49.7163%" y="415.50"></text></g><g><title>vm_normal_page (36 samples, 0.01%)</title><rect x="50.1755%" y="389" width="0.0118%" height="15" fill="rgb(243,44,1)" fg:x="152834" fg:w="36"/><text x="50.4255%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (40 samples, 0.01%)</title><rect x="50.1873%" y="661" width="0.0131%" height="15" fill="rgb(206,159,16)" fg:x="152870" fg:w="40"/><text x="50.4373%" y="671.50"></text></g><g><title>hprof_slurp::record_parser::many1_streaming::{{closure}} (40 samples, 0.01%)</title><rect x="50.1873%" y="645" width="0.0131%" height="15" fill="rgb(244,77,30)" fg:x="152870" fg:w="40"/><text x="50.4373%" y="655.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (40 samples, 0.01%)</title><rect x="50.1873%" y="629" width="0.0131%" height="15" fill="rgb(218,69,12)" fg:x="152870" fg:w="40"/><text x="50.4373%" y="639.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (40 samples, 0.01%)</title><rect x="50.1873%" y="613" width="0.0131%" height="15" fill="rgb(212,87,7)" fg:x="152870" fg:w="40"/><text x="50.4373%" y="623.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (40 samples, 0.01%)</title><rect x="50.1873%" y="597" width="0.0131%" height="15" fill="rgb(245,114,25)" fg:x="152870" fg:w="40"/><text x="50.4373%" y="607.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (40 samples, 0.01%)</title><rect x="50.1873%" y="581" width="0.0131%" height="15" fill="rgb(210,61,42)" fg:x="152870" fg:w="40"/><text x="50.4373%" y="591.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (40 samples, 0.01%)</title><rect x="50.1873%" y="565" width="0.0131%" height="15" fill="rgb(211,52,33)" fg:x="152870" fg:w="40"/><text x="50.4373%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (40 samples, 0.01%)</title><rect x="50.1873%" y="549" width="0.0131%" height="15" fill="rgb(234,58,33)" fg:x="152870" fg:w="40"/><text x="50.4373%" y="559.50"></text></g><g><title>nom::combinator::map::{{closure}} (40 samples, 0.01%)</title><rect x="50.1873%" y="533" width="0.0131%" height="15" fill="rgb(220,115,36)" fg:x="152870" fg:w="40"/><text x="50.4373%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (40 samples, 0.01%)</title><rect x="50.1873%" y="517" width="0.0131%" height="15" fill="rgb(243,153,54)" fg:x="152870" fg:w="40"/><text x="50.4373%" y="527.50"></text></g><g><title>nom::multi::count::{{closure}} (40 samples, 0.01%)</title><rect x="50.1873%" y="501" width="0.0131%" height="15" fill="rgb(251,47,18)" fg:x="152870" fg:w="40"/><text x="50.4373%" y="511.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (31 samples, 0.01%)</title><rect x="50.2008%" y="645" width="0.0102%" height="15" fill="rgb(242,102,42)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="655.50"></text></g><g><title>std::io::default_read_exact (31 samples, 0.01%)</title><rect x="50.2008%" y="629" width="0.0102%" height="15" fill="rgb(234,31,38)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="639.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (31 samples, 0.01%)</title><rect x="50.2008%" y="613" width="0.0102%" height="15" fill="rgb(221,117,51)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="623.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (31 samples, 0.01%)</title><rect x="50.2008%" y="597" width="0.0102%" height="15" fill="rgb(212,20,18)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="607.50"></text></g><g><title>std::sys::unix::fs::File::read (31 samples, 0.01%)</title><rect x="50.2008%" y="581" width="0.0102%" height="15" fill="rgb(245,133,36)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="591.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (31 samples, 0.01%)</title><rect x="50.2008%" y="565" width="0.0102%" height="15" fill="rgb(212,6,19)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="575.50"></text></g><g><title>__libc_read (31 samples, 0.01%)</title><rect x="50.2008%" y="549" width="0.0102%" height="15" fill="rgb(218,1,36)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="559.50"></text></g><g><title>__libc_read (31 samples, 0.01%)</title><rect x="50.2008%" y="533" width="0.0102%" height="15" fill="rgb(246,84,54)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="543.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (31 samples, 0.01%)</title><rect x="50.2008%" y="517" width="0.0102%" height="15" fill="rgb(242,110,6)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="527.50"></text></g><g><title>do_syscall_64 (31 samples, 0.01%)</title><rect x="50.2008%" y="501" width="0.0102%" height="15" fill="rgb(214,47,5)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="511.50"></text></g><g><title>__x64_sys_read (31 samples, 0.01%)</title><rect x="50.2008%" y="485" width="0.0102%" height="15" fill="rgb(218,159,25)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="495.50"></text></g><g><title>ksys_read (31 samples, 0.01%)</title><rect x="50.2008%" y="469" width="0.0102%" height="15" fill="rgb(215,211,28)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="479.50"></text></g><g><title>vfs_read (31 samples, 0.01%)</title><rect x="50.2008%" y="453" width="0.0102%" height="15" fill="rgb(238,59,32)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="463.50"></text></g><g><title>new_sync_read (31 samples, 0.01%)</title><rect x="50.2008%" y="437" width="0.0102%" height="15" fill="rgb(226,82,3)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="447.50"></text></g><g><title>ext4_file_read_iter (31 samples, 0.01%)</title><rect x="50.2008%" y="421" width="0.0102%" height="15" fill="rgb(240,164,32)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="431.50"></text></g><g><title>generic_file_read_iter (31 samples, 0.01%)</title><rect x="50.2008%" y="405" width="0.0102%" height="15" fill="rgb(232,46,7)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="415.50"></text></g><g><title>generic_file_buffered_read (31 samples, 0.01%)</title><rect x="50.2008%" y="389" width="0.0102%" height="15" fill="rgb(229,129,53)" fg:x="152911" fg:w="31"/><text x="50.4508%" y="399.50"></text></g><g><title>__mod_memcg_lruvec_state (59 samples, 0.02%)</title><rect x="50.2996%" y="373" width="0.0194%" height="15" fill="rgb(234,188,29)" fg:x="153212" fg:w="59"/><text x="50.5496%" y="383.50"></text></g><g><title>__mod_lruvec_state (87 samples, 0.03%)</title><rect x="50.2946%" y="389" width="0.0286%" height="15" fill="rgb(246,141,4)" fg:x="153197" fg:w="87"/><text x="50.5446%" y="399.50"></text></g><g><title>__free_one_page (185 samples, 0.06%)</title><rect x="50.3879%" y="341" width="0.0607%" height="15" fill="rgb(229,23,39)" fg:x="153481" fg:w="185"/><text x="50.6379%" y="351.50"></text></g><g><title>free_unref_page_list (361 samples, 0.12%)</title><rect x="50.3337%" y="389" width="0.1185%" height="15" fill="rgb(206,12,3)" fg:x="153316" fg:w="361"/><text x="50.5837%" y="399.50"></text></g><g><title>free_unref_page_commit (312 samples, 0.10%)</title><rect x="50.3498%" y="373" width="0.1024%" height="15" fill="rgb(252,226,20)" fg:x="153365" fg:w="312"/><text x="50.5998%" y="383.50"></text></g><g><title>free_pcppages_bulk (274 samples, 0.09%)</title><rect x="50.3623%" y="357" width="0.0900%" height="15" fill="rgb(216,123,35)" fg:x="153403" fg:w="274"/><text x="50.6123%" y="367.50"></text></g><g><title>mem_cgroup_uncharge_list (38 samples, 0.01%)</title><rect x="50.4535%" y="389" width="0.0125%" height="15" fill="rgb(212,68,40)" fg:x="153681" fg:w="38"/><text x="50.7035%" y="399.50"></text></g><g><title>tlb_finish_mmu (750 samples, 0.25%)</title><rect x="50.2264%" y="437" width="0.2462%" height="15" fill="rgb(254,125,32)" fg:x="152989" fg:w="750"/><text x="50.4764%" y="447.50"></text></g><g><title>free_pages_and_swap_cache (747 samples, 0.25%)</title><rect x="50.2273%" y="421" width="0.2452%" height="15" fill="rgb(253,97,22)" fg:x="152992" fg:w="747"/><text x="50.4773%" y="431.50"></text></g><g><title>release_pages (674 samples, 0.22%)</title><rect x="50.2513%" y="405" width="0.2213%" height="15" fill="rgb(241,101,14)" fg:x="153065" fg:w="674"/><text x="50.5013%" y="415.50"></text></g><g><title>__mod_memcg_lruvec_state (125 samples, 0.04%)</title><rect x="50.7408%" y="325" width="0.0410%" height="15" fill="rgb(238,103,29)" fg:x="154556" fg:w="125"/><text x="50.9908%" y="335.50"></text></g><g><title>__mod_memcg_state.part.0 (56 samples, 0.02%)</title><rect x="50.7635%" y="309" width="0.0184%" height="15" fill="rgb(233,195,47)" fg:x="154625" fg:w="56"/><text x="51.0135%" y="319.50"></text></g><g><title>__mod_lruvec_state (178 samples, 0.06%)</title><rect x="50.7359%" y="341" width="0.0584%" height="15" fill="rgb(246,218,30)" fg:x="154541" fg:w="178"/><text x="50.9859%" y="351.50"></text></g><g><title>__mod_node_page_state (31 samples, 0.01%)</title><rect x="50.7841%" y="325" width="0.0102%" height="15" fill="rgb(219,145,47)" fg:x="154688" fg:w="31"/><text x="51.0341%" y="335.50"></text></g><g><title>__mod_lruvec_page_state (246 samples, 0.08%)</title><rect x="50.7283%" y="357" width="0.0808%" height="15" fill="rgb(243,12,26)" fg:x="154518" fg:w="246"/><text x="50.9783%" y="367.50"></text></g><g><title>page_remove_rmap (479 samples, 0.16%)</title><rect x="50.6676%" y="373" width="0.1573%" height="15" fill="rgb(214,87,16)" fg:x="154333" fg:w="479"/><text x="50.9176%" y="383.50"></text></g><g><title>__mod_memcg_lruvec_state (98 samples, 0.03%)</title><rect x="50.9260%" y="309" width="0.0322%" height="15" fill="rgb(208,99,42)" fg:x="155120" fg:w="98"/><text x="51.1760%" y="319.50"></text></g><g><title>__mod_memcg_state.part.0 (46 samples, 0.02%)</title><rect x="50.9430%" y="293" width="0.0151%" height="15" fill="rgb(253,99,2)" fg:x="155172" fg:w="46"/><text x="51.1930%" y="303.50"></text></g><g><title>__mod_lruvec_state (133 samples, 0.04%)</title><rect x="50.9233%" y="325" width="0.0437%" height="15" fill="rgb(220,168,23)" fg:x="155112" fg:w="133"/><text x="51.1733%" y="335.50"></text></g><g><title>__free_one_page (213 samples, 0.07%)</title><rect x="51.0688%" y="277" width="0.0699%" height="15" fill="rgb(242,38,24)" fg:x="155555" fg:w="213"/><text x="51.3188%" y="287.50"></text></g><g><title>free_unref_page_list (467 samples, 0.15%)</title><rect x="50.9883%" y="325" width="0.1533%" height="15" fill="rgb(225,182,9)" fg:x="155310" fg:w="467"/><text x="51.2383%" y="335.50"></text></g><g><title>free_unref_page_commit (382 samples, 0.13%)</title><rect x="51.0163%" y="309" width="0.1254%" height="15" fill="rgb(243,178,37)" fg:x="155395" fg:w="382"/><text x="51.2663%" y="319.50"></text></g><g><title>free_pcppages_bulk (341 samples, 0.11%)</title><rect x="51.0297%" y="293" width="0.1120%" height="15" fill="rgb(232,139,19)" fg:x="155436" fg:w="341"/><text x="51.2797%" y="303.50"></text></g><g><title>mem_cgroup_uncharge_list (60 samples, 0.02%)</title><rect x="51.1446%" y="325" width="0.0197%" height="15" fill="rgb(225,201,24)" fg:x="155786" fg:w="60"/><text x="51.3946%" y="335.50"></text></g><g><title>uncharge_page (40 samples, 0.01%)</title><rect x="51.1512%" y="309" width="0.0131%" height="15" fill="rgb(221,47,46)" fg:x="155806" fg:w="40"/><text x="51.4012%" y="319.50"></text></g><g><title>tlb_flush_mmu (1,058 samples, 0.35%)</title><rect x="50.8249%" y="373" width="0.3473%" height="15" fill="rgb(249,23,13)" fg:x="154812" fg:w="1058"/><text x="51.0749%" y="383.50"></text></g><g><title>free_pages_and_swap_cache (1,056 samples, 0.35%)</title><rect x="50.8255%" y="357" width="0.3467%" height="15" fill="rgb(219,9,5)" fg:x="154814" fg:w="1056"/><text x="51.0755%" y="367.50"></text></g><g><title>release_pages (938 samples, 0.31%)</title><rect x="50.8643%" y="341" width="0.3079%" height="15" fill="rgb(254,171,16)" fg:x="154932" fg:w="938"/><text x="51.1143%" y="351.50"></text></g><g><title>__x64_sys_munmap (2,924 samples, 0.96%)</title><rect x="50.2234%" y="501" width="0.9600%" height="15" fill="rgb(230,171,20)" fg:x="152980" fg:w="2924"/><text x="50.4734%" y="511.50"></text></g><g><title>__vm_munmap (2,924 samples, 0.96%)</title><rect x="50.2234%" y="485" width="0.9600%" height="15" fill="rgb(210,71,41)" fg:x="152980" fg:w="2924"/><text x="50.4734%" y="495.50"></text></g><g><title>__do_munmap (2,924 samples, 0.96%)</title><rect x="50.2234%" y="469" width="0.9600%" height="15" fill="rgb(206,173,20)" fg:x="152980" fg:w="2924"/><text x="50.4734%" y="479.50"></text></g><g><title>unmap_region (2,918 samples, 0.96%)</title><rect x="50.2254%" y="453" width="0.9580%" height="15" fill="rgb(233,88,34)" fg:x="152986" fg:w="2918"/><text x="50.4754%" y="463.50"></text></g><g><title>unmap_vmas (2,165 samples, 0.71%)</title><rect x="50.4726%" y="437" width="0.7108%" height="15" fill="rgb(223,209,46)" fg:x="153739" fg:w="2165"/><text x="50.7226%" y="447.50"></text></g><g><title>unmap_single_vma (2,165 samples, 0.71%)</title><rect x="50.4726%" y="421" width="0.7108%" height="15" fill="rgb(250,43,18)" fg:x="153739" fg:w="2165"/><text x="50.7226%" y="431.50"></text></g><g><title>unmap_page_range (2,165 samples, 0.71%)</title><rect x="50.4726%" y="405" width="0.7108%" height="15" fill="rgb(208,13,10)" fg:x="153739" fg:w="2165"/><text x="50.7226%" y="415.50"></text></g><g><title>zap_pte_range (2,136 samples, 0.70%)</title><rect x="50.4821%" y="389" width="0.7012%" height="15" fill="rgb(212,200,36)" fg:x="153768" fg:w="2136"/><text x="50.7321%" y="399.50"></text></g><g><title>__GI_munmap (2,925 samples, 0.96%)</title><rect x="50.2234%" y="549" width="0.9603%" height="15" fill="rgb(225,90,30)" fg:x="152980" fg:w="2925"/><text x="50.4734%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2,925 samples, 0.96%)</title><rect x="50.2234%" y="533" width="0.9603%" height="15" fill="rgb(236,182,39)" fg:x="152980" fg:w="2925"/><text x="50.4734%" y="543.50"></text></g><g><title>do_syscall_64 (2,925 samples, 0.96%)</title><rect x="50.2234%" y="517" width="0.9603%" height="15" fill="rgb(212,144,35)" fg:x="152980" fg:w="2925"/><text x="50.4734%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2,930 samples, 0.96%)</title><rect x="50.2228%" y="645" width="0.9619%" height="15" fill="rgb(228,63,44)" fg:x="152978" fg:w="2930"/><text x="50.4728%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2,930 samples, 0.96%)</title><rect x="50.2228%" y="629" width="0.9619%" height="15" fill="rgb(228,109,6)" fg:x="152978" fg:w="2930"/><text x="50.4728%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,930 samples, 0.96%)</title><rect x="50.2228%" y="613" width="0.9619%" height="15" fill="rgb(238,117,24)" fg:x="152978" fg:w="2930"/><text x="50.4728%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,930 samples, 0.96%)</title><rect x="50.2228%" y="597" width="0.9619%" height="15" fill="rgb(242,26,26)" fg:x="152978" fg:w="2930"/><text x="50.4728%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (2,930 samples, 0.96%)</title><rect x="50.2228%" y="581" width="0.9619%" height="15" fill="rgb(221,92,48)" fg:x="152978" fg:w="2930"/><text x="50.4728%" y="591.50"></text></g><g><title>__GI___libc_free (2,930 samples, 0.96%)</title><rect x="50.2228%" y="565" width="0.9619%" height="15" fill="rgb(209,209,32)" fg:x="152978" fg:w="2930"/><text x="50.4728%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,743 samples, 0.57%)</title><rect x="54.2842%" y="581" width="0.5722%" height="15" fill="rgb(221,70,22)" fg:x="165349" fg:w="1743"/><text x="54.5342%" y="591.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u8 (1,003 samples, 0.33%)</title><rect x="55.3833%" y="565" width="0.3293%" height="15" fill="rgb(248,145,5)" fg:x="168697" fg:w="1003"/><text x="55.6333%" y="575.50"></text></g><g><title>nom::number::streaming::be_u8 (1,003 samples, 0.33%)</title><rect x="55.3833%" y="549" width="0.3293%" height="15" fill="rgb(226,116,26)" fg:x="168697" fg:w="1003"/><text x="55.6333%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (994 samples, 0.33%)</title><rect x="55.3863%" y="533" width="0.3263%" height="15" fill="rgb(244,5,17)" fg:x="168706" fg:w="994"/><text x="55.6363%" y="543.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (994 samples, 0.33%)</title><rect x="55.3863%" y="517" width="0.3263%" height="15" fill="rgb(252,159,33)" fg:x="168706" fg:w="994"/><text x="55.6363%" y="527.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (994 samples, 0.33%)</title><rect x="55.3863%" y="501" width="0.3263%" height="15" fill="rgb(206,71,0)" fg:x="168706" fg:w="994"/><text x="55.6363%" y="511.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (562 samples, 0.18%)</title><rect x="55.8800%" y="469" width="0.1845%" height="15" fill="rgb(233,118,54)" fg:x="170210" fg:w="562"/><text x="56.1300%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,087 samples, 0.36%)</title><rect x="55.8800%" y="501" width="0.3569%" height="15" fill="rgb(234,83,48)" fg:x="170210" fg:w="1087"/><text x="56.1300%" y="511.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (1,087 samples, 0.36%)</title><rect x="55.8800%" y="485" width="0.3569%" height="15" fill="rgb(228,3,54)" fg:x="170210" fg:w="1087"/><text x="56.1300%" y="495.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputTake&gt;::take_split (525 samples, 0.17%)</title><rect x="56.0645%" y="469" width="0.1724%" height="15" fill="rgb(226,155,13)" fg:x="170772" fg:w="525"/><text x="56.3145%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (525 samples, 0.17%)</title><rect x="56.0645%" y="453" width="0.1724%" height="15" fill="rgb(241,28,37)" fg:x="170772" fg:w="525"/><text x="56.3145%" y="463.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (525 samples, 0.17%)</title><rect x="56.0645%" y="437" width="0.1724%" height="15" fill="rgb(233,93,10)" fg:x="170772" fg:w="525"/><text x="56.3145%" y="447.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (525 samples, 0.17%)</title><rect x="56.0645%" y="421" width="0.1724%" height="15" fill="rgb(225,113,19)" fg:x="170772" fg:w="525"/><text x="56.3145%" y="431.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (525 samples, 0.17%)</title><rect x="56.0645%" y="405" width="0.1724%" height="15" fill="rgb(241,2,18)" fg:x="170772" fg:w="525"/><text x="56.3145%" y="415.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (525 samples, 0.17%)</title><rect x="56.0645%" y="389" width="0.1724%" height="15" fill="rgb(228,207,21)" fg:x="170772" fg:w="525"/><text x="56.3145%" y="399.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (525 samples, 0.17%)</title><rect x="56.0645%" y="373" width="0.1724%" height="15" fill="rgb(213,211,35)" fg:x="170772" fg:w="525"/><text x="56.3145%" y="383.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (525 samples, 0.17%)</title><rect x="56.0645%" y="357" width="0.1724%" height="15" fill="rgb(209,83,10)" fg:x="170772" fg:w="525"/><text x="56.3145%" y="367.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,596 samples, 0.52%)</title><rect x="55.7136%" y="517" width="0.5240%" height="15" fill="rgb(209,164,1)" fg:x="169703" fg:w="1596"/><text x="55.9636%" y="527.50"></text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (1,067 samples, 0.35%)</title><rect x="57.5458%" y="421" width="0.3503%" height="15" fill="rgb(213,184,43)" fg:x="175284" fg:w="1067"/><text x="57.7958%" y="431.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,067 samples, 0.35%)</title><rect x="57.5458%" y="405" width="0.3503%" height="15" fill="rgb(231,61,34)" fg:x="175284" fg:w="1067"/><text x="57.7958%" y="415.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,067 samples, 0.35%)</title><rect x="57.5458%" y="389" width="0.3503%" height="15" fill="rgb(235,75,3)" fg:x="175284" fg:w="1067"/><text x="57.7958%" y="399.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,067 samples, 0.35%)</title><rect x="57.5458%" y="373" width="0.3503%" height="15" fill="rgb(220,106,47)" fg:x="175284" fg:w="1067"/><text x="57.7958%" y="383.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,067 samples, 0.35%)</title><rect x="57.5458%" y="357" width="0.3503%" height="15" fill="rgb(210,196,33)" fg:x="175284" fg:w="1067"/><text x="57.7958%" y="367.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u32 (3,572 samples, 1.17%)</title><rect x="56.7244%" y="453" width="1.1727%" height="15" fill="rgb(229,154,42)" fg:x="172782" fg:w="3572"/><text x="56.9744%" y="463.50"></text></g><g><title>nom::number::streaming::be_u32 (3,572 samples, 1.17%)</title><rect x="56.7244%" y="437" width="1.1727%" height="15" fill="rgb(228,114,26)" fg:x="172782" fg:w="3572"/><text x="56.9744%" y="447.50"></text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (1,002 samples, 0.33%)</title><rect x="59.5770%" y="405" width="0.3290%" height="15" fill="rgb(208,144,1)" fg:x="181471" fg:w="1002"/><text x="59.8270%" y="415.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1,002 samples, 0.33%)</title><rect x="59.5770%" y="389" width="0.3290%" height="15" fill="rgb(239,112,37)" fg:x="181471" fg:w="1002"/><text x="59.8270%" y="399.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1,002 samples, 0.33%)</title><rect x="59.5770%" y="373" width="0.3290%" height="15" fill="rgb(210,96,50)" fg:x="181471" fg:w="1002"/><text x="59.8270%" y="383.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,002 samples, 0.33%)</title><rect x="59.5770%" y="357" width="0.3290%" height="15" fill="rgb(222,178,2)" fg:x="181471" fg:w="1002"/><text x="59.8270%" y="367.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1,002 samples, 0.33%)</title><rect x="59.5770%" y="341" width="0.3290%" height="15" fill="rgb(226,74,18)" fg:x="181471" fg:w="1002"/><text x="59.8270%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (175 samples, 0.06%)</title><rect x="59.8485%" y="325" width="0.0575%" height="15" fill="rgb(225,67,54)" fg:x="182298" fg:w="175"/><text x="60.0985%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (175 samples, 0.06%)</title><rect x="59.8485%" y="309" width="0.0575%" height="15" fill="rgb(251,92,32)" fg:x="182298" fg:w="175"/><text x="60.0985%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,568 samples, 0.84%)</title><rect x="59.9060%" y="405" width="0.8431%" height="15" fill="rgb(228,149,22)" fg:x="182473" fg:w="2568"/><text x="60.1560%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,568 samples, 0.84%)</title><rect x="59.9060%" y="389" width="0.8431%" height="15" fill="rgb(243,54,13)" fg:x="182473" fg:w="2568"/><text x="60.1560%" y="399.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (2,568 samples, 0.84%)</title><rect x="59.9060%" y="373" width="0.8431%" height="15" fill="rgb(243,180,28)" fg:x="182473" fg:w="2568"/><text x="60.1560%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,568 samples, 0.84%)</title><rect x="59.9060%" y="357" width="0.8431%" height="15" fill="rgb(208,167,24)" fg:x="182473" fg:w="2568"/><text x="60.1560%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (12,269 samples, 4.03%)</title><rect x="56.7244%" y="485" width="4.0279%" height="15" fill="rgb(245,73,45)" fg:x="172782" fg:w="12269"/><text x="56.9744%" y="495.50">&lt;F a..</text></g><g><title>core::ops::function::FnMut::call_mut (12,269 samples, 4.03%)</title><rect x="56.7244%" y="469" width="4.0279%" height="15" fill="rgb(237,203,48)" fg:x="172782" fg:w="12269"/><text x="56.9744%" y="479.50">core..</text></g><g><title>hprof_slurp::record_parser::parse_id (8,697 samples, 2.86%)</title><rect x="57.8971%" y="453" width="2.8552%" height="15" fill="rgb(211,197,16)" fg:x="176354" fg:w="8697"/><text x="58.1471%" y="463.50">hp..</text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (8,697 samples, 2.86%)</title><rect x="57.8971%" y="437" width="2.8552%" height="15" fill="rgb(243,99,51)" fg:x="176354" fg:w="8697"/><text x="58.1471%" y="447.50">hp..</text></g><g><title>nom::number::streaming::be_u64 (8,528 samples, 2.80%)</title><rect x="57.9526%" y="421" width="2.7997%" height="15" fill="rgb(215,123,29)" fg:x="176523" fg:w="8528"/><text x="58.2026%" y="431.50">no..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4,066 samples, 1.33%)</title><rect x="60.7523%" y="485" width="1.3349%" height="15" fill="rgb(239,186,37)" fg:x="185051" fg:w="4066"/><text x="61.0023%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (19,416 samples, 6.37%)</title><rect x="55.7136%" y="533" width="6.3743%" height="15" fill="rgb(252,136,39)" fg:x="169703" fg:w="19416"/><text x="55.9636%" y="543.50">&lt;F as no..</text></g><g><title>nom::sequence::tuple::{{closure}} (17,820 samples, 5.85%)</title><rect x="56.2375%" y="517" width="5.8503%" height="15" fill="rgb(223,213,32)" fg:x="171299" fg:w="17820"/><text x="56.4875%" y="527.50">nom::se..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (17,662 samples, 5.80%)</title><rect x="56.2894%" y="501" width="5.7984%" height="15" fill="rgb(233,115,5)" fg:x="171457" fg:w="17662"/><text x="56.5394%" y="511.50">&lt;(FnA,F..</text></g><g><title>hprof_slurp::record_parser::parse_gc_instance_dump (20,825 samples, 6.84%)</title><rect x="55.7132%" y="565" width="6.8369%" height="15" fill="rgb(207,226,44)" fg:x="169702" fg:w="20825"/><text x="55.9632%" y="575.50">hprof_slu..</text></g><g><title>nom::combinator::flat_map::{{closure}} (20,825 samples, 6.84%)</title><rect x="55.7132%" y="549" width="6.8369%" height="15" fill="rgb(208,126,0)" fg:x="169702" fg:w="20825"/><text x="55.9632%" y="559.50">nom::comb..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,408 samples, 0.46%)</title><rect x="62.0879%" y="533" width="0.4622%" height="15" fill="rgb(244,66,21)" fg:x="189119" fg:w="1408"/><text x="62.3379%" y="543.50"></text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (36 samples, 0.01%)</title><rect x="62.6722%" y="389" width="0.0118%" height="15" fill="rgb(222,97,12)" fg:x="190899" fg:w="36"/><text x="62.9222%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (36 samples, 0.01%)</title><rect x="62.6722%" y="373" width="0.0118%" height="15" fill="rgb(219,213,19)" fg:x="190899" fg:w="36"/><text x="62.9222%" y="383.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (36 samples, 0.01%)</title><rect x="62.6722%" y="357" width="0.0118%" height="15" fill="rgb(252,169,30)" fg:x="190899" fg:w="36"/><text x="62.9222%" y="367.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (36 samples, 0.01%)</title><rect x="62.6722%" y="341" width="0.0118%" height="15" fill="rgb(206,32,51)" fg:x="190899" fg:w="36"/><text x="62.9222%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (36 samples, 0.01%)</title><rect x="62.6722%" y="325" width="0.0118%" height="15" fill="rgb(250,172,42)" fg:x="190899" fg:w="36"/><text x="62.9222%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (387 samples, 0.13%)</title><rect x="62.5934%" y="469" width="0.1271%" height="15" fill="rgb(209,34,43)" fg:x="190659" fg:w="387"/><text x="62.8434%" y="479.50"></text></g><g><title>core::ops::function::FnMut::call_mut (387 samples, 0.13%)</title><rect x="62.5934%" y="453" width="0.1271%" height="15" fill="rgb(223,11,35)" fg:x="190659" fg:w="387"/><text x="62.8434%" y="463.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (387 samples, 0.13%)</title><rect x="62.5934%" y="437" width="0.1271%" height="15" fill="rgb(251,219,26)" fg:x="190659" fg:w="387"/><text x="62.8434%" y="447.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (387 samples, 0.13%)</title><rect x="62.5934%" y="421" width="0.1271%" height="15" fill="rgb(231,119,3)" fg:x="190659" fg:w="387"/><text x="62.8434%" y="431.50"></text></g><g><title>nom::number::streaming::be_u64 (364 samples, 0.12%)</title><rect x="62.6010%" y="405" width="0.1195%" height="15" fill="rgb(216,97,11)" fg:x="190682" fg:w="364"/><text x="62.8510%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 0.04%)</title><rect x="62.6841%" y="389" width="0.0364%" height="15" fill="rgb(223,59,9)" fg:x="190935" fg:w="111"/><text x="62.9341%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 samples, 0.04%)</title><rect x="62.6841%" y="373" width="0.0364%" height="15" fill="rgb(233,93,31)" fg:x="190935" fg:w="111"/><text x="62.9341%" y="383.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (111 samples, 0.04%)</title><rect x="62.6841%" y="357" width="0.0364%" height="15" fill="rgb(239,81,33)" fg:x="190935" fg:w="111"/><text x="62.9341%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (111 samples, 0.04%)</title><rect x="62.6841%" y="341" width="0.0364%" height="15" fill="rgb(213,120,34)" fg:x="190935" fg:w="111"/><text x="62.9341%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (31 samples, 0.01%)</title><rect x="62.7244%" y="453" width="0.0102%" height="15" fill="rgb(243,49,53)" fg:x="191058" fg:w="31"/><text x="62.9744%" y="463.50"></text></g><g><title>asm_exc_page_fault (33 samples, 0.01%)</title><rect x="62.7454%" y="437" width="0.0108%" height="15" fill="rgb(247,216,33)" fg:x="191122" fg:w="33"/><text x="62.9954%" y="447.50"></text></g><g><title>exc_page_fault (31 samples, 0.01%)</title><rect x="62.7461%" y="421" width="0.0102%" height="15" fill="rgb(226,26,14)" fg:x="191124" fg:w="31"/><text x="62.9961%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (113 samples, 0.04%)</title><rect x="62.7205%" y="469" width="0.0371%" height="15" fill="rgb(215,49,53)" fg:x="191046" fg:w="113"/><text x="62.9705%" y="479.50"></text></g><g><title>core::ptr::write (70 samples, 0.02%)</title><rect x="62.7346%" y="453" width="0.0230%" height="15" fill="rgb(245,162,40)" fg:x="191089" fg:w="70"/><text x="62.9846%" y="463.50"></text></g><g><title>_int_malloc (238 samples, 0.08%)</title><rect x="62.8623%" y="341" width="0.0781%" height="15" fill="rgb(229,68,17)" fg:x="191478" fg:w="238"/><text x="63.1123%" y="351.50"></text></g><g><title>unlink_chunk (54 samples, 0.02%)</title><rect x="62.9227%" y="325" width="0.0177%" height="15" fill="rgb(213,182,10)" fg:x="191662" fg:w="54"/><text x="63.1727%" y="335.50"></text></g><g><title>__GI___libc_malloc (554 samples, 0.18%)</title><rect x="62.7605%" y="357" width="0.1819%" height="15" fill="rgb(245,125,30)" fg:x="191168" fg:w="554"/><text x="63.0105%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (578 samples, 0.19%)</title><rect x="62.7596%" y="405" width="0.1898%" height="15" fill="rgb(232,202,2)" fg:x="191165" fg:w="578"/><text x="63.0096%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (578 samples, 0.19%)</title><rect x="62.7596%" y="389" width="0.1898%" height="15" fill="rgb(237,140,51)" fg:x="191165" fg:w="578"/><text x="63.0096%" y="399.50"></text></g><g><title>alloc::alloc::alloc (578 samples, 0.19%)</title><rect x="62.7596%" y="373" width="0.1898%" height="15" fill="rgb(236,157,25)" fg:x="191165" fg:w="578"/><text x="63.0096%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (593 samples, 0.19%)</title><rect x="62.7576%" y="469" width="0.1947%" height="15" fill="rgb(219,209,0)" fg:x="191159" fg:w="593"/><text x="63.0076%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (593 samples, 0.19%)</title><rect x="62.7576%" y="453" width="0.1947%" height="15" fill="rgb(240,116,54)" fg:x="191159" fg:w="593"/><text x="63.0076%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (592 samples, 0.19%)</title><rect x="62.7579%" y="437" width="0.1944%" height="15" fill="rgb(216,10,36)" fg:x="191160" fg:w="592"/><text x="63.0079%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (592 samples, 0.19%)</title><rect x="62.7579%" y="421" width="0.1944%" height="15" fill="rgb(222,72,44)" fg:x="191160" fg:w="592"/><text x="63.0079%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,249 samples, 0.41%)</title><rect x="62.5517%" y="501" width="0.4100%" height="15" fill="rgb(232,159,9)" fg:x="190532" fg:w="1249"/><text x="62.8017%" y="511.50"></text></g><g><title>nom::multi::count::{{closure}} (1,247 samples, 0.41%)</title><rect x="62.5524%" y="485" width="0.4094%" height="15" fill="rgb(210,39,32)" fg:x="190534" fg:w="1247"/><text x="62.8024%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,264 samples, 0.41%)</title><rect x="62.5501%" y="517" width="0.4150%" height="15" fill="rgb(216,194,45)" fg:x="190527" fg:w="1264"/><text x="62.8001%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (80 samples, 0.03%)</title><rect x="62.9684%" y="485" width="0.0263%" height="15" fill="rgb(218,18,35)" fg:x="191801" fg:w="80"/><text x="63.2184%" y="495.50"></text></g><g><title>core::ops::function::FnMut::call_mut (80 samples, 0.03%)</title><rect x="62.9684%" y="469" width="0.0263%" height="15" fill="rgb(207,83,51)" fg:x="191801" fg:w="80"/><text x="63.2184%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (62 samples, 0.02%)</title><rect x="62.9743%" y="453" width="0.0204%" height="15" fill="rgb(225,63,43)" fg:x="191819" fg:w="62"/><text x="63.2243%" y="463.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (62 samples, 0.02%)</title><rect x="62.9743%" y="437" width="0.0204%" height="15" fill="rgb(207,57,36)" fg:x="191819" fg:w="62"/><text x="63.2243%" y="447.50"></text></g><g><title>nom::number::streaming::be_u64 (62 samples, 0.02%)</title><rect x="62.9743%" y="421" width="0.0204%" height="15" fill="rgb(216,99,33)" fg:x="191819" fg:w="62"/><text x="63.2243%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,396 samples, 0.46%)</title><rect x="62.5501%" y="533" width="0.4583%" height="15" fill="rgb(225,42,16)" fg:x="190527" fg:w="1396"/><text x="62.8001%" y="543.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (132 samples, 0.04%)</title><rect x="62.9651%" y="517" width="0.0433%" height="15" fill="rgb(220,201,45)" fg:x="191791" fg:w="132"/><text x="63.2151%" y="527.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (132 samples, 0.04%)</title><rect x="62.9651%" y="501" width="0.0433%" height="15" fill="rgb(225,33,4)" fg:x="191791" fg:w="132"/><text x="63.2151%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (42 samples, 0.01%)</title><rect x="62.9946%" y="485" width="0.0138%" height="15" fill="rgb(224,33,50)" fg:x="191881" fg:w="42"/><text x="63.2446%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (1,413 samples, 0.46%)</title><rect x="62.5501%" y="565" width="0.4639%" height="15" fill="rgb(246,198,51)" fg:x="190527" fg:w="1413"/><text x="62.8001%" y="575.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (1,413 samples, 0.46%)</title><rect x="62.5501%" y="549" width="0.4639%" height="15" fill="rgb(205,22,4)" fg:x="190527" fg:w="1413"/><text x="62.8001%" y="559.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i32 (58 samples, 0.02%)</title><rect x="63.2080%" y="469" width="0.0190%" height="15" fill="rgb(206,3,8)" fg:x="192531" fg:w="58"/><text x="63.4580%" y="479.50"></text></g><g><title>nom::number::streaming::be_i32 (58 samples, 0.02%)</title><rect x="63.2080%" y="453" width="0.0190%" height="15" fill="rgb(251,23,15)" fg:x="192531" fg:w="58"/><text x="63.4580%" y="463.50"></text></g><g><title>nom::combinator::mapc (48 samples, 0.02%)</title><rect x="63.2113%" y="437" width="0.0158%" height="15" fill="rgb(252,88,28)" fg:x="192541" fg:w="48"/><text x="63.4613%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (40 samples, 0.01%)</title><rect x="63.2139%" y="421" width="0.0131%" height="15" fill="rgb(212,127,14)" fg:x="192549" fg:w="40"/><text x="63.4639%" y="431.50"></text></g><g><title>nom::combinator::map::{{closure}} (40 samples, 0.01%)</title><rect x="63.2139%" y="405" width="0.0131%" height="15" fill="rgb(247,145,37)" fg:x="192549" fg:w="40"/><text x="63.4639%" y="415.50"></text></g><g><title>&lt;&amp;[T] as nom::traits::Slice&lt;core::ops::range::RangeFrom&lt;usize&gt;&gt;&gt;::slice (293 samples, 0.10%)</title><rect x="63.5678%" y="341" width="0.0962%" height="15" fill="rgb(209,117,53)" fg:x="193627" fg:w="293"/><text x="63.8178%" y="351.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (293 samples, 0.10%)</title><rect x="63.5678%" y="325" width="0.0962%" height="15" fill="rgb(212,90,42)" fg:x="193627" fg:w="293"/><text x="63.8178%" y="335.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (293 samples, 0.10%)</title><rect x="63.5678%" y="309" width="0.0962%" height="15" fill="rgb(218,164,37)" fg:x="193627" fg:w="293"/><text x="63.8178%" y="319.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (293 samples, 0.10%)</title><rect x="63.5678%" y="293" width="0.0962%" height="15" fill="rgb(246,65,34)" fg:x="193627" fg:w="293"/><text x="63.8178%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (293 samples, 0.10%)</title><rect x="63.5678%" y="277" width="0.0962%" height="15" fill="rgb(231,100,33)" fg:x="193627" fg:w="293"/><text x="63.8178%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (40 samples, 0.01%)</title><rect x="63.6509%" y="261" width="0.0131%" height="15" fill="rgb(228,126,14)" fg:x="193880" fg:w="40"/><text x="63.9009%" y="271.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (40 samples, 0.01%)</title><rect x="63.6509%" y="245" width="0.0131%" height="15" fill="rgb(215,173,21)" fg:x="193880" fg:w="40"/><text x="63.9009%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (75 samples, 0.02%)</title><rect x="63.6640%" y="341" width="0.0246%" height="15" fill="rgb(210,6,40)" fg:x="193920" fg:w="75"/><text x="63.9140%" y="351.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (75 samples, 0.02%)</title><rect x="63.6640%" y="325" width="0.0246%" height="15" fill="rgb(212,48,18)" fg:x="193920" fg:w="75"/><text x="63.9140%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (75 samples, 0.02%)</title><rect x="63.6640%" y="309" width="0.0246%" height="15" fill="rgb(230,214,11)" fg:x="193920" fg:w="75"/><text x="63.9140%" y="319.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (413 samples, 0.14%)</title><rect x="63.5534%" y="389" width="0.1356%" height="15" fill="rgb(254,105,39)" fg:x="193583" fg:w="413"/><text x="63.8034%" y="399.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (413 samples, 0.14%)</title><rect x="63.5534%" y="373" width="0.1356%" height="15" fill="rgb(245,158,5)" fg:x="193583" fg:w="413"/><text x="63.8034%" y="383.50"></text></g><g><title>nom::number::streaming::be_u8 (413 samples, 0.14%)</title><rect x="63.5534%" y="357" width="0.1356%" height="15" fill="rgb(249,208,11)" fg:x="193583" fg:w="413"/><text x="63.8034%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,F&gt; as core::ops::try_trait::FromResidual&lt;core::result::Result&lt;core::convert::Infallible,E&gt;&gt;&gt;::from_residual (64 samples, 0.02%)</title><rect x="63.6890%" y="389" width="0.0210%" height="15" fill="rgb(210,39,28)" fg:x="193996" fg:w="64"/><text x="63.9390%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (857 samples, 0.28%)</title><rect x="63.4290%" y="421" width="0.2814%" height="15" fill="rgb(211,56,53)" fg:x="193204" fg:w="857"/><text x="63.6790%" y="431.50"></text></g><g><title>nom::combinator::map::{{closure}} (857 samples, 0.28%)</title><rect x="63.4290%" y="405" width="0.2814%" height="15" fill="rgb(226,201,30)" fg:x="193204" fg:w="857"/><text x="63.6790%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (1,532 samples, 0.50%)</title><rect x="63.2080%" y="501" width="0.5030%" height="15" fill="rgb(239,101,34)" fg:x="192531" fg:w="1532"/><text x="63.4580%" y="511.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1,532 samples, 0.50%)</title><rect x="63.2080%" y="485" width="0.5030%" height="15" fill="rgb(226,209,5)" fg:x="192531" fg:w="1532"/><text x="63.4580%" y="495.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i8 (1,466 samples, 0.48%)</title><rect x="63.2297%" y="469" width="0.4813%" height="15" fill="rgb(250,105,47)" fg:x="192597" fg:w="1466"/><text x="63.4797%" y="479.50"></text></g><g><title>nom::number::streaming::be_i8 (1,466 samples, 0.48%)</title><rect x="63.2297%" y="453" width="0.4813%" height="15" fill="rgb(230,72,3)" fg:x="192597" fg:w="1466"/><text x="63.4797%" y="463.50"></text></g><g><title>nom::combinator::mapc (1,152 samples, 0.38%)</title><rect x="63.3328%" y="437" width="0.3782%" height="15" fill="rgb(232,218,39)" fg:x="192911" fg:w="1152"/><text x="63.5828%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (45 samples, 0.01%)</title><rect x="63.8154%" y="485" width="0.0148%" height="15" fill="rgb(248,166,6)" fg:x="194381" fg:w="45"/><text x="64.0654%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,428 samples, 0.47%)</title><rect x="63.7110%" y="501" width="0.4688%" height="15" fill="rgb(247,89,20)" fg:x="194063" fg:w="1428"/><text x="63.9610%" y="511.50"></text></g><g><title>core::ptr::write (1,062 samples, 0.35%)</title><rect x="63.8311%" y="485" width="0.3487%" height="15" fill="rgb(248,130,54)" fg:x="194429" fg:w="1062"/><text x="64.0811%" y="495.50"></text></g><g><title>checked_request2size (35 samples, 0.01%)</title><rect x="64.6158%" y="357" width="0.0115%" height="15" fill="rgb(234,196,4)" fg:x="196819" fg:w="35"/><text x="64.8658%" y="367.50"></text></g><g><title>_int_malloc (476 samples, 0.16%)</title><rect x="64.4746%" y="373" width="0.1563%" height="15" fill="rgb(250,143,31)" fg:x="196389" fg:w="476"/><text x="64.7246%" y="383.50"></text></g><g><title>__GI___libc_malloc (1,362 samples, 0.45%)</title><rect x="64.1906%" y="389" width="0.4471%" height="15" fill="rgb(211,110,34)" fg:x="195524" fg:w="1362"/><text x="64.4406%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,420 samples, 0.47%)</title><rect x="64.1857%" y="437" width="0.4662%" height="15" fill="rgb(215,124,48)" fg:x="195509" fg:w="1420"/><text x="64.4357%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,420 samples, 0.47%)</title><rect x="64.1857%" y="421" width="0.4662%" height="15" fill="rgb(216,46,13)" fg:x="195509" fg:w="1420"/><text x="64.4357%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1,416 samples, 0.46%)</title><rect x="64.1870%" y="405" width="0.4649%" height="15" fill="rgb(205,184,25)" fg:x="195513" fg:w="1416"/><text x="64.4370%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,440 samples, 0.47%)</title><rect x="64.1798%" y="501" width="0.4728%" height="15" fill="rgb(228,1,10)" fg:x="195491" fg:w="1440"/><text x="64.4298%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,440 samples, 0.47%)</title><rect x="64.1798%" y="485" width="0.4728%" height="15" fill="rgb(213,116,27)" fg:x="195491" fg:w="1440"/><text x="64.4298%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,422 samples, 0.47%)</title><rect x="64.1857%" y="469" width="0.4668%" height="15" fill="rgb(241,95,50)" fg:x="195509" fg:w="1422"/><text x="64.4357%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,422 samples, 0.47%)</title><rect x="64.1857%" y="453" width="0.4668%" height="15" fill="rgb(238,48,32)" fg:x="195509" fg:w="1422"/><text x="64.4357%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (4,957 samples, 1.63%)</title><rect x="63.0380%" y="533" width="1.6274%" height="15" fill="rgb(235,113,49)" fg:x="192013" fg:w="4957"/><text x="63.2880%" y="543.50"></text></g><g><title>nom::multi::count::{{closure}} (4,941 samples, 1.62%)</title><rect x="63.0432%" y="517" width="1.6221%" height="15" fill="rgb(205,127,43)" fg:x="192029" fg:w="4941"/><text x="63.2932%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (38 samples, 0.01%)</title><rect x="64.6529%" y="501" width="0.0125%" height="15" fill="rgb(250,162,2)" fg:x="196932" fg:w="38"/><text x="64.9029%" y="511.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (38 samples, 0.01%)</title><rect x="64.6529%" y="485" width="0.0125%" height="15" fill="rgb(220,13,41)" fg:x="196932" fg:w="38"/><text x="64.9029%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (36 samples, 0.01%)</title><rect x="64.6535%" y="469" width="0.0118%" height="15" fill="rgb(249,221,25)" fg:x="196934" fg:w="36"/><text x="64.9035%" y="479.50"></text></g><g><title>nom::combinator::map::{{closure}} (5,031 samples, 1.65%)</title><rect x="63.0380%" y="549" width="1.6517%" height="15" fill="rgb(215,208,19)" fg:x="192013" fg:w="5031"/><text x="63.2880%" y="559.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (74 samples, 0.02%)</title><rect x="64.6653%" y="533" width="0.0243%" height="15" fill="rgb(236,175,2)" fg:x="196970" fg:w="74"/><text x="64.9153%" y="543.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u32 (103 samples, 0.03%)</title><rect x="64.6896%" y="485" width="0.0338%" height="15" fill="rgb(241,52,2)" fg:x="197044" fg:w="103"/><text x="64.9396%" y="495.50"></text></g><g><title>nom::number::streaming::be_u32 (103 samples, 0.03%)</title><rect x="64.6896%" y="469" width="0.0338%" height="15" fill="rgb(248,140,14)" fg:x="197044" fg:w="103"/><text x="64.9396%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (35 samples, 0.01%)</title><rect x="64.7251%" y="373" width="0.0115%" height="15" fill="rgb(253,22,42)" fg:x="197152" fg:w="35"/><text x="64.9751%" y="383.50"></text></g><g><title>nom::combinator::map::{{closure}} (35 samples, 0.01%)</title><rect x="64.7251%" y="357" width="0.0115%" height="15" fill="rgb(234,61,47)" fg:x="197152" fg:w="35"/><text x="64.9751%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (41 samples, 0.01%)</title><rect x="64.7235%" y="453" width="0.0135%" height="15" fill="rgb(208,226,15)" fg:x="197147" fg:w="41"/><text x="64.9735%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (41 samples, 0.01%)</title><rect x="64.7235%" y="437" width="0.0135%" height="15" fill="rgb(217,221,4)" fg:x="197147" fg:w="41"/><text x="64.9735%" y="447.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i8 (41 samples, 0.01%)</title><rect x="64.7235%" y="421" width="0.0135%" height="15" fill="rgb(212,174,34)" fg:x="197147" fg:w="41"/><text x="64.9735%" y="431.50"></text></g><g><title>nom::number::streaming::be_i8 (41 samples, 0.01%)</title><rect x="64.7235%" y="405" width="0.0135%" height="15" fill="rgb(253,83,4)" fg:x="197147" fg:w="41"/><text x="64.9735%" y="415.50"></text></g><g><title>nom::combinator::mapc (41 samples, 0.01%)</title><rect x="64.7235%" y="389" width="0.0135%" height="15" fill="rgb(250,195,49)" fg:x="197147" fg:w="41"/><text x="64.9735%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::parse_field_type (73 samples, 0.02%)</title><rect x="64.7235%" y="485" width="0.0240%" height="15" fill="rgb(241,192,25)" fg:x="197147" fg:w="73"/><text x="64.9735%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (73 samples, 0.02%)</title><rect x="64.7235%" y="469" width="0.0240%" height="15" fill="rgb(208,124,10)" fg:x="197147" fg:w="73"/><text x="64.9735%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (299 samples, 0.10%)</title><rect x="64.6896%" y="517" width="0.0982%" height="15" fill="rgb(222,33,0)" fg:x="197044" fg:w="299"/><text x="64.9396%" y="527.50"></text></g><g><title>core::ops::function::FnMut::call_mut (299 samples, 0.10%)</title><rect x="64.6896%" y="501" width="0.0982%" height="15" fill="rgb(234,209,28)" fg:x="197044" fg:w="299"/><text x="64.9396%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (123 samples, 0.04%)</title><rect x="64.7474%" y="485" width="0.0404%" height="15" fill="rgb(224,11,23)" fg:x="197220" fg:w="123"/><text x="64.9974%" y="495.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (123 samples, 0.04%)</title><rect x="64.7474%" y="469" width="0.0404%" height="15" fill="rgb(232,99,1)" fg:x="197220" fg:w="123"/><text x="64.9974%" y="479.50"></text></g><g><title>nom::number::streaming::be_u64 (122 samples, 0.04%)</title><rect x="64.7478%" y="453" width="0.0401%" height="15" fill="rgb(237,95,45)" fg:x="197221" fg:w="122"/><text x="64.9978%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.01%)</title><rect x="64.7743%" y="437" width="0.0135%" height="15" fill="rgb(208,109,11)" fg:x="197302" fg:w="41"/><text x="65.0243%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.01%)</title><rect x="64.7743%" y="421" width="0.0135%" height="15" fill="rgb(216,190,48)" fg:x="197302" fg:w="41"/><text x="65.0243%" y="431.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (41 samples, 0.01%)</title><rect x="64.7743%" y="405" width="0.0135%" height="15" fill="rgb(251,171,36)" fg:x="197302" fg:w="41"/><text x="65.0243%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (41 samples, 0.01%)</title><rect x="64.7743%" y="389" width="0.0135%" height="15" fill="rgb(230,62,22)" fg:x="197302" fg:w="41"/><text x="65.0243%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (30,327 samples, 9.96%)</title><rect x="54.8603%" y="581" width="9.9564%" height="15" fill="rgb(225,114,35)" fg:x="167104" fg:w="30327"/><text x="55.1103%" y="591.50">hprof_slurp::r..</text></g><g><title>hprof_slurp::record_parser::parse_gc_primitive_array_dump (5,491 samples, 1.80%)</title><rect x="63.0140%" y="565" width="1.8027%" height="15" fill="rgb(215,118,42)" fg:x="191940" fg:w="5491"/><text x="63.2640%" y="575.50">h..</text></g><g><title>nom::sequence::tuple::{{closure}} (387 samples, 0.13%)</title><rect x="64.6896%" y="549" width="0.1271%" height="15" fill="rgb(243,119,21)" fg:x="197044" fg:w="387"/><text x="64.9396%" y="559.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (387 samples, 0.13%)</title><rect x="64.6896%" y="533" width="0.1271%" height="15" fill="rgb(252,177,53)" fg:x="197044" fg:w="387"/><text x="64.9396%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (88 samples, 0.03%)</title><rect x="64.7878%" y="517" width="0.0289%" height="15" fill="rgb(237,209,29)" fg:x="197343" fg:w="88"/><text x="65.0378%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (39,990 samples, 13.13%)</title><rect x="51.6949%" y="613" width="13.1287%" height="15" fill="rgb(212,65,23)" fg:x="157462" fg:w="39990"/><text x="51.9449%" y="623.50">&lt;F as nom::internal:..</text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (39,452 samples, 12.95%)</title><rect x="51.8715%" y="597" width="12.9521%" height="15" fill="rgb(230,222,46)" fg:x="158000" fg:w="39452"/><text x="52.1215%" y="607.50">hprof_slurp::record..</text></g><g><title>__memmove_avx_unaligned_erms (20,522 samples, 6.74%)</title><rect x="64.8236%" y="613" width="6.7374%" height="15" fill="rgb(215,135,32)" fg:x="197452" fg:w="20522"/><text x="65.0736%" y="623.50">__memmove..</text></g><g><title>clear_page_erms (174 samples, 0.06%)</title><rect x="72.3791%" y="261" width="0.0571%" height="15" fill="rgb(246,101,22)" fg:x="220466" fg:w="174"/><text x="72.6291%" y="271.50"></text></g><g><title>get_page_from_freelist (258 samples, 0.08%)</title><rect x="72.3719%" y="277" width="0.0847%" height="15" fill="rgb(206,107,13)" fg:x="220444" fg:w="258"/><text x="72.6219%" y="287.50"></text></g><g><title>rmqueue (61 samples, 0.02%)</title><rect x="72.4365%" y="261" width="0.0200%" height="15" fill="rgb(250,100,44)" fg:x="220641" fg:w="61"/><text x="72.6865%" y="271.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (43 samples, 0.01%)</title><rect x="72.4425%" y="245" width="0.0141%" height="15" fill="rgb(231,147,38)" fg:x="220659" fg:w="43"/><text x="72.6925%" y="255.50"></text></g><g><title>__alloc_pages_nodemask (282 samples, 0.09%)</title><rect x="72.3656%" y="293" width="0.0926%" height="15" fill="rgb(229,8,40)" fg:x="220425" fg:w="282"/><text x="72.6156%" y="303.50"></text></g><g><title>alloc_pages_vma (294 samples, 0.10%)</title><rect x="72.3633%" y="309" width="0.0965%" height="15" fill="rgb(221,135,30)" fg:x="220418" fg:w="294"/><text x="72.6133%" y="319.50"></text></g><g><title>cgroup_throttle_swaprate (32 samples, 0.01%)</title><rect x="72.4599%" y="309" width="0.0105%" height="15" fill="rgb(249,193,18)" fg:x="220712" fg:w="32"/><text x="72.7099%" y="319.50"></text></g><g><title>__pagevec_lru_add_fn (60 samples, 0.02%)</title><rect x="72.4773%" y="261" width="0.0197%" height="15" fill="rgb(209,133,39)" fg:x="220765" fg:w="60"/><text x="72.7273%" y="271.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (92 samples, 0.03%)</title><rect x="72.4713%" y="309" width="0.0302%" height="15" fill="rgb(232,100,14)" fg:x="220747" fg:w="92"/><text x="72.7213%" y="319.50"></text></g><g><title>lru_cache_add (90 samples, 0.03%)</title><rect x="72.4720%" y="293" width="0.0295%" height="15" fill="rgb(224,185,1)" fg:x="220749" fg:w="90"/><text x="72.7220%" y="303.50"></text></g><g><title>__pagevec_lru_add (77 samples, 0.03%)</title><rect x="72.4763%" y="277" width="0.0253%" height="15" fill="rgb(223,139,8)" fg:x="220762" fg:w="77"/><text x="72.7263%" y="287.50"></text></g><g><title>get_mem_cgroup_from_mm (31 samples, 0.01%)</title><rect x="72.5114%" y="293" width="0.0102%" height="15" fill="rgb(232,213,38)" fg:x="220869" fg:w="31"/><text x="72.7614%" y="303.50"></text></g><g><title>mem_cgroup_charge (91 samples, 0.03%)</title><rect x="72.5016%" y="309" width="0.0299%" height="15" fill="rgb(207,94,22)" fg:x="220839" fg:w="91"/><text x="72.7516%" y="319.50"></text></g><g><title>page_add_new_anon_rmap (35 samples, 0.01%)</title><rect x="72.5324%" y="309" width="0.0115%" height="15" fill="rgb(219,183,54)" fg:x="220933" fg:w="35"/><text x="72.7824%" y="319.50"></text></g><g><title>do_anonymous_page (577 samples, 0.19%)</title><rect x="72.3578%" y="325" width="0.1894%" height="15" fill="rgb(216,185,54)" fg:x="220401" fg:w="577"/><text x="72.6078%" y="335.50"></text></g><g><title>handle_pte_fault (602 samples, 0.20%)</title><rect x="72.3512%" y="341" width="0.1976%" height="15" fill="rgb(254,217,39)" fg:x="220381" fg:w="602"/><text x="72.6012%" y="351.50"></text></g><g><title>__handle_mm_fault (638 samples, 0.21%)</title><rect x="72.3400%" y="357" width="0.2095%" height="15" fill="rgb(240,178,23)" fg:x="220347" fg:w="638"/><text x="72.5900%" y="367.50"></text></g><g><title>handle_mm_fault (668 samples, 0.22%)</title><rect x="72.3328%" y="373" width="0.2193%" height="15" fill="rgb(218,11,47)" fg:x="220325" fg:w="668"/><text x="72.5828%" y="383.50"></text></g><g><title>do_user_addr_fault (713 samples, 0.23%)</title><rect x="72.3236%" y="389" width="0.2341%" height="15" fill="rgb(218,51,51)" fg:x="220297" fg:w="713"/><text x="72.5736%" y="399.50"></text></g><g><title>exc_page_fault (733 samples, 0.24%)</title><rect x="72.3220%" y="405" width="0.2406%" height="15" fill="rgb(238,126,27)" fg:x="220292" fg:w="733"/><text x="72.5720%" y="415.50"></text></g><g><title>asm_exc_page_fault (748 samples, 0.25%)</title><rect x="72.3177%" y="421" width="0.2456%" height="15" fill="rgb(249,202,22)" fg:x="220279" fg:w="748"/><text x="72.5677%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (2,135 samples, 0.70%)</title><rect x="71.9017%" y="437" width="0.7009%" height="15" fill="rgb(254,195,49)" fg:x="219012" fg:w="2135"/><text x="72.1517%" y="447.50"></text></g><g><title>sync_regs (99 samples, 0.03%)</title><rect x="72.5702%" y="421" width="0.0325%" height="15" fill="rgb(208,123,14)" fg:x="221048" fg:w="99"/><text x="72.8202%" y="431.50"></text></g><g><title>malloc_consolidate (181 samples, 0.06%)</title><rect x="72.6132%" y="421" width="0.0594%" height="15" fill="rgb(224,200,8)" fg:x="221179" fg:w="181"/><text x="72.8632%" y="431.50"></text></g><g><title>unlink_chunk (43 samples, 0.01%)</title><rect x="72.6585%" y="405" width="0.0141%" height="15" fill="rgb(217,61,36)" fg:x="221317" fg:w="43"/><text x="72.9085%" y="415.50"></text></g><g><title>_int_realloc (2,371 samples, 0.78%)</title><rect x="71.9017%" y="453" width="0.7784%" height="15" fill="rgb(206,35,45)" fg:x="219012" fg:w="2371"/><text x="72.1517%" y="463.50"></text></g><g><title>_int_malloc (218 samples, 0.07%)</title><rect x="72.6086%" y="437" width="0.0716%" height="15" fill="rgb(217,65,33)" fg:x="221165" fg:w="218"/><text x="72.8586%" y="447.50"></text></g><g><title>do_munmap (172 samples, 0.06%)</title><rect x="72.6903%" y="341" width="0.0565%" height="15" fill="rgb(222,158,48)" fg:x="221414" fg:w="172"/><text x="72.9403%" y="351.50"></text></g><g><title>__do_munmap (172 samples, 0.06%)</title><rect x="72.6903%" y="325" width="0.0565%" height="15" fill="rgb(254,2,54)" fg:x="221414" fg:w="172"/><text x="72.9403%" y="335.50"></text></g><g><title>unmap_region (169 samples, 0.06%)</title><rect x="72.6913%" y="309" width="0.0555%" height="15" fill="rgb(250,143,38)" fg:x="221417" fg:w="169"/><text x="72.9413%" y="319.50"></text></g><g><title>unmap_vmas (122 samples, 0.04%)</title><rect x="72.7067%" y="293" width="0.0401%" height="15" fill="rgb(248,25,0)" fg:x="221464" fg:w="122"/><text x="72.9567%" y="303.50"></text></g><g><title>unmap_single_vma (121 samples, 0.04%)</title><rect x="72.7071%" y="277" width="0.0397%" height="15" fill="rgb(206,152,27)" fg:x="221465" fg:w="121"/><text x="72.9571%" y="287.50"></text></g><g><title>unmap_page_range (121 samples, 0.04%)</title><rect x="72.7071%" y="261" width="0.0397%" height="15" fill="rgb(240,77,30)" fg:x="221465" fg:w="121"/><text x="72.9571%" y="271.50"></text></g><g><title>zap_pte_range (115 samples, 0.04%)</title><rect x="72.7090%" y="245" width="0.0378%" height="15" fill="rgb(231,5,3)" fg:x="221471" fg:w="115"/><text x="72.9590%" y="255.50"></text></g><g><title>clear_page_erms (42 samples, 0.01%)</title><rect x="72.7622%" y="245" width="0.0138%" height="15" fill="rgb(207,226,32)" fg:x="221633" fg:w="42"/><text x="73.0122%" y="255.50"></text></g><g><title>__pte_alloc (103 samples, 0.03%)</title><rect x="72.7484%" y="325" width="0.0338%" height="15" fill="rgb(222,207,47)" fg:x="221591" fg:w="103"/><text x="72.9984%" y="335.50"></text></g><g><title>pte_alloc_one (100 samples, 0.03%)</title><rect x="72.7494%" y="309" width="0.0328%" height="15" fill="rgb(229,115,45)" fg:x="221594" fg:w="100"/><text x="72.9994%" y="319.50"></text></g><g><title>alloc_pages_current (88 samples, 0.03%)</title><rect x="72.7534%" y="293" width="0.0289%" height="15" fill="rgb(224,191,6)" fg:x="221606" fg:w="88"/><text x="73.0034%" y="303.50"></text></g><g><title>__alloc_pages_nodemask (87 samples, 0.03%)</title><rect x="72.7537%" y="277" width="0.0286%" height="15" fill="rgb(230,227,24)" fg:x="221607" fg:w="87"/><text x="73.0037%" y="287.50"></text></g><g><title>get_page_from_freelist (64 samples, 0.02%)</title><rect x="72.7612%" y="261" width="0.0210%" height="15" fill="rgb(228,80,19)" fg:x="221630" fg:w="64"/><text x="73.0112%" y="271.50"></text></g><g><title>move_ptes.constprop.0 (553 samples, 0.18%)</title><rect x="72.7908%" y="325" width="0.1816%" height="15" fill="rgb(247,229,0)" fg:x="221720" fg:w="553"/><text x="73.0408%" y="335.50"></text></g><g><title>flush_tlb_mm_range (36 samples, 0.01%)</title><rect x="72.9605%" y="309" width="0.0118%" height="15" fill="rgb(237,194,15)" fg:x="222237" fg:w="36"/><text x="73.2105%" y="319.50"></text></g><g><title>move_vma (902 samples, 0.30%)</title><rect x="72.6864%" y="357" width="0.2961%" height="15" fill="rgb(219,203,20)" fg:x="221402" fg:w="902"/><text x="72.9364%" y="367.50"></text></g><g><title>move_page_tables (718 samples, 0.24%)</title><rect x="72.7468%" y="341" width="0.2357%" height="15" fill="rgb(234,128,8)" fg:x="221586" fg:w="718"/><text x="72.9968%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,296 samples, 1.08%)</title><rect x="71.9011%" y="533" width="1.0821%" height="15" fill="rgb(248,202,8)" fg:x="219010" fg:w="3296"/><text x="72.1511%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,295 samples, 1.08%)</title><rect x="71.9014%" y="517" width="1.0818%" height="15" fill="rgb(206,104,37)" fg:x="219011" fg:w="3295"/><text x="72.1514%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3,295 samples, 1.08%)</title><rect x="71.9014%" y="501" width="1.0818%" height="15" fill="rgb(223,8,27)" fg:x="219011" fg:w="3295"/><text x="72.1514%" y="511.50"></text></g><g><title>alloc::alloc::realloc (3,295 samples, 1.08%)</title><rect x="71.9014%" y="485" width="1.0818%" height="15" fill="rgb(216,217,28)" fg:x="219011" fg:w="3295"/><text x="72.1514%" y="495.50"></text></g><g><title>__GI___libc_realloc (3,295 samples, 1.08%)</title><rect x="71.9014%" y="469" width="1.0818%" height="15" fill="rgb(249,199,1)" fg:x="219011" fg:w="3295"/><text x="72.1514%" y="479.50"></text></g><g><title>mremap_chunk (923 samples, 0.30%)</title><rect x="72.6801%" y="453" width="0.3030%" height="15" fill="rgb(240,85,17)" fg:x="221383" fg:w="923"/><text x="72.9301%" y="463.50"></text></g><g><title>__GI___mremap (921 samples, 0.30%)</title><rect x="72.6808%" y="437" width="0.3024%" height="15" fill="rgb(206,108,45)" fg:x="221385" fg:w="921"/><text x="72.9308%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (920 samples, 0.30%)</title><rect x="72.6811%" y="421" width="0.3020%" height="15" fill="rgb(245,210,41)" fg:x="221386" fg:w="920"/><text x="72.9311%" y="431.50"></text></g><g><title>do_syscall_64 (919 samples, 0.30%)</title><rect x="72.6815%" y="405" width="0.3017%" height="15" fill="rgb(206,13,37)" fg:x="221387" fg:w="919"/><text x="72.9315%" y="415.50"></text></g><g><title>__x64_sys_mremap (919 samples, 0.30%)</title><rect x="72.6815%" y="389" width="0.3017%" height="15" fill="rgb(250,61,18)" fg:x="221387" fg:w="919"/><text x="72.9315%" y="399.50"></text></g><g><title>__do_sys_mremap (919 samples, 0.30%)</title><rect x="72.6815%" y="373" width="0.3017%" height="15" fill="rgb(235,172,48)" fg:x="221387" fg:w="919"/><text x="72.9315%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,298 samples, 1.08%)</title><rect x="71.9008%" y="597" width="1.0827%" height="15" fill="rgb(249,201,17)" fg:x="219009" fg:w="3298"/><text x="72.1508%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,298 samples, 1.08%)</title><rect x="71.9008%" y="581" width="1.0827%" height="15" fill="rgb(219,208,6)" fg:x="219009" fg:w="3298"/><text x="72.1508%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3,298 samples, 1.08%)</title><rect x="71.9008%" y="565" width="1.0827%" height="15" fill="rgb(248,31,23)" fg:x="219009" fg:w="3298"/><text x="72.1508%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3,298 samples, 1.08%)</title><rect x="71.9008%" y="549" width="1.0827%" height="15" fill="rgb(245,15,42)" fg:x="219009" fg:w="3298"/><text x="72.1508%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (559 samples, 0.18%)</title><rect x="72.9842%" y="597" width="0.1835%" height="15" fill="rgb(222,217,39)" fg:x="222309" fg:w="559"/><text x="73.2342%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (559 samples, 0.18%)</title><rect x="72.9842%" y="581" width="0.1835%" height="15" fill="rgb(210,219,27)" fg:x="222309" fg:w="559"/><text x="73.2342%" y="591.50"></text></g><g><title>__irqentry_text_end (146 samples, 0.05%)</title><rect x="81.2583%" y="565" width="0.0479%" height="15" fill="rgb(252,166,36)" fg:x="247512" fg:w="146"/><text x="81.5083%" y="575.50"></text></g><g><title>_cond_resched (31 samples, 0.01%)</title><rect x="81.6073%" y="533" width="0.0102%" height="15" fill="rgb(245,132,34)" fg:x="248575" fg:w="31"/><text x="81.8573%" y="543.50"></text></g><g><title>__count_memcg_events (37 samples, 0.01%)</title><rect x="81.8007%" y="517" width="0.0121%" height="15" fill="rgb(236,54,3)" fg:x="249164" fg:w="37"/><text x="82.0507%" y="527.50"></text></g><g><title>_cond_resched (37 samples, 0.01%)</title><rect x="81.8187%" y="517" width="0.0121%" height="15" fill="rgb(241,173,43)" fg:x="249219" fg:w="37"/><text x="82.0687%" y="527.50"></text></g><g><title>down_read_trylock (442 samples, 0.15%)</title><rect x="81.8374%" y="517" width="0.1451%" height="15" fill="rgb(215,190,9)" fg:x="249276" fg:w="442"/><text x="82.0874%" y="527.50"></text></g><g><title>vmacache_find (134 samples, 0.04%)</title><rect x="81.9999%" y="501" width="0.0440%" height="15" fill="rgb(242,101,16)" fg:x="249771" fg:w="134"/><text x="82.2499%" y="511.50"></text></g><g><title>find_vma (188 samples, 0.06%)</title><rect x="81.9825%" y="517" width="0.0617%" height="15" fill="rgb(223,190,21)" fg:x="249718" fg:w="188"/><text x="82.2325%" y="527.50"></text></g><g><title>__count_memcg_events.part.0 (67 samples, 0.02%)</title><rect x="82.3496%" y="501" width="0.0220%" height="15" fill="rgb(215,228,25)" fg:x="250836" fg:w="67"/><text x="82.5996%" y="511.50"></text></g><g><title>__count_memcg_events (121 samples, 0.04%)</title><rect x="82.3716%" y="501" width="0.0397%" height="15" fill="rgb(225,36,22)" fg:x="250903" fg:w="121"/><text x="82.6216%" y="511.50"></text></g><g><title>__count_memcg_events.part.0 (121 samples, 0.04%)</title><rect x="82.3716%" y="485" width="0.0397%" height="15" fill="rgb(251,106,46)" fg:x="250903" fg:w="121"/><text x="82.6216%" y="495.50"></text></g><g><title>_raw_spin_lock (371 samples, 0.12%)</title><rect x="83.0334%" y="469" width="0.1218%" height="15" fill="rgb(208,90,1)" fg:x="252919" fg:w="371"/><text x="83.2834%" y="479.50"></text></g><g><title>add_mm_counter_fast (43 samples, 0.01%)</title><rect x="83.1552%" y="469" width="0.0141%" height="15" fill="rgb(243,10,4)" fg:x="253290" fg:w="43"/><text x="83.4052%" y="479.50"></text></g><g><title>alloc_pages_vma (36 samples, 0.01%)</title><rect x="83.1693%" y="469" width="0.0118%" height="15" fill="rgb(212,137,27)" fg:x="253333" fg:w="36"/><text x="83.4193%" y="479.50"></text></g><g><title>__get_vma_policy (38 samples, 0.01%)</title><rect x="83.3775%" y="453" width="0.0125%" height="15" fill="rgb(231,220,49)" fg:x="253967" fg:w="38"/><text x="83.6275%" y="463.50"></text></g><g><title>__mod_lruvec_page_state (50 samples, 0.02%)</title><rect x="83.3900%" y="453" width="0.0164%" height="15" fill="rgb(237,96,20)" fg:x="254005" fg:w="50"/><text x="83.6400%" y="463.50"></text></g><g><title>__alloc_pages_nodemask (45 samples, 0.01%)</title><rect x="83.4169%" y="405" width="0.0148%" height="15" fill="rgb(239,229,30)" fg:x="254087" fg:w="45"/><text x="83.6669%" y="415.50"></text></g><g><title>get_page_from_freelist (34 samples, 0.01%)</title><rect x="83.4205%" y="389" width="0.0112%" height="15" fill="rgb(219,65,33)" fg:x="254098" fg:w="34"/><text x="83.6705%" y="399.50"></text></g><g><title>alloc_pages_current (46 samples, 0.02%)</title><rect x="83.4169%" y="421" width="0.0151%" height="15" fill="rgb(243,134,7)" fg:x="254087" fg:w="46"/><text x="83.6669%" y="431.50"></text></g><g><title>__pte_alloc (56 samples, 0.02%)</title><rect x="83.4139%" y="453" width="0.0184%" height="15" fill="rgb(216,177,54)" fg:x="254078" fg:w="56"/><text x="83.6639%" y="463.50"></text></g><g><title>pte_alloc_one (55 samples, 0.02%)</title><rect x="83.4143%" y="437" width="0.0181%" height="15" fill="rgb(211,160,20)" fg:x="254079" fg:w="55"/><text x="83.6643%" y="447.50"></text></g><g><title>_cond_resched (52 samples, 0.02%)</title><rect x="83.8522%" y="421" width="0.0171%" height="15" fill="rgb(239,85,39)" fg:x="255413" fg:w="52"/><text x="84.1022%" y="431.50"></text></g><g><title>clear_page_erms (7,438 samples, 2.44%)</title><rect x="84.1365%" y="405" width="2.4419%" height="15" fill="rgb(232,125,22)" fg:x="256279" fg:w="7438"/><text x="84.3865%" y="415.50">cl..</text></g><g><title>kernel_init_free_pages (141 samples, 0.05%)</title><rect x="86.5784%" y="405" width="0.0463%" height="15" fill="rgb(244,57,34)" fg:x="263717" fg:w="141"/><text x="86.8284%" y="415.50"></text></g><g><title>__inc_numa_state (118 samples, 0.04%)</title><rect x="86.7485%" y="389" width="0.0387%" height="15" fill="rgb(214,203,32)" fg:x="264235" fg:w="118"/><text x="86.9985%" y="399.50"></text></g><g><title>__inc_numa_state (34 samples, 0.01%)</title><rect x="87.0883%" y="373" width="0.0112%" height="15" fill="rgb(207,58,43)" fg:x="265270" fg:w="34"/><text x="87.3383%" y="383.50"></text></g><g><title>rmqueue (2,927 samples, 0.96%)</title><rect x="86.6247%" y="405" width="0.9609%" height="15" fill="rgb(215,193,15)" fg:x="263858" fg:w="2927"/><text x="86.8747%" y="415.50"></text></g><g><title>rmqueue_pcplist.constprop.0 (2,418 samples, 0.79%)</title><rect x="86.7918%" y="389" width="0.7938%" height="15" fill="rgb(232,15,44)" fg:x="264367" fg:w="2418"/><text x="87.0418%" y="399.50"></text></g><g><title>rmqueue_bulk.constprop.0 (1,439 samples, 0.47%)</title><rect x="87.1132%" y="373" width="0.4724%" height="15" fill="rgb(212,3,48)" fg:x="265346" fg:w="1439"/><text x="87.3632%" y="383.50"></text></g><g><title>get_page_from_freelist (11,333 samples, 3.72%)</title><rect x="83.8696%" y="421" width="3.7206%" height="15" fill="rgb(218,128,7)" fg:x="255466" fg:w="11333"/><text x="84.1196%" y="431.50">get_..</text></g><g><title>kernel_init_free_pages (50 samples, 0.02%)</title><rect x="87.5902%" y="421" width="0.0164%" height="15" fill="rgb(226,216,39)" fg:x="266799" fg:w="50"/><text x="87.8402%" y="431.50"></text></g><g><title>rcu_all_qs (36 samples, 0.01%)</title><rect x="87.6067%" y="421" width="0.0118%" height="15" fill="rgb(243,47,51)" fg:x="266849" fg:w="36"/><text x="87.8567%" y="431.50"></text></g><g><title>__alloc_pages_nodemask (12,294 samples, 4.04%)</title><rect x="83.5886%" y="437" width="4.0361%" height="15" fill="rgb(241,183,40)" fg:x="254610" fg:w="12294"/><text x="83.8386%" y="447.50">__al..</text></g><g><title>_cond_resched (43 samples, 0.01%)</title><rect x="87.6247%" y="437" width="0.0141%" height="15" fill="rgb(231,217,32)" fg:x="266904" fg:w="43"/><text x="87.8747%" y="447.50"></text></g><g><title>get_page_from_freelist (36 samples, 0.01%)</title><rect x="87.6388%" y="437" width="0.0118%" height="15" fill="rgb(229,61,38)" fg:x="266947" fg:w="36"/><text x="87.8888%" y="447.50"></text></g><g><title>policy_nodemask (56 samples, 0.02%)</title><rect x="87.6572%" y="437" width="0.0184%" height="15" fill="rgb(225,210,5)" fg:x="267003" fg:w="56"/><text x="87.9072%" y="447.50"></text></g><g><title>alloc_pages_vma (12,967 samples, 4.26%)</title><rect x="83.4326%" y="453" width="4.2571%" height="15" fill="rgb(231,79,45)" fg:x="254135" fg:w="12967"/><text x="83.6826%" y="463.50">alloc..</text></g><g><title>should_fail_alloc_page (43 samples, 0.01%)</title><rect x="87.6756%" y="437" width="0.0141%" height="15" fill="rgb(224,100,7)" fg:x="267059" fg:w="43"/><text x="87.9256%" y="447.50"></text></g><g><title>kthread_blkcg (100 samples, 0.03%)</title><rect x="88.2974%" y="437" width="0.0328%" height="15" fill="rgb(241,198,18)" fg:x="268953" fg:w="100"/><text x="88.5474%" y="447.50"></text></g><g><title>cgroup_throttle_swaprate (1,962 samples, 0.64%)</title><rect x="87.6897%" y="453" width="0.6441%" height="15" fill="rgb(252,97,53)" fg:x="267102" fg:w="1962"/><text x="87.9397%" y="463.50"></text></g><g><title>get_mem_cgroup_from_mm (38 samples, 0.01%)</title><rect x="88.3338%" y="453" width="0.0125%" height="15" fill="rgb(220,88,7)" fg:x="269064" fg:w="38"/><text x="88.5838%" y="463.50"></text></g><g><title>kthread_blkcg (43 samples, 0.01%)</title><rect x="88.3463%" y="453" width="0.0141%" height="15" fill="rgb(213,176,14)" fg:x="269102" fg:w="43"/><text x="88.5963%" y="463.50"></text></g><g><title>lru_cache_add (33 samples, 0.01%)</title><rect x="88.3604%" y="453" width="0.0108%" height="15" fill="rgb(246,73,7)" fg:x="269145" fg:w="33"/><text x="88.6104%" y="463.50"></text></g><g><title>__lock_text_start (43 samples, 0.01%)</title><rect x="88.5774%" y="405" width="0.0141%" height="15" fill="rgb(245,64,36)" fg:x="269806" fg:w="43"/><text x="88.8274%" y="415.50"></text></g><g><title>__mod_zone_page_state (49 samples, 0.02%)</title><rect x="88.5965%" y="405" width="0.0161%" height="15" fill="rgb(245,80,10)" fg:x="269864" fg:w="49"/><text x="88.8465%" y="415.50"></text></g><g><title>__mod_memcg_lruvec_state (413 samples, 0.14%)</title><rect x="89.1493%" y="373" width="0.1356%" height="15" fill="rgb(232,107,50)" fg:x="271548" fg:w="413"/><text x="89.3993%" y="383.50"></text></g><g><title>__mod_memcg_state.part.0 (208 samples, 0.07%)</title><rect x="89.2166%" y="357" width="0.0683%" height="15" fill="rgb(253,3,0)" fg:x="271753" fg:w="208"/><text x="89.4666%" y="367.50"></text></g><g><title>__mod_lruvec_state (580 samples, 0.19%)</title><rect x="89.1280%" y="389" width="0.1904%" height="15" fill="rgb(212,99,53)" fg:x="271483" fg:w="580"/><text x="89.3780%" y="399.50"></text></g><g><title>__mod_node_page_state (88 samples, 0.03%)</title><rect x="89.2895%" y="373" width="0.0289%" height="15" fill="rgb(249,111,54)" fg:x="271975" fg:w="88"/><text x="89.5395%" y="383.50"></text></g><g><title>__mod_node_page_state (85 samples, 0.03%)</title><rect x="89.3240%" y="389" width="0.0279%" height="15" fill="rgb(249,55,30)" fg:x="272080" fg:w="85"/><text x="89.5740%" y="399.50"></text></g><g><title>__mod_zone_page_state (86 samples, 0.03%)</title><rect x="89.3519%" y="389" width="0.0282%" height="15" fill="rgb(237,47,42)" fg:x="272165" fg:w="86"/><text x="89.6019%" y="399.50"></text></g><g><title>mem_cgroup_update_lru_size (73 samples, 0.02%)</title><rect x="89.3801%" y="389" width="0.0240%" height="15" fill="rgb(211,20,18)" fg:x="272251" fg:w="73"/><text x="89.6301%" y="399.50"></text></g><g><title>__pagevec_lru_add_fn (2,739 samples, 0.90%)</title><rect x="88.6126%" y="405" width="0.8992%" height="15" fill="rgb(231,203,46)" fg:x="269913" fg:w="2739"/><text x="88.8626%" y="415.50"></text></g><g><title>page_mapping (328 samples, 0.11%)</title><rect x="89.4041%" y="389" width="0.1077%" height="15" fill="rgb(237,142,3)" fg:x="272324" fg:w="328"/><text x="89.6541%" y="399.50"></text></g><g><title>lock_page_lruvec_irqsave (71 samples, 0.02%)</title><rect x="89.5131%" y="405" width="0.0233%" height="15" fill="rgb(241,107,1)" fg:x="272656" fg:w="71"/><text x="89.7631%" y="415.50"></text></g><g><title>_raw_spin_lock_irqsave (41 samples, 0.01%)</title><rect x="89.5229%" y="389" width="0.0135%" height="15" fill="rgb(229,83,13)" fg:x="272686" fg:w="41"/><text x="89.7729%" y="399.50"></text></g><g><title>page_mapping (42 samples, 0.01%)</title><rect x="89.5440%" y="405" width="0.0138%" height="15" fill="rgb(241,91,40)" fg:x="272750" fg:w="42"/><text x="89.7940%" y="415.50"></text></g><g><title>free_unref_page_list (62 samples, 0.02%)</title><rect x="89.7006%" y="389" width="0.0204%" height="15" fill="rgb(225,3,45)" fg:x="273227" fg:w="62"/><text x="89.9506%" y="399.50"></text></g><g><title>__pagevec_lru_add (3,613 samples, 1.19%)</title><rect x="88.5364%" y="421" width="1.1861%" height="15" fill="rgb(244,223,14)" fg:x="269681" fg:w="3613"/><text x="88.7864%" y="431.50"></text></g><g><title>release_pages (492 samples, 0.16%)</title><rect x="89.5610%" y="405" width="0.1615%" height="15" fill="rgb(224,124,37)" fg:x="272802" fg:w="492"/><text x="89.8110%" y="415.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (4,141 samples, 1.36%)</title><rect x="88.3713%" y="453" width="1.3595%" height="15" fill="rgb(251,171,30)" fg:x="269178" fg:w="4141"/><text x="88.6213%" y="463.50"></text></g><g><title>lru_cache_add (4,088 samples, 1.34%)</title><rect x="88.3887%" y="437" width="1.3421%" height="15" fill="rgb(236,46,54)" fg:x="269231" fg:w="4088"/><text x="88.6387%" y="447.50"></text></g><g><title>__count_memcg_events.part.0 (86 samples, 0.03%)</title><rect x="90.0686%" y="437" width="0.0282%" height="15" fill="rgb(245,213,5)" fg:x="274348" fg:w="86"/><text x="90.3186%" y="447.50"></text></g><g><title>get_mem_cgroup_from_mm (1,086 samples, 0.36%)</title><rect x="90.0998%" y="437" width="0.3565%" height="15" fill="rgb(230,144,27)" fg:x="274443" fg:w="1086"/><text x="90.3498%" y="447.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (281 samples, 0.09%)</title><rect x="90.4563%" y="437" width="0.0923%" height="15" fill="rgb(220,86,6)" fg:x="275529" fg:w="281"/><text x="90.7063%" y="447.50"></text></g><g><title>__count_memcg_events.part.0 (168 samples, 0.06%)</title><rect x="90.4934%" y="421" width="0.0552%" height="15" fill="rgb(240,20,13)" fg:x="275642" fg:w="168"/><text x="90.7434%" y="431.50"></text></g><g><title>rcu_read_unlock_strict (60 samples, 0.02%)</title><rect x="90.5581%" y="437" width="0.0197%" height="15" fill="rgb(217,89,34)" fg:x="275839" fg:w="60"/><text x="90.8081%" y="447.50"></text></g><g><title>page_counter_try_charge (208 samples, 0.07%)</title><rect x="90.9691%" y="421" width="0.0683%" height="15" fill="rgb(229,13,5)" fg:x="277091" fg:w="208"/><text x="91.2191%" y="431.50"></text></g><g><title>mem_cgroup_charge (4,008 samples, 1.32%)</title><rect x="89.7308%" y="453" width="1.3158%" height="15" fill="rgb(244,67,35)" fg:x="273319" fg:w="4008"/><text x="89.9808%" y="463.50"></text></g><g><title>try_charge (1,427 samples, 0.47%)</title><rect x="90.5781%" y="437" width="0.4685%" height="15" fill="rgb(221,40,2)" fg:x="275900" fg:w="1427"/><text x="90.8281%" y="447.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (44 samples, 0.01%)</title><rect x="91.0466%" y="453" width="0.0144%" height="15" fill="rgb(237,157,21)" fg:x="277327" fg:w="44"/><text x="91.2966%" y="463.50"></text></g><g><title>memcg_check_events (88 samples, 0.03%)</title><rect x="91.0610%" y="453" width="0.0289%" height="15" fill="rgb(222,94,11)" fg:x="277371" fg:w="88"/><text x="91.3110%" y="463.50"></text></g><g><title>__mod_memcg_lruvec_state (458 samples, 0.15%)</title><rect x="91.1802%" y="405" width="0.1504%" height="15" fill="rgb(249,113,6)" fg:x="277734" fg:w="458"/><text x="91.4302%" y="415.50"></text></g><g><title>__mod_memcg_state.part.0 (229 samples, 0.08%)</title><rect x="91.2554%" y="389" width="0.0752%" height="15" fill="rgb(238,137,36)" fg:x="277963" fg:w="229"/><text x="91.5054%" y="399.50"></text></g><g><title>__mod_lruvec_state (634 samples, 0.21%)</title><rect x="91.1615%" y="421" width="0.2081%" height="15" fill="rgb(210,102,26)" fg:x="277677" fg:w="634"/><text x="91.4115%" y="431.50"></text></g><g><title>__mod_node_page_state (101 samples, 0.03%)</title><rect x="91.3365%" y="405" width="0.0332%" height="15" fill="rgb(218,30,30)" fg:x="278210" fg:w="101"/><text x="91.5865%" y="415.50"></text></g><g><title>__mod_lruvec_page_state (901 samples, 0.30%)</title><rect x="91.1362%" y="437" width="0.2958%" height="15" fill="rgb(214,67,26)" fg:x="277600" fg:w="901"/><text x="91.3862%" y="447.50"></text></g><g><title>__mod_node_page_state (170 samples, 0.06%)</title><rect x="91.3762%" y="421" width="0.0558%" height="15" fill="rgb(251,9,53)" fg:x="278331" fg:w="170"/><text x="91.6262%" y="431.50"></text></g><g><title>page_add_new_anon_rmap (1,163 samples, 0.38%)</title><rect x="91.0899%" y="453" width="0.3818%" height="15" fill="rgb(228,204,25)" fg:x="277459" fg:w="1163"/><text x="91.3399%" y="463.50"></text></g><g><title>__page_set_anon_rmap (96 samples, 0.03%)</title><rect x="91.4402%" y="437" width="0.0315%" height="15" fill="rgb(207,153,8)" fg:x="278526" fg:w="96"/><text x="91.6902%" y="447.50"></text></g><g><title>pfn_pte (91 samples, 0.03%)</title><rect x="91.4717%" y="453" width="0.0299%" height="15" fill="rgb(242,9,16)" fg:x="278622" fg:w="91"/><text x="91.7217%" y="463.50"></text></g><g><title>pmd_pfn (38 samples, 0.01%)</title><rect x="91.5105%" y="453" width="0.0125%" height="15" fill="rgb(217,211,10)" fg:x="278740" fg:w="38"/><text x="91.7605%" y="463.50"></text></g><g><title>policy_node (31 samples, 0.01%)</title><rect x="91.5230%" y="453" width="0.0102%" height="15" fill="rgb(219,228,52)" fg:x="278778" fg:w="31"/><text x="91.7730%" y="463.50"></text></g><g><title>rcu_read_unlock_strict (48 samples, 0.02%)</title><rect x="91.5456%" y="453" width="0.0158%" height="15" fill="rgb(231,92,29)" fg:x="278847" fg:w="48"/><text x="91.7956%" y="463.50"></text></g><g><title>do_anonymous_page (25,531 samples, 8.38%)</title><rect x="83.1917%" y="469" width="8.3818%" height="15" fill="rgb(232,8,23)" fg:x="253401" fg:w="25531"/><text x="83.4417%" y="479.50">do_anonymous..</text></g><g><title>try_charge (37 samples, 0.01%)</title><rect x="91.5614%" y="453" width="0.0121%" height="15" fill="rgb(216,211,34)" fg:x="278895" fg:w="37"/><text x="91.8114%" y="463.50"></text></g><g><title>native_set_pte (32 samples, 0.01%)</title><rect x="91.5830%" y="469" width="0.0105%" height="15" fill="rgb(236,151,0)" fg:x="278961" fg:w="32"/><text x="91.8330%" y="479.50"></text></g><g><title>pfn_pte (38 samples, 0.01%)</title><rect x="91.5988%" y="469" width="0.0125%" height="15" fill="rgb(209,168,3)" fg:x="279009" fg:w="38"/><text x="91.8488%" y="479.50"></text></g><g><title>pmd_page_vaddr (34 samples, 0.01%)</title><rect x="91.6113%" y="469" width="0.0112%" height="15" fill="rgb(208,129,28)" fg:x="279047" fg:w="34"/><text x="91.8613%" y="479.50"></text></g><g><title>pmd_pfn (66 samples, 0.02%)</title><rect x="91.6224%" y="469" width="0.0217%" height="15" fill="rgb(229,78,22)" fg:x="279081" fg:w="66"/><text x="91.8724%" y="479.50"></text></g><g><title>handle_pte_fault (26,771 samples, 8.79%)</title><rect x="82.8584%" y="485" width="8.7889%" height="15" fill="rgb(228,187,13)" fg:x="252386" fg:w="26771"/><text x="83.1084%" y="495.50">handle_pte_f..</text></g><g><title>__handle_mm_fault (28,166 samples, 9.25%)</title><rect x="82.4113%" y="501" width="9.2469%" height="15" fill="rgb(240,119,24)" fg:x="251024" fg:w="28166"/><text x="82.6613%" y="511.50">__handle_mm_f..</text></g><g><title>pmd_val (33 samples, 0.01%)</title><rect x="91.6474%" y="485" width="0.0108%" height="15" fill="rgb(209,194,42)" fg:x="279157" fg:w="33"/><text x="91.8974%" y="495.50"></text></g><g><title>handle_pte_fault (56 samples, 0.02%)</title><rect x="91.6582%" y="501" width="0.0184%" height="15" fill="rgb(247,200,46)" fg:x="279190" fg:w="56"/><text x="91.9082%" y="511.50"></text></g><g><title>p4d_offset (44 samples, 0.01%)</title><rect x="91.6838%" y="501" width="0.0144%" height="15" fill="rgb(218,76,16)" fg:x="279268" fg:w="44"/><text x="91.9338%" y="511.50"></text></g><g><title>pmd_val (64 samples, 0.02%)</title><rect x="91.6983%" y="501" width="0.0210%" height="15" fill="rgb(225,21,48)" fg:x="279312" fg:w="64"/><text x="91.9483%" y="511.50"></text></g><g><title>handle_mm_fault (29,491 samples, 9.68%)</title><rect x="82.0443%" y="517" width="9.6819%" height="15" fill="rgb(239,223,50)" fg:x="249906" fg:w="29491"/><text x="82.2943%" y="527.50">handle_mm_fault</text></g><g><title>mem_cgroup_from_task (84 samples, 0.03%)</title><rect x="91.7262%" y="517" width="0.0276%" height="15" fill="rgb(244,45,21)" fg:x="279397" fg:w="84"/><text x="91.9762%" y="527.50"></text></g><g><title>rcu_read_unlock_strict (179 samples, 0.06%)</title><rect x="91.7636%" y="517" width="0.0588%" height="15" fill="rgb(232,33,43)" fg:x="279511" fg:w="179"/><text x="92.0136%" y="527.50"></text></g><g><title>up_read (452 samples, 0.15%)</title><rect x="91.8227%" y="517" width="0.1484%" height="15" fill="rgb(209,8,3)" fg:x="279691" fg:w="452"/><text x="92.0727%" y="527.50"></text></g><g><title>do_user_addr_fault (31,570 samples, 10.36%)</title><rect x="81.6175%" y="533" width="10.3644%" height="15" fill="rgb(214,25,53)" fg:x="248606" fg:w="31570"/><text x="81.8675%" y="543.50">do_user_addr_fa..</text></g><g><title>vmacache_find (33 samples, 0.01%)</title><rect x="91.9711%" y="517" width="0.0108%" height="15" fill="rgb(254,186,54)" fg:x="280143" fg:w="33"/><text x="92.2211%" y="527.50"></text></g><g><title>down_read_trylock (33 samples, 0.01%)</title><rect x="91.9819%" y="533" width="0.0108%" height="15" fill="rgb(208,174,49)" fg:x="280176" fg:w="33"/><text x="92.2319%" y="543.50"></text></g><g><title>fault_in_kernel_space (37 samples, 0.01%)</title><rect x="91.9928%" y="533" width="0.0121%" height="15" fill="rgb(233,191,51)" fg:x="280209" fg:w="37"/><text x="92.2428%" y="543.50"></text></g><g><title>handle_mm_fault (32 samples, 0.01%)</title><rect x="92.0118%" y="533" width="0.0105%" height="15" fill="rgb(222,134,10)" fg:x="280267" fg:w="32"/><text x="92.2618%" y="543.50"></text></g><g><title>irqentry_enter (45 samples, 0.01%)</title><rect x="92.0223%" y="533" width="0.0148%" height="15" fill="rgb(230,226,20)" fg:x="280299" fg:w="45"/><text x="92.2723%" y="543.50"></text></g><g><title>exit_to_user_mode_prepare (61 samples, 0.02%)</title><rect x="92.0532%" y="517" width="0.0200%" height="15" fill="rgb(251,111,25)" fg:x="280393" fg:w="61"/><text x="92.3032%" y="527.50"></text></g><g><title>exit_to_user_mode_prepare (116 samples, 0.04%)</title><rect x="92.0791%" y="501" width="0.0381%" height="15" fill="rgb(224,40,46)" fg:x="280472" fg:w="116"/><text x="92.3291%" y="511.50"></text></g><g><title>fpregs_assert_state_consistent (58 samples, 0.02%)</title><rect x="92.0981%" y="485" width="0.0190%" height="15" fill="rgb(236,108,47)" fg:x="280530" fg:w="58"/><text x="92.3481%" y="495.50"></text></g><g><title>irqentry_exit (248 samples, 0.08%)</title><rect x="92.0446%" y="533" width="0.0814%" height="15" fill="rgb(234,93,0)" fg:x="280367" fg:w="248"/><text x="92.2946%" y="543.50"></text></g><g><title>irqentry_exit_to_user_mode (161 samples, 0.05%)</title><rect x="92.0732%" y="517" width="0.0529%" height="15" fill="rgb(224,213,32)" fg:x="280454" fg:w="161"/><text x="92.3232%" y="527.50"></text></g><g><title>exc_page_fault (32,343 samples, 10.62%)</title><rect x="81.5200%" y="549" width="10.6182%" height="15" fill="rgb(251,11,48)" fg:x="248309" fg:w="32343"/><text x="81.7700%" y="559.50">exc_page_fault</text></g><g><title>fault_in_kernel_space (43 samples, 0.01%)</title><rect x="92.1382%" y="549" width="0.0141%" height="15" fill="rgb(236,173,5)" fg:x="280652" fg:w="43"/><text x="92.3882%" y="559.50"></text></g><g><title>asm_exc_page_fault (33,074 samples, 10.86%)</title><rect x="81.3076%" y="565" width="10.8582%" height="15" fill="rgb(230,95,12)" fg:x="247662" fg:w="33074"/><text x="81.5576%" y="575.50">asm_exc_page_fau..</text></g><g><title>asm_sysvec_apic_timer_interrupt (33 samples, 0.01%)</title><rect x="92.1658%" y="565" width="0.0108%" height="15" fill="rgb(232,209,1)" fg:x="280736" fg:w="33"/><text x="92.4158%" y="575.50"></text></g><g><title>sysvec_apic_timer_interrupt (32 samples, 0.01%)</title><rect x="92.1661%" y="549" width="0.0105%" height="15" fill="rgb(232,6,1)" fg:x="280737" fg:w="32"/><text x="92.4161%" y="559.50"></text></g><g><title>error_entry (947 samples, 0.31%)</title><rect x="92.1766%" y="565" width="0.3109%" height="15" fill="rgb(210,224,50)" fg:x="280769" fg:w="947"/><text x="92.4266%" y="575.50"></text></g><g><title>__memmove_avx_unaligned_erms (63,022 samples, 20.69%)</title><rect x="73.1920%" y="581" width="20.6902%" height="15" fill="rgb(228,127,35)" fg:x="222942" fg:w="63022"/><text x="73.4420%" y="591.50">__memmove_avx_unaligned_erms</text></g><g><title>sync_regs (4,226 samples, 1.39%)</title><rect x="92.4947%" y="565" width="1.3874%" height="15" fill="rgb(245,102,45)" fg:x="281738" fg:w="4226"/><text x="92.7447%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (67,991 samples, 22.32%)</title><rect x="71.5610%" y="613" width="22.3215%" height="15" fill="rgb(214,1,49)" fg:x="217974" fg:w="67991"/><text x="71.8110%" y="623.50">alloc::vec::Vec&lt;T,A&gt;::push</text></g><g><title>core::ptr::write (63,097 samples, 20.71%)</title><rect x="73.1677%" y="597" width="20.7148%" height="15" fill="rgb(226,163,40)" fg:x="222868" fg:w="63097"/><text x="73.4177%" y="607.50">core::ptr::write</text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (130,643 samples, 42.89%)</title><rect x="51.1847%" y="645" width="42.8902%" height="15" fill="rgb(239,212,28)" fg:x="155908" fg:w="130643"/><text x="51.4347%" y="655.50">hprof_slurp::record_parser::HprofRecordParser::parse_streaming</text></g><g><title>hprof_slurp::record_parser::many1_streaming::{{closure}} (130,643 samples, 42.89%)</title><rect x="51.1847%" y="629" width="42.8902%" height="15" fill="rgb(220,20,13)" fg:x="155908" fg:w="130643"/><text x="51.4347%" y="639.50">hprof_slurp::record_parser::many1_streaming::{{closure}}</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (576 samples, 0.19%)</title><rect x="93.8857%" y="613" width="0.1891%" height="15" fill="rgb(210,164,35)" fg:x="285975" fg:w="576"/><text x="94.1357%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (576 samples, 0.19%)</title><rect x="93.8857%" y="597" width="0.1891%" height="15" fill="rgb(248,109,41)" fg:x="285975" fg:w="576"/><text x="94.1357%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (576 samples, 0.19%)</title><rect x="93.8857%" y="581" width="0.1891%" height="15" fill="rgb(238,23,50)" fg:x="285975" fg:w="576"/><text x="94.1357%" y="591.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (31 samples, 0.01%)</title><rect x="94.0748%" y="629" width="0.0102%" height="15" fill="rgb(211,48,49)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="639.50"></text></g><g><title>std::io::default_read_exact (31 samples, 0.01%)</title><rect x="94.0748%" y="613" width="0.0102%" height="15" fill="rgb(223,36,21)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="623.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (31 samples, 0.01%)</title><rect x="94.0748%" y="597" width="0.0102%" height="15" fill="rgb(207,123,46)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="607.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (31 samples, 0.01%)</title><rect x="94.0748%" y="581" width="0.0102%" height="15" fill="rgb(240,218,32)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="591.50"></text></g><g><title>std::sys::unix::fs::File::read (31 samples, 0.01%)</title><rect x="94.0748%" y="565" width="0.0102%" height="15" fill="rgb(252,5,43)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="575.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (31 samples, 0.01%)</title><rect x="94.0748%" y="549" width="0.0102%" height="15" fill="rgb(252,84,19)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="559.50"></text></g><g><title>__libc_read (31 samples, 0.01%)</title><rect x="94.0748%" y="533" width="0.0102%" height="15" fill="rgb(243,152,39)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="543.50"></text></g><g><title>__libc_read (31 samples, 0.01%)</title><rect x="94.0748%" y="517" width="0.0102%" height="15" fill="rgb(234,160,15)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (31 samples, 0.01%)</title><rect x="94.0748%" y="501" width="0.0102%" height="15" fill="rgb(237,34,20)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="511.50"></text></g><g><title>do_syscall_64 (31 samples, 0.01%)</title><rect x="94.0748%" y="485" width="0.0102%" height="15" fill="rgb(229,97,13)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="495.50"></text></g><g><title>__x64_sys_read (31 samples, 0.01%)</title><rect x="94.0748%" y="469" width="0.0102%" height="15" fill="rgb(234,71,50)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="479.50"></text></g><g><title>ksys_read (31 samples, 0.01%)</title><rect x="94.0748%" y="453" width="0.0102%" height="15" fill="rgb(253,155,4)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="463.50"></text></g><g><title>vfs_read (31 samples, 0.01%)</title><rect x="94.0748%" y="437" width="0.0102%" height="15" fill="rgb(222,185,37)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="447.50"></text></g><g><title>new_sync_read (31 samples, 0.01%)</title><rect x="94.0748%" y="421" width="0.0102%" height="15" fill="rgb(251,177,13)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="431.50"></text></g><g><title>ext4_file_read_iter (31 samples, 0.01%)</title><rect x="94.0748%" y="405" width="0.0102%" height="15" fill="rgb(250,179,40)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="415.50"></text></g><g><title>generic_file_read_iter (31 samples, 0.01%)</title><rect x="94.0748%" y="389" width="0.0102%" height="15" fill="rgb(242,44,2)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="399.50"></text></g><g><title>generic_file_buffered_read (31 samples, 0.01%)</title><rect x="94.0748%" y="373" width="0.0102%" height="15" fill="rgb(216,177,13)" fg:x="286551" fg:w="31"/><text x="94.3248%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (61 samples, 0.02%)</title><rect x="94.0978%" y="453" width="0.0200%" height="15" fill="rgb(216,106,43)" fg:x="286621" fg:w="61"/><text x="94.3478%" y="463.50"></text></g><g><title>core::ops::function::FnMut::call_mut (61 samples, 0.02%)</title><rect x="94.0978%" y="437" width="0.0200%" height="15" fill="rgb(216,183,2)" fg:x="286621" fg:w="61"/><text x="94.3478%" y="447.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (61 samples, 0.02%)</title><rect x="94.0978%" y="421" width="0.0200%" height="15" fill="rgb(249,75,3)" fg:x="286621" fg:w="61"/><text x="94.3478%" y="431.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (61 samples, 0.02%)</title><rect x="94.0978%" y="405" width="0.0200%" height="15" fill="rgb(219,67,39)" fg:x="286621" fg:w="61"/><text x="94.3478%" y="415.50"></text></g><g><title>nom::number::streaming::be_u64 (59 samples, 0.02%)</title><rect x="94.0985%" y="389" width="0.0194%" height="15" fill="rgb(253,228,2)" fg:x="286623" fg:w="59"/><text x="94.3485%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (113 samples, 0.04%)</title><rect x="94.0932%" y="629" width="0.0371%" height="15" fill="rgb(235,138,27)" fg:x="286607" fg:w="113"/><text x="94.3432%" y="639.50"></text></g><g><title>hprof_slurp::record_parser::many1_streaming::{{closure}} (113 samples, 0.04%)</title><rect x="94.0932%" y="613" width="0.0371%" height="15" fill="rgb(236,97,51)" fg:x="286607" fg:w="113"/><text x="94.3432%" y="623.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (113 samples, 0.04%)</title><rect x="94.0932%" y="597" width="0.0371%" height="15" fill="rgb(240,80,30)" fg:x="286607" fg:w="113"/><text x="94.3432%" y="607.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (113 samples, 0.04%)</title><rect x="94.0932%" y="581" width="0.0371%" height="15" fill="rgb(230,178,19)" fg:x="286607" fg:w="113"/><text x="94.3432%" y="591.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (113 samples, 0.04%)</title><rect x="94.0932%" y="565" width="0.0371%" height="15" fill="rgb(210,190,27)" fg:x="286607" fg:w="113"/><text x="94.3432%" y="575.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (113 samples, 0.04%)</title><rect x="94.0932%" y="549" width="0.0371%" height="15" fill="rgb(222,107,31)" fg:x="286607" fg:w="113"/><text x="94.3432%" y="559.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (113 samples, 0.04%)</title><rect x="94.0932%" y="533" width="0.0371%" height="15" fill="rgb(216,127,34)" fg:x="286607" fg:w="113"/><text x="94.3432%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (113 samples, 0.04%)</title><rect x="94.0932%" y="517" width="0.0371%" height="15" fill="rgb(234,116,52)" fg:x="286607" fg:w="113"/><text x="94.3432%" y="527.50"></text></g><g><title>nom::combinator::map::{{closure}} (113 samples, 0.04%)</title><rect x="94.0932%" y="501" width="0.0371%" height="15" fill="rgb(222,124,15)" fg:x="286607" fg:w="113"/><text x="94.3432%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (113 samples, 0.04%)</title><rect x="94.0932%" y="485" width="0.0371%" height="15" fill="rgb(231,179,28)" fg:x="286607" fg:w="113"/><text x="94.3432%" y="495.50"></text></g><g><title>nom::multi::count::{{closure}} (113 samples, 0.04%)</title><rect x="94.0932%" y="469" width="0.0371%" height="15" fill="rgb(226,93,45)" fg:x="286607" fg:w="113"/><text x="94.3432%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (65 samples, 0.02%)</title><rect x="94.1549%" y="437" width="0.0213%" height="15" fill="rgb(215,8,51)" fg:x="286795" fg:w="65"/><text x="94.4049%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (65 samples, 0.02%)</title><rect x="94.1549%" y="421" width="0.0213%" height="15" fill="rgb(223,106,5)" fg:x="286795" fg:w="65"/><text x="94.4049%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (65 samples, 0.02%)</title><rect x="94.1549%" y="405" width="0.0213%" height="15" fill="rgb(250,191,5)" fg:x="286795" fg:w="65"/><text x="94.4049%" y="415.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (65 samples, 0.02%)</title><rect x="94.1549%" y="389" width="0.0213%" height="15" fill="rgb(242,132,44)" fg:x="286795" fg:w="65"/><text x="94.4049%" y="399.50"></text></g><g><title>nom::number::streaming::be_u64 (63 samples, 0.02%)</title><rect x="94.1556%" y="373" width="0.0207%" height="15" fill="rgb(251,152,29)" fg:x="286797" fg:w="63"/><text x="94.4056%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (57 samples, 0.02%)</title><rect x="94.1763%" y="437" width="0.0187%" height="15" fill="rgb(218,179,5)" fg:x="286860" fg:w="57"/><text x="94.4263%" y="447.50"></text></g><g><title>core::ptr::write (51 samples, 0.02%)</title><rect x="94.1782%" y="421" width="0.0167%" height="15" fill="rgb(227,67,19)" fg:x="286866" fg:w="51"/><text x="94.4282%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (153 samples, 0.05%)</title><rect x="94.1484%" y="613" width="0.0502%" height="15" fill="rgb(233,119,31)" fg:x="286775" fg:w="153"/><text x="94.3984%" y="623.50"></text></g><g><title>hprof_slurp::record_parser::many1_streaming::{{closure}} (153 samples, 0.05%)</title><rect x="94.1484%" y="597" width="0.0502%" height="15" fill="rgb(241,120,22)" fg:x="286775" fg:w="153"/><text x="94.3984%" y="607.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (153 samples, 0.05%)</title><rect x="94.1484%" y="581" width="0.0502%" height="15" fill="rgb(224,102,30)" fg:x="286775" fg:w="153"/><text x="94.3984%" y="591.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (153 samples, 0.05%)</title><rect x="94.1484%" y="565" width="0.0502%" height="15" fill="rgb(210,164,37)" fg:x="286775" fg:w="153"/><text x="94.3984%" y="575.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (153 samples, 0.05%)</title><rect x="94.1484%" y="549" width="0.0502%" height="15" fill="rgb(226,191,16)" fg:x="286775" fg:w="153"/><text x="94.3984%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (153 samples, 0.05%)</title><rect x="94.1484%" y="533" width="0.0502%" height="15" fill="rgb(214,40,45)" fg:x="286775" fg:w="153"/><text x="94.3984%" y="543.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (153 samples, 0.05%)</title><rect x="94.1484%" y="517" width="0.0502%" height="15" fill="rgb(244,29,26)" fg:x="286775" fg:w="153"/><text x="94.3984%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (153 samples, 0.05%)</title><rect x="94.1484%" y="501" width="0.0502%" height="15" fill="rgb(216,16,5)" fg:x="286775" fg:w="153"/><text x="94.3984%" y="511.50"></text></g><g><title>nom::combinator::map::{{closure}} (153 samples, 0.05%)</title><rect x="94.1484%" y="485" width="0.0502%" height="15" fill="rgb(249,76,35)" fg:x="286775" fg:w="153"/><text x="94.3984%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (153 samples, 0.05%)</title><rect x="94.1484%" y="469" width="0.0502%" height="15" fill="rgb(207,11,44)" fg:x="286775" fg:w="153"/><text x="94.3984%" y="479.50"></text></g><g><title>nom::multi::count::{{closure}} (153 samples, 0.05%)</title><rect x="94.1484%" y="453" width="0.0502%" height="15" fill="rgb(228,190,49)" fg:x="286775" fg:w="153"/><text x="94.3984%" y="463.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (33 samples, 0.01%)</title><rect x="94.1986%" y="597" width="0.0108%" height="15" fill="rgb(214,173,12)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="607.50"></text></g><g><title>std::io::default_read_exact (33 samples, 0.01%)</title><rect x="94.1986%" y="581" width="0.0108%" height="15" fill="rgb(218,26,35)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="591.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (33 samples, 0.01%)</title><rect x="94.1986%" y="565" width="0.0108%" height="15" fill="rgb(220,200,19)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="575.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (33 samples, 0.01%)</title><rect x="94.1986%" y="549" width="0.0108%" height="15" fill="rgb(239,95,49)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="559.50"></text></g><g><title>std::sys::unix::fs::File::read (33 samples, 0.01%)</title><rect x="94.1986%" y="533" width="0.0108%" height="15" fill="rgb(235,85,53)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="543.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (33 samples, 0.01%)</title><rect x="94.1986%" y="517" width="0.0108%" height="15" fill="rgb(233,133,31)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="527.50"></text></g><g><title>__libc_read (33 samples, 0.01%)</title><rect x="94.1986%" y="501" width="0.0108%" height="15" fill="rgb(218,25,20)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="511.50"></text></g><g><title>__libc_read (33 samples, 0.01%)</title><rect x="94.1986%" y="485" width="0.0108%" height="15" fill="rgb(252,210,38)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="495.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.01%)</title><rect x="94.1986%" y="469" width="0.0108%" height="15" fill="rgb(242,134,21)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="479.50"></text></g><g><title>do_syscall_64 (33 samples, 0.01%)</title><rect x="94.1986%" y="453" width="0.0108%" height="15" fill="rgb(213,28,48)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="463.50"></text></g><g><title>__x64_sys_read (33 samples, 0.01%)</title><rect x="94.1986%" y="437" width="0.0108%" height="15" fill="rgb(250,196,2)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="447.50"></text></g><g><title>ksys_read (33 samples, 0.01%)</title><rect x="94.1986%" y="421" width="0.0108%" height="15" fill="rgb(227,5,17)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="431.50"></text></g><g><title>vfs_read (33 samples, 0.01%)</title><rect x="94.1986%" y="405" width="0.0108%" height="15" fill="rgb(221,226,24)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="415.50"></text></g><g><title>new_sync_read (33 samples, 0.01%)</title><rect x="94.1986%" y="389" width="0.0108%" height="15" fill="rgb(211,5,48)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="399.50"></text></g><g><title>ext4_file_read_iter (33 samples, 0.01%)</title><rect x="94.1986%" y="373" width="0.0108%" height="15" fill="rgb(219,150,6)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="383.50"></text></g><g><title>generic_file_read_iter (33 samples, 0.01%)</title><rect x="94.1986%" y="357" width="0.0108%" height="15" fill="rgb(251,46,16)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="367.50"></text></g><g><title>generic_file_buffered_read (33 samples, 0.01%)</title><rect x="94.1986%" y="341" width="0.0108%" height="15" fill="rgb(220,204,40)" fg:x="286928" fg:w="33"/><text x="94.4486%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.01%)</title><rect x="94.2478%" y="341" width="0.0118%" height="15" fill="rgb(211,85,2)" fg:x="287078" fg:w="36"/><text x="94.4978%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.01%)</title><rect x="94.2478%" y="325" width="0.0118%" height="15" fill="rgb(229,17,7)" fg:x="287078" fg:w="36"/><text x="94.4978%" y="335.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (36 samples, 0.01%)</title><rect x="94.2478%" y="309" width="0.0118%" height="15" fill="rgb(239,72,28)" fg:x="287078" fg:w="36"/><text x="94.4978%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (36 samples, 0.01%)</title><rect x="94.2478%" y="293" width="0.0118%" height="15" fill="rgb(230,47,54)" fg:x="287078" fg:w="36"/><text x="94.4978%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (88 samples, 0.03%)</title><rect x="94.2311%" y="421" width="0.0289%" height="15" fill="rgb(214,50,8)" fg:x="287027" fg:w="88"/><text x="94.4811%" y="431.50"></text></g><g><title>core::ops::function::FnMut::call_mut (88 samples, 0.03%)</title><rect x="94.2311%" y="405" width="0.0289%" height="15" fill="rgb(216,198,43)" fg:x="287027" fg:w="88"/><text x="94.4811%" y="415.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (88 samples, 0.03%)</title><rect x="94.2311%" y="389" width="0.0289%" height="15" fill="rgb(234,20,35)" fg:x="287027" fg:w="88"/><text x="94.4811%" y="399.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (88 samples, 0.03%)</title><rect x="94.2311%" y="373" width="0.0289%" height="15" fill="rgb(254,45,19)" fg:x="287027" fg:w="88"/><text x="94.4811%" y="383.50"></text></g><g><title>nom::number::streaming::be_u64 (81 samples, 0.03%)</title><rect x="94.2334%" y="357" width="0.0266%" height="15" fill="rgb(219,14,44)" fg:x="287034" fg:w="81"/><text x="94.4834%" y="367.50"></text></g><g><title>handle_mm_fault (32 samples, 0.01%)</title><rect x="94.2682%" y="341" width="0.0105%" height="15" fill="rgb(217,220,26)" fg:x="287140" fg:w="32"/><text x="94.5182%" y="351.50"></text></g><g><title>__handle_mm_fault (31 samples, 0.01%)</title><rect x="94.2685%" y="325" width="0.0102%" height="15" fill="rgb(213,158,28)" fg:x="287141" fg:w="31"/><text x="94.5185%" y="335.50"></text></g><g><title>handle_pte_fault (31 samples, 0.01%)</title><rect x="94.2685%" y="309" width="0.0102%" height="15" fill="rgb(252,51,52)" fg:x="287141" fg:w="31"/><text x="94.5185%" y="319.50"></text></g><g><title>asm_exc_page_fault (37 samples, 0.01%)</title><rect x="94.2669%" y="389" width="0.0121%" height="15" fill="rgb(246,89,16)" fg:x="287136" fg:w="37"/><text x="94.5169%" y="399.50"></text></g><g><title>exc_page_fault (35 samples, 0.01%)</title><rect x="94.2675%" y="373" width="0.0115%" height="15" fill="rgb(216,158,49)" fg:x="287138" fg:w="35"/><text x="94.5175%" y="383.50"></text></g><g><title>do_user_addr_fault (35 samples, 0.01%)</title><rect x="94.2675%" y="357" width="0.0115%" height="15" fill="rgb(236,107,19)" fg:x="287138" fg:w="35"/><text x="94.5175%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (61 samples, 0.02%)</title><rect x="94.2600%" y="421" width="0.0200%" height="15" fill="rgb(228,185,30)" fg:x="287115" fg:w="61"/><text x="94.5100%" y="431.50"></text></g><g><title>core::ptr::write (55 samples, 0.02%)</title><rect x="94.2620%" y="405" width="0.0181%" height="15" fill="rgb(246,134,8)" fg:x="287121" fg:w="55"/><text x="94.5120%" y="415.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (203 samples, 0.07%)</title><rect x="94.2173%" y="597" width="0.0666%" height="15" fill="rgb(214,143,50)" fg:x="286985" fg:w="203"/><text x="94.4673%" y="607.50"></text></g><g><title>hprof_slurp::record_parser::many1_streaming::{{closure}} (203 samples, 0.07%)</title><rect x="94.2173%" y="581" width="0.0666%" height="15" fill="rgb(228,75,8)" fg:x="286985" fg:w="203"/><text x="94.4673%" y="591.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (203 samples, 0.07%)</title><rect x="94.2173%" y="565" width="0.0666%" height="15" fill="rgb(207,175,4)" fg:x="286985" fg:w="203"/><text x="94.4673%" y="575.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (203 samples, 0.07%)</title><rect x="94.2173%" y="549" width="0.0666%" height="15" fill="rgb(205,108,24)" fg:x="286985" fg:w="203"/><text x="94.4673%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (203 samples, 0.07%)</title><rect x="94.2173%" y="533" width="0.0666%" height="15" fill="rgb(244,120,49)" fg:x="286985" fg:w="203"/><text x="94.4673%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (203 samples, 0.07%)</title><rect x="94.2173%" y="517" width="0.0666%" height="15" fill="rgb(223,47,38)" fg:x="286985" fg:w="203"/><text x="94.4673%" y="527.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (203 samples, 0.07%)</title><rect x="94.2173%" y="501" width="0.0666%" height="15" fill="rgb(229,179,11)" fg:x="286985" fg:w="203"/><text x="94.4673%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (203 samples, 0.07%)</title><rect x="94.2173%" y="485" width="0.0666%" height="15" fill="rgb(231,122,1)" fg:x="286985" fg:w="203"/><text x="94.4673%" y="495.50"></text></g><g><title>nom::combinator::map::{{closure}} (203 samples, 0.07%)</title><rect x="94.2173%" y="469" width="0.0666%" height="15" fill="rgb(245,119,9)" fg:x="286985" fg:w="203"/><text x="94.4673%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (203 samples, 0.07%)</title><rect x="94.2173%" y="453" width="0.0666%" height="15" fill="rgb(241,163,25)" fg:x="286985" fg:w="203"/><text x="94.4673%" y="463.50"></text></g><g><title>nom::multi::count::{{closure}} (203 samples, 0.07%)</title><rect x="94.2173%" y="437" width="0.0666%" height="15" fill="rgb(217,214,3)" fg:x="286985" fg:w="203"/><text x="94.4673%" y="447.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (33 samples, 0.01%)</title><rect x="94.2840%" y="581" width="0.0108%" height="15" fill="rgb(240,86,28)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="591.50"></text></g><g><title>std::io::default_read_exact (33 samples, 0.01%)</title><rect x="94.2840%" y="565" width="0.0108%" height="15" fill="rgb(215,47,9)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="575.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (33 samples, 0.01%)</title><rect x="94.2840%" y="549" width="0.0108%" height="15" fill="rgb(252,25,45)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="559.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (33 samples, 0.01%)</title><rect x="94.2840%" y="533" width="0.0108%" height="15" fill="rgb(251,164,9)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="543.50"></text></g><g><title>std::sys::unix::fs::File::read (33 samples, 0.01%)</title><rect x="94.2840%" y="517" width="0.0108%" height="15" fill="rgb(233,194,0)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="527.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (33 samples, 0.01%)</title><rect x="94.2840%" y="501" width="0.0108%" height="15" fill="rgb(249,111,24)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="511.50"></text></g><g><title>__libc_read (33 samples, 0.01%)</title><rect x="94.2840%" y="485" width="0.0108%" height="15" fill="rgb(250,223,3)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="495.50"></text></g><g><title>__libc_read (33 samples, 0.01%)</title><rect x="94.2840%" y="469" width="0.0108%" height="15" fill="rgb(236,178,37)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="479.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.01%)</title><rect x="94.2840%" y="453" width="0.0108%" height="15" fill="rgb(241,158,50)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="463.50"></text></g><g><title>do_syscall_64 (33 samples, 0.01%)</title><rect x="94.2840%" y="437" width="0.0108%" height="15" fill="rgb(213,121,41)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="447.50"></text></g><g><title>__x64_sys_read (33 samples, 0.01%)</title><rect x="94.2840%" y="421" width="0.0108%" height="15" fill="rgb(240,92,3)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="431.50"></text></g><g><title>ksys_read (33 samples, 0.01%)</title><rect x="94.2840%" y="405" width="0.0108%" height="15" fill="rgb(205,123,3)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="415.50"></text></g><g><title>vfs_read (33 samples, 0.01%)</title><rect x="94.2840%" y="389" width="0.0108%" height="15" fill="rgb(205,97,47)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="399.50"></text></g><g><title>new_sync_read (33 samples, 0.01%)</title><rect x="94.2840%" y="373" width="0.0108%" height="15" fill="rgb(247,152,14)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="383.50"></text></g><g><title>ext4_file_read_iter (33 samples, 0.01%)</title><rect x="94.2840%" y="357" width="0.0108%" height="15" fill="rgb(248,195,53)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="367.50"></text></g><g><title>generic_file_read_iter (33 samples, 0.01%)</title><rect x="94.2840%" y="341" width="0.0108%" height="15" fill="rgb(226,201,16)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="351.50"></text></g><g><title>generic_file_buffered_read (33 samples, 0.01%)</title><rect x="94.2840%" y="325" width="0.0108%" height="15" fill="rgb(205,98,0)" fg:x="287188" fg:w="33"/><text x="94.5340%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (116 samples, 0.04%)</title><rect x="94.3089%" y="405" width="0.0381%" height="15" fill="rgb(214,191,48)" fg:x="287264" fg:w="116"/><text x="94.5589%" y="415.50"></text></g><g><title>core::ops::function::FnMut::call_mut (116 samples, 0.04%)</title><rect x="94.3089%" y="389" width="0.0381%" height="15" fill="rgb(237,112,39)" fg:x="287264" fg:w="116"/><text x="94.5589%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (116 samples, 0.04%)</title><rect x="94.3089%" y="373" width="0.0381%" height="15" fill="rgb(247,203,27)" fg:x="287264" fg:w="116"/><text x="94.5589%" y="383.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (116 samples, 0.04%)</title><rect x="94.3089%" y="357" width="0.0381%" height="15" fill="rgb(235,124,28)" fg:x="287264" fg:w="116"/><text x="94.5589%" y="367.50"></text></g><g><title>nom::number::streaming::be_u64 (109 samples, 0.04%)</title><rect x="94.3112%" y="341" width="0.0358%" height="15" fill="rgb(208,207,46)" fg:x="287271" fg:w="109"/><text x="94.5612%" y="351.50"></text></g><g><title>handle_mm_fault (43 samples, 0.01%)</title><rect x="94.3611%" y="325" width="0.0141%" height="15" fill="rgb(234,176,4)" fg:x="287423" fg:w="43"/><text x="94.6111%" y="335.50"></text></g><g><title>__handle_mm_fault (41 samples, 0.01%)</title><rect x="94.3618%" y="309" width="0.0135%" height="15" fill="rgb(230,133,28)" fg:x="287425" fg:w="41"/><text x="94.6118%" y="319.50"></text></g><g><title>handle_pte_fault (40 samples, 0.01%)</title><rect x="94.3621%" y="293" width="0.0131%" height="15" fill="rgb(211,137,40)" fg:x="287426" fg:w="40"/><text x="94.6121%" y="303.50"></text></g><g><title>do_anonymous_page (39 samples, 0.01%)</title><rect x="94.3624%" y="277" width="0.0128%" height="15" fill="rgb(254,35,13)" fg:x="287427" fg:w="39"/><text x="94.6124%" y="287.50"></text></g><g><title>do_user_addr_fault (47 samples, 0.02%)</title><rect x="94.3605%" y="341" width="0.0154%" height="15" fill="rgb(225,49,51)" fg:x="287421" fg:w="47"/><text x="94.6105%" y="351.50"></text></g><g><title>exc_page_fault (50 samples, 0.02%)</title><rect x="94.3598%" y="357" width="0.0164%" height="15" fill="rgb(251,10,15)" fg:x="287419" fg:w="50"/><text x="94.6098%" y="367.50"></text></g><g><title>asm_exc_page_fault (51 samples, 0.02%)</title><rect x="94.3598%" y="373" width="0.0167%" height="15" fill="rgb(228,207,15)" fg:x="287419" fg:w="51"/><text x="94.6098%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (99 samples, 0.03%)</title><rect x="94.3470%" y="405" width="0.0325%" height="15" fill="rgb(241,99,19)" fg:x="287380" fg:w="99"/><text x="94.5970%" y="415.50"></text></g><g><title>core::ptr::write (81 samples, 0.03%)</title><rect x="94.3529%" y="389" width="0.0266%" height="15" fill="rgb(207,104,49)" fg:x="287398" fg:w="81"/><text x="94.6029%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (255 samples, 0.08%)</title><rect x="94.3014%" y="581" width="0.0837%" height="15" fill="rgb(234,99,18)" fg:x="287241" fg:w="255"/><text x="94.5514%" y="591.50"></text></g><g><title>hprof_slurp::record_parser::many1_streaming::{{closure}} (255 samples, 0.08%)</title><rect x="94.3014%" y="565" width="0.0837%" height="15" fill="rgb(213,191,49)" fg:x="287241" fg:w="255"/><text x="94.5514%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (255 samples, 0.08%)</title><rect x="94.3014%" y="549" width="0.0837%" height="15" fill="rgb(210,226,19)" fg:x="287241" fg:w="255"/><text x="94.5514%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (255 samples, 0.08%)</title><rect x="94.3014%" y="533" width="0.0837%" height="15" fill="rgb(229,97,18)" fg:x="287241" fg:w="255"/><text x="94.5514%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (255 samples, 0.08%)</title><rect x="94.3014%" y="517" width="0.0837%" height="15" fill="rgb(211,167,15)" fg:x="287241" fg:w="255"/><text x="94.5514%" y="527.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (255 samples, 0.08%)</title><rect x="94.3014%" y="501" width="0.0837%" height="15" fill="rgb(210,169,34)" fg:x="287241" fg:w="255"/><text x="94.5514%" y="511.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (255 samples, 0.08%)</title><rect x="94.3014%" y="485" width="0.0837%" height="15" fill="rgb(241,121,31)" fg:x="287241" fg:w="255"/><text x="94.5514%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (255 samples, 0.08%)</title><rect x="94.3014%" y="469" width="0.0837%" height="15" fill="rgb(232,40,11)" fg:x="287241" fg:w="255"/><text x="94.5514%" y="479.50"></text></g><g><title>nom::combinator::map::{{closure}} (255 samples, 0.08%)</title><rect x="94.3014%" y="453" width="0.0837%" height="15" fill="rgb(205,86,26)" fg:x="287241" fg:w="255"/><text x="94.5514%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (255 samples, 0.08%)</title><rect x="94.3014%" y="437" width="0.0837%" height="15" fill="rgb(231,126,28)" fg:x="287241" fg:w="255"/><text x="94.5514%" y="447.50"></text></g><g><title>nom::multi::count::{{closure}} (255 samples, 0.08%)</title><rect x="94.3014%" y="421" width="0.0837%" height="15" fill="rgb(219,221,18)" fg:x="287241" fg:w="255"/><text x="94.5514%" y="431.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (36 samples, 0.01%)</title><rect x="94.3851%" y="565" width="0.0118%" height="15" fill="rgb(211,40,0)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="575.50"></text></g><g><title>std::io::default_read_exact (36 samples, 0.01%)</title><rect x="94.3851%" y="549" width="0.0118%" height="15" fill="rgb(239,85,43)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="559.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (36 samples, 0.01%)</title><rect x="94.3851%" y="533" width="0.0118%" height="15" fill="rgb(231,55,21)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="543.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (36 samples, 0.01%)</title><rect x="94.3851%" y="517" width="0.0118%" height="15" fill="rgb(225,184,43)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="527.50"></text></g><g><title>std::sys::unix::fs::File::read (36 samples, 0.01%)</title><rect x="94.3851%" y="501" width="0.0118%" height="15" fill="rgb(251,158,41)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="511.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (36 samples, 0.01%)</title><rect x="94.3851%" y="485" width="0.0118%" height="15" fill="rgb(234,159,37)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="495.50"></text></g><g><title>__libc_read (36 samples, 0.01%)</title><rect x="94.3851%" y="469" width="0.0118%" height="15" fill="rgb(216,204,22)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="479.50"></text></g><g><title>__libc_read (36 samples, 0.01%)</title><rect x="94.3851%" y="453" width="0.0118%" height="15" fill="rgb(214,17,3)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="463.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (36 samples, 0.01%)</title><rect x="94.3851%" y="437" width="0.0118%" height="15" fill="rgb(212,111,17)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="447.50"></text></g><g><title>do_syscall_64 (36 samples, 0.01%)</title><rect x="94.3851%" y="421" width="0.0118%" height="15" fill="rgb(221,157,24)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="431.50"></text></g><g><title>__x64_sys_read (36 samples, 0.01%)</title><rect x="94.3851%" y="405" width="0.0118%" height="15" fill="rgb(252,16,13)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="415.50"></text></g><g><title>ksys_read (36 samples, 0.01%)</title><rect x="94.3851%" y="389" width="0.0118%" height="15" fill="rgb(221,62,2)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="399.50"></text></g><g><title>vfs_read (36 samples, 0.01%)</title><rect x="94.3851%" y="373" width="0.0118%" height="15" fill="rgb(247,87,22)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="383.50"></text></g><g><title>new_sync_read (36 samples, 0.01%)</title><rect x="94.3851%" y="357" width="0.0118%" height="15" fill="rgb(215,73,9)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="367.50"></text></g><g><title>ext4_file_read_iter (36 samples, 0.01%)</title><rect x="94.3851%" y="341" width="0.0118%" height="15" fill="rgb(207,175,33)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="351.50"></text></g><g><title>generic_file_read_iter (36 samples, 0.01%)</title><rect x="94.3851%" y="325" width="0.0118%" height="15" fill="rgb(243,129,54)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="335.50"></text></g><g><title>generic_file_buffered_read (36 samples, 0.01%)</title><rect x="94.3851%" y="309" width="0.0118%" height="15" fill="rgb(227,119,45)" fg:x="287496" fg:w="36"/><text x="94.6351%" y="319.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (156 samples, 0.05%)</title><rect x="94.4163%" y="389" width="0.0512%" height="15" fill="rgb(205,109,36)" fg:x="287591" fg:w="156"/><text x="94.6663%" y="399.50"></text></g><g><title>core::ops::function::FnMut::call_mut (156 samples, 0.05%)</title><rect x="94.4163%" y="373" width="0.0512%" height="15" fill="rgb(205,6,39)" fg:x="287591" fg:w="156"/><text x="94.6663%" y="383.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (156 samples, 0.05%)</title><rect x="94.4163%" y="357" width="0.0512%" height="15" fill="rgb(221,32,16)" fg:x="287591" fg:w="156"/><text x="94.6663%" y="367.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (156 samples, 0.05%)</title><rect x="94.4163%" y="341" width="0.0512%" height="15" fill="rgb(228,144,50)" fg:x="287591" fg:w="156"/><text x="94.6663%" y="351.50"></text></g><g><title>nom::number::streaming::be_u64 (144 samples, 0.05%)</title><rect x="94.4202%" y="325" width="0.0473%" height="15" fill="rgb(229,201,53)" fg:x="287603" fg:w="144"/><text x="94.6702%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.01%)</title><rect x="94.4527%" y="309" width="0.0148%" height="15" fill="rgb(249,153,27)" fg:x="287702" fg:w="45"/><text x="94.7027%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.01%)</title><rect x="94.4527%" y="293" width="0.0148%" height="15" fill="rgb(227,106,25)" fg:x="287702" fg:w="45"/><text x="94.7027%" y="303.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (45 samples, 0.01%)</title><rect x="94.4527%" y="277" width="0.0148%" height="15" fill="rgb(230,65,29)" fg:x="287702" fg:w="45"/><text x="94.7027%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (45 samples, 0.01%)</title><rect x="94.4527%" y="261" width="0.0148%" height="15" fill="rgb(221,57,46)" fg:x="287702" fg:w="45"/><text x="94.7027%" y="271.50"></text></g><g><title>do_anonymous_page (44 samples, 0.01%)</title><rect x="94.4783%" y="261" width="0.0144%" height="15" fill="rgb(229,161,17)" fg:x="287780" fg:w="44"/><text x="94.7283%" y="271.50"></text></g><g><title>__handle_mm_fault (50 samples, 0.02%)</title><rect x="94.4767%" y="293" width="0.0164%" height="15" fill="rgb(222,213,11)" fg:x="287775" fg:w="50"/><text x="94.7267%" y="303.50"></text></g><g><title>handle_pte_fault (49 samples, 0.02%)</title><rect x="94.4770%" y="277" width="0.0161%" height="15" fill="rgb(235,35,13)" fg:x="287776" fg:w="49"/><text x="94.7270%" y="287.50"></text></g><g><title>exc_page_fault (57 samples, 0.02%)</title><rect x="94.4747%" y="341" width="0.0187%" height="15" fill="rgb(233,158,34)" fg:x="287769" fg:w="57"/><text x="94.7247%" y="351.50"></text></g><g><title>do_user_addr_fault (55 samples, 0.02%)</title><rect x="94.4754%" y="325" width="0.0181%" height="15" fill="rgb(215,151,48)" fg:x="287771" fg:w="55"/><text x="94.7254%" y="335.50"></text></g><g><title>handle_mm_fault (53 samples, 0.02%)</title><rect x="94.4760%" y="309" width="0.0174%" height="15" fill="rgb(229,84,14)" fg:x="287773" fg:w="53"/><text x="94.7260%" y="319.50"></text></g><g><title>asm_exc_page_fault (59 samples, 0.02%)</title><rect x="94.4744%" y="357" width="0.0194%" height="15" fill="rgb(229,68,14)" fg:x="287768" fg:w="59"/><text x="94.7244%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (88 samples, 0.03%)</title><rect x="94.4675%" y="389" width="0.0289%" height="15" fill="rgb(243,106,26)" fg:x="287747" fg:w="88"/><text x="94.7175%" y="399.50"></text></g><g><title>core::ptr::write (83 samples, 0.03%)</title><rect x="94.4691%" y="373" width="0.0272%" height="15" fill="rgb(206,45,38)" fg:x="287752" fg:w="83"/><text x="94.7191%" y="383.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (298 samples, 0.10%)</title><rect x="94.4054%" y="565" width="0.0978%" height="15" fill="rgb(226,6,15)" fg:x="287558" fg:w="298"/><text x="94.6554%" y="575.50"></text></g><g><title>hprof_slurp::record_parser::many1_streaming::{{closure}} (298 samples, 0.10%)</title><rect x="94.4054%" y="549" width="0.0978%" height="15" fill="rgb(232,22,54)" fg:x="287558" fg:w="298"/><text x="94.6554%" y="559.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (298 samples, 0.10%)</title><rect x="94.4054%" y="533" width="0.0978%" height="15" fill="rgb(229,222,32)" fg:x="287558" fg:w="298"/><text x="94.6554%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (298 samples, 0.10%)</title><rect x="94.4054%" y="517" width="0.0978%" height="15" fill="rgb(228,62,29)" fg:x="287558" fg:w="298"/><text x="94.6554%" y="527.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (298 samples, 0.10%)</title><rect x="94.4054%" y="501" width="0.0978%" height="15" fill="rgb(251,103,34)" fg:x="287558" fg:w="298"/><text x="94.6554%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (298 samples, 0.10%)</title><rect x="94.4054%" y="485" width="0.0978%" height="15" fill="rgb(233,12,30)" fg:x="287558" fg:w="298"/><text x="94.6554%" y="495.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (298 samples, 0.10%)</title><rect x="94.4054%" y="469" width="0.0978%" height="15" fill="rgb(238,52,0)" fg:x="287558" fg:w="298"/><text x="94.6554%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (298 samples, 0.10%)</title><rect x="94.4054%" y="453" width="0.0978%" height="15" fill="rgb(223,98,5)" fg:x="287558" fg:w="298"/><text x="94.6554%" y="463.50"></text></g><g><title>nom::combinator::map::{{closure}} (298 samples, 0.10%)</title><rect x="94.4054%" y="437" width="0.0978%" height="15" fill="rgb(228,75,37)" fg:x="287558" fg:w="298"/><text x="94.6554%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (298 samples, 0.10%)</title><rect x="94.4054%" y="421" width="0.0978%" height="15" fill="rgb(205,115,49)" fg:x="287558" fg:w="298"/><text x="94.6554%" y="431.50"></text></g><g><title>nom::multi::count::{{closure}} (298 samples, 0.10%)</title><rect x="94.4054%" y="405" width="0.0978%" height="15" fill="rgb(250,154,43)" fg:x="287558" fg:w="298"/><text x="94.6554%" y="415.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (33 samples, 0.01%)</title><rect x="94.5033%" y="549" width="0.0108%" height="15" fill="rgb(226,43,29)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="559.50"></text></g><g><title>std::io::default_read_exact (33 samples, 0.01%)</title><rect x="94.5033%" y="533" width="0.0108%" height="15" fill="rgb(249,228,39)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="543.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (33 samples, 0.01%)</title><rect x="94.5033%" y="517" width="0.0108%" height="15" fill="rgb(216,79,43)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="527.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (33 samples, 0.01%)</title><rect x="94.5033%" y="501" width="0.0108%" height="15" fill="rgb(228,95,12)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="511.50"></text></g><g><title>std::sys::unix::fs::File::read (33 samples, 0.01%)</title><rect x="94.5033%" y="485" width="0.0108%" height="15" fill="rgb(249,221,15)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="495.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (33 samples, 0.01%)</title><rect x="94.5033%" y="469" width="0.0108%" height="15" fill="rgb(233,34,13)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="479.50"></text></g><g><title>__libc_read (33 samples, 0.01%)</title><rect x="94.5033%" y="453" width="0.0108%" height="15" fill="rgb(214,103,39)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="463.50"></text></g><g><title>__libc_read (33 samples, 0.01%)</title><rect x="94.5033%" y="437" width="0.0108%" height="15" fill="rgb(251,126,39)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.01%)</title><rect x="94.5033%" y="421" width="0.0108%" height="15" fill="rgb(214,216,36)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="431.50"></text></g><g><title>do_syscall_64 (33 samples, 0.01%)</title><rect x="94.5033%" y="405" width="0.0108%" height="15" fill="rgb(220,221,8)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="415.50"></text></g><g><title>__x64_sys_read (33 samples, 0.01%)</title><rect x="94.5033%" y="389" width="0.0108%" height="15" fill="rgb(240,216,3)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="399.50"></text></g><g><title>ksys_read (33 samples, 0.01%)</title><rect x="94.5033%" y="373" width="0.0108%" height="15" fill="rgb(232,218,17)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="383.50"></text></g><g><title>vfs_read (33 samples, 0.01%)</title><rect x="94.5033%" y="357" width="0.0108%" height="15" fill="rgb(229,163,45)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="367.50"></text></g><g><title>new_sync_read (33 samples, 0.01%)</title><rect x="94.5033%" y="341" width="0.0108%" height="15" fill="rgb(231,110,42)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="351.50"></text></g><g><title>ext4_file_read_iter (33 samples, 0.01%)</title><rect x="94.5033%" y="325" width="0.0108%" height="15" fill="rgb(208,170,48)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="335.50"></text></g><g><title>generic_file_read_iter (33 samples, 0.01%)</title><rect x="94.5033%" y="309" width="0.0108%" height="15" fill="rgb(239,116,25)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="319.50"></text></g><g><title>generic_file_buffered_read (33 samples, 0.01%)</title><rect x="94.5033%" y="293" width="0.0108%" height="15" fill="rgb(219,200,50)" fg:x="287856" fg:w="33"/><text x="94.7533%" y="303.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (159 samples, 0.05%)</title><rect x="94.5348%" y="373" width="0.0522%" height="15" fill="rgb(245,200,0)" fg:x="287952" fg:w="159"/><text x="94.7848%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (159 samples, 0.05%)</title><rect x="94.5348%" y="357" width="0.0522%" height="15" fill="rgb(245,119,33)" fg:x="287952" fg:w="159"/><text x="94.7848%" y="367.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (159 samples, 0.05%)</title><rect x="94.5348%" y="341" width="0.0522%" height="15" fill="rgb(231,125,12)" fg:x="287952" fg:w="159"/><text x="94.7848%" y="351.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (159 samples, 0.05%)</title><rect x="94.5348%" y="325" width="0.0522%" height="15" fill="rgb(216,96,41)" fg:x="287952" fg:w="159"/><text x="94.7848%" y="335.50"></text></g><g><title>nom::number::streaming::be_u64 (148 samples, 0.05%)</title><rect x="94.5384%" y="309" width="0.0486%" height="15" fill="rgb(248,43,45)" fg:x="287963" fg:w="148"/><text x="94.7884%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.01%)</title><rect x="94.5735%" y="293" width="0.0135%" height="15" fill="rgb(217,222,7)" fg:x="288070" fg:w="41"/><text x="94.8235%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.01%)</title><rect x="94.5735%" y="277" width="0.0135%" height="15" fill="rgb(233,28,6)" fg:x="288070" fg:w="41"/><text x="94.8235%" y="287.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (41 samples, 0.01%)</title><rect x="94.5735%" y="261" width="0.0135%" height="15" fill="rgb(231,218,15)" fg:x="288070" fg:w="41"/><text x="94.8235%" y="271.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (41 samples, 0.01%)</title><rect x="94.5735%" y="245" width="0.0135%" height="15" fill="rgb(226,171,48)" fg:x="288070" fg:w="41"/><text x="94.8235%" y="255.50"></text></g><g><title>handle_mm_fault (43 samples, 0.01%)</title><rect x="94.6047%" y="293" width="0.0141%" height="15" fill="rgb(235,201,9)" fg:x="288165" fg:w="43"/><text x="94.8547%" y="303.50"></text></g><g><title>__handle_mm_fault (40 samples, 0.01%)</title><rect x="94.6057%" y="277" width="0.0131%" height="15" fill="rgb(217,80,15)" fg:x="288168" fg:w="40"/><text x="94.8557%" y="287.50"></text></g><g><title>handle_pte_fault (39 samples, 0.01%)</title><rect x="94.6060%" y="261" width="0.0128%" height="15" fill="rgb(219,152,8)" fg:x="288169" fg:w="39"/><text x="94.8560%" y="271.50"></text></g><g><title>do_anonymous_page (37 samples, 0.01%)</title><rect x="94.6067%" y="245" width="0.0121%" height="15" fill="rgb(243,107,38)" fg:x="288171" fg:w="37"/><text x="94.8567%" y="255.50"></text></g><g><title>do_user_addr_fault (46 samples, 0.02%)</title><rect x="94.6041%" y="309" width="0.0151%" height="15" fill="rgb(231,17,5)" fg:x="288163" fg:w="46"/><text x="94.8541%" y="319.50"></text></g><g><title>asm_exc_page_fault (50 samples, 0.02%)</title><rect x="94.6037%" y="341" width="0.0164%" height="15" fill="rgb(209,25,54)" fg:x="288162" fg:w="50"/><text x="94.8537%" y="351.50"></text></g><g><title>exc_page_fault (50 samples, 0.02%)</title><rect x="94.6037%" y="325" width="0.0164%" height="15" fill="rgb(219,0,2)" fg:x="288162" fg:w="50"/><text x="94.8537%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (113 samples, 0.04%)</title><rect x="94.5870%" y="373" width="0.0371%" height="15" fill="rgb(246,9,5)" fg:x="288111" fg:w="113"/><text x="94.8370%" y="383.50"></text></g><g><title>core::ptr::write (99 samples, 0.03%)</title><rect x="94.5916%" y="357" width="0.0325%" height="15" fill="rgb(226,159,4)" fg:x="288125" fg:w="99"/><text x="94.8416%" y="367.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (332 samples, 0.11%)</title><rect x="94.5216%" y="549" width="0.1090%" height="15" fill="rgb(219,175,34)" fg:x="287912" fg:w="332"/><text x="94.7716%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::many1_streaming::{{closure}} (332 samples, 0.11%)</title><rect x="94.5216%" y="533" width="0.1090%" height="15" fill="rgb(236,10,46)" fg:x="287912" fg:w="332"/><text x="94.7716%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (332 samples, 0.11%)</title><rect x="94.5216%" y="517" width="0.1090%" height="15" fill="rgb(240,211,16)" fg:x="287912" fg:w="332"/><text x="94.7716%" y="527.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (332 samples, 0.11%)</title><rect x="94.5216%" y="501" width="0.1090%" height="15" fill="rgb(205,3,43)" fg:x="287912" fg:w="332"/><text x="94.7716%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (332 samples, 0.11%)</title><rect x="94.5216%" y="485" width="0.1090%" height="15" fill="rgb(245,7,22)" fg:x="287912" fg:w="332"/><text x="94.7716%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (332 samples, 0.11%)</title><rect x="94.5216%" y="469" width="0.1090%" height="15" fill="rgb(239,132,32)" fg:x="287912" fg:w="332"/><text x="94.7716%" y="479.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (332 samples, 0.11%)</title><rect x="94.5216%" y="453" width="0.1090%" height="15" fill="rgb(228,202,34)" fg:x="287912" fg:w="332"/><text x="94.7716%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (332 samples, 0.11%)</title><rect x="94.5216%" y="437" width="0.1090%" height="15" fill="rgb(254,200,22)" fg:x="287912" fg:w="332"/><text x="94.7716%" y="447.50"></text></g><g><title>nom::combinator::map::{{closure}} (332 samples, 0.11%)</title><rect x="94.5216%" y="421" width="0.1090%" height="15" fill="rgb(219,10,39)" fg:x="287912" fg:w="332"/><text x="94.7716%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (332 samples, 0.11%)</title><rect x="94.5216%" y="405" width="0.1090%" height="15" fill="rgb(226,210,39)" fg:x="287912" fg:w="332"/><text x="94.7716%" y="415.50"></text></g><g><title>nom::multi::count::{{closure}} (332 samples, 0.11%)</title><rect x="94.5216%" y="389" width="0.1090%" height="15" fill="rgb(208,219,16)" fg:x="287912" fg:w="332"/><text x="94.7716%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (183 samples, 0.06%)</title><rect x="94.6549%" y="357" width="0.0601%" height="15" fill="rgb(216,158,51)" fg:x="288318" fg:w="183"/><text x="94.9049%" y="367.50"></text></g><g><title>core::ops::function::FnMut::call_mut (183 samples, 0.06%)</title><rect x="94.6549%" y="341" width="0.0601%" height="15" fill="rgb(233,14,44)" fg:x="288318" fg:w="183"/><text x="94.9049%" y="351.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (183 samples, 0.06%)</title><rect x="94.6549%" y="325" width="0.0601%" height="15" fill="rgb(237,97,39)" fg:x="288318" fg:w="183"/><text x="94.9049%" y="335.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (183 samples, 0.06%)</title><rect x="94.6549%" y="309" width="0.0601%" height="15" fill="rgb(218,198,43)" fg:x="288318" fg:w="183"/><text x="94.9049%" y="319.50"></text></g><g><title>nom::number::streaming::be_u64 (171 samples, 0.06%)</title><rect x="94.6589%" y="293" width="0.0561%" height="15" fill="rgb(231,104,20)" fg:x="288330" fg:w="171"/><text x="94.9089%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.02%)</title><rect x="94.6986%" y="277" width="0.0164%" height="15" fill="rgb(254,36,13)" fg:x="288451" fg:w="50"/><text x="94.9486%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.02%)</title><rect x="94.6986%" y="261" width="0.0164%" height="15" fill="rgb(248,14,50)" fg:x="288451" fg:w="50"/><text x="94.9486%" y="271.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (50 samples, 0.02%)</title><rect x="94.6986%" y="245" width="0.0164%" height="15" fill="rgb(217,107,29)" fg:x="288451" fg:w="50"/><text x="94.9486%" y="255.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (50 samples, 0.02%)</title><rect x="94.6986%" y="229" width="0.0164%" height="15" fill="rgb(251,169,33)" fg:x="288451" fg:w="50"/><text x="94.9486%" y="239.50"></text></g><g><title>handle_mm_fault (49 samples, 0.02%)</title><rect x="94.7344%" y="277" width="0.0161%" height="15" fill="rgb(217,108,32)" fg:x="288560" fg:w="49"/><text x="94.9844%" y="287.50"></text></g><g><title>__handle_mm_fault (43 samples, 0.01%)</title><rect x="94.7364%" y="261" width="0.0141%" height="15" fill="rgb(219,66,42)" fg:x="288566" fg:w="43"/><text x="94.9864%" y="271.50"></text></g><g><title>handle_pte_fault (40 samples, 0.01%)</title><rect x="94.7373%" y="245" width="0.0131%" height="15" fill="rgb(206,180,7)" fg:x="288569" fg:w="40"/><text x="94.9873%" y="255.50"></text></g><g><title>do_anonymous_page (40 samples, 0.01%)</title><rect x="94.7373%" y="229" width="0.0131%" height="15" fill="rgb(208,226,31)" fg:x="288569" fg:w="40"/><text x="94.9873%" y="239.50"></text></g><g><title>do_user_addr_fault (54 samples, 0.02%)</title><rect x="94.7331%" y="293" width="0.0177%" height="15" fill="rgb(218,26,49)" fg:x="288556" fg:w="54"/><text x="94.9831%" y="303.50"></text></g><g><title>asm_exc_page_fault (56 samples, 0.02%)</title><rect x="94.7331%" y="325" width="0.0184%" height="15" fill="rgb(233,197,48)" fg:x="288556" fg:w="56"/><text x="94.9831%" y="335.50"></text></g><g><title>exc_page_fault (56 samples, 0.02%)</title><rect x="94.7331%" y="309" width="0.0184%" height="15" fill="rgb(252,181,51)" fg:x="288556" fg:w="56"/><text x="94.9831%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (119 samples, 0.04%)</title><rect x="94.7150%" y="357" width="0.0391%" height="15" fill="rgb(253,90,19)" fg:x="288501" fg:w="119"/><text x="94.9650%" y="367.50"></text></g><g><title>core::ptr::write (101 samples, 0.03%)</title><rect x="94.7209%" y="341" width="0.0332%" height="15" fill="rgb(215,171,30)" fg:x="288519" fg:w="101"/><text x="94.9709%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (369 samples, 0.12%)</title><rect x="94.6362%" y="501" width="0.1211%" height="15" fill="rgb(214,222,9)" fg:x="288261" fg:w="369"/><text x="94.8862%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (369 samples, 0.12%)</title><rect x="94.6362%" y="485" width="0.1211%" height="15" fill="rgb(223,3,22)" fg:x="288261" fg:w="369"/><text x="94.8862%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (366 samples, 0.12%)</title><rect x="94.6372%" y="469" width="0.1202%" height="15" fill="rgb(225,196,46)" fg:x="288264" fg:w="366"/><text x="94.8872%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (362 samples, 0.12%)</title><rect x="94.6385%" y="453" width="0.1188%" height="15" fill="rgb(209,110,37)" fg:x="288268" fg:w="362"/><text x="94.8885%" y="463.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (362 samples, 0.12%)</title><rect x="94.6385%" y="437" width="0.1188%" height="15" fill="rgb(249,89,12)" fg:x="288268" fg:w="362"/><text x="94.8885%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (362 samples, 0.12%)</title><rect x="94.6385%" y="421" width="0.1188%" height="15" fill="rgb(226,27,33)" fg:x="288268" fg:w="362"/><text x="94.8885%" y="431.50"></text></g><g><title>nom::combinator::map::{{closure}} (362 samples, 0.12%)</title><rect x="94.6385%" y="405" width="0.1188%" height="15" fill="rgb(213,82,22)" fg:x="288268" fg:w="362"/><text x="94.8885%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (362 samples, 0.12%)</title><rect x="94.6385%" y="389" width="0.1188%" height="15" fill="rgb(248,140,0)" fg:x="288268" fg:w="362"/><text x="94.8885%" y="399.50"></text></g><g><title>nom::multi::count::{{closure}} (362 samples, 0.12%)</title><rect x="94.6385%" y="373" width="0.1188%" height="15" fill="rgb(228,106,3)" fg:x="288268" fg:w="362"/><text x="94.8885%" y="383.50"></text></g><g><title>&lt;hprof_slurp::record_parser_iter::HprofRecordParserIter as core::iter::traits::iterator::Iterator&gt;::next (206,456 samples, 67.78%)</title><rect x="26.9804%" y="693" width="67.7796%" height="15" fill="rgb(209,23,37)" fg:x="82182" fg:w="206456"/><text x="27.2304%" y="703.50">&lt;hprof_slurp::record_parser_iter::HprofRecordParserIter as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (206,456 samples, 67.78%)</title><rect x="26.9804%" y="677" width="67.7796%" height="15" fill="rgb(241,93,50)" fg:x="82182" fg:w="206456"/><text x="27.2304%" y="687.50">hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next</text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (135,728 samples, 44.56%)</title><rect x="50.2004%" y="661" width="44.5596%" height="15" fill="rgb(253,46,43)" fg:x="152910" fg:w="135728"/><text x="50.4504%" y="671.50">hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next</text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (2,087 samples, 0.69%)</title><rect x="94.0748%" y="645" width="0.6852%" height="15" fill="rgb(226,206,43)" fg:x="286551" fg:w="2087"/><text x="94.3248%" y="655.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,918 samples, 0.63%)</title><rect x="94.1303%" y="629" width="0.6297%" height="15" fill="rgb(217,54,7)" fg:x="286720" fg:w="1918"/><text x="94.3803%" y="639.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,710 samples, 0.56%)</title><rect x="94.1986%" y="613" width="0.5614%" height="15" fill="rgb(223,5,52)" fg:x="286928" fg:w="1710"/><text x="94.4486%" y="623.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,450 samples, 0.48%)</title><rect x="94.2840%" y="597" width="0.4760%" height="15" fill="rgb(206,52,46)" fg:x="287188" fg:w="1450"/><text x="94.5340%" y="607.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,142 samples, 0.37%)</title><rect x="94.3851%" y="581" width="0.3749%" height="15" fill="rgb(253,136,11)" fg:x="287496" fg:w="1142"/><text x="94.6351%" y="591.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (782 samples, 0.26%)</title><rect x="94.5033%" y="565" width="0.2567%" height="15" fill="rgb(208,106,33)" fg:x="287856" fg:w="782"/><text x="94.7533%" y="575.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (394 samples, 0.13%)</title><rect x="94.6306%" y="549" width="0.1294%" height="15" fill="rgb(206,54,4)" fg:x="288244" fg:w="394"/><text x="94.8806%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (378 samples, 0.12%)</title><rect x="94.6359%" y="533" width="0.1241%" height="15" fill="rgb(213,3,15)" fg:x="288260" fg:w="378"/><text x="94.8859%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::many1_streaming::{{closure}} (378 samples, 0.12%)</title><rect x="94.6359%" y="517" width="0.1241%" height="15" fill="rgb(252,211,39)" fg:x="288260" fg:w="378"/><text x="94.8859%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (206,492 samples, 67.79%)</title><rect x="26.9804%" y="725" width="67.7914%" height="15" fill="rgb(223,6,36)" fg:x="82182" fg:w="206492"/><text x="27.2304%" y="735.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>core::iter::traits::iterator::Iterator::fold (206,492 samples, 67.79%)</title><rect x="26.9804%" y="709" width="67.7914%" height="15" fill="rgb(252,169,45)" fg:x="82182" fg:w="206492"/><text x="27.2304%" y="719.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (36 samples, 0.01%)</title><rect x="94.7600%" y="693" width="0.0118%" height="15" fill="rgb(212,48,26)" fg:x="288638" fg:w="36"/><text x="95.0100%" y="703.50"></text></g><g><title>hprof_slurp::main::{{closure}} (36 samples, 0.01%)</title><rect x="94.7600%" y="677" width="0.0118%" height="15" fill="rgb(251,102,48)" fg:x="288638" fg:w="36"/><text x="95.0100%" y="687.50"></text></g><g><title>_start (206,493 samples, 67.79%)</title><rect x="26.9804%" y="917" width="67.7918%" height="15" fill="rgb(243,208,16)" fg:x="82182" fg:w="206493"/><text x="27.2304%" y="927.50">_start</text></g><g><title>__libc_start_main (206,493 samples, 67.79%)</title><rect x="26.9804%" y="901" width="67.7918%" height="15" fill="rgb(219,96,24)" fg:x="82182" fg:w="206493"/><text x="27.2304%" y="911.50">__libc_start_main</text></g><g><title>main (206,493 samples, 67.79%)</title><rect x="26.9804%" y="885" width="67.7918%" height="15" fill="rgb(219,33,29)" fg:x="82182" fg:w="206493"/><text x="27.2304%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (206,493 samples, 67.79%)</title><rect x="26.9804%" y="869" width="67.7918%" height="15" fill="rgb(223,176,5)" fg:x="82182" fg:w="206493"/><text x="27.2304%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (206,493 samples, 67.79%)</title><rect x="26.9804%" y="853" width="67.7918%" height="15" fill="rgb(228,140,14)" fg:x="82182" fg:w="206493"/><text x="27.2304%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (206,493 samples, 67.79%)</title><rect x="26.9804%" y="837" width="67.7918%" height="15" fill="rgb(217,179,31)" fg:x="82182" fg:w="206493"/><text x="27.2304%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (206,493 samples, 67.79%)</title><rect x="26.9804%" y="821" width="67.7918%" height="15" fill="rgb(230,9,30)" fg:x="82182" fg:w="206493"/><text x="27.2304%" y="831.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (206,493 samples, 67.79%)</title><rect x="26.9804%" y="805" width="67.7918%" height="15" fill="rgb(230,136,20)" fg:x="82182" fg:w="206493"/><text x="27.2304%" y="815.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (206,493 samples, 67.79%)</title><rect x="26.9804%" y="789" width="67.7918%" height="15" fill="rgb(215,210,22)" fg:x="82182" fg:w="206493"/><text x="27.2304%" y="799.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (206,493 samples, 67.79%)</title><rect x="26.9804%" y="773" width="67.7918%" height="15" fill="rgb(218,43,5)" fg:x="82182" fg:w="206493"/><text x="27.2304%" y="783.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (206,493 samples, 67.79%)</title><rect x="26.9804%" y="757" width="67.7918%" height="15" fill="rgb(216,11,5)" fg:x="82182" fg:w="206493"/><text x="27.2304%" y="767.50">core::ops::function::FnOnce::call_once</text></g><g><title>hprof_slurp::main (206,493 samples, 67.79%)</title><rect x="26.9804%" y="741" width="67.7918%" height="15" fill="rgb(209,82,29)" fg:x="82182" fg:w="206493"/><text x="27.2304%" y="751.50">hprof_slurp::main</text></g><g><title>asm_exc_page_fault (15,705 samples, 5.16%)</title><rect x="94.7721%" y="917" width="5.1560%" height="15" fill="rgb(244,115,12)" fg:x="288675" fg:w="15705"/><text x="95.0221%" y="927.50">asm_ex..</text></g><g><title>copy_user_enhanced_fast_string (50 samples, 0.02%)</title><rect x="99.9373%" y="741" width="0.0164%" height="15" fill="rgb(222,82,18)" fg:x="304408" fg:w="50"/><text x="100.1873%" y="751.50"></text></g><g><title>copy_page_to_iter (65 samples, 0.02%)</title><rect x="99.9330%" y="773" width="0.0213%" height="15" fill="rgb(249,227,8)" fg:x="304395" fg:w="65"/><text x="100.1830%" y="783.50"></text></g><g><title>copy_page_to_iter_iovec (65 samples, 0.02%)</title><rect x="99.9330%" y="757" width="0.0213%" height="15" fill="rgb(253,141,45)" fg:x="304395" fg:w="65"/><text x="100.1830%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (85 samples, 0.03%)</title><rect x="99.9311%" y="917" width="0.0279%" height="15" fill="rgb(234,184,4)" fg:x="304389" fg:w="85"/><text x="100.1811%" y="927.50"></text></g><g><title>do_syscall_64 (85 samples, 0.03%)</title><rect x="99.9311%" y="901" width="0.0279%" height="15" fill="rgb(218,194,23)" fg:x="304389" fg:w="85"/><text x="100.1811%" y="911.50"></text></g><g><title>__x64_sys_read (81 samples, 0.03%)</title><rect x="99.9324%" y="885" width="0.0266%" height="15" fill="rgb(235,66,41)" fg:x="304393" fg:w="81"/><text x="100.1824%" y="895.50"></text></g><g><title>ksys_read (81 samples, 0.03%)</title><rect x="99.9324%" y="869" width="0.0266%" height="15" fill="rgb(245,217,1)" fg:x="304393" fg:w="81"/><text x="100.1824%" y="879.50"></text></g><g><title>vfs_read (81 samples, 0.03%)</title><rect x="99.9324%" y="853" width="0.0266%" height="15" fill="rgb(229,91,1)" fg:x="304393" fg:w="81"/><text x="100.1824%" y="863.50"></text></g><g><title>new_sync_read (81 samples, 0.03%)</title><rect x="99.9324%" y="837" width="0.0266%" height="15" fill="rgb(207,101,30)" fg:x="304393" fg:w="81"/><text x="100.1824%" y="847.50"></text></g><g><title>ext4_file_read_iter (81 samples, 0.03%)</title><rect x="99.9324%" y="821" width="0.0266%" height="15" fill="rgb(223,82,49)" fg:x="304393" fg:w="81"/><text x="100.1824%" y="831.50"></text></g><g><title>generic_file_read_iter (81 samples, 0.03%)</title><rect x="99.9324%" y="805" width="0.0266%" height="15" fill="rgb(218,167,17)" fg:x="304393" fg:w="81"/><text x="100.1824%" y="815.50"></text></g><g><title>generic_file_buffered_read (81 samples, 0.03%)</title><rect x="99.9324%" y="789" width="0.0266%" height="15" fill="rgb(208,103,14)" fg:x="304393" fg:w="81"/><text x="100.1824%" y="799.50"></text></g><g><title>nom::combinator::mapc (100 samples, 0.03%)</title><rect x="99.9636%" y="917" width="0.0328%" height="15" fill="rgb(238,20,8)" fg:x="304488" fg:w="100"/><text x="100.2136%" y="927.50"></text></g><g><title>hprof-slurp (304,594 samples, 100.00%)</title><rect x="0.0000%" y="933" width="99.9984%" height="15" fill="rgb(218,80,54)" fg:x="0" fg:w="304594"/><text x="0.2500%" y="943.50">hprof-slurp</text></g><g><title>all (304,599 samples, 100%)</title><rect x="0.0000%" y="949" width="100.0000%" height="15" fill="rgb(240,144,17)" fg:x="0" fg:w="304599"/><text x="0.2500%" y="959.50"></text></g></svg></svg>