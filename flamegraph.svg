<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1014" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="997.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="997.00"> </text><svg id="frames" x="10" width="1180" total_samples="292868"><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (33 samples, 0.01%)</title><rect x="0.0604%" y="917" width="0.0113%" height="15" fill="rgb(227,0,7)" fg:x="177" fg:w="33"/><text x="0.3104%" y="927.50"></text></g><g><title>[[heap]] (75 samples, 0.03%)</title><rect x="0.0471%" y="933" width="0.0256%" height="15" fill="rgb(217,0,24)" fg:x="138" fg:w="75"/><text x="0.2971%" y="943.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (34 samples, 0.01%)</title><rect x="0.3930%" y="885" width="0.0116%" height="15" fill="rgb(221,193,54)" fg:x="1151" fg:w="34"/><text x="0.6430%" y="895.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (1,305 samples, 0.45%)</title><rect x="0.0792%" y="917" width="0.4456%" height="15" fill="rgb(248,212,6)" fg:x="232" fg:w="1305"/><text x="0.3292%" y="927.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (1,304 samples, 0.45%)</title><rect x="0.0796%" y="901" width="0.4453%" height="15" fill="rgb(208,68,35)" fg:x="233" fg:w="1304"/><text x="0.3296%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (352 samples, 0.12%)</title><rect x="0.4046%" y="885" width="0.1202%" height="15" fill="rgb(232,128,0)" fg:x="1185" fg:w="352"/><text x="0.6546%" y="895.50"></text></g><g><title>core::ptr::write (352 samples, 0.12%)</title><rect x="0.4046%" y="869" width="0.1202%" height="15" fill="rgb(207,160,47)" fg:x="1185" fg:w="352"/><text x="0.6546%" y="879.50"></text></g><g><title>[[stack]] (1,327 samples, 0.45%)</title><rect x="0.0727%" y="933" width="0.4531%" height="15" fill="rgb(228,23,34)" fg:x="213" fg:w="1327"/><text x="0.3227%" y="943.50"></text></g><g><title>__memcpy_avx_unaligned_erms (432 samples, 0.15%)</title><rect x="0.5262%" y="917" width="0.1475%" height="15" fill="rgb(218,30,26)" fg:x="1541" fg:w="432"/><text x="0.7762%" y="927.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (523 samples, 0.18%)</title><rect x="0.6754%" y="917" width="0.1786%" height="15" fill="rgb(220,122,19)" fg:x="1978" fg:w="523"/><text x="0.9254%" y="927.50"></text></g><g><title>[anon] (963 samples, 0.33%)</title><rect x="0.5258%" y="933" width="0.3288%" height="15" fill="rgb(250,228,42)" fg:x="1540" fg:w="963"/><text x="0.7758%" y="943.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (2,280 samples, 0.78%)</title><rect x="0.8584%" y="917" width="0.7785%" height="15" fill="rgb(240,193,28)" fg:x="2514" fg:w="2280"/><text x="1.1084%" y="927.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (127 samples, 0.04%)</title><rect x="1.6369%" y="917" width="0.0434%" height="15" fill="rgb(216,20,37)" fg:x="4794" fg:w="127"/><text x="1.8869%" y="927.50"></text></g><g><title>__memcpy_avx_unaligned_erms (637 samples, 0.22%)</title><rect x="1.6943%" y="917" width="0.2175%" height="15" fill="rgb(206,188,39)" fg:x="4962" fg:w="637"/><text x="1.9443%" y="927.50"></text></g><g><title>__realloc (536 samples, 0.18%)</title><rect x="1.9155%" y="917" width="0.1830%" height="15" fill="rgb(217,207,13)" fg:x="5610" fg:w="536"/><text x="2.1655%" y="927.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (536 samples, 0.18%)</title><rect x="1.9155%" y="901" width="0.1830%" height="15" fill="rgb(231,73,38)" fg:x="5610" fg:w="536"/><text x="2.1655%" y="911.50"></text></g><g><title>_int_free (59 samples, 0.02%)</title><rect x="2.0986%" y="917" width="0.0201%" height="15" fill="rgb(225,20,46)" fg:x="6146" fg:w="59"/><text x="2.3486%" y="927.50"></text></g><g><title>_int_malloc (64 samples, 0.02%)</title><rect x="2.1187%" y="917" width="0.0219%" height="15" fill="rgb(210,31,41)" fg:x="6205" fg:w="64"/><text x="2.3687%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::GcRecord&gt; (243 samples, 0.08%)</title><rect x="2.1412%" y="917" width="0.0830%" height="15" fill="rgb(221,200,47)" fg:x="6271" fg:w="243"/><text x="2.3912%" y="927.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_instance_dump (34 samples, 0.01%)</title><rect x="2.6606%" y="885" width="0.0116%" height="15" fill="rgb(226,26,5)" fg:x="7792" fg:w="34"/><text x="2.9106%" y="895.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (34 samples, 0.01%)</title><rect x="2.6606%" y="869" width="0.0116%" height="15" fill="rgb(249,33,26)" fg:x="7792" fg:w="34"/><text x="2.9106%" y="879.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (34 samples, 0.01%)</title><rect x="2.6606%" y="853" width="0.0116%" height="15" fill="rgb(235,183,28)" fg:x="7792" fg:w="34"/><text x="2.9106%" y="863.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (34 samples, 0.01%)</title><rect x="2.6606%" y="837" width="0.0116%" height="15" fill="rgb(221,5,38)" fg:x="7792" fg:w="34"/><text x="2.9106%" y="847.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (1,345 samples, 0.46%)</title><rect x="2.2246%" y="917" width="0.4593%" height="15" fill="rgb(247,18,42)" fg:x="6515" fg:w="1345"/><text x="2.4746%" y="927.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (68 samples, 0.02%)</title><rect x="2.6606%" y="901" width="0.0232%" height="15" fill="rgb(241,131,45)" fg:x="7792" fg:w="68"/><text x="2.9106%" y="911.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_primitive_array_dump (34 samples, 0.01%)</title><rect x="2.6722%" y="885" width="0.0116%" height="15" fill="rgb(249,31,29)" fg:x="7826" fg:w="34"/><text x="2.9222%" y="895.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (555 samples, 0.19%)</title><rect x="2.6848%" y="917" width="0.1895%" height="15" fill="rgb(225,111,53)" fg:x="7863" fg:w="555"/><text x="2.9348%" y="927.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start_recorder::{{closure}} (555 samples, 0.19%)</title><rect x="2.6848%" y="901" width="0.1895%" height="15" fill="rgb(238,160,17)" fg:x="7863" fg:w="555"/><text x="2.9348%" y="911.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (555 samples, 0.19%)</title><rect x="2.6848%" y="885" width="0.1895%" height="15" fill="rgb(214,148,48)" fg:x="7863" fg:w="555"/><text x="2.9348%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (555 samples, 0.19%)</title><rect x="2.6848%" y="869" width="0.1895%" height="15" fill="rgb(232,36,49)" fg:x="7863" fg:w="555"/><text x="2.9348%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (555 samples, 0.19%)</title><rect x="2.6848%" y="853" width="0.1895%" height="15" fill="rgb(209,103,24)" fg:x="7863" fg:w="555"/><text x="2.9348%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (555 samples, 0.19%)</title><rect x="2.6848%" y="837" width="0.1895%" height="15" fill="rgb(229,88,8)" fg:x="7863" fg:w="555"/><text x="2.9348%" y="847.50"></text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (534 samples, 0.18%)</title><rect x="2.6920%" y="821" width="0.1823%" height="15" fill="rgb(213,181,19)" fg:x="7884" fg:w="534"/><text x="2.9420%" y="831.50"></text></g><g><title>[unknown] (5,908 samples, 2.02%)</title><rect x="0.8584%" y="933" width="2.0173%" height="15" fill="rgb(254,191,54)" fg:x="2514" fg:w="5908"/><text x="1.1084%" y="943.50">[..</text></g><g><title>__irqentry_text_start (32 samples, 0.01%)</title><rect x="3.0440%" y="453" width="0.0109%" height="15" fill="rgb(241,83,37)" fg:x="8915" fg:w="32"/><text x="3.2940%" y="463.50"></text></g><g><title>asm_exc_page_fault (7,974 samples, 2.72%)</title><rect x="3.0591%" y="453" width="2.7227%" height="15" fill="rgb(233,36,39)" fg:x="8959" fg:w="7974"/><text x="3.3091%" y="463.50">as..</text></g><g><title>copy_page_to_iter (307 samples, 0.10%)</title><rect x="5.7825%" y="453" width="0.1048%" height="15" fill="rgb(226,3,54)" fg:x="16935" fg:w="307"/><text x="6.0325%" y="463.50"></text></g><g><title>__read_end_io (127 samples, 0.04%)</title><rect x="8.9460%" y="213" width="0.0434%" height="15" fill="rgb(245,192,40)" fg:x="26200" fg:w="127"/><text x="9.1960%" y="223.50"></text></g><g><title>bio_endio (185 samples, 0.06%)</title><rect x="8.9436%" y="245" width="0.0632%" height="15" fill="rgb(238,167,29)" fg:x="26193" fg:w="185"/><text x="9.1936%" y="255.50"></text></g><g><title>mpage_end_io (178 samples, 0.06%)</title><rect x="8.9460%" y="229" width="0.0608%" height="15" fill="rgb(232,182,51)" fg:x="26200" fg:w="178"/><text x="9.1960%" y="239.50"></text></g><g><title>unlock_page (51 samples, 0.02%)</title><rect x="8.9894%" y="213" width="0.0174%" height="15" fill="rgb(231,60,39)" fg:x="26327" fg:w="51"/><text x="9.2394%" y="223.50"></text></g><g><title>blk_update_request (196 samples, 0.07%)</title><rect x="8.9402%" y="261" width="0.0669%" height="15" fill="rgb(208,69,12)" fg:x="26183" fg:w="196"/><text x="9.1902%" y="271.50"></text></g><g><title>nvme_complete_rq (210 samples, 0.07%)</title><rect x="8.9361%" y="293" width="0.0717%" height="15" fill="rgb(235,93,37)" fg:x="26171" fg:w="210"/><text x="9.1861%" y="303.50"></text></g><g><title>blk_mq_end_request (210 samples, 0.07%)</title><rect x="8.9361%" y="277" width="0.0717%" height="15" fill="rgb(213,116,39)" fg:x="26171" fg:w="210"/><text x="9.1861%" y="287.50"></text></g><g><title>__handle_irq_event_percpu (266 samples, 0.09%)</title><rect x="8.9272%" y="357" width="0.0908%" height="15" fill="rgb(222,207,29)" fg:x="26145" fg:w="266"/><text x="9.1772%" y="367.50"></text></g><g><title>nvme_irq (264 samples, 0.09%)</title><rect x="8.9279%" y="341" width="0.0901%" height="15" fill="rgb(206,96,30)" fg:x="26147" fg:w="264"/><text x="9.1779%" y="351.50"></text></g><g><title>nvme_process_cq (263 samples, 0.09%)</title><rect x="8.9283%" y="325" width="0.0898%" height="15" fill="rgb(218,138,4)" fg:x="26148" fg:w="263"/><text x="9.1783%" y="335.50"></text></g><g><title>nvme_pci_complete_rq (241 samples, 0.08%)</title><rect x="8.9358%" y="309" width="0.0823%" height="15" fill="rgb(250,191,14)" fg:x="26170" fg:w="241"/><text x="9.1858%" y="319.50"></text></g><g><title>nvme_unmap_data (30 samples, 0.01%)</title><rect x="9.0078%" y="293" width="0.0102%" height="15" fill="rgb(239,60,40)" fg:x="26381" fg:w="30"/><text x="9.2578%" y="303.50"></text></g><g><title>handle_irq_event (272 samples, 0.09%)</title><rect x="8.9269%" y="373" width="0.0929%" height="15" fill="rgb(206,27,48)" fg:x="26144" fg:w="272"/><text x="9.1769%" y="383.50"></text></g><g><title>handle_edge_irq (281 samples, 0.10%)</title><rect x="8.9245%" y="389" width="0.0959%" height="15" fill="rgb(225,35,8)" fg:x="26137" fg:w="281"/><text x="9.1745%" y="399.50"></text></g><g><title>asm_common_interrupt (290 samples, 0.10%)</title><rect x="8.9221%" y="437" width="0.0990%" height="15" fill="rgb(250,213,24)" fg:x="26130" fg:w="290"/><text x="9.1721%" y="447.50"></text></g><g><title>common_interrupt (290 samples, 0.10%)</title><rect x="8.9221%" y="421" width="0.0990%" height="15" fill="rgb(247,123,22)" fg:x="26130" fg:w="290"/><text x="9.1721%" y="431.50"></text></g><g><title>__common_interrupt (288 samples, 0.10%)</title><rect x="8.9228%" y="405" width="0.0983%" height="15" fill="rgb(231,138,38)" fg:x="26132" fg:w="288"/><text x="9.1728%" y="415.50"></text></g><g><title>__read_end_io (76 samples, 0.03%)</title><rect x="9.1857%" y="165" width="0.0260%" height="15" fill="rgb(231,145,46)" fg:x="26902" fg:w="76"/><text x="9.4357%" y="175.50"></text></g><g><title>blk_update_request (108 samples, 0.04%)</title><rect x="9.1823%" y="213" width="0.0369%" height="15" fill="rgb(251,118,11)" fg:x="26892" fg:w="108"/><text x="9.4323%" y="223.50"></text></g><g><title>bio_endio (105 samples, 0.04%)</title><rect x="9.1833%" y="197" width="0.0359%" height="15" fill="rgb(217,147,25)" fg:x="26895" fg:w="105"/><text x="9.4333%" y="207.50"></text></g><g><title>mpage_end_io (98 samples, 0.03%)</title><rect x="9.1857%" y="181" width="0.0335%" height="15" fill="rgb(247,81,37)" fg:x="26902" fg:w="98"/><text x="9.4357%" y="191.50"></text></g><g><title>nvme_complete_rq (116 samples, 0.04%)</title><rect x="9.1799%" y="245" width="0.0396%" height="15" fill="rgb(209,12,38)" fg:x="26885" fg:w="116"/><text x="9.4299%" y="255.50"></text></g><g><title>blk_mq_end_request (116 samples, 0.04%)</title><rect x="9.1799%" y="229" width="0.0396%" height="15" fill="rgb(227,1,9)" fg:x="26885" fg:w="116"/><text x="9.4299%" y="239.50"></text></g><g><title>__handle_irq_event_percpu (143 samples, 0.05%)</title><rect x="9.1758%" y="309" width="0.0488%" height="15" fill="rgb(248,47,43)" fg:x="26873" fg:w="143"/><text x="9.4258%" y="319.50"></text></g><g><title>nvme_irq (142 samples, 0.05%)</title><rect x="9.1761%" y="293" width="0.0485%" height="15" fill="rgb(221,10,30)" fg:x="26874" fg:w="142"/><text x="9.4261%" y="303.50"></text></g><g><title>nvme_process_cq (142 samples, 0.05%)</title><rect x="9.1761%" y="277" width="0.0485%" height="15" fill="rgb(210,229,1)" fg:x="26874" fg:w="142"/><text x="9.4261%" y="287.50"></text></g><g><title>nvme_pci_complete_rq (131 samples, 0.04%)</title><rect x="9.1799%" y="261" width="0.0447%" height="15" fill="rgb(222,148,37)" fg:x="26885" fg:w="131"/><text x="9.4299%" y="271.50"></text></g><g><title>handle_irq_event (144 samples, 0.05%)</title><rect x="9.1758%" y="325" width="0.0492%" height="15" fill="rgb(234,67,33)" fg:x="26873" fg:w="144"/><text x="9.4258%" y="335.50"></text></g><g><title>handle_edge_irq (154 samples, 0.05%)</title><rect x="9.1741%" y="341" width="0.0526%" height="15" fill="rgb(247,98,35)" fg:x="26868" fg:w="154"/><text x="9.4241%" y="351.50"></text></g><g><title>asm_common_interrupt (158 samples, 0.05%)</title><rect x="9.1731%" y="389" width="0.0539%" height="15" fill="rgb(247,138,52)" fg:x="26865" fg:w="158"/><text x="9.4231%" y="399.50"></text></g><g><title>common_interrupt (157 samples, 0.05%)</title><rect x="9.1734%" y="373" width="0.0536%" height="15" fill="rgb(213,79,30)" fg:x="26866" fg:w="157"/><text x="9.4234%" y="383.50"></text></g><g><title>__common_interrupt (157 samples, 0.05%)</title><rect x="9.1734%" y="357" width="0.0536%" height="15" fill="rgb(246,177,23)" fg:x="26866" fg:w="157"/><text x="9.4234%" y="367.50"></text></g><g><title>down_read_trylock (562 samples, 0.19%)</title><rect x="9.2397%" y="389" width="0.1919%" height="15" fill="rgb(230,62,27)" fg:x="27060" fg:w="562"/><text x="9.4897%" y="399.50"></text></g><g><title>find_vma (101 samples, 0.03%)</title><rect x="9.4316%" y="389" width="0.0345%" height="15" fill="rgb(216,154,8)" fg:x="27622" fg:w="101"/><text x="9.6816%" y="399.50"></text></g><g><title>vmacache_find (78 samples, 0.03%)</title><rect x="9.4394%" y="373" width="0.0266%" height="15" fill="rgb(244,35,45)" fg:x="27645" fg:w="78"/><text x="9.6894%" y="383.50"></text></g><g><title>__count_memcg_events (89 samples, 0.03%)</title><rect x="9.5330%" y="373" width="0.0304%" height="15" fill="rgb(251,115,12)" fg:x="27919" fg:w="89"/><text x="9.7830%" y="383.50"></text></g><g><title>cgroup_rstat_updated (52 samples, 0.02%)</title><rect x="9.5456%" y="357" width="0.0178%" height="15" fill="rgb(240,54,50)" fg:x="27956" fg:w="52"/><text x="9.7956%" y="367.50"></text></g><g><title>_raw_spin_lock (163 samples, 0.06%)</title><rect x="9.8174%" y="341" width="0.0557%" height="15" fill="rgb(233,84,52)" fg:x="28752" fg:w="163"/><text x="10.0674%" y="351.50"></text></g><g><title>__pte_alloc (35 samples, 0.01%)</title><rect x="10.0185%" y="325" width="0.0120%" height="15" fill="rgb(207,117,47)" fg:x="29341" fg:w="35"/><text x="10.2685%" y="335.50"></text></g><g><title>pte_alloc_one (33 samples, 0.01%)</title><rect x="10.0192%" y="309" width="0.0113%" height="15" fill="rgb(249,43,39)" fg:x="29343" fg:w="33"/><text x="10.2692%" y="319.50"></text></g><g><title>clear_page_erms (73 samples, 0.02%)</title><rect x="10.1882%" y="261" width="0.0249%" height="15" fill="rgb(209,38,44)" fg:x="29838" fg:w="73"/><text x="10.4382%" y="271.50"></text></g><g><title>get_page_from_freelist (104 samples, 0.04%)</title><rect x="10.1872%" y="277" width="0.0355%" height="15" fill="rgb(236,212,23)" fg:x="29835" fg:w="104"/><text x="10.4372%" y="287.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (120 samples, 0.04%)</title><rect x="10.1868%" y="293" width="0.0410%" height="15" fill="rgb(242,79,21)" fg:x="29834" fg:w="120"/><text x="10.4368%" y="303.50"></text></g><g><title>__next_zones_zonelist (143 samples, 0.05%)</title><rect x="10.2333%" y="293" width="0.0488%" height="15" fill="rgb(211,96,35)" fg:x="29970" fg:w="143"/><text x="10.4833%" y="303.50"></text></g><g><title>__inc_numa_state (53 samples, 0.02%)</title><rect x="10.3791%" y="277" width="0.0181%" height="15" fill="rgb(253,215,40)" fg:x="30397" fg:w="53"/><text x="10.6291%" y="287.50"></text></g><g><title>__read_end_io (35 samples, 0.01%)</title><rect x="11.5707%" y="37" width="0.0120%" height="15" fill="rgb(211,81,21)" fg:x="33887" fg:w="35"/><text x="11.8207%" y="47.50"></text></g><g><title>nvme_complete_rq (59 samples, 0.02%)</title><rect x="11.5677%" y="117" width="0.0201%" height="15" fill="rgb(208,190,38)" fg:x="33878" fg:w="59"/><text x="11.8177%" y="127.50"></text></g><g><title>blk_mq_end_request (57 samples, 0.02%)</title><rect x="11.5684%" y="101" width="0.0195%" height="15" fill="rgb(235,213,38)" fg:x="33880" fg:w="57"/><text x="11.8184%" y="111.50"></text></g><g><title>blk_update_request (54 samples, 0.02%)</title><rect x="11.5694%" y="85" width="0.0184%" height="15" fill="rgb(237,122,38)" fg:x="33883" fg:w="54"/><text x="11.8194%" y="95.50"></text></g><g><title>bio_endio (51 samples, 0.02%)</title><rect x="11.5704%" y="69" width="0.0174%" height="15" fill="rgb(244,218,35)" fg:x="33886" fg:w="51"/><text x="11.8204%" y="79.50"></text></g><g><title>mpage_end_io (50 samples, 0.02%)</title><rect x="11.5707%" y="53" width="0.0171%" height="15" fill="rgb(240,68,47)" fg:x="33887" fg:w="50"/><text x="11.8207%" y="63.50"></text></g><g><title>nvme_pci_complete_rq (71 samples, 0.02%)</title><rect x="11.5677%" y="133" width="0.0242%" height="15" fill="rgb(210,16,53)" fg:x="33878" fg:w="71"/><text x="11.8177%" y="143.50"></text></g><g><title>__handle_irq_event_percpu (83 samples, 0.03%)</title><rect x="11.5639%" y="181" width="0.0283%" height="15" fill="rgb(235,124,12)" fg:x="33867" fg:w="83"/><text x="11.8139%" y="191.50"></text></g><g><title>nvme_irq (83 samples, 0.03%)</title><rect x="11.5639%" y="165" width="0.0283%" height="15" fill="rgb(224,169,11)" fg:x="33867" fg:w="83"/><text x="11.8139%" y="175.50"></text></g><g><title>nvme_process_cq (83 samples, 0.03%)</title><rect x="11.5639%" y="149" width="0.0283%" height="15" fill="rgb(250,166,2)" fg:x="33867" fg:w="83"/><text x="11.8139%" y="159.50"></text></g><g><title>handle_irq_event (85 samples, 0.03%)</title><rect x="11.5639%" y="197" width="0.0290%" height="15" fill="rgb(242,216,29)" fg:x="33867" fg:w="85"/><text x="11.8139%" y="207.50"></text></g><g><title>asm_common_interrupt (90 samples, 0.03%)</title><rect x="11.5629%" y="261" width="0.0307%" height="15" fill="rgb(230,116,27)" fg:x="33864" fg:w="90"/><text x="11.8129%" y="271.50"></text></g><g><title>common_interrupt (90 samples, 0.03%)</title><rect x="11.5629%" y="245" width="0.0307%" height="15" fill="rgb(228,99,48)" fg:x="33864" fg:w="90"/><text x="11.8129%" y="255.50"></text></g><g><title>__common_interrupt (88 samples, 0.03%)</title><rect x="11.5636%" y="229" width="0.0300%" height="15" fill="rgb(253,11,6)" fg:x="33866" fg:w="88"/><text x="11.8136%" y="239.50"></text></g><g><title>handle_edge_irq (88 samples, 0.03%)</title><rect x="11.5636%" y="213" width="0.0300%" height="15" fill="rgb(247,143,39)" fg:x="33866" fg:w="88"/><text x="11.8136%" y="223.50"></text></g><g><title>clear_page_erms (3,469 samples, 1.18%)</title><rect x="10.4112%" y="277" width="1.1845%" height="15" fill="rgb(236,97,10)" fg:x="30491" fg:w="3469"/><text x="10.6612%" y="287.50"></text></g><g><title>kernel_init_free_pages (51 samples, 0.02%)</title><rect x="11.5957%" y="277" width="0.0174%" height="15" fill="rgb(233,208,19)" fg:x="33960" fg:w="51"/><text x="11.8457%" y="287.50"></text></g><g><title>_raw_spin_lock (41 samples, 0.01%)</title><rect x="11.7340%" y="261" width="0.0140%" height="15" fill="rgb(216,164,2)" fg:x="34365" fg:w="41"/><text x="11.9840%" y="271.50"></text></g><g><title>blk_update_request (31 samples, 0.01%)</title><rect x="11.7500%" y="85" width="0.0106%" height="15" fill="rgb(220,129,5)" fg:x="34412" fg:w="31"/><text x="12.0000%" y="95.50"></text></g><g><title>bio_endio (31 samples, 0.01%)</title><rect x="11.7500%" y="69" width="0.0106%" height="15" fill="rgb(242,17,10)" fg:x="34412" fg:w="31"/><text x="12.0000%" y="79.50"></text></g><g><title>nvme_complete_rq (33 samples, 0.01%)</title><rect x="11.7497%" y="117" width="0.0113%" height="15" fill="rgb(242,107,0)" fg:x="34411" fg:w="33"/><text x="11.9997%" y="127.50"></text></g><g><title>blk_mq_end_request (33 samples, 0.01%)</title><rect x="11.7497%" y="101" width="0.0113%" height="15" fill="rgb(251,28,31)" fg:x="34411" fg:w="33"/><text x="11.9997%" y="111.50"></text></g><g><title>handle_irq_event (45 samples, 0.02%)</title><rect x="11.7483%" y="197" width="0.0154%" height="15" fill="rgb(233,223,10)" fg:x="34407" fg:w="45"/><text x="11.9983%" y="207.50"></text></g><g><title>__handle_irq_event_percpu (45 samples, 0.02%)</title><rect x="11.7483%" y="181" width="0.0154%" height="15" fill="rgb(215,21,27)" fg:x="34407" fg:w="45"/><text x="11.9983%" y="191.50"></text></g><g><title>nvme_irq (45 samples, 0.02%)</title><rect x="11.7483%" y="165" width="0.0154%" height="15" fill="rgb(232,23,21)" fg:x="34407" fg:w="45"/><text x="11.9983%" y="175.50"></text></g><g><title>nvme_process_cq (45 samples, 0.02%)</title><rect x="11.7483%" y="149" width="0.0154%" height="15" fill="rgb(244,5,23)" fg:x="34407" fg:w="45"/><text x="11.9983%" y="159.50"></text></g><g><title>nvme_pci_complete_rq (42 samples, 0.01%)</title><rect x="11.7493%" y="133" width="0.0143%" height="15" fill="rgb(226,81,46)" fg:x="34410" fg:w="42"/><text x="11.9993%" y="143.50"></text></g><g><title>__common_interrupt (47 samples, 0.02%)</title><rect x="11.7480%" y="229" width="0.0160%" height="15" fill="rgb(247,70,30)" fg:x="34406" fg:w="47"/><text x="11.9980%" y="239.50"></text></g><g><title>handle_edge_irq (46 samples, 0.02%)</title><rect x="11.7483%" y="213" width="0.0157%" height="15" fill="rgb(212,68,19)" fg:x="34407" fg:w="46"/><text x="11.9983%" y="223.50"></text></g><g><title>asm_common_interrupt (48 samples, 0.02%)</title><rect x="11.7480%" y="261" width="0.0164%" height="15" fill="rgb(240,187,13)" fg:x="34406" fg:w="48"/><text x="11.9980%" y="271.50"></text></g><g><title>common_interrupt (48 samples, 0.02%)</title><rect x="11.7480%" y="245" width="0.0164%" height="15" fill="rgb(223,113,26)" fg:x="34406" fg:w="48"/><text x="11.9980%" y="255.50"></text></g><g><title>_raw_spin_lock (38 samples, 0.01%)</title><rect x="12.1597%" y="245" width="0.0130%" height="15" fill="rgb(206,192,2)" fg:x="35612" fg:w="38"/><text x="12.4097%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath (38 samples, 0.01%)</title><rect x="12.1597%" y="229" width="0.0130%" height="15" fill="rgb(241,108,4)" fg:x="35612" fg:w="38"/><text x="12.4097%" y="239.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (38 samples, 0.01%)</title><rect x="12.1597%" y="213" width="0.0130%" height="15" fill="rgb(247,173,49)" fg:x="35612" fg:w="38"/><text x="12.4097%" y="223.50"></text></g><g><title>rmqueue (1,644 samples, 0.56%)</title><rect x="11.6131%" y="277" width="0.5613%" height="15" fill="rgb(224,114,35)" fg:x="34011" fg:w="1644"/><text x="11.8631%" y="287.50"></text></g><g><title>rmqueue_bulk.constprop.0 (1,190 samples, 0.41%)</title><rect x="11.7681%" y="261" width="0.4063%" height="15" fill="rgb(245,159,27)" fg:x="34465" fg:w="1190"/><text x="12.0181%" y="271.50"></text></g><g><title>get_page_from_freelist (5,531 samples, 1.89%)</title><rect x="10.2869%" y="293" width="1.8886%" height="15" fill="rgb(245,172,44)" fg:x="30127" fg:w="5531"/><text x="10.5369%" y="303.50">g..</text></g><g><title>__alloc_pages (6,099 samples, 2.08%)</title><rect x="10.1059%" y="309" width="2.0825%" height="15" fill="rgb(236,23,11)" fg:x="29597" fg:w="6099"/><text x="10.3559%" y="319.50">_..</text></g><g><title>__next_zones_zonelist (42 samples, 0.01%)</title><rect x="12.1935%" y="309" width="0.0143%" height="15" fill="rgb(205,117,38)" fg:x="35711" fg:w="42"/><text x="12.4435%" y="319.50"></text></g><g><title>alloc_pages_vma (6,456 samples, 2.20%)</title><rect x="10.0322%" y="325" width="2.2044%" height="15" fill="rgb(237,72,25)" fg:x="29381" fg:w="6456"/><text x="10.2822%" y="335.50">a..</text></g><g><title>cgroup_throttle_swaprate (195 samples, 0.07%)</title><rect x="12.2379%" y="325" width="0.0666%" height="15" fill="rgb(244,70,9)" fg:x="35841" fg:w="195"/><text x="12.4879%" y="335.50"></text></g><g><title>get_mem_cgroup_from_mm (36 samples, 0.01%)</title><rect x="12.3045%" y="325" width="0.0123%" height="15" fill="rgb(217,125,39)" fg:x="36036" fg:w="36"/><text x="12.5545%" y="335.50"></text></g><g><title>asm_common_interrupt (32 samples, 0.01%)</title><rect x="12.4309%" y="261" width="0.0109%" height="15" fill="rgb(235,36,10)" fg:x="36406" fg:w="32"/><text x="12.6809%" y="271.50"></text></g><g><title>common_interrupt (32 samples, 0.01%)</title><rect x="12.4309%" y="245" width="0.0109%" height="15" fill="rgb(251,123,47)" fg:x="36406" fg:w="32"/><text x="12.6809%" y="255.50"></text></g><g><title>__common_interrupt (32 samples, 0.01%)</title><rect x="12.4309%" y="229" width="0.0109%" height="15" fill="rgb(221,13,13)" fg:x="36406" fg:w="32"/><text x="12.6809%" y="239.50"></text></g><g><title>handle_edge_irq (30 samples, 0.01%)</title><rect x="12.4315%" y="213" width="0.0102%" height="15" fill="rgb(238,131,9)" fg:x="36408" fg:w="30"/><text x="12.6815%" y="223.50"></text></g><g><title>__lock_text_start (38 samples, 0.01%)</title><rect x="12.4298%" y="277" width="0.0130%" height="15" fill="rgb(211,50,8)" fg:x="36403" fg:w="38"/><text x="12.6798%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (169 samples, 0.06%)</title><rect x="12.6596%" y="245" width="0.0577%" height="15" fill="rgb(245,182,24)" fg:x="37076" fg:w="169"/><text x="12.9096%" y="255.50"></text></g><g><title>__mod_lruvec_state (288 samples, 0.10%)</title><rect x="12.6463%" y="261" width="0.0983%" height="15" fill="rgb(242,14,37)" fg:x="37037" fg:w="288"/><text x="12.8963%" y="271.50"></text></g><g><title>__mod_node_page_state (56 samples, 0.02%)</title><rect x="12.7255%" y="245" width="0.0191%" height="15" fill="rgb(246,228,12)" fg:x="37269" fg:w="56"/><text x="12.9755%" y="255.50"></text></g><g><title>mem_cgroup_update_lru_size (62 samples, 0.02%)</title><rect x="12.7645%" y="261" width="0.0212%" height="15" fill="rgb(213,55,15)" fg:x="37383" fg:w="62"/><text x="13.0145%" y="271.50"></text></g><g><title>__pagevec_lru_add_fn (1,089 samples, 0.37%)</title><rect x="12.4548%" y="277" width="0.3718%" height="15" fill="rgb(209,9,3)" fg:x="36476" fg:w="1089"/><text x="12.7048%" y="287.50"></text></g><g><title>page_mapping (120 samples, 0.04%)</title><rect x="12.7856%" y="261" width="0.0410%" height="15" fill="rgb(230,59,30)" fg:x="37445" fg:w="120"/><text x="13.0356%" y="271.50"></text></g><g><title>_raw_spin_lock_irqsave (113 samples, 0.04%)</title><rect x="12.8365%" y="261" width="0.0386%" height="15" fill="rgb(209,121,21)" fg:x="37594" fg:w="113"/><text x="13.0865%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (71 samples, 0.02%)</title><rect x="12.8508%" y="245" width="0.0242%" height="15" fill="rgb(220,109,13)" fg:x="37636" fg:w="71"/><text x="13.1008%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (71 samples, 0.02%)</title><rect x="12.8508%" y="229" width="0.0242%" height="15" fill="rgb(232,18,1)" fg:x="37636" fg:w="71"/><text x="13.1008%" y="239.50"></text></g><g><title>lock_page_lruvec_irqsave (139 samples, 0.05%)</title><rect x="12.8280%" y="277" width="0.0475%" height="15" fill="rgb(215,41,42)" fg:x="37569" fg:w="139"/><text x="13.0780%" y="287.50"></text></g><g><title>__pagevec_lru_add (1,603 samples, 0.55%)</title><rect x="12.4052%" y="293" width="0.5473%" height="15" fill="rgb(224,123,36)" fg:x="36331" fg:w="1603"/><text x="12.6552%" y="303.50"></text></g><g><title>release_pages (197 samples, 0.07%)</title><rect x="12.8853%" y="277" width="0.0673%" height="15" fill="rgb(240,125,3)" fg:x="37737" fg:w="197"/><text x="13.1353%" y="287.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1,858 samples, 0.63%)</title><rect x="12.3250%" y="325" width="0.6344%" height="15" fill="rgb(205,98,50)" fg:x="36096" fg:w="1858"/><text x="12.5750%" y="335.50"></text></g><g><title>lru_cache_add (1,828 samples, 0.62%)</title><rect x="12.3353%" y="309" width="0.6242%" height="15" fill="rgb(205,185,37)" fg:x="36126" fg:w="1828"/><text x="12.5853%" y="319.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (853 samples, 0.29%)</title><rect x="13.1086%" y="293" width="0.2913%" height="15" fill="rgb(238,207,15)" fg:x="38391" fg:w="853"/><text x="13.3586%" y="303.50"></text></g><g><title>cgroup_rstat_updated (89 samples, 0.03%)</title><rect x="13.3695%" y="277" width="0.0304%" height="15" fill="rgb(213,199,42)" fg:x="39155" fg:w="89"/><text x="13.6195%" y="287.50"></text></g><g><title>arch_local_irq_enable (35 samples, 0.01%)</title><rect x="13.5938%" y="277" width="0.0120%" height="15" fill="rgb(235,201,11)" fg:x="39812" fg:w="35"/><text x="13.8438%" y="287.50"></text></g><g><title>page_counter_try_charge (77 samples, 0.03%)</title><rect x="13.6085%" y="277" width="0.0263%" height="15" fill="rgb(207,46,11)" fg:x="39855" fg:w="77"/><text x="13.8585%" y="287.50"></text></g><g><title>__mem_cgroup_charge (1,862 samples, 0.64%)</title><rect x="13.0028%" y="309" width="0.6358%" height="15" fill="rgb(241,35,35)" fg:x="38081" fg:w="1862"/><text x="13.2528%" y="319.50"></text></g><g><title>try_charge (675 samples, 0.23%)</title><rect x="13.4081%" y="293" width="0.2305%" height="15" fill="rgb(243,32,47)" fg:x="39268" fg:w="675"/><text x="13.6581%" y="303.50"></text></g><g><title>get_mem_cgroup_from_mm (280 samples, 0.10%)</title><rect x="13.6389%" y="309" width="0.0956%" height="15" fill="rgb(247,202,23)" fg:x="39944" fg:w="280"/><text x="13.8889%" y="319.50"></text></g><g><title>memcg_check_events (59 samples, 0.02%)</title><rect x="13.7393%" y="309" width="0.0201%" height="15" fill="rgb(219,102,11)" fg:x="40238" fg:w="59"/><text x="13.9893%" y="319.50"></text></g><g><title>rcu_read_unlock_strict (65 samples, 0.02%)</title><rect x="13.7594%" y="309" width="0.0222%" height="15" fill="rgb(243,110,44)" fg:x="40297" fg:w="65"/><text x="14.0094%" y="319.50"></text></g><g><title>mem_cgroup_charge (2,423 samples, 0.83%)</title><rect x="12.9594%" y="325" width="0.8273%" height="15" fill="rgb(222,74,54)" fg:x="37954" fg:w="2423"/><text x="13.2094%" y="335.50"></text></g><g><title>__mod_memcg_lruvec_state (191 samples, 0.07%)</title><rect x="13.8516%" y="277" width="0.0652%" height="15" fill="rgb(216,99,12)" fg:x="40567" fg:w="191"/><text x="14.1016%" y="287.50"></text></g><g><title>__mod_node_page_state (105 samples, 0.04%)</title><rect x="13.9237%" y="277" width="0.0359%" height="15" fill="rgb(226,22,26)" fg:x="40778" fg:w="105"/><text x="14.1737%" y="287.50"></text></g><g><title>__mod_lruvec_state (340 samples, 0.12%)</title><rect x="13.8441%" y="293" width="0.1161%" height="15" fill="rgb(217,163,10)" fg:x="40545" fg:w="340"/><text x="14.0941%" y="303.50"></text></g><g><title>__mod_node_page_state (39 samples, 0.01%)</title><rect x="13.9619%" y="293" width="0.0133%" height="15" fill="rgb(213,25,53)" fg:x="40890" fg:w="39"/><text x="14.2119%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (485 samples, 0.17%)</title><rect x="13.8127%" y="309" width="0.1656%" height="15" fill="rgb(252,105,26)" fg:x="40453" fg:w="485"/><text x="14.0627%" y="319.50"></text></g><g><title>__page_set_anon_rmap (37 samples, 0.01%)</title><rect x="13.9834%" y="309" width="0.0126%" height="15" fill="rgb(220,39,43)" fg:x="40953" fg:w="37"/><text x="14.2334%" y="319.50"></text></g><g><title>page_add_new_anon_rmap (613 samples, 0.21%)</title><rect x="13.7898%" y="325" width="0.2093%" height="15" fill="rgb(229,68,48)" fg:x="40386" fg:w="613"/><text x="14.0398%" y="335.50"></text></g><g><title>pmd_page_vaddr (36 samples, 0.01%)</title><rect x="14.0032%" y="325" width="0.0123%" height="15" fill="rgb(252,8,32)" fg:x="41011" fg:w="36"/><text x="14.2532%" y="335.50"></text></g><g><title>pmd_pfn (32 samples, 0.01%)</title><rect x="14.0155%" y="325" width="0.0109%" height="15" fill="rgb(223,20,43)" fg:x="41047" fg:w="32"/><text x="14.2655%" y="335.50"></text></g><g><title>do_anonymous_page (12,221 samples, 4.17%)</title><rect x="9.8850%" y="341" width="4.1729%" height="15" fill="rgb(229,81,49)" fg:x="28950" fg:w="12221"/><text x="10.1350%" y="351.50">do_an..</text></g><g><title>pmd_page_vaddr (48 samples, 0.02%)</title><rect x="14.0790%" y="341" width="0.0164%" height="15" fill="rgb(236,28,36)" fg:x="41233" fg:w="48"/><text x="14.3290%" y="351.50"></text></g><g><title>pmd_val (43 samples, 0.01%)</title><rect x="14.0999%" y="341" width="0.0147%" height="15" fill="rgb(249,185,26)" fg:x="41294" fg:w="43"/><text x="14.3499%" y="351.50"></text></g><g><title>handle_pte_fault (12,753 samples, 4.35%)</title><rect x="9.7634%" y="357" width="4.3545%" height="15" fill="rgb(249,174,33)" fg:x="28594" fg:w="12753"/><text x="10.0134%" y="367.50">handl..</text></g><g><title>__handle_mm_fault (13,413 samples, 4.58%)</title><rect x="9.5634%" y="373" width="4.5799%" height="15" fill="rgb(233,201,37)" fg:x="28008" fg:w="13413"/><text x="9.8134%" y="383.50">__han..</text></g><g><title>pud_val (37 samples, 0.01%)</title><rect x="14.1306%" y="357" width="0.0126%" height="15" fill="rgb(221,78,26)" fg:x="41384" fg:w="37"/><text x="14.3806%" y="367.50"></text></g><g><title>p4d_offset (59 samples, 0.02%)</title><rect x="14.1589%" y="373" width="0.0201%" height="15" fill="rgb(250,127,30)" fg:x="41467" fg:w="59"/><text x="14.4089%" y="383.50"></text></g><g><title>pud_val (62 samples, 0.02%)</title><rect x="14.1869%" y="373" width="0.0212%" height="15" fill="rgb(230,49,44)" fg:x="41549" fg:w="62"/><text x="14.4369%" y="383.50"></text></g><g><title>handle_mm_fault (13,904 samples, 4.75%)</title><rect x="9.4660%" y="389" width="4.7475%" height="15" fill="rgb(229,67,23)" fg:x="27723" fg:w="13904"/><text x="9.7160%" y="399.50">handle..</text></g><g><title>mem_cgroup_from_task (34 samples, 0.01%)</title><rect x="14.2136%" y="389" width="0.0116%" height="15" fill="rgb(249,83,47)" fg:x="41627" fg:w="34"/><text x="14.4636%" y="399.50"></text></g><g><title>up_read (400 samples, 0.14%)</title><rect x="14.2371%" y="389" width="0.1366%" height="15" fill="rgb(215,43,3)" fg:x="41696" fg:w="400"/><text x="14.4871%" y="399.50"></text></g><g><title>do_user_addr_fault (15,525 samples, 5.30%)</title><rect x="9.0778%" y="405" width="5.3010%" height="15" fill="rgb(238,154,13)" fg:x="26586" fg:w="15525"/><text x="9.3278%" y="415.50">do_use..</text></g><g><title>exc_page_fault (15,766 samples, 5.38%)</title><rect x="9.0252%" y="421" width="5.3833%" height="15" fill="rgb(219,56,2)" fg:x="26432" fg:w="15766"/><text x="9.2752%" y="431.50">exc_pag..</text></g><g><title>asm_exc_page_fault (15,799 samples, 5.39%)</title><rect x="9.0211%" y="437" width="5.3946%" height="15" fill="rgb(233,0,4)" fg:x="26420" fg:w="15799"/><text x="9.2711%" y="447.50">asm_exc..</text></g><g><title>copy_user_enhanced_fast_string (25,000 samples, 8.54%)</title><rect x="5.8873%" y="453" width="8.5363%" height="15" fill="rgb(235,30,7)" fg:x="17242" fg:w="25000"/><text x="6.1373%" y="463.50">copy_user_en..</text></g><g><title>error_entry (227 samples, 0.08%)</title><rect x="14.4242%" y="453" width="0.0775%" height="15" fill="rgb(250,79,13)" fg:x="42244" fg:w="227"/><text x="14.6742%" y="463.50"></text></g><g><title>xas_load (73 samples, 0.02%)</title><rect x="14.8845%" y="421" width="0.0249%" height="15" fill="rgb(211,146,34)" fg:x="43592" fg:w="73"/><text x="15.1345%" y="431.50"></text></g><g><title>filemap_get_read_batch (1,120 samples, 0.38%)</title><rect x="14.5291%" y="437" width="0.3824%" height="15" fill="rgb(228,22,38)" fg:x="42551" fg:w="1120"/><text x="14.7791%" y="447.50"></text></g><g><title>__schedule (34 samples, 0.01%)</title><rect x="14.9139%" y="373" width="0.0116%" height="15" fill="rgb(235,168,5)" fg:x="43678" fg:w="34"/><text x="15.1639%" y="383.50"></text></g><g><title>filemap_update_page (42 samples, 0.01%)</title><rect x="14.9115%" y="437" width="0.0143%" height="15" fill="rgb(221,155,16)" fg:x="43671" fg:w="42"/><text x="15.1615%" y="447.50"></text></g><g><title>wait_on_page_bit_common (39 samples, 0.01%)</title><rect x="14.9125%" y="421" width="0.0133%" height="15" fill="rgb(215,215,53)" fg:x="43674" fg:w="39"/><text x="15.1625%" y="431.50"></text></g><g><title>io_schedule (35 samples, 0.01%)</title><rect x="14.9139%" y="405" width="0.0120%" height="15" fill="rgb(223,4,10)" fg:x="43678" fg:w="35"/><text x="15.1639%" y="415.50"></text></g><g><title>schedule (35 samples, 0.01%)</title><rect x="14.9139%" y="389" width="0.0120%" height="15" fill="rgb(234,103,6)" fg:x="43678" fg:w="35"/><text x="15.1639%" y="399.50"></text></g><g><title>clear_page_erms (67 samples, 0.02%)</title><rect x="15.1348%" y="309" width="0.0229%" height="15" fill="rgb(227,97,0)" fg:x="44325" fg:w="67"/><text x="15.3848%" y="319.50"></text></g><g><title>get_page_from_freelist (99 samples, 0.03%)</title><rect x="15.1317%" y="325" width="0.0338%" height="15" fill="rgb(234,150,53)" fg:x="44316" fg:w="99"/><text x="15.3817%" y="335.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (106 samples, 0.04%)</title><rect x="15.1307%" y="341" width="0.0362%" height="15" fill="rgb(228,201,54)" fg:x="44313" fg:w="106"/><text x="15.3807%" y="351.50"></text></g><g><title>__next_zones_zonelist (47 samples, 0.02%)</title><rect x="15.1741%" y="341" width="0.0160%" height="15" fill="rgb(222,22,37)" fg:x="44440" fg:w="47"/><text x="15.4241%" y="351.50"></text></g><g><title>__inc_numa_state (52 samples, 0.02%)</title><rect x="15.2731%" y="325" width="0.0178%" height="15" fill="rgb(237,53,32)" fg:x="44730" fg:w="52"/><text x="15.5231%" y="335.50"></text></g><g><title>clear_page_erms (2,833 samples, 0.97%)</title><rect x="15.2973%" y="325" width="0.9673%" height="15" fill="rgb(233,25,53)" fg:x="44801" fg:w="2833"/><text x="15.5473%" y="335.50"></text></g><g><title>kernel_init_free_pages (45 samples, 0.02%)</title><rect x="16.2647%" y="325" width="0.0154%" height="15" fill="rgb(210,40,34)" fg:x="47634" fg:w="45"/><text x="16.5147%" y="335.50"></text></g><g><title>_raw_spin_lock (30 samples, 0.01%)</title><rect x="16.7635%" y="293" width="0.0102%" height="15" fill="rgb(241,220,44)" fg:x="49095" fg:w="30"/><text x="17.0135%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath (30 samples, 0.01%)</title><rect x="16.7635%" y="277" width="0.0102%" height="15" fill="rgb(235,28,35)" fg:x="49095" fg:w="30"/><text x="17.0135%" y="287.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (30 samples, 0.01%)</title><rect x="16.7635%" y="261" width="0.0102%" height="15" fill="rgb(210,56,17)" fg:x="49095" fg:w="30"/><text x="17.0135%" y="271.50"></text></g><g><title>rmqueue (1,450 samples, 0.50%)</title><rect x="16.2800%" y="325" width="0.4951%" height="15" fill="rgb(224,130,29)" fg:x="47679" fg:w="1450"/><text x="16.5300%" y="335.50"></text></g><g><title>rmqueue_bulk.constprop.0 (1,098 samples, 0.37%)</title><rect x="16.4002%" y="309" width="0.3749%" height="15" fill="rgb(235,212,8)" fg:x="48031" fg:w="1098"/><text x="16.6502%" y="319.50"></text></g><g><title>get_page_from_freelist (4,637 samples, 1.58%)</title><rect x="15.1922%" y="341" width="1.5833%" height="15" fill="rgb(223,33,50)" fg:x="44493" fg:w="4637"/><text x="15.4422%" y="351.50"></text></g><g><title>__alloc_pages (5,089 samples, 1.74%)</title><rect x="15.0535%" y="357" width="1.7376%" height="15" fill="rgb(219,149,13)" fg:x="44087" fg:w="5089"/><text x="15.3035%" y="367.50"></text></g><g><title>policy_nodemask (30 samples, 0.01%)</title><rect x="16.8103%" y="357" width="0.0102%" height="15" fill="rgb(250,156,29)" fg:x="49232" fg:w="30"/><text x="17.0603%" y="367.50"></text></g><g><title>alloc_pages (5,269 samples, 1.80%)</title><rect x="15.0283%" y="373" width="1.7991%" height="15" fill="rgb(216,193,19)" fg:x="44013" fg:w="5269"/><text x="15.2783%" y="383.50">a..</text></g><g><title>__page_cache_alloc (5,334 samples, 1.82%)</title><rect x="15.0119%" y="389" width="1.8213%" height="15" fill="rgb(216,135,14)" fg:x="43965" fg:w="5334"/><text x="15.2619%" y="399.50">_..</text></g><g><title>__mod_memcg_lruvec_state (129 samples, 0.04%)</title><rect x="17.6472%" y="325" width="0.0440%" height="15" fill="rgb(241,47,5)" fg:x="51683" fg:w="129"/><text x="17.8972%" y="335.50"></text></g><g><title>__mod_lruvec_state (272 samples, 0.09%)</title><rect x="17.6390%" y="341" width="0.0929%" height="15" fill="rgb(233,42,35)" fg:x="51659" fg:w="272"/><text x="17.8890%" y="351.50"></text></g><g><title>__mod_node_page_state (95 samples, 0.03%)</title><rect x="17.6994%" y="325" width="0.0324%" height="15" fill="rgb(231,13,6)" fg:x="51836" fg:w="95"/><text x="17.9494%" y="335.50"></text></g><g><title>__mod_lruvec_page_state (385 samples, 0.13%)</title><rect x="17.6137%" y="357" width="0.1315%" height="15" fill="rgb(207,181,40)" fg:x="51585" fg:w="385"/><text x="17.8637%" y="367.50"></text></g><g><title>_raw_spin_lock_irq (337 samples, 0.12%)</title><rect x="17.7517%" y="357" width="0.1151%" height="15" fill="rgb(254,173,49)" fg:x="51989" fg:w="337"/><text x="18.0017%" y="367.50"></text></g><g><title>native_queued_spin_lock_slowpath (160 samples, 0.05%)</title><rect x="17.8121%" y="341" width="0.0546%" height="15" fill="rgb(221,1,38)" fg:x="52166" fg:w="160"/><text x="18.0621%" y="351.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (160 samples, 0.05%)</title><rect x="17.8121%" y="325" width="0.0546%" height="15" fill="rgb(206,124,46)" fg:x="52166" fg:w="160"/><text x="18.0621%" y="335.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (76 samples, 0.03%)</title><rect x="17.9470%" y="325" width="0.0260%" height="15" fill="rgb(249,21,11)" fg:x="52561" fg:w="76"/><text x="18.1970%" y="335.50"></text></g><g><title>cgroup_rstat_updated (31 samples, 0.01%)</title><rect x="17.9624%" y="309" width="0.0106%" height="15" fill="rgb(222,201,40)" fg:x="52606" fg:w="31"/><text x="18.2124%" y="319.50"></text></g><g><title>page_counter_try_charge (52 samples, 0.02%)</title><rect x="18.0276%" y="309" width="0.0178%" height="15" fill="rgb(235,61,29)" fg:x="52797" fg:w="52"/><text x="18.2776%" y="319.50"></text></g><g><title>__mem_cgroup_charge (411 samples, 0.14%)</title><rect x="17.9060%" y="341" width="0.1403%" height="15" fill="rgb(219,207,3)" fg:x="52441" fg:w="411"/><text x="18.1560%" y="351.50"></text></g><g><title>try_charge (208 samples, 0.07%)</title><rect x="17.9753%" y="325" width="0.0710%" height="15" fill="rgb(222,56,46)" fg:x="52644" fg:w="208"/><text x="18.2253%" y="335.50"></text></g><g><title>get_mem_cgroup_from_mm (41 samples, 0.01%)</title><rect x="18.0464%" y="341" width="0.0140%" height="15" fill="rgb(239,76,54)" fg:x="52852" fg:w="41"/><text x="18.2964%" y="351.50"></text></g><g><title>rcu_read_unlock_strict (50 samples, 0.02%)</title><rect x="18.0699%" y="341" width="0.0171%" height="15" fill="rgb(231,124,27)" fg:x="52921" fg:w="50"/><text x="18.3199%" y="351.50"></text></g><g><title>mem_cgroup_charge (615 samples, 0.21%)</title><rect x="17.8784%" y="357" width="0.2100%" height="15" fill="rgb(249,195,6)" fg:x="52360" fg:w="615"/><text x="18.1284%" y="367.50"></text></g><g><title>xas_load (757 samples, 0.26%)</title><rect x="18.1590%" y="341" width="0.2585%" height="15" fill="rgb(237,174,47)" fg:x="53182" fg:w="757"/><text x="18.4090%" y="351.50"></text></g><g><title>xa_get_order (1,033 samples, 0.35%)</title><rect x="18.1044%" y="357" width="0.3527%" height="15" fill="rgb(206,201,31)" fg:x="53022" fg:w="1033"/><text x="18.3544%" y="367.50"></text></g><g><title>xas_start (116 samples, 0.04%)</title><rect x="18.4175%" y="341" width="0.0396%" height="15" fill="rgb(231,57,52)" fg:x="53939" fg:w="116"/><text x="18.6675%" y="351.50"></text></g><g><title>xas_find_conflict (286 samples, 0.10%)</title><rect x="18.4585%" y="357" width="0.0977%" height="15" fill="rgb(248,177,22)" fg:x="54059" fg:w="286"/><text x="18.7085%" y="367.50"></text></g><g><title>xas_start (57 samples, 0.02%)</title><rect x="18.5705%" y="357" width="0.0195%" height="15" fill="rgb(215,211,37)" fg:x="54387" fg:w="57"/><text x="18.8205%" y="367.50"></text></g><g><title>workingset_update_node (67 samples, 0.02%)</title><rect x="18.6442%" y="341" width="0.0229%" height="15" fill="rgb(241,128,51)" fg:x="54603" fg:w="67"/><text x="18.8942%" y="351.50"></text></g><g><title>list_lru_del (37 samples, 0.01%)</title><rect x="18.6545%" y="325" width="0.0126%" height="15" fill="rgb(227,165,31)" fg:x="54633" fg:w="37"/><text x="18.9045%" y="335.50"></text></g><g><title>__add_to_page_cache_locked (5,283 samples, 1.80%)</title><rect x="16.8837%" y="373" width="1.8039%" height="15" fill="rgb(228,167,24)" fg:x="49447" fg:w="5283"/><text x="17.1337%" y="383.50">_..</text></g><g><title>xas_store (286 samples, 0.10%)</title><rect x="18.5899%" y="357" width="0.0977%" height="15" fill="rgb(228,143,12)" fg:x="54444" fg:w="286"/><text x="18.8399%" y="367.50"></text></g><g><title>xas_create (60 samples, 0.02%)</title><rect x="18.6671%" y="341" width="0.0205%" height="15" fill="rgb(249,149,8)" fg:x="54670" fg:w="60"/><text x="18.9171%" y="351.50"></text></g><g><title>__mod_memcg_lruvec_state (130 samples, 0.04%)</title><rect x="18.9942%" y="309" width="0.0444%" height="15" fill="rgb(243,35,44)" fg:x="55628" fg:w="130"/><text x="19.2442%" y="319.50"></text></g><g><title>__mod_lruvec_state (216 samples, 0.07%)</title><rect x="18.9853%" y="325" width="0.0738%" height="15" fill="rgb(246,89,9)" fg:x="55602" fg:w="216"/><text x="19.2353%" y="335.50"></text></g><g><title>__mod_node_page_state (43 samples, 0.01%)</title><rect x="19.0444%" y="309" width="0.0147%" height="15" fill="rgb(233,213,13)" fg:x="55775" fg:w="43"/><text x="19.2944%" y="319.50"></text></g><g><title>mem_cgroup_update_lru_size (31 samples, 0.01%)</title><rect x="19.0775%" y="325" width="0.0106%" height="15" fill="rgb(233,141,41)" fg:x="55872" fg:w="31"/><text x="19.3275%" y="335.50"></text></g><g><title>page_mapping (104 samples, 0.04%)</title><rect x="19.0881%" y="325" width="0.0355%" height="15" fill="rgb(239,167,4)" fg:x="55903" fg:w="104"/><text x="19.3381%" y="335.50"></text></g><g><title>__pagevec_lru_add_fn (973 samples, 0.33%)</title><rect x="18.7931%" y="341" width="0.3322%" height="15" fill="rgb(209,217,16)" fg:x="55039" fg:w="973"/><text x="19.0431%" y="351.50"></text></g><g><title>lock_page_lruvec_irqsave (117 samples, 0.04%)</title><rect x="19.1260%" y="341" width="0.0399%" height="15" fill="rgb(219,88,35)" fg:x="56014" fg:w="117"/><text x="19.3760%" y="351.50"></text></g><g><title>_raw_spin_lock_irqsave (97 samples, 0.03%)</title><rect x="19.1329%" y="325" width="0.0331%" height="15" fill="rgb(220,193,23)" fg:x="56034" fg:w="97"/><text x="19.3829%" y="335.50"></text></g><g><title>native_queued_spin_lock_slowpath (65 samples, 0.02%)</title><rect x="19.1438%" y="309" width="0.0222%" height="15" fill="rgb(230,90,52)" fg:x="56066" fg:w="65"/><text x="19.3938%" y="319.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (65 samples, 0.02%)</title><rect x="19.1438%" y="293" width="0.0222%" height="15" fill="rgb(252,106,19)" fg:x="56066" fg:w="65"/><text x="19.3938%" y="303.50"></text></g><g><title>__pagevec_lru_add (1,386 samples, 0.47%)</title><rect x="18.7614%" y="357" width="0.4733%" height="15" fill="rgb(206,74,20)" fg:x="54946" fg:w="1386"/><text x="19.0114%" y="367.50"></text></g><g><title>release_pages (167 samples, 0.06%)</title><rect x="19.1776%" y="341" width="0.0570%" height="15" fill="rgb(230,138,44)" fg:x="56165" fg:w="167"/><text x="19.4276%" y="351.50"></text></g><g><title>lru_cache_add (1,583 samples, 0.54%)</title><rect x="18.6985%" y="373" width="0.5405%" height="15" fill="rgb(235,182,43)" fg:x="54762" fg:w="1583"/><text x="18.9485%" y="383.50"></text></g><g><title>idr_find (180 samples, 0.06%)</title><rect x="19.3562%" y="341" width="0.0615%" height="15" fill="rgb(242,16,51)" fg:x="56688" fg:w="180"/><text x="19.6062%" y="351.50"></text></g><g><title>radix_tree_lookup (156 samples, 0.05%)</title><rect x="19.3644%" y="325" width="0.0533%" height="15" fill="rgb(248,9,4)" fg:x="56712" fg:w="156"/><text x="19.6144%" y="335.50"></text></g><g><title>__radix_tree_lookup (156 samples, 0.05%)</title><rect x="19.3644%" y="309" width="0.0533%" height="15" fill="rgb(210,31,22)" fg:x="56712" fg:w="156"/><text x="19.6144%" y="319.50"></text></g><g><title>mem_cgroup_from_id (205 samples, 0.07%)</title><rect x="19.3527%" y="357" width="0.0700%" height="15" fill="rgb(239,54,39)" fg:x="56678" fg:w="205"/><text x="19.6027%" y="367.50"></text></g><g><title>mem_cgroup_get_nr_swap_pages (73 samples, 0.02%)</title><rect x="19.4227%" y="357" width="0.0249%" height="15" fill="rgb(230,99,41)" fg:x="56883" fg:w="73"/><text x="19.6727%" y="367.50"></text></g><g><title>__mod_memcg_state.part.0 (33 samples, 0.01%)</title><rect x="19.5149%" y="309" width="0.0113%" height="15" fill="rgb(253,106,12)" fg:x="57153" fg:w="33"/><text x="19.7649%" y="319.50"></text></g><g><title>__mod_memcg_lruvec_state (150 samples, 0.05%)</title><rect x="19.4801%" y="325" width="0.0512%" height="15" fill="rgb(213,46,41)" fg:x="57051" fg:w="150"/><text x="19.7301%" y="335.50"></text></g><g><title>__mod_lruvec_state (236 samples, 0.08%)</title><rect x="19.4699%" y="341" width="0.0806%" height="15" fill="rgb(215,133,35)" fg:x="57021" fg:w="236"/><text x="19.7199%" y="351.50"></text></g><g><title>__mod_node_page_state (31 samples, 0.01%)</title><rect x="19.5399%" y="325" width="0.0106%" height="15" fill="rgb(213,28,5)" fg:x="57226" fg:w="31"/><text x="19.7899%" y="335.50"></text></g><g><title>mod_lruvec_state.constprop.0 (333 samples, 0.11%)</title><rect x="19.4477%" y="357" width="0.1137%" height="15" fill="rgb(215,77,49)" fg:x="56956" fg:w="333"/><text x="19.6977%" y="367.50"></text></g><g><title>workingset_refault (908 samples, 0.31%)</title><rect x="19.2530%" y="373" width="0.3100%" height="15" fill="rgb(248,100,22)" fg:x="56386" fg:w="908"/><text x="19.5030%" y="383.50"></text></g><g><title>xas_find_conflict (38 samples, 0.01%)</title><rect x="19.5713%" y="373" width="0.0130%" height="15" fill="rgb(208,67,9)" fg:x="57318" fg:w="38"/><text x="19.8213%" y="383.50"></text></g><g><title>add_to_page_cache_lru (8,079 samples, 2.76%)</title><rect x="16.8332%" y="389" width="2.7586%" height="15" fill="rgb(219,133,21)" fg:x="49299" fg:w="8079"/><text x="17.0832%" y="399.50">ad..</text></g><g><title>nvme_map_data (77 samples, 0.03%)</title><rect x="19.6078%" y="261" width="0.0263%" height="15" fill="rgb(246,46,29)" fg:x="57425" fg:w="77"/><text x="19.8578%" y="271.50"></text></g><g><title>nvme_pci_setup_prps (32 samples, 0.01%)</title><rect x="19.6232%" y="245" width="0.0109%" height="15" fill="rgb(246,185,52)" fg:x="57470" fg:w="32"/><text x="19.8732%" y="255.50"></text></g><g><title>__blk_mq_try_issue_directly (86 samples, 0.03%)</title><rect x="19.6061%" y="293" width="0.0294%" height="15" fill="rgb(252,136,11)" fg:x="57420" fg:w="86"/><text x="19.8561%" y="303.50"></text></g><g><title>nvme_queue_rq (85 samples, 0.03%)</title><rect x="19.6064%" y="277" width="0.0290%" height="15" fill="rgb(219,138,53)" fg:x="57421" fg:w="85"/><text x="19.8564%" y="287.50"></text></g><g><title>blk_mq_sched_insert_requests (87 samples, 0.03%)</title><rect x="19.6061%" y="325" width="0.0297%" height="15" fill="rgb(211,51,23)" fg:x="57420" fg:w="87"/><text x="19.8561%" y="335.50"></text></g><g><title>blk_mq_try_issue_list_directly (87 samples, 0.03%)</title><rect x="19.6061%" y="309" width="0.0297%" height="15" fill="rgb(247,221,28)" fg:x="57420" fg:w="87"/><text x="19.8561%" y="319.50"></text></g><g><title>blk_finish_plug (90 samples, 0.03%)</title><rect x="19.6054%" y="373" width="0.0307%" height="15" fill="rgb(251,222,45)" fg:x="57418" fg:w="90"/><text x="19.8554%" y="383.50"></text></g><g><title>blk_flush_plug_list (90 samples, 0.03%)</title><rect x="19.6054%" y="357" width="0.0307%" height="15" fill="rgb(217,162,53)" fg:x="57418" fg:w="90"/><text x="19.8554%" y="367.50"></text></g><g><title>blk_mq_flush_plug_list (90 samples, 0.03%)</title><rect x="19.6054%" y="341" width="0.0307%" height="15" fill="rgb(229,93,14)" fg:x="57418" fg:w="90"/><text x="19.8554%" y="351.50"></text></g><g><title>__bio_add_page (33 samples, 0.01%)</title><rect x="19.9414%" y="325" width="0.0113%" height="15" fill="rgb(209,67,49)" fg:x="58402" fg:w="33"/><text x="20.1914%" y="335.50"></text></g><g><title>bio_add_page (164 samples, 0.06%)</title><rect x="19.9237%" y="341" width="0.0560%" height="15" fill="rgb(213,87,29)" fg:x="58350" fg:w="164"/><text x="20.1737%" y="351.50"></text></g><g><title>__bio_try_merge_page (79 samples, 0.03%)</title><rect x="19.9527%" y="325" width="0.0270%" height="15" fill="rgb(205,151,52)" fg:x="58435" fg:w="79"/><text x="20.2027%" y="335.50"></text></g><g><title>bio_alloc_bioset (42 samples, 0.01%)</title><rect x="19.9796%" y="341" width="0.0143%" height="15" fill="rgb(253,215,39)" fg:x="58514" fg:w="42"/><text x="20.2296%" y="351.50"></text></g><g><title>__check_block_validity.constprop.0 (31 samples, 0.01%)</title><rect x="20.0005%" y="325" width="0.0106%" height="15" fill="rgb(221,220,41)" fg:x="58575" fg:w="31"/><text x="20.2505%" y="335.50"></text></g><g><title>ext4_map_blocks (70 samples, 0.02%)</title><rect x="19.9998%" y="341" width="0.0239%" height="15" fill="rgb(218,133,21)" fg:x="58573" fg:w="70"/><text x="20.2498%" y="351.50"></text></g><g><title>ext4_es_lookup_extent (37 samples, 0.01%)</title><rect x="20.0111%" y="325" width="0.0126%" height="15" fill="rgb(221,193,43)" fg:x="58606" fg:w="37"/><text x="20.2611%" y="335.50"></text></g><g><title>fscrypt_mergeable_bio (48 samples, 0.02%)</title><rect x="20.0237%" y="341" width="0.0164%" height="15" fill="rgb(240,128,52)" fg:x="58643" fg:w="48"/><text x="20.2737%" y="351.50"></text></g><g><title>blk_bio_segment_split (150 samples, 0.05%)</title><rect x="20.0640%" y="277" width="0.0512%" height="15" fill="rgb(253,114,12)" fg:x="58761" fg:w="150"/><text x="20.3140%" y="287.50"></text></g><g><title>__blk_queue_split (165 samples, 0.06%)</title><rect x="20.0619%" y="293" width="0.0563%" height="15" fill="rgb(215,223,47)" fg:x="58755" fg:w="165"/><text x="20.3119%" y="303.50"></text></g><g><title>__blk_bios_map_sg (89 samples, 0.03%)</title><rect x="20.1432%" y="165" width="0.0304%" height="15" fill="rgb(248,225,23)" fg:x="58993" fg:w="89"/><text x="20.3932%" y="175.50"></text></g><g><title>__blk_rq_map_sg (97 samples, 0.03%)</title><rect x="20.1432%" y="181" width="0.0331%" height="15" fill="rgb(250,108,0)" fg:x="58993" fg:w="97"/><text x="20.3932%" y="191.50"></text></g><g><title>dma_direct_map_sg (45 samples, 0.02%)</title><rect x="20.1763%" y="165" width="0.0154%" height="15" fill="rgb(228,208,7)" fg:x="59090" fg:w="45"/><text x="20.4263%" y="175.50"></text></g><g><title>dma_map_sg_attrs (51 samples, 0.02%)</title><rect x="20.1763%" y="181" width="0.0174%" height="15" fill="rgb(244,45,10)" fg:x="59090" fg:w="51"/><text x="20.4263%" y="191.50"></text></g><g><title>nvme_pci_setup_prps (51 samples, 0.02%)</title><rect x="20.2016%" y="181" width="0.0174%" height="15" fill="rgb(207,125,25)" fg:x="59164" fg:w="51"/><text x="20.4516%" y="191.50"></text></g><g><title>nvme_map_data (240 samples, 0.08%)</title><rect x="20.1425%" y="197" width="0.0819%" height="15" fill="rgb(210,195,18)" fg:x="58991" fg:w="240"/><text x="20.3925%" y="207.50"></text></g><g><title>nvme_queue_rq (266 samples, 0.09%)</title><rect x="20.1367%" y="213" width="0.0908%" height="15" fill="rgb(249,80,12)" fg:x="58974" fg:w="266"/><text x="20.3867%" y="223.50"></text></g><g><title>blk_flush_plug_list (274 samples, 0.09%)</title><rect x="20.1343%" y="293" width="0.0936%" height="15" fill="rgb(221,65,9)" fg:x="58967" fg:w="274"/><text x="20.3843%" y="303.50"></text></g><g><title>blk_mq_flush_plug_list (274 samples, 0.09%)</title><rect x="20.1343%" y="277" width="0.0936%" height="15" fill="rgb(235,49,36)" fg:x="58967" fg:w="274"/><text x="20.3843%" y="287.50"></text></g><g><title>blk_mq_sched_insert_requests (273 samples, 0.09%)</title><rect x="20.1347%" y="261" width="0.0932%" height="15" fill="rgb(225,32,20)" fg:x="58968" fg:w="273"/><text x="20.3847%" y="271.50"></text></g><g><title>blk_mq_try_issue_list_directly (273 samples, 0.09%)</title><rect x="20.1347%" y="245" width="0.0932%" height="15" fill="rgb(215,141,46)" fg:x="58968" fg:w="273"/><text x="20.3847%" y="255.50"></text></g><g><title>__blk_mq_try_issue_directly (270 samples, 0.09%)</title><rect x="20.1357%" y="229" width="0.0922%" height="15" fill="rgb(250,160,47)" fg:x="58971" fg:w="270"/><text x="20.3857%" y="239.50"></text></g><g><title>blk_mq_submit_bio (528 samples, 0.18%)</title><rect x="20.0496%" y="309" width="0.1803%" height="15" fill="rgb(216,222,40)" fg:x="58719" fg:w="528"/><text x="20.2996%" y="319.50"></text></g><g><title>submit_bio (572 samples, 0.20%)</title><rect x="20.0435%" y="341" width="0.1953%" height="15" fill="rgb(234,217,39)" fg:x="58701" fg:w="572"/><text x="20.2935%" y="351.50"></text></g><g><title>submit_bio_noacct (566 samples, 0.19%)</title><rect x="20.0455%" y="325" width="0.1933%" height="15" fill="rgb(207,178,40)" fg:x="58707" fg:w="566"/><text x="20.2955%" y="335.50"></text></g><g><title>xas_load (230 samples, 0.08%)</title><rect x="20.2521%" y="325" width="0.0785%" height="15" fill="rgb(221,136,13)" fg:x="59312" fg:w="230"/><text x="20.5021%" y="335.50"></text></g><g><title>xa_load (321 samples, 0.11%)</title><rect x="20.2388%" y="341" width="0.1096%" height="15" fill="rgb(249,199,10)" fg:x="59273" fg:w="321"/><text x="20.4888%" y="351.50"></text></g><g><title>xas_start (52 samples, 0.02%)</title><rect x="20.3307%" y="325" width="0.0178%" height="15" fill="rgb(249,222,13)" fg:x="59542" fg:w="52"/><text x="20.5807%" y="335.50"></text></g><g><title>ext4_mpage_readpages (2,085 samples, 0.71%)</title><rect x="19.6396%" y="357" width="0.7119%" height="15" fill="rgb(244,185,38)" fg:x="57518" fg:w="2085"/><text x="19.8896%" y="367.50"></text></g><g><title>read_pages (2,207 samples, 0.75%)</title><rect x="19.6047%" y="389" width="0.7536%" height="15" fill="rgb(236,202,9)" fg:x="57416" fg:w="2207"/><text x="19.8547%" y="399.50"></text></g><g><title>ext4_readahead (2,113 samples, 0.72%)</title><rect x="19.6368%" y="373" width="0.7215%" height="15" fill="rgb(250,229,37)" fg:x="57510" fg:w="2113"/><text x="19.8868%" y="383.50"></text></g><g><title>xas_load (361 samples, 0.12%)</title><rect x="20.3809%" y="373" width="0.1233%" height="15" fill="rgb(206,174,23)" fg:x="59689" fg:w="361"/><text x="20.6309%" y="383.50"></text></g><g><title>xa_load (475 samples, 0.16%)</title><rect x="20.3621%" y="389" width="0.1622%" height="15" fill="rgb(211,33,43)" fg:x="59634" fg:w="475"/><text x="20.6121%" y="399.50"></text></g><g><title>xas_start (59 samples, 0.02%)</title><rect x="20.5041%" y="373" width="0.0201%" height="15" fill="rgb(245,58,50)" fg:x="60050" fg:w="59"/><text x="20.7541%" y="383.50"></text></g><g><title>page_cache_ra_unbounded (16,366 samples, 5.59%)</title><rect x="14.9409%" y="405" width="5.5882%" height="15" fill="rgb(244,68,36)" fg:x="43757" fg:w="16366"/><text x="15.1909%" y="415.50">page_ca..</text></g><g><title>page_cache_async_ra (16,411 samples, 5.60%)</title><rect x="14.9262%" y="437" width="5.6035%" height="15" fill="rgb(232,229,15)" fg:x="43714" fg:w="16411"/><text x="15.1762%" y="447.50">page_ca..</text></g><g><title>ondemand_readahead (16,403 samples, 5.60%)</title><rect x="14.9289%" y="421" width="5.6008%" height="15" fill="rgb(254,30,23)" fg:x="43722" fg:w="16403"/><text x="15.1789%" y="431.50">ondeman..</text></g><g><title>__alloc_pages (37 samples, 0.01%)</title><rect x="20.5338%" y="357" width="0.0126%" height="15" fill="rgb(235,160,14)" fg:x="60137" fg:w="37"/><text x="20.7838%" y="367.50"></text></g><g><title>get_page_from_freelist (33 samples, 0.01%)</title><rect x="20.5352%" y="341" width="0.0113%" height="15" fill="rgb(212,155,44)" fg:x="60141" fg:w="33"/><text x="20.7852%" y="351.50"></text></g><g><title>__page_cache_alloc (42 samples, 0.01%)</title><rect x="20.5331%" y="389" width="0.0143%" height="15" fill="rgb(226,2,50)" fg:x="60135" fg:w="42"/><text x="20.7831%" y="399.50"></text></g><g><title>alloc_pages (40 samples, 0.01%)</title><rect x="20.5338%" y="373" width="0.0137%" height="15" fill="rgb(234,177,6)" fg:x="60137" fg:w="40"/><text x="20.7838%" y="383.50"></text></g><g><title>__add_to_page_cache_locked (52 samples, 0.02%)</title><rect x="20.5478%" y="373" width="0.0178%" height="15" fill="rgb(217,24,9)" fg:x="60178" fg:w="52"/><text x="20.7978%" y="383.50"></text></g><g><title>add_to_page_cache_lru (90 samples, 0.03%)</title><rect x="20.5475%" y="389" width="0.0307%" height="15" fill="rgb(220,13,46)" fg:x="60177" fg:w="90"/><text x="20.7975%" y="399.50"></text></g><g><title>blk_finish_plug (30 samples, 0.01%)</title><rect x="20.5816%" y="373" width="0.0102%" height="15" fill="rgb(239,221,27)" fg:x="60277" fg:w="30"/><text x="20.8316%" y="383.50"></text></g><g><title>blk_flush_plug_list (30 samples, 0.01%)</title><rect x="20.5816%" y="357" width="0.0102%" height="15" fill="rgb(222,198,25)" fg:x="60277" fg:w="30"/><text x="20.8316%" y="367.50"></text></g><g><title>blk_mq_flush_plug_list (30 samples, 0.01%)</title><rect x="20.5816%" y="341" width="0.0102%" height="15" fill="rgb(211,99,13)" fg:x="60277" fg:w="30"/><text x="20.8316%" y="351.50"></text></g><g><title>read_pages (133 samples, 0.05%)</title><rect x="20.5789%" y="389" width="0.0454%" height="15" fill="rgb(232,111,31)" fg:x="60269" fg:w="133"/><text x="20.8289%" y="399.50"></text></g><g><title>ext4_readahead (95 samples, 0.03%)</title><rect x="20.5919%" y="373" width="0.0324%" height="15" fill="rgb(245,82,37)" fg:x="60307" fg:w="95"/><text x="20.8419%" y="383.50"></text></g><g><title>ext4_mpage_readpages (94 samples, 0.03%)</title><rect x="20.5922%" y="357" width="0.0321%" height="15" fill="rgb(227,149,46)" fg:x="60308" fg:w="94"/><text x="20.8422%" y="367.50"></text></g><g><title>xas_load (31 samples, 0.01%)</title><rect x="20.6267%" y="373" width="0.0106%" height="15" fill="rgb(218,36,50)" fg:x="60409" fg:w="31"/><text x="20.8767%" y="383.50"></text></g><g><title>xa_load (41 samples, 0.01%)</title><rect x="20.6243%" y="389" width="0.0140%" height="15" fill="rgb(226,80,48)" fg:x="60402" fg:w="41"/><text x="20.8743%" y="399.50"></text></g><g><title>page_cache_sync_ra (321 samples, 0.11%)</title><rect x="20.5297%" y="437" width="0.1096%" height="15" fill="rgb(238,224,15)" fg:x="60125" fg:w="321"/><text x="20.7797%" y="447.50"></text></g><g><title>ondemand_readahead (321 samples, 0.11%)</title><rect x="20.5297%" y="421" width="0.1096%" height="15" fill="rgb(241,136,10)" fg:x="60125" fg:w="321"/><text x="20.7797%" y="431.50"></text></g><g><title>page_cache_ra_unbounded (320 samples, 0.11%)</title><rect x="20.5301%" y="405" width="0.1093%" height="15" fill="rgb(208,32,45)" fg:x="60126" fg:w="320"/><text x="20.7801%" y="415.50"></text></g><g><title>filemap_get_pages (17,953 samples, 6.13%)</title><rect x="14.5103%" y="453" width="6.1301%" height="15" fill="rgb(207,135,9)" fg:x="42496" fg:w="17953"/><text x="14.7603%" y="463.50">filemap_..</text></g><g><title>mark_page_accessed (257 samples, 0.09%)</title><rect x="20.6414%" y="453" width="0.0878%" height="15" fill="rgb(206,86,44)" fg:x="60452" fg:w="257"/><text x="20.8914%" y="463.50"></text></g><g><title>restore_regs_and_return_to_kernel (39 samples, 0.01%)</title><rect x="20.7322%" y="453" width="0.0133%" height="15" fill="rgb(245,177,15)" fg:x="60718" fg:w="39"/><text x="20.9822%" y="463.50"></text></g><g><title>filemap_read (52,293 samples, 17.86%)</title><rect x="2.8911%" y="469" width="17.8555%" height="15" fill="rgb(206,64,50)" fg:x="8467" fg:w="52293"/><text x="3.1411%" y="479.50">filemap_read</text></g><g><title>new_sync_read (52,312 samples, 17.86%)</title><rect x="2.8873%" y="517" width="17.8620%" height="15" fill="rgb(234,36,40)" fg:x="8456" fg:w="52312"/><text x="3.1373%" y="527.50">new_sync_read</text></g><g><title>ext4_file_read_iter (52,312 samples, 17.86%)</title><rect x="2.8873%" y="501" width="17.8620%" height="15" fill="rgb(213,64,8)" fg:x="8456" fg:w="52312"/><text x="3.1373%" y="511.50">ext4_file_read_iter</text></g><g><title>generic_file_read_iter (52,312 samples, 17.86%)</title><rect x="2.8873%" y="485" width="17.8620%" height="15" fill="rgb(210,75,36)" fg:x="8456" fg:w="52312"/><text x="3.1373%" y="495.50">generic_file_read_iter</text></g><g><title>__x64_sys_read (52,315 samples, 17.86%)</title><rect x="2.8866%" y="565" width="17.8630%" height="15" fill="rgb(229,88,21)" fg:x="8454" fg:w="52315"/><text x="3.1366%" y="575.50">__x64_sys_read</text></g><g><title>ksys_read (52,315 samples, 17.86%)</title><rect x="2.8866%" y="549" width="17.8630%" height="15" fill="rgb(252,204,47)" fg:x="8454" fg:w="52315"/><text x="3.1366%" y="559.50">ksys_read</text></g><g><title>vfs_read (52,314 samples, 17.86%)</title><rect x="2.8870%" y="533" width="17.8627%" height="15" fill="rgb(208,77,27)" fg:x="8455" fg:w="52314"/><text x="3.1370%" y="543.50">vfs_read</text></g><g><title>entry_SYSCALL_64_after_hwframe (52,317 samples, 17.86%)</title><rect x="2.8863%" y="597" width="17.8637%" height="15" fill="rgb(221,76,26)" fg:x="8453" fg:w="52317"/><text x="3.1363%" y="607.50">entry_SYSCALL_64_after_hwfra..</text></g><g><title>do_syscall_64 (52,317 samples, 17.86%)</title><rect x="2.8863%" y="581" width="17.8637%" height="15" fill="rgb(225,139,18)" fg:x="8453" fg:w="52317"/><text x="3.1363%" y="591.50">do_syscall_64</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read_exact (52,337 samples, 17.87%)</title><rect x="2.8849%" y="709" width="17.8705%" height="15" fill="rgb(230,137,11)" fg:x="8449" fg:w="52337"/><text x="3.1349%" y="719.50">&lt;std::io::buffered::bufreade..</text></g><g><title>std::io::default_read_exact (52,337 samples, 17.87%)</title><rect x="2.8849%" y="693" width="17.8705%" height="15" fill="rgb(212,28,1)" fg:x="8449" fg:w="52337"/><text x="3.1349%" y="703.50">std::io::default_read_exact</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (52,337 samples, 17.87%)</title><rect x="2.8849%" y="677" width="17.8705%" height="15" fill="rgb(248,164,17)" fg:x="8449" fg:w="52337"/><text x="3.1349%" y="687.50">&lt;std::io::buffered::bufreade..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (52,337 samples, 17.87%)</title><rect x="2.8849%" y="661" width="17.8705%" height="15" fill="rgb(222,171,42)" fg:x="8449" fg:w="52337"/><text x="3.1349%" y="671.50">&lt;std::fs::File as std::io::R..</text></g><g><title>std::sys::unix::fs::File::read (52,337 samples, 17.87%)</title><rect x="2.8849%" y="645" width="17.8705%" height="15" fill="rgb(243,84,45)" fg:x="8449" fg:w="52337"/><text x="3.1349%" y="655.50">std::sys::unix::fs::File::re..</text></g><g><title>std::sys::unix::fd::FileDesc::read (52,337 samples, 17.87%)</title><rect x="2.8849%" y="629" width="17.8705%" height="15" fill="rgb(252,49,23)" fg:x="8449" fg:w="52337"/><text x="3.1349%" y="639.50">std::sys::unix::fd::FileDesc..</text></g><g><title>__libc_read (52,337 samples, 17.87%)</title><rect x="2.8849%" y="613" width="17.8705%" height="15" fill="rgb(215,19,7)" fg:x="8449" fg:w="52337"/><text x="3.1349%" y="623.50">__libc_read</text></g><g><title>hprof_slurp::prefetch_reader::PrefetchReader::start_reader::{{closure}} (52,377 samples, 17.88%)</title><rect x="2.8849%" y="725" width="17.8842%" height="15" fill="rgb(238,81,41)" fg:x="8449" fg:w="52377"/><text x="3.1349%" y="735.50">hprof_slurp::prefetch_reader..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,410 samples, 0.48%)</title><rect x="20.7810%" y="661" width="0.4814%" height="15" fill="rgb(210,199,37)" fg:x="60861" fg:w="1410"/><text x="21.0310%" y="671.50"></text></g><g><title>core::ptr::read (1,403 samples, 0.48%)</title><rect x="20.7834%" y="645" width="0.4791%" height="15" fill="rgb(244,192,49)" fg:x="60868" fg:w="1403"/><text x="21.0334%" y="655.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (41 samples, 0.01%)</title><rect x="27.3963%" y="629" width="0.0140%" height="15" fill="rgb(226,211,11)" fg:x="80235" fg:w="41"/><text x="27.6463%" y="639.50"></text></g><g><title>sysvec_apic_timer_interrupt (40 samples, 0.01%)</title><rect x="27.3966%" y="613" width="0.0137%" height="15" fill="rgb(236,162,54)" fg:x="80236" fg:w="40"/><text x="27.6466%" y="623.50"></text></g><g><title>__memcpy_avx_unaligned_erms (17,421 samples, 5.95%)</title><rect x="21.4663%" y="645" width="5.9484%" height="15" fill="rgb(220,229,9)" fg:x="62868" fg:w="17421"/><text x="21.7163%" y="655.50">__memcpy..</text></g><g><title>__GI___munmap (37 samples, 0.01%)</title><rect x="30.0876%" y="613" width="0.0126%" height="15" fill="rgb(250,87,22)" fg:x="88117" fg:w="37"/><text x="30.3376%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (37 samples, 0.01%)</title><rect x="30.0876%" y="597" width="0.0126%" height="15" fill="rgb(239,43,17)" fg:x="88117" fg:w="37"/><text x="30.3376%" y="607.50"></text></g><g><title>do_syscall_64 (37 samples, 0.01%)</title><rect x="30.0876%" y="581" width="0.0126%" height="15" fill="rgb(231,177,25)" fg:x="88117" fg:w="37"/><text x="30.3376%" y="591.50"></text></g><g><title>__x64_sys_munmap (37 samples, 0.01%)</title><rect x="30.0876%" y="565" width="0.0126%" height="15" fill="rgb(219,179,1)" fg:x="88117" fg:w="37"/><text x="30.3376%" y="575.50"></text></g><g><title>__vm_munmap (37 samples, 0.01%)</title><rect x="30.0876%" y="549" width="0.0126%" height="15" fill="rgb(238,219,53)" fg:x="88117" fg:w="37"/><text x="30.3376%" y="559.50"></text></g><g><title>__do_munmap (37 samples, 0.01%)</title><rect x="30.0876%" y="533" width="0.0126%" height="15" fill="rgb(232,167,36)" fg:x="88117" fg:w="37"/><text x="30.3376%" y="543.50"></text></g><g><title>unmap_region (37 samples, 0.01%)</title><rect x="30.0876%" y="517" width="0.0126%" height="15" fill="rgb(244,19,51)" fg:x="88117" fg:w="37"/><text x="30.3376%" y="527.50"></text></g><g><title>unmap_vmas (34 samples, 0.01%)</title><rect x="30.0886%" y="501" width="0.0116%" height="15" fill="rgb(224,6,22)" fg:x="88120" fg:w="34"/><text x="30.3386%" y="511.50"></text></g><g><title>unmap_single_vma (34 samples, 0.01%)</title><rect x="30.0886%" y="485" width="0.0116%" height="15" fill="rgb(224,145,5)" fg:x="88120" fg:w="34"/><text x="30.3386%" y="495.50"></text></g><g><title>unmap_page_range (34 samples, 0.01%)</title><rect x="30.0886%" y="469" width="0.0116%" height="15" fill="rgb(234,130,49)" fg:x="88120" fg:w="34"/><text x="30.3386%" y="479.50"></text></g><g><title>zap_pmd_range.isra.0 (34 samples, 0.01%)</title><rect x="30.0886%" y="453" width="0.0116%" height="15" fill="rgb(254,6,2)" fg:x="88120" fg:w="34"/><text x="30.3386%" y="463.50"></text></g><g><title>zap_pte_range (33 samples, 0.01%)</title><rect x="30.0890%" y="437" width="0.0113%" height="15" fill="rgb(208,96,46)" fg:x="88121" fg:w="33"/><text x="30.3390%" y="447.50"></text></g><g><title>futex_wait_queue_me (94 samples, 0.03%)</title><rect x="30.7217%" y="501" width="0.0321%" height="15" fill="rgb(239,3,39)" fg:x="89974" fg:w="94"/><text x="30.9717%" y="511.50"></text></g><g><title>schedule (93 samples, 0.03%)</title><rect x="30.7220%" y="485" width="0.0318%" height="15" fill="rgb(233,210,1)" fg:x="89975" fg:w="93"/><text x="30.9720%" y="495.50"></text></g><g><title>__schedule (93 samples, 0.03%)</title><rect x="30.7220%" y="469" width="0.0318%" height="15" fill="rgb(244,137,37)" fg:x="89975" fg:w="93"/><text x="30.9720%" y="479.50"></text></g><g><title>__x64_sys_futex (105 samples, 0.04%)</title><rect x="30.7200%" y="549" width="0.0359%" height="15" fill="rgb(240,136,2)" fg:x="89969" fg:w="105"/><text x="30.9700%" y="559.50"></text></g><g><title>do_futex (103 samples, 0.04%)</title><rect x="30.7207%" y="533" width="0.0352%" height="15" fill="rgb(239,18,37)" fg:x="89971" fg:w="103"/><text x="30.9707%" y="543.50"></text></g><g><title>futex_wait (103 samples, 0.04%)</title><rect x="30.7207%" y="517" width="0.0352%" height="15" fill="rgb(218,185,22)" fg:x="89971" fg:w="103"/><text x="30.9707%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (117 samples, 0.04%)</title><rect x="30.7183%" y="581" width="0.0399%" height="15" fill="rgb(225,218,4)" fg:x="89964" fg:w="117"/><text x="30.9683%" y="591.50"></text></g><g><title>do_syscall_64 (113 samples, 0.04%)</title><rect x="30.7196%" y="565" width="0.0386%" height="15" fill="rgb(230,182,32)" fg:x="89968" fg:w="113"/><text x="30.9696%" y="575.50"></text></g><g><title>__GI___lll_lock_wait_private (132 samples, 0.05%)</title><rect x="30.7142%" y="597" width="0.0451%" height="15" fill="rgb(242,56,43)" fg:x="89952" fg:w="132"/><text x="30.9642%" y="607.50"></text></g><g><title>malloc_consolidate (183 samples, 0.06%)</title><rect x="30.7606%" y="597" width="0.0625%" height="15" fill="rgb(233,99,24)" fg:x="90088" fg:w="183"/><text x="31.0106%" y="607.50"></text></g><g><title>unlink_chunk.constprop.0 (41 samples, 0.01%)</title><rect x="30.8091%" y="581" width="0.0140%" height="15" fill="rgb(234,209,42)" fg:x="90230" fg:w="41"/><text x="31.0591%" y="591.50"></text></g><g><title>_int_free (2,232 samples, 0.76%)</title><rect x="30.1002%" y="613" width="0.7621%" height="15" fill="rgb(227,7,12)" fg:x="88154" fg:w="2232"/><text x="30.3502%" y="623.50"></text></g><g><title>unlink_chunk.constprop.0 (115 samples, 0.04%)</title><rect x="30.8231%" y="597" width="0.0393%" height="15" fill="rgb(245,203,43)" fg:x="90271" fg:w="115"/><text x="31.0731%" y="607.50"></text></g><g><title>__free (3,779 samples, 1.29%)</title><rect x="29.5741%" y="629" width="1.2903%" height="15" fill="rgb(238,205,33)" fg:x="86613" fg:w="3779"/><text x="29.8241%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::GcRecord&gt; (453 samples, 0.15%)</title><rect x="30.8893%" y="629" width="0.1547%" height="15" fill="rgb(231,56,7)" fg:x="90465" fg:w="453"/><text x="31.1393%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::gc_record::ArrayValue&gt; (50 samples, 0.02%)</title><rect x="31.0269%" y="613" width="0.0171%" height="15" fill="rgb(244,186,29)" fg:x="90868" fg:w="50"/><text x="31.2769%" y="623.50"></text></g><g><title>hprof_slurp::result_recorder::ArrayCounter::add_elements_from_array (76 samples, 0.03%)</title><rect x="31.0440%" y="629" width="0.0260%" height="15" fill="rgb(234,111,31)" fg:x="90918" fg:w="76"/><text x="31.2940%" y="639.50"></text></g><g><title>hprof_slurp::result_recorder::ClassInstanceCounter::add_instance (2,900 samples, 0.99%)</title><rect x="31.0700%" y="629" width="0.9902%" height="15" fill="rgb(241,149,10)" fg:x="90994" fg:w="2900"/><text x="31.3200%" y="639.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (482 samples, 0.16%)</title><rect x="32.0602%" y="629" width="0.1646%" height="15" fill="rgb(249,206,44)" fg:x="93894" fg:w="482"/><text x="32.3102%" y="639.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::into_mut (482 samples, 0.16%)</title><rect x="32.0602%" y="613" width="0.1646%" height="15" fill="rgb(251,153,30)" fg:x="93894" fg:w="482"/><text x="32.3102%" y="623.50"></text></g><g><title>hashbrown::rustc_entry::RustcOccupiedEntry&lt;K,V,A&gt;::into_mut (482 samples, 0.16%)</title><rect x="32.0602%" y="597" width="0.1646%" height="15" fill="rgb(239,152,38)" fg:x="93894" fg:w="482"/><text x="32.3102%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_mut (482 samples, 0.16%)</title><rect x="32.0602%" y="581" width="0.1646%" height="15" fill="rgb(249,139,47)" fg:x="93894" fg:w="482"/><text x="32.3102%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (482 samples, 0.16%)</title><rect x="32.0602%" y="565" width="0.1646%" height="15" fill="rgb(244,64,35)" fg:x="93894" fg:w="482"/><text x="32.3102%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (482 samples, 0.16%)</title><rect x="32.0602%" y="549" width="0.1646%" height="15" fill="rgb(216,46,15)" fg:x="93894" fg:w="482"/><text x="32.3102%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (482 samples, 0.16%)</title><rect x="32.0602%" y="533" width="0.1646%" height="15" fill="rgb(250,74,19)" fg:x="93894" fg:w="482"/><text x="32.3102%" y="543.50"></text></g><g><title>ahash::operations::folded_multiply (991 samples, 0.34%)</title><rect x="32.2248%" y="565" width="0.3384%" height="15" fill="rgb(249,42,33)" fg:x="94376" fg:w="991"/><text x="32.4748%" y="575.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (766 samples, 0.26%)</title><rect x="32.3016%" y="549" width="0.2616%" height="15" fill="rgb(242,149,17)" fg:x="94601" fg:w="766"/><text x="32.5516%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1,542 samples, 0.53%)</title><rect x="32.2248%" y="581" width="0.5265%" height="15" fill="rgb(244,29,21)" fg:x="94376" fg:w="1542"/><text x="32.4748%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (551 samples, 0.19%)</title><rect x="32.5631%" y="565" width="0.1881%" height="15" fill="rgb(220,130,37)" fg:x="95367" fg:w="551"/><text x="32.8131%" y="575.50"></text></g><g><title>&lt;hprof_slurp::gc_record::FieldType as core::hash::Hash&gt;::hash (39 samples, 0.01%)</title><rect x="32.7513%" y="581" width="0.0133%" height="15" fill="rgb(211,67,2)" fg:x="95918" fg:w="39"/><text x="33.0013%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (39 samples, 0.01%)</title><rect x="32.7513%" y="565" width="0.0133%" height="15" fill="rgb(235,68,52)" fg:x="95918" fg:w="39"/><text x="33.0013%" y="575.50"></text></g><g><title>core::hash::Hasher::write_isize (39 samples, 0.01%)</title><rect x="32.7513%" y="549" width="0.0133%" height="15" fill="rgb(246,142,3)" fg:x="95918" fg:w="39"/><text x="33.0013%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (39 samples, 0.01%)</title><rect x="32.7513%" y="533" width="0.0133%" height="15" fill="rgb(241,25,7)" fg:x="95918" fg:w="39"/><text x="33.0013%" y="543.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (39 samples, 0.01%)</title><rect x="32.7513%" y="517" width="0.0133%" height="15" fill="rgb(242,119,39)" fg:x="95918" fg:w="39"/><text x="33.0013%" y="527.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (39 samples, 0.01%)</title><rect x="32.7513%" y="501" width="0.0133%" height="15" fill="rgb(241,98,45)" fg:x="95918" fg:w="39"/><text x="33.0013%" y="511.50"></text></g><g><title>ahash::operations::folded_multiply (36 samples, 0.01%)</title><rect x="32.7523%" y="485" width="0.0123%" height="15" fill="rgb(254,28,30)" fg:x="95921" fg:w="36"/><text x="33.0023%" y="495.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (34 samples, 0.01%)</title><rect x="32.7530%" y="469" width="0.0116%" height="15" fill="rgb(241,142,54)" fg:x="95923" fg:w="34"/><text x="33.0030%" y="479.50"></text></g><g><title>hashbrown::map::make_insert_hash (2,374 samples, 0.81%)</title><rect x="32.2248%" y="597" width="0.8106%" height="15" fill="rgb(222,85,15)" fg:x="94376" fg:w="2374"/><text x="32.4748%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (793 samples, 0.27%)</title><rect x="32.7646%" y="581" width="0.2708%" height="15" fill="rgb(210,85,47)" fg:x="95957" fg:w="793"/><text x="33.0146%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (793 samples, 0.27%)</title><rect x="32.7646%" y="565" width="0.2708%" height="15" fill="rgb(224,206,25)" fg:x="95957" fg:w="793"/><text x="33.0146%" y="575.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (793 samples, 0.27%)</title><rect x="32.7646%" y="549" width="0.2708%" height="15" fill="rgb(243,201,19)" fg:x="95957" fg:w="793"/><text x="33.0146%" y="559.50"></text></g><g><title>ahash::operations::folded_multiply (753 samples, 0.26%)</title><rect x="32.7782%" y="533" width="0.2571%" height="15" fill="rgb(236,59,4)" fg:x="95997" fg:w="753"/><text x="33.0282%" y="543.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (682 samples, 0.23%)</title><rect x="32.8025%" y="517" width="0.2329%" height="15" fill="rgb(254,179,45)" fg:x="96068" fg:w="682"/><text x="33.0525%" y="527.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (301 samples, 0.10%)</title><rect x="34.4660%" y="533" width="0.1028%" height="15" fill="rgb(226,14,10)" fg:x="100940" fg:w="301"/><text x="34.7160%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,385 samples, 0.47%)</title><rect x="34.1352%" y="549" width="0.4729%" height="15" fill="rgb(244,27,41)" fg:x="99971" fg:w="1385"/><text x="34.3852%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (115 samples, 0.04%)</title><rect x="34.5688%" y="533" width="0.0393%" height="15" fill="rgb(235,35,32)" fg:x="101241" fg:w="115"/><text x="34.8188%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,809 samples, 0.62%)</title><rect x="34.0204%" y="581" width="0.6177%" height="15" fill="rgb(218,68,31)" fg:x="99635" fg:w="1809"/><text x="34.2704%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,809 samples, 0.62%)</title><rect x="34.0204%" y="565" width="0.6177%" height="15" fill="rgb(207,120,37)" fg:x="99635" fg:w="1809"/><text x="34.2704%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (75 samples, 0.03%)</title><rect x="34.6125%" y="549" width="0.0256%" height="15" fill="rgb(227,98,0)" fg:x="101369" fg:w="75"/><text x="34.8625%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (75 samples, 0.03%)</title><rect x="34.6125%" y="533" width="0.0256%" height="15" fill="rgb(207,7,3)" fg:x="101369" fg:w="75"/><text x="34.8625%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (75 samples, 0.03%)</title><rect x="34.6125%" y="517" width="0.0256%" height="15" fill="rgb(206,98,19)" fg:x="101369" fg:w="75"/><text x="34.8625%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (488 samples, 0.17%)</title><rect x="34.6842%" y="533" width="0.1666%" height="15" fill="rgb(217,5,26)" fg:x="101579" fg:w="488"/><text x="34.9342%" y="543.50"></text></g><g><title>hashbrown::raw::h2 (614 samples, 0.21%)</title><rect x="34.8509%" y="533" width="0.2097%" height="15" fill="rgb(235,190,38)" fg:x="102067" fg:w="614"/><text x="35.1009%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1,251 samples, 0.43%)</title><rect x="35.0605%" y="533" width="0.4272%" height="15" fill="rgb(247,86,24)" fg:x="102681" fg:w="1251"/><text x="35.3105%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,251 samples, 0.43%)</title><rect x="35.0605%" y="517" width="0.4272%" height="15" fill="rgb(205,101,16)" fg:x="102681" fg:w="1251"/><text x="35.3105%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,251 samples, 0.43%)</title><rect x="35.0605%" y="501" width="0.4272%" height="15" fill="rgb(246,168,33)" fg:x="102681" fg:w="1251"/><text x="35.3105%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3,081 samples, 1.05%)</title><rect x="34.6415%" y="581" width="1.0520%" height="15" fill="rgb(231,114,1)" fg:x="101454" fg:w="3081"/><text x="34.8915%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3,081 samples, 1.05%)</title><rect x="34.6415%" y="565" width="1.0520%" height="15" fill="rgb(207,184,53)" fg:x="101454" fg:w="3081"/><text x="34.8915%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3,081 samples, 1.05%)</title><rect x="34.6415%" y="549" width="1.0520%" height="15" fill="rgb(224,95,51)" fg:x="101454" fg:w="3081"/><text x="34.8915%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (603 samples, 0.21%)</title><rect x="35.4877%" y="533" width="0.2059%" height="15" fill="rgb(212,188,45)" fg:x="103932" fg:w="603"/><text x="35.7377%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (603 samples, 0.21%)</title><rect x="35.4877%" y="517" width="0.2059%" height="15" fill="rgb(223,154,38)" fg:x="103932" fg:w="603"/><text x="35.7377%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (603 samples, 0.21%)</title><rect x="35.4877%" y="501" width="0.2059%" height="15" fill="rgb(251,22,52)" fg:x="103932" fg:w="603"/><text x="35.7377%" y="511.50"></text></g><g><title>core::core_arch::simd::i8x16::new (603 samples, 0.21%)</title><rect x="35.4877%" y="485" width="0.2059%" height="15" fill="rgb(229,209,22)" fg:x="103932" fg:w="603"/><text x="35.7377%" y="495.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (3,644 samples, 1.24%)</title><rect x="35.6936%" y="581" width="1.2442%" height="15" fill="rgb(234,138,34)" fg:x="104535" fg:w="3644"/><text x="35.9436%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (3,644 samples, 1.24%)</title><rect x="35.6936%" y="565" width="1.2442%" height="15" fill="rgb(212,95,11)" fg:x="104535" fg:w="3644"/><text x="35.9436%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (45,905 samples, 15.67%)</title><rect x="21.2638%" y="661" width="15.6743%" height="15" fill="rgb(240,179,47)" fg:x="62275" fg:w="45905"/><text x="21.5138%" y="671.50">core::iter::traits::iter..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records::{{closure}} (27,888 samples, 9.52%)</title><rect x="27.4158%" y="645" width="9.5224%" height="15" fill="rgb(240,163,11)" fg:x="80292" fg:w="27888"/><text x="27.6658%" y="655.50">hprof_slurp::r..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (13,804 samples, 4.71%)</title><rect x="32.2248%" y="629" width="4.7134%" height="15" fill="rgb(236,37,12)" fg:x="94376" fg:w="13804"/><text x="32.4748%" y="639.50">std::..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (13,804 samples, 4.71%)</title><rect x="32.2248%" y="613" width="4.7134%" height="15" fill="rgb(232,164,16)" fg:x="94376" fg:w="13804"/><text x="32.4748%" y="623.50">hashb..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11,430 samples, 3.90%)</title><rect x="33.0354%" y="597" width="3.9028%" height="15" fill="rgb(244,205,15)" fg:x="96750" fg:w="11430"/><text x="33.2854%" y="607.50">hash..</text></g><g><title>free_unref_page_list (135 samples, 0.05%)</title><rect x="36.9853%" y="357" width="0.0461%" height="15" fill="rgb(223,117,47)" fg:x="108318" fg:w="135"/><text x="37.2353%" y="367.50"></text></g><g><title>free_unref_page_commit (111 samples, 0.04%)</title><rect x="36.9935%" y="341" width="0.0379%" height="15" fill="rgb(244,107,35)" fg:x="108342" fg:w="111"/><text x="37.2435%" y="351.50"></text></g><g><title>free_pcppages_bulk (98 samples, 0.03%)</title><rect x="36.9979%" y="325" width="0.0335%" height="15" fill="rgb(205,140,8)" fg:x="108355" fg:w="98"/><text x="37.2479%" y="335.50"></text></g><g><title>__free_one_page (76 samples, 0.03%)</title><rect x="37.0054%" y="309" width="0.0260%" height="15" fill="rgb(228,84,46)" fg:x="108377" fg:w="76"/><text x="37.2554%" y="319.50"></text></g><g><title>tlb_finish_mmu (256 samples, 0.09%)</title><rect x="36.9494%" y="405" width="0.0874%" height="15" fill="rgb(254,188,9)" fg:x="108213" fg:w="256"/><text x="37.1994%" y="415.50"></text></g><g><title>free_pages_and_swap_cache (247 samples, 0.08%)</title><rect x="36.9525%" y="389" width="0.0843%" height="15" fill="rgb(206,112,54)" fg:x="108222" fg:w="247"/><text x="37.2025%" y="399.50"></text></g><g><title>release_pages (215 samples, 0.07%)</title><rect x="36.9634%" y="373" width="0.0734%" height="15" fill="rgb(216,84,49)" fg:x="108254" fg:w="215"/><text x="37.2134%" y="383.50"></text></g><g><title>page_remove_rmap (32 samples, 0.01%)</title><rect x="37.0495%" y="341" width="0.0109%" height="15" fill="rgb(214,194,35)" fg:x="108506" fg:w="32"/><text x="37.2995%" y="351.50"></text></g><g><title>vm_normal_page (43 samples, 0.01%)</title><rect x="37.0607%" y="341" width="0.0147%" height="15" fill="rgb(249,28,3)" fg:x="108539" fg:w="43"/><text x="37.3107%" y="351.50"></text></g><g><title>__mod_lruvec_page_state (42 samples, 0.01%)</title><rect x="38.5508%" y="325" width="0.0143%" height="15" fill="rgb(222,56,52)" fg:x="112903" fg:w="42"/><text x="38.8008%" y="335.50"></text></g><g><title>__tlb_remove_page_size (71 samples, 0.02%)</title><rect x="38.5652%" y="325" width="0.0242%" height="15" fill="rgb(245,217,50)" fg:x="112945" fg:w="71"/><text x="38.8152%" y="335.50"></text></g><g><title>lock_page_memcg (45 samples, 0.02%)</title><rect x="38.5966%" y="325" width="0.0154%" height="15" fill="rgb(213,201,24)" fg:x="113037" fg:w="45"/><text x="38.8466%" y="335.50"></text></g><g><title>__mod_memcg_state.part.0 (73 samples, 0.02%)</title><rect x="39.0265%" y="261" width="0.0249%" height="15" fill="rgb(248,116,28)" fg:x="114296" fg:w="73"/><text x="39.2765%" y="271.50"></text></g><g><title>cgroup_rstat_updated (54 samples, 0.02%)</title><rect x="39.0329%" y="245" width="0.0184%" height="15" fill="rgb(219,72,43)" fg:x="114315" fg:w="54"/><text x="39.2829%" y="255.50"></text></g><g><title>__mod_memcg_lruvec_state (369 samples, 0.13%)</title><rect x="38.9390%" y="277" width="0.1260%" height="15" fill="rgb(209,138,14)" fg:x="114040" fg:w="369"/><text x="39.1890%" y="287.50"></text></g><g><title>cgroup_rstat_updated (39 samples, 0.01%)</title><rect x="39.0517%" y="261" width="0.0133%" height="15" fill="rgb(222,18,33)" fg:x="114370" fg:w="39"/><text x="39.3017%" y="271.50"></text></g><g><title>__mod_memcg_state.part.0 (63 samples, 0.02%)</title><rect x="39.0650%" y="277" width="0.0215%" height="15" fill="rgb(213,199,7)" fg:x="114409" fg:w="63"/><text x="39.3150%" y="287.50"></text></g><g><title>__mod_node_page_state (70 samples, 0.02%)</title><rect x="39.0866%" y="277" width="0.0239%" height="15" fill="rgb(250,110,10)" fg:x="114472" fg:w="70"/><text x="39.3366%" y="287.50"></text></g><g><title>__mod_lruvec_state (604 samples, 0.21%)</title><rect x="38.9046%" y="293" width="0.2062%" height="15" fill="rgb(248,123,6)" fg:x="113939" fg:w="604"/><text x="39.1546%" y="303.50"></text></g><g><title>__mod_node_page_state (65 samples, 0.02%)</title><rect x="39.1186%" y="293" width="0.0222%" height="15" fill="rgb(206,91,31)" fg:x="114566" fg:w="65"/><text x="39.3686%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (843 samples, 0.29%)</title><rect x="38.8612%" y="309" width="0.2878%" height="15" fill="rgb(211,154,13)" fg:x="113812" fg:w="843"/><text x="39.1112%" y="319.50"></text></g><g><title>lock_page_memcg (99 samples, 0.03%)</title><rect x="39.1562%" y="309" width="0.0338%" height="15" fill="rgb(225,148,7)" fg:x="114676" fg:w="99"/><text x="39.4062%" y="319.50"></text></g><g><title>rcu_read_unlock_strict (37 samples, 0.01%)</title><rect x="39.1900%" y="309" width="0.0126%" height="15" fill="rgb(220,160,43)" fg:x="114775" fg:w="37"/><text x="39.4400%" y="319.50"></text></g><g><title>page_remove_rmap (1,787 samples, 0.61%)</title><rect x="38.6119%" y="325" width="0.6102%" height="15" fill="rgb(213,52,39)" fg:x="113082" fg:w="1787"/><text x="38.8619%" y="335.50"></text></g><g><title>unlock_page_memcg (57 samples, 0.02%)</title><rect x="39.2026%" y="309" width="0.0195%" height="15" fill="rgb(243,137,7)" fg:x="114812" fg:w="57"/><text x="39.4526%" y="319.50"></text></g><g><title>__mod_lruvec_state (32 samples, 0.01%)</title><rect x="39.4816%" y="293" width="0.0109%" height="15" fill="rgb(230,79,13)" fg:x="115629" fg:w="32"/><text x="39.7316%" y="303.50"></text></g><g><title>__mod_zone_page_state (76 samples, 0.03%)</title><rect x="39.4925%" y="293" width="0.0260%" height="15" fill="rgb(247,105,23)" fg:x="115661" fg:w="76"/><text x="39.7425%" y="303.50"></text></g><g><title>__mod_memcg_state.part.0 (69 samples, 0.02%)</title><rect x="40.0310%" y="245" width="0.0236%" height="15" fill="rgb(223,179,41)" fg:x="117238" fg:w="69"/><text x="40.2810%" y="255.50"></text></g><g><title>cgroup_rstat_updated (51 samples, 0.02%)</title><rect x="40.0371%" y="229" width="0.0174%" height="15" fill="rgb(218,9,34)" fg:x="117256" fg:w="51"/><text x="40.2871%" y="239.50"></text></g><g><title>__mod_memcg_lruvec_state (362 samples, 0.12%)</title><rect x="39.9361%" y="261" width="0.1236%" height="15" fill="rgb(222,106,8)" fg:x="116960" fg:w="362"/><text x="40.1861%" y="271.50"></text></g><g><title>__mod_memcg_state.part.0 (55 samples, 0.02%)</title><rect x="40.0597%" y="261" width="0.0188%" height="15" fill="rgb(211,220,0)" fg:x="117322" fg:w="55"/><text x="40.3097%" y="271.50"></text></g><g><title>__mod_lruvec_state (583 samples, 0.20%)</title><rect x="39.9091%" y="277" width="0.1991%" height="15" fill="rgb(229,52,16)" fg:x="116881" fg:w="583"/><text x="40.1591%" y="287.50"></text></g><g><title>__mod_node_page_state (87 samples, 0.03%)</title><rect x="40.0785%" y="261" width="0.0297%" height="15" fill="rgb(212,155,18)" fg:x="117377" fg:w="87"/><text x="40.3285%" y="271.50"></text></g><g><title>__mod_node_page_state (82 samples, 0.03%)</title><rect x="40.1147%" y="277" width="0.0280%" height="15" fill="rgb(242,21,14)" fg:x="117483" fg:w="82"/><text x="40.3647%" y="287.50"></text></g><g><title>__mod_zone_page_state (77 samples, 0.03%)</title><rect x="40.1427%" y="277" width="0.0263%" height="15" fill="rgb(222,19,48)" fg:x="117565" fg:w="77"/><text x="40.3927%" y="287.50"></text></g><g><title>free_pcp_prepare (35 samples, 0.01%)</title><rect x="40.1707%" y="277" width="0.0120%" height="15" fill="rgb(232,45,27)" fg:x="117647" fg:w="35"/><text x="40.4207%" y="287.50"></text></g><g><title>free_unref_page_commit (39 samples, 0.01%)</title><rect x="40.1826%" y="277" width="0.0133%" height="15" fill="rgb(249,103,42)" fg:x="117682" fg:w="39"/><text x="40.4326%" y="287.50"></text></g><g><title>free_pcp_prepare (116 samples, 0.04%)</title><rect x="40.3284%" y="261" width="0.0396%" height="15" fill="rgb(246,81,33)" fg:x="118109" fg:w="116"/><text x="40.5784%" y="271.50"></text></g><g><title>__free_one_page (2,105 samples, 0.72%)</title><rect x="40.7931%" y="229" width="0.7188%" height="15" fill="rgb(252,33,42)" fg:x="119470" fg:w="2105"/><text x="41.0431%" y="239.50"></text></g><g><title>__mod_zone_page_state (82 samples, 0.03%)</title><rect x="41.4839%" y="213" width="0.0280%" height="15" fill="rgb(209,212,41)" fg:x="121493" fg:w="82"/><text x="41.7339%" y="223.50"></text></g><g><title>__mod_zone_page_state (42 samples, 0.01%)</title><rect x="41.5119%" y="229" width="0.0143%" height="15" fill="rgb(207,154,6)" fg:x="121575" fg:w="42"/><text x="41.7619%" y="239.50"></text></g><g><title>free_unref_page_list (3,949 samples, 1.35%)</title><rect x="40.1959%" y="277" width="1.3484%" height="15" fill="rgb(223,64,47)" fg:x="117721" fg:w="3949"/><text x="40.4459%" y="287.50"></text></g><g><title>free_unref_page_commit (3,443 samples, 1.18%)</title><rect x="40.3687%" y="261" width="1.1756%" height="15" fill="rgb(211,161,38)" fg:x="118227" fg:w="3443"/><text x="40.6187%" y="271.50"></text></g><g><title>free_pcppages_bulk (3,082 samples, 1.05%)</title><rect x="40.4920%" y="245" width="1.0524%" height="15" fill="rgb(219,138,40)" fg:x="118588" fg:w="3082"/><text x="40.7420%" y="255.50"></text></g><g><title>_raw_spin_lock (53 samples, 0.02%)</title><rect x="41.5262%" y="229" width="0.0181%" height="15" fill="rgb(241,228,46)" fg:x="121617" fg:w="53"/><text x="41.7762%" y="239.50"></text></g><g><title>native_queued_spin_lock_slowpath (53 samples, 0.02%)</title><rect x="41.5262%" y="213" width="0.0181%" height="15" fill="rgb(223,209,38)" fg:x="121617" fg:w="53"/><text x="41.7762%" y="223.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (53 samples, 0.02%)</title><rect x="41.5262%" y="197" width="0.0181%" height="15" fill="rgb(236,164,45)" fg:x="121617" fg:w="53"/><text x="41.7762%" y="207.50"></text></g><g><title>_raw_spin_lock_irqsave (141 samples, 0.05%)</title><rect x="41.5464%" y="261" width="0.0481%" height="15" fill="rgb(231,15,5)" fg:x="121676" fg:w="141"/><text x="41.7964%" y="271.50"></text></g><g><title>native_queued_spin_lock_slowpath (119 samples, 0.04%)</title><rect x="41.5539%" y="245" width="0.0406%" height="15" fill="rgb(252,35,15)" fg:x="121698" fg:w="119"/><text x="41.8039%" y="255.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (119 samples, 0.04%)</title><rect x="41.5539%" y="229" width="0.0406%" height="15" fill="rgb(248,181,18)" fg:x="121698" fg:w="119"/><text x="41.8039%" y="239.50"></text></g><g><title>lock_page_lruvec_irqsave (148 samples, 0.05%)</title><rect x="41.5443%" y="277" width="0.0505%" height="15" fill="rgb(233,39,42)" fg:x="121670" fg:w="148"/><text x="41.7943%" y="287.50"></text></g><g><title>mem_cgroup_uncharge_list (416 samples, 0.14%)</title><rect x="41.5948%" y="277" width="0.1420%" height="15" fill="rgb(238,110,33)" fg:x="121818" fg:w="416"/><text x="41.8448%" y="287.50"></text></g><g><title>uncharge_page (332 samples, 0.11%)</title><rect x="41.6235%" y="261" width="0.1134%" height="15" fill="rgb(233,195,10)" fg:x="121902" fg:w="332"/><text x="41.8735%" y="271.50"></text></g><g><title>mem_cgroup_update_lru_size (84 samples, 0.03%)</title><rect x="41.7369%" y="277" width="0.0287%" height="15" fill="rgb(254,105,3)" fg:x="122234" fg:w="84"/><text x="41.9869%" y="287.50"></text></g><g><title>free_pages_and_swap_cache (7,457 samples, 2.55%)</title><rect x="39.2231%" y="309" width="2.5462%" height="15" fill="rgb(221,225,9)" fg:x="114872" fg:w="7457"/><text x="39.4731%" y="319.50">fr..</text></g><g><title>release_pages (6,566 samples, 2.24%)</title><rect x="39.5274%" y="293" width="2.2420%" height="15" fill="rgb(224,227,45)" fg:x="115763" fg:w="6566"/><text x="39.7774%" y="303.50">r..</text></g><g><title>tlb_flush_mmu (7,460 samples, 2.55%)</title><rect x="39.2224%" y="325" width="2.5472%" height="15" fill="rgb(229,198,43)" fg:x="114870" fg:w="7460"/><text x="39.4724%" y="335.50">tl..</text></g><g><title>unlock_page_memcg (46 samples, 0.02%)</title><rect x="41.7697%" y="325" width="0.0157%" height="15" fill="rgb(206,209,35)" fg:x="122330" fg:w="46"/><text x="42.0197%" y="335.50"></text></g><g><title>unmap_region (14,294 samples, 4.88%)</title><rect x="36.9399%" y="421" width="4.8807%" height="15" fill="rgb(245,195,53)" fg:x="108185" fg:w="14294"/><text x="37.1899%" y="431.50">unmap_..</text></g><g><title>unmap_vmas (14,010 samples, 4.78%)</title><rect x="37.0368%" y="405" width="4.7837%" height="15" fill="rgb(240,92,26)" fg:x="108469" fg:w="14010"/><text x="37.2868%" y="415.50">unmap_..</text></g><g><title>unmap_single_vma (14,010 samples, 4.78%)</title><rect x="37.0368%" y="389" width="4.7837%" height="15" fill="rgb(207,40,23)" fg:x="108469" fg:w="14010"/><text x="37.2868%" y="399.50">unmap_..</text></g><g><title>unmap_page_range (14,010 samples, 4.78%)</title><rect x="37.0368%" y="373" width="4.7837%" height="15" fill="rgb(223,111,35)" fg:x="108469" fg:w="14010"/><text x="37.2868%" y="383.50">unmap_..</text></g><g><title>zap_pmd_range.isra.0 (14,009 samples, 4.78%)</title><rect x="37.0372%" y="357" width="4.7834%" height="15" fill="rgb(229,147,28)" fg:x="108470" fg:w="14009"/><text x="37.2872%" y="367.50">zap_pm..</text></g><g><title>zap_pte_range (13,897 samples, 4.75%)</title><rect x="37.0754%" y="341" width="4.7451%" height="15" fill="rgb(211,29,28)" fg:x="108582" fg:w="13897"/><text x="37.3254%" y="351.50">zap_pt..</text></g><g><title>vm_normal_page (103 samples, 0.04%)</title><rect x="41.7854%" y="325" width="0.0352%" height="15" fill="rgb(228,72,33)" fg:x="122376" fg:w="103"/><text x="42.0354%" y="335.50"></text></g><g><title>__do_munmap (14,298 samples, 4.88%)</title><rect x="36.9388%" y="437" width="4.8821%" height="15" fill="rgb(205,214,31)" fg:x="108182" fg:w="14298"/><text x="37.1888%" y="447.50">__do_m..</text></g><g><title>__GI___munmap (14,302 samples, 4.88%)</title><rect x="36.9385%" y="517" width="4.8834%" height="15" fill="rgb(224,111,15)" fg:x="108181" fg:w="14302"/><text x="37.1885%" y="527.50">__GI__..</text></g><g><title>entry_SYSCALL_64_after_hwframe (14,302 samples, 4.88%)</title><rect x="36.9385%" y="501" width="4.8834%" height="15" fill="rgb(253,21,26)" fg:x="108181" fg:w="14302"/><text x="37.1885%" y="511.50">entry_..</text></g><g><title>do_syscall_64 (14,302 samples, 4.88%)</title><rect x="36.9385%" y="485" width="4.8834%" height="15" fill="rgb(245,139,43)" fg:x="108181" fg:w="14302"/><text x="37.1885%" y="495.50">do_sys..</text></g><g><title>__x64_sys_munmap (14,301 samples, 4.88%)</title><rect x="36.9388%" y="469" width="4.8831%" height="15" fill="rgb(252,170,7)" fg:x="108182" fg:w="14301"/><text x="37.1888%" y="479.50">__x64_..</text></g><g><title>__vm_munmap (14,301 samples, 4.88%)</title><rect x="36.9388%" y="453" width="4.8831%" height="15" fill="rgb(231,118,14)" fg:x="108182" fg:w="14301"/><text x="37.1888%" y="463.50">__vm_m..</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::record_records (61,633 samples, 21.04%)</title><rect x="20.7776%" y="709" width="21.0446%" height="15" fill="rgb(238,83,0)" fg:x="60851" fg:w="61633"/><text x="21.0276%" y="719.50">hprof_slurp::result_recorder::Res..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (61,633 samples, 21.04%)</title><rect x="20.7776%" y="693" width="21.0446%" height="15" fill="rgb(221,39,39)" fg:x="60851" fg:w="61633"/><text x="21.0276%" y="703.50">core::iter::traits::iterator::Ite..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (61,633 samples, 21.04%)</title><rect x="20.7776%" y="677" width="21.0446%" height="15" fill="rgb(222,119,46)" fg:x="60851" fg:w="61633"/><text x="21.0276%" y="687.50">core::iter::traits::iterator::Ite..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;hprof_slurp::record::Record&gt;&gt; (14,304 samples, 4.88%)</title><rect x="36.9381%" y="661" width="4.8841%" height="15" fill="rgb(222,165,49)" fg:x="108180" fg:w="14304"/><text x="37.1881%" y="671.50">core::..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,304 samples, 4.88%)</title><rect x="36.9381%" y="645" width="4.8841%" height="15" fill="rgb(219,113,52)" fg:x="108180" fg:w="14304"/><text x="37.1881%" y="655.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;hprof_slurp::record::Record,alloc::alloc::Global&gt;&gt; (14,304 samples, 4.88%)</title><rect x="36.9381%" y="629" width="4.8841%" height="15" fill="rgb(214,7,15)" fg:x="108180" fg:w="14304"/><text x="37.1881%" y="639.50">core::..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,304 samples, 4.88%)</title><rect x="36.9381%" y="613" width="4.8841%" height="15" fill="rgb(235,32,4)" fg:x="108180" fg:w="14304"/><text x="37.1881%" y="623.50">&lt;&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;hprof_slurp::record::Record&gt;&gt; (14,304 samples, 4.88%)</title><rect x="36.9381%" y="597" width="4.8841%" height="15" fill="rgb(238,90,54)" fg:x="108180" fg:w="14304"/><text x="37.1881%" y="607.50">core::..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14,304 samples, 4.88%)</title><rect x="36.9381%" y="581" width="4.8841%" height="15" fill="rgb(213,208,19)" fg:x="108180" fg:w="14304"/><text x="37.1881%" y="591.50">&lt;alloc..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14,304 samples, 4.88%)</title><rect x="36.9381%" y="565" width="4.8841%" height="15" fill="rgb(233,156,4)" fg:x="108180" fg:w="14304"/><text x="37.1881%" y="575.50">&lt;alloc..</text></g><g><title>alloc::alloc::dealloc (14,304 samples, 4.88%)</title><rect x="36.9381%" y="549" width="4.8841%" height="15" fill="rgb(207,194,5)" fg:x="108180" fg:w="14304"/><text x="37.1881%" y="559.50">alloc:..</text></g><g><title>__free (14,304 samples, 4.88%)</title><rect x="36.9381%" y="533" width="4.8841%" height="15" fill="rgb(206,111,30)" fg:x="108180" fg:w="14304"/><text x="37.1881%" y="543.50">__free</text></g><g><title>std::panic::catch_unwind (114,054 samples, 38.94%)</title><rect x="2.8849%" y="821" width="38.9438%" height="15" fill="rgb(243,70,54)" fg:x="8449" fg:w="114054"/><text x="3.1349%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (114,054 samples, 38.94%)</title><rect x="2.8849%" y="805" width="38.9438%" height="15" fill="rgb(242,28,8)" fg:x="8449" fg:w="114054"/><text x="3.1349%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (114,054 samples, 38.94%)</title><rect x="2.8849%" y="789" width="38.9438%" height="15" fill="rgb(219,106,18)" fg:x="8449" fg:w="114054"/><text x="3.1349%" y="799.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (114,054 samples, 38.94%)</title><rect x="2.8849%" y="773" width="38.9438%" height="15" fill="rgb(244,222,10)" fg:x="8449" fg:w="114054"/><text x="3.1349%" y="783.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::fun..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (114,054 samples, 38.94%)</title><rect x="2.8849%" y="757" width="38.9438%" height="15" fill="rgb(236,179,52)" fg:x="8449" fg:w="114054"/><text x="3.1349%" y="767.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (114,054 samples, 38.94%)</title><rect x="2.8849%" y="741" width="38.9438%" height="15" fill="rgb(213,23,39)" fg:x="8449" fg:w="114054"/><text x="3.1349%" y="751.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>hprof_slurp::result_recorder::ResultRecorder::start_recorder::{{closure}} (61,677 samples, 21.06%)</title><rect x="20.7691%" y="725" width="21.0597%" height="15" fill="rgb(238,48,10)" fg:x="60826" fg:w="61677"/><text x="21.0191%" y="735.50">hprof_slurp::result_recorder::Res..</text></g><g><title>__GI___clone (114,082 samples, 38.95%)</title><rect x="2.8760%" y="933" width="38.9534%" height="15" fill="rgb(251,196,23)" fg:x="8423" fg:w="114082"/><text x="3.1260%" y="943.50">__GI___clone</text></g><g><title>start_thread (114,072 samples, 38.95%)</title><rect x="2.8795%" y="917" width="38.9500%" height="15" fill="rgb(250,152,24)" fg:x="8433" fg:w="114072"/><text x="3.1295%" y="927.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (114,056 samples, 38.94%)</title><rect x="2.8849%" y="901" width="38.9445%" height="15" fill="rgb(209,150,17)" fg:x="8449" fg:w="114056"/><text x="3.1349%" y="911.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (114,056 samples, 38.94%)</title><rect x="2.8849%" y="885" width="38.9445%" height="15" fill="rgb(234,202,34)" fg:x="8449" fg:w="114056"/><text x="3.1349%" y="895.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::c..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (114,056 samples, 38.94%)</title><rect x="2.8849%" y="869" width="38.9445%" height="15" fill="rgb(253,148,53)" fg:x="8449" fg:w="114056"/><text x="3.1349%" y="879.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::c..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (114,056 samples, 38.94%)</title><rect x="2.8849%" y="853" width="38.9445%" height="15" fill="rgb(218,129,16)" fg:x="8449" fg:w="114056"/><text x="3.1349%" y="863.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (114,056 samples, 38.94%)</title><rect x="2.8849%" y="837" width="38.9445%" height="15" fill="rgb(216,85,19)" fg:x="8449" fg:w="114056"/><text x="3.1349%" y="847.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>__irqentry_text_end (63 samples, 0.02%)</title><rect x="41.8298%" y="933" width="0.0215%" height="15" fill="rgb(235,228,7)" fg:x="122506" fg:w="63"/><text x="42.0798%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7,891 samples, 2.69%)</title><rect x="41.8516%" y="581" width="2.6944%" height="15" fill="rgb(245,175,0)" fg:x="122570" fg:w="7891"/><text x="42.1016%" y="591.50">al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7,891 samples, 2.69%)</title><rect x="41.8516%" y="565" width="2.6944%" height="15" fill="rgb(208,168,36)" fg:x="122570" fg:w="7891"/><text x="42.1016%" y="575.50">&lt;a..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7,891 samples, 2.69%)</title><rect x="41.8516%" y="549" width="2.6944%" height="15" fill="rgb(246,171,24)" fg:x="122570" fg:w="7891"/><text x="42.1016%" y="559.50">al..</text></g><g><title>core::intrinsics::copy_nonoverlapping (7,891 samples, 2.69%)</title><rect x="41.8516%" y="533" width="2.6944%" height="15" fill="rgb(215,142,24)" fg:x="122570" fg:w="7891"/><text x="42.1016%" y="543.50">co..</text></g><g><title>__memcpy_avx_unaligned_erms (7,891 samples, 2.69%)</title><rect x="41.8516%" y="517" width="2.6944%" height="15" fill="rgb(250,187,7)" fg:x="122570" fg:w="7891"/><text x="42.1016%" y="527.50">__..</text></g><g><title>__mod_memcg_lruvec_state (31 samples, 0.01%)</title><rect x="44.6467%" y="309" width="0.0106%" height="15" fill="rgb(228,66,33)" fg:x="130756" fg:w="31"/><text x="44.8967%" y="319.50"></text></g><g><title>__mod_lruvec_state (60 samples, 0.02%)</title><rect x="44.6426%" y="325" width="0.0205%" height="15" fill="rgb(234,215,21)" fg:x="130744" fg:w="60"/><text x="44.8926%" y="335.50"></text></g><g><title>__free_one_page (282 samples, 0.10%)</title><rect x="44.7345%" y="277" width="0.0963%" height="15" fill="rgb(222,191,20)" fg:x="131013" fg:w="282"/><text x="44.9845%" y="287.50"></text></g><g><title>free_unref_page_list (472 samples, 0.16%)</title><rect x="44.6723%" y="325" width="0.1612%" height="15" fill="rgb(245,79,54)" fg:x="130831" fg:w="472"/><text x="44.9223%" y="335.50"></text></g><g><title>free_unref_page_commit (414 samples, 0.14%)</title><rect x="44.6921%" y="309" width="0.1414%" height="15" fill="rgb(240,10,37)" fg:x="130889" fg:w="414"/><text x="44.9421%" y="319.50"></text></g><g><title>free_pcppages_bulk (376 samples, 0.13%)</title><rect x="44.7051%" y="293" width="0.1284%" height="15" fill="rgb(214,192,32)" fg:x="130927" fg:w="376"/><text x="44.9551%" y="303.50"></text></g><g><title>mem_cgroup_uncharge_list (50 samples, 0.02%)</title><rect x="44.8352%" y="325" width="0.0171%" height="15" fill="rgb(209,36,54)" fg:x="131308" fg:w="50"/><text x="45.0852%" y="335.50"></text></g><g><title>uncharge_page (39 samples, 0.01%)</title><rect x="44.8390%" y="309" width="0.0133%" height="15" fill="rgb(220,10,11)" fg:x="131319" fg:w="39"/><text x="45.0890%" y="319.50"></text></g><g><title>tlb_finish_mmu (904 samples, 0.31%)</title><rect x="44.5498%" y="373" width="0.3087%" height="15" fill="rgb(221,106,17)" fg:x="130472" fg:w="904"/><text x="44.7998%" y="383.50"></text></g><g><title>free_pages_and_swap_cache (901 samples, 0.31%)</title><rect x="44.5508%" y="357" width="0.3076%" height="15" fill="rgb(251,142,44)" fg:x="130475" fg:w="901"/><text x="44.8008%" y="367.50"></text></g><g><title>release_pages (793 samples, 0.27%)</title><rect x="44.5877%" y="341" width="0.2708%" height="15" fill="rgb(238,13,15)" fg:x="130583" fg:w="793"/><text x="44.8377%" y="351.50"></text></g><g><title>__tlb_remove_page_size (31 samples, 0.01%)</title><rect x="45.2712%" y="293" width="0.0106%" height="15" fill="rgb(208,107,27)" fg:x="132585" fg:w="31"/><text x="45.5212%" y="303.50"></text></g><g><title>__mod_memcg_state.part.0 (41 samples, 0.01%)</title><rect x="45.4188%" y="229" width="0.0140%" height="15" fill="rgb(205,136,37)" fg:x="133017" fg:w="41"/><text x="45.6688%" y="239.50"></text></g><g><title>__mod_memcg_lruvec_state (137 samples, 0.05%)</title><rect x="45.3901%" y="245" width="0.0468%" height="15" fill="rgb(250,205,27)" fg:x="132933" fg:w="137"/><text x="45.6401%" y="255.50"></text></g><g><title>__mod_memcg_state.part.0 (33 samples, 0.01%)</title><rect x="45.4369%" y="245" width="0.0113%" height="15" fill="rgb(210,80,43)" fg:x="133070" fg:w="33"/><text x="45.6869%" y="255.50"></text></g><g><title>__mod_lruvec_state (229 samples, 0.08%)</title><rect x="45.3781%" y="261" width="0.0782%" height="15" fill="rgb(247,160,36)" fg:x="132898" fg:w="229"/><text x="45.6281%" y="271.50"></text></g><g><title>__mod_lruvec_page_state (309 samples, 0.11%)</title><rect x="45.3617%" y="277" width="0.1055%" height="15" fill="rgb(234,13,49)" fg:x="132850" fg:w="309"/><text x="45.6117%" y="287.50"></text></g><g><title>lock_page_memcg (41 samples, 0.01%)</title><rect x="45.4686%" y="277" width="0.0140%" height="15" fill="rgb(234,122,0)" fg:x="133163" fg:w="41"/><text x="45.7186%" y="287.50"></text></g><g><title>page_remove_rmap (619 samples, 0.21%)</title><rect x="45.2859%" y="293" width="0.2114%" height="15" fill="rgb(207,146,38)" fg:x="132628" fg:w="619"/><text x="45.5359%" y="303.50"></text></g><g><title>unlock_page_memcg (35 samples, 0.01%)</title><rect x="45.4853%" y="277" width="0.0120%" height="15" fill="rgb(207,177,25)" fg:x="133212" fg:w="35"/><text x="45.7353%" y="287.50"></text></g><g><title>__mod_memcg_lruvec_state (68 samples, 0.02%)</title><rect x="45.6349%" y="229" width="0.0232%" height="15" fill="rgb(211,178,42)" fg:x="133650" fg:w="68"/><text x="45.8849%" y="239.50"></text></g><g><title>__mod_lruvec_state (100 samples, 0.03%)</title><rect x="45.6305%" y="245" width="0.0341%" height="15" fill="rgb(230,69,54)" fg:x="133637" fg:w="100"/><text x="45.8805%" y="255.50"></text></g><g><title>__free_one_page (384 samples, 0.13%)</title><rect x="45.7909%" y="197" width="0.1311%" height="15" fill="rgb(214,135,41)" fg:x="134107" fg:w="384"/><text x="46.0409%" y="207.50"></text></g><g><title>free_unref_page_list (714 samples, 0.24%)</title><rect x="45.6824%" y="245" width="0.2438%" height="15" fill="rgb(237,67,25)" fg:x="133789" fg:w="714"/><text x="45.9324%" y="255.50"></text></g><g><title>free_unref_page_commit (618 samples, 0.21%)</title><rect x="45.7151%" y="229" width="0.2110%" height="15" fill="rgb(222,189,50)" fg:x="133885" fg:w="618"/><text x="45.9651%" y="239.50"></text></g><g><title>free_pcppages_bulk (552 samples, 0.19%)</title><rect x="45.7377%" y="213" width="0.1885%" height="15" fill="rgb(245,148,34)" fg:x="133951" fg:w="552"/><text x="45.9877%" y="223.50"></text></g><g><title>mem_cgroup_uncharge_list (74 samples, 0.03%)</title><rect x="45.9272%" y="245" width="0.0253%" height="15" fill="rgb(222,29,6)" fg:x="134506" fg:w="74"/><text x="46.1772%" y="255.50"></text></g><g><title>uncharge_page (59 samples, 0.02%)</title><rect x="45.9323%" y="229" width="0.0201%" height="15" fill="rgb(221,189,43)" fg:x="134521" fg:w="59"/><text x="46.1823%" y="239.50"></text></g><g><title>tlb_flush_mmu (1,358 samples, 0.46%)</title><rect x="45.4980%" y="293" width="0.4637%" height="15" fill="rgb(207,36,27)" fg:x="133249" fg:w="1358"/><text x="45.7480%" y="303.50"></text></g><g><title>free_pages_and_swap_cache (1,353 samples, 0.46%)</title><rect x="45.4997%" y="277" width="0.4620%" height="15" fill="rgb(217,90,24)" fg:x="133254" fg:w="1353"/><text x="45.7497%" y="287.50"></text></g><g><title>release_pages (1,176 samples, 0.40%)</title><rect x="45.5601%" y="261" width="0.4015%" height="15" fill="rgb(224,66,35)" fg:x="133431" fg:w="1176"/><text x="45.8101%" y="271.50"></text></g><g><title>__vm_munmap (4,193 samples, 1.43%)</title><rect x="44.5460%" y="421" width="1.4317%" height="15" fill="rgb(221,13,50)" fg:x="130461" fg:w="4193"/><text x="44.7960%" y="431.50"></text></g><g><title>__do_munmap (4,193 samples, 1.43%)</title><rect x="44.5460%" y="405" width="1.4317%" height="15" fill="rgb(236,68,49)" fg:x="130461" fg:w="4193"/><text x="44.7960%" y="415.50"></text></g><g><title>unmap_region (4,186 samples, 1.43%)</title><rect x="44.5484%" y="389" width="1.4293%" height="15" fill="rgb(229,146,28)" fg:x="130468" fg:w="4186"/><text x="44.7984%" y="399.50"></text></g><g><title>unmap_vmas (3,277 samples, 1.12%)</title><rect x="44.8588%" y="373" width="1.1189%" height="15" fill="rgb(225,31,38)" fg:x="131377" fg:w="3277"/><text x="45.1088%" y="383.50"></text></g><g><title>unmap_single_vma (3,277 samples, 1.12%)</title><rect x="44.8588%" y="357" width="1.1189%" height="15" fill="rgb(250,208,3)" fg:x="131377" fg:w="3277"/><text x="45.1088%" y="367.50"></text></g><g><title>unmap_page_range (3,277 samples, 1.12%)</title><rect x="44.8588%" y="341" width="1.1189%" height="15" fill="rgb(246,54,23)" fg:x="131377" fg:w="3277"/><text x="45.1088%" y="351.50"></text></g><g><title>zap_pmd_range.isra.0 (3,275 samples, 1.12%)</title><rect x="44.8595%" y="325" width="1.1183%" height="15" fill="rgb(243,76,11)" fg:x="131379" fg:w="3275"/><text x="45.1095%" y="335.50"></text></g><g><title>zap_pte_range (3,244 samples, 1.11%)</title><rect x="44.8700%" y="309" width="1.1077%" height="15" fill="rgb(245,21,50)" fg:x="131410" fg:w="3244"/><text x="45.1200%" y="319.50"></text></g><g><title>vm_normal_page (31 samples, 0.01%)</title><rect x="45.9671%" y="293" width="0.0106%" height="15" fill="rgb(228,9,43)" fg:x="134623" fg:w="31"/><text x="46.2171%" y="303.50"></text></g><g><title>__x64_sys_munmap (4,195 samples, 1.43%)</title><rect x="44.5460%" y="437" width="1.4324%" height="15" fill="rgb(208,100,47)" fg:x="130461" fg:w="4195"/><text x="44.7960%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (4,196 samples, 1.43%)</title><rect x="44.5460%" y="469" width="1.4327%" height="15" fill="rgb(232,26,8)" fg:x="130461" fg:w="4196"/><text x="44.7960%" y="479.50"></text></g><g><title>do_syscall_64 (4,196 samples, 1.43%)</title><rect x="44.5460%" y="453" width="1.4327%" height="15" fill="rgb(216,166,38)" fg:x="130461" fg:w="4196"/><text x="44.7960%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4,197 samples, 1.43%)</title><rect x="44.5460%" y="581" width="1.4331%" height="15" fill="rgb(251,202,51)" fg:x="130461" fg:w="4197"/><text x="44.7960%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4,197 samples, 1.43%)</title><rect x="44.5460%" y="565" width="1.4331%" height="15" fill="rgb(254,216,34)" fg:x="130461" fg:w="4197"/><text x="44.7960%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,197 samples, 1.43%)</title><rect x="44.5460%" y="549" width="1.4331%" height="15" fill="rgb(251,32,27)" fg:x="130461" fg:w="4197"/><text x="44.7960%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4,197 samples, 1.43%)</title><rect x="44.5460%" y="533" width="1.4331%" height="15" fill="rgb(208,127,28)" fg:x="130461" fg:w="4197"/><text x="44.7960%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (4,197 samples, 1.43%)</title><rect x="44.5460%" y="517" width="1.4331%" height="15" fill="rgb(224,137,22)" fg:x="130461" fg:w="4197"/><text x="44.7960%" y="527.50"></text></g><g><title>__free (4,197 samples, 1.43%)</title><rect x="44.5460%" y="501" width="1.4331%" height="15" fill="rgb(254,70,32)" fg:x="130461" fg:w="4197"/><text x="44.7960%" y="511.50"></text></g><g><title>__GI___munmap (4,197 samples, 1.43%)</title><rect x="44.5460%" y="485" width="1.4331%" height="15" fill="rgb(229,75,37)" fg:x="130461" fg:w="4197"/><text x="44.7960%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (37 samples, 0.01%)</title><rect x="45.9791%" y="581" width="0.0126%" height="15" fill="rgb(252,64,23)" fg:x="134658" fg:w="37"/><text x="46.2291%" y="591.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (37 samples, 0.01%)</title><rect x="45.9791%" y="565" width="0.0126%" height="15" fill="rgb(232,162,48)" fg:x="134658" fg:w="37"/><text x="46.2291%" y="575.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (37 samples, 0.01%)</title><rect x="45.9791%" y="549" width="0.0126%" height="15" fill="rgb(246,160,12)" fg:x="134658" fg:w="37"/><text x="46.2291%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (37 samples, 0.01%)</title><rect x="45.9791%" y="533" width="0.0126%" height="15" fill="rgb(247,166,0)" fg:x="134658" fg:w="37"/><text x="46.2291%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (37 samples, 0.01%)</title><rect x="45.9791%" y="517" width="0.0126%" height="15" fill="rgb(249,219,21)" fg:x="134658" fg:w="37"/><text x="46.2291%" y="527.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (36 samples, 0.01%)</title><rect x="45.9794%" y="501" width="0.0123%" height="15" fill="rgb(205,209,3)" fg:x="134659" fg:w="36"/><text x="46.2294%" y="511.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (36 samples, 0.01%)</title><rect x="45.9794%" y="485" width="0.0123%" height="15" fill="rgb(243,44,1)" fg:x="134659" fg:w="36"/><text x="46.2294%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (36 samples, 0.01%)</title><rect x="45.9794%" y="469" width="0.0123%" height="15" fill="rgb(206,159,16)" fg:x="134659" fg:w="36"/><text x="46.2294%" y="479.50"></text></g><g><title>nom::combinator::map::{{closure}} (36 samples, 0.01%)</title><rect x="45.9794%" y="453" width="0.0123%" height="15" fill="rgb(244,77,30)" fg:x="134659" fg:w="36"/><text x="46.2294%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (36 samples, 0.01%)</title><rect x="45.9794%" y="437" width="0.0123%" height="15" fill="rgb(218,69,12)" fg:x="134659" fg:w="36"/><text x="46.2294%" y="447.50"></text></g><g><title>nom::multi::count::{{closure}} (36 samples, 0.01%)</title><rect x="45.9794%" y="421" width="0.0123%" height="15" fill="rgb(212,87,7)" fg:x="134659" fg:w="36"/><text x="46.2294%" y="431.50"></text></g><g><title>core::intrinsics::copy (6,045 samples, 2.06%)</title><rect x="46.0006%" y="533" width="2.0641%" height="15" fill="rgb(245,114,25)" fg:x="134721" fg:w="6045"/><text x="46.2506%" y="543.50">c..</text></g><g><title>__memcpy_avx_unaligned_erms (6,045 samples, 2.06%)</title><rect x="46.0006%" y="517" width="2.0641%" height="15" fill="rgb(210,61,42)" fg:x="134721" fg:w="6045"/><text x="46.2506%" y="527.50">_..</text></g><g><title>core::slice::&lt;impl [T]&gt;::rotate_left (6,066 samples, 2.07%)</title><rect x="46.0002%" y="565" width="2.0712%" height="15" fill="rgb(211,52,33)" fg:x="134720" fg:w="6066"/><text x="46.2502%" y="575.50">c..</text></g><g><title>core::slice::rotate::ptr_rotate (6,066 samples, 2.07%)</title><rect x="46.0002%" y="549" width="2.0712%" height="15" fill="rgb(234,58,33)" fg:x="134720" fg:w="6066"/><text x="46.2502%" y="559.50">c..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,837 samples, 0.63%)</title><rect x="51.4549%" y="501" width="0.6272%" height="15" fill="rgb(220,115,36)" fg:x="150695" fg:w="1837"/><text x="51.7049%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,101 samples, 0.38%)</title><rect x="52.8907%" y="453" width="0.3759%" height="15" fill="rgb(243,153,54)" fg:x="154900" fg:w="1101"/><text x="53.1407%" y="463.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1,101 samples, 0.38%)</title><rect x="52.8907%" y="437" width="0.3759%" height="15" fill="rgb(251,47,18)" fg:x="154900" fg:w="1101"/><text x="53.1407%" y="447.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u8 (1,114 samples, 0.38%)</title><rect x="52.8870%" y="485" width="0.3804%" height="15" fill="rgb(242,102,42)" fg:x="154889" fg:w="1114"/><text x="53.1370%" y="495.50"></text></g><g><title>nom::number::streaming::be_u8 (1,114 samples, 0.38%)</title><rect x="52.8870%" y="469" width="0.3804%" height="15" fill="rgb(234,31,38)" fg:x="154889" fg:w="1114"/><text x="53.1370%" y="479.50"></text></g><g><title>nom::combinator::map::{{closure}} (1,193 samples, 0.41%)</title><rect x="53.2694%" y="437" width="0.4074%" height="15" fill="rgb(221,117,51)" fg:x="156009" fg:w="1193"/><text x="53.5194%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (604 samples, 0.21%)</title><rect x="53.4705%" y="421" width="0.2062%" height="15" fill="rgb(212,20,18)" fg:x="156598" fg:w="604"/><text x="53.7205%" y="431.50"></text></g><g><title>nom::bytes::streaming::take::{{closure}} (604 samples, 0.21%)</title><rect x="53.4705%" y="405" width="0.2062%" height="15" fill="rgb(245,133,36)" fg:x="156598" fg:w="604"/><text x="53.7205%" y="415.50"></text></g><g><title>&lt;&amp;[u8] as nom::traits::InputIter&gt;::slice_index (604 samples, 0.21%)</title><rect x="53.4705%" y="389" width="0.2062%" height="15" fill="rgb(212,6,19)" fg:x="156598" fg:w="604"/><text x="53.7205%" y="399.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u32 (1,897 samples, 0.65%)</title><rect x="55.1552%" y="373" width="0.6477%" height="15" fill="rgb(218,1,36)" fg:x="161532" fg:w="1897"/><text x="55.4052%" y="383.50"></text></g><g><title>nom::number::streaming::be_u32 (1,897 samples, 0.65%)</title><rect x="55.1552%" y="357" width="0.6477%" height="15" fill="rgb(246,84,54)" fg:x="161532" fg:w="1897"/><text x="55.4052%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (3,532 samples, 1.21%)</title><rect x="55.1552%" y="405" width="1.2060%" height="15" fill="rgb(242,110,6)" fg:x="161532" fg:w="3532"/><text x="55.4052%" y="415.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3,532 samples, 1.21%)</title><rect x="55.1552%" y="389" width="1.2060%" height="15" fill="rgb(214,47,5)" fg:x="161532" fg:w="3532"/><text x="55.4052%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (1,635 samples, 0.56%)</title><rect x="55.8030%" y="373" width="0.5583%" height="15" fill="rgb(218,159,25)" fg:x="163429" fg:w="1635"/><text x="56.0530%" y="383.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (1,635 samples, 0.56%)</title><rect x="55.8030%" y="357" width="0.5583%" height="15" fill="rgb(215,211,28)" fg:x="163429" fg:w="1635"/><text x="56.0530%" y="367.50"></text></g><g><title>nom::number::streaming::be_u64 (1,635 samples, 0.56%)</title><rect x="55.8030%" y="341" width="0.5583%" height="15" fill="rgb(238,59,32)" fg:x="163429" fg:w="1635"/><text x="56.0530%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (9,061 samples, 3.09%)</title><rect x="53.2694%" y="453" width="3.0939%" height="15" fill="rgb(226,82,3)" fg:x="156009" fg:w="9061"/><text x="53.5194%" y="463.50">&lt;F ..</text></g><g><title>nom::sequence::tuple::{{closure}} (7,868 samples, 2.69%)</title><rect x="53.6767%" y="437" width="2.6865%" height="15" fill="rgb(240,164,32)" fg:x="157202" fg:w="7868"/><text x="53.9267%" y="447.50">no..</text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (7,868 samples, 2.69%)</title><rect x="53.6767%" y="421" width="2.6865%" height="15" fill="rgb(232,46,7)" fg:x="157202" fg:w="7868"/><text x="53.9267%" y="431.50">&lt;(..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1,133 samples, 0.39%)</title><rect x="56.3633%" y="453" width="0.3869%" height="15" fill="rgb(229,129,53)" fg:x="165070" fg:w="1133"/><text x="56.6133%" y="463.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_instance_dump (10,199 samples, 3.48%)</title><rect x="53.2680%" y="485" width="3.4825%" height="15" fill="rgb(234,188,29)" fg:x="156005" fg:w="10199"/><text x="53.5180%" y="495.50">hpr..</text></g><g><title>nom::combinator::flat_map::{{closure}} (10,199 samples, 3.48%)</title><rect x="53.2680%" y="469" width="3.4825%" height="15" fill="rgb(246,141,4)" fg:x="156005" fg:w="10199"/><text x="53.5180%" y="479.50">nom..</text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (230 samples, 0.08%)</title><rect x="56.8212%" y="389" width="0.0785%" height="15" fill="rgb(229,23,39)" fg:x="166411" fg:w="230"/><text x="57.0712%" y="399.50"></text></g><g><title>core::ops::function::FnMut::call_mut (230 samples, 0.08%)</title><rect x="56.8212%" y="373" width="0.0785%" height="15" fill="rgb(206,12,3)" fg:x="166411" fg:w="230"/><text x="57.0712%" y="383.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (230 samples, 0.08%)</title><rect x="56.8212%" y="357" width="0.0785%" height="15" fill="rgb(252,226,20)" fg:x="166411" fg:w="230"/><text x="57.0712%" y="367.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (230 samples, 0.08%)</title><rect x="56.8212%" y="341" width="0.0785%" height="15" fill="rgb(216,123,35)" fg:x="166411" fg:w="230"/><text x="57.0712%" y="351.50"></text></g><g><title>nom::number::streaming::be_u64 (230 samples, 0.08%)</title><rect x="56.8212%" y="325" width="0.0785%" height="15" fill="rgb(212,68,40)" fg:x="166411" fg:w="230"/><text x="57.0712%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (166 samples, 0.06%)</title><rect x="56.8430%" y="309" width="0.0567%" height="15" fill="rgb(254,125,32)" fg:x="166475" fg:w="166"/><text x="57.0930%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (166 samples, 0.06%)</title><rect x="56.8430%" y="293" width="0.0567%" height="15" fill="rgb(253,97,22)" fg:x="166475" fg:w="166"/><text x="57.0930%" y="303.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (166 samples, 0.06%)</title><rect x="56.8430%" y="277" width="0.0567%" height="15" fill="rgb(241,101,14)" fg:x="166475" fg:w="166"/><text x="57.0930%" y="287.50"></text></g><g><title>__handle_mm_fault (35 samples, 0.01%)</title><rect x="56.9448%" y="293" width="0.0120%" height="15" fill="rgb(238,103,29)" fg:x="166773" fg:w="35"/><text x="57.1948%" y="303.50"></text></g><g><title>handle_pte_fault (32 samples, 0.01%)</title><rect x="56.9458%" y="277" width="0.0109%" height="15" fill="rgb(233,195,47)" fg:x="166776" fg:w="32"/><text x="57.1958%" y="287.50"></text></g><g><title>do_anonymous_page (31 samples, 0.01%)</title><rect x="56.9461%" y="261" width="0.0106%" height="15" fill="rgb(246,218,30)" fg:x="166777" fg:w="31"/><text x="57.1961%" y="271.50"></text></g><g><title>handle_mm_fault (38 samples, 0.01%)</title><rect x="56.9441%" y="309" width="0.0130%" height="15" fill="rgb(219,145,47)" fg:x="166771" fg:w="38"/><text x="57.1941%" y="319.50"></text></g><g><title>do_user_addr_fault (44 samples, 0.02%)</title><rect x="56.9427%" y="325" width="0.0150%" height="15" fill="rgb(243,12,26)" fg:x="166767" fg:w="44"/><text x="57.1927%" y="335.50"></text></g><g><title>asm_exc_page_fault (46 samples, 0.02%)</title><rect x="56.9424%" y="357" width="0.0157%" height="15" fill="rgb(214,87,16)" fg:x="166766" fg:w="46"/><text x="57.1924%" y="367.50"></text></g><g><title>exc_page_fault (45 samples, 0.02%)</title><rect x="56.9427%" y="341" width="0.0154%" height="15" fill="rgb(208,99,42)" fg:x="166767" fg:w="45"/><text x="57.1927%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (175 samples, 0.06%)</title><rect x="56.8997%" y="389" width="0.0598%" height="15" fill="rgb(253,99,2)" fg:x="166641" fg:w="175"/><text x="57.1497%" y="399.50"></text></g><g><title>core::ptr::write (118 samples, 0.04%)</title><rect x="56.9192%" y="373" width="0.0403%" height="15" fill="rgb(220,168,23)" fg:x="166698" fg:w="118"/><text x="57.1692%" y="383.50"></text></g><g><title>malloc_consolidate (384 samples, 0.13%)</title><rect x="57.3484%" y="245" width="0.1311%" height="15" fill="rgb(242,38,24)" fg:x="167955" fg:w="384"/><text x="57.5984%" y="255.50"></text></g><g><title>unlink_chunk.constprop.0 (105 samples, 0.04%)</title><rect x="57.4436%" y="229" width="0.0359%" height="15" fill="rgb(225,182,9)" fg:x="168234" fg:w="105"/><text x="57.6936%" y="239.50"></text></g><g><title>__GI___libc_malloc (1,658 samples, 0.57%)</title><rect x="56.9642%" y="277" width="0.5661%" height="15" fill="rgb(243,178,37)" fg:x="166830" fg:w="1658"/><text x="57.2142%" y="287.50"></text></g><g><title>_int_malloc (1,293 samples, 0.44%)</title><rect x="57.0889%" y="261" width="0.4415%" height="15" fill="rgb(232,139,19)" fg:x="167195" fg:w="1293"/><text x="57.3389%" y="271.50"></text></g><g><title>unlink_chunk.constprop.0 (148 samples, 0.05%)</title><rect x="57.4798%" y="245" width="0.0505%" height="15" fill="rgb(225,201,24)" fg:x="168340" fg:w="148"/><text x="57.7298%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1,678 samples, 0.57%)</title><rect x="56.9622%" y="325" width="0.5730%" height="15" fill="rgb(221,47,46)" fg:x="166824" fg:w="1678"/><text x="57.2122%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1,678 samples, 0.57%)</title><rect x="56.9622%" y="309" width="0.5730%" height="15" fill="rgb(249,23,13)" fg:x="166824" fg:w="1678"/><text x="57.2122%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1,676 samples, 0.57%)</title><rect x="56.9629%" y="293" width="0.5723%" height="15" fill="rgb(219,9,5)" fg:x="166826" fg:w="1676"/><text x="57.2129%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1,690 samples, 0.58%)</title><rect x="56.9594%" y="389" width="0.5771%" height="15" fill="rgb(254,171,16)" fg:x="166816" fg:w="1690"/><text x="57.2094%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1,690 samples, 0.58%)</title><rect x="56.9594%" y="373" width="0.5771%" height="15" fill="rgb(230,171,20)" fg:x="166816" fg:w="1690"/><text x="57.2094%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1,686 samples, 0.58%)</title><rect x="56.9608%" y="357" width="0.5757%" height="15" fill="rgb(210,71,41)" fg:x="166820" fg:w="1686"/><text x="57.2108%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1,686 samples, 0.58%)</title><rect x="56.9608%" y="341" width="0.5757%" height="15" fill="rgb(206,173,20)" fg:x="166820" fg:w="1686"/><text x="57.2108%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,303 samples, 0.79%)</title><rect x="56.7539%" y="421" width="0.7864%" height="15" fill="rgb(233,88,34)" fg:x="166214" fg:w="2303"/><text x="57.0039%" y="431.50"></text></g><g><title>nom::multi::count::{{closure}} (2,292 samples, 0.78%)</title><rect x="56.7577%" y="405" width="0.7826%" height="15" fill="rgb(223,209,46)" fg:x="166225" fg:w="2292"/><text x="57.0077%" y="415.50"></text></g><g><title>nom::combinator::map::{{closure}} (2,343 samples, 0.80%)</title><rect x="56.7505%" y="437" width="0.8000%" height="15" fill="rgb(250,43,18)" fg:x="166204" fg:w="2343"/><text x="57.0005%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (2,391 samples, 0.82%)</title><rect x="56.7505%" y="453" width="0.8164%" height="15" fill="rgb(208,13,10)" fg:x="166204" fg:w="2391"/><text x="57.0005%" y="463.50"></text></g><g><title>nom::sequence::tuple::{{closure}} (48 samples, 0.02%)</title><rect x="57.5505%" y="437" width="0.0164%" height="15" fill="rgb(212,200,36)" fg:x="168547" fg:w="48"/><text x="57.8005%" y="447.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (48 samples, 0.02%)</title><rect x="57.5505%" y="421" width="0.0164%" height="15" fill="rgb(225,90,30)" fg:x="168547" fg:w="48"/><text x="57.8005%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (2,416 samples, 0.82%)</title><rect x="56.7505%" y="485" width="0.8249%" height="15" fill="rgb(236,182,39)" fg:x="166204" fg:w="2416"/><text x="57.0005%" y="495.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (2,416 samples, 0.82%)</title><rect x="56.7505%" y="469" width="0.8249%" height="15" fill="rgb(212,144,35)" fg:x="166204" fg:w="2416"/><text x="57.0005%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (242 samples, 0.08%)</title><rect x="57.6471%" y="421" width="0.0826%" height="15" fill="rgb(228,63,44)" fg:x="168830" fg:w="242"/><text x="57.8971%" y="431.50"></text></g><g><title>core::ops::function::FnMut::call_mut (242 samples, 0.08%)</title><rect x="57.6471%" y="405" width="0.0826%" height="15" fill="rgb(228,109,6)" fg:x="168830" fg:w="242"/><text x="57.8971%" y="415.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i8 (215 samples, 0.07%)</title><rect x="57.6564%" y="389" width="0.0734%" height="15" fill="rgb(238,117,24)" fg:x="168857" fg:w="215"/><text x="57.9064%" y="399.50"></text></g><g><title>nom::number::streaming::be_i8 (215 samples, 0.07%)</title><rect x="57.6564%" y="373" width="0.0734%" height="15" fill="rgb(242,26,26)" fg:x="168857" fg:w="215"/><text x="57.9064%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (215 samples, 0.07%)</title><rect x="57.6564%" y="357" width="0.0734%" height="15" fill="rgb(221,92,48)" fg:x="168857" fg:w="215"/><text x="57.9064%" y="367.50"></text></g><g><title>nom::combinator::map::{{closure}} (215 samples, 0.07%)</title><rect x="57.6564%" y="341" width="0.0734%" height="15" fill="rgb(209,209,32)" fg:x="168857" fg:w="215"/><text x="57.9064%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (215 samples, 0.07%)</title><rect x="57.6564%" y="325" width="0.0734%" height="15" fill="rgb(221,70,22)" fg:x="168857" fg:w="215"/><text x="57.9064%" y="335.50"></text></g><g><title>nom::number::streaming::be_i8::{{closure}} (215 samples, 0.07%)</title><rect x="57.6564%" y="309" width="0.0734%" height="15" fill="rgb(248,145,5)" fg:x="168857" fg:w="215"/><text x="57.9064%" y="319.50"></text></g><g><title>nom::number::streaming::be_u8 (215 samples, 0.07%)</title><rect x="57.6564%" y="293" width="0.0734%" height="15" fill="rgb(226,116,26)" fg:x="168857" fg:w="215"/><text x="57.9064%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.03%)</title><rect x="57.7031%" y="277" width="0.0266%" height="15" fill="rgb(244,5,17)" fg:x="168994" fg:w="78"/><text x="57.9531%" y="287.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (78 samples, 0.03%)</title><rect x="57.7031%" y="261" width="0.0266%" height="15" fill="rgb(252,159,33)" fg:x="168994" fg:w="78"/><text x="57.9531%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (143 samples, 0.05%)</title><rect x="58.0173%" y="405" width="0.0488%" height="15" fill="rgb(206,71,0)" fg:x="169914" fg:w="143"/><text x="58.2673%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,536 samples, 0.52%)</title><rect x="57.7298%" y="421" width="0.5245%" height="15" fill="rgb(233,118,54)" fg:x="169072" fg:w="1536"/><text x="57.9798%" y="431.50"></text></g><g><title>core::ptr::write (549 samples, 0.19%)</title><rect x="58.0668%" y="405" width="0.1875%" height="15" fill="rgb(234,83,48)" fg:x="170059" fg:w="549"/><text x="58.3168%" y="415.50"></text></g><g><title>do_futex (30 samples, 0.01%)</title><rect x="58.5889%" y="229" width="0.0102%" height="15" fill="rgb(228,3,54)" fg:x="171588" fg:w="30"/><text x="58.8389%" y="239.50"></text></g><g><title>__x64_sys_futex (31 samples, 0.01%)</title><rect x="58.5889%" y="245" width="0.0106%" height="15" fill="rgb(226,155,13)" fg:x="171588" fg:w="31"/><text x="58.8389%" y="255.50"></text></g><g><title>__GI___lll_lock_wake_private (35 samples, 0.01%)</title><rect x="58.5878%" y="293" width="0.0120%" height="15" fill="rgb(241,28,37)" fg:x="171585" fg:w="35"/><text x="58.8378%" y="303.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (33 samples, 0.01%)</title><rect x="58.5885%" y="277" width="0.0113%" height="15" fill="rgb(233,93,10)" fg:x="171587" fg:w="33"/><text x="58.8385%" y="287.50"></text></g><g><title>do_syscall_64 (33 samples, 0.01%)</title><rect x="58.5885%" y="261" width="0.0113%" height="15" fill="rgb(225,113,19)" fg:x="171587" fg:w="33"/><text x="58.8385%" y="271.50"></text></g><g><title>malloc_consolidate (266 samples, 0.09%)</title><rect x="59.1550%" y="277" width="0.0908%" height="15" fill="rgb(241,2,18)" fg:x="173246" fg:w="266"/><text x="59.4050%" y="287.50"></text></g><g><title>unlink_chunk.constprop.0 (59 samples, 0.02%)</title><rect x="59.2257%" y="261" width="0.0201%" height="15" fill="rgb(228,207,21)" fg:x="173453" fg:w="59"/><text x="59.4757%" y="271.50"></text></g><g><title>__GI___libc_malloc (3,138 samples, 1.07%)</title><rect x="58.2665%" y="309" width="1.0715%" height="15" fill="rgb(213,211,35)" fg:x="170644" fg:w="3138"/><text x="58.5165%" y="319.50"></text></g><g><title>_int_malloc (2,162 samples, 0.74%)</title><rect x="58.5998%" y="293" width="0.7382%" height="15" fill="rgb(209,83,10)" fg:x="171620" fg:w="2162"/><text x="58.8498%" y="303.50"></text></g><g><title>unlink_chunk.constprop.0 (270 samples, 0.09%)</title><rect x="59.2458%" y="277" width="0.0922%" height="15" fill="rgb(209,164,1)" fg:x="173512" fg:w="270"/><text x="59.4958%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3,179 samples, 1.09%)</title><rect x="58.2645%" y="357" width="1.0855%" height="15" fill="rgb(213,184,43)" fg:x="170638" fg:w="3179"/><text x="58.5145%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3,179 samples, 1.09%)</title><rect x="58.2645%" y="341" width="1.0855%" height="15" fill="rgb(231,61,34)" fg:x="170638" fg:w="3179"/><text x="58.5145%" y="351.50"></text></g><g><title>alloc::alloc::alloc (3,178 samples, 1.09%)</title><rect x="58.2648%" y="325" width="1.0851%" height="15" fill="rgb(235,75,3)" fg:x="170639" fg:w="3178"/><text x="58.5148%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3,212 samples, 1.10%)</title><rect x="58.2542%" y="421" width="1.0967%" height="15" fill="rgb(220,106,47)" fg:x="170608" fg:w="3212"/><text x="58.5042%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3,212 samples, 1.10%)</title><rect x="58.2542%" y="405" width="1.0967%" height="15" fill="rgb(210,196,33)" fg:x="170608" fg:w="3212"/><text x="58.5042%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3,191 samples, 1.09%)</title><rect x="58.2614%" y="389" width="1.0896%" height="15" fill="rgb(229,154,42)" fg:x="170629" fg:w="3191"/><text x="58.5114%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3,191 samples, 1.09%)</title><rect x="58.2614%" y="373" width="1.0896%" height="15" fill="rgb(228,114,26)" fg:x="170629" fg:w="3191"/><text x="58.5114%" y="383.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (52 samples, 0.02%)</title><rect x="59.3551%" y="389" width="0.0178%" height="15" fill="rgb(208,144,1)" fg:x="173832" fg:w="52"/><text x="59.6051%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_add (52 samples, 0.02%)</title><rect x="59.3551%" y="373" width="0.0178%" height="15" fill="rgb(239,112,37)" fg:x="173832" fg:w="52"/><text x="59.6051%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (5,248 samples, 1.79%)</title><rect x="57.6260%" y="453" width="1.7919%" height="15" fill="rgb(210,96,50)" fg:x="168768" fg:w="5248"/><text x="57.8760%" y="463.50">&lt;..</text></g><g><title>nom::multi::count::{{closure}} (5,235 samples, 1.79%)</title><rect x="57.6304%" y="437" width="1.7875%" height="15" fill="rgb(222,178,2)" fg:x="168781" fg:w="5235"/><text x="57.8804%" y="447.50">n..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (196 samples, 0.07%)</title><rect x="59.3510%" y="421" width="0.0669%" height="15" fill="rgb(226,74,18)" fg:x="173820" fg:w="196"/><text x="59.6010%" y="431.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (196 samples, 0.07%)</title><rect x="59.3510%" y="405" width="0.0669%" height="15" fill="rgb(225,67,54)" fg:x="173820" fg:w="196"/><text x="59.6010%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (132 samples, 0.05%)</title><rect x="59.3728%" y="389" width="0.0451%" height="15" fill="rgb(251,92,32)" fg:x="173884" fg:w="132"/><text x="59.6228%" y="399.50"></text></g><g><title>nom::combinator::map::{{closure}} (5,345 samples, 1.83%)</title><rect x="57.6260%" y="469" width="1.8251%" height="15" fill="rgb(228,149,22)" fg:x="168768" fg:w="5345"/><text x="57.8760%" y="479.50">n..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (97 samples, 0.03%)</title><rect x="59.4179%" y="453" width="0.0331%" height="15" fill="rgb(243,54,13)" fg:x="174016" fg:w="97"/><text x="59.6679%" y="463.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u32 (48 samples, 0.02%)</title><rect x="59.4725%" y="405" width="0.0164%" height="15" fill="rgb(243,180,28)" fg:x="174176" fg:w="48"/><text x="59.7225%" y="415.50"></text></g><g><title>nom::number::streaming::be_u32 (48 samples, 0.02%)</title><rect x="59.4725%" y="389" width="0.0164%" height="15" fill="rgb(208,167,24)" fg:x="174176" fg:w="48"/><text x="59.7225%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (44 samples, 0.02%)</title><rect x="59.4889%" y="373" width="0.0150%" height="15" fill="rgb(245,73,45)" fg:x="174224" fg:w="44"/><text x="59.7389%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (44 samples, 0.02%)</title><rect x="59.4889%" y="357" width="0.0150%" height="15" fill="rgb(237,203,48)" fg:x="174224" fg:w="44"/><text x="59.7389%" y="367.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_i8 (44 samples, 0.02%)</title><rect x="59.4889%" y="341" width="0.0150%" height="15" fill="rgb(211,197,16)" fg:x="174224" fg:w="44"/><text x="59.7389%" y="351.50"></text></g><g><title>nom::number::streaming::be_i8 (44 samples, 0.02%)</title><rect x="59.4889%" y="325" width="0.0150%" height="15" fill="rgb(243,99,51)" fg:x="174224" fg:w="44"/><text x="59.7389%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (44 samples, 0.02%)</title><rect x="59.4889%" y="309" width="0.0150%" height="15" fill="rgb(215,123,29)" fg:x="174224" fg:w="44"/><text x="59.7389%" y="319.50"></text></g><g><title>nom::combinator::map::{{closure}} (44 samples, 0.02%)</title><rect x="59.4889%" y="293" width="0.0150%" height="15" fill="rgb(239,186,37)" fg:x="174224" fg:w="44"/><text x="59.7389%" y="303.50"></text></g><g><title>hprof_slurp::record_parser::parse_field_type (47 samples, 0.02%)</title><rect x="59.4889%" y="405" width="0.0160%" height="15" fill="rgb(252,136,39)" fg:x="174224" fg:w="47"/><text x="59.7389%" y="415.50"></text></g><g><title>nom::combinator::map::{{closure}} (47 samples, 0.02%)</title><rect x="59.4889%" y="389" width="0.0160%" height="15" fill="rgb(223,213,32)" fg:x="174224" fg:w="47"/><text x="59.7389%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (21,765 samples, 7.43%)</title><rect x="52.0883%" y="501" width="7.4317%" height="15" fill="rgb(233,115,5)" fg:x="152550" fg:w="21765"/><text x="52.3383%" y="511.50">hprof_slur..</text></g><g><title>hprof_slurp::record_parser::parse_gc_primitive_array_dump (5,695 samples, 1.94%)</title><rect x="57.5754%" y="485" width="1.9446%" height="15" fill="rgb(207,226,44)" fg:x="168620" fg:w="5695"/><text x="57.8254%" y="495.50">h..</text></g><g><title>nom::sequence::tuple::{{closure}} (202 samples, 0.07%)</title><rect x="59.4510%" y="469" width="0.0690%" height="15" fill="rgb(208,126,0)" fg:x="174113" fg:w="202"/><text x="59.7010%" y="479.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (202 samples, 0.07%)</title><rect x="59.4510%" y="453" width="0.0690%" height="15" fill="rgb(244,66,21)" fg:x="174113" fg:w="202"/><text x="59.7010%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (139 samples, 0.05%)</title><rect x="59.4725%" y="437" width="0.0475%" height="15" fill="rgb(222,97,12)" fg:x="174176" fg:w="139"/><text x="59.7225%" y="447.50"></text></g><g><title>core::ops::function::FnMut::call_mut (139 samples, 0.05%)</title><rect x="59.4725%" y="421" width="0.0475%" height="15" fill="rgb(219,213,19)" fg:x="174176" fg:w="139"/><text x="59.7225%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (44 samples, 0.02%)</title><rect x="59.5050%" y="405" width="0.0150%" height="15" fill="rgb(252,169,30)" fg:x="174271" fg:w="44"/><text x="59.7550%" y="415.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (44 samples, 0.02%)</title><rect x="59.5050%" y="389" width="0.0150%" height="15" fill="rgb(206,32,51)" fg:x="174271" fg:w="44"/><text x="59.7550%" y="399.50"></text></g><g><title>nom::number::streaming::be_u64 (44 samples, 0.02%)</title><rect x="59.5050%" y="373" width="0.0150%" height="15" fill="rgb(250,172,42)" fg:x="174271" fg:w="44"/><text x="59.7550%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (32,142 samples, 10.97%)</title><rect x="48.5522%" y="533" width="10.9749%" height="15" fill="rgb(209,34,43)" fg:x="142194" fg:w="32142"/><text x="48.8022%" y="543.50">&lt;F as nom::inter..</text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (31,556 samples, 10.77%)</title><rect x="48.7523%" y="517" width="10.7748%" height="15" fill="rgb(223,11,35)" fg:x="142780" fg:w="31556"/><text x="49.0023%" y="527.50">hprof_slurp::rec..</text></g><g><title>__hrtimer_run_queues (31 samples, 0.01%)</title><rect x="67.3051%" y="453" width="0.0106%" height="15" fill="rgb(251,219,26)" fg:x="197115" fg:w="31"/><text x="67.5551%" y="463.50"></text></g><g><title>__sysvec_apic_timer_interrupt (33 samples, 0.01%)</title><rect x="67.3047%" y="485" width="0.0113%" height="15" fill="rgb(231,119,3)" fg:x="197114" fg:w="33"/><text x="67.5547%" y="495.50"></text></g><g><title>hrtimer_interrupt (33 samples, 0.01%)</title><rect x="67.3047%" y="469" width="0.0113%" height="15" fill="rgb(216,97,11)" fg:x="197114" fg:w="33"/><text x="67.5547%" y="479.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (43 samples, 0.01%)</title><rect x="67.3040%" y="517" width="0.0147%" height="15" fill="rgb(223,59,9)" fg:x="197112" fg:w="43"/><text x="67.5540%" y="527.50"></text></g><g><title>sysvec_apic_timer_interrupt (41 samples, 0.01%)</title><rect x="67.3047%" y="501" width="0.0140%" height="15" fill="rgb(233,93,31)" fg:x="197114" fg:w="41"/><text x="67.5547%" y="511.50"></text></g><g><title>__memcpy_avx_unaligned_erms (22,823 samples, 7.79%)</title><rect x="59.5272%" y="533" width="7.7929%" height="15" fill="rgb(239,81,33)" fg:x="174336" fg:w="22823"/><text x="59.7772%" y="543.50">__memcpy_av..</text></g><g><title>unmap_page_range (82 samples, 0.03%)</title><rect x="67.9712%" y="197" width="0.0280%" height="15" fill="rgb(213,120,34)" fg:x="199066" fg:w="82"/><text x="68.2212%" y="207.50"></text></g><g><title>zap_pmd_range.isra.0 (82 samples, 0.03%)</title><rect x="67.9712%" y="181" width="0.0280%" height="15" fill="rgb(243,49,53)" fg:x="199066" fg:w="82"/><text x="68.2212%" y="191.50"></text></g><g><title>zap_pte_range (77 samples, 0.03%)</title><rect x="67.9729%" y="165" width="0.0263%" height="15" fill="rgb(247,216,33)" fg:x="199071" fg:w="77"/><text x="68.2229%" y="175.50"></text></g><g><title>unmap_region (121 samples, 0.04%)</title><rect x="67.9586%" y="245" width="0.0413%" height="15" fill="rgb(226,26,14)" fg:x="199029" fg:w="121"/><text x="68.2086%" y="255.50"></text></g><g><title>unmap_vmas (85 samples, 0.03%)</title><rect x="67.9709%" y="229" width="0.0290%" height="15" fill="rgb(215,49,53)" fg:x="199065" fg:w="85"/><text x="68.2209%" y="239.50"></text></g><g><title>unmap_single_vma (84 samples, 0.03%)</title><rect x="67.9712%" y="213" width="0.0287%" height="15" fill="rgb(245,162,40)" fg:x="199066" fg:w="84"/><text x="68.2212%" y="223.50"></text></g><g><title>do_munmap (128 samples, 0.04%)</title><rect x="67.9569%" y="277" width="0.0437%" height="15" fill="rgb(229,68,17)" fg:x="199024" fg:w="128"/><text x="68.2069%" y="287.50"></text></g><g><title>__do_munmap (128 samples, 0.04%)</title><rect x="67.9569%" y="261" width="0.0437%" height="15" fill="rgb(213,182,10)" fg:x="199024" fg:w="128"/><text x="68.2069%" y="271.50"></text></g><g><title>clear_page_erms (36 samples, 0.01%)</title><rect x="68.0115%" y="181" width="0.0123%" height="15" fill="rgb(245,125,30)" fg:x="199184" fg:w="36"/><text x="68.2615%" y="191.50"></text></g><g><title>__alloc_pages (68 samples, 0.02%)</title><rect x="68.0044%" y="213" width="0.0232%" height="15" fill="rgb(232,202,2)" fg:x="199163" fg:w="68"/><text x="68.2544%" y="223.50"></text></g><g><title>get_page_from_freelist (54 samples, 0.02%)</title><rect x="68.0091%" y="197" width="0.0184%" height="15" fill="rgb(237,140,51)" fg:x="199177" fg:w="54"/><text x="68.2591%" y="207.50"></text></g><g><title>alloc_pages (71 samples, 0.02%)</title><rect x="68.0037%" y="229" width="0.0242%" height="15" fill="rgb(236,157,25)" fg:x="199161" fg:w="71"/><text x="68.2537%" y="239.50"></text></g><g><title>__pte_alloc (82 samples, 0.03%)</title><rect x="68.0026%" y="261" width="0.0280%" height="15" fill="rgb(219,209,0)" fg:x="199158" fg:w="82"/><text x="68.2526%" y="271.50"></text></g><g><title>pte_alloc_one (79 samples, 0.03%)</title><rect x="68.0037%" y="245" width="0.0270%" height="15" fill="rgb(240,116,54)" fg:x="199161" fg:w="79"/><text x="68.2537%" y="255.50"></text></g><g><title>on_each_cpu_cond_mask (77 samples, 0.03%)</title><rect x="68.2779%" y="213" width="0.0263%" height="15" fill="rgb(216,10,36)" fg:x="199964" fg:w="77"/><text x="68.5279%" y="223.50"></text></g><g><title>smp_call_function_many_cond (68 samples, 0.02%)</title><rect x="68.2809%" y="197" width="0.0232%" height="15" fill="rgb(222,72,44)" fg:x="199973" fg:w="68"/><text x="68.5309%" y="207.50"></text></g><g><title>move_ptes.constprop.0 (781 samples, 0.27%)</title><rect x="68.0378%" y="261" width="0.2667%" height="15" fill="rgb(232,159,9)" fg:x="199261" fg:w="781"/><text x="68.2878%" y="271.50"></text></g><g><title>flush_tlb_mm_range (113 samples, 0.04%)</title><rect x="68.2659%" y="245" width="0.0386%" height="15" fill="rgb(210,39,32)" fg:x="199929" fg:w="113"/><text x="68.5159%" y="255.50"></text></g><g><title>native_flush_tlb_multi (81 samples, 0.03%)</title><rect x="68.2768%" y="229" width="0.0277%" height="15" fill="rgb(216,194,45)" fg:x="199961" fg:w="81"/><text x="68.5268%" y="239.50"></text></g><g><title>move_page_tables (914 samples, 0.31%)</title><rect x="68.0006%" y="277" width="0.3121%" height="15" fill="rgb(218,18,35)" fg:x="199152" fg:w="914"/><text x="68.2506%" y="287.50"></text></g><g><title>move_vma (1,061 samples, 0.36%)</title><rect x="67.9511%" y="293" width="0.3623%" height="15" fill="rgb(207,83,51)" fg:x="199007" fg:w="1061"/><text x="68.2011%" y="303.50"></text></g><g><title>__do_sys_mremap (1,101 samples, 0.38%)</title><rect x="67.9395%" y="309" width="0.3759%" height="15" fill="rgb(225,63,43)" fg:x="198973" fg:w="1101"/><text x="68.1895%" y="319.50"></text></g><g><title>__mremap (1,103 samples, 0.38%)</title><rect x="67.9391%" y="373" width="0.3766%" height="15" fill="rgb(207,57,36)" fg:x="198972" fg:w="1103"/><text x="68.1891%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1,102 samples, 0.38%)</title><rect x="67.9395%" y="357" width="0.3763%" height="15" fill="rgb(216,99,33)" fg:x="198973" fg:w="1102"/><text x="68.1895%" y="367.50"></text></g><g><title>do_syscall_64 (1,102 samples, 0.38%)</title><rect x="67.9395%" y="341" width="0.3763%" height="15" fill="rgb(225,42,16)" fg:x="198973" fg:w="1102"/><text x="68.1895%" y="351.50"></text></g><g><title>__x64_sys_mremap (1,102 samples, 0.38%)</title><rect x="67.9395%" y="325" width="0.3763%" height="15" fill="rgb(220,201,45)" fg:x="198973" fg:w="1102"/><text x="68.1895%" y="335.50"></text></g><g><title>down_read_trylock (39 samples, 0.01%)</title><rect x="69.0915%" y="293" width="0.0133%" height="15" fill="rgb(225,33,4)" fg:x="202347" fg:w="39"/><text x="69.3415%" y="303.50"></text></g><g><title>clear_page_erms (373 samples, 0.13%)</title><rect x="69.2220%" y="181" width="0.1274%" height="15" fill="rgb(224,33,50)" fg:x="202729" fg:w="373"/><text x="69.4720%" y="191.50"></text></g><g><title>get_page_from_freelist (619 samples, 0.21%)</title><rect x="69.2073%" y="197" width="0.2114%" height="15" fill="rgb(246,198,51)" fg:x="202686" fg:w="619"/><text x="69.4573%" y="207.50"></text></g><g><title>rmqueue (191 samples, 0.07%)</title><rect x="69.3534%" y="181" width="0.0652%" height="15" fill="rgb(205,22,4)" fg:x="203114" fg:w="191"/><text x="69.6034%" y="191.50"></text></g><g><title>rmqueue_bulk.constprop.0 (148 samples, 0.05%)</title><rect x="69.3681%" y="165" width="0.0505%" height="15" fill="rgb(206,3,8)" fg:x="203157" fg:w="148"/><text x="69.6181%" y="175.50"></text></g><g><title>__alloc_pages (679 samples, 0.23%)</title><rect x="69.1906%" y="213" width="0.2318%" height="15" fill="rgb(251,23,15)" fg:x="202637" fg:w="679"/><text x="69.4406%" y="223.50"></text></g><g><title>alloc_pages_vma (716 samples, 0.24%)</title><rect x="69.1824%" y="229" width="0.2445%" height="15" fill="rgb(252,88,28)" fg:x="202613" fg:w="716"/><text x="69.4324%" y="239.50"></text></g><g><title>cgroup_throttle_swaprate (32 samples, 0.01%)</title><rect x="69.4268%" y="229" width="0.0109%" height="15" fill="rgb(212,127,14)" fg:x="203329" fg:w="32"/><text x="69.6768%" y="239.50"></text></g><g><title>__pagevec_lru_add_fn (112 samples, 0.04%)</title><rect x="69.4531%" y="181" width="0.0382%" height="15" fill="rgb(247,145,37)" fg:x="203406" fg:w="112"/><text x="69.7031%" y="191.50"></text></g><g><title>__pagevec_lru_add (169 samples, 0.06%)</title><rect x="69.4497%" y="197" width="0.0577%" height="15" fill="rgb(209,117,53)" fg:x="203396" fg:w="169"/><text x="69.6997%" y="207.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (203 samples, 0.07%)</title><rect x="69.4395%" y="229" width="0.0693%" height="15" fill="rgb(212,90,42)" fg:x="203366" fg:w="203"/><text x="69.6895%" y="239.50"></text></g><g><title>lru_cache_add (200 samples, 0.07%)</title><rect x="69.4405%" y="213" width="0.0683%" height="15" fill="rgb(218,164,37)" fg:x="203369" fg:w="200"/><text x="69.6905%" y="223.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (106 samples, 0.04%)</title><rect x="69.5207%" y="197" width="0.0362%" height="15" fill="rgb(246,65,34)" fg:x="203604" fg:w="106"/><text x="69.7707%" y="207.50"></text></g><g><title>__mem_cgroup_charge (210 samples, 0.07%)</title><rect x="69.5115%" y="213" width="0.0717%" height="15" fill="rgb(231,100,33)" fg:x="203577" fg:w="210"/><text x="69.7615%" y="223.50"></text></g><g><title>try_charge (77 samples, 0.03%)</title><rect x="69.5569%" y="197" width="0.0263%" height="15" fill="rgb(228,126,14)" fg:x="203710" fg:w="77"/><text x="69.8069%" y="207.50"></text></g><g><title>mem_cgroup_charge (257 samples, 0.09%)</title><rect x="69.5088%" y="229" width="0.0878%" height="15" fill="rgb(215,173,21)" fg:x="203569" fg:w="257"/><text x="69.7588%" y="239.50"></text></g><g><title>__mod_lruvec_state (53 samples, 0.02%)</title><rect x="69.6034%" y="197" width="0.0181%" height="15" fill="rgb(210,6,40)" fg:x="203846" fg:w="53"/><text x="69.8534%" y="207.50"></text></g><g><title>__mod_lruvec_page_state (68 samples, 0.02%)</title><rect x="69.6003%" y="213" width="0.0232%" height="15" fill="rgb(212,48,18)" fg:x="203837" fg:w="68"/><text x="69.8503%" y="223.50"></text></g><g><title>page_add_new_anon_rmap (85 samples, 0.03%)</title><rect x="69.5969%" y="229" width="0.0290%" height="15" fill="rgb(230,214,11)" fg:x="203827" fg:w="85"/><text x="69.8469%" y="239.50"></text></g><g><title>do_anonymous_page (1,381 samples, 0.47%)</title><rect x="69.1646%" y="245" width="0.4715%" height="15" fill="rgb(254,105,39)" fg:x="202561" fg:w="1381"/><text x="69.4146%" y="255.50"></text></g><g><title>handle_pte_fault (1,455 samples, 0.50%)</title><rect x="69.1458%" y="261" width="0.4968%" height="15" fill="rgb(245,158,5)" fg:x="202506" fg:w="1455"/><text x="69.3958%" y="271.50"></text></g><g><title>__handle_mm_fault (1,532 samples, 0.52%)</title><rect x="69.1229%" y="277" width="0.5231%" height="15" fill="rgb(249,208,11)" fg:x="202439" fg:w="1532"/><text x="69.3729%" y="287.50"></text></g><g><title>handle_mm_fault (1,591 samples, 0.54%)</title><rect x="69.1083%" y="293" width="0.5432%" height="15" fill="rgb(210,39,28)" fg:x="202396" fg:w="1591"/><text x="69.3583%" y="303.50"></text></g><g><title>up_read (60 samples, 0.02%)</title><rect x="69.6542%" y="293" width="0.0205%" height="15" fill="rgb(211,56,53)" fg:x="203995" fg:w="60"/><text x="69.9042%" y="303.50"></text></g><g><title>do_user_addr_fault (1,744 samples, 0.60%)</title><rect x="69.0796%" y="309" width="0.5955%" height="15" fill="rgb(226,201,30)" fg:x="202312" fg:w="1744"/><text x="69.3296%" y="319.50"></text></g><g><title>asm_exc_page_fault (1,835 samples, 0.63%)</title><rect x="69.0615%" y="341" width="0.6266%" height="15" fill="rgb(239,101,34)" fg:x="202259" fg:w="1835"/><text x="69.3115%" y="351.50"></text></g><g><title>exc_page_fault (1,807 samples, 0.62%)</title><rect x="69.0710%" y="325" width="0.6170%" height="15" fill="rgb(226,209,5)" fg:x="202287" fg:w="1807"/><text x="69.3210%" y="335.50"></text></g><g><title>error_entry (58 samples, 0.02%)</title><rect x="69.6898%" y="341" width="0.0198%" height="15" fill="rgb(250,105,47)" fg:x="204099" fg:w="58"/><text x="69.9398%" y="351.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4,275 samples, 1.46%)</title><rect x="68.3158%" y="357" width="1.4597%" height="15" fill="rgb(230,72,3)" fg:x="200075" fg:w="4275"/><text x="68.5658%" y="367.50"></text></g><g><title>sync_regs (190 samples, 0.06%)</title><rect x="69.7106%" y="341" width="0.0649%" height="15" fill="rgb(232,218,39)" fg:x="204160" fg:w="190"/><text x="69.9606%" y="351.50"></text></g><g><title>malloc_consolidate (329 samples, 0.11%)</title><rect x="69.8253%" y="341" width="0.1123%" height="15" fill="rgb(248,166,6)" fg:x="204496" fg:w="329"/><text x="70.0753%" y="351.50"></text></g><g><title>unlink_chunk.constprop.0 (42 samples, 0.01%)</title><rect x="69.9233%" y="325" width="0.0143%" height="15" fill="rgb(247,89,20)" fg:x="204783" fg:w="42"/><text x="70.1733%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5,902 samples, 2.02%)</title><rect x="67.9306%" y="517" width="2.0152%" height="15" fill="rgb(248,130,54)" fg:x="198947" fg:w="5902"/><text x="68.1806%" y="527.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5,902 samples, 2.02%)</title><rect x="67.9306%" y="501" width="2.0152%" height="15" fill="rgb(234,196,4)" fg:x="198947" fg:w="5902"/><text x="68.1806%" y="511.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5,902 samples, 2.02%)</title><rect x="67.9306%" y="485" width="2.0152%" height="15" fill="rgb(250,143,31)" fg:x="198947" fg:w="5902"/><text x="68.1806%" y="495.50">a..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5,902 samples, 2.02%)</title><rect x="67.9306%" y="469" width="2.0152%" height="15" fill="rgb(211,110,34)" fg:x="198947" fg:w="5902"/><text x="68.1806%" y="479.50">a..</text></g><g><title>alloc::raw_vec::finish_grow (5,899 samples, 2.01%)</title><rect x="67.9316%" y="453" width="2.0142%" height="15" fill="rgb(215,124,48)" fg:x="198950" fg:w="5899"/><text x="68.1816%" y="463.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5,896 samples, 2.01%)</title><rect x="67.9327%" y="437" width="2.0132%" height="15" fill="rgb(216,46,13)" fg:x="198953" fg:w="5896"/><text x="68.1827%" y="447.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (5,896 samples, 2.01%)</title><rect x="67.9327%" y="421" width="2.0132%" height="15" fill="rgb(205,184,25)" fg:x="198953" fg:w="5896"/><text x="68.1827%" y="431.50">a..</text></g><g><title>alloc::alloc::realloc (5,896 samples, 2.01%)</title><rect x="67.9327%" y="405" width="2.0132%" height="15" fill="rgb(228,1,10)" fg:x="198953" fg:w="5896"/><text x="68.1827%" y="415.50">a..</text></g><g><title>__realloc (5,895 samples, 2.01%)</title><rect x="67.9330%" y="389" width="2.0129%" height="15" fill="rgb(213,116,27)" fg:x="198954" fg:w="5895"/><text x="68.1830%" y="399.50">_..</text></g><g><title>_int_realloc (4,774 samples, 1.63%)</title><rect x="68.3158%" y="373" width="1.6301%" height="15" fill="rgb(241,95,50)" fg:x="200075" fg:w="4774"/><text x="68.5658%" y="383.50"></text></g><g><title>_int_malloc (481 samples, 0.16%)</title><rect x="69.7816%" y="357" width="0.1642%" height="15" fill="rgb(238,48,32)" fg:x="204368" fg:w="481"/><text x="70.0316%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (580 samples, 0.20%)</title><rect x="69.9458%" y="517" width="0.1980%" height="15" fill="rgb(235,113,49)" fg:x="204849" fg:w="580"/><text x="70.1958%" y="527.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (580 samples, 0.20%)</title><rect x="69.9458%" y="501" width="0.1980%" height="15" fill="rgb(205,127,43)" fg:x="204849" fg:w="580"/><text x="70.1958%" y="511.50"></text></g><g><title>__irqentry_text_end (350 samples, 0.12%)</title><rect x="78.8475%" y="485" width="0.1195%" height="15" fill="rgb(250,162,2)" fg:x="230919" fg:w="350"/><text x="79.0975%" y="495.50"></text></g><g><title>__cond_resched (32 samples, 0.01%)</title><rect x="79.3337%" y="453" width="0.0109%" height="15" fill="rgb(220,13,41)" fg:x="232343" fg:w="32"/><text x="79.5837%" y="463.50"></text></g><g><title>__cond_resched (40 samples, 0.01%)</title><rect x="79.5515%" y="437" width="0.0137%" height="15" fill="rgb(249,221,25)" fg:x="232981" fg:w="40"/><text x="79.8015%" y="447.50"></text></g><g><title>__count_memcg_events (49 samples, 0.02%)</title><rect x="79.5652%" y="437" width="0.0167%" height="15" fill="rgb(215,208,19)" fg:x="233021" fg:w="49"/><text x="79.8152%" y="447.50"></text></g><g><title>down_read_trylock (567 samples, 0.19%)</title><rect x="79.5987%" y="437" width="0.1936%" height="15" fill="rgb(236,175,2)" fg:x="233119" fg:w="567"/><text x="79.8487%" y="447.50"></text></g><g><title>find_vma (252 samples, 0.09%)</title><rect x="79.7923%" y="437" width="0.0860%" height="15" fill="rgb(241,52,2)" fg:x="233686" fg:w="252"/><text x="80.0423%" y="447.50"></text></g><g><title>vmacache_find (183 samples, 0.06%)</title><rect x="79.8158%" y="421" width="0.0625%" height="15" fill="rgb(248,140,14)" fg:x="233755" fg:w="183"/><text x="80.0658%" y="431.50"></text></g><g><title>__count_memcg_events (214 samples, 0.07%)</title><rect x="80.1330%" y="421" width="0.0731%" height="15" fill="rgb(253,22,42)" fg:x="234684" fg:w="214"/><text x="80.3830%" y="431.50"></text></g><g><title>cgroup_rstat_updated (115 samples, 0.04%)</title><rect x="80.1668%" y="405" width="0.0393%" height="15" fill="rgb(234,61,47)" fg:x="234783" fg:w="115"/><text x="80.4168%" y="415.50"></text></g><g><title>_raw_spin_lock (406 samples, 0.14%)</title><rect x="80.8965%" y="389" width="0.1386%" height="15" fill="rgb(208,226,15)" fg:x="236920" fg:w="406"/><text x="81.1465%" y="399.50"></text></g><g><title>add_mm_counter_fast (61 samples, 0.02%)</title><rect x="81.0351%" y="389" width="0.0208%" height="15" fill="rgb(217,221,4)" fg:x="237326" fg:w="61"/><text x="81.2851%" y="399.50"></text></g><g><title>alloc_pages_vma (48 samples, 0.02%)</title><rect x="81.0560%" y="389" width="0.0164%" height="15" fill="rgb(212,174,34)" fg:x="237387" fg:w="48"/><text x="81.3060%" y="399.50"></text></g><g><title>__get_vma_policy (64 samples, 0.02%)</title><rect x="81.3144%" y="373" width="0.0219%" height="15" fill="rgb(253,83,4)" fg:x="238144" fg:w="64"/><text x="81.5644%" y="383.50"></text></g><g><title>__mem_cgroup_charge (40 samples, 0.01%)</title><rect x="81.3363%" y="373" width="0.0137%" height="15" fill="rgb(250,195,49)" fg:x="238208" fg:w="40"/><text x="81.5863%" y="383.50"></text></g><g><title>__mod_lruvec_page_state (35 samples, 0.01%)</title><rect x="81.3500%" y="373" width="0.0120%" height="15" fill="rgb(241,192,25)" fg:x="238248" fg:w="35"/><text x="81.6000%" y="383.50"></text></g><g><title>__page_set_anon_rmap (44 samples, 0.02%)</title><rect x="81.3619%" y="373" width="0.0150%" height="15" fill="rgb(208,124,10)" fg:x="238283" fg:w="44"/><text x="81.6119%" y="383.50"></text></g><g><title>get_page_from_freelist (34 samples, 0.01%)</title><rect x="81.3858%" y="309" width="0.0116%" height="15" fill="rgb(222,33,0)" fg:x="238353" fg:w="34"/><text x="81.6358%" y="319.50"></text></g><g><title>__alloc_pages (59 samples, 0.02%)</title><rect x="81.3776%" y="325" width="0.0201%" height="15" fill="rgb(234,209,28)" fg:x="238329" fg:w="59"/><text x="81.6276%" y="335.50"></text></g><g><title>alloc_pages (61 samples, 0.02%)</title><rect x="81.3773%" y="341" width="0.0208%" height="15" fill="rgb(224,11,23)" fg:x="238328" fg:w="61"/><text x="81.6273%" y="351.50"></text></g><g><title>__pte_alloc (71 samples, 0.02%)</title><rect x="81.3769%" y="373" width="0.0242%" height="15" fill="rgb(232,99,1)" fg:x="238327" fg:w="71"/><text x="81.6269%" y="383.50"></text></g><g><title>pte_alloc_one (70 samples, 0.02%)</title><rect x="81.3773%" y="357" width="0.0239%" height="15" fill="rgb(237,95,45)" fg:x="238328" fg:w="70"/><text x="81.6273%" y="367.50"></text></g><g><title>clear_page_erms (73 samples, 0.02%)</title><rect x="81.8215%" y="309" width="0.0249%" height="15" fill="rgb(208,109,11)" fg:x="239629" fg:w="73"/><text x="82.0715%" y="319.50"></text></g><g><title>get_page_from_freelist (111 samples, 0.04%)</title><rect x="81.8171%" y="325" width="0.0379%" height="15" fill="rgb(216,190,48)" fg:x="239616" fg:w="111"/><text x="82.0671%" y="335.50"></text></g><g><title>__alloc_pages_slowpath.constprop.0 (133 samples, 0.05%)</title><rect x="81.8154%" y="341" width="0.0454%" height="15" fill="rgb(251,171,36)" fg:x="239611" fg:w="133"/><text x="82.0654%" y="351.50"></text></g><g><title>__cond_resched (56 samples, 0.02%)</title><rect x="81.8608%" y="341" width="0.0191%" height="15" fill="rgb(230,62,22)" fg:x="239744" fg:w="56"/><text x="82.1108%" y="351.50"></text></g><g><title>__next_zones_zonelist (354 samples, 0.12%)</title><rect x="81.8799%" y="341" width="0.1209%" height="15" fill="rgb(225,114,35)" fg:x="239800" fg:w="354"/><text x="82.1299%" y="351.50"></text></g><g><title>__inc_numa_state (167 samples, 0.06%)</title><rect x="82.3286%" y="325" width="0.0570%" height="15" fill="rgb(215,118,42)" fg:x="241114" fg:w="167"/><text x="82.5786%" y="335.50"></text></g><g><title>clear_page_erms (8,810 samples, 3.01%)</title><rect x="82.3931%" y="325" width="3.0082%" height="15" fill="rgb(243,119,21)" fg:x="241303" fg:w="8810"/><text x="82.6431%" y="335.50">cle..</text></g><g><title>kernel_init_free_pages (153 samples, 0.05%)</title><rect x="85.4013%" y="325" width="0.0522%" height="15" fill="rgb(252,177,53)" fg:x="250113" fg:w="153"/><text x="85.6513%" y="335.50"></text></g><g><title>_raw_spin_lock (68 samples, 0.02%)</title><rect x="85.8376%" y="309" width="0.0232%" height="15" fill="rgb(237,209,29)" fg:x="251391" fg:w="68"/><text x="86.0876%" y="319.50"></text></g><g><title>_raw_spin_lock (59 samples, 0.02%)</title><rect x="87.1010%" y="293" width="0.0201%" height="15" fill="rgb(212,65,23)" fg:x="255091" fg:w="59"/><text x="87.3510%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath (59 samples, 0.02%)</title><rect x="87.1010%" y="277" width="0.0201%" height="15" fill="rgb(230,222,46)" fg:x="255091" fg:w="59"/><text x="87.3510%" y="287.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (59 samples, 0.02%)</title><rect x="87.1010%" y="261" width="0.0201%" height="15" fill="rgb(215,135,32)" fg:x="255091" fg:w="59"/><text x="87.3510%" y="271.50"></text></g><g><title>rmqueue (4,890 samples, 1.67%)</title><rect x="85.4535%" y="325" width="1.6697%" height="15" fill="rgb(246,101,22)" fg:x="250266" fg:w="4890"/><text x="85.7035%" y="335.50"></text></g><g><title>rmqueue_bulk.constprop.0 (3,685 samples, 1.26%)</title><rect x="85.8650%" y="309" width="1.2582%" height="15" fill="rgb(206,107,13)" fg:x="251471" fg:w="3685"/><text x="86.1150%" y="319.50"></text></g><g><title>get_page_from_freelist (14,999 samples, 5.12%)</title><rect x="82.0028%" y="341" width="5.1214%" height="15" fill="rgb(250,100,44)" fg:x="240160" fg:w="14999"/><text x="82.2528%" y="351.50">get_pa..</text></g><g><title>kernel_init_free_pages (59 samples, 0.02%)</title><rect x="87.1242%" y="341" width="0.0201%" height="15" fill="rgb(231,147,38)" fg:x="255159" fg:w="59"/><text x="87.3742%" y="351.50"></text></g><g><title>rcu_all_qs (64 samples, 0.02%)</title><rect x="87.1444%" y="341" width="0.0219%" height="15" fill="rgb(229,8,40)" fg:x="255218" fg:w="64"/><text x="87.3944%" y="351.50"></text></g><g><title>__alloc_pages (16,434 samples, 5.61%)</title><rect x="81.5613%" y="357" width="5.6114%" height="15" fill="rgb(221,135,30)" fg:x="238867" fg:w="16434"/><text x="81.8113%" y="367.50">__alloc..</text></g><g><title>__cond_resched (42 samples, 0.01%)</title><rect x="87.1727%" y="357" width="0.0143%" height="15" fill="rgb(249,193,18)" fg:x="255301" fg:w="42"/><text x="87.4227%" y="367.50"></text></g><g><title>__next_zones_zonelist (100 samples, 0.03%)</title><rect x="87.1871%" y="357" width="0.0341%" height="15" fill="rgb(209,133,39)" fg:x="255343" fg:w="100"/><text x="87.4371%" y="367.50"></text></g><g><title>get_page_from_freelist (39 samples, 0.01%)</title><rect x="87.2215%" y="357" width="0.0133%" height="15" fill="rgb(232,100,14)" fg:x="255444" fg:w="39"/><text x="87.4715%" y="367.50"></text></g><g><title>policy_nodemask (50 samples, 0.02%)</title><rect x="87.2434%" y="357" width="0.0171%" height="15" fill="rgb(224,185,1)" fg:x="255508" fg:w="50"/><text x="87.4934%" y="367.50"></text></g><g><title>alloc_pages_vma (17,203 samples, 5.87%)</title><rect x="81.4022%" y="373" width="5.8740%" height="15" fill="rgb(223,139,8)" fg:x="238401" fg:w="17203"/><text x="81.6522%" y="383.50">alloc_p..</text></g><g><title>should_fail_alloc_page (46 samples, 0.02%)</title><rect x="87.2605%" y="357" width="0.0157%" height="15" fill="rgb(232,213,38)" fg:x="255558" fg:w="46"/><text x="87.5105%" y="367.50"></text></g><g><title>cgroup_throttle_swaprate (737 samples, 0.25%)</title><rect x="87.2769%" y="373" width="0.2516%" height="15" fill="rgb(207,94,22)" fg:x="255606" fg:w="737"/><text x="87.5269%" y="383.50"></text></g><g><title>get_mem_cgroup_from_mm (76 samples, 0.03%)</title><rect x="87.5285%" y="373" width="0.0260%" height="15" fill="rgb(219,183,54)" fg:x="256343" fg:w="76"/><text x="87.7785%" y="383.50"></text></g><g><title>kthread_blkcg (38 samples, 0.01%)</title><rect x="87.5545%" y="373" width="0.0130%" height="15" fill="rgb(216,185,54)" fg:x="256419" fg:w="38"/><text x="87.8045%" y="383.50"></text></g><g><title>lru_cache_add (42 samples, 0.01%)</title><rect x="87.5674%" y="373" width="0.0143%" height="15" fill="rgb(254,217,39)" fg:x="256457" fg:w="42"/><text x="87.8174%" y="383.50"></text></g><g><title>__mod_zone_page_state (59 samples, 0.02%)</title><rect x="87.8440%" y="325" width="0.0201%" height="15" fill="rgb(240,178,23)" fg:x="257267" fg:w="59"/><text x="88.0940%" y="335.50"></text></g><g><title>__mod_memcg_state.part.0 (90 samples, 0.03%)</title><rect x="88.5566%" y="277" width="0.0307%" height="15" fill="rgb(218,11,47)" fg:x="259354" fg:w="90"/><text x="88.8066%" y="287.50"></text></g><g><title>cgroup_rstat_updated (71 samples, 0.02%)</title><rect x="88.5631%" y="261" width="0.0242%" height="15" fill="rgb(218,51,51)" fg:x="259373" fg:w="71"/><text x="88.8131%" y="271.50"></text></g><g><title>__mod_memcg_lruvec_state (401 samples, 0.14%)</title><rect x="88.4590%" y="293" width="0.1369%" height="15" fill="rgb(238,126,27)" fg:x="259068" fg:w="401"/><text x="88.7090%" y="303.50"></text></g><g><title>__mod_memcg_state.part.0 (37 samples, 0.01%)</title><rect x="88.5959%" y="293" width="0.0126%" height="15" fill="rgb(249,202,22)" fg:x="259469" fg:w="37"/><text x="88.8459%" y="303.50"></text></g><g><title>__mod_lruvec_state (601 samples, 0.21%)</title><rect x="88.4395%" y="309" width="0.2052%" height="15" fill="rgb(254,195,49)" fg:x="259011" fg:w="601"/><text x="88.6895%" y="319.50"></text></g><g><title>__mod_node_page_state (106 samples, 0.04%)</title><rect x="88.6085%" y="293" width="0.0362%" height="15" fill="rgb(208,123,14)" fg:x="259506" fg:w="106"/><text x="88.8585%" y="303.50"></text></g><g><title>__mod_node_page_state (76 samples, 0.03%)</title><rect x="88.6509%" y="309" width="0.0260%" height="15" fill="rgb(224,200,8)" fg:x="259630" fg:w="76"/><text x="88.9009%" y="319.50"></text></g><g><title>__mod_zone_page_state (76 samples, 0.03%)</title><rect x="88.6768%" y="309" width="0.0260%" height="15" fill="rgb(217,61,36)" fg:x="259706" fg:w="76"/><text x="88.9268%" y="319.50"></text></g><g><title>mem_cgroup_update_lru_size (124 samples, 0.04%)</title><rect x="88.7028%" y="309" width="0.0423%" height="15" fill="rgb(206,35,45)" fg:x="259782" fg:w="124"/><text x="88.9528%" y="319.50"></text></g><g><title>__pagevec_lru_add_fn (2,914 samples, 0.99%)</title><rect x="87.8642%" y="325" width="0.9950%" height="15" fill="rgb(217,65,33)" fg:x="257326" fg:w="2914"/><text x="88.1142%" y="335.50"></text></g><g><title>page_mapping (334 samples, 0.11%)</title><rect x="88.7451%" y="309" width="0.1140%" height="15" fill="rgb(222,158,48)" fg:x="259906" fg:w="334"/><text x="88.9951%" y="319.50"></text></g><g><title>_raw_spin_lock_irqsave (198 samples, 0.07%)</title><rect x="88.8725%" y="309" width="0.0676%" height="15" fill="rgb(254,2,54)" fg:x="260279" fg:w="198"/><text x="89.1225%" y="319.50"></text></g><g><title>native_queued_spin_lock_slowpath (123 samples, 0.04%)</title><rect x="88.8981%" y="293" width="0.0420%" height="15" fill="rgb(250,143,38)" fg:x="260354" fg:w="123"/><text x="89.1481%" y="303.50"></text></g><g><title>native_queued_spin_lock_slowpath.part.0 (123 samples, 0.04%)</title><rect x="88.8981%" y="277" width="0.0420%" height="15" fill="rgb(248,25,0)" fg:x="260354" fg:w="123"/><text x="89.1481%" y="287.50"></text></g><g><title>lock_page_lruvec_irqsave (238 samples, 0.08%)</title><rect x="88.8595%" y="325" width="0.0813%" height="15" fill="rgb(206,152,27)" fg:x="260241" fg:w="238"/><text x="89.1095%" y="335.50"></text></g><g><title>page_mapping (36 samples, 0.01%)</title><rect x="88.9510%" y="325" width="0.0123%" height="15" fill="rgb(240,77,30)" fg:x="260509" fg:w="36"/><text x="89.2010%" y="335.50"></text></g><g><title>release_pages (463 samples, 0.16%)</title><rect x="88.9657%" y="325" width="0.1581%" height="15" fill="rgb(231,5,3)" fg:x="260552" fg:w="463"/><text x="89.2157%" y="335.50"></text></g><g><title>__pagevec_lru_add (3,953 samples, 1.35%)</title><rect x="87.7744%" y="341" width="1.3498%" height="15" fill="rgb(207,226,32)" fg:x="257063" fg:w="3953"/><text x="88.0244%" y="351.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (4,552 samples, 1.55%)</title><rect x="87.5818%" y="373" width="1.5543%" height="15" fill="rgb(222,207,47)" fg:x="256499" fg:w="4552"/><text x="87.8318%" y="383.50"></text></g><g><title>lru_cache_add (4,500 samples, 1.54%)</title><rect x="87.5995%" y="357" width="1.5365%" height="15" fill="rgb(229,115,45)" fg:x="256551" fg:w="4500"/><text x="87.8495%" y="367.50"></text></g><g><title>arch_local_irq_enable (74 samples, 0.03%)</title><rect x="89.3792%" y="341" width="0.0253%" height="15" fill="rgb(224,191,6)" fg:x="261763" fg:w="74"/><text x="89.6292%" y="351.50"></text></g><g><title>cgroup_rstat_updated (63 samples, 0.02%)</title><rect x="89.4065%" y="341" width="0.0215%" height="15" fill="rgb(230,227,24)" fg:x="261843" fg:w="63"/><text x="89.6565%" y="351.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (2,772 samples, 0.95%)</title><rect x="89.4280%" y="341" width="0.9465%" height="15" fill="rgb(228,80,19)" fg:x="261906" fg:w="2772"/><text x="89.6780%" y="351.50"></text></g><g><title>cgroup_rstat_updated (196 samples, 0.07%)</title><rect x="90.3076%" y="325" width="0.0669%" height="15" fill="rgb(247,229,0)" fg:x="264482" fg:w="196"/><text x="90.5576%" y="335.50"></text></g><g><title>memcg_check_events (32 samples, 0.01%)</title><rect x="90.3745%" y="341" width="0.0109%" height="15" fill="rgb(237,194,15)" fg:x="264678" fg:w="32"/><text x="90.6245%" y="351.50"></text></g><g><title>arch_local_irq_enable (85 samples, 0.03%)</title><rect x="90.8457%" y="325" width="0.0290%" height="15" fill="rgb(219,203,20)" fg:x="266058" fg:w="85"/><text x="91.0957%" y="335.50"></text></g><g><title>page_counter_try_charge (178 samples, 0.06%)</title><rect x="90.8754%" y="325" width="0.0608%" height="15" fill="rgb(234,128,8)" fg:x="266145" fg:w="178"/><text x="91.1254%" y="335.50"></text></g><g><title>__mem_cgroup_charge (5,093 samples, 1.74%)</title><rect x="89.2050%" y="357" width="1.7390%" height="15" fill="rgb(248,202,8)" fg:x="261253" fg:w="5093"/><text x="89.4550%" y="367.50"></text></g><g><title>try_charge (1,630 samples, 0.56%)</title><rect x="90.3875%" y="341" width="0.5566%" height="15" fill="rgb(206,104,37)" fg:x="264716" fg:w="1630"/><text x="90.6375%" y="351.50"></text></g><g><title>get_mem_cgroup_from_mm (632 samples, 0.22%)</title><rect x="90.9444%" y="357" width="0.2158%" height="15" fill="rgb(223,8,27)" fg:x="266347" fg:w="632"/><text x="91.1944%" y="367.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (33 samples, 0.01%)</title><rect x="91.1602%" y="357" width="0.0113%" height="15" fill="rgb(216,217,28)" fg:x="266979" fg:w="33"/><text x="91.4102%" y="367.50"></text></g><g><title>memcg_check_events (115 samples, 0.04%)</title><rect x="91.1714%" y="357" width="0.0393%" height="15" fill="rgb(249,199,1)" fg:x="267012" fg:w="115"/><text x="91.4214%" y="367.50"></text></g><g><title>rcu_read_unlock_strict (119 samples, 0.04%)</title><rect x="91.2107%" y="357" width="0.0406%" height="15" fill="rgb(240,85,17)" fg:x="267127" fg:w="119"/><text x="91.4607%" y="367.50"></text></g><g><title>mem_cgroup_charge (6,233 samples, 2.13%)</title><rect x="89.1361%" y="373" width="2.1283%" height="15" fill="rgb(206,108,45)" fg:x="261051" fg:w="6233"/><text x="89.3861%" y="383.50">m..</text></g><g><title>try_charge (38 samples, 0.01%)</title><rect x="91.2513%" y="357" width="0.0130%" height="15" fill="rgb(245,210,41)" fg:x="267246" fg:w="38"/><text x="91.5013%" y="367.50"></text></g><g><title>__mod_memcg_state.part.0 (70 samples, 0.02%)</title><rect x="91.5511%" y="309" width="0.0239%" height="15" fill="rgb(206,13,37)" fg:x="268124" fg:w="70"/><text x="91.8011%" y="319.50"></text></g><g><title>cgroup_rstat_updated (49 samples, 0.02%)</title><rect x="91.5583%" y="293" width="0.0167%" height="15" fill="rgb(250,61,18)" fg:x="268145" fg:w="49"/><text x="91.8083%" y="303.50"></text></g><g><title>__mod_memcg_lruvec_state (445 samples, 0.15%)</title><rect x="91.4350%" y="325" width="0.1519%" height="15" fill="rgb(235,172,48)" fg:x="267784" fg:w="445"/><text x="91.6850%" y="335.50"></text></g><g><title>cgroup_rstat_updated (35 samples, 0.01%)</title><rect x="91.5750%" y="309" width="0.0120%" height="15" fill="rgb(249,201,17)" fg:x="268194" fg:w="35"/><text x="91.8250%" y="319.50"></text></g><g><title>__mod_memcg_state.part.0 (57 samples, 0.02%)</title><rect x="91.5870%" y="325" width="0.0195%" height="15" fill="rgb(219,208,6)" fg:x="268229" fg:w="57"/><text x="91.8370%" y="335.50"></text></g><g><title>__mod_lruvec_state (797 samples, 0.27%)</title><rect x="91.4057%" y="341" width="0.2721%" height="15" fill="rgb(248,31,23)" fg:x="267698" fg:w="797"/><text x="91.6557%" y="351.50"></text></g><g><title>__mod_node_page_state (209 samples, 0.07%)</title><rect x="91.6065%" y="325" width="0.0714%" height="15" fill="rgb(245,15,42)" fg:x="268286" fg:w="209"/><text x="91.8565%" y="335.50"></text></g><g><title>__mod_node_page_state (111 samples, 0.04%)</title><rect x="91.6867%" y="341" width="0.0379%" height="15" fill="rgb(222,217,39)" fg:x="268521" fg:w="111"/><text x="91.9367%" y="351.50"></text></g><g><title>__mod_lruvec_page_state (1,181 samples, 0.40%)</title><rect x="91.3272%" y="357" width="0.4033%" height="15" fill="rgb(210,219,27)" fg:x="267468" fg:w="1181"/><text x="91.5772%" y="367.50"></text></g><g><title>__page_set_anon_rmap (81 samples, 0.03%)</title><rect x="91.7389%" y="357" width="0.0277%" height="15" fill="rgb(252,166,36)" fg:x="268674" fg:w="81"/><text x="91.9889%" y="367.50"></text></g><g><title>page_add_new_anon_rmap (1,476 samples, 0.50%)</title><rect x="91.2708%" y="373" width="0.5040%" height="15" fill="rgb(245,132,34)" fg:x="267303" fg:w="1476"/><text x="91.5208%" y="383.50"></text></g><g><title>pfn_pte (41 samples, 0.01%)</title><rect x="91.7748%" y="373" width="0.0140%" height="15" fill="rgb(236,54,3)" fg:x="268779" fg:w="41"/><text x="92.0248%" y="383.50"></text></g><g><title>pmd_page_vaddr (103 samples, 0.04%)</title><rect x="91.7888%" y="373" width="0.0352%" height="15" fill="rgb(241,173,43)" fg:x="268820" fg:w="103"/><text x="92.0388%" y="383.50"></text></g><g><title>pmd_pfn (89 samples, 0.03%)</title><rect x="91.8240%" y="373" width="0.0304%" height="15" fill="rgb(215,190,9)" fg:x="268923" fg:w="89"/><text x="92.0740%" y="383.50"></text></g><g><title>pmd_val (51 samples, 0.02%)</title><rect x="91.8544%" y="373" width="0.0174%" height="15" fill="rgb(242,101,16)" fg:x="269012" fg:w="51"/><text x="92.1044%" y="383.50"></text></g><g><title>policy_node (52 samples, 0.02%)</title><rect x="91.8718%" y="373" width="0.0178%" height="15" fill="rgb(223,190,21)" fg:x="269063" fg:w="52"/><text x="92.1218%" y="383.50"></text></g><g><title>rcu_read_unlock_strict (33 samples, 0.01%)</title><rect x="91.9045%" y="373" width="0.0113%" height="15" fill="rgb(215,228,25)" fg:x="269159" fg:w="33"/><text x="92.1545%" y="383.50"></text></g><g><title>do_anonymous_page (31,755 samples, 10.84%)</title><rect x="81.0799%" y="389" width="10.8428%" height="15" fill="rgb(225,36,22)" fg:x="237457" fg:w="31755"/><text x="81.3299%" y="399.50">do_anonymous_page</text></g><g><title>pfn_pte (55 samples, 0.02%)</title><rect x="91.9476%" y="389" width="0.0188%" height="15" fill="rgb(251,106,46)" fg:x="269285" fg:w="55"/><text x="92.1976%" y="399.50"></text></g><g><title>pmd_page_vaddr (139 samples, 0.05%)</title><rect x="91.9663%" y="389" width="0.0475%" height="15" fill="rgb(208,90,1)" fg:x="269340" fg:w="139"/><text x="92.2163%" y="399.50"></text></g><g><title>pmd_pfn (47 samples, 0.02%)</title><rect x="92.0138%" y="389" width="0.0160%" height="15" fill="rgb(243,10,4)" fg:x="269479" fg:w="47"/><text x="92.2638%" y="399.50"></text></g><g><title>pmd_val (120 samples, 0.04%)</title><rect x="92.0299%" y="389" width="0.0410%" height="15" fill="rgb(212,137,27)" fg:x="269526" fg:w="120"/><text x="92.2799%" y="399.50"></text></g><g><title>queued_spin_unlock (31 samples, 0.01%)</title><rect x="92.0708%" y="389" width="0.0106%" height="15" fill="rgb(231,220,49)" fg:x="269646" fg:w="31"/><text x="92.3208%" y="399.50"></text></g><g><title>handle_pte_fault (33,232 samples, 11.35%)</title><rect x="80.7350%" y="405" width="11.3471%" height="15" fill="rgb(237,96,20)" fg:x="236447" fg:w="33232"/><text x="80.9850%" y="415.50">handle_pte_fault</text></g><g><title>pmd_val (95 samples, 0.03%)</title><rect x="92.0896%" y="405" width="0.0324%" height="15" fill="rgb(239,229,30)" fg:x="269701" fg:w="95"/><text x="92.3396%" y="415.50"></text></g><g><title>__handle_mm_fault (35,006 samples, 11.95%)</title><rect x="80.2061%" y="421" width="11.9528%" height="15" fill="rgb(219,65,33)" fg:x="234898" fg:w="35006"/><text x="80.4561%" y="431.50">__handle_mm_fault</text></g><g><title>pud_val (108 samples, 0.04%)</title><rect x="92.1220%" y="405" width="0.0369%" height="15" fill="rgb(243,134,7)" fg:x="269796" fg:w="108"/><text x="92.3720%" y="415.50"></text></g><g><title>cgroup_rstat_updated (41 samples, 0.01%)</title><rect x="92.1617%" y="421" width="0.0140%" height="15" fill="rgb(216,177,54)" fg:x="269912" fg:w="41"/><text x="92.4117%" y="431.50"></text></g><g><title>handle_pte_fault (42 samples, 0.01%)</title><rect x="92.1757%" y="421" width="0.0143%" height="15" fill="rgb(211,160,20)" fg:x="269953" fg:w="42"/><text x="92.4257%" y="431.50"></text></g><g><title>p4d_offset (41 samples, 0.01%)</title><rect x="92.1979%" y="421" width="0.0140%" height="15" fill="rgb(239,85,39)" fg:x="270018" fg:w="41"/><text x="92.4479%" y="431.50"></text></g><g><title>pmd_val (44 samples, 0.02%)</title><rect x="92.2190%" y="421" width="0.0150%" height="15" fill="rgb(232,125,22)" fg:x="270080" fg:w="44"/><text x="92.4690%" y="431.50"></text></g><g><title>pud_val (103 samples, 0.04%)</title><rect x="92.2340%" y="421" width="0.0352%" height="15" fill="rgb(244,57,34)" fg:x="270124" fg:w="103"/><text x="92.4840%" y="431.50"></text></g><g><title>handle_mm_fault (36,340 samples, 12.41%)</title><rect x="79.8783%" y="437" width="12.4083%" height="15" fill="rgb(214,203,32)" fg:x="233938" fg:w="36340"/><text x="80.1283%" y="447.50">handle_mm_fault</text></g><g><title>sync_mm_rss (33 samples, 0.01%)</title><rect x="92.2754%" y="421" width="0.0113%" height="15" fill="rgb(207,58,43)" fg:x="270245" fg:w="33"/><text x="92.5254%" y="431.50"></text></g><g><title>mem_cgroup_from_task (89 samples, 0.03%)</title><rect x="92.2866%" y="437" width="0.0304%" height="15" fill="rgb(215,193,15)" fg:x="270278" fg:w="89"/><text x="92.5366%" y="447.50"></text></g><g><title>rcu_all_qs (44 samples, 0.02%)</title><rect x="92.3170%" y="437" width="0.0150%" height="15" fill="rgb(232,15,44)" fg:x="270367" fg:w="44"/><text x="92.5670%" y="447.50"></text></g><g><title>up_read (700 samples, 0.24%)</title><rect x="92.3416%" y="437" width="0.2390%" height="15" fill="rgb(212,3,48)" fg:x="270439" fg:w="700"/><text x="92.5916%" y="447.50"></text></g><g><title>do_user_addr_fault (38,792 samples, 13.25%)</title><rect x="79.3453%" y="453" width="13.2456%" height="15" fill="rgb(218,128,7)" fg:x="232377" fg:w="38792"/><text x="79.5953%" y="463.50">do_user_addr_fault</text></g><g><title>vmacache_find (30 samples, 0.01%)</title><rect x="92.5806%" y="437" width="0.0102%" height="15" fill="rgb(226,216,39)" fg:x="271139" fg:w="30"/><text x="92.8306%" y="447.50"></text></g><g><title>down_read_trylock (38 samples, 0.01%)</title><rect x="92.5909%" y="453" width="0.0130%" height="15" fill="rgb(243,47,51)" fg:x="271169" fg:w="38"/><text x="92.8409%" y="463.50"></text></g><g><title>handle_mm_fault (42 samples, 0.01%)</title><rect x="92.6134%" y="453" width="0.0143%" height="15" fill="rgb(241,183,40)" fg:x="271235" fg:w="42"/><text x="92.8634%" y="463.50"></text></g><g><title>irqentry_enter (40 samples, 0.01%)</title><rect x="92.6277%" y="453" width="0.0137%" height="15" fill="rgb(231,217,32)" fg:x="271277" fg:w="40"/><text x="92.8777%" y="463.50"></text></g><g><title>exit_to_user_mode_prepare (75 samples, 0.03%)</title><rect x="92.6595%" y="437" width="0.0256%" height="15" fill="rgb(229,61,38)" fg:x="271370" fg:w="75"/><text x="92.9095%" y="447.50"></text></g><g><title>exit_to_user_mode_prepare (527 samples, 0.18%)</title><rect x="92.6895%" y="421" width="0.1799%" height="15" fill="rgb(225,210,5)" fg:x="271458" fg:w="527"/><text x="92.9395%" y="431.50"></text></g><g><title>fpregs_assert_state_consistent (53 samples, 0.02%)</title><rect x="92.8514%" y="405" width="0.0181%" height="15" fill="rgb(231,79,45)" fg:x="271932" fg:w="53"/><text x="93.1014%" y="415.50"></text></g><g><title>irqentry_exit (696 samples, 0.24%)</title><rect x="92.6472%" y="453" width="0.2376%" height="15" fill="rgb(224,100,7)" fg:x="271334" fg:w="696"/><text x="92.8972%" y="463.50"></text></g><g><title>irqentry_exit_to_user_mode (585 samples, 0.20%)</title><rect x="92.6851%" y="437" width="0.1997%" height="15" fill="rgb(241,198,18)" fg:x="271445" fg:w="585"/><text x="92.9351%" y="447.50"></text></g><g><title>fpregs_assert_state_consistent (45 samples, 0.02%)</title><rect x="92.8695%" y="421" width="0.0154%" height="15" fill="rgb(252,97,53)" fg:x="271985" fg:w="45"/><text x="93.1195%" y="431.50"></text></g><g><title>exc_page_fault (40,096 samples, 13.69%)</title><rect x="79.2056%" y="469" width="13.6908%" height="15" fill="rgb(220,88,7)" fg:x="231968" fg:w="40096"/><text x="79.4556%" y="479.50">exc_page_fault</text></g><g><title>asm_exc_page_fault (40,833 samples, 13.94%)</title><rect x="78.9673%" y="485" width="13.9425%" height="15" fill="rgb(213,176,14)" fg:x="231270" fg:w="40833"/><text x="79.2173%" y="495.50">asm_exc_page_fault</text></g><g><title>__sysvec_apic_timer_interrupt (33 samples, 0.01%)</title><rect x="92.9105%" y="453" width="0.0113%" height="15" fill="rgb(246,73,7)" fg:x="272105" fg:w="33"/><text x="93.1605%" y="463.50"></text></g><g><title>hrtimer_interrupt (31 samples, 0.01%)</title><rect x="92.9111%" y="437" width="0.0106%" height="15" fill="rgb(245,64,36)" fg:x="272107" fg:w="31"/><text x="93.1611%" y="447.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (48 samples, 0.02%)</title><rect x="92.9098%" y="485" width="0.0164%" height="15" fill="rgb(245,80,10)" fg:x="272103" fg:w="48"/><text x="93.1598%" y="495.50"></text></g><g><title>sysvec_apic_timer_interrupt (46 samples, 0.02%)</title><rect x="92.9105%" y="469" width="0.0157%" height="15" fill="rgb(232,107,50)" fg:x="272105" fg:w="46"/><text x="93.1605%" y="479.50"></text></g><g><title>error_entry (1,026 samples, 0.35%)</title><rect x="92.9262%" y="485" width="0.3503%" height="15" fill="rgb(253,3,0)" fg:x="272151" fg:w="1026"/><text x="93.1762%" y="495.50"></text></g><g><title>__memcpy_avx_unaligned_erms (72,217 samples, 24.66%)</title><rect x="70.2211%" y="501" width="24.6585%" height="15" fill="rgb(212,99,53)" fg:x="205655" fg:w="72217"/><text x="70.4711%" y="511.50">__memcpy_avx_unaligned_erms</text></g><g><title>sync_regs (4,653 samples, 1.59%)</title><rect x="93.2908%" y="485" width="1.5888%" height="15" fill="rgb(249,111,54)" fg:x="273219" fg:w="4653"/><text x="93.5408%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (80,715 samples, 27.56%)</title><rect x="67.3201%" y="533" width="27.5602%" height="15" fill="rgb(249,55,30)" fg:x="197159" fg:w="80715"/><text x="67.5701%" y="543.50">alloc::vec::Vec&lt;T,A&gt;::push</text></g><g><title>core::ptr::write (72,445 samples, 24.74%)</title><rect x="70.1439%" y="517" width="24.7364%" height="15" fill="rgb(237,47,42)" fg:x="205429" fg:w="72445"/><text x="70.3939%" y="527.50">core::ptr::write</text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (137,667 samples, 47.01%)</title><rect x="48.0715%" y="565" width="47.0065%" height="15" fill="rgb(211,20,18)" fg:x="140786" fg:w="137667"/><text x="48.3215%" y="575.50">hprof_slurp::record_parser::HprofRecordParser::parse_streaming</text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (137,667 samples, 47.01%)</title><rect x="48.0715%" y="549" width="47.0065%" height="15" fill="rgb(231,203,46)" fg:x="140786" fg:w="137667"/><text x="48.3215%" y="559.50">hprof_slurp::record_parser::lazy_many1::{{closure}}</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (574 samples, 0.20%)</title><rect x="94.8820%" y="533" width="0.1960%" height="15" fill="rgb(237,142,3)" fg:x="277879" fg:w="574"/><text x="95.1320%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (574 samples, 0.20%)</title><rect x="94.8820%" y="517" width="0.1960%" height="15" fill="rgb(241,107,1)" fg:x="277879" fg:w="574"/><text x="95.1320%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (574 samples, 0.20%)</title><rect x="94.8820%" y="501" width="0.1960%" height="15" fill="rgb(229,83,13)" fg:x="277879" fg:w="574"/><text x="95.1320%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (34 samples, 0.01%)</title><rect x="95.0957%" y="373" width="0.0116%" height="15" fill="rgb(241,91,40)" fg:x="278505" fg:w="34"/><text x="95.3457%" y="383.50"></text></g><g><title>core::ops::function::FnMut::call_mut (34 samples, 0.01%)</title><rect x="95.0957%" y="357" width="0.0116%" height="15" fill="rgb(225,3,45)" fg:x="278505" fg:w="34"/><text x="95.3457%" y="367.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (34 samples, 0.01%)</title><rect x="95.0957%" y="341" width="0.0116%" height="15" fill="rgb(244,223,14)" fg:x="278505" fg:w="34"/><text x="95.3457%" y="351.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (34 samples, 0.01%)</title><rect x="95.0957%" y="325" width="0.0116%" height="15" fill="rgb(224,124,37)" fg:x="278505" fg:w="34"/><text x="95.3457%" y="335.50"></text></g><g><title>nom::number::streaming::be_u64 (34 samples, 0.01%)</title><rect x="95.0957%" y="309" width="0.0116%" height="15" fill="rgb(251,171,30)" fg:x="278505" fg:w="34"/><text x="95.3457%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (54 samples, 0.02%)</title><rect x="95.1074%" y="373" width="0.0184%" height="15" fill="rgb(236,46,54)" fg:x="278539" fg:w="54"/><text x="95.3574%" y="383.50"></text></g><g><title>core::ptr::write (49 samples, 0.02%)</title><rect x="95.1091%" y="357" width="0.0167%" height="15" fill="rgb(245,213,5)" fg:x="278544" fg:w="49"/><text x="95.3591%" y="367.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (124 samples, 0.04%)</title><rect x="95.0858%" y="549" width="0.0423%" height="15" fill="rgb(230,144,27)" fg:x="278476" fg:w="124"/><text x="95.3358%" y="559.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (124 samples, 0.04%)</title><rect x="95.0858%" y="533" width="0.0423%" height="15" fill="rgb(220,86,6)" fg:x="278476" fg:w="124"/><text x="95.3358%" y="543.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (124 samples, 0.04%)</title><rect x="95.0858%" y="517" width="0.0423%" height="15" fill="rgb(240,20,13)" fg:x="278476" fg:w="124"/><text x="95.3358%" y="527.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (124 samples, 0.04%)</title><rect x="95.0858%" y="501" width="0.0423%" height="15" fill="rgb(217,89,34)" fg:x="278476" fg:w="124"/><text x="95.3358%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (124 samples, 0.04%)</title><rect x="95.0858%" y="485" width="0.0423%" height="15" fill="rgb(229,13,5)" fg:x="278476" fg:w="124"/><text x="95.3358%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (124 samples, 0.04%)</title><rect x="95.0858%" y="469" width="0.0423%" height="15" fill="rgb(244,67,35)" fg:x="278476" fg:w="124"/><text x="95.3358%" y="479.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (124 samples, 0.04%)</title><rect x="95.0858%" y="453" width="0.0423%" height="15" fill="rgb(221,40,2)" fg:x="278476" fg:w="124"/><text x="95.3358%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (124 samples, 0.04%)</title><rect x="95.0858%" y="437" width="0.0423%" height="15" fill="rgb(237,157,21)" fg:x="278476" fg:w="124"/><text x="95.3358%" y="447.50"></text></g><g><title>nom::combinator::map::{{closure}} (124 samples, 0.04%)</title><rect x="95.0858%" y="421" width="0.0423%" height="15" fill="rgb(222,94,11)" fg:x="278476" fg:w="124"/><text x="95.3358%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (124 samples, 0.04%)</title><rect x="95.0858%" y="405" width="0.0423%" height="15" fill="rgb(249,113,6)" fg:x="278476" fg:w="124"/><text x="95.3358%" y="415.50"></text></g><g><title>nom::multi::count::{{closure}} (124 samples, 0.04%)</title><rect x="95.0858%" y="389" width="0.0423%" height="15" fill="rgb(238,137,36)" fg:x="278476" fg:w="124"/><text x="95.3358%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (62 samples, 0.02%)</title><rect x="95.1504%" y="357" width="0.0212%" height="15" fill="rgb(210,102,26)" fg:x="278665" fg:w="62"/><text x="95.4004%" y="367.50"></text></g><g><title>core::ops::function::FnMut::call_mut (62 samples, 0.02%)</title><rect x="95.1504%" y="341" width="0.0212%" height="15" fill="rgb(218,30,30)" fg:x="278665" fg:w="62"/><text x="95.4004%" y="351.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (62 samples, 0.02%)</title><rect x="95.1504%" y="325" width="0.0212%" height="15" fill="rgb(214,67,26)" fg:x="278665" fg:w="62"/><text x="95.4004%" y="335.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (62 samples, 0.02%)</title><rect x="95.1504%" y="309" width="0.0212%" height="15" fill="rgb(251,9,53)" fg:x="278665" fg:w="62"/><text x="95.4004%" y="319.50"></text></g><g><title>nom::number::streaming::be_u64 (62 samples, 0.02%)</title><rect x="95.1504%" y="293" width="0.0212%" height="15" fill="rgb(228,204,25)" fg:x="278665" fg:w="62"/><text x="95.4004%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.01%)</title><rect x="95.1586%" y="277" width="0.0130%" height="15" fill="rgb(207,153,8)" fg:x="278689" fg:w="38"/><text x="95.4086%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (38 samples, 0.01%)</title><rect x="95.1586%" y="261" width="0.0130%" height="15" fill="rgb(242,9,16)" fg:x="278689" fg:w="38"/><text x="95.4086%" y="271.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (38 samples, 0.01%)</title><rect x="95.1586%" y="245" width="0.0130%" height="15" fill="rgb(217,211,10)" fg:x="278689" fg:w="38"/><text x="95.4086%" y="255.50"></text></g><g><title>do_user_addr_fault (37 samples, 0.01%)</title><rect x="95.1794%" y="293" width="0.0126%" height="15" fill="rgb(219,228,52)" fg:x="278750" fg:w="37"/><text x="95.4294%" y="303.50"></text></g><g><title>handle_mm_fault (34 samples, 0.01%)</title><rect x="95.1804%" y="277" width="0.0116%" height="15" fill="rgb(231,92,29)" fg:x="278753" fg:w="34"/><text x="95.4304%" y="287.50"></text></g><g><title>asm_exc_page_fault (38 samples, 0.01%)</title><rect x="95.1794%" y="325" width="0.0130%" height="15" fill="rgb(232,8,23)" fg:x="278750" fg:w="38"/><text x="95.4294%" y="335.50"></text></g><g><title>exc_page_fault (38 samples, 0.01%)</title><rect x="95.1794%" y="309" width="0.0130%" height="15" fill="rgb(216,211,34)" fg:x="278750" fg:w="38"/><text x="95.4294%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (68 samples, 0.02%)</title><rect x="95.1715%" y="357" width="0.0232%" height="15" fill="rgb(236,151,0)" fg:x="278727" fg:w="68"/><text x="95.4215%" y="367.50"></text></g><g><title>core::ptr::write (62 samples, 0.02%)</title><rect x="95.1736%" y="341" width="0.0212%" height="15" fill="rgb(209,168,3)" fg:x="278733" fg:w="62"/><text x="95.4236%" y="351.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (178 samples, 0.06%)</title><rect x="95.1374%" y="533" width="0.0608%" height="15" fill="rgb(208,129,28)" fg:x="278627" fg:w="178"/><text x="95.3874%" y="543.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (178 samples, 0.06%)</title><rect x="95.1374%" y="517" width="0.0608%" height="15" fill="rgb(229,78,22)" fg:x="278627" fg:w="178"/><text x="95.3874%" y="527.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (178 samples, 0.06%)</title><rect x="95.1374%" y="501" width="0.0608%" height="15" fill="rgb(228,187,13)" fg:x="278627" fg:w="178"/><text x="95.3874%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (178 samples, 0.06%)</title><rect x="95.1374%" y="485" width="0.0608%" height="15" fill="rgb(240,119,24)" fg:x="278627" fg:w="178"/><text x="95.3874%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (178 samples, 0.06%)</title><rect x="95.1374%" y="469" width="0.0608%" height="15" fill="rgb(209,194,42)" fg:x="278627" fg:w="178"/><text x="95.3874%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (178 samples, 0.06%)</title><rect x="95.1374%" y="453" width="0.0608%" height="15" fill="rgb(247,200,46)" fg:x="278627" fg:w="178"/><text x="95.3874%" y="463.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (178 samples, 0.06%)</title><rect x="95.1374%" y="437" width="0.0608%" height="15" fill="rgb(218,76,16)" fg:x="278627" fg:w="178"/><text x="95.3874%" y="447.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (178 samples, 0.06%)</title><rect x="95.1374%" y="421" width="0.0608%" height="15" fill="rgb(225,21,48)" fg:x="278627" fg:w="178"/><text x="95.3874%" y="431.50"></text></g><g><title>nom::combinator::map::{{closure}} (178 samples, 0.06%)</title><rect x="95.1374%" y="405" width="0.0608%" height="15" fill="rgb(239,223,50)" fg:x="278627" fg:w="178"/><text x="95.3874%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (178 samples, 0.06%)</title><rect x="95.1374%" y="389" width="0.0608%" height="15" fill="rgb(244,45,21)" fg:x="278627" fg:w="178"/><text x="95.3874%" y="399.50"></text></g><g><title>nom::multi::count::{{closure}} (178 samples, 0.06%)</title><rect x="95.1374%" y="373" width="0.0608%" height="15" fill="rgb(232,33,43)" fg:x="278627" fg:w="178"/><text x="95.3874%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (58 samples, 0.02%)</title><rect x="95.2282%" y="341" width="0.0198%" height="15" fill="rgb(209,8,3)" fg:x="278893" fg:w="58"/><text x="95.4782%" y="351.50"></text></g><g><title>core::ops::function::FnMut::call_mut (58 samples, 0.02%)</title><rect x="95.2282%" y="325" width="0.0198%" height="15" fill="rgb(214,25,53)" fg:x="278893" fg:w="58"/><text x="95.4782%" y="335.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (58 samples, 0.02%)</title><rect x="95.2282%" y="309" width="0.0198%" height="15" fill="rgb(254,186,54)" fg:x="278893" fg:w="58"/><text x="95.4782%" y="319.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (58 samples, 0.02%)</title><rect x="95.2282%" y="293" width="0.0198%" height="15" fill="rgb(208,174,49)" fg:x="278893" fg:w="58"/><text x="95.4782%" y="303.50"></text></g><g><title>nom::number::streaming::be_u64 (58 samples, 0.02%)</title><rect x="95.2282%" y="277" width="0.0198%" height="15" fill="rgb(233,191,51)" fg:x="278893" fg:w="58"/><text x="95.4782%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.02%)</title><rect x="95.2316%" y="261" width="0.0164%" height="15" fill="rgb(222,134,10)" fg:x="278903" fg:w="48"/><text x="95.4816%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (48 samples, 0.02%)</title><rect x="95.2316%" y="245" width="0.0164%" height="15" fill="rgb(230,226,20)" fg:x="278903" fg:w="48"/><text x="95.4816%" y="255.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (48 samples, 0.02%)</title><rect x="95.2316%" y="229" width="0.0164%" height="15" fill="rgb(251,111,25)" fg:x="278903" fg:w="48"/><text x="95.4816%" y="239.50"></text></g><g><title>alloc_pages_vma (30 samples, 0.01%)</title><rect x="95.2634%" y="197" width="0.0102%" height="15" fill="rgb(224,40,46)" fg:x="278996" fg:w="30"/><text x="95.5134%" y="207.50"></text></g><g><title>__alloc_pages (30 samples, 0.01%)</title><rect x="95.2634%" y="181" width="0.0102%" height="15" fill="rgb(236,108,47)" fg:x="278996" fg:w="30"/><text x="95.5134%" y="191.50"></text></g><g><title>__handle_mm_fault (49 samples, 0.02%)</title><rect x="95.2610%" y="245" width="0.0167%" height="15" fill="rgb(234,93,0)" fg:x="278989" fg:w="49"/><text x="95.5110%" y="255.50"></text></g><g><title>handle_pte_fault (44 samples, 0.02%)</title><rect x="95.2627%" y="229" width="0.0150%" height="15" fill="rgb(224,213,32)" fg:x="278994" fg:w="44"/><text x="95.5127%" y="239.50"></text></g><g><title>do_anonymous_page (42 samples, 0.01%)</title><rect x="95.2634%" y="213" width="0.0143%" height="15" fill="rgb(251,11,48)" fg:x="278996" fg:w="42"/><text x="95.5134%" y="223.50"></text></g><g><title>handle_mm_fault (51 samples, 0.02%)</title><rect x="95.2607%" y="261" width="0.0174%" height="15" fill="rgb(236,173,5)" fg:x="278988" fg:w="51"/><text x="95.5107%" y="271.50"></text></g><g><title>do_user_addr_fault (52 samples, 0.02%)</title><rect x="95.2607%" y="277" width="0.0178%" height="15" fill="rgb(230,95,12)" fg:x="278988" fg:w="52"/><text x="95.5107%" y="287.50"></text></g><g><title>asm_exc_page_fault (54 samples, 0.02%)</title><rect x="95.2603%" y="309" width="0.0184%" height="15" fill="rgb(232,209,1)" fg:x="278987" fg:w="54"/><text x="95.5103%" y="319.50"></text></g><g><title>exc_page_fault (53 samples, 0.02%)</title><rect x="95.2607%" y="293" width="0.0181%" height="15" fill="rgb(232,6,1)" fg:x="278988" fg:w="53"/><text x="95.5107%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (93 samples, 0.03%)</title><rect x="95.2480%" y="341" width="0.0318%" height="15" fill="rgb(210,224,50)" fg:x="278951" fg:w="93"/><text x="95.4980%" y="351.50"></text></g><g><title>core::ptr::write (84 samples, 0.03%)</title><rect x="95.2511%" y="325" width="0.0287%" height="15" fill="rgb(228,127,35)" fg:x="278960" fg:w="84"/><text x="95.5011%" y="335.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (224 samples, 0.08%)</title><rect x="95.2081%" y="517" width="0.0765%" height="15" fill="rgb(245,102,45)" fg:x="278834" fg:w="224"/><text x="95.4581%" y="527.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (224 samples, 0.08%)</title><rect x="95.2081%" y="501" width="0.0765%" height="15" fill="rgb(214,1,49)" fg:x="278834" fg:w="224"/><text x="95.4581%" y="511.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (224 samples, 0.08%)</title><rect x="95.2081%" y="485" width="0.0765%" height="15" fill="rgb(226,163,40)" fg:x="278834" fg:w="224"/><text x="95.4581%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (224 samples, 0.08%)</title><rect x="95.2081%" y="469" width="0.0765%" height="15" fill="rgb(239,212,28)" fg:x="278834" fg:w="224"/><text x="95.4581%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (224 samples, 0.08%)</title><rect x="95.2081%" y="453" width="0.0765%" height="15" fill="rgb(220,20,13)" fg:x="278834" fg:w="224"/><text x="95.4581%" y="463.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (224 samples, 0.08%)</title><rect x="95.2081%" y="437" width="0.0765%" height="15" fill="rgb(210,164,35)" fg:x="278834" fg:w="224"/><text x="95.4581%" y="447.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (224 samples, 0.08%)</title><rect x="95.2081%" y="421" width="0.0765%" height="15" fill="rgb(248,109,41)" fg:x="278834" fg:w="224"/><text x="95.4581%" y="431.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (224 samples, 0.08%)</title><rect x="95.2081%" y="405" width="0.0765%" height="15" fill="rgb(238,23,50)" fg:x="278834" fg:w="224"/><text x="95.4581%" y="415.50"></text></g><g><title>nom::combinator::map::{{closure}} (224 samples, 0.08%)</title><rect x="95.2081%" y="389" width="0.0765%" height="15" fill="rgb(211,48,49)" fg:x="278834" fg:w="224"/><text x="95.4581%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (224 samples, 0.08%)</title><rect x="95.2081%" y="373" width="0.0765%" height="15" fill="rgb(223,36,21)" fg:x="278834" fg:w="224"/><text x="95.4581%" y="383.50"></text></g><g><title>nom::multi::count::{{closure}} (224 samples, 0.08%)</title><rect x="95.2081%" y="357" width="0.0765%" height="15" fill="rgb(207,123,46)" fg:x="278834" fg:w="224"/><text x="95.4581%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.02%)</title><rect x="95.3259%" y="245" width="0.0188%" height="15" fill="rgb(240,218,32)" fg:x="279179" fg:w="55"/><text x="95.5759%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.02%)</title><rect x="95.3259%" y="229" width="0.0188%" height="15" fill="rgb(252,5,43)" fg:x="279179" fg:w="55"/><text x="95.5759%" y="239.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (55 samples, 0.02%)</title><rect x="95.3259%" y="213" width="0.0188%" height="15" fill="rgb(252,84,19)" fg:x="279179" fg:w="55"/><text x="95.5759%" y="223.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (82 samples, 0.03%)</title><rect x="95.3170%" y="325" width="0.0280%" height="15" fill="rgb(243,152,39)" fg:x="279153" fg:w="82"/><text x="95.5670%" y="335.50"></text></g><g><title>core::ops::function::FnMut::call_mut (82 samples, 0.03%)</title><rect x="95.3170%" y="309" width="0.0280%" height="15" fill="rgb(234,160,15)" fg:x="279153" fg:w="82"/><text x="95.5670%" y="319.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (82 samples, 0.03%)</title><rect x="95.3170%" y="293" width="0.0280%" height="15" fill="rgb(237,34,20)" fg:x="279153" fg:w="82"/><text x="95.5670%" y="303.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (82 samples, 0.03%)</title><rect x="95.3170%" y="277" width="0.0280%" height="15" fill="rgb(229,97,13)" fg:x="279153" fg:w="82"/><text x="95.5670%" y="287.50"></text></g><g><title>nom::number::streaming::be_u64 (82 samples, 0.03%)</title><rect x="95.3170%" y="261" width="0.0280%" height="15" fill="rgb(234,71,50)" fg:x="279153" fg:w="82"/><text x="95.5670%" y="271.50"></text></g><g><title>__handle_mm_fault (43 samples, 0.01%)</title><rect x="95.3597%" y="229" width="0.0147%" height="15" fill="rgb(253,155,4)" fg:x="279278" fg:w="43"/><text x="95.6097%" y="239.50"></text></g><g><title>handle_pte_fault (41 samples, 0.01%)</title><rect x="95.3604%" y="213" width="0.0140%" height="15" fill="rgb(222,185,37)" fg:x="279280" fg:w="41"/><text x="95.6104%" y="223.50"></text></g><g><title>do_anonymous_page (41 samples, 0.01%)</title><rect x="95.3604%" y="197" width="0.0140%" height="15" fill="rgb(251,177,13)" fg:x="279280" fg:w="41"/><text x="95.6104%" y="207.50"></text></g><g><title>do_user_addr_fault (45 samples, 0.02%)</title><rect x="95.3593%" y="261" width="0.0154%" height="15" fill="rgb(250,179,40)" fg:x="279277" fg:w="45"/><text x="95.6093%" y="271.50"></text></g><g><title>handle_mm_fault (45 samples, 0.02%)</title><rect x="95.3593%" y="245" width="0.0154%" height="15" fill="rgb(242,44,2)" fg:x="279277" fg:w="45"/><text x="95.6093%" y="255.50"></text></g><g><title>asm_exc_page_fault (46 samples, 0.02%)</title><rect x="95.3593%" y="293" width="0.0157%" height="15" fill="rgb(216,177,13)" fg:x="279277" fg:w="46"/><text x="95.6093%" y="303.50"></text></g><g><title>exc_page_fault (46 samples, 0.02%)</title><rect x="95.3593%" y="277" width="0.0157%" height="15" fill="rgb(216,106,43)" fg:x="279277" fg:w="46"/><text x="95.6093%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (99 samples, 0.03%)</title><rect x="95.3450%" y="325" width="0.0338%" height="15" fill="rgb(216,183,2)" fg:x="279235" fg:w="99"/><text x="95.5950%" y="335.50"></text></g><g><title>core::ptr::write (84 samples, 0.03%)</title><rect x="95.3501%" y="309" width="0.0287%" height="15" fill="rgb(249,75,3)" fg:x="279250" fg:w="84"/><text x="95.6001%" y="319.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (270 samples, 0.09%)</title><rect x="95.2924%" y="501" width="0.0922%" height="15" fill="rgb(219,67,39)" fg:x="279081" fg:w="270"/><text x="95.5424%" y="511.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (270 samples, 0.09%)</title><rect x="95.2924%" y="485" width="0.0922%" height="15" fill="rgb(253,228,2)" fg:x="279081" fg:w="270"/><text x="95.5424%" y="495.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (270 samples, 0.09%)</title><rect x="95.2924%" y="469" width="0.0922%" height="15" fill="rgb(235,138,27)" fg:x="279081" fg:w="270"/><text x="95.5424%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (270 samples, 0.09%)</title><rect x="95.2924%" y="453" width="0.0922%" height="15" fill="rgb(236,97,51)" fg:x="279081" fg:w="270"/><text x="95.5424%" y="463.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (270 samples, 0.09%)</title><rect x="95.2924%" y="437" width="0.0922%" height="15" fill="rgb(240,80,30)" fg:x="279081" fg:w="270"/><text x="95.5424%" y="447.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (270 samples, 0.09%)</title><rect x="95.2924%" y="421" width="0.0922%" height="15" fill="rgb(230,178,19)" fg:x="279081" fg:w="270"/><text x="95.5424%" y="431.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (270 samples, 0.09%)</title><rect x="95.2924%" y="405" width="0.0922%" height="15" fill="rgb(210,190,27)" fg:x="279081" fg:w="270"/><text x="95.5424%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (270 samples, 0.09%)</title><rect x="95.2924%" y="389" width="0.0922%" height="15" fill="rgb(222,107,31)" fg:x="279081" fg:w="270"/><text x="95.5424%" y="399.50"></text></g><g><title>nom::combinator::map::{{closure}} (270 samples, 0.09%)</title><rect x="95.2924%" y="373" width="0.0922%" height="15" fill="rgb(216,127,34)" fg:x="279081" fg:w="270"/><text x="95.5424%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (270 samples, 0.09%)</title><rect x="95.2924%" y="357" width="0.0922%" height="15" fill="rgb(234,116,52)" fg:x="279081" fg:w="270"/><text x="95.5424%" y="367.50"></text></g><g><title>nom::multi::count::{{closure}} (270 samples, 0.09%)</title><rect x="95.2924%" y="341" width="0.0922%" height="15" fill="rgb(222,124,15)" fg:x="279081" fg:w="270"/><text x="95.5424%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (88 samples, 0.03%)</title><rect x="95.4201%" y="309" width="0.0300%" height="15" fill="rgb(231,179,28)" fg:x="279455" fg:w="88"/><text x="95.6701%" y="319.50"></text></g><g><title>core::ops::function::FnMut::call_mut (88 samples, 0.03%)</title><rect x="95.4201%" y="293" width="0.0300%" height="15" fill="rgb(226,93,45)" fg:x="279455" fg:w="88"/><text x="95.6701%" y="303.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (88 samples, 0.03%)</title><rect x="95.4201%" y="277" width="0.0300%" height="15" fill="rgb(215,8,51)" fg:x="279455" fg:w="88"/><text x="95.6701%" y="287.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (88 samples, 0.03%)</title><rect x="95.4201%" y="261" width="0.0300%" height="15" fill="rgb(223,106,5)" fg:x="279455" fg:w="88"/><text x="95.6701%" y="271.50"></text></g><g><title>nom::number::streaming::be_u64 (88 samples, 0.03%)</title><rect x="95.4201%" y="245" width="0.0300%" height="15" fill="rgb(250,191,5)" fg:x="279455" fg:w="88"/><text x="95.6701%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.02%)</title><rect x="95.4287%" y="229" width="0.0215%" height="15" fill="rgb(242,132,44)" fg:x="279480" fg:w="63"/><text x="95.6787%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.02%)</title><rect x="95.4287%" y="213" width="0.0215%" height="15" fill="rgb(251,152,29)" fg:x="279480" fg:w="63"/><text x="95.6787%" y="223.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (63 samples, 0.02%)</title><rect x="95.4287%" y="197" width="0.0215%" height="15" fill="rgb(218,179,5)" fg:x="279480" fg:w="63"/><text x="95.6787%" y="207.50"></text></g><g><title>do_anonymous_page (49 samples, 0.02%)</title><rect x="95.4696%" y="181" width="0.0167%" height="15" fill="rgb(227,67,19)" fg:x="279600" fg:w="49"/><text x="95.7196%" y="191.50"></text></g><g><title>handle_pte_fault (51 samples, 0.02%)</title><rect x="95.4693%" y="197" width="0.0174%" height="15" fill="rgb(233,119,31)" fg:x="279599" fg:w="51"/><text x="95.7193%" y="207.50"></text></g><g><title>__handle_mm_fault (53 samples, 0.02%)</title><rect x="95.4689%" y="213" width="0.0181%" height="15" fill="rgb(241,120,22)" fg:x="279598" fg:w="53"/><text x="95.7189%" y="223.50"></text></g><g><title>handle_mm_fault (56 samples, 0.02%)</title><rect x="95.4683%" y="229" width="0.0191%" height="15" fill="rgb(224,102,30)" fg:x="279596" fg:w="56"/><text x="95.7183%" y="239.50"></text></g><g><title>do_user_addr_fault (60 samples, 0.02%)</title><rect x="95.4679%" y="245" width="0.0205%" height="15" fill="rgb(210,164,37)" fg:x="279595" fg:w="60"/><text x="95.7179%" y="255.50"></text></g><g><title>asm_exc_page_fault (62 samples, 0.02%)</title><rect x="95.4676%" y="277" width="0.0212%" height="15" fill="rgb(226,191,16)" fg:x="279594" fg:w="62"/><text x="95.7176%" y="287.50"></text></g><g><title>exc_page_fault (61 samples, 0.02%)</title><rect x="95.4679%" y="261" width="0.0208%" height="15" fill="rgb(214,40,45)" fg:x="279595" fg:w="61"/><text x="95.7179%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (123 samples, 0.04%)</title><rect x="95.4502%" y="309" width="0.0420%" height="15" fill="rgb(244,29,26)" fg:x="279543" fg:w="123"/><text x="95.7002%" y="319.50"></text></g><g><title>core::ptr::write (104 samples, 0.04%)</title><rect x="95.4567%" y="293" width="0.0355%" height="15" fill="rgb(216,16,5)" fg:x="279562" fg:w="104"/><text x="95.7067%" y="303.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (310 samples, 0.11%)</title><rect x="95.3931%" y="485" width="0.1058%" height="15" fill="rgb(249,76,35)" fg:x="279376" fg:w="310"/><text x="95.6431%" y="495.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (310 samples, 0.11%)</title><rect x="95.3931%" y="469" width="0.1058%" height="15" fill="rgb(207,11,44)" fg:x="279376" fg:w="310"/><text x="95.6431%" y="479.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (310 samples, 0.11%)</title><rect x="95.3931%" y="453" width="0.1058%" height="15" fill="rgb(228,190,49)" fg:x="279376" fg:w="310"/><text x="95.6431%" y="463.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (310 samples, 0.11%)</title><rect x="95.3931%" y="437" width="0.1058%" height="15" fill="rgb(214,173,12)" fg:x="279376" fg:w="310"/><text x="95.6431%" y="447.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (310 samples, 0.11%)</title><rect x="95.3931%" y="421" width="0.1058%" height="15" fill="rgb(218,26,35)" fg:x="279376" fg:w="310"/><text x="95.6431%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (310 samples, 0.11%)</title><rect x="95.3931%" y="405" width="0.1058%" height="15" fill="rgb(220,200,19)" fg:x="279376" fg:w="310"/><text x="95.6431%" y="415.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (310 samples, 0.11%)</title><rect x="95.3931%" y="389" width="0.1058%" height="15" fill="rgb(239,95,49)" fg:x="279376" fg:w="310"/><text x="95.6431%" y="399.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (310 samples, 0.11%)</title><rect x="95.3931%" y="373" width="0.1058%" height="15" fill="rgb(235,85,53)" fg:x="279376" fg:w="310"/><text x="95.6431%" y="383.50"></text></g><g><title>nom::combinator::map::{{closure}} (310 samples, 0.11%)</title><rect x="95.3931%" y="357" width="0.1058%" height="15" fill="rgb(233,133,31)" fg:x="279376" fg:w="310"/><text x="95.6431%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (310 samples, 0.11%)</title><rect x="95.3931%" y="341" width="0.1058%" height="15" fill="rgb(218,25,20)" fg:x="279376" fg:w="310"/><text x="95.6431%" y="351.50"></text></g><g><title>nom::multi::count::{{closure}} (310 samples, 0.11%)</title><rect x="95.3931%" y="325" width="0.1058%" height="15" fill="rgb(252,210,38)" fg:x="279376" fg:w="310"/><text x="95.6431%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (109 samples, 0.04%)</title><rect x="95.5362%" y="293" width="0.0372%" height="15" fill="rgb(242,134,21)" fg:x="279795" fg:w="109"/><text x="95.7862%" y="303.50"></text></g><g><title>core::ops::function::FnMut::call_mut (109 samples, 0.04%)</title><rect x="95.5362%" y="277" width="0.0372%" height="15" fill="rgb(213,28,48)" fg:x="279795" fg:w="109"/><text x="95.7862%" y="287.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (109 samples, 0.04%)</title><rect x="95.5362%" y="261" width="0.0372%" height="15" fill="rgb(250,196,2)" fg:x="279795" fg:w="109"/><text x="95.7862%" y="271.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (109 samples, 0.04%)</title><rect x="95.5362%" y="245" width="0.0372%" height="15" fill="rgb(227,5,17)" fg:x="279795" fg:w="109"/><text x="95.7862%" y="255.50"></text></g><g><title>nom::number::streaming::be_u64 (109 samples, 0.04%)</title><rect x="95.5362%" y="229" width="0.0372%" height="15" fill="rgb(221,226,24)" fg:x="279795" fg:w="109"/><text x="95.7862%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.03%)</title><rect x="95.5454%" y="213" width="0.0280%" height="15" fill="rgb(211,5,48)" fg:x="279822" fg:w="82"/><text x="95.7954%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (82 samples, 0.03%)</title><rect x="95.5454%" y="197" width="0.0280%" height="15" fill="rgb(219,150,6)" fg:x="279822" fg:w="82"/><text x="95.7954%" y="207.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (82 samples, 0.03%)</title><rect x="95.5454%" y="181" width="0.0280%" height="15" fill="rgb(251,46,16)" fg:x="279822" fg:w="82"/><text x="95.7954%" y="191.50"></text></g><g><title>handle_mm_fault (64 samples, 0.02%)</title><rect x="95.5915%" y="213" width="0.0219%" height="15" fill="rgb(220,204,40)" fg:x="279957" fg:w="64"/><text x="95.8415%" y="223.50"></text></g><g><title>__handle_mm_fault (57 samples, 0.02%)</title><rect x="95.5939%" y="197" width="0.0195%" height="15" fill="rgb(211,85,2)" fg:x="279964" fg:w="57"/><text x="95.8439%" y="207.50"></text></g><g><title>handle_pte_fault (55 samples, 0.02%)</title><rect x="95.5946%" y="181" width="0.0188%" height="15" fill="rgb(229,17,7)" fg:x="279966" fg:w="55"/><text x="95.8446%" y="191.50"></text></g><g><title>do_anonymous_page (55 samples, 0.02%)</title><rect x="95.5946%" y="165" width="0.0188%" height="15" fill="rgb(239,72,28)" fg:x="279966" fg:w="55"/><text x="95.8446%" y="175.50"></text></g><g><title>do_user_addr_fault (69 samples, 0.02%)</title><rect x="95.5912%" y="229" width="0.0236%" height="15" fill="rgb(230,47,54)" fg:x="279956" fg:w="69"/><text x="95.8412%" y="239.50"></text></g><g><title>asm_exc_page_fault (73 samples, 0.02%)</title><rect x="95.5905%" y="261" width="0.0249%" height="15" fill="rgb(214,50,8)" fg:x="279954" fg:w="73"/><text x="95.8405%" y="271.50"></text></g><g><title>exc_page_fault (72 samples, 0.02%)</title><rect x="95.5908%" y="245" width="0.0246%" height="15" fill="rgb(216,198,43)" fg:x="279955" fg:w="72"/><text x="95.8408%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (142 samples, 0.05%)</title><rect x="95.5734%" y="293" width="0.0485%" height="15" fill="rgb(234,20,35)" fg:x="279904" fg:w="142"/><text x="95.8234%" y="303.50"></text></g><g><title>core::ptr::write (122 samples, 0.04%)</title><rect x="95.5803%" y="277" width="0.0417%" height="15" fill="rgb(254,45,19)" fg:x="279924" fg:w="122"/><text x="95.8303%" y="287.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (358 samples, 0.12%)</title><rect x="95.5072%" y="469" width="0.1222%" height="15" fill="rgb(219,14,44)" fg:x="279710" fg:w="358"/><text x="95.7572%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (358 samples, 0.12%)</title><rect x="95.5072%" y="453" width="0.1222%" height="15" fill="rgb(217,220,26)" fg:x="279710" fg:w="358"/><text x="95.7572%" y="463.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (358 samples, 0.12%)</title><rect x="95.5072%" y="437" width="0.1222%" height="15" fill="rgb(213,158,28)" fg:x="279710" fg:w="358"/><text x="95.7572%" y="447.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (358 samples, 0.12%)</title><rect x="95.5072%" y="421" width="0.1222%" height="15" fill="rgb(252,51,52)" fg:x="279710" fg:w="358"/><text x="95.7572%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (358 samples, 0.12%)</title><rect x="95.5072%" y="405" width="0.1222%" height="15" fill="rgb(246,89,16)" fg:x="279710" fg:w="358"/><text x="95.7572%" y="415.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (358 samples, 0.12%)</title><rect x="95.5072%" y="389" width="0.1222%" height="15" fill="rgb(216,158,49)" fg:x="279710" fg:w="358"/><text x="95.7572%" y="399.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (358 samples, 0.12%)</title><rect x="95.5072%" y="373" width="0.1222%" height="15" fill="rgb(236,107,19)" fg:x="279710" fg:w="358"/><text x="95.7572%" y="383.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (358 samples, 0.12%)</title><rect x="95.5072%" y="357" width="0.1222%" height="15" fill="rgb(228,185,30)" fg:x="279710" fg:w="358"/><text x="95.7572%" y="367.50"></text></g><g><title>nom::combinator::map::{{closure}} (358 samples, 0.12%)</title><rect x="95.5072%" y="341" width="0.1222%" height="15" fill="rgb(246,134,8)" fg:x="279710" fg:w="358"/><text x="95.7572%" y="351.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (358 samples, 0.12%)</title><rect x="95.5072%" y="325" width="0.1222%" height="15" fill="rgb(214,143,50)" fg:x="279710" fg:w="358"/><text x="95.7572%" y="335.50"></text></g><g><title>nom::multi::count::{{closure}} (358 samples, 0.12%)</title><rect x="95.5072%" y="309" width="0.1222%" height="15" fill="rgb(228,75,8)" fg:x="279710" fg:w="358"/><text x="95.7572%" y="319.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::rotate_left (43 samples, 0.01%)</title><rect x="95.6294%" y="453" width="0.0147%" height="15" fill="rgb(207,175,4)" fg:x="280068" fg:w="43"/><text x="95.8794%" y="463.50"></text></g><g><title>core::slice::rotate::ptr_rotate (43 samples, 0.01%)</title><rect x="95.6294%" y="437" width="0.0147%" height="15" fill="rgb(205,108,24)" fg:x="280068" fg:w="43"/><text x="95.8794%" y="447.50"></text></g><g><title>core::intrinsics::copy (43 samples, 0.01%)</title><rect x="95.6294%" y="421" width="0.0147%" height="15" fill="rgb(244,120,49)" fg:x="280068" fg:w="43"/><text x="95.8794%" y="431.50"></text></g><g><title>__memcpy_avx_unaligned_erms (43 samples, 0.01%)</title><rect x="95.6294%" y="405" width="0.0147%" height="15" fill="rgb(223,47,38)" fg:x="280068" fg:w="43"/><text x="95.8794%" y="415.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (123 samples, 0.04%)</title><rect x="95.6755%" y="277" width="0.0420%" height="15" fill="rgb(229,179,11)" fg:x="280203" fg:w="123"/><text x="95.9255%" y="287.50"></text></g><g><title>core::ops::function::FnMut::call_mut (123 samples, 0.04%)</title><rect x="95.6755%" y="261" width="0.0420%" height="15" fill="rgb(231,122,1)" fg:x="280203" fg:w="123"/><text x="95.9255%" y="271.50"></text></g><g><title>hprof_slurp::record_parser::parse_id (123 samples, 0.04%)</title><rect x="95.6755%" y="245" width="0.0420%" height="15" fill="rgb(245,119,9)" fg:x="280203" fg:w="123"/><text x="95.9255%" y="255.50"></text></g><g><title>hprof_slurp::primitive_parsers::parse_u64 (123 samples, 0.04%)</title><rect x="95.6755%" y="229" width="0.0420%" height="15" fill="rgb(241,163,25)" fg:x="280203" fg:w="123"/><text x="95.9255%" y="239.50"></text></g><g><title>nom::number::streaming::be_u64 (123 samples, 0.04%)</title><rect x="95.6755%" y="213" width="0.0420%" height="15" fill="rgb(217,214,3)" fg:x="280203" fg:w="123"/><text x="95.9255%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.03%)</title><rect x="95.6909%" y="197" width="0.0266%" height="15" fill="rgb(240,86,28)" fg:x="280248" fg:w="78"/><text x="95.9409%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (78 samples, 0.03%)</title><rect x="95.6909%" y="181" width="0.0266%" height="15" fill="rgb(215,47,9)" fg:x="280248" fg:w="78"/><text x="95.9409%" y="191.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (78 samples, 0.03%)</title><rect x="95.6909%" y="165" width="0.0266%" height="15" fill="rgb(252,25,45)" fg:x="280248" fg:w="78"/><text x="95.9409%" y="175.50"></text></g><g><title>__alloc_pages (34 samples, 0.01%)</title><rect x="95.7414%" y="117" width="0.0116%" height="15" fill="rgb(251,164,9)" fg:x="280396" fg:w="34"/><text x="95.9914%" y="127.50"></text></g><g><title>get_page_from_freelist (32 samples, 0.01%)</title><rect x="95.7421%" y="101" width="0.0109%" height="15" fill="rgb(233,194,0)" fg:x="280398" fg:w="32"/><text x="95.9921%" y="111.50"></text></g><g><title>alloc_pages_vma (36 samples, 0.01%)</title><rect x="95.7411%" y="133" width="0.0123%" height="15" fill="rgb(249,111,24)" fg:x="280395" fg:w="36"/><text x="95.9911%" y="143.50"></text></g><g><title>handle_pte_fault (81 samples, 0.03%)</title><rect x="95.7380%" y="165" width="0.0277%" height="15" fill="rgb(250,223,3)" fg:x="280386" fg:w="81"/><text x="95.9880%" y="175.50"></text></g><g><title>do_anonymous_page (76 samples, 0.03%)</title><rect x="95.7397%" y="149" width="0.0260%" height="15" fill="rgb(236,178,37)" fg:x="280391" fg:w="76"/><text x="95.9897%" y="159.50"></text></g><g><title>__handle_mm_fault (83 samples, 0.03%)</title><rect x="95.7377%" y="181" width="0.0283%" height="15" fill="rgb(241,158,50)" fg:x="280385" fg:w="83"/><text x="95.9877%" y="191.50"></text></g><g><title>handle_mm_fault (86 samples, 0.03%)</title><rect x="95.7370%" y="197" width="0.0294%" height="15" fill="rgb(213,121,41)" fg:x="280383" fg:w="86"/><text x="95.9870%" y="207.50"></text></g><g><title>asm_exc_page_fault (94 samples, 0.03%)</title><rect x="95.7349%" y="245" width="0.0321%" height="15" fill="rgb(240,92,3)" fg:x="280377" fg:w="94"/><text x="95.9849%" y="255.50"></text></g><g><title>exc_page_fault (93 samples, 0.03%)</title><rect x="95.7353%" y="229" width="0.0318%" height="15" fill="rgb(205,123,3)" fg:x="280378" fg:w="93"/><text x="95.9853%" y="239.50"></text></g><g><title>do_user_addr_fault (92 samples, 0.03%)</title><rect x="95.7356%" y="213" width="0.0314%" height="15" fill="rgb(205,97,47)" fg:x="280379" fg:w="92"/><text x="95.9856%" y="223.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (371 samples, 0.13%)</title><rect x="95.6441%" y="421" width="0.1267%" height="15" fill="rgb(247,152,14)" fg:x="280111" fg:w="371"/><text x="95.8941%" y="431.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_hprof_record::{{closure}} (371 samples, 0.13%)</title><rect x="95.6441%" y="405" width="0.1267%" height="15" fill="rgb(248,195,53)" fg:x="280111" fg:w="371"/><text x="95.8941%" y="415.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_record (371 samples, 0.13%)</title><rect x="95.6441%" y="389" width="0.1267%" height="15" fill="rgb(226,201,16)" fg:x="280111" fg:w="371"/><text x="95.8941%" y="399.50"></text></g><g><title>hprof_slurp::record_parser::parse_gc_object_array_dump (368 samples, 0.13%)</title><rect x="95.6451%" y="373" width="0.1257%" height="15" fill="rgb(205,98,0)" fg:x="280114" fg:w="368"/><text x="95.8951%" y="383.50"></text></g><g><title>nom::combinator::flat_map::{{closure}} (368 samples, 0.13%)</title><rect x="95.6451%" y="357" width="0.1257%" height="15" fill="rgb(214,191,48)" fg:x="280114" fg:w="368"/><text x="95.8951%" y="367.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (368 samples, 0.13%)</title><rect x="95.6451%" y="341" width="0.1257%" height="15" fill="rgb(237,112,39)" fg:x="280114" fg:w="368"/><text x="95.8951%" y="351.50"></text></g><g><title>nom::combinator::map::{{closure}} (368 samples, 0.13%)</title><rect x="95.6451%" y="325" width="0.1257%" height="15" fill="rgb(247,203,27)" fg:x="280114" fg:w="368"/><text x="95.8951%" y="335.50"></text></g><g><title>&lt;F as nom::internal::Parser&lt;I,O,E&gt;&gt;::parse (368 samples, 0.13%)</title><rect x="95.6451%" y="309" width="0.1257%" height="15" fill="rgb(235,124,28)" fg:x="280114" fg:w="368"/><text x="95.8951%" y="319.50"></text></g><g><title>nom::multi::count::{{closure}} (368 samples, 0.13%)</title><rect x="95.6451%" y="293" width="0.1257%" height="15" fill="rgb(208,207,46)" fg:x="280114" fg:w="368"/><text x="95.8951%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (156 samples, 0.05%)</title><rect x="95.7175%" y="277" width="0.0533%" height="15" fill="rgb(234,176,4)" fg:x="280326" fg:w="156"/><text x="95.9675%" y="287.50"></text></g><g><title>core::ptr::write (141 samples, 0.05%)</title><rect x="95.7226%" y="261" width="0.0481%" height="15" fill="rgb(230,133,28)" fg:x="280341" fg:w="141"/><text x="95.9726%" y="271.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (145,804 samples, 49.78%)</title><rect x="45.9917%" y="581" width="49.7849%" height="15" fill="rgb(211,137,40)" fg:x="134695" fg:w="145804"/><text x="46.2417%" y="591.50">hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next</text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (2,046 samples, 0.70%)</title><rect x="95.0780%" y="565" width="0.6986%" height="15" fill="rgb(254,35,13)" fg:x="278453" fg:w="2046"/><text x="95.3280%" y="575.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,899 samples, 0.65%)</title><rect x="95.1282%" y="549" width="0.6484%" height="15" fill="rgb(225,49,51)" fg:x="278600" fg:w="1899"/><text x="95.3782%" y="559.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,694 samples, 0.58%)</title><rect x="95.1982%" y="533" width="0.5784%" height="15" fill="rgb(251,10,15)" fg:x="278805" fg:w="1694"/><text x="95.4482%" y="543.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,441 samples, 0.49%)</title><rect x="95.2846%" y="517" width="0.4920%" height="15" fill="rgb(228,207,15)" fg:x="279058" fg:w="1441"/><text x="95.5346%" y="527.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (1,148 samples, 0.39%)</title><rect x="95.3846%" y="501" width="0.3920%" height="15" fill="rgb(241,99,19)" fg:x="279351" fg:w="1148"/><text x="95.6346%" y="511.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (813 samples, 0.28%)</title><rect x="95.4990%" y="485" width="0.2776%" height="15" fill="rgb(207,104,49)" fg:x="279686" fg:w="813"/><text x="95.7490%" y="495.50"></text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (431 samples, 0.15%)</title><rect x="95.6294%" y="469" width="0.1472%" height="15" fill="rgb(234,99,18)" fg:x="280068" fg:w="431"/><text x="95.8794%" y="479.50"></text></g><g><title>hprof_slurp::record_parser::HprofRecordParser::parse_streaming (388 samples, 0.13%)</title><rect x="95.6441%" y="453" width="0.1325%" height="15" fill="rgb(213,191,49)" fg:x="280111" fg:w="388"/><text x="95.8941%" y="463.50"></text></g><g><title>hprof_slurp::record_parser::lazy_many1::{{closure}} (388 samples, 0.13%)</title><rect x="95.6441%" y="437" width="0.1325%" height="15" fill="rgb(210,226,19)" fg:x="280111" fg:w="388"/><text x="95.8941%" y="447.50"></text></g><g><title>&lt;hprof_slurp::record_parser_iter::HprofRecordParserIter as core::iter::traits::iterator::Iterator&gt;::next (157,932 samples, 53.93%)</title><rect x="41.8516%" y="613" width="53.9260%" height="15" fill="rgb(229,97,18)" fg:x="122570" fg:w="157932"/><text x="42.1016%" y="623.50">&lt;hprof_slurp::record_parser_iter::HprofRecordParserIter as core::iter::traits::iterator::..</text></g><g><title>hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next (157,932 samples, 53.93%)</title><rect x="41.8516%" y="597" width="53.9260%" height="15" fill="rgb(211,167,15)" fg:x="122570" fg:w="157932"/><text x="42.1016%" y="607.50">hprof_slurp::record_parser_iter::HprofRecordParserIter::pull_next</text></g><g><title>indicatif::progress_bar::ProgressBar::set_position (43 samples, 0.01%)</title><rect x="95.7776%" y="581" width="0.0147%" height="15" fill="rgb(210,169,34)" fg:x="280502" fg:w="43"/><text x="96.0276%" y="591.50"></text></g><g><title>indicatif::progress_bar::ProgressBar::update_and_draw (43 samples, 0.01%)</title><rect x="95.7776%" y="565" width="0.0147%" height="15" fill="rgb(241,121,31)" fg:x="280502" fg:w="43"/><text x="96.0276%" y="575.50"></text></g><g><title>indicatif::state::ProgressState::update_and_draw (43 samples, 0.01%)</title><rect x="95.7776%" y="549" width="0.0147%" height="15" fill="rgb(232,40,11)" fg:x="280502" fg:w="43"/><text x="96.0276%" y="559.50"></text></g><g><title>indicatif::state::ProgressState::draw (43 samples, 0.01%)</title><rect x="95.7776%" y="533" width="0.0147%" height="15" fill="rgb(205,86,26)" fg:x="280502" fg:w="43"/><text x="96.0276%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (47 samples, 0.02%)</title><rect x="95.7776%" y="613" width="0.0160%" height="15" fill="rgb(231,126,28)" fg:x="280502" fg:w="47"/><text x="96.0276%" y="623.50"></text></g><g><title>hprof_slurp::slurp::slurp_file::{{closure}} (47 samples, 0.02%)</title><rect x="95.7776%" y="597" width="0.0160%" height="15" fill="rgb(219,221,18)" fg:x="280502" fg:w="47"/><text x="96.0276%" y="607.50"></text></g><g><title>__libc_start_main_alias_2 (158,009 samples, 53.95%)</title><rect x="41.8516%" y="917" width="53.9523%" height="15" fill="rgb(211,40,0)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="927.50">__libc_start_main_alias_2</text></g><g><title>__libc_start_call_main (158,009 samples, 53.95%)</title><rect x="41.8516%" y="901" width="53.9523%" height="15" fill="rgb(239,85,43)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="911.50">__libc_start_call_main</text></g><g><title>main (158,009 samples, 53.95%)</title><rect x="41.8516%" y="885" width="53.9523%" height="15" fill="rgb(231,55,21)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="895.50">main</text></g><g><title>std::rt::lang_start_internal (158,009 samples, 53.95%)</title><rect x="41.8516%" y="869" width="53.9523%" height="15" fill="rgb(225,184,43)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="879.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (158,009 samples, 53.95%)</title><rect x="41.8516%" y="853" width="53.9523%" height="15" fill="rgb(251,158,41)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="863.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (158,009 samples, 53.95%)</title><rect x="41.8516%" y="837" width="53.9523%" height="15" fill="rgb(234,159,37)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="847.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (158,009 samples, 53.95%)</title><rect x="41.8516%" y="821" width="53.9523%" height="15" fill="rgb(216,204,22)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="831.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (158,009 samples, 53.95%)</title><rect x="41.8516%" y="805" width="53.9523%" height="15" fill="rgb(214,17,3)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="815.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (158,009 samples, 53.95%)</title><rect x="41.8516%" y="789" width="53.9523%" height="15" fill="rgb(212,111,17)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="799.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (158,009 samples, 53.95%)</title><rect x="41.8516%" y="773" width="53.9523%" height="15" fill="rgb(221,157,24)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="783.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (158,009 samples, 53.95%)</title><rect x="41.8516%" y="757" width="53.9523%" height="15" fill="rgb(252,16,13)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="767.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (158,009 samples, 53.95%)</title><rect x="41.8516%" y="741" width="53.9523%" height="15" fill="rgb(221,62,2)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="751.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (158,009 samples, 53.95%)</title><rect x="41.8516%" y="725" width="53.9523%" height="15" fill="rgb(247,87,22)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="735.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (158,009 samples, 53.95%)</title><rect x="41.8516%" y="709" width="53.9523%" height="15" fill="rgb(215,73,9)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="719.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (158,009 samples, 53.95%)</title><rect x="41.8516%" y="693" width="53.9523%" height="15" fill="rgb(207,175,33)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="703.50">core::ops::function::FnOnce::call_once</text></g><g><title>hprof_slurp::main (158,009 samples, 53.95%)</title><rect x="41.8516%" y="677" width="53.9523%" height="15" fill="rgb(243,129,54)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="687.50">hprof_slurp::main</text></g><g><title>hprof_slurp::slurp::slurp_file (158,009 samples, 53.95%)</title><rect x="41.8516%" y="661" width="53.9523%" height="15" fill="rgb(227,119,45)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="671.50">hprof_slurp::slurp::slurp_file</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (158,009 samples, 53.95%)</title><rect x="41.8516%" y="645" width="53.9523%" height="15" fill="rgb(205,109,36)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="655.50">core::iter::traits::iterator::Iterator::for_each</text></g><g><title>core::iter::traits::iterator::Iterator::fold (158,009 samples, 53.95%)</title><rect x="41.8516%" y="629" width="53.9523%" height="15" fill="rgb(205,6,39)" fg:x="122570" fg:w="158009"/><text x="42.1016%" y="639.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::ptr::drop_in_place&lt;hprof_slurp::record_parser_iter::HprofRecordParserIter&gt; (30 samples, 0.01%)</title><rect x="95.7937%" y="613" width="0.0102%" height="15" fill="rgb(221,32,16)" fg:x="280549" fg:w="30"/><text x="96.0437%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (30 samples, 0.01%)</title><rect x="95.7937%" y="597" width="0.0102%" height="15" fill="rgb(228,144,50)" fg:x="280549" fg:w="30"/><text x="96.0437%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (30 samples, 0.01%)</title><rect x="95.7937%" y="581" width="0.0102%" height="15" fill="rgb(229,201,53)" fg:x="280549" fg:w="30"/><text x="96.0437%" y="591.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (30 samples, 0.01%)</title><rect x="95.7937%" y="565" width="0.0102%" height="15" fill="rgb(249,153,27)" fg:x="280549" fg:w="30"/><text x="96.0437%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (30 samples, 0.01%)</title><rect x="95.7937%" y="549" width="0.0102%" height="15" fill="rgb(227,106,25)" fg:x="280549" fg:w="30"/><text x="96.0437%" y="559.50"></text></g><g><title>alloc::alloc::dealloc (30 samples, 0.01%)</title><rect x="95.7937%" y="533" width="0.0102%" height="15" fill="rgb(230,65,29)" fg:x="280549" fg:w="30"/><text x="96.0437%" y="543.50"></text></g><g><title>__free (30 samples, 0.01%)</title><rect x="95.7937%" y="517" width="0.0102%" height="15" fill="rgb(221,57,46)" fg:x="280549" fg:w="30"/><text x="96.0437%" y="527.50"></text></g><g><title>__GI___munmap (30 samples, 0.01%)</title><rect x="95.7937%" y="501" width="0.0102%" height="15" fill="rgb(229,161,17)" fg:x="280549" fg:w="30"/><text x="96.0437%" y="511.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (30 samples, 0.01%)</title><rect x="95.7937%" y="485" width="0.0102%" height="15" fill="rgb(222,213,11)" fg:x="280549" fg:w="30"/><text x="96.0437%" y="495.50"></text></g><g><title>do_syscall_64 (30 samples, 0.01%)</title><rect x="95.7937%" y="469" width="0.0102%" height="15" fill="rgb(235,35,13)" fg:x="280549" fg:w="30"/><text x="96.0437%" y="479.50"></text></g><g><title>__x64_sys_munmap (30 samples, 0.01%)</title><rect x="95.7937%" y="453" width="0.0102%" height="15" fill="rgb(233,158,34)" fg:x="280549" fg:w="30"/><text x="96.0437%" y="463.50"></text></g><g><title>__vm_munmap (30 samples, 0.01%)</title><rect x="95.7937%" y="437" width="0.0102%" height="15" fill="rgb(215,151,48)" fg:x="280549" fg:w="30"/><text x="96.0437%" y="447.50"></text></g><g><title>__do_munmap (30 samples, 0.01%)</title><rect x="95.7937%" y="421" width="0.0102%" height="15" fill="rgb(229,84,14)" fg:x="280549" fg:w="30"/><text x="96.0437%" y="431.50"></text></g><g><title>unmap_region (30 samples, 0.01%)</title><rect x="95.7937%" y="405" width="0.0102%" height="15" fill="rgb(229,68,14)" fg:x="280549" fg:w="30"/><text x="96.0437%" y="415.50"></text></g><g><title>_start (158,010 samples, 53.95%)</title><rect x="41.8516%" y="933" width="53.9526%" height="15" fill="rgb(243,106,26)" fg:x="122570" fg:w="158010"/><text x="42.1016%" y="943.50">_start</text></g><g><title>asm_exc_page_fault (12,012 samples, 4.10%)</title><rect x="95.8043%" y="933" width="4.1015%" height="15" fill="rgb(206,45,38)" fg:x="280580" fg:w="12012"/><text x="96.0543%" y="943.50">asm_..</text></g><g><title>handle_pte_fault (33 samples, 0.01%)</title><rect x="99.9399%" y="693" width="0.0113%" height="15" fill="rgb(226,6,15)" fg:x="292692" fg:w="33"/><text x="100.1899%" y="703.50"></text></g><g><title>do_anonymous_page (33 samples, 0.01%)</title><rect x="99.9399%" y="677" width="0.0113%" height="15" fill="rgb(232,22,54)" fg:x="292692" fg:w="33"/><text x="100.1899%" y="687.50"></text></g><g><title>__handle_mm_fault (37 samples, 0.01%)</title><rect x="99.9389%" y="709" width="0.0126%" height="15" fill="rgb(229,222,32)" fg:x="292689" fg:w="37"/><text x="100.1889%" y="719.50"></text></g><g><title>handle_mm_fault (38 samples, 0.01%)</title><rect x="99.9389%" y="725" width="0.0130%" height="15" fill="rgb(228,62,29)" fg:x="292689" fg:w="38"/><text x="100.1889%" y="735.50"></text></g><g><title>copy_user_enhanced_fast_string (65 samples, 0.02%)</title><rect x="99.9300%" y="789" width="0.0222%" height="15" fill="rgb(251,103,34)" fg:x="292663" fg:w="65"/><text x="100.1800%" y="799.50"></text></g><g><title>asm_exc_page_fault (46 samples, 0.02%)</title><rect x="99.9365%" y="773" width="0.0157%" height="15" fill="rgb(233,12,30)" fg:x="292682" fg:w="46"/><text x="100.1865%" y="783.50"></text></g><g><title>exc_page_fault (46 samples, 0.02%)</title><rect x="99.9365%" y="757" width="0.0157%" height="15" fill="rgb(238,52,0)" fg:x="292682" fg:w="46"/><text x="100.1865%" y="767.50"></text></g><g><title>do_user_addr_fault (46 samples, 0.02%)</title><rect x="99.9365%" y="741" width="0.0157%" height="15" fill="rgb(223,98,5)" fg:x="292682" fg:w="46"/><text x="100.1865%" y="751.50"></text></g><g><title>filemap_get_pages (30 samples, 0.01%)</title><rect x="99.9522%" y="789" width="0.0102%" height="15" fill="rgb(228,75,37)" fg:x="292728" fg:w="30"/><text x="100.2022%" y="799.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (128 samples, 0.04%)</title><rect x="99.9191%" y="933" width="0.0437%" height="15" fill="rgb(205,115,49)" fg:x="292631" fg:w="128"/><text x="100.1691%" y="943.50"></text></g><g><title>do_syscall_64 (127 samples, 0.04%)</title><rect x="99.9194%" y="917" width="0.0434%" height="15" fill="rgb(250,154,43)" fg:x="292632" fg:w="127"/><text x="100.1694%" y="927.50"></text></g><g><title>__x64_sys_read (121 samples, 0.04%)</title><rect x="99.9215%" y="901" width="0.0413%" height="15" fill="rgb(226,43,29)" fg:x="292638" fg:w="121"/><text x="100.1715%" y="911.50"></text></g><g><title>ksys_read (121 samples, 0.04%)</title><rect x="99.9215%" y="885" width="0.0413%" height="15" fill="rgb(249,228,39)" fg:x="292638" fg:w="121"/><text x="100.1715%" y="895.50"></text></g><g><title>vfs_read (121 samples, 0.04%)</title><rect x="99.9215%" y="869" width="0.0413%" height="15" fill="rgb(216,79,43)" fg:x="292638" fg:w="121"/><text x="100.1715%" y="879.50"></text></g><g><title>new_sync_read (121 samples, 0.04%)</title><rect x="99.9215%" y="853" width="0.0413%" height="15" fill="rgb(228,95,12)" fg:x="292638" fg:w="121"/><text x="100.1715%" y="863.50"></text></g><g><title>ext4_file_read_iter (121 samples, 0.04%)</title><rect x="99.9215%" y="837" width="0.0413%" height="15" fill="rgb(249,221,15)" fg:x="292638" fg:w="121"/><text x="100.1715%" y="847.50"></text></g><g><title>generic_file_read_iter (121 samples, 0.04%)</title><rect x="99.9215%" y="821" width="0.0413%" height="15" fill="rgb(233,34,13)" fg:x="292638" fg:w="121"/><text x="100.1715%" y="831.50"></text></g><g><title>filemap_read (121 samples, 0.04%)</title><rect x="99.9215%" y="805" width="0.0413%" height="15" fill="rgb(214,103,39)" fg:x="292638" fg:w="121"/><text x="100.1715%" y="815.50"></text></g><g><title>&lt;(FnA,FnB,FnC,FnD) as nom::sequence::Tuple&lt;Input,(A,B,C,D),Error&gt;&gt;::parse (71 samples, 0.02%)</title><rect x="99.9641%" y="917" width="0.0242%" height="15" fill="rgb(251,126,39)" fg:x="292763" fg:w="71"/><text x="100.2141%" y="927.50"></text></g><g><title>main_arena (99 samples, 0.03%)</title><rect x="99.9641%" y="933" width="0.0338%" height="15" fill="rgb(214,216,36)" fg:x="292763" fg:w="99"/><text x="100.2141%" y="943.50"></text></g><g><title>hprof-slurp (292,863 samples, 100.00%)</title><rect x="0.0000%" y="949" width="99.9983%" height="15" fill="rgb(220,221,8)" fg:x="0" fg:w="292863"/><text x="0.2500%" y="959.50">hprof-slurp</text></g><g><title>all (292,868 samples, 100%)</title><rect x="0.0000%" y="965" width="100.0000%" height="15" fill="rgb(240,216,3)" fg:x="0" fg:w="292868"/><text x="0.2500%" y="975.50"></text></g></svg></svg>